; ModuleID = '/work/data/df/437555061ca94fb009cdf0e96b3368f00de95f1e/execution/ctrl/output/latest/testscases_workdir/shadow_se/df.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm ".section .gnu.warning.__fpending"
module asm "\09.previous"

%0 = type { i64 }
%1 = type { %2 }
%2 = type { void (i8*)*, i8*, i8* }
%3 = type { [4 x i32] }
%4 = type { i16, [2 x i8], i32, i8*, i8*, i8*, i8*, i8*, i8*, %4*, [2 x i32], %struct.__mbstate_t }
%5 = type { void (i32)* }
%6 = type { %7, [20 x i32] }
%7 = type { i32, i32, i32, i64, i64 }
%8 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [3 x i64] }
%9 = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, [5 x i64] }
%10 = type { void (i32, i8*)*, i8* }
%struct..0infomap = type { i8*, i8* }
%struct.Elf64_auxv_t = type { i64, %0 }
%struct.FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.Hash_table = type { %struct.fs_type_list*, %struct.fs_type_list*, i64, i64, i64, %struct.Hash_tuning*, i64 (i8*, i64)*, i8 (i8*, i8*)*, void (i8*)*, %struct.fs_type_list* }
%struct.Hash_tuning = type { float, float, float, float, i8 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct.FILE*, i32 }
%struct.__fsid_t = type { [2 x i32] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__kernel_termios = type { i32, i32, i32, i32, i8, [19 x i8] }
%struct.__mbstate_t = type { i32, i32 }
%struct.__sigset_t = type { [16 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cap_struct = type opaque
%struct._getopt_data = type { i32, i32, i32, i8*, i32, i8*, i32, i32, i32, i32 }
%struct.anon = type { i32, i32 }
%struct.cd_buf = type { i32 }
%struct.devlist = type { i64, %struct.mount_entry*, %struct.devlist* }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dirent64 = type { i64, i64, i16, i8, [256 x i8] }
%struct.exe_disk_file_t = type { i32, i8*, i8*, %struct.stat*, %struct.exe_sockaddr_t* }
%struct.exe_file_system_t = type { i32, i32, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32*, i32*, i32*, 
%struct.exe_file_t = type { i32, i32, i64, %struct.exe_disk_file_t*, %struct.exe_sockaddr_t, %struct.exe_sockaddr_t*, i32 }
%struct.exe_sockaddr_t = type { %struct.sockaddr_storage*, i32 }
%struct.exe_sym_env_t = type { [32 x %struct.exe_file_t], i32, i32, i32 }
%struct.exit_function = type { i64, %1 }
%struct.exit_status = type { i16, i16 }
%struct.fd_set = type { [16 x i64] }
%struct.field_data_t = type { i32, i8*, i32, i8*, i64, i32, i8 }
%struct.field_values_t = type { i64, i64, i64, i64, i8, i64, i64, i8 }
%struct.fill_info_t = type { i32, i32, i32, %union.sigval_t }
%struct.fs_type_list = type { i8*, %struct.fs_type_list* }
%struct.fs_usage = type { i64, i64, i64, i64, i8, i64, i64 }
%struct.hash_entry = type { i8*, %struct.fs_type_list* }
%struct.in6_addr = type { %3 }
%struct.in_addr = type { i32 }
%struct.iovec = type { i8*, i64 }
%struct.kernel_sigaction = type { void (i32)*, i64, void ()*, %struct.__sigset_t }
%struct.lconv = type { i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%struct.mbstate_t = type { i32, %struct.cd_buf }
%struct.mntent = type { i8*, i8*, i8*, i8*, i32, i32 }
%struct.mount_entry = type { i8*, i8*, i8*, i8*, i64, i64, %struct.mount_entry* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.ppfs_t = type { i8*, %struct.printf_info, i32, i32, i32, [4 x i8], [9 x i32], [1 x %struct.__va_list_tag], [9 x %union.argvalue_t] }
%struct.printf_info = type { i32, i32, i32, i32, i32 }
%struct.psfs_t = type { [9 x i8*], i32, i32, i8*, i8*, i32, i32, i32, i32, i8, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.saved_cwd = type { i32, i8* }
%struct.scan_cookie = type { i32, i32, %4*, i32, i32, i32, i8, i8, i8, i8, %struct.__mbstate_t, i32, i32, i32 (%struct.scan_cookie*)*, i8*, i32, i32, i8* }
%struct.sigaction = type { %5, %struct.__sigset_t, i32, void ()* }
%struct.siginfo_t = type { i32, i32, i32, %6 }
%struct.sigset_t = type { [16 x i64] }
%struct.slotvec = type { i64, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.cd_buf, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.sockaddr_storage = type { i16, i64, [112 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct.statvfs = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [6 x i32] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.timespec = type { i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.utmp = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.exit_status, i64, %struct.timespec, [4 x i32], [20 x i8] }
%struct.utsname = type { [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8], [65 x i8] }
%union.anon = type { i32 }
%union.argvalue_t = type { x86_fp80 }
%union.sigval_t = type { i8* }

@.str = private unnamed_addr constant [36 x i8] c"KLEE_CHANGE_RUNTIME_SET_OLD_VERSION\00", align 8
@version_str.6916 = internal unnamed_addr global i8* null
@header_mode = internal unnamed_addr global i32 0
@field_data = internal unnamed_addr global [12 x %struct.field_data_t] [%struct.field_data_t { i32 0, i8* getelementptr inbounds ([7 x i8]* @.str1, i64 0, i64 0), i32 2, i8* getelementptr inbounds ([11 x i8]* @.str2, i64 0, i64 0), i64 14, i32 0, i8 0 },
@.str1 = private unnamed_addr constant [7 x i8] c"source\00", align 1
@.str2 = private unnamed_addr constant [11 x i8] c"Filesystem\00", align 1
@.str3 = private unnamed_addr constant [7 x i8] c"fstype\00", align 1
@.str4 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str5 = private unnamed_addr constant [5 x i8] c"size\00", align 1
@.str6 = private unnamed_addr constant [7 x i8] c"blocks\00", align 1
@.str7 = private unnamed_addr constant [5 x i8] c"used\00", align 1
@.str8 = private unnamed_addr constant [5 x i8] c"Used\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c"avail\00", align 1
@.str10 = private unnamed_addr constant [10 x i8] c"Available\00", align 1
@.str11 = private unnamed_addr constant [6 x i8] c"pcent\00", align 1
@.str12 = private unnamed_addr constant [5 x i8] c"Use%\00", align 1
@.str13 = private unnamed_addr constant [7 x i8] c"itotal\00", align 1
@.str14 = private unnamed_addr constant [7 x i8] c"Inodes\00", align 1
@.str15 = private unnamed_addr constant [6 x i8] c"iused\00", align 1
@.str16 = private unnamed_addr constant [6 x i8] c"IUsed\00", align 1
@.str17 = private unnamed_addr constant [7 x i8] c"iavail\00", align 1
@.str18 = private unnamed_addr constant [6 x i8] c"IFree\00", align 1
@.str19 = private unnamed_addr constant [7 x i8] c"ipcent\00", align 1
@.str20 = private unnamed_addr constant [6 x i8] c"IUse%\00", align 1
@.str21 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str22 = private unnamed_addr constant [11 x i8] c"Mounted on\00", align 1
@.str23 = private unnamed_addr constant [5 x i8] c"file\00", align 1
@.str24 = private unnamed_addr constant [5 x i8] c"File\00", align 1
@all_args_string = internal unnamed_addr global i8* getelementptr inbounds ([75 x i8]* @.str25, i64 0, i64 0)
@.str25 = private unnamed_addr constant [75 x i8] c"source,fstype,itotal,iused,iavail,ipcent,size,used,avail,pcent,file,target\00", align 8
@long_options = internal unnamed_addr constant [17 x %struct.option] [%struct.option { i8* getelementptr inbounds ([4 x i8]* @.str26, i64 0, i64 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([11 x i8]* @.str27, i64 0, i64 0
@.str26 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@.str27 = private unnamed_addr constant [11 x i8] c"block-size\00", align 1
@.str28 = private unnamed_addr constant [7 x i8] c"inodes\00", align 1
@.str29 = private unnamed_addr constant [15 x i8] c"human-readable\00", align 1
@.str30 = private unnamed_addr constant [3 x i8] c"si\00", align 1
@.str31 = private unnamed_addr constant [6 x i8] c"local\00", align 1
@.str32 = private unnamed_addr constant [7 x i8] c"output\00", align 1
@.str33 = private unnamed_addr constant [12 x i8] c"portability\00", align 1
@.str34 = private unnamed_addr constant [11 x i8] c"print-type\00", align 1
@.str35 = private unnamed_addr constant [5 x i8] c"sync\00", align 1
@.str36 = private unnamed_addr constant [8 x i8] c"no-sync\00", align 1
@.str37 = private unnamed_addr constant [6 x i8] c"total\00", align 1
@.str38 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str39 = private unnamed_addr constant [13 x i8] c"exclude-type\00", align 1
@.str40 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str41 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@nrows = internal unnamed_addr global i64 0
@table = internal unnamed_addr global i8*** null
@ncolumns = internal unnamed_addr global i64 0
@columns = internal unnamed_addr global %struct.field_data_t** null
@.str42 = private unnamed_addr constant [14 x i8] c"!\22field used\22\00", align 1
@.str43 = private unnamed_addr constant [9 x i8] c"src/df.c\00", align 1
@__PRETTY_FUNCTION__.7086 = internal unnamed_addr constant [12 x i8] c"alloc_field\00"
@.str44 = private unnamed_addr constant [34 x i8] c"option --output: field %s unknown\00", align 8
@.str45 = private unnamed_addr constant [46 x i8] c"option --output: field %s used more than once\00", align 8
@.str46 = private unnamed_addr constant [5 x i8] c"Size\00", align 1
@.str47 = private unnamed_addr constant [6 x i8] c"Avail\00", align 1
@.str48 = private unnamed_addr constant [17 x i8] c"!\22invalid field\22\00", align 1
@__PRETTY_FUNCTION__.7135 = internal unnamed_addr constant [18 x i8] c"decode_output_arg\00"
@print_type = internal unnamed_addr global i8 0
@.str49 = private unnamed_addr constant [9 x i8] c"Capacity\00", align 1
@.str50 = private unnamed_addr constant [23 x i8] c"!\22invalid header_mode\22\00", align 1
@__PRETTY_FUNCTION__.7171 = internal unnamed_addr constant [15 x i8] c"get_field_list\00"
@human_output_opts = internal unnamed_addr global i32 0
@output_block_size = internal unnamed_addr global i64 0
@.str51 = private unnamed_addr constant [6 x i8] c"%s-%s\00", align 1
@fs_select_list = internal unnamed_addr global %struct.fs_type_list* null
@fs_exclude_list = internal unnamed_addr global %struct.fs_type_list* null
@devlist_table = internal unnamed_addr global %struct.Hash_table* null
@mount_list = internal unnamed_addr global %struct.mount_entry* null
@show_local_fs = internal unnamed_addr global i8 0
@show_all_fs = internal unnamed_addr global i8 0
@show_listed_fs = internal unnamed_addr global i8 0
@print_grand_total = internal unnamed_addr global i8 0
@.str52 = private unnamed_addr constant [2 x i8] c"-\00", align 1
@.str53 = private unnamed_addr constant [24 x i8] c"-0123456789abcdefABCDEF\00", align 1
@grand_fsu = internal unnamed_addr global %struct.fs_usage zeroinitializer, align 32
@.str54 = private unnamed_addr constant [3 x i8] c"%s\00", align 1
@exit_status = internal unnamed_addr global i32 0
@file_systems_processed = internal unnamed_addr global i8 0
@.str55 = private unnamed_addr constant [18 x i8] c"!\22bad field_type\22\00", align 1
@__PRETTY_FUNCTION__.7707 = internal unnamed_addr constant [8 x i8] c"get_dev\00"
@.str56 = private unnamed_addr constant [7 x i8] c"%.0f%%\00", align 1
@.str57 = private unnamed_addr constant [19 x i8] c"!\22unhandled field\22\00", align 1
@.str58 = private unnamed_addr constant [14 x i8] c"!\22empty cell\22\00", align 1
@.str59 = private unnamed_addr constant [49 x i8] c"cannot access %s: over-mounted by another device\00", align 8
@.str60 = private unnamed_addr constant [5 x i8] c"lofs\00", align 1
@.str61 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 8
@.str62 = private unnamed_addr constant [33 x i8] c"Usage: %s [OPTION]... [FILE]...\0A\00", align 8
@.str63 = private unnamed_addr constant [100 x i8] c"Show information about the file system on which each FILE resides,\0Aor all file systems by default.\0A\00", align 8
@.str64 = private unnamed_addr constant [410 x i8] c"  -a, --all             include pseudo, duplicate, inaccessible file systems\0A  -B, --block-size=SIZE  scale sizes by SIZE before printing them; e.g.,\0A                           '-BM' prints sizes i
@.str65 = private unnamed_addr constant [255 x i8] c"  -i, --inodes          list inode information instead of block usage\0A  -k                    like --block-size=1K\0A  -l, --local           limit listing to local file systems\0A      --no-sync     
@.str66 = private unnamed_addr constant [266 x i8] c"      --output[=FIELD_LIST]  use the output format defined by FIELD_LIST,\0A                               or print all fields if FIELD_LIST is omitted.\0A  -P, --portability     use the POSIX output f
@.str67 = private unnamed_addr constant [129 x i8] c"      --total           elide all entries insignificant to available space,\0A                          and produce a grand total\0A\00", align 8
@.str68 = private unnamed_addr constant [224 x i8] c"  -t, --type=TYPE       limit listing to file systems of type TYPE\0A  -T, --print-type      print file system type\0A  -x, --exclude-type=TYPE   limit listing to file systems not of type TYPE\0A  -v  
@.str69 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 8
@.str70 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 8
@.str71 = private unnamed_addr constant [3 x i8] c"DF\00", align 1
@.str72 = private unnamed_addr constant [220 x i8] c"\0AFIELD_LIST is a comma-separated list of columns to be included.  Valid\0Afield names are: 'source', 'fstype', 'itotal', 'iused', 'iavail', 'ipcent',\0A'size', 'used', 'avail', 'pcent', 'file' and 't
@.str73 = private unnamed_addr constant [3 x i8] c"df\00", align 1
@.str74 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 8
@.str75 = private unnamed_addr constant [223 x i8] c"\0ADisplay values are in units of the first available SIZE from --block-size,\0Aand the %s_BLOCK_SIZE, BLOCK_SIZE and BLOCKSIZE environment variables.\0AOtherwise, units default to 1024 bytes (or 512 i
@.str76 = private unnamed_addr constant [212 x i8] c"\0AThe SIZE argument is an integer and optional unit (example: 10K is 10*1024).\0AUnits are K,M,G,T,P,E,Z,Y (powers of 1024) or KB,MB,... (powers of 1000).\0ABinary prefixes can be used, too: KiB=K, Mi
@infomap.6443 = internal unnamed_addr constant [7 x %struct..0infomap] [%struct..0infomap { i8* getelementptr inbounds ([2 x i8]* @.str77, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8]* @.str78, i64 0, i64 0) }, %struct..0infomap { i8* getelementp
@.str77 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str78 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str79 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str80 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str81 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str82 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str83 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str84 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str85 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str86 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str87 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str88 = private unnamed_addr constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 8
@.str89 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str90 = private unnamed_addr constant [70 x i8] c"Report %s translation bugs to <https://translationproject.org/team/>\0A\00", align 8
@.str91 = private unnamed_addr constant [31 x i8] c"Full documentation at: <%s%s>\0A\00", align 8
@.str92 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str93 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str94 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 8
@.str95 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str96 = private unnamed_addr constant [41 x i8] c"options %s and %s are mutually exclusive\00", align 8
@.str97 = private unnamed_addr constant [19 x i8] c"aB:iF:hHklmPTt:vx:\00", align 1
@.str98 = private unnamed_addr constant [3 x i8] c"-i\00", align 1
@.str99 = private unnamed_addr constant [9 x i8] c"--output\00", align 1
@.str100 = private unnamed_addr constant [3 x i8] c"-T\00", align 1
@.str101 = private unnamed_addr constant [3 x i8] c"-P\00", align 1
@require_sync = internal unnamed_addr global i8 0
@.str102 = private unnamed_addr constant [18 x i8] c"Torbjorn Granlund\00", align 1
@.str103 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str104 = private unnamed_addr constant [12 x i8] c"Paul Eggert\00", align 1
@.str105 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str106 = private unnamed_addr constant [14 x i8] c"DF_BLOCK_SIZE\00", align 1
@.str107 = private unnamed_addr constant [47 x i8] c"file system type %s both selected and excluded\00", align 8
@.str108 = private unnamed_addr constant [10 x i8] c"Warning: \00", align 1
@.str109 = private unnamed_addr constant [42 x i8] c"cannot read table of mounted file systems\00", align 8
@.str110 = private unnamed_addr constant [5 x i8] c"%s%s\00", align 1
@.str111 = private unnamed_addr constant [26 x i8] c"no file systems processed\00", align 1
@.str112 = private constant [29 x i8] c"cannot get current directory\00", align 1
@.str1113 = private constant [30 x i8] c"cannot change to directory %s\00", align 1
@.str2114 = private constant [2 x i8] c".\00", align 1
@.str3115 = private constant [39 x i8] c"cannot stat current directory (now %s)\00", align 8
@.str4116 = private constant [3 x i8] c"..\00", align 1
@.str5117 = private constant [15 x i8] c"cannot stat %s\00", align 1
@.str6118 = private constant [46 x i8] c"failed to return to initial working directory\00", align 8
@Version = unnamed_addr global i8* getelementptr inbounds ([19 x i8]* @.str121, i64 0, i64 0)
@.str121 = private constant [19 x i8] c"8.30.7-43755-dirty\00", align 1
@.str123 = private constant [2 x i8] c"/\00", align 1
@file_name = internal global i8* null
@ignore_EPIPE = internal global i8 0
@.str125 = private constant [12 x i8] c"write error\00", align 1
@.str1126 = private constant [7 x i8] c"%s: %s\00", align 1
@.str2127 = private constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1
@default_tuning = internal constant %struct.Hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 16
@.str135 = private constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str1136 = private constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str2137 = private constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 8
@.str3138 = private constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@power_letter = internal constant [9 x i8] c"\00KMGTPEZY"
@.str146 = private constant [2 x i8] c".\00", align 1
@.str1147 = private constant [1 x i8] zeroinitializer, align 1
@.str2148 = private constant [6 x i8] c"%.0Lf\00", align 1
@.str3149 = private constant [6 x i8] c"%.1Lf\00", align 1
@block_size_args = internal constant [3 x i8*] [i8* getelementptr inbounds ([15 x i8]* @.str4150, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8]* @.str5151, i64 0, i64 0), i8* null], align 16
@.str4150 = private constant [15 x i8] c"human-readable\00", align 1
@.str5151 = private constant [3 x i8] c"si\00", align 1
@block_size_opts = internal constant [2 x i32] [i32 176, i32 144]
@.str6152 = private constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str7153 = private constant [11 x i8] c"BLOCK_SIZE\00", align 1
@.str8154 = private constant [10 x i8] c"BLOCKSIZE\00", align 1
@.str9155 = private constant [18 x i8] c"eEgGkKmMpPtTyYzZ0\00", align 1
@program_name = unnamed_addr global i8* null
@.str162 = private constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 8
@.str1163 = private constant [8 x i8] c"/.libs/\00", align 1
@.str2164 = private constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*
@program_invocation_name = external global i8*
@quoting_style_args = constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str166, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str1167, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str2168, i64 0, i64 0), i8* getelementptr i
@.str166 = private constant [8 x i8] c"literal\00", align 1
@.str1167 = private constant [6 x i8] c"shell\00", align 1
@.str2168 = private constant [13 x i8] c"shell-always\00", align 1
@.str3169 = private constant [13 x i8] c"shell-escape\00", align 1
@.str4170 = private constant [20 x i8] c"shell-escape-always\00", align 1
@.str5171 = private constant [2 x i8] c"c\00", align 1
@.str6172 = private constant [8 x i8] c"c-maybe\00", align 1
@.str7173 = private constant [7 x i8] c"escape\00", align 1
@.str8174 = private constant [7 x i8] c"locale\00", align 1
@.str9175 = private constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 32
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 32
@.str10176 = private constant [6 x i8] c"UTF-8\00", align 1
@.str11177 = private constant [4 x i8] c"\E2\80\98\00", align 1
@.str12178 = private constant [4 x i8] c"\E2\80\99\00", align 1
@.str13179 = private constant [8 x i8] c"GB18030\00", align 1
@.str14180 = private constant [4 x i8] c"\A1\07e\00", align 1
@.str15181 = private constant [3 x i8] c"\A1\AF\00", align 1
@.str16182 = private constant [2 x i8] c"\22\00", align 1
@.str17183 = private constant [2 x i8] c"'\00", align 1
@.str18184 = private constant [2 x i8] c"`\00", align 1
@nslots = internal global i32 1
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0) }, align 16
@slot0 = internal global [256 x i8] zeroinitializer, align 32
@slotvec = internal global %struct.slotvec* @slotvec0
@quote_quoting_options = global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 32
@.str189 = private constant [3 x i8] c"%s\00", align 1
@.str191 = private constant [2 x i8] c".\00", align 1
@.str195 = private constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str1196 = private constant [7 x i8] c"%s %s\0A\00", align 1
@.str2197 = private constant [4 x i8] c"(C)\00", align 1
@.str3198 = private constant [204 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0
@.str4199 = private constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str5200 = private constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str6201 = private constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str7202 = private constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str8203 = private constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str9204 = private constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 8
@.str10205 = private constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 8
@.str11206 = private constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str12207 = private constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str13208 = private constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 8
@.str14209 = private constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str15210 = private constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str16211 = private constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str17212 = private constant [14 x i8] c"GNU coreutils\00", align 1
@.str18213 = private constant [40 x i8] c"https://www.gnu.org/software/coreutils/\00", align 8
@.str19214 = private constant [65 x i8] c"General help using GNU software: <https://www.gnu.org/gethelp/>\0A\00", align 8
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 32
@.str224 = private constant [17 x i8] c"memory exhausted\00", align 1
@.str1225 = private constant [3 x i8] c"%s\00", align 1
@.str228 = private constant [3 x i8] c"--\00", align 1
@.str1229 = private constant [27 x i8] c"invalid %s%s argument '%s'\00", align 1
@.str2230 = private constant [37 x i8] c"invalid suffix in %s%s argument '%s'\00", align 8
@.str3231 = private constant [29 x i8] c"%s%s argument '%s' too large\00", align 1
@.str233 = private constant [38 x i8] c"0 <= strtol_base && strtol_base <= 36\00", align 8
@.str1234 = private constant [14 x i8] c"lib/xstrtol.c\00", align 1
@__PRETTY_FUNCTION__.3299 = internal constant [11 x i8] c"xstrtoumax\00"
@.str236 = private constant [13 x i8] c"! close_fail\00", align 1
@.str1237 = private constant [17 x i8] c"lib/chdir-long.c\00", align 1
@__PRETTY_FUNCTION__.3963 = internal constant [9 x i8] c"cdb_free\00"
@.str2238 = private constant [2 x i8] c"/\00", align 1
@.str3239 = private constant [8 x i8] c"0 < len\00", align 1
@__PRETTY_FUNCTION__.3999 = internal constant [11 x i8] c"chdir_long\00"
@.str4240 = private constant [12 x i8] c"4096 <= len\00", align 1
@.str5241 = private constant [12 x i8] c"*dir != '/'\00", align 1
@.str6242 = private constant [15 x i8] c"dir <= dir_end\00", align 1
@.str7243 = private constant [19 x i8] c"slash - dir < 4096\00", align 1
@statvfs_works_cache.2096 = internal global i32 -1
@.str245 = private constant [7 x i8] c"2.6.36\00", align 1
@.str248 = private constant [21 x i8] c"/proc/self/mountinfo\00", align 1
@.str1249 = private constant [2 x i8] c"r\00", align 1
@.str2250 = private constant [32 x i8] c"%*u %*u %u:%u %n%*s%n %n%*s%n%c\00", align 8
@.str3251 = private constant [4 x i8] c" - \00", align 1
@.str4252 = private constant [22 x i8] c" - %n%*s%n %n%*s%n %c\00", align 1
@.str5253 = private constant [7 x i8] c"autofs\00", align 1
@.str6254 = private constant [5 x i8] c"proc\00", align 1
@.str7255 = private constant [6 x i8] c"subfs\00", align 1
@.str8256 = private constant [8 x i8] c"debugfs\00", align 1
@.str9257 = private constant [7 x i8] c"devpts\00", align 1
@.str10258 = private constant [8 x i8] c"fusectl\00", align 1
@.str11259 = private constant [7 x i8] c"mqueue\00", align 1
@.str12260 = private constant [11 x i8] c"rpc_pipefs\00", align 1
@.str13261 = private constant [6 x i8] c"sysfs\00", align 1
@.str14262 = private constant [6 x i8] c"devfs\00", align 1
@.str15263 = private constant [7 x i8] c"kernfs\00", align 1
@.str16264 = private constant [7 x i8] c"ignore\00", align 1
@.str17265 = private constant [5 x i8] c"none\00", align 1
@.str18266 = private constant [6 x i8] c"smbfs\00", align 1
@.str19267 = private constant [5 x i8] c"cifs\00", align 1
@.str20268 = private constant [7 x i8] c"-hosts\00", align 1
@.str21269 = private constant [10 x i8] c"/etc/mtab\00", align 1
@.str22270 = private constant [5 x i8] c"bind\00", align 1
@argmatch_die = global void ()* @__argmatch_die
@.str274 = private constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str1275 = private constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str2276 = private constant [21 x i8] c"Valid arguments are:\00", align 1
@.str3277 = private constant [8 x i8] c"\0A  - %s\00", align 1
@.str4278 = private constant [5 x i8] c", %s\00", align 1
@.str284 = private constant [2 x i8] c"C\00", align 1
@.str1285 = private constant [6 x i8] c"POSIX\00", align 1
@.str288 = private constant [1 x i8] zeroinitializer, align 1
@.str1289 = private constant [6 x i8] c"ASCII\00", align 1
@have_dupfd_cloexec.2634 = internal global i32 0
@__evoke_link_warning___fpending = internal constant [167 x i8] c"This version of __fpending returns bytes remaining in buffer for both narrow and wide streams.  glibc's version returns wide chars in buffer for the wide stream case.\00", section ".gnu.wa
@llvm.used = appending global [1 x i8*] [i8* getelementptr inbounds ([167 x i8]* @__evoke_link_warning___fpending, i64 0, i64 0)], section "llvm.metadata"
@__libc_stack_end = global i8* null
@__uclibc_progname = hidden global i8* getelementptr inbounds ([1 x i8]* @.str113, i64 0, i64 0)
@.str113 = private constant [1 x i8] zeroinitializer, align 1
@__environ = global i8** null
@__pagesize = global i64 0
@.str1114 = private constant [10 x i8] c"/dev/null\00", align 1
@been_there_done_that.2848 = internal global i32 0
@__app_fini = hidden global void ()* null
@__rtld_fini = hidden global void ()* null
@been_there_done_that = internal global i32 0
@__dso_handle = extern_weak global i8*
@.str122 = private constant [4 x i8] c" \09\0A\00", align 1
@.str1123 = private constant [1 x i8] zeroinitializer, align 1
@buff.2072 = internal global i8* null
@mnt.2073 = internal global %struct.mntent zeroinitializer
@.str2124 = private constant [19 x i8] c"%s %s %s %s %d %d\0A\00", align 1
@error_message_count = global i32 0
@.str129 = private constant [5 x i8] c": %s\00", align 1
@error_one_per_line = common global i32 0
@old_line_number.2047 = internal global i32 0
@old_file_name.2046 = internal global i8* null
@.str1130 = private constant [8 x i8] c"%s:%d: \00", align 1
@__exit_cleanup = hidden global void (i32)* null
@optind = unnamed_addr global i32 1
@opterr = global i32 1
@optopt = global i32 63
@.str149 = private constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str1150 = private constant [3 x i8] c"--\00", align 1
@.str2151 = private constant [30 x i8] c"%s: option `%s' is ambiguous\0A\00", align 1
@.str3152 = private constant [45 x i8] c"%s: option `--%s' doesn't allow an argument\0A\00", align 8
@.str4153 = private constant [45 x i8] c"%s: option `%c%s' doesn't allow an argument\0A\00", align 8
@.str5154 = private constant [38 x i8] c"%s: option `%s' requires an argument\0A\00", align 8
@.str6155 = private constant [32 x i8] c"%s: unrecognized option `--%s'\0A\00", align 8
@.str7156 = private constant [32 x i8] c"%s: unrecognized option `%c%s'\0A\00", align 8
@.str8157 = private constant [1 x i8] zeroinitializer, align 1
@.str9158 = private constant [26 x i8] c"%s: illegal option -- %c\0A\00", align 1
@.str10159 = private constant [26 x i8] c"%s: invalid option -- %c\0A\00", align 1
@.str11160 = private constant [39 x i8] c"%s: option requires an argument -- %c\0A\00", align 8
@getopt_data = internal global %struct._getopt_data zeroinitializer, align 32
@optarg = common unnamed_addr global i8* null
@static_fd = internal global i32 -1
@default_file_name = internal constant [14 x i8] c"/var/run/utmp\00"
@static_ut_name = internal global i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0)
@static_utmp = internal global %struct.utmp zeroinitializer, align 32
@decpt = internal constant [2 x i8] c".\00"
@the_lconv = internal global %struct.lconv zeroinitializer, align 32
@mbstate.2221 = internal global %struct.__mbstate_t zeroinitializer
@nl_data = internal constant [417 x i8] c"\00\0B\0E$VVZ\00\02\04\06\08\0A\0C\0E\10\12\14\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1E $(,048<CJR\5Celuy}\81\85\89\8D\91\95\99\9D\A1\A5\AD6<BFKPWair{~\81\96\9F\A8\B3\B3\B3\B3\B3
@C_string = internal constant [2 x i8] c"C\00"
@.str177 = private constant [6 x i8] c"POSIX\00", align 1
@.str181 = private constant [13 x i8] c"/proc/mounts\00", align 1
@.str1182 = private constant [2 x i8] c"r\00", align 1
@.str2183 = private constant [10 x i8] c"/etc/mtab\00", align 1
@.str3184 = private constant [3 x i8] c"ro\00", align 1
@.str4185 = private constant [7 x i8] c"nosuid\00", align 1
@.str5186 = private constant [7 x i8] c"noexec\00", align 1
@.str6187 = private constant [6 x i8] c"nodev\00", align 1
@.str7188 = private constant [5 x i8] c"sync\00", align 1
@.str8189 = private constant [5 x i8] c"mand\00", align 1
@.str9190 = private constant [8 x i8] c"noatime\00", align 1
@.str10191 = private constant [11 x i8] c"nodiratime\00", align 1
@.str11192 = private constant [2 x i8] c",\00", align 1
@_stdio_streams = internal global [3 x %4] [%4 { i16 544, [2 x i8] zeroinitializer, i32 0, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1), [2 x i32] zeroinitializer, %struc
@stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@stdout = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@stderr = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 2)
@__stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@__stdout = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@_stdio_openlist = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@errno = global i32 0
@h_errno = global i32 0
@desc2flag = internal constant [13 x i16] [i16 0, i16 2048, i16 4, i16 256, i16 512, i16 8, i16 128, i16 2, i16 64, i16 1024, i16 32, i16 1, i16 16], align 16
@mbstate.2222 = internal global %struct.__mbstate_t zeroinitializer
@mbstate.2221231 = internal global %struct.__mbstate_t zeroinitializer
@buf.1212 = internal global [50 x i8] zeroinitializer
@spec_base.3674 = internal constant [7 x i8] c"\10\10\10\08\0A\0A\0A"
@.str243 = private constant [6 x i8] c"(nil)\00", align 1
@.str1244 = private constant [7 x i8] c"(null)\00", align 1
@prefix.3675 = internal constant [12 x i8] c"+\00-\00 \000x\000X\00"
@__C_ctype_b_data = constant [384 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i1
@__C_ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@__ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@unknown.1225 = internal constant [14 x i8] c"Unknown error "
@__exit_count = hidden global i32 0
@__exit_function_table = hidden global %struct.exit_function* null
@__exit_slots = hidden global i32 0
@fmt = internal constant [20 x i8] c"inf\00INF\00nan\00NAN\00.\00,\00", align 16
@exp10_table = internal constant [13 x x86_fp80] [x86_fp80 0xK4002A000000000000000, x86_fp80 0xK4005C800000000000000, x86_fp80 0xK400C9C40000000000000, x86_fp80 0xK4019BEBC200000000000, x86_fp80 0xK40348E1BC9BF04000000, x86_fp80 0xK40699DC5ADA82B70B59E, 
@type_codes = internal constant [12 x i16] [i16 8, i16 5, i16 3, i16 4, i16 1, i16 512, i16 0, i16 1024, i16 2048, i16 2, i16 7, i16 2055], align 16
@type_sizes = internal constant [12 x i8] c"\00\01\01\01\04\02\01\01\01\01\01\01"
@spec_flags.3665 = internal constant [8 x i8] c" +0-#'I\00"
@qual_chars.3670 = internal constant [20 x i8] c"hlLjztqZ\00\02\04\08\04\04\04\08\04\00\01\08"
@spec_chars.3666 = internal constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@spec_ranges.3667 = internal constant [9 x i8] c"\00\01\07\0F\10\11\12\13\14"
@spec_or_mask.3668 = internal constant [8 x i16] [i16 4096, i16 5, i16 0, i16 7, i16 2, i16 4, i16 1, i16 3]
@spec_and_mask.3669 = internal constant [8 x i16] [i16 7936, i16 5, i16 3840, i16 2055, i16 2, i16 4, i16 1, i16 3]
@decpt_str = internal constant [2 x i8] c".\00"
@spec_base = internal constant [15 x i8] c"\10\10\10\08\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A"
@nil_string = internal constant [6 x i8] c"(nil)\00"
@nan_inf_str.3836 = internal constant [11 x i8] c"an\00nfinity\00"
@spec_flags = internal constant [4 x i8] c"*'I\00"
@spec_chars = internal constant [23 x i8] c"npxXoudifFeEgGaACSncs[\00", align 16
@qual_chars = internal constant [18 x i8] c"hlLjztq\00\02\04\08\04\04\04\08\00\01\08", align 16
@spec_ranges = internal constant [8 x i8] c"\00\01\07\0F\10\12\13\15"
@spec_allowed = internal constant [8 x i16] [i16 31, i16 16, i16 127, i16 124, i16 16, i16 144, i16 20, i16 148], align 16
@_string_syserrmsgs = hidden constant [2906 x i8] c"Success\00Operation not permitted\00No such file or directory\00No such process\00Interrupted system call\00Input/output error\00No such device or address\00Argument list too long\00Exec format error\00
@nan_inf_str.2180 = internal constant [21 x i8] c"\05nan\00\0Ainfinity\00\05inf\00\00"
@__C_ctype_tolower_data = constant [384 x i16] [i16 -128, i16 -127, i16 -126, i16 -125, i16 -124, i16 -123, i16 -122, i16 -121, i16 -120, i16 -119, i16 -118, i16 -117, i16 -116, i16 -115, i16 -114, i16 -113, i16 -112, i16 -111, i16 -110, i16 -109, i16 -1
@__C_ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@__ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@.str278 = private constant [18 x i8] c"ignoring (ENOENT)\00", align 1
@.str1279 = private constant [32 x i8] c"symbolic file, ignoring (EBADF)\00", align 8
@.str2280 = private constant [33 x i8] c"symbolic file, ignoring (EINVAL)\00", align 8
@.str3281 = private constant [54 x i8] c"futimens: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str4282 = private constant [32 x i8] c"symbolic file, ignoring (EPERM)\00", align 8
@.str5283 = private constant [33 x i8] c"symbolic file, ignoring (ENOENT)\00", align 8
@.str6284 = private constant [41 x i8] c"(TCGETS) symbolic file, incomplete model\00", align 8
@.str7285 = private constant [42 x i8] c"(TCSETS) symbolic file, silently ignoring\00", align 8
@.str8286 = private constant [43 x i8] c"(TCSETSW) symbolic file, silently ignoring\00", align 8
@.str9287 = private constant [43 x i8] c"(TCSETSF) symbolic file, silently ignoring\00", align 8
@.str10288 = private constant [45 x i8] c"(TIOCGWINSZ) symbolic file, incomplete model\00", align 8
@.str11289 = private constant [46 x i8] c"(TIOCSWINSZ) symbolic file, ignoring (EINVAL)\00", align 8
@.str12290 = private constant [43 x i8] c"(FIONREAD) symbolic file, incomplete model\00", align 8
@.str13291 = private constant [44 x i8] c"(MTIOCGET) symbolic file, ignoring (EINVAL)\00", align 8
@n_calls.5871 = internal global i32 0
@.str14292 = private constant [52 x i8] c"getdents called on symbolic file, ignoring (EINVAL)\00", align 8
@.str15293 = private constant [18 x i8] c"s != (off64_t) -1\00", align 1
@.str16294 = private constant [5 x i8] c"fd.c\00", align 1
@__PRETTY_FUNCTION__.6593 = internal constant [14 x i8] c"__fd_getdents\00"
@.str17295 = private constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.7291 = internal constant [18 x i8] c"__fd_gather_write\00", align 16
@.str18296 = private constant [23 x i8] c"write() ignores bytes.\00", align 1
@.str19297 = private constant [57 x i8] c"scatter read malfunctions when provided a symbolic iovec\00", align 8
@.str20298 = private constant [12 x i8] c"f->off >= 0\00", align 1
@__PRETTY_FUNCTION__.7229 = internal constant [18 x i8] c"__fd_scatter_read\00", align 16
@.str21299 = private constant [33 x i8] c"0 && \22unable to allocate memory\22\00", align 8
@.str22300 = private constant [11 x i8] c"readv data\00", align 1
@.str23301 = private constant [47 x i8] c"KLEE: MODEL: pipe: returning {%d,%d}->{%d,%d}\0A\00", align 8
@UseConcretePath = common global i8 0
@.str24302 = private constant [32 x i8] c"ZEST: opening symbolic file %s\0A\00", align 8
@.str25303 = private constant [6 x i8] c".test\00", align 1
@.str26304 = private constant [40 x i8] c"ZEST: opening symbolic file (.test) %s\0A\00", align 8
@.str27305 = private constant [32 x i8] c"ZEST: opening concrete file %s\0A\00", align 8
@.str28306 = private constant [40 x i8] c"utime: symbolic file, ignoring (ENOENT)\00", align 8
@.str29307 = private constant [41 x i8] c"utimes: symbolic file, ignoring (ENOENT)\00", align 8
@.str30308 = private constant [52 x i8] c"openat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str31309 = private constant [42 x i8] c"symlink: symbolic path, ignoring (ENOENT)\00", align 8
@.str32310 = private constant [39 x i8] c"link: symbolic path, ignoring (ENOENT)\00", align 8
@.str33311 = private constant [44 x i8] c"futimesat: symbolic path, ignoring (ENOENT)\00", align 8
@.str34312 = private constant [55 x i8] c"futimesat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str35313 = private constant [43 x i8] c"unlinkat: symbolic path, ignoring (ENOENT)\00", align 8
@.str36314 = private constant [54 x i8] c"unlinkat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str37315 = private constant [42 x i8] c"fstatat: symbolic path, ignoring (ENOENT)\00", align 8
@.str38316 = private constant [53 x i8] c"fstatat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@n_calls.7064 = internal global i32 0
@n_calls.6554 = internal global i32 0
@.str39317 = private constant [30 x i8] c"symbolic file, ignoring (EIO)\00", align 1
@.str40318 = private constant [18 x i8] c"new_off == f->off\00", align 1
@__PRETTY_FUNCTION__.6098 = internal constant [11 x i8] c"__fd_lseek\00"
@n_calls.5974 = internal global i32 0
@n_calls.5898 = internal global i32 0
@__PRETTY_FUNCTION__.5902 = internal constant [5 x i8] c"read\00"
@.str41319 = private constant [10 x i8] c"read data\00", align 1
@.str42320 = private constant [43 x i8] c"mmap_simple: unable to read requested size\00", align 8
@.str43321 = private constant [18 x i8] c"mmap_simple: read\00", align 1
@.str44322 = private constant [30 x i8] c"mmap64: unsupported mmap call\00", align 1
@n_calls.6299 = internal global i32 0
@n_calls.6276 = internal global i32 0
@n_calls.6018 = internal global i32 0
@.str45323 = private constant [5 x i8] c"cbuf\00", align 1
@__PRETTY_FUNCTION__.6022 = internal constant [6 x i8] c"write\00"
@.str46324 = private constant [7 x i8] c"r >= 0\00", align 1
@.str47325 = private constant [33 x i8] c"WARNING: write() ignores bytes.\0A\00", align 8
@.str48326 = private constant [47 x i8] c"Undefined call to open(): O_EXCL w/o O_RDONLY\0A\00", align 8
@.str49327 = private constant [15 x i8] c"/proc/self/fd/\00", align 1
@.str50328 = private constant [1 x i8] zeroinitializer, align 1
@.str51329 = private constant [19 x i8] c"/proc/self/fd/%d%s\00", align 1
@.str52330 = private constant [44 x i8] c"symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str342 = private constant [18 x i8] c"ignoring (ENOMEM)\00", align 1
@.str1343 = private constant [18 x i8] c"ignoring (EACCES)\00", align 1
@.str2344 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str3345 = private constant [10 x i8] c"illegal.c\00", align 1
@.str4346 = private constant [20 x i8] c"longjmp unsupported\00", align 1
@.str5347 = private constant [8 x i8] c"xxx.err\00", align 1
@.str6348 = private constant [9 x i8] c"ignoring\00", align 1
@.str350 = private constant [16 x i8] c"klee_init_env.c\00", align 1
@.str1351 = private constant [9 x i8] c"user.err\00", align 1
@.str2352 = private constant [24 x i8] c"invalid escape sequence\00", align 1
@.str3353 = private constant [37 x i8] c"too many arguments for klee_init_env\00", align 8
@.str5354 = private constant [7 x i8] c"--help\00", align 1
@.str6355 = private constant [593 x i8] c"klee_init_env\0A\0Ausage: (klee_init_env) [options] [program arguments]\0A  -sym-arg <N>              - Replace by a symbolic argument with length N\0A  -sym-args <MIN> <MAX> <N> - Replace by at least MIN argumen
@.str7356 = private constant [10 x i8] c"--sym-arg\00", align 1
@.str8357 = private constant [9 x i8] c"-sym-arg\00", align 1
@.str9358 = private constant [48 x i8] c"--sym-arg expects an integer argument <max-len>\00", align 8
@.str10359 = private constant [11 x i8] c"--sym-args\00", align 1
@.str11360 = private constant [10 x i8] c"-sym-args\00", align 1
@.str12361 = private constant [77 x i8] c"--sym-args expects three integer arguments <min-argvs> <max-argvs> <max-len>\00", align 8
@.str13362 = private constant [7 x i8] c"n_args\00", align 1
@.str14363 = private constant [12 x i8] c"--sym-files\00", align 1
@.str15364 = private constant [11 x i8] c"-sym-files\00", align 1
@.str16365 = private constant [72 x i8] c"--sym-files expects two integer arguments <no-sym-files> <sym-file-len>\00", align 8
@.str17366 = private constant [13 x i8] c"--sym-stdout\00", align 1
@.str18367 = private constant [12 x i8] c"-sym-stdout\00", align 1
@.str19368 = private constant [18 x i8] c"--save-all-writes\00", align 1
@.str20369 = private constant [17 x i8] c"-save-all-writes\00", align 1
@.str21370 = private constant [10 x i8] c"--fd-fail\00", align 1
@.str22371 = private constant [9 x i8] c"-fd-fail\00", align 1
@.str23372 = private constant [11 x i8] c"--max-fail\00", align 1
@.str24373 = private constant [10 x i8] c"-max-fail\00", align 1
@.str25374 = private constant [54 x i8] c"--max-fail expects an integer argument <max-failures>\00", align 8
@.str26375 = private constant [14 x i8] c"--sym-streams\00", align 1
@.str27376 = private constant [13 x i8] c"-sym-streams\00", align 1
@.str28377 = private constant [76 x i8] c"--sym-streams expects two integer arguments <no-streams> <bytes-per-stream>\00", align 8
@.str29378 = private constant [16 x i8] c"--sym-datagrams\00", align 1
@.str30379 = private constant [15 x i8] c"-sym-datagrams\00", align 1
@.str31380 = private constant [82 x i8] c"--sym-datagrams expects two integer arguments <no-datagrams> <bytes-per-datagram>\00", align 8
@.str32381 = private constant [19 x i8] c"--one-line-streams\00", align 1
@.str33382 = private constant [18 x i8] c"-one-line-streams\00", align 1
@.str34383 = private constant [15 x i8] c"--fill-streams\00", align 1
@.str35384 = private constant [14 x i8] c"-fill-streams\00", align 1
@.str36385 = private constant [121 x i8] c"--fill-streams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string> or <offset> \22file\22 <string>\00", align 8
@.str37386 = private constant [32 x i8] c"--fill-streams: too many blocks\00", align 8
@.str38387 = private constant [4 x i8] c"set\00", align 1
@.str39388 = private constant [5 x i8] c"copy\00", align 1
@.str40389 = private constant [5 x i8] c"file\00", align 1
@.str41390 = private constant [17 x i8] c"--fill-datagrams\00", align 1
@.str42391 = private constant [16 x i8] c"-fill-datagrams\00", align 1
@.str43392 = private constant [95 x i8] c"--fill-datagrams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string>\00", align 8
@.str44393 = private constant [34 x i8] c"--fill-datagrams: too many blocks\00", align 8
@.str395 = private constant [19 x i8] c"(f->foreign)->addr\00", align 1
@.str1396 = private constant [14 x i8] c"sockets.c.inc\00", align 1
@__PRETTY_FUNCTION__.7471 = internal constant [18 x i8] c"__fd_attach_dgram\00", align 16
@.str2397 = private constant [26 x i8] c"0 && \22unsupported domain\22\00", align 1
@dummy_dfile = internal global %struct.exe_disk_file_t zeroinitializer, align 32
@.str3398 = private constant [31 x i8] c"cap_get_file: ignoring (EPERM)\00", align 8
@.str4399 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str5400 = private constant [25 x i8] c"0 && \22not supported yet\22\00", align 1
@__PRETTY_FUNCTION__.7439 = internal constant [13 x i8] c"__fd_recvmsg\00"
@.str6401 = private constant [28 x i8] c"flags is not zero, ignoring\00", align 1
@__PRETTY_FUNCTION__.7339 = internal constant [13 x i8] c"__fd_sendmsg\00"
@.str7402 = private constant [17 x i8] c"f->foreign->addr\00", align 1
@__PRETTY_FUNCTION__.7179 = internal constant [12 x i8] c"getpeername\00"
@.str8403 = private constant [14 x i8] c"f->local.addr\00", align 1
@__PRETTY_FUNCTION__.7141 = internal constant [12 x i8] c"getsockname\00"
@__PRETTY_FUNCTION__.6905 = internal constant [8 x i8] c"connect\00"
@.str9404 = private constant [505 x i8] c"((((f->foreign)->addr) ? (void) (0) : __assert_fail (\22(f->foreign)->addr\22, \22sockets.c.inc\22, 337, __PRETTY_FUNCTION__)), ( ((struct sockaddr *)((f->foreign)->addr))->sa_family == 2 ? ((struct sockaddr_in *
@__PRETTY_FUNCTION__.6833 = internal constant [5 x i8] c"bind\00"
@.str11405 = private constant [48 x i8] c"Calling rename with possibly symbolic arguments\00", align 8
@.str12406 = private constant [2 x i8] c"a\00", align 1
@__PRETTY_FUNCTION__.6681 = internal constant [20 x i8] c"__allocate_sockaddr\00", align 16
@.str13407 = private constant [25 x i8] c"No more symbolic streams\00", align 1
@.str14408 = private constant [25 x i8] c"No more file descriptors\00", align 1
@.str15409 = private constant [24 x i8] c"unsupported socket type\00", align 1
@.str16410 = private constant [28 x i8] c"unsupported socket protocol\00", align 1
@.str17411 = private constant [20 x i8] c"ignoring setsockopt\00", align 1
@.str18412 = private constant [20 x i8] c"ignoring getsockopt\00", align 1
@.str19413 = private constant [46 x i8] c"__socketcall(type=%d: unknown): errno=ENOSYS\0A\00", align 8
@.str20414 = private constant [18 x i8] c"silently ignoring\00", align 1
@__exe_env = global %struct.exe_sym_env_t { [32 x %struct.exe_file_t] [%struct.exe_file_t { i32 0, i32 5, i64 0, %struct.exe_disk_file_t* null, %struct.exe_sockaddr_t zeroinitializer, %struct.exe_sockaddr_t* null, i32 0 }, %struct.exe_file_t { i32 1, i32
@.str427 = private constant [37 x i8] c"s >= 0 && \22unable to open fill file\22\00", align 8
@.str1428 = private constant [10 x i8] c"fd_init.c\00", align 1
@__PRETTY_FUNCTION__.5216 = internal constant [14 x i8] c"__fill_blocks\00"
@.str2429 = private constant [62 x i8] c"dfile->size >= p->offset + s && \22fill file to big for socket\22\00", align 8
@.str3430 = private constant [27 x i8] c"0 && \22unknown fill method\22\00", align 1
@.str4431 = private constant [6 x i8] c"-stat\00", align 1
@.str5432 = private constant [17 x i8] c"contents || size\00", align 1
@__PRETTY_FUNCTION__.5290 = internal constant [19 x i8] c"__create_new_dfile\00", align 16
@.str6433 = private constant [22 x i8] c"-1 != stat64(name, s)\00", align 1
@.str7434 = private constant [34 x i8] c"-1 != stat64(name, &originalStat)\00", align 8
@.str8435 = private constant [5 x i8] c"-src\00", align 1
@.str9436 = private constant [2 x i8] c".\00", align 1
@__exe_fs = common global %struct.exe_file_system_t zeroinitializer, align 32
@__stream_fill_info = internal global %struct.fill_info_t* null
@__n_stream_fill_info = internal global i32 0
@__dgram_fill_info = internal global %struct.fill_info_t* null
@__n_dgram_fill_info = internal global i32 0
@.str13438 = private constant [6 x i8] c"stdin\00", align 1
@.str14439 = private constant [10 x i8] c"read_fail\00", align 1
@.str15440 = private constant [11 x i8] c"write_fail\00", align 1
@.str16441 = private constant [11 x i8] c"close_fail\00", align 1
@.str17442 = private constant [15 x i8] c"ftruncate_fail\00", align 1
@.str18443 = private constant [12 x i8] c"getcwd_fail\00", align 1
@.str19444 = private constant [7 x i8] c"stdout\00", align 1
@.str20445 = private constant [14 x i8] c"model_version\00", align 1
@.str21446 = private constant [37 x i8] c"malloc returned NULL for sym_streams\00", align 8
@.str22447 = private constant [36 x i8] c"malloc returned NULL for sym_dgrams\00", align 8
@.str450 = private constant [8 x i8] c"IGNORED\00", align 1
@.str1451 = private constant [16 x i8] c"overshift error\00", align 1
@.str2452 = private constant [14 x i8] c"overshift.err\00", align 1
@.str454 = private constant [5 x i8] c"argv\00", align 1
@.str456 = private constant [22 x i8] c"klee_div_zero_check.c\00", align 1
@.str1457 = private constant [15 x i8] c"divide by zero\00", align 1
@.str2458 = private constant [8 x i8] c"div.err\00", align 1
@.str460 = private constant [13 x i8] c"klee_range.c\00", align 1
@.str1461 = private constant [14 x i8] c"invalid range\00", align 1
@.str2462 = private constant [5 x i8] c"user\00", align 1

@fgetc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@getc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@fgetc = alias i32 (%4*)* @__fgetc_unlocked
@getc = alias i32 (%4*)* @__fgetc_unlocked
@fputc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@putc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@fputc = alias i32 (i32, %4*)* @__fputc_unlocked
@putc = alias i32 (i32, %4*)* @__fputc_unlocked
@environ = alias weak i8*** @__environ
@error = alias weak void (i32, i32, i8*, ...)* @__error
@error_at_line = alias weak void (i32, i32, i8*, i32, i8*, ...)* @__error_at_line
@ferror = alias i32 (%4*)* @ferror_unlocked
@fflush = alias i32 (%4*)* @fflush_unlocked
@fileno = alias i32 (%4*)* @fileno_unlocked
@fputs = alias i32 (i8*, %4*)* @fputs_unlocked
@fseeko = alias i32 (%4*, i64, i32)* @fseek
@fwrite = alias i64 (i8*, i64, i64, %4*)* @fwrite_unlocked
@putchar = alias i32 (i32)* @putchar_unlocked
@strcoll = alias i32 (i8*, i8*)* @strcmp
@strtoumax = alias i64 (i8*, i8**, i32)* @strtoul
@strtoull = alias i64 (i8*, i8**, i32)* @strtoul
@fgets = alias i8* (i8*, i32, %4*)* @fgets_unlocked
@raise = alias weak i32 (i32)* @__raise
@sigaction = alias weak i32 (i32, %struct.sigaction*, %struct.sigaction*)* @__libc_sigaction
@strerror_r = alias weak i32 (i32, i8*, i64)* @__xpg_strerror_r
@strtoimax = alias i64 (i8*, i8**, i32)* @strtol
@strtoll = alias i64 (i8*, i8**, i32)* @strtol
@__getdents = alias i64 (i32, %struct.dirent*, i64)* @getdents

define internal i32 @klee_get_true() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 1, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal i32 @klee_get_false() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 0, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

declare i64 @klee_change(i64, i64) nounwind noinline

define internal i8* @hide_problematic_chars(i8* %cell) nounwind {
entry:
  %cell_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %cell, i8** %cell_addr
  %1 = load i8** %cell_addr, align 8
  store i8* %1, i8** %p, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %2 = load i8** %p, align 8
  %3 = load i8* %2, align 1
  %4 = sext i8 %3 to i32
  %5 = trunc i32 %4 to i8
  %6 = call zeroext i8 @to_uchar(i8 signext %5) nounwind
  %7 = zext i8 %6 to i32
  %8 = call zeroext i8 @c_iscntrl(i32 %7) nounwind
  %9 = zext i8 %8 to i64
  %10 = call i16** @__ctype_b_loc() nounwind readnone
  %11 = load i16** %10, align 8
  %12 = load i8** %p, align 8
  %13 = load i8* %12, align 1
  %14 = sext i8 %13 to i32
  %15 = trunc i32 %14 to i8
  %16 = call zeroext i8 @to_uchar(i8 signext %15) nounwind
  %17 = zext i8 %16 to i32
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i16* %11, i64 %18
  %20 = load i16* %19, align 1
  %21 = zext i16 %20 to i64
  %22 = and i64 %21, 2
  %23 = call i64 @klee_change(i64 %22, i64 %9) nounwind noinline
  %24 = icmp ne i64 %23, 0
  br i1 %24, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %25 = load i8** %p, align 8
  store i8 63, i8* %25, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %26 = load i8** %p, align 8
  %27 = getelementptr inbounds i8* %26, i64 1
  store i8* %27, i8** %p, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %28 = load i8** %p, align 8
  %29 = load i8* %28, align 1
  %30 = icmp ne i8 %29, 0
  br i1 %30, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  %31 = load i8** %cell_addr, align 8
  store i8* %31, i8** %0, align 8
  %32 = load i8** %0, align 8
  store i8* %32, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define internal zeroext i8 @to_uchar(i8 signext %ch) nounwind inlinehint {
entry:
  %ch_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %ch, i8* %ch_addr
  %1 = load i8* %ch_addr, align 1
  %2 = zext i8 %1 to i32
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

declare i16** @__ctype_b_loc() nounwind readnone

define internal void @alloc_table_row() nounwind {
entry:
  %0 = load i64* @nrows, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* @nrows, align 8
  %2 = load i64* @nrows, align 8
  %3 = load i8**** @table, align 8
  %4 = bitcast i8*** %3 to i8*
  %5 = call i8* @xnrealloc(i8* %4, i64 %2, i64 8) nounwind
  %6 = bitcast i8* %5 to i8***
  store i8*** %6, i8**** @table, align 8
  %7 = load i8**** @table, align 8
  %8 = load i64* @nrows, align 8
  %9 = sub i64 %8, 1
  %10 = load i64* @ncolumns, align 8
  %11 = call noalias i8* @xnmalloc(i64 %10, i64 8) nounwind
  %12 = bitcast i8* %11 to i8**
  %13 = getelementptr inbounds i8*** %7, i64 %9
  store i8** %12, i8*** %13, align 1
  ret void
}

define internal void @print_table() nounwind {
entry:
  %iftmp.47 = alloca i8*
  %row = alloca i64
  %col = alloca i64
  %cell = alloca i8*
  %flags = alloca i32
  %width = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 0, i64* %row, align 8
  br label %bb11

bb:                                               ; preds = %bb11
  store i64 0, i64* %col, align 8
  br label %bb9

bb1:                                              ; preds = %bb9
  %0 = load i8**** @table, align 8
  %1 = load i64* %row, align 8
  %2 = getelementptr inbounds i8*** %0, i64 %1
  %3 = load i8*** %2, align 1
  %4 = load i64* %col, align 8
  %5 = getelementptr inbounds i8** %3, i64 %4
  %6 = load i8** %5, align 1
  store i8* %6, i8** %cell, align 8
  %7 = load i64* %col, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %9 = call i32 @putchar_unlocked(i32 32) nounwind
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %flags, align 4
  %10 = load i64* @ncolumns, align 8
  %11 = sub i64 %10, 1
  %12 = load i64* %col, align 8
  %13 = icmp eq i64 %11, %12
  br i1 %13, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 8, i32* %flags, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load %struct.field_data_t*** @columns, align 8
  %15 = load i64* %col, align 8
  %16 = getelementptr inbounds %struct.field_data_t** %14, i64 %15
  %17 = load %struct.field_data_t** %16, align 1
  %18 = getelementptr inbounds %struct.field_data_t* %17, i32 0, i32 4
  %19 = load i64* %18, align 8
  store i64 %19, i64* %width, align 8
  %20 = load %struct.field_data_t*** @columns, align 8
  %21 = load i64* %col, align 8
  %22 = getelementptr inbounds %struct.field_data_t** %20, i64 %21
  %23 = load %struct.field_data_t** %22, align 1
  %24 = getelementptr inbounds %struct.field_data_t* %23, i32 0, i32 5
  %25 = load i32* %24, align 8
  %26 = load i8** %cell, align 8
  %27 = load i32* %flags, align 4
  %28 = call i8* @ambsalign(i8* %26, i64* %width, i32 %25, i32 %27) nounwind
  store i8* %28, i8** %cell, align 8
  %29 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %30 = load i8** %cell, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %32 = load i8**** @table, align 8
  %33 = load i64* %row, align 8
  %34 = getelementptr inbounds i8*** %32, i64 %33
  %35 = load i8*** %34, align 1
  %36 = load i64* %col, align 8
  %37 = getelementptr inbounds i8** %35, i64 %36
  %38 = load i8** %37, align 1
  store i8* %38, i8** %iftmp.47, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %39 = load i8** %cell, align 8
  store i8* %39, i8** %iftmp.47, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %40 = load i8** %iftmp.47, align 8
  %41 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %40, %struct.FILE* noalias %29) nounwind
  %42 = load i8** %cell, align 8
  call void @free(i8* %42) nounwind
  %43 = load i64* %col, align 8
  %44 = add i64 %43, 1
  store i64 %44, i64* %col, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %45 = load i64* @ncolumns, align 8
  %46 = load i64* %col, align 8
  %47 = icmp ult i64 %46, %45
  br i1 %47, label %bb1, label %bb10

bb10:                                             ; preds = %bb9
  %48 = call i32 @putchar_unlocked(i32 10) nounwind
  %49 = load i64* %row, align 8
  %50 = add i64 %49, 1
  store i64 %50, i64* %row, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %entry
  %51 = load i64* @nrows, align 8
  %52 = load i64* %row, align 8
  %53 = icmp ult i64 %52, %51
  br i1 %53, label %bb, label %return

return:                                           ; preds = %bb11
  ret void
}

declare void @free(i8*) nounwind

define internal void @alloc_field(i32 %f, i8* %c) nounwind {
entry:
  %f_addr = alloca i32, align 4
  %c_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %f, i32* %f_addr
  store i8* %c, i8** %c_addr
  %0 = load i64* @ncolumns, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* @ncolumns, align 8
  %2 = load i64* @ncolumns, align 8
  %3 = load %struct.field_data_t*** @columns, align 8
  %4 = bitcast %struct.field_data_t** %3 to i8*
  %5 = call i8* @xnrealloc(i8* %4, i64 %2, i64 8) nounwind inlinehint
  %6 = bitcast i8* %5 to %struct.field_data_t**
  store %struct.field_data_t** %6, %struct.field_data_t*** @columns, align 8
  %7 = load %struct.field_data_t*** @columns, align 8
  %8 = load i64* @ncolumns, align 8
  %9 = sub i64 %8, 1
  %10 = load i32* %f_addr, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.field_data_t** %7, i64 %9
  store %struct.field_data_t* %12, %struct.field_data_t** %13, align 1
  %14 = load i8** %c_addr, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %bb, label %bb1

bb:                                               ; preds = %entry
  %16 = load %struct.field_data_t*** @columns, align 8
  %17 = load i64* @ncolumns, align 8
  %18 = sub i64 %17, 1
  %19 = getelementptr inbounds %struct.field_data_t** %16, i64 %18
  %20 = load %struct.field_data_t** %19, align 1
  %21 = getelementptr inbounds %struct.field_data_t* %20, i32 0, i32 3
  %22 = load i8** %c_addr, align 8
  store i8* %22, i8** %21, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %23 = load i32* %f_addr, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %24
  %26 = getelementptr inbounds %struct.field_data_t* %25, i32 0, i32 6
  %27 = load i8* %26, align 4
  %toBool = icmp ne i8 %27, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str42, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 358, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7086, i64 0, i64 0)) noreturn nou
  unreachable

bb3:                                              ; preds = %bb1
  %28 = load i32* %f_addr, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %29
  %31 = getelementptr inbounds %struct.field_data_t* %30, i32 0, i32 6
  store i8 1, i8* %31, align 4
  ret void
}

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

define internal void @decode_output_arg(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %arg_writable = alloca i8*
  %s = alloca i8*
  %comma = alloca i8*
  %field = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %0 = load i8** %arg_addr, align 8
  %1 = call noalias i8* @xstrdup(i8* %0) nounwind
  store i8* %1, i8** %arg_writable, align 8
  %2 = load i8** %arg_writable, align 8
  store i8* %2, i8** %s, align 8
  br label %bb

bb:                                               ; preds = %bb16, %entry
  %3 = load i8** %s, align 8
  %4 = call i8* @strchr(i8* %3, i32 44) nounwind readonly
  store i8* %4, i8** %comma, align 8
  %5 = load i8** %comma, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i8** %comma, align 8
  store i8 0, i8* %7, align 1
  %8 = load i8** %comma, align 8
  %9 = getelementptr inbounds i8* %8, i64 1
  store i8* %9, i8** %comma, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  store i32 12, i32* %field, align 4
  store i32 0, i32* %i, align 4
  br label %bb6

bb3:                                              ; preds = %bb6
  %10 = load i32* %i, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %11
  %13 = getelementptr inbounds %struct.field_data_t* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = load i8** %s, align 8
  %16 = call i32 @strcmp(i8* %14, i8* %15) nounwind readonly
  %17 = icmp eq i32 %16, 0
  %18 = load i32* %i, align 4
  br i1 %17, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 %18, i32* %field, align 4
  br label %bb7

bb5:                                              ; preds = %bb3
  %19 = add i32 %18, 1
  store i32 %19, i32* %i, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %20 = load i32* %i, align 4
  %21 = icmp ule i32 %20, 11
  br i1 %21, label %bb3, label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %22 = load i32* %field, align 4
  %23 = icmp eq i32 %22, 12
  br i1 %23, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %24 = load i8** %s, align 8
  %25 = call i8* @quote(i8* %24) nounwind
  %26 = call i8* @gettext(i8* getelementptr inbounds ([34 x i8]* @.str44, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %26, i8* %25) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb7
  %27 = load i32* %field, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %28
  %30 = getelementptr inbounds %struct.field_data_t* %29, i32 0, i32 6
  %31 = load i8* %30, align 4
  %toBool = icmp ne i8 %31, 0
  %32 = load i32* %field, align 4
  br i1 %toBool, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds [12 x %struct.field_data_t]* @field_data, i64 0, i64 %33
  %35 = getelementptr inbounds %struct.field_data_t* %34, i32 0, i32 1
  %36 = load i8** %35, align 8
  %37 = call i8* @quote(i8* %36) nounwind
  %38 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str45, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %38, i8* %37) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb11:                                             ; preds = %bb9
  switch i32 %32, label %bb15 [
    i32 0, label %bb12
    i32 1, label %bb12
    i32 2, label %bb13
    i32 3, label %bb12
    i32 4, label %bb14
    i32 5, label %bb12
    i32 6, label %bb12
    i32 7, label %bb12
    i32 8, label %bb12
    i32 9, label %bb12
    i32 10, label %bb12
    i32 11, label %bb12
  ]

bb12:                                             ; preds = %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11, %bb11
  %39 = load i32* %field, align 4
  call void @alloc_field(i32 %39, i8* null) nounwind
  br label %bb16

bb13:                                             ; preds = %bb11
  %40 = load i32* %field, align 4
  call void @alloc_field(i32 %40, i8* getelementptr inbounds ([5 x i8]* @.str46, i64 0, i64 0)) nounwind
  br label %bb16

bb14:                                             ; preds = %bb11
  %41 = load i32* %field, align 4
  call void @alloc_field(i32 %41, i8* getelementptr inbounds ([6 x i8]* @.str47, i64 0, i64 0)) nounwind
  br label %bb16

bb15:                                             ; preds = %bb11
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str48, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 429, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7135, i64 0, i64 0)) noreturn nou
  unreachable

bb16:                                             ; preds = %bb14, %bb13, %bb12
  %42 = load i8** %comma, align 8
  store i8* %42, i8** %s, align 8
  %43 = load i8** %s, align 8
  %44 = icmp ne i8* %43, null
  br i1 %44, label %bb, label %bb17

bb17:                                             ; preds = %bb16
  %45 = load i8** %arg_writable, align 8
  call void @free(i8* %45) nounwind
  ret void
}

declare i8* @gettext(i8*) nounwind

define void @usage(i32 %status) noreturn nounwind {
entry:
  %status_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  %0 = load i32* %status_addr, align 4
  %1 = icmp ne i32 %0, 0
  %2 = load i8** @program_name, align 8
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8]* @.str61, i64 0, i64 0)) nounwind
  %4 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %5 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %4, i8* noalias %3, i8* %2) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8]* @.str62, i64 0, i64 0)) nounwind
  %7 = call i32 (i8*, ...)* @printf(i8* noalias %6, i8* %2) nounwind
  %8 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %9 = call i8* @gettext(i8* getelementptr inbounds ([100 x i8]* @.str63, i64 0, i64 0)) nounwind
  %10 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %9, %struct.FILE* noalias %8) nounwind
  call void @emit_mandatory_arg_note() nounwind
  %11 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %12 = call i8* @gettext(i8* getelementptr inbounds ([410 x i8]* @.str64, i64 0, i64 0)) nounwind
  %13 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %12, %struct.FILE* noalias %11) nounwind
  %14 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %15 = call i8* @gettext(i8* getelementptr inbounds ([255 x i8]* @.str65, i64 0, i64 0)) nounwind
  %16 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %15, %struct.FILE* noalias %14) nounwind
  %17 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %18 = call i8* @gettext(i8* getelementptr inbounds ([266 x i8]* @.str66, i64 0, i64 0)) nounwind
  %19 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %18, %struct.FILE* noalias %17) nounwind
  %20 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %21 = call i8* @gettext(i8* getelementptr inbounds ([129 x i8]* @.str67, i64 0, i64 0)) nounwind
  %22 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %21, %struct.FILE* noalias %20) nounwind
  %23 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %24 = call i8* @gettext(i8* getelementptr inbounds ([224 x i8]* @.str68, i64 0, i64 0)) nounwind
  %25 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %24, %struct.FILE* noalias %23) nounwind
  %26 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %27 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str69, i64 0, i64 0)) nounwind
  %28 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %27, %struct.FILE* noalias %26) nounwind
  %29 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %30 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8]* @.str70, i64 0, i64 0)) nounwind
  %31 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %30, %struct.FILE* noalias %29) nounwind
  call void @emit_blocksize_note(i8* getelementptr inbounds ([3 x i8]* @.str71, i64 0, i64 0)) nounwind
  call void @emit_size_note() nounwind
  %32 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %33 = call i8* @gettext(i8* getelementptr inbounds ([220 x i8]* @.str72, i64 0, i64 0)) nounwind
  %34 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %33, %struct.FILE* noalias %32) nounwind
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8]* @.str73, i64 0, i64 0)) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %35 = load i32* %status_addr, align 4
  call void @exit(i32 %35) noreturn nounwind
  unreachable
}

define internal void @get_field_list() nounwind {
entry:
  %0 = load i32* @header_mode, align 4
  switch i32 %0, label %bb18 [
    i32 0, label %bb
    i32 1, label %bb7
    i32 2, label %bb3
    i32 3, label %bb11
    i32 4, label %bb15
  ]

bb:                                               ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %1 = load i8* @print_type, align 1
  %toBool = icmp ne i8 %1, 0
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  call void @alloc_field(i32 2, i8* null) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* null) nounwind
  call void @alloc_field(i32 5, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb3:                                              ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %2 = load i8* @print_type, align 1
  %toBool4 = icmp ne i8 %2, 0
  br i1 %toBool4, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  call void @alloc_field(i32 2, i8* getelementptr inbounds ([5 x i8]* @.str46, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* getelementptr inbounds ([6 x i8]* @.str47, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 5, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb7:                                              ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %3 = load i8* @print_type, align 1
  %toBool8 = icmp ne i8 %3, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  call void @alloc_field(i32 6, i8* null) nounwind
  call void @alloc_field(i32 7, i8* null) nounwind
  call void @alloc_field(i32 8, i8* null) nounwind
  call void @alloc_field(i32 9, i8* null) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb11:                                             ; preds = %entry
  call void @alloc_field(i32 0, i8* null) nounwind
  %4 = load i8* @print_type, align 1
  %toBool12 = icmp ne i8 %4, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb11
  call void @alloc_field(i32 1, i8* null) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11
  call void @alloc_field(i32 2, i8* null) nounwind
  call void @alloc_field(i32 3, i8* null) nounwind
  call void @alloc_field(i32 4, i8* null) nounwind
  call void @alloc_field(i32 5, i8* getelementptr inbounds ([9 x i8]* @.str49, i64 0, i64 0)) nounwind
  call void @alloc_field(i32 10, i8* null) nounwind
  br label %return

bb15:                                             ; preds = %entry
  %5 = load i64* @ncolumns, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb16, label %return

bb16:                                             ; preds = %bb15
  %7 = load i8** @all_args_string, align 8
  call void @decode_output_arg(i8* %7) nounwind
  br label %return

bb18:                                             ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str50, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([15 x i8]* @__PRETTY_FUNCTION__.7171, i64 0, i64 0)) noreturn nou
  unreachable

return:                                           ; preds = %bb2, %bb6, %bb10, %bb14, %bb16, %bb15
  ret void
}

define internal void @get_header() nounwind {
entry:
  %iftmp.91 = alloca i64
  %col = alloca i64
  %cell = alloca i8*
  %header = alloca i8*
  %buf = alloca [652 x i8]
  %opts = alloca i32
  %q1000 = alloca i64
  %q1024 = alloca i64
  %divisible_by_1000 = alloca i8
  %divisible_by_1024 = alloca i8
  %num = alloca i8*
  %buf19 = alloca [21 x i8]
  %num20 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  call void @alloc_table_row() nounwind
  store i64 0, i64* %col, align 8
  br label %bb31

bb:                                               ; preds = %bb31
  store i8* null, i8** %cell, align 8
  %0 = load %struct.field_data_t*** @columns, align 8
  %1 = load i64* %col, align 8
  %2 = getelementptr inbounds %struct.field_data_t** %0, i64 %1
  %3 = load %struct.field_data_t** %2, align 1
  %4 = getelementptr inbounds %struct.field_data_t* %3, i32 0, i32 3
  %5 = load i8** %4, align 8
  %6 = call i8* @gettext(i8* %5) nounwind
  store i8* %6, i8** %header, align 8
  %7 = load %struct.field_data_t*** @columns, align 8
  %8 = load i64* %col, align 8
  %9 = getelementptr inbounds %struct.field_data_t** %7, i64 %8
  %10 = load %struct.field_data_t** %9, align 1
  %11 = getelementptr inbounds %struct.field_data_t* %10, i32 0, i32 0
  %12 = load i32* %11, align 8
  %13 = icmp ne i32 %12, 2
  br i1 %13, label %bb16, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* @header_mode, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %16 = load i32* @header_mode, align 4
  %17 = icmp ne i32 %16, 4
  br i1 %17, label %bb16, label %bb3

bb3:                                              ; preds = %bb2
  %18 = load i32* @human_output_opts, align 4
  %19 = and i32 %18, 16
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %bb4, label %bb16

bb4:                                              ; preds = %bb3, %bb1
  %21 = load i32* @human_output_opts, align 4
  %22 = and i32 %21, 292
  %23 = or i32 %22, 152
  store i32 %23, i32* %opts, align 4
  %24 = load i64* @output_block_size, align 8
  store i64 %24, i64* %q1000, align 8
  %25 = load i64* @output_block_size, align 8
  store i64 %25, i64* %q1024, align 8
  br label %bb5

bb5:                                              ; preds = %klee_div_zero_check.exit6, %bb4
  %26 = load i64* %q1000, align 8
  %int_cast_to_i64 = bitcast i64 1000 to i64
  %27 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %28 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %28, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb5
  call void @klee_disable_symbex() nounwind
  %29 = urem i64 %26, 1000
  %30 = icmp eq i64 %29, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %divisible_by_1000, align 1
  %32 = load i64* %q1000, align 8
  %int_cast_to_i641 = bitcast i64 1000 to i64
  %33 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %34 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %34, label %bb.i3, label %klee_div_zero_check.exit4

bb.i3:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit4:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %35 = udiv i64 %32, 1000
  store i64 %35, i64* %q1000, align 8
  %36 = load i64* %q1024, align 8
  %37 = and i64 %36, 1023
  %38 = icmp eq i64 %37, 0
  %39 = zext i1 %38 to i8
  store i8 %39, i8* %divisible_by_1024, align 1
  %40 = load i64* %q1024, align 8
  %int_cast_to_i642 = bitcast i64 1024 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %42, label %bb.i5, label %klee_div_zero_check.exit6

bb.i5:                                            ; preds = %klee_div_zero_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit6:                        ; preds = %klee_div_zero_check.exit4
  call void @klee_disable_symbex() nounwind
  %43 = udiv i64 %40, 1024
  store i64 %43, i64* %q1024, align 8
  %44 = load i8* %divisible_by_1000, align 1
  %45 = zext i8 %44 to i32
  %46 = load i8* %divisible_by_1024, align 1
  %47 = zext i8 %46 to i32
  %48 = and i32 %45, %47
  %49 = icmp ne i32 %48, 0
  br i1 %49, label %bb5, label %bb6

bb6:                                              ; preds = %klee_div_zero_check.exit6
  %50 = load i8* %divisible_by_1000, align 1
  %51 = zext i8 %50 to i32
  %52 = load i8* %divisible_by_1024, align 1
  %53 = zext i8 %52 to i32
  %54 = icmp slt i32 %51, %53
  br i1 %54, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %55 = load i32* %opts, align 4
  %56 = or i32 %55, 32
  store i32 %56, i32* %opts, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %57 = load i8* %divisible_by_1024, align 1
  %58 = zext i8 %57 to i32
  %59 = load i8* %divisible_by_1000, align 1
  %60 = zext i8 %59 to i32
  %61 = icmp slt i32 %58, %60
  br i1 %61, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %62 = load i32* %opts, align 4
  %63 = and i32 %62, -33
  store i32 %63, i32* %opts, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %64 = load i32* %opts, align 4
  %65 = and i32 %64, 32
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %67 = load i32* %opts, align 4
  %68 = or i32 %67, 256
  store i32 %68, i32* %opts, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %69 = load i64* @output_block_size, align 8
  %buf13 = bitcast [652 x i8]* %buf to i8*
  %70 = load i32* %opts, align 4
  %71 = call i8* @human_readable(i64 %69, i8* %buf13, i32 %70, i64 1, i64 1) nounwind
  store i8* %71, i8** %num, align 8
  %72 = call i8* @gettext(i8* getelementptr inbounds ([7 x i8]* @.str6, i64 0, i64 0)) nounwind
  store i8* %72, i8** %header, align 8
  %73 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8]* @.str51, i64 0, i64 0)) nounwind
  %74 = load i8** %num, align 8
  %75 = load i8** %header, align 8
  %76 = call i32 (i8**, i8*, ...)* @asprintf(i8** noalias %cell, i8* noalias %73, i8* %74, i8* %75) nounwind
  %77 = icmp eq i32 %76, -1
  br i1 %77, label %bb14, label %bb25

bb14:                                             ; preds = %bb12
  store i8* null, i8** %cell, align 8
  br label %bb25

bb16:                                             ; preds = %bb3, %bb2, %bb
  %78 = load i32* @header_mode, align 4
  %79 = icmp ne i32 %78, 3
  br i1 %79, label %bb24, label %bb17

bb17:                                             ; preds = %bb16
  %80 = load %struct.field_data_t*** @columns, align 8
  %81 = load i64* %col, align 8
  %82 = getelementptr inbounds %struct.field_data_t** %80, i64 %81
  %83 = load %struct.field_data_t** %82, align 1
  %84 = getelementptr inbounds %struct.field_data_t* %83, i32 0, i32 0
  %85 = load i32* %84, align 8
  %86 = icmp ne i32 %85, 2
  br i1 %86, label %bb24, label %bb18

bb18:                                             ; preds = %bb17
  %87 = load i64* @output_block_size, align 8
  %buf1921 = bitcast [21 x i8]* %buf19 to i8*
  %88 = call i8* @umaxtostr(i64 %87, i8* %buf1921) nounwind
  store i8* %88, i8** %num20, align 8
  %89 = call i8* @gettext(i8* getelementptr inbounds ([6 x i8]* @.str51, i64 0, i64 0)) nounwind
  %90 = load i8** %num20, align 8
  %91 = load i8** %header, align 8
  %92 = call i32 (i8**, i8*, ...)* @asprintf(i8** noalias %cell, i8* noalias %89, i8* %90, i8* %91) nounwind
  %93 = icmp eq i32 %92, -1
  br i1 %93, label %bb22, label %bb25

bb22:                                             ; preds = %bb18
  store i8* null, i8** %cell, align 8
  br label %bb25

bb24:                                             ; preds = %bb17, %bb16
  %94 = load i8** %header, align 8
  %95 = call noalias i8* @strdup(i8* %94) nounwind
  store i8* %95, i8** %cell, align 8
  br label %bb25

bb25:                                             ; preds = %bb18, %bb22, %bb12, %bb14, %bb24
  %96 = load i8** %cell, align 8
  %97 = icmp eq i8* %96, null
  br i1 %97, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  call void @xalloc_die() noreturn nounwind
  unreachable

bb27:                                             ; preds = %bb25
  %98 = load i8** %cell, align 8
  %99 = call i8* @hide_problematic_chars(i8* %98) nounwind
  %100 = load i8**** @table, align 8
  %101 = load i64* @nrows, align 8
  %102 = sub i64 %101, 1
  %103 = getelementptr inbounds i8*** %100, i64 %102
  %104 = load i8*** %103, align 1
  %105 = load i8** %cell, align 8
  %106 = load i64* %col, align 8
  %107 = getelementptr inbounds i8** %104, i64 %106
  store i8* %105, i8** %107, align 1
  %108 = load %struct.field_data_t*** @columns, align 8
  %109 = load i64* %col, align 8
  %110 = getelementptr inbounds %struct.field_data_t** %108, i64 %109
  %111 = load %struct.field_data_t** %110, align 1
  %112 = load %struct.field_data_t*** @columns, align 8
  %113 = load i64* %col, align 8
  %114 = getelementptr inbounds %struct.field_data_t** %112, i64 %113
  %115 = load %struct.field_data_t** %114, align 1
  %116 = getelementptr inbounds %struct.field_data_t* %115, i32 0, i32 4
  %117 = load i64* %116, align 8
  %118 = load i8** %cell, align 8
  %119 = call i32 @gnu_mbswidth(i8* %118, i32 0) nounwind
  %120 = sext i32 %119 to i64
  %121 = icmp ugt i64 %117, %120
  br i1 %121, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %122 = load %struct.field_data_t*** @columns, align 8
  %123 = load i64* %col, align 8
  %124 = getelementptr inbounds %struct.field_data_t** %122, i64 %123
  %125 = load %struct.field_data_t** %124, align 1
  %126 = getelementptr inbounds %struct.field_data_t* %125, i32 0, i32 4
  %127 = load i64* %126, align 8
  store i64 %127, i64* %iftmp.91, align 8
  br label %bb30

bb29:                                             ; preds = %bb27
  %128 = load i8** %cell, align 8
  %129 = call i32 @gnu_mbswidth(i8* %128, i32 0) nounwind
  %130 = sext i32 %129 to i64
  store i64 %130, i64* %iftmp.91, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %131 = getelementptr inbounds %struct.field_data_t* %111, i32 0, i32 4
  %132 = load i64* %iftmp.91, align 8
  store i64 %132, i64* %131, align 8
  %133 = load i64* %col, align 8
  %134 = add i64 %133, 1
  store i64 %134, i64* %col, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %entry
  %135 = load i64* @ncolumns, align 8
  %136 = load i64* %col, align 8
  %137 = icmp ult i64 %136, %135
  br i1 %137, label %bb, label %return

return:                                           ; preds = %bb31
  ret void
}

define internal zeroext i8 @selected_fstype(i8* %fstype) nounwind readonly {
entry:
  %fstype_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %1 = load %struct.fs_type_list** @fs_select_list, align 8
  %2 = icmp eq %struct.fs_type_list* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %fstype_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4
  br label %bb8

bb2:                                              ; preds = %bb
  %5 = load %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb3:                                              ; preds = %bb6
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = load i8** %fstype_addr, align 8
  %10 = call i32 @strcmp(i8* %9, i8* %8) nounwind readonly
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 1, i32* %0, align 4
  br label %bb8

bb5:                                              ; preds = %bb3
  %12 = load %struct.fs_type_list** %fsp, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 1
  %14 = load %struct.fs_type_list** %13, align 8
  store %struct.fs_type_list* %14, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %15 = load %struct.fs_type_list** %fsp, align 8
  %16 = icmp ne %struct.fs_type_list* %15, null
  br i1 %16, label %bb3, label %bb7

bb7:                                              ; preds = %bb6
  store i32 0, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4, %bb1
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval9 = load i32* %retval
  %retval910 = trunc i32 %retval9 to i8
  ret i8 %retval910
}

define internal zeroext i8 @excluded_fstype(i8* %fstype) nounwind readonly {
entry:
  %fstype_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %1 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %2 = icmp eq %struct.fs_type_list* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %fstype_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 0, i32* %0, align 4
  br label %bb8

bb2:                                              ; preds = %bb
  %5 = load %struct.fs_type_list** @fs_exclude_list, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb3:                                              ; preds = %bb6
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = load i8** %fstype_addr, align 8
  %10 = call i32 @strcmp(i8* %9, i8* %8) nounwind readonly
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 1, i32* %0, align 4
  br label %bb8

bb5:                                              ; preds = %bb3
  %12 = load %struct.fs_type_list** %fsp, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 1
  %14 = load %struct.fs_type_list** %13, align 8
  store %struct.fs_type_list* %14, %struct.fs_type_list** %fsp, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %15 = load %struct.fs_type_list** %fsp, align 8
  %16 = icmp ne %struct.fs_type_list* %15, null
  br i1 %16, label %bb3, label %bb7

bb7:                                              ; preds = %bb6
  store i32 0, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4, %bb1
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval9 = load i32* %retval
  %retval910 = trunc i32 %retval9 to i8
  ret i8 %retval910
}

define internal i64 @devlist_hash(i8* %x, i64 %table_size) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.devlist*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.devlist*
  store %struct.devlist* %2, %struct.devlist** %p, align 8
  %3 = load %struct.devlist** %p, align 8
  %4 = getelementptr inbounds %struct.devlist* %3, i32 0, i32 0
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @devlist_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %a = alloca %struct.devlist*
  %b = alloca %struct.devlist*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.devlist*
  store %struct.devlist* %2, %struct.devlist** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.devlist*
  store %struct.devlist* %4, %struct.devlist** %b, align 8
  %5 = load %struct.devlist** %a, align 8
  %6 = getelementptr inbounds %struct.devlist* %5, i32 0, i32 0
  %7 = load i64* %6, align 8
  %8 = load %struct.devlist** %b, align 8
  %9 = getelementptr inbounds %struct.devlist* %8, i32 0, i32 0
  %10 = load i64* %9, align 8
  %11 = icmp eq i64 %7, %10
  %12 = zext i1 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal %struct.devlist* @devlist_for_dev(i64 %dev) nounwind {
entry:
  %dev_addr = alloca i64, align 8
  %retval = alloca %struct.devlist*
  %0 = alloca %struct.devlist*
  %dev_entry = alloca %struct.devlist
  %"alloca point" = bitcast i32 0 to i32
  store i64 %dev, i64* %dev_addr
  %1 = load %struct.Hash_table** @devlist_table, align 8
  %2 = icmp eq %struct.Hash_table* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.devlist* null, %struct.devlist** %0, align 8
  br label %bb3

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.devlist* %dev_entry, i32 0, i32 0
  %4 = load i64* %dev_addr, align 8
  store i64 %4, i64* %3, align 8
  %5 = load %struct.Hash_table** @devlist_table, align 8
  %dev_entry2 = bitcast %struct.devlist* %dev_entry to i8*
  %6 = call i8* @hash_lookup(%struct.Hash_table* %5, i8* %dev_entry2) nounwind
  %7 = bitcast i8* %6 to %struct.devlist*
  store %struct.devlist* %7, %struct.devlist** %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb1, %bb
  %8 = load %struct.devlist** %0, align 8
  store %struct.devlist* %8, %struct.devlist** %retval, align 8
  %retval4 = load %struct.devlist** %retval
  ret %struct.devlist* %retval4
}

define internal void @devlist_free(i8* %p) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  %0 = load i8** %p_addr, align 8
  call void @free(i8* %0) nounwind
  ret void
}

define internal void @filter_mount_list(i8 zeroext %devices_only) nounwind {
entry:
  %devices_only_addr = alloca i8, align 1
  %iftmp.107 = alloca i32
  %me = alloca %struct.mount_entry*
  %device_list = alloca %struct.devlist*
  %mount_list_size = alloca i32
  %buf = alloca %struct.stat
  %discard_me = alloca %struct.mount_entry*
  %seen_dev = alloca %struct.devlist*
  %target_nearer_root = alloca i8
  %source_below_root = alloca i8
  %devlist = alloca %struct.devlist*
  %"alloca point" = bitcast i32 0 to i32
  store i8 %devices_only, i8* %devices_only_addr
  store %struct.devlist* null, %struct.devlist** %device_list, align 8
  store i32 0, i32* %mount_list_size, align 4
  %0 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %0, %struct.mount_entry** %me, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = add nsw i32 %7, 1
  store i32 %1, i32* %mount_list_size, align 4
  %2 = load %struct.mount_entry** %me, align 8
  %3 = getelementptr inbounds %struct.mount_entry* %2, i32 0, i32 6
  %4 = load %struct.mount_entry** %3, align 8
  store %struct.mount_entry* %4, %struct.mount_entry** %me, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %5 = load %struct.mount_entry** %me, align 8
  %6 = icmp ne %struct.mount_entry* %5, null
  %7 = load i32* %mount_list_size, align 4
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %8 = sext i32 %7 to i64
  %9 = call %struct.Hash_table* @hash_initialize(i64 %8, %struct.Hash_tuning* null, i64 (i8*, i64)* @devlist_hash, i8 (i8*, i8*)* @devlist_compare, void (i8*)* @devlist_free) nounwind
  store %struct.Hash_table* %9, %struct.Hash_table** @devlist_table, align 8
  %10 = load %struct.Hash_table** @devlist_table, align 8
  %11 = icmp eq %struct.Hash_table* %10, null
  br i1 %11, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @xalloc_die() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %12 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %12, %struct.mount_entry** %me, align 8
  br label %bb75

bb5:                                              ; preds = %bb75
  store %struct.mount_entry* null, %struct.mount_entry** %discard_me, align 8
  %13 = load %struct.mount_entry** %me, align 8
  %14 = getelementptr inbounds %struct.mount_entry* %13, i32 0, i32 5
  %15 = load i64* %14, align 8
  %int_cast_to_i64 = bitcast i64 62 to i64
  %16 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %16, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb5
  %17 = shl i64 %15, 62
  %int_cast_to_i641 = bitcast i64 63 to i64
  %18 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %18, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %klee_overshift_check.exit
  %19 = lshr i64 %17, 63
  %20 = trunc i64 %19 to i1
  %21 = icmp ne i1 %20, false
  %22 = load i8* @show_local_fs, align 1
  %toBool = icmp ne i8 %22, 0
  %or.cond = and i1 %21, %toBool
  br i1 %or.cond, label %bb29, label %bb7

bb7:                                              ; preds = %klee_overshift_check.exit9
  %23 = load %struct.mount_entry** %me, align 8
  %24 = getelementptr inbounds %struct.mount_entry* %23, i32 0, i32 5
  %25 = load i64* %24, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %26 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %26, label %klee_overshift_check.exit11, label %bb.i10

bb.i10:                                           ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit11:                      ; preds = %bb7
  %27 = shl i64 %25, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %28 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %28, label %klee_overshift_check.exit13, label %bb.i12

bb.i12:                                           ; preds = %klee_overshift_check.exit11
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit13:                      ; preds = %klee_overshift_check.exit11
  %29 = lshr i64 %27, 63
  %30 = trunc i64 %29 to i1
  %31 = icmp eq i1 %30, false
  br i1 %31, label %bb21, label %bb8

bb8:                                              ; preds = %klee_overshift_check.exit13
  %32 = load i8* @show_all_fs, align 1
  %toBool9 = icmp ne i8 %32, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  %toBool12not = xor i1 %toBool12, true
  %toBool12not13 = zext i1 %toBool12not to i8
  %toBool15 = icmp ne i8 %toBool12not13, 0
  br i1 %toBool15, label %bb21, label %bb16

bb16:                                             ; preds = %bb8
  %33 = load i8* @show_listed_fs, align 1
  %toBool17 = icmp ne i8 %33, 0
  %toBool17not = xor i1 %toBool17, true
  %toBool17not18 = zext i1 %toBool17not to i8
  %toBool20 = icmp ne i8 %toBool17not18, 0
  br i1 %toBool20, label %bb29, label %bb21

bb21:                                             ; preds = %bb16, %bb8, %klee_overshift_check.exit13
  %34 = load %struct.mount_entry** %me, align 8
  %35 = getelementptr inbounds %struct.mount_entry* %34, i32 0, i32 3
  %36 = load i8** %35, align 8
  %37 = call zeroext i8 @selected_fstype(i8* %36) nounwind readonly
  %toBool22 = icmp ne i8 %37, 0
  %toBool22not = xor i1 %toBool22, true
  %toBool22not23 = zext i1 %toBool22not to i8
  %toBool25 = icmp ne i8 %toBool22not23, 0
  br i1 %toBool25, label %bb29, label %bb26

bb26:                                             ; preds = %bb21
  %38 = load %struct.mount_entry** %me, align 8
  %39 = getelementptr inbounds %struct.mount_entry* %38, i32 0, i32 3
  %40 = load i8** %39, align 8
  %41 = call zeroext i8 @excluded_fstype(i8* %40) nounwind readonly
  %toBool27 = icmp ne i8 %41, 0
  br i1 %toBool27, label %bb29, label %bb28

bb28:                                             ; preds = %bb26
  %42 = load %struct.mount_entry** %me, align 8
  %43 = getelementptr inbounds %struct.mount_entry* %42, i32 0, i32 1
  %44 = load i8** %43, align 8
  %45 = call i32 @stat(i8* noalias %44, %struct.stat* noalias %buf) nounwind
  %46 = icmp eq i32 %45, -1
  br i1 %46, label %bb29, label %bb30

bb29:                                             ; preds = %klee_overshift_check.exit9, %bb28, %bb26, %bb21, %bb16
  %47 = load %struct.mount_entry** %me, align 8
  %48 = getelementptr inbounds %struct.mount_entry* %47, i32 0, i32 4
  %49 = load i64* %48, align 8
  %50 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  store i64 %49, i64* %50, align 8
  br label %bb64

bb30:                                             ; preds = %bb28
  %51 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  %52 = load i64* %51, align 8
  %53 = call %struct.devlist* @devlist_for_dev(i64 %52) nounwind
  store %struct.devlist* %53, %struct.devlist** %seen_dev, align 8
  %54 = load %struct.devlist** %seen_dev, align 8
  %55 = icmp ne %struct.devlist* %54, null
  br i1 %55, label %bb31, label %bb64

bb31:                                             ; preds = %bb30
  %56 = load %struct.devlist** %seen_dev, align 8
  %57 = getelementptr inbounds %struct.devlist* %56, i32 0, i32 1
  %58 = load %struct.mount_entry** %57, align 8
  %59 = getelementptr inbounds %struct.mount_entry* %58, i32 0, i32 1
  %60 = load i8** %59, align 8
  %61 = call i64 @strlen(i8* %60) nounwind readonly
  %62 = load %struct.mount_entry** %me, align 8
  %63 = getelementptr inbounds %struct.mount_entry* %62, i32 0, i32 1
  %64 = load i8** %63, align 8
  %65 = call i64 @strlen(i8* %64) nounwind readonly
  %66 = icmp ugt i64 %61, %65
  %67 = zext i1 %66 to i8
  store i8 %67, i8* %target_nearer_root, align 1
  %68 = load %struct.devlist** %seen_dev, align 8
  %69 = getelementptr inbounds %struct.devlist* %68, i32 0, i32 1
  %70 = load %struct.mount_entry** %69, align 8
  %71 = getelementptr inbounds %struct.mount_entry* %70, i32 0, i32 2
  %72 = load i8** %71, align 8
  %73 = icmp eq i8* %72, null
  br i1 %73, label %bb35, label %bb32

bb32:                                             ; preds = %bb31
  %74 = load %struct.mount_entry** %me, align 8
  %75 = getelementptr inbounds %struct.mount_entry* %74, i32 0, i32 2
  %76 = load i8** %75, align 8
  %77 = icmp eq i8* %76, null
  br i1 %77, label %bb35, label %bb33

bb33:                                             ; preds = %bb32
  %78 = load %struct.devlist** %seen_dev, align 8
  %79 = getelementptr inbounds %struct.devlist* %78, i32 0, i32 1
  %80 = load %struct.mount_entry** %79, align 8
  %81 = getelementptr inbounds %struct.mount_entry* %80, i32 0, i32 2
  %82 = load i8** %81, align 8
  %83 = call i64 @strlen(i8* %82) nounwind readonly
  %84 = load %struct.mount_entry** %me, align 8
  %85 = getelementptr inbounds %struct.mount_entry* %84, i32 0, i32 2
  %86 = load i8** %85, align 8
  %87 = call i64 @strlen(i8* %86) nounwind readonly
  %88 = icmp uge i64 %83, %87
  br i1 %88, label %bb35, label %bb34

bb34:                                             ; preds = %bb33
  store i32 1, i32* %iftmp.107, align 4
  br label %bb36

bb35:                                             ; preds = %bb33, %bb32, %bb31
  store i32 0, i32* %iftmp.107, align 4
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  %89 = load i32* %iftmp.107, align 4
  %90 = trunc i32 %89 to i8
  store i8 %90, i8* %source_below_root, align 1
  %91 = load i8* @print_grand_total, align 1
  %toBool37 = icmp ne i8 %91, 0
  %toBool37not = xor i1 %toBool37, true
  %toBool37not38 = zext i1 %toBool37not to i8
  %toBool40 = icmp ne i8 %toBool37not38, 0
  %toBool40not = xor i1 %toBool40, true
  %toBool40not41 = zext i1 %toBool40not to i8
  %toBool43 = icmp ne i8 %toBool40not41, 0
  br i1 %toBool43, label %bb48, label %bb44

bb44:                                             ; preds = %bb36
  %92 = load %struct.mount_entry** %me, align 8
  %93 = getelementptr inbounds %struct.mount_entry* %92, i32 0, i32 5
  %94 = load i64* %93, align 8
  %int_cast_to_i644 = bitcast i64 62 to i64
  %95 = icmp ult i64 %int_cast_to_i644, 64
  br i1 %95, label %klee_overshift_check.exit15, label %bb.i14

bb.i14:                                           ; preds = %bb44
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit15:                      ; preds = %bb44
  %96 = shl i64 %94, 62
  %int_cast_to_i645 = bitcast i64 63 to i64
  %97 = icmp ult i64 %int_cast_to_i645, 64
  br i1 %97, label %klee_overshift_check.exit17, label %bb.i16

bb.i16:                                           ; preds = %klee_overshift_check.exit15
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit17:                      ; preds = %klee_overshift_check.exit15
  %98 = lshr i64 %96, 63
  %99 = trunc i64 %98 to i1
  %100 = icmp eq i1 %99, false
  br i1 %100, label %bb48, label %bb45

bb45:                                             ; preds = %klee_overshift_check.exit17
  %101 = load %struct.devlist** %seen_dev, align 8
  %102 = getelementptr inbounds %struct.devlist* %101, i32 0, i32 1
  %103 = load %struct.mount_entry** %102, align 8
  %104 = getelementptr inbounds %struct.mount_entry* %103, i32 0, i32 5
  %105 = load i64* %104, align 8
  %int_cast_to_i646 = bitcast i64 62 to i64
  %106 = icmp ult i64 %int_cast_to_i646, 64
  br i1 %106, label %klee_overshift_check.exit19, label %bb.i18

bb.i18:                                           ; preds = %bb45
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit19:                      ; preds = %bb45
  %107 = shl i64 %105, 62
  %int_cast_to_i647 = bitcast i64 63 to i64
  %108 = icmp ult i64 %int_cast_to_i647, 64
  br i1 %108, label %klee_overshift_check.exit21, label %bb.i20

bb.i20:                                           ; preds = %klee_overshift_check.exit19
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit21:                      ; preds = %klee_overshift_check.exit19
  %109 = lshr i64 %107, 63
  %110 = trunc i64 %109 to i1
  %111 = icmp eq i1 %110, false
  br i1 %111, label %bb48, label %bb46

bb46:                                             ; preds = %klee_overshift_check.exit21
  %112 = load %struct.mount_entry** %me, align 8
  %113 = getelementptr inbounds %struct.mount_entry* %112, i32 0, i32 0
  %114 = load i8** %113, align 8
  %115 = load %struct.devlist** %seen_dev, align 8
  %116 = getelementptr inbounds %struct.devlist* %115, i32 0, i32 1
  %117 = load %struct.mount_entry** %116, align 8
  %118 = getelementptr inbounds %struct.mount_entry* %117, i32 0, i32 0
  %119 = load i8** %118, align 8
  %120 = call i32 @strcmp(i8* %119, i8* %114) nounwind readonly
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %bb48, label %bb64

bb48:                                             ; preds = %bb46, %klee_overshift_check.exit21, %klee_overshift_check.exit17, %bb36
  %122 = load %struct.mount_entry** %me, align 8
  %123 = getelementptr inbounds %struct.mount_entry* %122, i32 0, i32 0
  %124 = load i8** %123, align 8
  %125 = call i8* @strchr(i8* %124, i32 47) nounwind readonly
  %126 = icmp eq i8* %125, null
  br i1 %126, label %bb50, label %bb49

bb49:                                             ; preds = %bb48
  %127 = load %struct.devlist** %seen_dev, align 8
  %128 = getelementptr inbounds %struct.devlist* %127, i32 0, i32 1
  %129 = load %struct.mount_entry** %128, align 8
  %130 = getelementptr inbounds %struct.mount_entry* %129, i32 0, i32 0
  %131 = load i8** %130, align 8
  %132 = call i8* @strchr(i8* %131, i32 47) nounwind readonly
  %133 = icmp eq i8* %132, null
  br i1 %133, label %bb62, label %bb50

bb50:                                             ; preds = %bb49, %bb48
  %134 = load i8* %target_nearer_root, align 1
  %toBool51 = icmp ne i8 %134, 0
  %toBool51not = xor i1 %toBool51, true
  %toBool51not52 = zext i1 %toBool51not to i8
  %toBool54 = icmp ne i8 %toBool51not52, 0
  br i1 %toBool54, label %bb60, label %bb55

bb55:                                             ; preds = %bb50
  %135 = load i8* %source_below_root, align 1
  %toBool56 = icmp ne i8 %135, 0
  %toBool56not = xor i1 %toBool56, true
  %toBool56not57 = zext i1 %toBool56not to i8
  %toBool59 = icmp ne i8 %toBool56not57, 0
  br i1 %toBool59, label %bb62, label %bb60

bb60:                                             ; preds = %bb55, %bb50
  %136 = load %struct.mount_entry** %me, align 8
  %137 = getelementptr inbounds %struct.mount_entry* %136, i32 0, i32 0
  %138 = load i8** %137, align 8
  %139 = load %struct.devlist** %seen_dev, align 8
  %140 = getelementptr inbounds %struct.devlist* %139, i32 0, i32 1
  %141 = load %struct.mount_entry** %140, align 8
  %142 = getelementptr inbounds %struct.mount_entry* %141, i32 0, i32 0
  %143 = load i8** %142, align 8
  %144 = call i32 @strcmp(i8* %143, i8* %138) nounwind readonly
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %bb63, label %bb61

bb61:                                             ; preds = %bb60
  %146 = load %struct.devlist** %seen_dev, align 8
  %147 = getelementptr inbounds %struct.devlist* %146, i32 0, i32 1
  %148 = load %struct.mount_entry** %147, align 8
  %149 = getelementptr inbounds %struct.mount_entry* %148, i32 0, i32 1
  %150 = load i8** %149, align 8
  %151 = load %struct.mount_entry** %me, align 8
  %152 = getelementptr inbounds %struct.mount_entry* %151, i32 0, i32 1
  %153 = load i8** %152, align 8
  %154 = call i32 @strcmp(i8* %153, i8* %150) nounwind readonly
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %bb62, label %bb63

bb62:                                             ; preds = %bb61, %bb55, %bb49
  %156 = load %struct.devlist** %seen_dev, align 8
  %157 = getelementptr inbounds %struct.devlist* %156, i32 0, i32 1
  %158 = load %struct.mount_entry** %157, align 8
  store %struct.mount_entry* %158, %struct.mount_entry** %discard_me, align 8
  %159 = load %struct.devlist** %seen_dev, align 8
  %160 = getelementptr inbounds %struct.devlist* %159, i32 0, i32 1
  %161 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %161, %struct.mount_entry** %160, align 8
  br label %bb64

bb63:                                             ; preds = %bb61, %bb60
  %162 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %162, %struct.mount_entry** %discard_me, align 8
  br label %bb64

bb64:                                             ; preds = %bb46, %bb63, %bb62, %bb30, %bb29
  %163 = load %struct.mount_entry** %discard_me, align 8
  %164 = icmp ne %struct.mount_entry* %163, null
  br i1 %164, label %bb65, label %bb72

bb65:                                             ; preds = %bb64
  %165 = load %struct.mount_entry** %me, align 8
  %166 = getelementptr inbounds %struct.mount_entry* %165, i32 0, i32 6
  %167 = load %struct.mount_entry** %166, align 8
  store %struct.mount_entry* %167, %struct.mount_entry** %me, align 8
  %168 = load i8* %devices_only_addr, align 1
  %toBool66 = icmp ne i8 %168, 0
  %toBool66not = xor i1 %toBool66, true
  %toBool66not67 = zext i1 %toBool66not to i8
  %toBool69 = icmp ne i8 %toBool66not67, 0
  br i1 %toBool69, label %bb70, label %bb75

bb70:                                             ; preds = %bb65
  %169 = load %struct.mount_entry** %discard_me, align 8
  call void @free_mount_entry(%struct.mount_entry* %169) nounwind
  br label %bb75

bb72:                                             ; preds = %bb64
  %170 = call noalias i8* @xmalloc(i64 24) nounwind
  %171 = bitcast i8* %170 to %struct.devlist*
  store %struct.devlist* %171, %struct.devlist** %devlist, align 8
  %172 = load %struct.devlist** %devlist, align 8
  %173 = getelementptr inbounds %struct.devlist* %172, i32 0, i32 1
  %174 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %174, %struct.mount_entry** %173, align 8
  %175 = getelementptr inbounds %struct.stat* %buf, i32 0, i32 0
  %176 = load i64* %175, align 8
  %177 = load %struct.devlist** %devlist, align 8
  %178 = getelementptr inbounds %struct.devlist* %177, i32 0, i32 0
  store i64 %176, i64* %178, align 8
  %179 = load %struct.devlist** %devlist, align 8
  %180 = getelementptr inbounds %struct.devlist* %179, i32 0, i32 2
  %181 = load %struct.devlist** %device_list, align 8
  store %struct.devlist* %181, %struct.devlist** %180, align 8
  %182 = load %struct.devlist** %devlist, align 8
  store %struct.devlist* %182, %struct.devlist** %device_list, align 8
  %183 = load %struct.Hash_table** @devlist_table, align 8
  %184 = load %struct.devlist** %devlist, align 8
  %185 = bitcast %struct.devlist* %184 to i8*
  %186 = call i8* @hash_insert(%struct.Hash_table* %183, i8* %185) nounwind
  %187 = icmp eq i8* %186, null
  br i1 %187, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  call void @xalloc_die() noreturn nounwind
  unreachable

bb74:                                             ; preds = %bb72
  %188 = load %struct.mount_entry** %me, align 8
  %189 = getelementptr inbounds %struct.mount_entry* %188, i32 0, i32 6
  %190 = load %struct.mount_entry** %189, align 8
  store %struct.mount_entry* %190, %struct.mount_entry** %me, align 8
  br label %bb75

bb75:                                             ; preds = %bb65, %bb70, %bb74, %bb4
  %191 = load %struct.mount_entry** %me, align 8
  %192 = icmp ne %struct.mount_entry* %191, null
  br i1 %192, label %bb5, label %bb76

bb76:                                             ; preds = %bb75
  %193 = load i8* %devices_only_addr, align 1
  %toBool77 = icmp ne i8 %193, 0
  %toBool77not = xor i1 %toBool77, true
  %toBool77not78 = zext i1 %toBool77not to i8
  %toBool80 = icmp ne i8 %toBool77not78, 0
  br i1 %toBool80, label %bb81, label %return

bb81:                                             ; preds = %bb76
  store %struct.mount_entry* null, %struct.mount_entry** @mount_list, align 8
  br label %bb83

bb82:                                             ; preds = %bb83
  %194 = load %struct.devlist** %device_list, align 8
  %195 = getelementptr inbounds %struct.devlist* %194, i32 0, i32 1
  %196 = load %struct.mount_entry** %195, align 8
  store %struct.mount_entry* %196, %struct.mount_entry** %me, align 8
  %197 = load %struct.mount_entry** @mount_list, align 8
  %198 = load %struct.mount_entry** %me, align 8
  %199 = getelementptr inbounds %struct.mount_entry* %198, i32 0, i32 6
  store %struct.mount_entry* %197, %struct.mount_entry** %199, align 8
  %200 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %200, %struct.mount_entry** @mount_list, align 8
  %201 = load %struct.devlist** %device_list, align 8
  %202 = getelementptr inbounds %struct.devlist* %201, i32 0, i32 2
  %203 = load %struct.devlist** %202, align 8
  store %struct.devlist* %203, %struct.devlist** %device_list, align 8
  br label %bb83

bb83:                                             ; preds = %bb82, %bb81
  %204 = load %struct.devlist** %device_list, align 8
  %205 = icmp ne %struct.devlist* %204, null
  br i1 %205, label %bb82, label %bb84

bb84:                                             ; preds = %bb83
  %206 = load %struct.Hash_table** @devlist_table, align 8
  call void @hash_free(%struct.Hash_table* %206) nounwind
  store %struct.Hash_table* null, %struct.Hash_table** @devlist_table, align 8
  br label %return

return:                                           ; preds = %bb76, %bb84
  ret void
}

define internal %struct.mount_entry* @me_for_dev(i64 %dev) nounwind readonly {
entry:
  %dev_addr = alloca i64, align 8
  %retval = alloca %struct.mount_entry*
  %0 = alloca %struct.mount_entry*
  %dl = alloca %struct.devlist*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %dev, i64* %dev_addr
  %1 = load i64* %dev_addr, align 8
  %2 = call %struct.devlist* @devlist_for_dev(i64 %1) nounwind
  store %struct.devlist* %2, %struct.devlist** %dl, align 8
  %3 = load %struct.devlist** %dl, align 8
  %4 = icmp ne %struct.devlist* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.devlist** %dl, align 8
  %6 = getelementptr inbounds %struct.devlist* %5, i32 0, i32 1
  %7 = load %struct.mount_entry** %6, align 8
  store %struct.mount_entry* %7, %struct.mount_entry** %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.mount_entry* null, %struct.mount_entry** %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %8 = load %struct.mount_entry** %0, align 8
  store %struct.mount_entry* %8, %struct.mount_entry** %retval, align 8
  %retval3 = load %struct.mount_entry** %retval
  ret %struct.mount_entry* %retval3
}

define internal zeroext i8 @known_value(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = icmp ule i64 %1, -3
  %3 = zext i1 %2 to i32
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal i8* @df_readable(i8 zeroext %negative, i64 %n, i8* %buf, i64 %input_units, i64 %output_units) nounwind {
entry:
  %negative_addr = alloca i8, align 1
  %n_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %input_units_addr = alloca i64, align 8
  %output_units_addr = alloca i64, align 8
  %retval = alloca i8*
  %iftmp.113 = alloca i64
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8 %negative, i8* %negative_addr
  store i64 %n, i64* %n_addr
  store i8* %buf, i8** %buf_addr
  store i64 %input_units, i64* %input_units_addr
  store i64 %output_units, i64* %output_units_addr
  %1 = load i64* %n_addr, align 8
  %2 = call zeroext i8 @known_value(i64 %1) nounwind
  %toBool = icmp ne i8 %2, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool3not = xor i1 %toBool3, true
  %toBool3not4 = zext i1 %toBool3not to i8
  %toBool6 = icmp ne i8 %toBool3not4, 0
  br i1 %toBool6, label %bb15, label %bb

bb:                                               ; preds = %entry
  %3 = load i8* %negative_addr, align 1
  %toBool7 = icmp ne i8 %3, 0
  %toBool7not = xor i1 %toBool7, true
  %toBool7not8 = zext i1 %toBool7not to i8
  %toBool10 = icmp ne i8 %toBool7not8, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %bb15, label %bb14

bb14:                                             ; preds = %bb
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %0, align 8
  br label %bb23

bb15:                                             ; preds = %bb, %entry
  %4 = load i32* @human_output_opts, align 4
  %5 = load i8* %negative_addr, align 1
  %6 = zext i8 %5 to i32
  %7 = load i8** %buf_addr, align 8
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8* %7, i64 %8
  %10 = load i8* %negative_addr, align 1
  %toBool16 = icmp ne i8 %10, 0
  %11 = load i64* %n_addr, align 8
  br i1 %toBool16, label %bb17, label %bb18

bb17:                                             ; preds = %bb15
  %12 = sub i64 0, %11
  store i64 %12, i64* %iftmp.113, align 8
  br label %bb19

bb18:                                             ; preds = %bb15
  store i64 %11, i64* %iftmp.113, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %13 = load i64* %iftmp.113, align 8
  %14 = load i64* %input_units_addr, align 8
  %15 = load i64* %output_units_addr, align 8
  %16 = call i8* @human_readable(i64 %13, i8* %9, i32 %4, i64 %14, i64 %15) nounwind
  store i8* %16, i8** %p, align 8
  %17 = load i8* %negative_addr, align 1
  %toBool20 = icmp ne i8 %17, 0
  br i1 %toBool20, label %bb21, label %bb22

bb21:                                             ; preds = %bb19
  %18 = load i8** %p, align 8
  %19 = getelementptr inbounds i8* %18, i64 -1
  store i8* %19, i8** %p, align 8
  %20 = load i8** %p, align 8
  store i8 45, i8* %20, align 1
  br label %bb22

bb22:                                             ; preds = %bb21, %bb19
  %21 = load i8** %p, align 8
  store i8* %21, i8** %0, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb14
  %22 = load i8** %0, align 8
  store i8* %22, i8** %retval, align 8
  %retval24 = load i8** %retval
  ret i8* %retval24
}

define internal void @add_uint_with_neg_flag(i64* %dest, i8* %dest_neg, i64 %src, i8 zeroext %src_neg) nounwind {
entry:
  %dest_addr = alloca i64*, align 8
  %dest_neg_addr = alloca i8*, align 8
  %src_addr = alloca i64, align 8
  %src_neg_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  store i64* %dest, i64** %dest_addr
  store i8* %dest_neg, i8** %dest_neg_addr
  store i64 %src, i64* %src_addr
  store i8 %src_neg, i8* %src_neg_addr
  %0 = load i8** %dest_neg_addr, align 8
  %1 = load i8* %0, align 1
  %toBool = icmp ne i8 %1, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %2 = load i8* %src_neg_addr, align 1
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool4 = icmp ne i8 %2, 0
  %3 = xor i1 %toBool3, %toBool4
  %4 = zext i1 %3 to i8
  %toBool5 = icmp ne i8 %4, 0
  br i1 %toBool5, label %bb, label %bb6

bb:                                               ; preds = %entry
  %5 = load i64** %dest_addr, align 8
  %6 = load i64* %5, align 8
  %7 = load i64* %src_addr, align 8
  %8 = add i64 %6, %7
  %9 = load i64** %dest_addr, align 8
  store i64 %8, i64* %9, align 8
  br label %return

bb6:                                              ; preds = %entry
  %10 = load i8** %dest_neg_addr, align 8
  %11 = load i8* %10, align 1
  %toBool7 = icmp ne i8 %11, 0
  br i1 %toBool7, label %bb8, label %bb9

bb8:                                              ; preds = %bb6
  %12 = load i64** %dest_addr, align 8
  %13 = load i64* %12, align 8
  %14 = sub i64 0, %13
  %15 = load i64** %dest_addr, align 8
  store i64 %14, i64* %15, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb6
  %16 = load i8* %src_neg_addr, align 1
  %toBool10 = icmp ne i8 %16, 0
  br i1 %toBool10, label %bb11, label %bb12

bb11:                                             ; preds = %bb9
  %17 = load i64* %src_addr, align 8
  %18 = sub i64 0, %17
  store i64 %18, i64* %src_addr, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb9
  %19 = load i64** %dest_addr, align 8
  %20 = load i64* %19, align 8
  %21 = load i64* %src_addr, align 8
  %22 = icmp ugt i64 %20, %21
  %23 = load i64** %dest_addr, align 8
  %24 = load i64* %23, align 8
  %25 = load i64* %src_addr, align 8
  br i1 %22, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %26 = sub i64 %24, %25
  %27 = load i64** %dest_addr, align 8
  store i64 %26, i64* %27, align 8
  br label %bb15

bb14:                                             ; preds = %bb12
  %28 = sub i64 %25, %24
  %29 = load i64** %dest_addr, align 8
  store i64 %28, i64* %29, align 8
  %30 = load i8** %dest_neg_addr, align 8
  %31 = load i8* %src_neg_addr, align 1
  store i8 %31, i8* %30, align 1
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %32 = load i8** %dest_neg_addr, align 8
  %33 = load i8* %32, align 1
  %toBool16 = icmp ne i8 %33, 0
  br i1 %toBool16, label %bb17, label %return

bb17:                                             ; preds = %bb15
  %34 = load i64** %dest_addr, align 8
  %35 = load i64* %34, align 8
  %36 = sub i64 0, %35
  %37 = load i64** %dest_addr, align 8
  store i64 %36, i64* %37, align 8
  br label %return

return:                                           ; preds = %bb, %bb15, %bb17
  ret void
}

define internal zeroext i8 @has_uuid_suffix(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.114 = alloca i32
  %0 = alloca i32
  %len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %len, align 8
  %3 = load i64* %len, align 8
  %4 = icmp ule i64 %3, 36
  br i1 %4, label %bb2, label %bb

bb:                                               ; preds = %entry
  %5 = load i8** %s_addr, align 8
  %6 = load i64* %len, align 8
  %7 = getelementptr inbounds i8* %5, i64 %6
  %8 = getelementptr inbounds i8* %7, i64 -36
  %9 = call i64 @strspn(i8* %8, i8* getelementptr inbounds ([24 x i8]* @.str53, i64 0, i64 0)) nounwind readonly
  %10 = icmp ne i64 %9, 36
  br i1 %10, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.114, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.114, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %iftmp.114, align 4
  %12 = trunc i32 %11 to i8
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal void @get_field_values(%struct.field_values_t* %bv, %struct.field_values_t* %iv, %struct.fs_usage* %fsu) nounwind {
entry:
  %bv_addr = alloca %struct.field_values_t*, align 8
  %iv_addr = alloca %struct.field_values_t*, align 8
  %fsu_addr = alloca %struct.fs_usage*, align 8
  %iftmp.116 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.field_values_t* %bv, %struct.field_values_t** %bv_addr
  store %struct.field_values_t* %iv, %struct.field_values_t** %iv_addr
  store %struct.fs_usage* %fsu, %struct.fs_usage** %fsu_addr
  %0 = load %struct.field_values_t** %iv_addr, align 8
  %1 = getelementptr inbounds %struct.field_values_t* %0, i32 0, i32 1
  store i64 1, i64* %1, align 8
  %2 = load %struct.field_values_t** %iv_addr, align 8
  %3 = getelementptr inbounds %struct.field_values_t* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  %5 = load %struct.field_values_t** %iv_addr, align 8
  %6 = getelementptr inbounds %struct.field_values_t* %5, i32 0, i32 0
  store i64 %4, i64* %6, align 8
  %7 = load %struct.fs_usage** %fsu_addr, align 8
  %8 = getelementptr inbounds %struct.fs_usage* %7, i32 0, i32 5
  %9 = load i64* %8, align 8
  %10 = load %struct.field_values_t** %iv_addr, align 8
  %11 = getelementptr inbounds %struct.field_values_t* %10, i32 0, i32 2
  store i64 %9, i64* %11, align 8
  %12 = load %struct.fs_usage** %fsu_addr, align 8
  %13 = getelementptr inbounds %struct.fs_usage* %12, i32 0, i32 6
  %14 = load i64* %13, align 8
  %15 = load %struct.field_values_t** %iv_addr, align 8
  %16 = getelementptr inbounds %struct.field_values_t* %15, i32 0, i32 5
  store i64 %14, i64* %16, align 8
  %17 = load %struct.field_values_t** %iv_addr, align 8
  %18 = getelementptr inbounds %struct.field_values_t* %17, i32 0, i32 5
  %19 = load i64* %18, align 8
  %20 = load %struct.field_values_t** %iv_addr, align 8
  %21 = getelementptr inbounds %struct.field_values_t* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.field_values_t** %iv_addr, align 8
  %23 = getelementptr inbounds %struct.field_values_t* %22, i32 0, i32 4
  store i8 0, i8* %23, align 8
  %24 = load %struct.field_values_t** %iv_addr, align 8
  %25 = getelementptr inbounds %struct.field_values_t* %24, i32 0, i32 6
  store i64 -1, i64* %25, align 8
  %26 = load %struct.field_values_t** %iv_addr, align 8
  %27 = getelementptr inbounds %struct.field_values_t* %26, i32 0, i32 7
  store i8 0, i8* %27, align 8
  %28 = load %struct.field_values_t** %iv_addr, align 8
  %29 = getelementptr inbounds %struct.field_values_t* %28, i32 0, i32 2
  %30 = load i64* %29, align 8
  %31 = call zeroext i8 @known_value(i64 %30) nounwind
  %toBool = icmp ne i8 %31, 0
  br i1 %toBool, label %bb, label %bb3

bb:                                               ; preds = %entry
  %32 = load %struct.field_values_t** %iv_addr, align 8
  %33 = getelementptr inbounds %struct.field_values_t* %32, i32 0, i32 5
  %34 = load i64* %33, align 8
  %35 = call zeroext i8 @known_value(i64 %34) nounwind
  %toBool1 = icmp ne i8 %35, 0
  br i1 %toBool1, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  %36 = load %struct.field_values_t** %iv_addr, align 8
  %37 = getelementptr inbounds %struct.field_values_t* %36, i32 0, i32 2
  %38 = load i64* %37, align 8
  %39 = load %struct.field_values_t** %iv_addr, align 8
  %40 = getelementptr inbounds %struct.field_values_t* %39, i32 0, i32 5
  %41 = load i64* %40, align 8
  %42 = sub i64 %38, %41
  %43 = load %struct.field_values_t** %iv_addr, align 8
  %44 = getelementptr inbounds %struct.field_values_t* %43, i32 0, i32 6
  store i64 %42, i64* %44, align 8
  %45 = load %struct.field_values_t** %iv_addr, align 8
  %46 = getelementptr inbounds %struct.field_values_t* %45, i32 0, i32 2
  %47 = load i64* %46, align 8
  %48 = load %struct.field_values_t** %iv_addr, align 8
  %49 = getelementptr inbounds %struct.field_values_t* %48, i32 0, i32 5
  %50 = load i64* %49, align 8
  %51 = icmp ult i64 %47, %50
  %52 = zext i1 %51 to i8
  %53 = load %struct.field_values_t** %iv_addr, align 8
  %54 = getelementptr inbounds %struct.field_values_t* %53, i32 0, i32 7
  store i8 %52, i8* %54, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb, %entry
  %55 = load %struct.fs_usage** %fsu_addr, align 8
  %56 = getelementptr inbounds %struct.fs_usage* %55, i32 0, i32 0
  %57 = load i64* %56, align 8
  %58 = load %struct.field_values_t** %bv_addr, align 8
  %59 = getelementptr inbounds %struct.field_values_t* %58, i32 0, i32 0
  store i64 %57, i64* %59, align 8
  %60 = load i64* @output_block_size, align 8
  %61 = load %struct.field_values_t** %bv_addr, align 8
  %62 = getelementptr inbounds %struct.field_values_t* %61, i32 0, i32 1
  store i64 %60, i64* %62, align 8
  %63 = load %struct.fs_usage** %fsu_addr, align 8
  %64 = getelementptr inbounds %struct.fs_usage* %63, i32 0, i32 1
  %65 = load i64* %64, align 8
  %66 = load %struct.field_values_t** %bv_addr, align 8
  %67 = getelementptr inbounds %struct.field_values_t* %66, i32 0, i32 2
  store i64 %65, i64* %67, align 8
  %68 = load %struct.fs_usage** %fsu_addr, align 8
  %69 = getelementptr inbounds %struct.fs_usage* %68, i32 0, i32 3
  %70 = load i64* %69, align 8
  %71 = load %struct.field_values_t** %bv_addr, align 8
  %72 = getelementptr inbounds %struct.field_values_t* %71, i32 0, i32 3
  store i64 %70, i64* %72, align 8
  %73 = load %struct.fs_usage** %fsu_addr, align 8
  %74 = getelementptr inbounds %struct.fs_usage* %73, i32 0, i32 2
  %75 = load i64* %74, align 8
  %76 = load %struct.field_values_t** %bv_addr, align 8
  %77 = getelementptr inbounds %struct.field_values_t* %76, i32 0, i32 5
  store i64 %75, i64* %77, align 8
  %78 = load %struct.fs_usage** %fsu_addr, align 8
  %79 = getelementptr inbounds %struct.fs_usage* %78, i32 0, i32 4
  %80 = load i8* %79, align 8
  %toBool4 = icmp ne i8 %80, 0
  %toBool4not = xor i1 %toBool4, true
  %toBool4not5 = zext i1 %toBool4not to i8
  %toBool7 = icmp ne i8 %toBool4not5, 0
  br i1 %toBool7, label %bb14, label %bb8

bb8:                                              ; preds = %bb3
  %81 = load %struct.fs_usage** %fsu_addr, align 8
  %82 = getelementptr inbounds %struct.fs_usage* %81, i32 0, i32 3
  %83 = load i64* %82, align 8
  %84 = call zeroext i8 @known_value(i64 %83) nounwind
  %toBool9 = icmp ne i8 %84, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb14, label %bb13

bb13:                                             ; preds = %bb8
  store i32 1, i32* %iftmp.116, align 4
  br label %bb15

bb14:                                             ; preds = %bb8, %bb3
  store i32 0, i32* %iftmp.116, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %85 = load i32* %iftmp.116, align 4
  %86 = trunc i32 %85 to i8
  %87 = load %struct.field_values_t** %bv_addr, align 8
  %88 = getelementptr inbounds %struct.field_values_t* %87, i32 0, i32 4
  store i8 %86, i8* %88, align 8
  %89 = load %struct.field_values_t** %bv_addr, align 8
  %90 = getelementptr inbounds %struct.field_values_t* %89, i32 0, i32 6
  store i64 -1, i64* %90, align 8
  %91 = load %struct.field_values_t** %bv_addr, align 8
  %92 = getelementptr inbounds %struct.field_values_t* %91, i32 0, i32 7
  store i8 0, i8* %92, align 8
  %93 = load %struct.field_values_t** %bv_addr, align 8
  %94 = getelementptr inbounds %struct.field_values_t* %93, i32 0, i32 2
  %95 = load i64* %94, align 8
  %96 = call zeroext i8 @known_value(i64 %95) nounwind
  %toBool16 = icmp ne i8 %96, 0
  br i1 %toBool16, label %bb17, label %return

bb17:                                             ; preds = %bb15
  %97 = load %struct.field_values_t** %bv_addr, align 8
  %98 = getelementptr inbounds %struct.field_values_t* %97, i32 0, i32 5
  %99 = load i64* %98, align 8
  %100 = call zeroext i8 @known_value(i64 %99) nounwind
  %toBool18 = icmp ne i8 %100, 0
  br i1 %toBool18, label %bb19, label %return

bb19:                                             ; preds = %bb17
  %101 = load %struct.field_values_t** %bv_addr, align 8
  %102 = getelementptr inbounds %struct.field_values_t* %101, i32 0, i32 2
  %103 = load i64* %102, align 8
  %104 = load %struct.field_values_t** %bv_addr, align 8
  %105 = getelementptr inbounds %struct.field_values_t* %104, i32 0, i32 5
  %106 = load i64* %105, align 8
  %107 = sub i64 %103, %106
  %108 = load %struct.field_values_t** %bv_addr, align 8
  %109 = getelementptr inbounds %struct.field_values_t* %108, i32 0, i32 6
  store i64 %107, i64* %109, align 8
  %110 = load %struct.field_values_t** %bv_addr, align 8
  %111 = getelementptr inbounds %struct.field_values_t* %110, i32 0, i32 2
  %112 = load i64* %111, align 8
  %113 = load %struct.field_values_t** %bv_addr, align 8
  %114 = getelementptr inbounds %struct.field_values_t* %113, i32 0, i32 5
  %115 = load i64* %114, align 8
  %116 = icmp ult i64 %112, %115
  %117 = zext i1 %116 to i8
  %118 = load %struct.field_values_t** %bv_addr, align 8
  %119 = getelementptr inbounds %struct.field_values_t* %118, i32 0, i32 7
  store i8 %117, i8* %119, align 8
  br label %return

return:                                           ; preds = %bb15, %bb17, %bb19
  ret void
}

define internal void @add_to_grand_total(%struct.field_values_t* %bv, %struct.field_values_t* %iv) nounwind {
entry:
  %bv_addr = alloca %struct.field_values_t*, align 8
  %iv_addr = alloca %struct.field_values_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.field_values_t* %bv, %struct.field_values_t** %bv_addr
  store %struct.field_values_t* %iv, %struct.field_values_t** %iv_addr
  %0 = load %struct.field_values_t** %iv_addr, align 8
  %1 = getelementptr inbounds %struct.field_values_t* %0, i32 0, i32 2
  %2 = load i64* %1, align 8
  %3 = call zeroext i8 @known_value(i64 %2) nounwind
  %toBool = icmp ne i8 %3, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 5), align 8
  %5 = load %struct.field_values_t** %iv_addr, align 8
  %6 = getelementptr inbounds %struct.field_values_t* %5, i32 0, i32 2
  %7 = load i64* %6, align 8
  %8 = add i64 %4, %7
  store i64 %8, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 5), align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %9 = load %struct.field_values_t** %iv_addr, align 8
  %10 = getelementptr inbounds %struct.field_values_t* %9, i32 0, i32 3
  %11 = load i64* %10, align 8
  %12 = call zeroext i8 @known_value(i64 %11) nounwind
  %toBool2 = icmp ne i8 %12, 0
  br i1 %toBool2, label %bb3, label %bb4

bb3:                                              ; preds = %bb1
  %13 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 6), align 8
  %14 = load %struct.field_values_t** %iv_addr, align 8
  %15 = getelementptr inbounds %struct.field_values_t* %14, i32 0, i32 3
  %16 = load i64* %15, align 8
  %17 = add i64 %13, %16
  store i64 %17, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 6), align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb1
  %18 = load %struct.field_values_t** %bv_addr, align 8
  %19 = getelementptr inbounds %struct.field_values_t* %18, i32 0, i32 2
  %20 = load i64* %19, align 8
  %21 = call zeroext i8 @known_value(i64 %20) nounwind
  %toBool5 = icmp ne i8 %21, 0
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb4
  %22 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 1), align 8
  %23 = load %struct.field_values_t** %bv_addr, align 8
  %24 = getelementptr inbounds %struct.field_values_t* %23, i32 0, i32 0
  %25 = load i64* %24, align 8
  %26 = load %struct.field_values_t** %bv_addr, align 8
  %27 = getelementptr inbounds %struct.field_values_t* %26, i32 0, i32 2
  %28 = load i64* %27, align 8
  %29 = mul i64 %25, %28
  %30 = add i64 %22, %29
  store i64 %30, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 1), align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %31 = load %struct.field_values_t** %bv_addr, align 8
  %32 = getelementptr inbounds %struct.field_values_t* %31, i32 0, i32 5
  %33 = load i64* %32, align 8
  %34 = call zeroext i8 @known_value(i64 %33) nounwind
  %toBool8 = icmp ne i8 %34, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  %35 = load i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 2), align 8
  %36 = load %struct.field_values_t** %bv_addr, align 8
  %37 = getelementptr inbounds %struct.field_values_t* %36, i32 0, i32 0
  %38 = load i64* %37, align 8
  %39 = load %struct.field_values_t** %bv_addr, align 8
  %40 = getelementptr inbounds %struct.field_values_t* %39, i32 0, i32 5
  %41 = load i64* %40, align 8
  %42 = mul i64 %38, %41
  %43 = add i64 %35, %42
  store i64 %43, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 2), align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %44 = load %struct.field_values_t** %bv_addr, align 8
  %45 = getelementptr inbounds %struct.field_values_t* %44, i32 0, i32 3
  %46 = load i64* %45, align 8
  %47 = call zeroext i8 @known_value(i64 %46) nounwind
  %toBool11 = icmp ne i8 %47, 0
  br i1 %toBool11, label %bb12, label %return

bb12:                                             ; preds = %bb10
  %48 = load %struct.field_values_t** %bv_addr, align 8
  %49 = getelementptr inbounds %struct.field_values_t* %48, i32 0, i32 4
  %50 = load i8* %49, align 8
  %51 = zext i8 %50 to i32
  %52 = load %struct.field_values_t** %bv_addr, align 8
  %53 = getelementptr inbounds %struct.field_values_t* %52, i32 0, i32 0
  %54 = load i64* %53, align 8
  %55 = load %struct.field_values_t** %bv_addr, align 8
  %56 = getelementptr inbounds %struct.field_values_t* %55, i32 0, i32 3
  %57 = load i64* %56, align 8
  %58 = mul i64 %54, %57
  %59 = trunc i32 %51 to i8
  call void @add_uint_with_neg_flag(i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 3), i8* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 4), i64 %58, i8 zeroext %59) nounwind
  br label %return

return:                                           ; preds = %bb10, %bb12
  ret void
}

define internal void @get_dev(i8* %disk, i8* %mount_point, i8* %file, i8* %stat_file, i8* %fstype, i8 zeroext %me_dummy, i8 zeroext %me_remote, %struct.fs_usage* %force_fsu, i8 zeroext %process_all) nounwind {
entry:
  %disk_addr = alloca i8*, align 8
  %mount_point_addr = alloca i8*, align 8
  %file_addr = alloca i8*, align 8
  %stat_file_addr = alloca i8*, align 8
  %fstype_addr = alloca i8*, align 8
  %me_dummy_addr = alloca i8, align 1
  %me_remote_addr = alloca i8, align 1
  %force_fsu_addr = alloca %struct.fs_usage*, align 8
  %process_all_addr = alloca i8, align 1
  %iftmp.135 = alloca i64
  %iftmp.130 = alloca double
  %iftmp.129 = alloca double
  %iftmp.128 = alloca double
  %iftmp.120 = alloca i8*
  %fsu = alloca %struct.fs_usage
  %dev_name = alloca i8*
  %resolved_dev = alloca i8*
  %block_values = alloca %struct.field_values_t
  %inode_values = alloca %struct.field_values_t
  %col = alloca i64
  %sb = alloca %struct.stat
  %dev_me = alloca %struct.mount_entry*
  %buf = alloca [653 x i8]
  %cell = alloca i8*
  %v = alloca %struct.field_values_t*
  %pct = alloca double
  %u100 = alloca i64
  %nonroot_total = alloca i64
  %u = alloca double
  %a = alloca double
  %nonroot_total134 = alloca double
  %lipct = alloca i64
  %ipct = alloca double
  %"alloca point" = bitcast i32 0 to i32
  store i8* %disk, i8** %disk_addr
  store i8* %mount_point, i8** %mount_point_addr
  store i8* %file, i8** %file_addr
  store i8* %stat_file, i8** %stat_file_addr
  store i8* %fstype, i8** %fstype_addr
  store i8 %me_dummy, i8* %me_dummy_addr
  store i8 %me_remote, i8* %me_remote_addr
  store %struct.fs_usage* %force_fsu, %struct.fs_usage** %force_fsu_addr
  store i8 %process_all, i8* %process_all_addr
  %0 = load i8* %me_remote_addr, align 1
  %toBool = icmp ne i8 %0, 0
  %1 = load i8* @show_local_fs, align 1
  %toBool1 = icmp ne i8 %1, 0
  %or.cond = and i1 %toBool, %toBool1
  br i1 %or.cond, label %return, label %bb2

bb2:                                              ; preds = %entry
  %2 = load i8* %me_dummy_addr, align 1
  %toBool3 = icmp ne i8 %2, 0
  br i1 %toBool3, label %bb4, label %bb14

bb4:                                              ; preds = %bb2
  %3 = load i8* @show_all_fs, align 1
  %toBool5 = icmp ne i8 %3, 0
  %toBool5not = xor i1 %toBool5, true
  %toBool5not6 = zext i1 %toBool5not to i8
  %toBool8 = icmp ne i8 %toBool5not6, 0
  br i1 %toBool8, label %bb9, label %bb14

bb9:                                              ; preds = %bb4
  %4 = load i8* @show_listed_fs, align 1
  %toBool10 = icmp ne i8 %4, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %return, label %bb14

bb14:                                             ; preds = %bb9, %bb4, %bb2
  %5 = load i8** %fstype_addr, align 8
  %6 = call zeroext i8 @selected_fstype(i8* %5) nounwind readonly
  %toBool15 = icmp ne i8 %6, 0
  %toBool15not = xor i1 %toBool15, true
  %toBool15not16 = zext i1 %toBool15not to i8
  %toBool18 = icmp ne i8 %toBool15not16, 0
  br i1 %toBool18, label %return, label %bb19

bb19:                                             ; preds = %bb14
  %7 = load i8** %fstype_addr, align 8
  %8 = call zeroext i8 @excluded_fstype(i8* %7) nounwind readonly
  %toBool20 = icmp ne i8 %8, 0
  br i1 %toBool20, label %return, label %bb22

bb22:                                             ; preds = %bb19
  %9 = load %struct.fs_usage** %force_fsu_addr, align 8
  %10 = icmp eq %struct.fs_usage* %9, null
  br i1 %10, label %bb23, label %bb25

bb23:                                             ; preds = %bb22
  %11 = load i8** %mount_point_addr, align 8
  %12 = icmp ne i8* %11, null
  br i1 %12, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %13 = load i8** %mount_point_addr, align 8
  %14 = getelementptr inbounds i8* %13, i64 0
  %15 = load i8* %14, align 1
  %16 = icmp ne i8 %15, 47
  br i1 %16, label %return, label %bb25

bb25:                                             ; preds = %bb24, %bb23, %bb22
  %17 = load i8** %stat_file_addr, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb26, label %bb30

bb26:                                             ; preds = %bb25
  %19 = load i8** %mount_point_addr, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  %21 = load i8** %mount_point_addr, align 8
  store i8* %21, i8** %iftmp.120, align 8
  br label %bb29

bb28:                                             ; preds = %bb26
  %22 = load i8** %disk_addr, align 8
  store i8* %22, i8** %iftmp.120, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %23 = load i8** %iftmp.120, align 8
  store i8* %23, i8** %stat_file_addr, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb25
  %24 = load %struct.fs_usage** %force_fsu_addr, align 8
  %25 = icmp ne %struct.fs_usage* %24, null
  br i1 %25, label %bb31, label %bb32

bb31:                                             ; preds = %bb30
  %26 = load %struct.fs_usage** %force_fsu_addr, align 8
  %27 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 0
  %28 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 0
  %29 = load i64* %28, align 8
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %31 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 1
  %32 = load i64* %31, align 8
  store i64 %32, i64* %30, align 8
  %33 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  %34 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 2
  %35 = load i64* %34, align 8
  store i64 %35, i64* %33, align 8
  %36 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  %37 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 3
  %38 = load i64* %37, align 8
  store i64 %38, i64* %36, align 8
  %39 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 4
  %40 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 4
  %41 = load i8* %40, align 8
  store i8 %41, i8* %39, align 8
  %42 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  %43 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 5
  %44 = load i64* %43, align 8
  store i64 %44, i64* %42, align 8
  %45 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  %46 = getelementptr inbounds %struct.fs_usage* %26, i32 0, i32 6
  %47 = load i64* %46, align 8
  store i64 %47, i64* %45, align 8
  br label %bb61

bb32:                                             ; preds = %bb30
  %48 = load i8** %stat_file_addr, align 8
  %49 = load i8** %disk_addr, align 8
  %50 = call i32 @get_fs_usage(i8* %48, i8* %49, %struct.fs_usage* %fsu) nounwind
  %51 = icmp ne i32 %50, 0
  %52 = load i8* %process_all_addr, align 1
  %toBool34 = icmp ne i8 %52, 0
  br i1 %51, label %bb33, label %bb47

bb33:                                             ; preds = %bb32
  %toBool34not = xor i1 %toBool34, true
  %toBool34not35 = zext i1 %toBool34not to i8
  %toBool37 = icmp ne i8 %toBool34not35, 0
  br i1 %toBool37, label %bb46, label %bb38

bb38:                                             ; preds = %bb33
  %53 = call i32* @__errno_location() nounwind readnone
  %54 = load i32* %53, align 4
  %55 = icmp eq i32 %54, 13
  br i1 %55, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  %56 = call i32* @__errno_location() nounwind readnone
  %57 = load i32* %56, align 4
  %58 = icmp eq i32 %57, 2
  br i1 %58, label %bb40, label %bb46

bb40:                                             ; preds = %bb39, %bb38
  %59 = load i8* @show_all_fs, align 1
  %toBool41 = icmp ne i8 %59, 0
  %toBool41not = xor i1 %toBool41, true
  %toBool41not42 = zext i1 %toBool41not to i8
  %toBool44 = icmp ne i8 %toBool41not42, 0
  br i1 %toBool44, label %return, label %bb45

bb45:                                             ; preds = %bb40
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %fstype_addr, align 8
  %60 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 4
  store i8 0, i8* %60, align 8
  %61 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  store i64 -1, i64* %61, align 8
  %62 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  %63 = load i64* %62, align 8
  %64 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  %66 = load i64* %65, align 8
  %67 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  %69 = load i64* %68, align 8
  %70 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  store i64 %69, i64* %70, align 8
  %71 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  %72 = load i64* %71, align 8
  %73 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  store i64 %72, i64* %73, align 8
  %74 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %75 = load i64* %74, align 8
  %76 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 0
  store i64 %75, i64* %76, align 8
  br label %bb61

bb46:                                             ; preds = %bb39, %bb33
  %77 = load i8** %stat_file_addr, align 8
  %78 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %77) nounwind
  %79 = call i32* @__errno_location() nounwind readnone
  %80 = load i32* %79, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %80, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %78) nounwind
  store i32 1, i32* @exit_status, align 4
  br label %return

bb47:                                             ; preds = %bb32
  %81 = load i8* @show_all_fs, align 1
  %toBool50 = icmp ne i8 %81, 0
  %or.cond9 = and i1 %toBool34, %toBool50
  br i1 %or.cond9, label %bb51, label %bb61

bb51:                                             ; preds = %bb47
  %82 = load i8** %stat_file_addr, align 8
  %83 = call i32 @stat(i8* noalias %82, %struct.stat* noalias %sb) nounwind
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %bb52, label %bb61

bb52:                                             ; preds = %bb51
  %85 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 0
  %86 = load i64* %85, align 8
  %87 = call %struct.mount_entry* @me_for_dev(i64 %86) nounwind readonly
  store %struct.mount_entry* %87, %struct.mount_entry** %dev_me, align 8
  %88 = load %struct.mount_entry** %dev_me, align 8
  %89 = icmp ne %struct.mount_entry* %88, null
  br i1 %89, label %bb53, label %bb61

bb53:                                             ; preds = %bb52
  %90 = load %struct.mount_entry** %dev_me, align 8
  %91 = getelementptr inbounds %struct.mount_entry* %90, i32 0, i32 0
  %92 = load i8** %91, align 8
  %93 = load i8** %disk_addr, align 8
  %94 = call i32 @strcmp(i8* %92, i8* %93) nounwind readonly
  %95 = icmp ne i32 %94, 0
  br i1 %95, label %bb54, label %bb61

bb54:                                             ; preds = %bb53
  %96 = load %struct.mount_entry** %dev_me, align 8
  %97 = getelementptr inbounds %struct.mount_entry* %96, i32 0, i32 5
  %98 = load i64* %97, align 8
  %int_cast_to_i642 = bitcast i64 62 to i64
  %99 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %99, label %klee_overshift_check.exit, label %bb.i6

bb.i6:                                            ; preds = %bb54
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb54
  %100 = shl i64 %98, 62
  %int_cast_to_i643 = bitcast i64 63 to i64
  %101 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %101, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %klee_overshift_check.exit
  %102 = lshr i64 %100, 63
  %103 = trunc i64 %102 to i1
  %104 = icmp eq i1 %103, false
  br i1 %104, label %bb60, label %bb55

bb55:                                             ; preds = %klee_overshift_check.exit8
  %105 = load i8* %me_remote_addr, align 1
  %toBool56 = icmp ne i8 %105, 0
  %toBool56not = xor i1 %toBool56, true
  %toBool56not57 = zext i1 %toBool56not to i8
  %toBool59 = icmp ne i8 %toBool56not57, 0
  br i1 %toBool59, label %bb60, label %bb61

bb60:                                             ; preds = %bb55, %klee_overshift_check.exit8
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %fstype_addr, align 8
  %106 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 4
  store i8 0, i8* %106, align 8
  %107 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  store i64 -1, i64* %107, align 8
  %108 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 6
  %109 = load i64* %108, align 8
  %110 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 5
  %112 = load i64* %111, align 8
  %113 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 3
  %115 = load i64* %114, align 8
  %116 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  store i64 %115, i64* %116, align 8
  %117 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 2
  %118 = load i64* %117, align 8
  %119 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %121 = load i64* %120, align 8
  %122 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 0
  store i64 %121, i64* %122, align 8
  br label %bb61

bb61:                                             ; preds = %bb60, %bb55, %bb53, %bb52, %bb51, %bb47, %bb45, %bb31
  %123 = getelementptr inbounds %struct.fs_usage* %fsu, i32 0, i32 1
  %124 = load i64* %123, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %bb62, label %bb72

bb62:                                             ; preds = %bb61
  %126 = load i8* @show_all_fs, align 1
  %toBool63 = icmp ne i8 %126, 0
  %toBool63not = xor i1 %toBool63, true
  %toBool63not64 = zext i1 %toBool63not to i8
  %toBool66 = icmp ne i8 %toBool63not64, 0
  br i1 %toBool66, label %bb67, label %bb72

bb67:                                             ; preds = %bb62
  %127 = load i8* @show_listed_fs, align 1
  %toBool68 = icmp ne i8 %127, 0
  %toBool68not = xor i1 %toBool68, true
  %toBool68not69 = zext i1 %toBool68not to i8
  %toBool71 = icmp ne i8 %toBool68not69, 0
  br i1 %toBool71, label %return, label %bb72

bb72:                                             ; preds = %bb67, %bb62, %bb61
  %128 = load %struct.fs_usage** %force_fsu_addr, align 8
  %129 = icmp eq %struct.fs_usage* %128, null
  br i1 %129, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  store i8 1, i8* @file_systems_processed, align 1
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72
  call void @alloc_table_row() nounwind
  %130 = load i8** %disk_addr, align 8
  %131 = icmp eq i8* %130, null
  br i1 %131, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %disk_addr, align 8
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74
  %132 = load i8** %file_addr, align 8
  %133 = icmp eq i8* %132, null
  br i1 %133, label %bb77, label %bb78

bb77:                                             ; preds = %bb76
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %file_addr, align 8
  br label %bb78

bb78:                                             ; preds = %bb77, %bb76
  %134 = load i8** %disk_addr, align 8
  %135 = call noalias i8* @xstrdup(i8* %134) nounwind
  store i8* %135, i8** %dev_name, align 8
  %136 = load i8* %process_all_addr, align 1
  %toBool79 = icmp ne i8 %136, 0
  br i1 %toBool79, label %bb80, label %bb84

bb80:                                             ; preds = %bb78
  %137 = load i8** %dev_name, align 8
  %138 = call zeroext i8 @has_uuid_suffix(i8* %137) nounwind readonly
  %toBool81 = icmp ne i8 %138, 0
  br i1 %toBool81, label %bb82, label %bb84

bb82:                                             ; preds = %bb80
  %139 = load i8** %dev_name, align 8
  %140 = call i8* @canonicalize_filename_mode(i8* %139, i32 0) nounwind
  store i8* %140, i8** %resolved_dev, align 8
  %141 = load i8** %resolved_dev, align 8
  %142 = icmp ne i8* %141, null
  br i1 %142, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %143 = load i8** %dev_name, align 8
  call void @free(i8* %143) nounwind
  %144 = load i8** %resolved_dev, align 8
  store i8* %144, i8** %dev_name, align 8
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82, %bb80, %bb78
  %145 = load i8** %fstype_addr, align 8
  %146 = icmp eq i8* %145, null
  br i1 %146, label %bb85, label %bb86

bb85:                                             ; preds = %bb84
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %fstype_addr, align 8
  br label %bb86

bb86:                                             ; preds = %bb85, %bb84
  call void @get_field_values(%struct.field_values_t* %block_values, %struct.field_values_t* %inode_values, %struct.fs_usage* %fsu) nounwind
  %147 = load i8* @print_grand_total, align 1
  %toBool87 = icmp ne i8 %147, 0
  br i1 %toBool87, label %bb88, label %bb90

bb88:                                             ; preds = %bb86
  %148 = load %struct.fs_usage** %force_fsu_addr, align 8
  %149 = icmp eq %struct.fs_usage* %148, null
  br i1 %149, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  call void @add_to_grand_total(%struct.field_values_t* %block_values, %struct.field_values_t* %inode_values) nounwind
  br label %bb90

bb90:                                             ; preds = %bb89, %bb88, %bb86
  store i64 0, i64* %col, align 8
  br label %bb166

bb91:                                             ; preds = %bb166
  %150 = load %struct.field_data_t*** @columns, align 8
  %151 = load i64* %col, align 8
  %152 = getelementptr inbounds %struct.field_data_t** %150, i64 %151
  %153 = load %struct.field_data_t** %152, align 1
  %154 = getelementptr inbounds %struct.field_data_t* %153, i32 0, i32 2
  %155 = load i32* %154, align 8
  switch i32 %155, label %bb95 [
    i32 0, label %bb92
    i32 1, label %bb93
    i32 2, label %bb94
  ]

bb92:                                             ; preds = %bb91
  store %struct.field_values_t* %block_values, %struct.field_values_t** %v, align 8
  br label %bb96

bb93:                                             ; preds = %bb91
  store %struct.field_values_t* %inode_values, %struct.field_values_t** %v, align 8
  br label %bb96

bb94:                                             ; preds = %bb91
  store %struct.field_values_t* null, %struct.field_values_t** %v, align 8
  br label %bb96

bb95:                                             ; preds = %bb91
  store %struct.field_values_t* null, %struct.field_values_t** %v, align 8
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 1079, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.7707, i64 0, i64 0)) noreturn nou
  unreachable

bb96:                                             ; preds = %bb94, %bb93, %bb92
  %156 = load %struct.field_data_t*** @columns, align 8
  %157 = load i64* %col, align 8
  %158 = getelementptr inbounds %struct.field_data_t** %156, i64 %157
  %159 = load %struct.field_data_t** %158, align 1
  %160 = getelementptr inbounds %struct.field_data_t* %159, i32 0, i32 0
  %161 = load i32* %160, align 8
  switch i32 %161, label %bb159 [
    i32 0, label %bb97
    i32 1, label %bb98
    i32 2, label %bb99
    i32 3, label %bb101
    i32 4, label %bb103
    i32 5, label %bb105
    i32 6, label %bb99
    i32 7, label %bb101
    i32 8, label %bb103
    i32 9, label %bb105
    i32 10, label %bb158
    i32 11, label %bb157
  ]

bb97:                                             ; preds = %bb96
  %162 = load i8** %dev_name, align 8
  %163 = call noalias i8* @xstrdup(i8* %162) nounwind
  store i8* %163, i8** %cell, align 8
  br label %bb160

bb98:                                             ; preds = %bb96
  %164 = load i8** %fstype_addr, align 8
  %165 = call noalias i8* @xstrdup(i8* %164) nounwind
  store i8* %165, i8** %cell, align 8
  br label %bb160

bb99:                                             ; preds = %bb96, %bb96
  %166 = load %struct.field_values_t** %v, align 8
  %167 = getelementptr inbounds %struct.field_values_t* %166, i32 0, i32 1
  %168 = load i64* %167, align 8
  %169 = load %struct.field_values_t** %v, align 8
  %170 = getelementptr inbounds %struct.field_values_t* %169, i32 0, i32 0
  %171 = load i64* %170, align 8
  %172 = load %struct.field_values_t** %v, align 8
  %173 = getelementptr inbounds %struct.field_values_t* %172, i32 0, i32 2
  %174 = load i64* %173, align 8
  %buf100 = bitcast [653 x i8]* %buf to i8*
  %175 = call i8* @df_readable(i8 zeroext 0, i64 %174, i8* %buf100, i64 %171, i64 %168) nounwind
  %176 = call noalias i8* @xstrdup(i8* %175) nounwind
  store i8* %176, i8** %cell, align 8
  br label %bb160

bb101:                                            ; preds = %bb96, %bb96
  %177 = load %struct.field_values_t** %v, align 8
  %178 = getelementptr inbounds %struct.field_values_t* %177, i32 0, i32 1
  %179 = load i64* %178, align 8
  %180 = load %struct.field_values_t** %v, align 8
  %181 = getelementptr inbounds %struct.field_values_t* %180, i32 0, i32 0
  %182 = load i64* %181, align 8
  %183 = load %struct.field_values_t** %v, align 8
  %184 = getelementptr inbounds %struct.field_values_t* %183, i32 0, i32 6
  %185 = load i64* %184, align 8
  %186 = load %struct.field_values_t** %v, align 8
  %187 = getelementptr inbounds %struct.field_values_t* %186, i32 0, i32 7
  %188 = load i8* %187, align 8
  %189 = zext i8 %188 to i32
  %190 = trunc i32 %189 to i8
  %buf102 = bitcast [653 x i8]* %buf to i8*
  %191 = call i8* @df_readable(i8 zeroext %190, i64 %185, i8* %buf102, i64 %182, i64 %179) nounwind
  %192 = call noalias i8* @xstrdup(i8* %191) nounwind
  store i8* %192, i8** %cell, align 8
  br label %bb160

bb103:                                            ; preds = %bb96, %bb96
  %193 = load %struct.field_values_t** %v, align 8
  %194 = getelementptr inbounds %struct.field_values_t* %193, i32 0, i32 1
  %195 = load i64* %194, align 8
  %196 = load %struct.field_values_t** %v, align 8
  %197 = getelementptr inbounds %struct.field_values_t* %196, i32 0, i32 0
  %198 = load i64* %197, align 8
  %199 = load %struct.field_values_t** %v, align 8
  %200 = getelementptr inbounds %struct.field_values_t* %199, i32 0, i32 3
  %201 = load i64* %200, align 8
  %202 = load %struct.field_values_t** %v, align 8
  %203 = getelementptr inbounds %struct.field_values_t* %202, i32 0, i32 4
  %204 = load i8* %203, align 8
  %205 = zext i8 %204 to i32
  %206 = trunc i32 %205 to i8
  %buf104 = bitcast [653 x i8]* %buf to i8*
  %207 = call i8* @df_readable(i8 zeroext %206, i64 %201, i8* %buf104, i64 %198, i64 %195) nounwind
  %208 = call noalias i8* @xstrdup(i8* %207) nounwind
  store i8* %208, i8** %cell, align 8
  br label %bb160

bb105:                                            ; preds = %bb96, %bb96
  store double -1.000000e+00, double* %pct, align 8
  %209 = load %struct.field_values_t** %v, align 8
  %210 = getelementptr inbounds %struct.field_values_t* %209, i32 0, i32 6
  %211 = load i64* %210, align 8
  %212 = call zeroext i8 @known_value(i64 %211) nounwind
  %toBool106 = icmp ne i8 %212, 0
  %toBool106not = xor i1 %toBool106, true
  %toBool106not107 = zext i1 %toBool106not to i8
  %toBool109 = icmp ne i8 %toBool106not107, 0
  %toBool109not = xor i1 %toBool109, true
  %toBool109not110 = zext i1 %toBool109not to i8
  %toBool112 = icmp ne i8 %toBool109not110, 0
  br i1 %toBool112, label %bb113, label %bb149

bb113:                                            ; preds = %bb105
  %213 = load %struct.field_values_t** %v, align 8
  %214 = getelementptr inbounds %struct.field_values_t* %213, i32 0, i32 3
  %215 = load i64* %214, align 8
  %216 = call zeroext i8 @known_value(i64 %215) nounwind
  %toBool114 = icmp ne i8 %216, 0
  %toBool114not = xor i1 %toBool114, true
  %toBool114not115 = zext i1 %toBool114not to i8
  %toBool117 = icmp ne i8 %toBool114not115, 0
  %toBool117not = xor i1 %toBool117, true
  %toBool117not118 = zext i1 %toBool117not to i8
  %toBool120 = icmp ne i8 %toBool117not118, 0
  br i1 %toBool120, label %bb121, label %bb149

bb121:                                            ; preds = %bb113
  %217 = load %struct.field_values_t** %v, align 8
  %218 = getelementptr inbounds %struct.field_values_t* %217, i32 0, i32 7
  %219 = load i8* %218, align 8
  %toBool122 = icmp ne i8 %219, 0
  %toBool122not = xor i1 %toBool122, true
  %toBool122not123 = zext i1 %toBool122not to i8
  %toBool125 = icmp ne i8 %toBool122not123, 0
  %toBool125not = xor i1 %toBool125, true
  %toBool125not126 = zext i1 %toBool125not to i8
  %toBool128 = icmp ne i8 %toBool125not126, 0
  br i1 %toBool128, label %bb133, label %bb129

bb129:                                            ; preds = %bb121
  %220 = load %struct.field_values_t** %v, align 8
  %221 = getelementptr inbounds %struct.field_values_t* %220, i32 0, i32 6
  %222 = load i64* %221, align 8
  %223 = icmp ugt i64 %222, 184467440737095516
  br i1 %223, label %bb133, label %bb130

bb130:                                            ; preds = %bb129
  %224 = load %struct.field_values_t** %v, align 8
  %225 = getelementptr inbounds %struct.field_values_t* %224, i32 0, i32 6
  %226 = load i64* %225, align 8
  %227 = load %struct.field_values_t** %v, align 8
  %228 = getelementptr inbounds %struct.field_values_t* %227, i32 0, i32 3
  %229 = load i64* %228, align 8
  %230 = add i64 %226, %229
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %bb133, label %bb131

bb131:                                            ; preds = %bb130
  %232 = load %struct.field_values_t** %v, align 8
  %233 = getelementptr inbounds %struct.field_values_t* %232, i32 0, i32 6
  %234 = load i64* %233, align 8
  %235 = load %struct.field_values_t** %v, align 8
  %236 = getelementptr inbounds %struct.field_values_t* %235, i32 0, i32 3
  %237 = load i64* %236, align 8
  %238 = add i64 %234, %237
  %239 = load %struct.field_values_t** %v, align 8
  %240 = getelementptr inbounds %struct.field_values_t* %239, i32 0, i32 6
  %241 = load i64* %240, align 8
  %242 = icmp ult i64 %238, %241
  %243 = zext i1 %242 to i32
  %244 = load %struct.field_values_t** %v, align 8
  %245 = getelementptr inbounds %struct.field_values_t* %244, i32 0, i32 4
  %246 = load i8* %245, align 8
  %247 = zext i8 %246 to i32
  %248 = icmp ne i32 %243, %247
  br i1 %248, label %bb133, label %bb132

bb132:                                            ; preds = %bb131
  %249 = load %struct.field_values_t** %v, align 8
  %250 = getelementptr inbounds %struct.field_values_t* %249, i32 0, i32 6
  %251 = load i64* %250, align 8
  %252 = mul i64 %251, 100
  store i64 %252, i64* %u100, align 8
  %253 = load %struct.field_values_t** %v, align 8
  %254 = getelementptr inbounds %struct.field_values_t* %253, i32 0, i32 6
  %255 = load i64* %254, align 8
  %256 = load %struct.field_values_t** %v, align 8
  %257 = getelementptr inbounds %struct.field_values_t* %256, i32 0, i32 3
  %258 = load i64* %257, align 8
  %259 = add i64 %255, %258
  store i64 %259, i64* %nonroot_total, align 8
  %260 = load i64* %u100, align 8
  %261 = load i64* %nonroot_total, align 8
  %int_cast_to_i64 = bitcast i64 %261 to i64
  %262 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %263 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %263, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb132
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb132
  call void @klee_disable_symbex() nounwind
  %264 = udiv i64 %260, %261
  %265 = load i64* %u100, align 8
  %266 = load i64* %nonroot_total, align 8
  %int_cast_to_i641 = bitcast i64 %266 to i64
  %267 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %268 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %268, label %bb.i4, label %klee_div_zero_check.exit5

bb.i4:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit5:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %269 = urem i64 %265, %266
  %270 = icmp ne i64 %269, 0
  %271 = zext i1 %270 to i64
  %272 = add i64 %264, %271
  %273 = uitofp i64 %272 to double
  store double %273, double* %pct, align 8
  br label %bb149

bb133:                                            ; preds = %bb131, %bb130, %bb129, %bb121
  %274 = load %struct.field_values_t** %v, align 8
  %275 = getelementptr inbounds %struct.field_values_t* %274, i32 0, i32 7
  %276 = load i8* %275, align 8
  %toBool135 = icmp ne i8 %276, 0
  %277 = load %struct.field_values_t** %v, align 8
  %278 = getelementptr inbounds %struct.field_values_t* %277, i32 0, i32 6
  %279 = load i64* %278, align 8
  br i1 %toBool135, label %bb136, label %bb137

bb136:                                            ; preds = %bb133
  %280 = sub i64 0, %279
  %281 = uitofp i64 %280 to double
  %282 = fsub double -0.000000e+00, %281
  store double %282, double* %iftmp.128, align 8
  br label %bb138

bb137:                                            ; preds = %bb133
  %283 = uitofp i64 %279 to double
  store double %283, double* %iftmp.128, align 8
  br label %bb138

bb138:                                            ; preds = %bb137, %bb136
  %284 = load double* %iftmp.128, align 8
  store double %284, double* %u, align 8
  %285 = load %struct.field_values_t** %v, align 8
  %286 = getelementptr inbounds %struct.field_values_t* %285, i32 0, i32 4
  %287 = load i8* %286, align 8
  %toBool139 = icmp ne i8 %287, 0
  %288 = load %struct.field_values_t** %v, align 8
  %289 = getelementptr inbounds %struct.field_values_t* %288, i32 0, i32 3
  %290 = load i64* %289, align 8
  br i1 %toBool139, label %bb140, label %bb141

bb140:                                            ; preds = %bb138
  %291 = sub i64 0, %290
  %292 = uitofp i64 %291 to double
  %293 = fsub double -0.000000e+00, %292
  store double %293, double* %iftmp.129, align 8
  br label %bb142

bb141:                                            ; preds = %bb138
  %294 = uitofp i64 %290 to double
  store double %294, double* %iftmp.129, align 8
  br label %bb142

bb142:                                            ; preds = %bb141, %bb140
  %295 = load double* %iftmp.129, align 8
  store double %295, double* %a, align 8
  %296 = load double* %u, align 8
  %297 = load double* %a, align 8
  %298 = fadd double %296, %297
  store double %298, double* %nonroot_total134, align 8
  %299 = load double* %nonroot_total134, align 8
  %300 = fcmp une double %299, 0.000000e+00
  br i1 %300, label %bb143, label %bb149

bb143:                                            ; preds = %bb142
  %301 = load double* %u, align 8
  %302 = fmul double %301, 1.000000e+02
  %303 = load double* %nonroot_total134, align 8
  %304 = fdiv double %302, %303
  store double %304, double* %pct, align 8
  %305 = load double* %pct, align 8
  %306 = fptosi double %305 to i64
  store i64 %306, i64* %lipct, align 8
  %307 = load i64* %lipct, align 8
  %308 = sitofp i64 %307 to double
  store double %308, double* %ipct, align 8
  %309 = load double* %ipct, align 8
  %310 = fsub double %309, 1.000000e+00
  %311 = load double* %pct, align 8
  %312 = fcmp olt double %310, %311
  br i1 %312, label %bb144, label %bb149

bb144:                                            ; preds = %bb143
  %313 = load double* %ipct, align 8
  %314 = fadd double %313, 1.000000e+00
  %315 = load double* %pct, align 8
  %316 = fcmp oge double %314, %315
  br i1 %316, label %bb145, label %bb149

bb145:                                            ; preds = %bb144
  %317 = load double* %ipct, align 8
  %318 = load double* %pct, align 8
  %319 = fcmp olt double %317, %318
  br i1 %319, label %bb146, label %bb147

bb146:                                            ; preds = %bb145
  store double 1.000000e+00, double* %iftmp.130, align 8
  br label %bb148

bb147:                                            ; preds = %bb145
  store double 0.000000e+00, double* %iftmp.130, align 8
  br label %bb148

bb148:                                            ; preds = %bb147, %bb146
  %320 = load double* %iftmp.130, align 8
  %321 = load double* %ipct, align 8
  %322 = fadd double %320, %321
  store double %322, double* %pct, align 8
  br label %bb149

bb149:                                            ; preds = %bb148, %bb144, %bb143, %bb142, %klee_div_zero_check.exit5, %bb113, %bb105
  %323 = load double* %pct, align 8
  %324 = fcmp oge double %323, 0.000000e+00
  br i1 %324, label %bb150, label %bb153

bb150:                                            ; preds = %bb149
  %325 = load double* %pct, align 8
  %326 = call i32 (i8**, i8*, ...)* @asprintf(i8** noalias %cell, i8* noalias getelementptr inbounds ([7 x i8]* @.str56, i64 0, i64 0), double %325) nounwind
  %327 = icmp eq i32 %326, -1
  br i1 %327, label %bb151, label %bb154

bb151:                                            ; preds = %bb150
  store i8* null, i8** %cell, align 8
  br label %bb154

bb153:                                            ; preds = %bb149
  %328 = call noalias i8* @strdup(i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0)) nounwind
  store i8* %328, i8** %cell, align 8
  br label %bb154

bb154:                                            ; preds = %bb150, %bb151, %bb153
  %329 = load i8** %cell, align 8
  %330 = icmp eq i8* %329, null
  br i1 %330, label %bb155, label %bb160

bb155:                                            ; preds = %bb154
  call void @xalloc_die() noreturn nounwind
  unreachable

bb157:                                            ; preds = %bb96
  %331 = load i8** %file_addr, align 8
  %332 = call noalias i8* @xstrdup(i8* %331) nounwind
  store i8* %332, i8** %cell, align 8
  br label %bb160

bb158:                                            ; preds = %bb96
  %333 = load i8** %mount_point_addr, align 8
  %334 = call noalias i8* @xstrdup(i8* %333) nounwind
  store i8* %334, i8** %cell, align 8
  br label %bb160

bb159:                                            ; preds = %bb96
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str57, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 1181, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.7707, i64 0, i64 0)) noreturn nou
  unreachable

bb160:                                            ; preds = %bb154, %bb158, %bb157, %bb103, %bb101, %bb99, %bb98, %bb97
  %335 = load i8** %cell, align 8
  %336 = icmp eq i8* %335, null
  br i1 %336, label %bb161, label %bb162

bb161:                                            ; preds = %bb160
  call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str58, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str43, i64 0, i64 0), i32 1185, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.7707, i64 0, i64 0)) noreturn nou
  unreachable

bb162:                                            ; preds = %bb160
  %337 = load i8** %cell, align 8
  %338 = call i8* @hide_problematic_chars(i8* %337) nounwind
  %339 = load %struct.field_data_t*** @columns, align 8
  %340 = load i64* %col, align 8
  %341 = getelementptr inbounds %struct.field_data_t** %339, i64 %340
  %342 = load %struct.field_data_t** %341, align 1
  %343 = load %struct.field_data_t*** @columns, align 8
  %344 = load i64* %col, align 8
  %345 = getelementptr inbounds %struct.field_data_t** %343, i64 %344
  %346 = load %struct.field_data_t** %345, align 1
  %347 = getelementptr inbounds %struct.field_data_t* %346, i32 0, i32 4
  %348 = load i64* %347, align 8
  %349 = load i8** %cell, align 8
  %350 = call i32 @gnu_mbswidth(i8* %349, i32 0) nounwind
  %351 = sext i32 %350 to i64
  %352 = icmp ugt i64 %348, %351
  br i1 %352, label %bb163, label %bb164

bb163:                                            ; preds = %bb162
  %353 = load %struct.field_data_t*** @columns, align 8
  %354 = load i64* %col, align 8
  %355 = getelementptr inbounds %struct.field_data_t** %353, i64 %354
  %356 = load %struct.field_data_t** %355, align 1
  %357 = getelementptr inbounds %struct.field_data_t* %356, i32 0, i32 4
  %358 = load i64* %357, align 8
  store i64 %358, i64* %iftmp.135, align 8
  br label %bb165

bb164:                                            ; preds = %bb162
  %359 = load i8** %cell, align 8
  %360 = call i32 @gnu_mbswidth(i8* %359, i32 0) nounwind
  %361 = sext i32 %360 to i64
  store i64 %361, i64* %iftmp.135, align 8
  br label %bb165

bb165:                                            ; preds = %bb164, %bb163
  %362 = getelementptr inbounds %struct.field_data_t* %342, i32 0, i32 4
  %363 = load i64* %iftmp.135, align 8
  store i64 %363, i64* %362, align 8
  %364 = load i8**** @table, align 8
  %365 = load i64* @nrows, align 8
  %366 = sub i64 %365, 1
  %367 = getelementptr inbounds i8*** %364, i64 %366
  %368 = load i8*** %367, align 1
  %369 = load i8** %cell, align 8
  %370 = load i64* %col, align 8
  %371 = getelementptr inbounds i8** %368, i64 %370
  store i8* %369, i8** %371, align 1
  %372 = load i64* %col, align 8
  %373 = add i64 %372, 1
  store i64 %373, i64* %col, align 8
  br label %bb166

bb166:                                            ; preds = %bb165, %bb90
  %374 = load i64* @ncolumns, align 8
  %375 = load i64* %col, align 8
  %376 = icmp ult i64 %375, %374
  br i1 %376, label %bb91, label %bb167

bb167:                                            ; preds = %bb166
  %377 = load i8** %dev_name, align 8
  call void @free(i8* %377) nounwind
  br label %return

return:                                           ; preds = %bb9, %bb24, %bb40, %bb46, %bb67, %bb167, %entry, %bb19, %bb14
  ret void
}

define internal i8* @last_device_for_mount(i8* %mount) nounwind {
entry:
  %mount_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %me = alloca %struct.mount_entry*
  %le = alloca %struct.mount_entry*
  %devname = alloca i8*
  %canon_dev = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %mount, i8** %mount_addr
  store %struct.mount_entry* null, %struct.mount_entry** %le, align 8
  %1 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %1, %struct.mount_entry** %me, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %2 = load %struct.mount_entry** %me, align 8
  %3 = getelementptr inbounds %struct.mount_entry* %2, i32 0, i32 1
  %4 = load i8** %3, align 8
  %5 = load i8** %mount_addr, align 8
  %6 = call i32 @strcmp(i8* %4, i8* %5) nounwind readonly
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %8 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %8, %struct.mount_entry** %le, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %9 = load %struct.mount_entry** %me, align 8
  %10 = getelementptr inbounds %struct.mount_entry* %9, i32 0, i32 6
  %11 = load %struct.mount_entry** %10, align 8
  store %struct.mount_entry* %11, %struct.mount_entry** %me, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %12 = load %struct.mount_entry** %me, align 8
  %13 = icmp ne %struct.mount_entry* %12, null
  br i1 %13, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  %14 = load %struct.mount_entry** %le, align 8
  %15 = icmp ne %struct.mount_entry* %14, null
  br i1 %15, label %bb5, label %bb9

bb5:                                              ; preds = %bb4
  %16 = load %struct.mount_entry** %le, align 8
  %17 = getelementptr inbounds %struct.mount_entry* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %devname, align 8
  %19 = load i8** %devname, align 8
  %20 = call i8* @canonicalize_file_name(i8* %19) nounwind
  store i8* %20, i8** %canon_dev, align 8
  %21 = load i8** %canon_dev, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = load i8** %canon_dev, align 8
  %24 = getelementptr inbounds i8* %23, i64 0
  %25 = load i8* %24, align 1
  %26 = icmp eq i8 %25, 47
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %canon_dev, align 8
  store i8* %27, i8** %0, align 8
  br label %bb10

bb8:                                              ; preds = %bb6, %bb5
  %28 = load i8** %canon_dev, align 8
  call void @free(i8* %28) nounwind
  %29 = load %struct.mount_entry** %le, align 8
  %30 = getelementptr inbounds %struct.mount_entry* %29, i32 0, i32 0
  %31 = load i8** %30, align 8
  %32 = call noalias i8* @xstrdup(i8* %31) nounwind
  store i8* %32, i8** %0, align 8
  br label %bb10

bb9:                                              ; preds = %bb4
  store i8* null, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb7
  %33 = load i8** %0, align 8
  store i8* %33, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define internal zeroext i8 @get_disk(i8* %disk) nounwind {
entry:
  %disk_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.144 = alloca i32
  %me = alloca %struct.mount_entry*
  %best_match = alloca %struct.mount_entry*
  %best_match_accessible = alloca i8
  %eclipsed_device = alloca i8
  %file = alloca i8*
  %resolved = alloca i8*
  %best_match_len = alloca i64
  %devname = alloca i8*
  %canon_dev = alloca i8*
  %last_device = alloca i8*
  %len = alloca i64
  %disk_stats = alloca %struct.stat
  %this_match_accessible = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %disk, i8** %disk_addr
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  store i8 0, i8* %best_match_accessible, align 1
  store i8 0, i8* %eclipsed_device, align 1
  %1 = load i8** %disk_addr, align 8
  store i8* %1, i8** %file, align 8
  %2 = load i8** %disk_addr, align 8
  %3 = call i8* @canonicalize_file_name(i8* %2) nounwind
  store i8* %3, i8** %resolved, align 8
  %4 = load i8** %resolved, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = load i8** %resolved, align 8
  %7 = getelementptr inbounds i8* %6, i64 0
  %8 = load i8* %7, align 1
  %9 = icmp eq i8 %8, 47
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8** %resolved, align 8
  store i8* %10, i8** %disk_addr, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  store i64 -1, i64* %best_match_len, align 8
  %11 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %11, %struct.mount_entry** %me, align 8
  br label %bb39

bb3:                                              ; preds = %bb39
  %12 = load %struct.mount_entry** %me, align 8
  %13 = getelementptr inbounds %struct.mount_entry* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  store i8* %14, i8** %devname, align 8
  %15 = load %struct.mount_entry** %me, align 8
  %16 = getelementptr inbounds %struct.mount_entry* %15, i32 0, i32 0
  %17 = load i8** %16, align 8
  %18 = call i8* @canonicalize_file_name(i8* %17) nounwind
  store i8* %18, i8** %canon_dev, align 8
  %19 = load i8** %canon_dev, align 8
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb4, label %bb6

bb4:                                              ; preds = %bb3
  %21 = load i8** %canon_dev, align 8
  %22 = getelementptr inbounds i8* %21, i64 0
  %23 = load i8* %22, align 1
  %24 = icmp eq i8 %23, 47
  br i1 %24, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %25 = load i8** %canon_dev, align 8
  store i8* %25, i8** %devname, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %26 = load i8** %disk_addr, align 8
  %27 = load i8** %devname, align 8
  %28 = call i32 @strcmp(i8* %26, i8* %27) nounwind readonly
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %bb7, label %bb38

bb7:                                              ; preds = %bb6
  %30 = load %struct.mount_entry** %me, align 8
  %31 = getelementptr inbounds %struct.mount_entry* %30, i32 0, i32 1
  %32 = load i8** %31, align 8
  %33 = call i8* @last_device_for_mount(i8* %32) nounwind
  store i8* %33, i8** %last_device, align 8
  %34 = load i8** %last_device, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %bb10, label %bb8

bb8:                                              ; preds = %bb7
  %36 = load i8** %last_device, align 8
  %37 = load i8** %devname, align 8
  %38 = call i32 @strcmp(i8* %36, i8* %37) nounwind readonly
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  store i32 1, i32* %iftmp.144, align 4
  br label %bb11

bb10:                                             ; preds = %bb8, %bb7
  store i32 0, i32* %iftmp.144, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %40 = load i32* %iftmp.144, align 4
  %41 = trunc i32 %40 to i8
  store i8 %41, i8* %eclipsed_device, align 1
  %42 = load %struct.mount_entry** %me, align 8
  %43 = getelementptr inbounds %struct.mount_entry* %42, i32 0, i32 1
  %44 = load i8** %43, align 8
  %45 = call i64 @strlen(i8* %44) nounwind readonly
  store i64 %45, i64* %len, align 8
  %46 = load i8* %eclipsed_device, align 1
  %toBool = icmp ne i8 %46, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot12 = zext i1 %toBoolnot to i8
  %toBool14 = icmp ne i8 %toBoolnot12, 0
  br i1 %toBool14, label %bb15, label %bb37

bb15:                                             ; preds = %bb11
  %47 = load i8* %best_match_accessible, align 1
  %toBool16 = icmp ne i8 %47, 0
  %toBool16not = xor i1 %toBool16, true
  %toBool16not17 = zext i1 %toBool16not to i8
  %toBool19 = icmp ne i8 %toBool16not17, 0
  br i1 %toBool19, label %bb21, label %bb20

bb20:                                             ; preds = %bb15
  %48 = load i64* %len, align 8
  %49 = load i64* %best_match_len, align 8
  %50 = icmp ult i64 %48, %49
  br i1 %50, label %bb21, label %bb37

bb21:                                             ; preds = %bb20, %bb15
  store i8 0, i8* %this_match_accessible, align 1
  %51 = load %struct.mount_entry** %me, align 8
  %52 = getelementptr inbounds %struct.mount_entry* %51, i32 0, i32 1
  %53 = load i8** %52, align 8
  %54 = call i32 @stat(i8* noalias %53, %struct.stat* noalias %disk_stats) nounwind
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  store i8 1, i8* %this_match_accessible, align 1
  %56 = load i8* %this_match_accessible, align 1
  store i8 %56, i8* %best_match_accessible, align 1
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %57 = load i8* %this_match_accessible, align 1
  %toBool24 = icmp ne i8 %57, 0
  br i1 %toBool24, label %bb34, label %bb25

bb25:                                             ; preds = %bb23
  %58 = load i8* %best_match_accessible, align 1
  %toBool26 = icmp ne i8 %58, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  %toBool29not = xor i1 %toBool29, true
  %toBool29not30 = zext i1 %toBool29not to i8
  %toBool32 = icmp ne i8 %toBool29not30, 0
  br i1 %toBool32, label %bb37, label %bb33

bb33:                                             ; preds = %bb25
  %59 = load i64* %len, align 8
  %60 = load i64* %best_match_len, align 8
  %61 = icmp ult i64 %59, %60
  br i1 %61, label %bb34, label %bb37

bb34:                                             ; preds = %bb33, %bb23
  %62 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %62, %struct.mount_entry** %best_match, align 8
  %63 = load i64* %len, align 8
  %64 = icmp eq i64 %63, 1
  br i1 %64, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %65 = load i8** %last_device, align 8
  call void @free(i8* %65) nounwind
  %66 = load i8** %canon_dev, align 8
  call void @free(i8* %66) nounwind
  br label %bb40

bb36:                                             ; preds = %bb34
  %67 = load i64* %len, align 8
  store i64 %67, i64* %best_match_len, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb33, %bb25, %bb20, %bb11
  %68 = load i8** %last_device, align 8
  call void @free(i8* %68) nounwind
  br label %bb38

bb38:                                             ; preds = %bb37, %bb6
  %69 = load i8** %canon_dev, align 8
  call void @free(i8* %69) nounwind
  %70 = load %struct.mount_entry** %me, align 8
  %71 = getelementptr inbounds %struct.mount_entry* %70, i32 0, i32 6
  %72 = load %struct.mount_entry** %71, align 8
  store %struct.mount_entry* %72, %struct.mount_entry** %me, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb2
  %73 = load %struct.mount_entry** %me, align 8
  %74 = icmp ne %struct.mount_entry* %73, null
  br i1 %74, label %bb3, label %bb40

bb40:                                             ; preds = %bb39, %bb35
  %75 = load i8** %resolved, align 8
  call void @free(i8* %75) nounwind
  %76 = load %struct.mount_entry** %best_match, align 8
  %77 = icmp ne %struct.mount_entry* %76, null
  br i1 %77, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  %78 = load %struct.mount_entry** %best_match, align 8
  %79 = getelementptr inbounds %struct.mount_entry* %78, i32 0, i32 5
  %80 = load i64* %79, align 8
  %int_cast_to_i64 = bitcast i64 62 to i64
  %81 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %81, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb41
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb41
  %82 = shl i64 %80, 62
  %int_cast_to_i641 = bitcast i64 63 to i64
  %83 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %83, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %84 = lshr i64 %82, 63
  %85 = trunc i64 %84 to i1
  %86 = icmp ne i1 %85, false
  %87 = zext i1 %86 to i32
  %88 = load %struct.mount_entry** %best_match, align 8
  %89 = getelementptr inbounds %struct.mount_entry* %88, i32 0, i32 5
  %90 = load i64* %89, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %91 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %91, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %klee_overshift_check.exit5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %klee_overshift_check.exit5
  %92 = shl i64 %90, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %93 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %93, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %klee_overshift_check.exit7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %klee_overshift_check.exit7
  %94 = lshr i64 %92, 63
  %95 = trunc i64 %94 to i1
  %96 = icmp ne i1 %95, false
  %97 = zext i1 %96 to i32
  %98 = load %struct.mount_entry** %best_match, align 8
  %99 = getelementptr inbounds %struct.mount_entry* %98, i32 0, i32 3
  %100 = load i8** %99, align 8
  %101 = load %struct.mount_entry** %best_match, align 8
  %102 = getelementptr inbounds %struct.mount_entry* %101, i32 0, i32 1
  %103 = load i8** %102, align 8
  %104 = load %struct.mount_entry** %best_match, align 8
  %105 = getelementptr inbounds %struct.mount_entry* %104, i32 0, i32 0
  %106 = load i8** %105, align 8
  %107 = load i8** %file, align 8
  %108 = trunc i32 %97 to i8
  %109 = trunc i32 %87 to i8
  call void @get_dev(i8* %106, i8* %103, i8* %107, i8* null, i8* %100, i8 zeroext %108, i8 zeroext %109, %struct.fs_usage* null, i8 zeroext 0) nounwind
  store i32 1, i32* %0, align 4
  br label %bb46

bb42:                                             ; preds = %bb40
  %110 = load i8* %eclipsed_device, align 1
  %toBool43 = icmp ne i8 %110, 0
  br i1 %toBool43, label %bb44, label %bb45

bb44:                                             ; preds = %bb42
  %111 = load i8** %file, align 8
  %112 = call i8* @quotearg_style(i32 4, i8* %111) nounwind
  %113 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8]* @.str59, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %113, i8* %112) nounwind
  store i32 1, i32* @exit_status, align 4
  store i32 1, i32* %0, align 4
  br label %bb46

bb45:                                             ; preds = %bb42
  store i32 0, i32* %0, align 4
  br label %bb46

bb46:                                             ; preds = %bb45, %bb44, %klee_overshift_check.exit9
  %114 = load i32* %0, align 4
  store i32 %114, i32* %retval, align 4
  %retval47 = load i32* %retval
  %retval4748 = trunc i32 %retval47 to i8
  ret i8 %retval4748
}

define internal void @get_point(i8* %point, %struct.stat* %statp) nounwind {
entry:
  %point_addr = alloca i8*, align 8
  %statp_addr = alloca %struct.stat*, align 8
  %disk_stats = alloca %struct.stat
  %me = alloca %struct.mount_entry*
  %best_match = alloca %struct.mount_entry*
  %resolved = alloca i8*
  %resolved_len = alloca i64
  %best_match_len = alloca i64
  %len = alloca i64
  %mp = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %point, i8** %point_addr
  store %struct.stat* %statp, %struct.stat** %statp_addr
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  %0 = load i8** %point_addr, align 8
  %1 = call i8* @canonicalize_file_name(i8* %0) nounwind
  store i8* %1, i8** %resolved, align 8
  %2 = load i8** %resolved, align 8
  %3 = icmp ne i8* %2, null
  br i1 %3, label %bb, label %bb15

bb:                                               ; preds = %entry
  %4 = load i8** %resolved, align 8
  %5 = getelementptr inbounds i8* %4, i64 0
  %6 = load i8* %5, align 1
  %7 = icmp eq i8 %6, 47
  br i1 %7, label %bb1, label %bb15

bb1:                                              ; preds = %bb
  %8 = load i8** %resolved, align 8
  %9 = call i64 @strlen(i8* %8) nounwind readonly
  store i64 %9, i64* %resolved_len, align 8
  store i64 0, i64* %best_match_len, align 8
  %10 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %10, %struct.mount_entry** %me, align 8
  br label %bb14

bb2:                                              ; preds = %bb14
  %11 = load %struct.mount_entry** %me, align 8
  %12 = getelementptr inbounds %struct.mount_entry* %11, i32 0, i32 3
  %13 = load i8** %12, align 8
  %14 = call i32 @strcmp(i8* %13, i8* getelementptr inbounds ([5 x i8]* @.str60, i64 0, i64 0)) nounwind readonly
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb3, label %bb13

bb3:                                              ; preds = %bb2
  %16 = load %struct.mount_entry** %best_match, align 8
  %17 = icmp eq %struct.mount_entry* %16, null
  br i1 %17, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %18 = load %struct.mount_entry** %best_match, align 8
  %19 = getelementptr inbounds %struct.mount_entry* %18, i32 0, i32 5
  %20 = load i64* %19, align 8
  %int_cast_to_i64 = bitcast i64 63 to i64
  %21 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %21, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb4
  %22 = shl i64 %20, 63
  %int_cast_to_i641 = bitcast i64 63 to i64
  %23 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %23, label %klee_overshift_check.exit13, label %bb.i12

bb.i12:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit13:                      ; preds = %klee_overshift_check.exit
  %24 = lshr i64 %22, 63
  %25 = trunc i64 %24 to i1
  %26 = icmp ne i1 %25, false
  br i1 %26, label %bb6, label %bb5

bb5:                                              ; preds = %klee_overshift_check.exit13
  %27 = load %struct.mount_entry** %me, align 8
  %28 = getelementptr inbounds %struct.mount_entry* %27, i32 0, i32 5
  %29 = load i64* %28, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %30 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %30, label %klee_overshift_check.exit15, label %bb.i14

bb.i14:                                           ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit15:                      ; preds = %bb5
  %31 = shl i64 %29, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %32 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %32, label %klee_overshift_check.exit17, label %bb.i16

bb.i16:                                           ; preds = %klee_overshift_check.exit15
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit17:                      ; preds = %klee_overshift_check.exit15
  %33 = lshr i64 %31, 63
  %34 = trunc i64 %33 to i1
  %35 = icmp eq i1 %34, false
  br i1 %35, label %bb6, label %bb13

bb6:                                              ; preds = %klee_overshift_check.exit17, %klee_overshift_check.exit13, %bb3
  %36 = load %struct.mount_entry** %me, align 8
  %37 = getelementptr inbounds %struct.mount_entry* %36, i32 0, i32 1
  %38 = load i8** %37, align 8
  %39 = call i64 @strlen(i8* %38) nounwind readonly
  store i64 %39, i64* %len, align 8
  %40 = load i64* %best_match_len, align 8
  %41 = load i64* %len, align 8
  %42 = icmp ule i64 %40, %41
  br i1 %42, label %bb7, label %bb13

bb7:                                              ; preds = %bb6
  %43 = load i64* %len, align 8
  %44 = load i64* %resolved_len, align 8
  %45 = icmp ule i64 %43, %44
  br i1 %45, label %bb8, label %bb13

bb8:                                              ; preds = %bb7
  %46 = load i64* %len, align 8
  %47 = icmp eq i64 %46, 1
  br i1 %47, label %bb12, label %bb9

bb9:                                              ; preds = %bb8
  %48 = load i64* %len, align 8
  %49 = load i64* %resolved_len, align 8
  %50 = icmp eq i64 %48, %49
  br i1 %50, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  %51 = load i8** %resolved, align 8
  %52 = load i64* %len, align 8
  %53 = getelementptr inbounds i8* %51, i64 %52
  %54 = load i8* %53, align 1
  %55 = icmp eq i8 %54, 47
  br i1 %55, label %bb11, label %bb13

bb11:                                             ; preds = %bb10, %bb9
  %56 = load %struct.mount_entry** %me, align 8
  %57 = getelementptr inbounds %struct.mount_entry* %56, i32 0, i32 1
  %58 = load i8** %57, align 8
  %59 = load i8** %resolved, align 8
  %60 = load i64* %len, align 8
  %61 = call i32 @strncmp(i8* %58, i8* %59, i64 %60) nounwind readonly
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %bb12, label %bb13

bb12:                                             ; preds = %bb11, %bb8
  %63 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %63, %struct.mount_entry** %best_match, align 8
  %64 = load i64* %len, align 8
  store i64 %64, i64* %best_match_len, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb10, %bb7, %bb6, %klee_overshift_check.exit17, %bb2
  %65 = load %struct.mount_entry** %me, align 8
  %66 = getelementptr inbounds %struct.mount_entry* %65, i32 0, i32 6
  %67 = load %struct.mount_entry** %66, align 8
  store %struct.mount_entry* %67, %struct.mount_entry** %me, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb1
  %68 = load %struct.mount_entry** %me, align 8
  %69 = icmp ne %struct.mount_entry* %68, null
  br i1 %69, label %bb2, label %bb15

bb15:                                             ; preds = %bb14, %bb, %entry
  %70 = load i8** %resolved, align 8
  call void @free(i8* %70) nounwind
  %71 = load %struct.mount_entry** %best_match, align 8
  %72 = icmp ne %struct.mount_entry* %71, null
  br i1 %72, label %bb16, label %bb19

bb16:                                             ; preds = %bb15
  %73 = load %struct.mount_entry** %best_match, align 8
  %74 = getelementptr inbounds %struct.mount_entry* %73, i32 0, i32 1
  %75 = load i8** %74, align 8
  %76 = call i32 @stat(i8* noalias %75, %struct.stat* noalias %disk_stats) nounwind
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %bb18, label %bb17

bb17:                                             ; preds = %bb16
  %78 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %79 = load i64* %78, align 8
  %80 = load %struct.stat** %statp_addr, align 8
  %81 = getelementptr inbounds %struct.stat* %80, i32 0, i32 0
  %82 = load i64* %81, align 8
  %83 = icmp ne i64 %79, %82
  br i1 %83, label %bb18, label %bb19

bb18:                                             ; preds = %bb17, %bb16
  store %struct.mount_entry* null, %struct.mount_entry** %best_match, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17, %bb15
  %84 = load %struct.mount_entry** %best_match, align 8
  %85 = icmp eq %struct.mount_entry* %84, null
  br i1 %85, label %bb20, label %bb38

bb20:                                             ; preds = %bb19
  %86 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %86, %struct.mount_entry** %me, align 8
  br label %bb37

bb21:                                             ; preds = %bb37
  %87 = load %struct.mount_entry** %me, align 8
  %88 = getelementptr inbounds %struct.mount_entry* %87, i32 0, i32 4
  %89 = load i64* %88, align 8
  %90 = icmp eq i64 %89, -1
  br i1 %90, label %bb22, label %bb27

bb22:                                             ; preds = %bb21
  %91 = load %struct.mount_entry** %me, align 8
  %92 = getelementptr inbounds %struct.mount_entry* %91, i32 0, i32 1
  %93 = load i8** %92, align 8
  %94 = call i32 @stat(i8* noalias %93, %struct.stat* noalias %disk_stats) nounwind
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %96 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %97 = load i64* %96, align 8
  %98 = load %struct.mount_entry** %me, align 8
  %99 = getelementptr inbounds %struct.mount_entry* %98, i32 0, i32 4
  store i64 %97, i64* %99, align 8
  br label %bb27

bb24:                                             ; preds = %bb22
  %100 = call i32* @__errno_location() nounwind readnone
  %101 = load i32* %100, align 4
  %102 = icmp eq i32 %101, 5
  br i1 %102, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %103 = load %struct.mount_entry** %me, align 8
  %104 = getelementptr inbounds %struct.mount_entry* %103, i32 0, i32 1
  %105 = load i8** %104, align 8
  %106 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %105) nounwind
  %107 = call i32* @__errno_location() nounwind readnone
  %108 = load i32* %107, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %108, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %106) nounwind
  store i32 1, i32* @exit_status, align 4
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %109 = load %struct.mount_entry** %me, align 8
  %110 = getelementptr inbounds %struct.mount_entry* %109, i32 0, i32 4
  store i64 -2, i64* %110, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb23, %bb21
  %111 = load %struct.stat** %statp_addr, align 8
  %112 = getelementptr inbounds %struct.stat* %111, i32 0, i32 0
  %113 = load i64* %112, align 8
  %114 = load %struct.mount_entry** %me, align 8
  %115 = getelementptr inbounds %struct.mount_entry* %114, i32 0, i32 4
  %116 = load i64* %115, align 8
  %117 = icmp eq i64 %113, %116
  br i1 %117, label %bb28, label %bb36

bb28:                                             ; preds = %bb27
  %118 = load %struct.mount_entry** %me, align 8
  %119 = getelementptr inbounds %struct.mount_entry* %118, i32 0, i32 3
  %120 = load i8** %119, align 8
  %121 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([5 x i8]* @.str60, i64 0, i64 0)) nounwind readonly
  %122 = icmp ne i32 %121, 0
  br i1 %122, label %bb29, label %bb36

bb29:                                             ; preds = %bb28
  %123 = load %struct.mount_entry** %best_match, align 8
  %124 = icmp eq %struct.mount_entry* %123, null
  br i1 %124, label %bb32, label %bb30

bb30:                                             ; preds = %bb29
  %125 = load %struct.mount_entry** %best_match, align 8
  %126 = getelementptr inbounds %struct.mount_entry* %125, i32 0, i32 5
  %127 = load i64* %126, align 8
  %int_cast_to_i644 = bitcast i64 63 to i64
  %128 = icmp ult i64 %int_cast_to_i644, 64
  br i1 %128, label %klee_overshift_check.exit19, label %bb.i18

bb.i18:                                           ; preds = %bb30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit19:                      ; preds = %bb30
  %129 = shl i64 %127, 63
  %int_cast_to_i645 = bitcast i64 63 to i64
  %130 = icmp ult i64 %int_cast_to_i645, 64
  br i1 %130, label %klee_overshift_check.exit21, label %bb.i20

bb.i20:                                           ; preds = %klee_overshift_check.exit19
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit21:                      ; preds = %klee_overshift_check.exit19
  %131 = lshr i64 %129, 63
  %132 = trunc i64 %131 to i1
  %133 = icmp ne i1 %132, false
  br i1 %133, label %bb32, label %bb31

bb31:                                             ; preds = %klee_overshift_check.exit21
  %134 = load %struct.mount_entry** %me, align 8
  %135 = getelementptr inbounds %struct.mount_entry* %134, i32 0, i32 5
  %136 = load i64* %135, align 8
  %int_cast_to_i646 = bitcast i64 63 to i64
  %137 = icmp ult i64 %int_cast_to_i646, 64
  br i1 %137, label %klee_overshift_check.exit23, label %bb.i22

bb.i22:                                           ; preds = %bb31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit23:                      ; preds = %bb31
  %138 = shl i64 %136, 63
  %int_cast_to_i647 = bitcast i64 63 to i64
  %139 = icmp ult i64 %int_cast_to_i647, 64
  br i1 %139, label %klee_overshift_check.exit25, label %bb.i24

bb.i24:                                           ; preds = %klee_overshift_check.exit23
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit25:                      ; preds = %klee_overshift_check.exit23
  %140 = lshr i64 %138, 63
  %141 = trunc i64 %140 to i1
  %142 = icmp eq i1 %141, false
  br i1 %142, label %bb32, label %bb36

bb32:                                             ; preds = %klee_overshift_check.exit25, %klee_overshift_check.exit21, %bb29
  %143 = load %struct.mount_entry** %me, align 8
  %144 = getelementptr inbounds %struct.mount_entry* %143, i32 0, i32 1
  %145 = load i8** %144, align 8
  %146 = call i32 @stat(i8* noalias %145, %struct.stat* noalias %disk_stats) nounwind
  %147 = icmp ne i32 %146, 0
  br i1 %147, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  %148 = getelementptr inbounds %struct.stat* %disk_stats, i32 0, i32 0
  %149 = load i64* %148, align 8
  %150 = load %struct.mount_entry** %me, align 8
  %151 = getelementptr inbounds %struct.mount_entry* %150, i32 0, i32 4
  %152 = load i64* %151, align 8
  %153 = icmp ne i64 %149, %152
  br i1 %153, label %bb34, label %bb35

bb34:                                             ; preds = %bb33, %bb32
  %154 = load %struct.mount_entry** %me, align 8
  %155 = getelementptr inbounds %struct.mount_entry* %154, i32 0, i32 4
  store i64 -2, i64* %155, align 8
  br label %bb36

bb35:                                             ; preds = %bb33
  %156 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %156, %struct.mount_entry** %best_match, align 8
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34, %klee_overshift_check.exit25, %bb28, %bb27
  %157 = load %struct.mount_entry** %me, align 8
  %158 = getelementptr inbounds %struct.mount_entry* %157, i32 0, i32 6
  %159 = load %struct.mount_entry** %158, align 8
  store %struct.mount_entry* %159, %struct.mount_entry** %me, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb20
  %160 = load %struct.mount_entry** %me, align 8
  %161 = icmp ne %struct.mount_entry* %160, null
  br i1 %161, label %bb21, label %bb38

bb38:                                             ; preds = %bb37, %bb19
  %162 = load %struct.mount_entry** %best_match, align 8
  %163 = icmp ne %struct.mount_entry* %162, null
  br i1 %163, label %bb39, label %bb40

bb39:                                             ; preds = %bb38
  %164 = load %struct.mount_entry** %best_match, align 8
  %165 = getelementptr inbounds %struct.mount_entry* %164, i32 0, i32 5
  %166 = load i64* %165, align 8
  %int_cast_to_i648 = bitcast i64 62 to i64
  %167 = icmp ult i64 %int_cast_to_i648, 64
  br i1 %167, label %klee_overshift_check.exit27, label %bb.i26

bb.i26:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit27:                      ; preds = %bb39
  %168 = shl i64 %166, 62
  %int_cast_to_i649 = bitcast i64 63 to i64
  %169 = icmp ult i64 %int_cast_to_i649, 64
  br i1 %169, label %klee_overshift_check.exit29, label %bb.i28

bb.i28:                                           ; preds = %klee_overshift_check.exit27
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit29:                      ; preds = %klee_overshift_check.exit27
  %170 = lshr i64 %168, 63
  %171 = trunc i64 %170 to i1
  %172 = icmp ne i1 %171, false
  %173 = zext i1 %172 to i32
  %174 = load %struct.mount_entry** %best_match, align 8
  %175 = getelementptr inbounds %struct.mount_entry* %174, i32 0, i32 5
  %176 = load i64* %175, align 8
  %int_cast_to_i6410 = bitcast i64 63 to i64
  %177 = icmp ult i64 %int_cast_to_i6410, 64
  br i1 %177, label %klee_overshift_check.exit31, label %bb.i30

bb.i30:                                           ; preds = %klee_overshift_check.exit29
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit31:                      ; preds = %klee_overshift_check.exit29
  %178 = shl i64 %176, 63
  %int_cast_to_i6411 = bitcast i64 63 to i64
  %179 = icmp ult i64 %int_cast_to_i6411, 64
  br i1 %179, label %klee_overshift_check.exit33, label %bb.i32

bb.i32:                                           ; preds = %klee_overshift_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit33:                      ; preds = %klee_overshift_check.exit31
  %180 = lshr i64 %178, 63
  %181 = trunc i64 %180 to i1
  %182 = icmp ne i1 %181, false
  %183 = zext i1 %182 to i32
  %184 = load %struct.mount_entry** %best_match, align 8
  %185 = getelementptr inbounds %struct.mount_entry* %184, i32 0, i32 3
  %186 = load i8** %185, align 8
  %187 = load %struct.mount_entry** %best_match, align 8
  %188 = getelementptr inbounds %struct.mount_entry* %187, i32 0, i32 1
  %189 = load i8** %188, align 8
  %190 = load %struct.mount_entry** %best_match, align 8
  %191 = getelementptr inbounds %struct.mount_entry* %190, i32 0, i32 0
  %192 = load i8** %191, align 8
  %193 = load i8** %point_addr, align 8
  %194 = load i8** %point_addr, align 8
  %195 = trunc i32 %183 to i8
  %196 = trunc i32 %173 to i8
  call void @get_dev(i8* %192, i8* %189, i8* %193, i8* %194, i8* %186, i8 zeroext %195, i8 zeroext %196, %struct.fs_usage* null, i8 zeroext 0) nounwind
  br label %return

bb40:                                             ; preds = %bb38
  %197 = load i8** %point_addr, align 8
  %198 = load %struct.stat** %statp_addr, align 8
  %199 = call i8* @find_mount_point(i8* %197, %struct.stat* %198) nounwind
  store i8* %199, i8** %mp, align 8
  %200 = load i8** %mp, align 8
  %201 = icmp ne i8* %200, null
  br i1 %201, label %bb41, label %return

bb41:                                             ; preds = %bb40
  %202 = load i8** %mp, align 8
  %203 = load i8** %point_addr, align 8
  call void @get_dev(i8* null, i8* %202, i8* %203, i8* null, i8* null, i8 zeroext 0, i8 zeroext 0, %struct.fs_usage* null, i8 zeroext 0) nounwind
  %204 = load i8** %mp, align 8
  call void @free(i8* %204) nounwind
  br label %return

return:                                           ; preds = %klee_overshift_check.exit33, %bb40, %bb41
  ret void
}

define internal void @get_entry(i8* %name, %struct.stat* %statp) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %statp_addr = alloca %struct.stat*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store %struct.stat* %statp, %struct.stat** %statp_addr
  %0 = load %struct.stat** %statp_addr, align 8
  %1 = getelementptr inbounds %struct.stat* %0, i32 0, i32 3
  %2 = load i32* %1, align 8
  %3 = and i32 %2, 61440
  %4 = icmp eq i32 %3, 24576
  br i1 %4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %5 = load %struct.stat** %statp_addr, align 8
  %6 = getelementptr inbounds %struct.stat* %5, i32 0, i32 3
  %7 = load i32* %6, align 8
  %8 = and i32 %7, 61440
  %9 = icmp eq i32 %8, 8192
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %10 = load i8** %name_addr, align 8
  %11 = call zeroext i8 @get_disk(i8* %10) nounwind
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %return, label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i8** %name_addr, align 8
  %13 = load %struct.stat** %statp_addr, align 8
  call void @get_point(i8* %12, %struct.stat* %13) nounwind
  br label %return

return:                                           ; preds = %bb1, %bb2
  ret void
}

define internal void @get_all_entries() nounwind {
entry:
  %me = alloca %struct.mount_entry*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i8* @show_all_fs, align 1
  %1 = zext i8 %0 to i32
  %2 = trunc i32 %1 to i8
  call void @filter_mount_list(i8 zeroext %2) nounwind
  %3 = load %struct.mount_entry** @mount_list, align 8
  store %struct.mount_entry* %3, %struct.mount_entry** %me, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %4 = load %struct.mount_entry** %me, align 8
  %5 = getelementptr inbounds %struct.mount_entry* %4, i32 0, i32 5
  %6 = load i64* %5, align 8
  %int_cast_to_i64 = bitcast i64 62 to i64
  %7 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %7, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %8 = shl i64 %6, 62
  %int_cast_to_i641 = bitcast i64 63 to i64
  %9 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %9, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %10 = lshr i64 %8, 63
  %11 = trunc i64 %10 to i1
  %12 = icmp ne i1 %11, false
  %13 = zext i1 %12 to i32
  %14 = load %struct.mount_entry** %me, align 8
  %15 = getelementptr inbounds %struct.mount_entry* %14, i32 0, i32 5
  %16 = load i64* %15, align 8
  %int_cast_to_i642 = bitcast i64 63 to i64
  %17 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %17, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %klee_overshift_check.exit5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %klee_overshift_check.exit5
  %18 = shl i64 %16, 63
  %int_cast_to_i643 = bitcast i64 63 to i64
  %19 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %19, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %klee_overshift_check.exit7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %klee_overshift_check.exit7
  %20 = lshr i64 %18, 63
  %21 = trunc i64 %20 to i1
  %22 = icmp ne i1 %21, false
  %23 = zext i1 %22 to i32
  %24 = load %struct.mount_entry** %me, align 8
  %25 = getelementptr inbounds %struct.mount_entry* %24, i32 0, i32 3
  %26 = load i8** %25, align 8
  %27 = load %struct.mount_entry** %me, align 8
  %28 = getelementptr inbounds %struct.mount_entry* %27, i32 0, i32 1
  %29 = load i8** %28, align 8
  %30 = load %struct.mount_entry** %me, align 8
  %31 = getelementptr inbounds %struct.mount_entry* %30, i32 0, i32 0
  %32 = load i8** %31, align 8
  %33 = trunc i32 %23 to i8
  %34 = trunc i32 %13 to i8
  call void @get_dev(i8* %32, i8* %29, i8* null, i8* null, i8* %26, i8 zeroext %33, i8 zeroext %34, %struct.fs_usage* null, i8 zeroext 1) nounwind
  %35 = load %struct.mount_entry** %me, align 8
  %36 = getelementptr inbounds %struct.mount_entry* %35, i32 0, i32 6
  %37 = load %struct.mount_entry** %36, align 8
  store %struct.mount_entry* %37, %struct.mount_entry** %me, align 8
  br label %bb1

bb1:                                              ; preds = %klee_overshift_check.exit9, %entry
  %38 = load %struct.mount_entry** %me, align 8
  %39 = icmp ne %struct.mount_entry* %38, null
  br i1 %39, label %bb, label %return

return:                                           ; preds = %bb1
  ret void
}

define internal void @add_fs_type(i8* %fstype) nounwind {
entry:
  %fstype_addr = alloca i8*, align 8
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %0 = call noalias i8* @xmalloc(i64 16) nounwind
  %1 = bitcast i8* %0 to %struct.fs_type_list*
  store %struct.fs_type_list* %1, %struct.fs_type_list** %fsp, align 8
  %2 = load i8** %fstype_addr, align 8
  %3 = load %struct.fs_type_list** %fsp, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.fs_type_list** @fs_select_list, align 8
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 1
  store %struct.fs_type_list* %5, %struct.fs_type_list** %7, align 8
  %8 = load %struct.fs_type_list** %fsp, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** @fs_select_list, align 8
  ret void
}

define internal void @add_excluded_fs_type(i8* %fstype) nounwind {
entry:
  %fstype_addr = alloca i8*, align 8
  %fsp = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %fstype, i8** %fstype_addr
  %0 = call noalias i8* @xmalloc(i64 16) nounwind
  %1 = bitcast i8* %0 to %struct.fs_type_list*
  store %struct.fs_type_list* %1, %struct.fs_type_list** %fsp, align 8
  %2 = load i8** %fstype_addr, align 8
  %3 = load %struct.fs_type_list** %fsp, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %6 = load %struct.fs_type_list** %fsp, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 1
  store %struct.fs_type_list* %5, %struct.fs_type_list** %7, align 8
  %8 = load %struct.fs_type_list** %fsp, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** @fs_exclude_list, align 8
  ret void
}

declare i32 @printf(i8* noalias, ...) nounwind

define internal void @emit_mandatory_arg_note() nounwind inlinehint {
entry:
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([75 x i8]* @.str74, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  ret void
}

define internal void @emit_blocksize_note(i8* %program) nounwind inlinehint {
entry:
  %program_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %program, i8** %program_addr
  %0 = call i8* @gettext(i8* getelementptr inbounds ([223 x i8]* @.str75, i64 0, i64 0)) nounwind
  %1 = load i8** %program_addr, align 8
  %2 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* %1) nounwind
  ret void
}

define internal void @emit_size_note() nounwind inlinehint {
entry:
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([212 x i8]* @.str76, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  ret void
}

define internal void @emit_ancillary_info(i8* %program) nounwind inlinehint {
entry:
  %program_addr = alloca i8*, align 8
  %iftmp.33 = alloca i8*
  %node = alloca i8*
  %map_prog = alloca %struct..0infomap*
  %lc_messages = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %program, i8** %program_addr
  %0 = load i8** %program_addr, align 8
  store i8* %0, i8** %node, align 8
  store %struct..0infomap* getelementptr inbounds ([7 x %struct..0infomap]* @infomap.6443, i64 0, i64 0), %struct..0infomap** %map_prog, align 8
  br label %bb1

bb:                                               ; preds = %bb2
  %1 = load %struct..0infomap** %map_prog, align 8
  %2 = getelementptr inbounds %struct..0infomap* %1, i64 1
  store %struct..0infomap* %2, %struct..0infomap** %map_prog, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load %struct..0infomap** %map_prog, align 8
  %4 = getelementptr inbounds %struct..0infomap* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load %struct..0infomap** %map_prog, align 8
  %8 = getelementptr inbounds %struct..0infomap* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8** %program_addr, align 8
  %11 = call i32 @strcmp(i8* %10, i8* %9) nounwind readonly
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load %struct..0infomap** %map_prog, align 8
  %14 = getelementptr inbounds %struct..0infomap* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %17 = load %struct..0infomap** %map_prog, align 8
  %18 = getelementptr inbounds %struct..0infomap* %17, i32 0, i32 1
  %19 = load i8** %18, align 8
  store i8* %19, i8** %node, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %20 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str86, i64 0, i64 0)) nounwind
  %21 = call i32 (i8*, ...)* @printf(i8* noalias %20, i8* getelementptr inbounds ([14 x i8]* @.str87, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8]* @.str88, i64 0, i64 0)) nounwind
  %22 = call i8* @setlocale(i32 5, i8* null) nounwind
  store i8* %22, i8** %lc_messages, align 8
  %23 = load i8** %lc_messages, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %25 = load i8** %lc_messages, align 8
  %26 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([4 x i8]* @.str89, i64 0, i64 0), i64 3) nounwind readonly
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %28 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8]* @.str90, i64 0, i64 0)) nounwind
  %29 = load i8** %program_addr, align 8
  %30 = call i32 (i8*, ...)* @printf(i8* noalias %28, i8* %29) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb5
  %31 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str91, i64 0, i64 0)) nounwind
  %32 = load i8** %program_addr, align 8
  %33 = call i32 (i8*, ...)* @printf(i8* noalias %31, i8* getelementptr inbounds ([40 x i8]* @.str88, i64 0, i64 0), i8* %32) nounwind
  %34 = load i8** %node, align 8
  %35 = load i8** %program_addr, align 8
  %36 = icmp eq i8* %34, %35
  br i1 %36, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i8* getelementptr inbounds ([12 x i8]* @.str92, i64 0, i64 0), i8** %iftmp.33, align 8
  br label %bb11

bb10:                                             ; preds = %bb8
  store i8* getelementptr inbounds ([1 x i8]* @.str93, i64 0, i64 0), i8** %iftmp.33, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %37 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8]* @.str94, i64 0, i64 0)) nounwind
  %38 = load i8** %node, align 8
  %39 = load i8** %iftmp.33, align 8
  %40 = call i32 (i8*, ...)* @printf(i8* noalias %37, i8* %38, i8* %39) nounwind
  ret void
}

define i32 @__user_main(i32 %argc, i8** %argv) nounwind {
entry:
  %argcPtr = alloca i32
  %argvPtr = alloca i8**
  store i32 %argc, i32* %argcPtr
  store i8** %argv, i8*** %argvPtr
  call void @klee_init_env(i32* %argcPtr, i8*** %argvPtr)
  %newArgc = load i32* %argcPtr
  %newArgv = load i8*** %argvPtr
  call void @klee_mark_arg_symbolic(i32 %newArgc, i8** %newArgv)
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.203 = alloca i8*
  %iftmp.197 = alloca i8*
  %iftmp.186 = alloca i32
  %0 = alloca i32
  %iftmp.178 = alloca i64
  %stats = alloca %struct.stat*
  %posix_format = alloca i8
  %msg_mut_excl = alloca i8*
  %oi = alloca i32
  %c = alloca i32
  %e = alloca i32
  %match = alloca i8
  %fs_incl = alloca %struct.fs_type_list*
  %fs_excl = alloca %struct.fs_type_list*
  %i = alloca i32
  %fd = alloca i32
  %status = alloca i32
  %warning = alloca i8*
  %i104 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %newArgc, i32* %argc_addr
  store i8** %newArgv, i8*** %argv_addr
  %1 = load i8*** %argv_addr, align 8
  %2 = getelementptr inbounds i8** %1, i64 0
  %3 = load i8** %2, align 1
  call void @set_program_name(i8* %3) nounwind
  %4 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8]* @.str93, i64 0, i64 0)) nounwind
  %5 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8]* @.str79, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8]* @.str95, i64 0, i64 0)) nounwind
  %6 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8]* @.str79, i64 0, i64 0)) nounwind
  %7 = call i32 @atexit(void ()* @close_stdout) nounwind
  store %struct.fs_type_list* null, %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* null, %struct.fs_type_list** @fs_exclude_list, align 8
  store i8 0, i8* @show_all_fs, align 1
  store i8 0, i8* @show_listed_fs, align 1
  store i32 -1, i32* @human_output_opts, align 4
  store i8 0, i8* @print_type, align 1
  store i8 0, i8* @file_systems_processed, align 1
  store i32 0, i32* @exit_status, align 4
  store i8 0, i8* @print_grand_total, align 1
  store i64 1, i64* getelementptr inbounds (%struct.fs_usage* @grand_fsu, i64 0, i32 0), align 8
  store i8 0, i8* %posix_format, align 1
  %8 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8]* @.str96, i64 0, i64 0)) nounwind
  store i8* %8, i8** %msg_mut_excl, align 8
  br label %bb

bb:                                               ; preds = %bb2, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13, %bb16, %bb19, %bb20, %bb21, %bb22, %bb24, %bb36, %bb3, %bb1, %bb34, %bb33, %entry
  store i32 -1, i32* %oi, align 4
  %9 = load i32* %argc_addr, align 4
  %10 = load i8*** %argv_addr, align 8
  %11 = call i32 @getopt_long(i32 %9, i8** %10, i8* getelementptr inbounds ([19 x i8]* @.str97, i64 0, i64 0), %struct.option* getelementptr inbounds ([17 x %struct.option]* @long_options, i64 0, i64 0), i32* %oi) nounwind
  store i32 %11, i32* %c, align 4
  %12 = load i32* %c, align 4
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %bb41, label %bb1

bb1:                                              ; preds = %bb
  %14 = load i32* %c, align 4
  switch i32 %14, label %bb39 [
    i32 -131, label %bb38
    i32 -130, label %bb37
    i32 66, label %bb3
    i32 70, label %bb22
    i32 72, label %bb10
    i32 80, label %bb17
    i32 84, label %bb14
    i32 97, label %bb2
    i32 104, label %bb9
    i32 105, label %bb6
    i32 107, label %bb11
    i32 108, label %bb12
    i32 109, label %bb13
    i32 116, label %bb22
    i32 118, label %bb
    i32 120, label %bb24
    i32 128, label %bb21
    i32 129, label %bb20
    i32 130, label %bb36
    i32 131, label %bb25
  ]

bb2:                                              ; preds = %bb1
  store i8 1, i8* @show_all_fs, align 1
  br label %bb

bb3:                                              ; preds = %bb1
  %15 = load i8** @optarg, align 8
  %16 = call i32 @human_options(i8* %15, i32* @human_output_opts, i64* @output_block_size) nounwind
  store i32 %16, i32* %e, align 4
  %17 = load i32* %e, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb4, label %bb

bb4:                                              ; preds = %bb3
  %19 = load i8** @optarg, align 8
  %20 = load i32* %c, align 4
  %21 = trunc i32 %20 to i8
  %22 = sext i8 %21 to i32
  %23 = load i32* %oi, align 4
  %24 = load i32* %e, align 4
  %25 = trunc i32 %22 to i8
  call void @xstrtol_fatal(i32 %24, i32 %23, i8 signext %25, %struct.option* getelementptr inbounds ([17 x %struct.option]* @long_options, i64 0, i64 0), i8* %19) noreturn nounwind
  unreachable

bb6:                                              ; preds = %bb1
  %26 = load i32* @header_mode, align 4
  %27 = icmp eq i32 %26, 4
  br i1 %27, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %28 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %28, i8* getelementptr inbounds ([3 x i8]* @.str98, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb8:                                              ; preds = %bb6
  store i32 1, i32* @header_mode, align 4
  br label %bb

bb9:                                              ; preds = %bb1
  store i32 176, i32* @human_output_opts, align 4
  store i64 1, i64* @output_block_size, align 8
  br label %bb

bb10:                                             ; preds = %bb1
  store i32 144, i32* @human_output_opts, align 4
  store i64 1, i64* @output_block_size, align 8
  br label %bb

bb11:                                             ; preds = %bb1
  store i32 0, i32* @human_output_opts, align 4
  store i64 1024, i64* @output_block_size, align 8
  br label %bb

bb12:                                             ; preds = %bb1
  store i8 1, i8* @show_local_fs, align 1
  br label %bb

bb13:                                             ; preds = %bb1
  store i32 0, i32* @human_output_opts, align 4
  store i64 1048576, i64* @output_block_size, align 8
  br label %bb

bb14:                                             ; preds = %bb1
  %29 = load i32* @header_mode, align 4
  %30 = icmp eq i32 %29, 4
  br i1 %30, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %31 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %31, i8* getelementptr inbounds ([3 x i8]* @.str100, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb16:                                             ; preds = %bb14
  store i8 1, i8* @print_type, align 1
  br label %bb

bb17:                                             ; preds = %bb1
  %32 = load i32* @header_mode, align 4
  %33 = icmp eq i32 %32, 4
  br i1 %33, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %34 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %34, i8* getelementptr inbounds ([3 x i8]* @.str101, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb19:                                             ; preds = %bb17
  store i8 1, i8* %posix_format, align 1
  br label %bb

bb20:                                             ; preds = %bb1
  store i8 1, i8* @require_sync, align 1
  br label %bb

bb21:                                             ; preds = %bb1
  store i8 0, i8* @require_sync, align 1
  br label %bb

bb22:                                             ; preds = %bb1, %bb1
  %35 = load i8** @optarg, align 8
  call void @add_fs_type(i8* %35) nounwind
  br label %bb

bb24:                                             ; preds = %bb1
  %36 = load i8** @optarg, align 8
  call void @add_excluded_fs_type(i8* %36) nounwind
  br label %bb

bb25:                                             ; preds = %bb1
  %37 = load i32* @header_mode, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %39 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %39, i8* getelementptr inbounds ([3 x i8]* @.str98, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb27:                                             ; preds = %bb25
  %40 = load i8* %posix_format, align 1
  %toBool = icmp ne i8 %40, 0
  %41 = load i32* @header_mode, align 4
  %42 = icmp eq i32 %41, 0
  %or.cond = and i1 %toBool, %42
  br i1 %or.cond, label %bb29, label %bb30

bb29:                                             ; preds = %bb27
  %43 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %43, i8* getelementptr inbounds ([3 x i8]* @.str101, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb30:                                             ; preds = %bb27
  %44 = load i8* @print_type, align 1
  %toBool31 = icmp ne i8 %44, 0
  br i1 %toBool31, label %bb32, label %bb33

bb32:                                             ; preds = %bb30
  %45 = load i8** %msg_mut_excl, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %45, i8* getelementptr inbounds ([3 x i8]* @.str100, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str99, i64 0, i64 0)) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb33:                                             ; preds = %bb30
  store i32 4, i32* @header_mode, align 4
  %46 = load i8** @optarg, align 8
  %47 = icmp ne i8* %46, null
  br i1 %47, label %bb34, label %bb

bb34:                                             ; preds = %bb33
  %48 = load i8** @optarg, align 8
  call void @decode_output_arg(i8* %48) nounwind
  br label %bb

bb36:                                             ; preds = %bb1
  store i8 1, i8* @print_grand_total, align 1
  br label %bb

bb37:                                             ; preds = %bb1
  call void @usage(i32 0) noreturn nounwind
  unreachable

bb38:                                             ; preds = %bb1
  %49 = load i8** @Version, align 8
  %50 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  call void (%struct.FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct.FILE* %50, i8* getelementptr inbounds ([3 x i8]* @.str73, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str87, i64 0, i64 0), i8* %49, i8* getelementptr inbounds ([18 x i8]* 
  call void @exit(i32 0) noreturn nounwind
  unreachable

bb39:                                             ; preds = %bb1
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb41:                                             ; preds = %bb
  %51 = load i32* @human_output_opts, align 4
  %52 = icmp eq i32 %51, -1
  br i1 %52, label %bb42, label %bb49

bb42:                                             ; preds = %bb41
  %53 = load i8* %posix_format, align 1
  %toBool43 = icmp ne i8 %53, 0
  br i1 %toBool43, label %bb44, label %bb48

bb44:                                             ; preds = %bb42
  store i32 0, i32* @human_output_opts, align 4
  %54 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str105, i64 0, i64 0)) nounwind
  %55 = icmp ne i8* %54, null
  br i1 %55, label %bb45, label %bb46

bb45:                                             ; preds = %bb44
  store i64 512, i64* %iftmp.178, align 8
  br label %bb47

bb46:                                             ; preds = %bb44
  store i64 1024, i64* %iftmp.178, align 8
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  %56 = load i64* %iftmp.178, align 8
  store i64 %56, i64* @output_block_size, align 8
  br label %bb49

bb48:                                             ; preds = %bb42
  %57 = call i8* @getenv(i8* getelementptr inbounds ([14 x i8]* @.str106, i64 0, i64 0)) nounwind
  %58 = call i32 @human_options(i8* %57, i32* @human_output_opts, i64* @output_block_size) nounwind
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47, %bb41
  %59 = load i32* @header_mode, align 4
  %60 = icmp ne i32 %59, 1
  %61 = load i32* @header_mode, align 4
  %62 = icmp ne i32 %61, 4
  %or.cond3 = and i1 %60, %62
  br i1 %or.cond3, label %bb51, label %bb56

bb51:                                             ; preds = %bb49
  %63 = load i32* @human_output_opts, align 4
  %64 = and i32 %63, 16
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  store i32 2, i32* @header_mode, align 4
  br label %bb56

bb53:                                             ; preds = %bb51
  %66 = load i8* %posix_format, align 1
  %toBool54 = icmp ne i8 %66, 0
  br i1 %toBool54, label %bb55, label %bb56

bb55:                                             ; preds = %bb53
  store i32 3, i32* @header_mode, align 4
  br label %bb56

bb56:                                             ; preds = %bb55, %bb53, %bb52, %bb49
  store i8 0, i8* %match, align 1
  %67 = load %struct.fs_type_list** @fs_select_list, align 8
  store %struct.fs_type_list* %67, %struct.fs_type_list** %fs_incl, align 8
  br label %bb63

bb57:                                             ; preds = %bb63
  %68 = load %struct.fs_type_list** @fs_exclude_list, align 8
  store %struct.fs_type_list* %68, %struct.fs_type_list** %fs_excl, align 8
  br label %bb61

bb58:                                             ; preds = %bb61
  %69 = load %struct.fs_type_list** %fs_excl, align 8
  %70 = getelementptr inbounds %struct.fs_type_list* %69, i32 0, i32 0
  %71 = load i8** %70, align 8
  %72 = load %struct.fs_type_list** %fs_incl, align 8
  %73 = getelementptr inbounds %struct.fs_type_list* %72, i32 0, i32 0
  %74 = load i8** %73, align 8
  %75 = call i32 @strcmp(i8* %74, i8* %71) nounwind readonly
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %77 = load %struct.fs_type_list** %fs_incl, align 8
  %78 = getelementptr inbounds %struct.fs_type_list* %77, i32 0, i32 0
  %79 = load i8** %78, align 8
  %80 = call i8* @quote(i8* %79) nounwind
  %81 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8]* @.str107, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %81, i8* %80) nounwind
  store i8 1, i8* %match, align 1
  br label %bb62

bb60:                                             ; preds = %bb58
  %82 = load %struct.fs_type_list** %fs_excl, align 8
  %83 = getelementptr inbounds %struct.fs_type_list* %82, i32 0, i32 1
  %84 = load %struct.fs_type_list** %83, align 8
  store %struct.fs_type_list* %84, %struct.fs_type_list** %fs_excl, align 8
  br label %bb61

bb61:                                             ; preds = %bb60, %bb57
  %85 = load %struct.fs_type_list** %fs_excl, align 8
  %86 = icmp ne %struct.fs_type_list* %85, null
  br i1 %86, label %bb58, label %bb62

bb62:                                             ; preds = %bb61, %bb59
  %87 = load %struct.fs_type_list** %fs_incl, align 8
  %88 = getelementptr inbounds %struct.fs_type_list* %87, i32 0, i32 1
  %89 = load %struct.fs_type_list** %88, align 8
  store %struct.fs_type_list* %89, %struct.fs_type_list** %fs_incl, align 8
  br label %bb63

bb63:                                             ; preds = %bb62, %bb56
  %90 = load %struct.fs_type_list** %fs_incl, align 8
  %91 = icmp ne %struct.fs_type_list* %90, null
  br i1 %91, label %bb57, label %bb64

bb64:                                             ; preds = %bb63
  %92 = load i8* %match, align 1
  %toBool65 = icmp ne i8 %92, 0
  br i1 %toBool65, label %bb66, label %bb67

bb66:                                             ; preds = %bb64
  store i32 1, i32* %0, align 4
  br label %bb124

bb67:                                             ; preds = %bb64
  %93 = load i32* @optind, align 4
  %94 = load i32* %argc_addr, align 4
  %95 = icmp slt i32 %93, %94
  br i1 %95, label %bb68, label %bb76

bb68:                                             ; preds = %bb67
  %96 = load i32* @optind, align 4
  %97 = load i32* %argc_addr, align 4
  %98 = sub nsw i32 %97, %96
  %99 = sext i32 %98 to i64
  %100 = call noalias i8* @xnmalloc(i64 %99, i64 144) nounwind
  %101 = bitcast i8* %100 to %struct.stat*
  store %struct.stat* %101, %struct.stat** %stats, align 8
  %102 = load i32* @optind, align 4
  store i32 %102, i32* %i, align 4
  br label %bb75

bb69:                                             ; preds = %bb75
  %103 = load i32* @optind, align 4
  %104 = load i32* %i, align 4
  %105 = sub nsw i32 %104, %103
  %106 = load %struct.stat** %stats, align 8
  %107 = sext i32 %105 to i64
  %108 = getelementptr inbounds %struct.stat* %106, i64 %107
  %109 = load i8*** %argv_addr, align 8
  %110 = load i32* %i, align 4
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i8** %109, i64 %111
  %113 = load i8** %112, align 1
  %114 = call i32 @stat(i8* noalias %113, %struct.stat* noalias %108) nounwind
  %115 = icmp ne i32 %114, 0
  br i1 %115, label %bb70, label %bb71

bb70:                                             ; preds = %bb69
  %116 = load i8*** %argv_addr, align 8
  %117 = load i32* %i, align 4
  %118 = sext i32 %117 to i64
  %119 = getelementptr inbounds i8** %116, i64 %118
  %120 = load i8** %119, align 1
  %121 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %120) nounwind
  %122 = call i32* @__errno_location() nounwind readnone
  %123 = load i32* %122, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %123, i8* getelementptr inbounds ([3 x i8]* @.str54, i64 0, i64 0), i8* %121) nounwind
  store i32 1, i32* @exit_status, align 4
  %124 = load i8*** %argv_addr, align 8
  %125 = load i32* %i, align 4
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8** %124, i64 %126
  store i8* null, i8** %127, align 1
  br label %bb74

bb71:                                             ; preds = %bb69
  %128 = load i32* @optind, align 4
  %129 = load i32* %i, align 4
  %130 = sub nsw i32 %129, %128
  %131 = load %struct.stat** %stats, align 8
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds %struct.stat* %131, i64 %132
  %134 = getelementptr inbounds %struct.stat* %133, i32 0, i32 3
  %135 = load i32* %134, align 8
  %136 = and i32 %135, 61440
  %137 = icmp ne i32 %136, 4096
  br i1 %137, label %bb72, label %bb74

bb72:                                             ; preds = %bb71
  %138 = load i8*** %argv_addr, align 8
  %139 = load i32* %i, align 4
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8** %138, i64 %140
  %142 = load i8** %141, align 1
  %143 = call i32 (i8*, i32, ...)* @open(i8* %142, i32 256) nounwind
  store i32 %143, i32* %fd, align 4
  %144 = load i32* %fd, align 4
  %145 = icmp sge i32 %144, 0
  br i1 %145, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %146 = load i32* %fd, align 4
  %147 = call i32 @close(i32 %146) nounwind
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72, %bb71, %bb70
  %148 = load i32* %i, align 4
  %149 = add nsw i32 %148, 1
  store i32 %149, i32* %i, align 4
  br label %bb75

bb75:                                             ; preds = %bb74, %bb68
  %150 = load i32* %i, align 4
  %151 = load i32* %argc_addr, align 4
  %152 = icmp slt i32 %150, %151
  br i1 %152, label %bb69, label %bb76

bb76:                                             ; preds = %bb75, %bb67
  %153 = load %struct.fs_type_list** @fs_select_list, align 8
  %154 = icmp ne %struct.fs_type_list* %153, null
  %155 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %156 = icmp ne %struct.fs_type_list* %155, null
  %or.cond5 = or i1 %154, %156
  %157 = load i8* @print_type, align 1
  %toBool79 = icmp ne i8 %157, 0
  %or.cond6 = or i1 %or.cond5, %toBool79
  %158 = load i8* getelementptr inbounds ([12 x %struct.field_data_t]* @field_data, i64 0, i64 1, i32 6), align 4
  %toBool81 = icmp ne i8 %158, 0
  %or.cond7 = or i1 %or.cond6, %toBool81
  %159 = load i8* @show_local_fs, align 1
  %toBool83 = icmp ne i8 %159, 0
  %or.cond8 = or i1 %or.cond7, %toBool83
  br i1 %or.cond8, label %bb84, label %bb85

bb84:                                             ; preds = %bb76
  store i32 1, i32* %iftmp.186, align 4
  br label %bb86

bb85:                                             ; preds = %bb76
  store i32 0, i32* %iftmp.186, align 4
  br label %bb86

bb86:                                             ; preds = %bb85, %bb84
  %160 = load i32* %iftmp.186, align 4
  %161 = trunc i32 %160 to i8
  %162 = zext i8 %161 to i32
  %163 = trunc i32 %162 to i8
  %164 = call %struct.mount_entry* @read_file_system_list(i8 zeroext %163) nounwind
  store %struct.mount_entry* %164, %struct.mount_entry** @mount_list, align 8
  %165 = load %struct.mount_entry** @mount_list, align 8
  %166 = icmp eq %struct.mount_entry* %165, null
  br i1 %166, label %bb87, label %bb99

bb87:                                             ; preds = %bb86
  store i32 0, i32* %status, align 4
  %167 = load i32* @optind, align 4
  %168 = load i32* %argc_addr, align 4
  %169 = icmp sge i32 %167, %168
  %170 = load i8* @show_all_fs, align 1
  %toBool89 = icmp ne i8 %170, 0
  %or.cond9 = or i1 %169, %toBool89
  %171 = load i8* @show_local_fs, align 1
  %toBool91 = icmp ne i8 %171, 0
  %or.cond10 = or i1 %or.cond9, %toBool91
  %172 = load %struct.fs_type_list** @fs_select_list, align 8
  %173 = icmp ne %struct.fs_type_list* %172, null
  %or.cond12 = or i1 %or.cond10, %173
  %174 = load %struct.fs_type_list** @fs_exclude_list, align 8
  %175 = icmp ne %struct.fs_type_list* %174, null
  %or.cond14 = or i1 %or.cond12, %175
  br i1 %or.cond14, label %bb94, label %bb95

bb94:                                             ; preds = %bb87
  store i32 1, i32* %status, align 4
  br label %bb95

bb95:                                             ; preds = %bb87, %bb94
  %176 = load i32* %status, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %bb96, label %bb97

bb96:                                             ; preds = %bb95
  %178 = call i8* @gettext(i8* getelementptr inbounds ([10 x i8]* @.str108, i64 0, i64 0)) nounwind
  store i8* %178, i8** %iftmp.197, align 8
  br label %bb98

bb97:                                             ; preds = %bb95
  store i8* getelementptr inbounds ([1 x i8]* @.str93, i64 0, i64 0), i8** %iftmp.197, align 8
  br label %bb98

bb98:                                             ; preds = %bb97, %bb96
  %179 = load i8** %iftmp.197, align 8
  store i8* %179, i8** %warning, align 8
  %180 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8]* @.str109, i64 0, i64 0)) nounwind
  %181 = call i32* @__errno_location() nounwind readnone
  %182 = load i32* %181, align 4
  %183 = load i32* %status, align 4
  %184 = load i8** %warning, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 %183, i32 %182, i8* getelementptr inbounds ([5 x i8]* @.str110, i64 0, i64 0), i8* %184, i8* %180) nounwind
  br label %bb99

bb99:                                             ; preds = %bb98, %bb86
  %185 = load i8* @require_sync, align 1
  %toBool100 = icmp ne i8 %185, 0
  br i1 %toBool100, label %bb101, label %bb102

bb101:                                            ; preds = %bb99
  call void @sync() nounwind
  br label %bb102

bb102:                                            ; preds = %bb101, %bb99
  call void @get_field_list() nounwind
  call void @get_header() nounwind
  %186 = load i32* @optind, align 4
  %187 = load i32* %argc_addr, align 4
  %188 = icmp slt i32 %186, %187
  br i1 %188, label %bb103, label %bb110

bb103:                                            ; preds = %bb102
  store i8 1, i8* @show_listed_fs, align 1
  %189 = load i32* @optind, align 4
  store i32 %189, i32* %i104, align 4
  br label %bb108

bb105:                                            ; preds = %bb108
  %190 = load i8*** %argv_addr, align 8
  %191 = load i32* %i104, align 4
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8** %190, i64 %192
  %194 = load i8** %193, align 1
  %195 = icmp ne i8* %194, null
  br i1 %195, label %bb106, label %bb107

bb106:                                            ; preds = %bb105
  %196 = load i32* @optind, align 4
  %197 = load i32* %i104, align 4
  %198 = sub nsw i32 %197, %196
  %199 = load %struct.stat** %stats, align 8
  %200 = sext i32 %198 to i64
  %201 = getelementptr inbounds %struct.stat* %199, i64 %200
  %202 = load i8*** %argv_addr, align 8
  %203 = load i32* %i104, align 4
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8** %202, i64 %204
  %206 = load i8** %205, align 1
  call void @get_entry(i8* %206, %struct.stat* %201) nounwind
  br label %bb107

bb107:                                            ; preds = %bb106, %bb105
  %207 = load i32* %i104, align 4
  %208 = add nsw i32 %207, 1
  store i32 %208, i32* %i104, align 4
  br label %bb108

bb108:                                            ; preds = %bb107, %bb103
  %209 = load i32* %i104, align 4
  %210 = load i32* %argc_addr, align 4
  %211 = icmp slt i32 %209, %210
  br i1 %211, label %bb105, label %bb111

bb110:                                            ; preds = %bb102
  call void @get_all_entries() nounwind
  br label %bb111

bb111:                                            ; preds = %bb108, %bb110
  %212 = load i8* @file_systems_processed, align 1
  %toBool112 = icmp ne i8 %212, 0
  br i1 %toBool112, label %bb113, label %bb121

bb113:                                            ; preds = %bb111
  %213 = load i8* @print_grand_total, align 1
  %toBool114 = icmp ne i8 %213, 0
  br i1 %toBool114, label %bb115, label %bb120

bb115:                                            ; preds = %bb113
  %214 = load i8* getelementptr inbounds ([12 x %struct.field_data_t]* @field_data, i64 0, i64 0, i32 6), align 4
  %toBool116 = icmp ne i8 %214, 0
  br i1 %toBool116, label %bb117, label %bb118

bb117:                                            ; preds = %bb115
  store i8* getelementptr inbounds ([2 x i8]* @.str52, i64 0, i64 0), i8** %iftmp.203, align 8
  br label %bb119

bb118:                                            ; preds = %bb115
  store i8* getelementptr inbounds ([6 x i8]* @.str37, i64 0, i64 0), i8** %iftmp.203, align 8
  br label %bb119

bb119:                                            ; preds = %bb118, %bb117
  %215 = load i8** %iftmp.203, align 8
  call void @get_dev(i8* getelementptr inbounds ([6 x i8]* @.str37, i64 0, i64 0), i8* %215, i8* null, i8* null, i8* null, i8 zeroext 0, i8 zeroext 0, %struct.fs_usage* @grand_fsu, i8 zeroext 0) nounwind
  br label %bb120

bb120:                                            ; preds = %bb119, %bb113
  call void @print_table() nounwind
  br label %bb123

bb121:                                            ; preds = %bb111
  %216 = load i32* @exit_status, align 4
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %bb122, label %bb123

bb122:                                            ; preds = %bb121
  %218 = call i8* @gettext(i8* getelementptr inbounds ([26 x i8]* @.str111, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %218) nounwind
  br label %bb123

bb123:                                            ; preds = %bb122, %bb121, %bb120
  %219 = load i32* @exit_status, align 4
  store i32 %219, i32* %0, align 4
  br label %bb124

bb124:                                            ; preds = %bb123, %bb66
  %220 = load i32* %0, align 4
  store i32 %220, i32* %retval, align 4
  %retval125 = load i32* %retval
  ret i32 %retval125
}

declare i8* @bindtextdomain(i8*, i8*) nounwind

declare i8* @textdomain(i8*) nounwind

declare void @sync() nounwind

define i8* @find_mount_point(i8* %file, %struct.stat* %file_stat) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %file_stat_addr = alloca %struct.stat*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %1 = alloca i8*
  %cwd = alloca %struct.saved_cwd
  %last_stat = alloca %struct.stat
  %mp = alloca i8*
  %xdir = alloca i8*
  %dir = alloca i8*
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %st = alloca %struct.stat
  %save_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.stat* %file_stat, %struct.stat** %file_stat_addr
  store i8* null, i8** %mp, align 8
  %2 = call i32 @save_cwd(%struct.saved_cwd* %cwd) nounwind
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str112, i64 0, i64 0)) nounwind
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %6, i8* %4) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb1:                                              ; preds = %entry
  %7 = load %struct.stat** %file_stat_addr, align 8
  %8 = getelementptr inbounds %struct.stat* %7, i32 0, i32 3
  %9 = load i32* %8, align 8
  %10 = and i32 %9, 61440
  %11 = icmp eq i32 %10, 16384
  br i1 %11, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %12 = load %struct.stat** %file_stat_addr, align 8
  %last_stat3 = bitcast %struct.stat* %last_stat to i8*
  %13 = bitcast %struct.stat* %12 to i8*
  %14 = call i8* @memcpy(i8* %last_stat3, i8* %13, i64 144)
  %15 = load i8** %file_addr, align 8
  %16 = call i32 @chdir(i8* %15) nounwind
  %17 = icmp slt i32 %16, 0
  br i1 %17, label %bb4, label %bb10

bb4:                                              ; preds = %bb2
  %18 = load i8** %file_addr, align 8
  %19 = call i8* @quotearg_style(i32 4, i8* %18) nounwind
  %20 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1113, i64 0, i64 0)) nounwind
  %21 = call i32* @__errno_location() nounwind readnone
  %22 = load i32* %21, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %22, i8* %20, i8* %19) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb6:                                              ; preds = %bb1
  %23 = load i8** %file_addr, align 8
  %24 = call i8* @dir_name(i8* %23) nounwind
  store i8* %24, i8** %xdir, align 8
  %25 = load i8** %xdir, align 8
  store i8* %25, i8** %__old, align 8
  %26 = load i8** %__old, align 8
  %27 = call i64 @strlen(i8* %26) nounwind readonly
  %28 = add i64 %27, 1
  store i64 %28, i64* %__len, align 8
  %29 = load i64* %__len, align 8
  %30 = alloca i8, i64 %29, align 1
  store i8* %30, i8** %__new, align 8
  %31 = load i8** %__new, align 8
  %32 = load i8** %__old, align 8
  %33 = load i64* %__len, align 8
  %34 = call i8* @memcpy(i8* %31, i8* %32, i64 %33)
  store i8* %31, i8** %0, align 8
  %35 = load i8** %0, align 8
  store i8* %35, i8** %dir, align 8
  %36 = load i8** %xdir, align 8
  call void @free(i8* %36) nounwind
  %37 = load i8** %dir, align 8
  %38 = call i32 @chdir(i8* %37) nounwind
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %40 = load i8** %dir, align 8
  %41 = call i8* @quotearg_style(i32 4, i8* %40) nounwind
  %42 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1113, i64 0, i64 0)) nounwind
  %43 = call i32* @__errno_location() nounwind readnone
  %44 = load i32* %43, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %44, i8* %42, i8* %41) nounwind
  store i8* null, i8** %1, align 8
  br label %bb22

bb8:                                              ; preds = %bb6
  %45 = call i32 @stat(i8* noalias getelementptr inbounds ([2 x i8]* @.str2114, i64 0, i64 0), %struct.stat* noalias %last_stat) nounwind
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %47 = load i8** %dir, align 8
  %48 = call i8* @quotearg_style(i32 4, i8* %47) nounwind
  %49 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8]* @.str3115, i64 0, i64 0)) nounwind
  %50 = call i32* @__errno_location() nounwind readnone
  %51 = load i32* %50, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %51, i8* %49, i8* %48) nounwind
  br label %done

bb10:                                             ; preds = %bb2, %bb16, %bb8
  %52 = call i32 @stat(i8* noalias getelementptr inbounds ([3 x i8]* @.str4116, i64 0, i64 0), %struct.stat* noalias %st) nounwind
  %53 = icmp slt i32 %52, 0
  br i1 %53, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %54 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([3 x i8]* @.str4116, i64 0, i64 0)) nounwind
  %55 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str5117, i64 0, i64 0)) nounwind
  %56 = call i32* @__errno_location() nounwind readnone
  %57 = load i32* %56, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %57, i8* %55, i8* %54) nounwind
  br label %done

bb12:                                             ; preds = %bb10
  %58 = getelementptr inbounds %struct.stat* %st, i32 0, i32 0
  %59 = load i64* %58, align 8
  %60 = getelementptr inbounds %struct.stat* %last_stat, i32 0, i32 0
  %61 = load i64* %60, align 8
  %62 = icmp ne i64 %59, %61
  br i1 %62, label %bb19, label %bb13

bb13:                                             ; preds = %bb12
  %63 = getelementptr inbounds %struct.stat* %st, i32 0, i32 1
  %64 = load i64* %63, align 8
  %65 = getelementptr inbounds %struct.stat* %last_stat, i32 0, i32 1
  %66 = load i64* %65, align 8
  %67 = icmp eq i64 %64, %66
  br i1 %67, label %bb19, label %bb14

bb14:                                             ; preds = %bb13
  %68 = call i32 @chdir(i8* getelementptr inbounds ([3 x i8]* @.str4116, i64 0, i64 0)) nounwind
  %69 = icmp slt i32 %68, 0
  br i1 %69, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %70 = call i8* @quotearg_style(i32 4, i8* getelementptr inbounds ([3 x i8]* @.str4116, i64 0, i64 0)) nounwind
  %71 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1113, i64 0, i64 0)) nounwind
  %72 = call i32* @__errno_location() nounwind readnone
  %73 = load i32* %72, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %73, i8* %71, i8* %70) nounwind
  br label %done

bb16:                                             ; preds = %bb14
  %last_stat17 = bitcast %struct.stat* %last_stat to i8*
  %st18 = bitcast %struct.stat* %st to i8*
  %74 = call i8* @memcpy(i8* %last_stat17, i8* %st18, i64 144)
  br label %bb10

bb19:                                             ; preds = %bb13, %bb12
  %75 = call i8* @xgetcwd() nounwind
  store i8* %75, i8** %mp, align 8
  br label %done

done:                                             ; preds = %bb19, %bb15, %bb11, %bb9
  %76 = call i32* @__errno_location() nounwind readnone
  %77 = load i32* %76, align 4
  store i32 %77, i32* %save_errno, align 4
  %78 = call i32 @restore_cwd(%struct.saved_cwd* %cwd) nounwind
  %79 = icmp ne i32 %78, 0
  br i1 %79, label %bb20, label %bb21

bb20:                                             ; preds = %done
  %80 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str6118, i64 0, i64 0)) nounwind
  %81 = call i32* @__errno_location() nounwind readnone
  %82 = load i32* %81, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %82, i8* %80) nounwind
  br label %bb21

bb21:                                             ; preds = %bb20, %done
  call void @free_cwd(%struct.saved_cwd* %cwd) nounwind
  %83 = call i32* @__errno_location() nounwind readnone
  %84 = load i32* %save_errno, align 4
  store i32 %84, i32* %83, align 4
  %85 = load i8** %mp, align 8
  store i8* %85, i8** %1, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb7, %bb4, %bb
  %86 = load i8** %1, align 8
  store i8* %86, i8** %retval, align 8
  %retval23 = load i8** %retval
  ret i8* %retval23
}

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define zeroext i8 @c_isalnum(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 48, label %bb
    i32 49, label %bb
    i32 50, label %bb
    i32 51, label %bb
    i32 52, label %bb
    i32 53, label %bb
    i32 54, label %bb
    i32 55, label %bb
    i32 56, label %bb
    i32 57, label %bb
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 71, label %bb
    i32 72, label %bb
    i32 73, label %bb
    i32 74, label %bb
    i32 75, label %bb
    i32 76, label %bb
    i32 77, label %bb
    i32 78, label %bb
    i32 79, label %bb
    i32 80, label %bb
    i32 81, label %bb
    i32 82, label %bb
    i32 83, label %bb
    i32 84, label %bb
    i32 85, label %bb
    i32 86, label %bb
    i32 87, label %bb
    i32 88, label %bb
    i32 89, label %bb
    i32 90, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
    i32 103, label %bb
    i32 104, label %bb
    i32 105, label %bb
    i32 106, label %bb
    i32 107, label %bb
    i32 108, label %bb
    i32 109, label %bb
    i32 110, label %bb
    i32 111, label %bb
    i32 112, label %bb
    i32 113, label %bb
    i32 114, label %bb
    i32 115, label %bb
    i32 116, label %bb
    i32 117, label %bb
    i32 118, label %bb
    i32 119, label %bb
    i32 120, label %bb
    i32 121, label %bb
    i32 122, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isalpha(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 71, label %bb
    i32 72, label %bb
    i32 73, label %bb
    i32 74, label %bb
    i32 75, label %bb
    i32 76, label %bb
    i32 77, label %bb
    i32 78, label %bb
    i32 79, label %bb
    i32 80, label %bb
    i32 81, label %bb
    i32 82, label %bb
    i32 83, label %bb
    i32 84, label %bb
    i32 85, label %bb
    i32 86, label %bb
    i32 87, label %bb
    i32 88, label %bb
    i32 89, label %bb
    i32 90, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
    i32 103, label %bb
    i32 104, label %bb
    i32 105, label %bb
    i32 106, label %bb
    i32 107, label %bb
    i32 108, label %bb
    i32 109, label %bb
    i32 110, label %bb
    i32 111, label %bb
    i32 112, label %bb
    i32 113, label %bb
    i32 114, label %bb
    i32 115, label %bb
    i32 116, label %bb
    i32 117, label %bb
    i32 118, label %bb
    i32 119, label %bb
    i32 120, label %bb
    i32 121, label %bb
    i32 122, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isascii(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 0
  %3 = icmp ule i32 %2, 127
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isblank(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp eq i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp eq i32 %3, 9
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.0, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_iscntrl(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 0, label %bb
    i32 1, label %bb
    i32 2, label %bb
    i32 3, label %bb
    i32 4, label %bb
    i32 5, label %bb
    i32 6, label %bb
    i32 7, label %bb
    i32 8, label %bb
    i32 9, label %bb
    i32 10, label %bb
    i32 11, label %bb
    i32 12, label %bb
    i32 13, label %bb
    i32 14, label %bb
    i32 15, label %bb
    i32 16, label %bb
    i32 17, label %bb
    i32 18, label %bb
    i32 19, label %bb
    i32 20, label %bb
    i32 21, label %bb
    i32 22, label %bb
    i32 23, label %bb
    i32 24, label %bb
    i32 25, label %bb
    i32 26, label %bb
    i32 27, label %bb
    i32 28, label %bb
    i32 29, label %bb
    i32 30, label %bb
    i32 31, label %bb
    i32 127, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isdigit(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -48
  %switch = icmp ult i32 %.off, 10
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isgraph(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 33
  %3 = icmp ule i32 %2, 93
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_islower(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -97
  %switch = icmp ult i32 %.off, 26
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isprint(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 32
  %3 = icmp ule i32 %2, 94
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_ispunct(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 33, label %bb
    i32 34, label %bb
    i32 35, label %bb
    i32 36, label %bb
    i32 37, label %bb
    i32 38, label %bb
    i32 39, label %bb
    i32 40, label %bb
    i32 41, label %bb
    i32 42, label %bb
    i32 43, label %bb
    i32 44, label %bb
    i32 45, label %bb
    i32 46, label %bb
    i32 47, label %bb
    i32 58, label %bb
    i32 59, label %bb
    i32 60, label %bb
    i32 61, label %bb
    i32 62, label %bb
    i32 63, label %bb
    i32 64, label %bb
    i32 91, label %bb
    i32 92, label %bb
    i32 93, label %bb
    i32 94, label %bb
    i32 95, label %bb
    i32 96, label %bb
    i32 123, label %bb
    i32 124, label %bb
    i32 125, label %bb
    i32 126, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isspace(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 9, label %bb
    i32 10, label %bb
    i32 11, label %bb
    i32 12, label %bb
    i32 13, label %bb
    i32 32, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isupper(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -65
  %switch = icmp ult i32 %.off, 26
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isxdigit(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 48, label %bb
    i32 49, label %bb
    i32 50, label %bb
    i32 51, label %bb
    i32 52, label %bb
    i32 53, label %bb
    i32 54, label %bb
    i32 55, label %bb
    i32 56, label %bb
    i32 57, label %bb
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define i32 @c_tolower(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -65
  %switch = icmp ult i32 %.off, 26
  %2 = load i32* %c_addr, align 4
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = add nsw i32 %2, 32
  store i32 %3, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 %2, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @c_toupper(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -97
  %switch = icmp ult i32 %.off, 26
  %2 = load i32* %c_addr, align 4
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = sub nsw i32 %2, 32
  store i32 %3, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 %2, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal zeroext i8 @seen_triple(%struct.Hash_table** %ht, i8* %filename, %struct.stat* %st) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table**, align 8
  %filename_addr = alloca i8*, align 8
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %initial_capacity = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table** %ht, %struct.Hash_table*** %ht_addr
  store i8* %filename, i8** %filename_addr
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.Hash_table*** %ht_addr, align 8
  %2 = load %struct.Hash_table** %1, align 8
  %3 = icmp eq %struct.Hash_table* %2, null
  br i1 %3, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i64 7, i64* %initial_capacity, align 8
  %4 = load i64* %initial_capacity, align 8
  %5 = call %struct.Hash_table* @hash_initialize(i64 %4, %struct.Hash_tuning* null, i64 (i8*, i64)* @triple_hash, i8 (i8*, i8*)* @triple_compare_ino_str, void (i8*)* @triple_free) nounwind
  %6 = load %struct.Hash_table*** %ht_addr, align 8
  store %struct.Hash_table* %5, %struct.Hash_table** %6, align 8
  %7 = load %struct.Hash_table*** %ht_addr, align 8
  %8 = load %struct.Hash_table** %7, align 8
  %9 = icmp eq %struct.Hash_table* %8, null
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %10 = load %struct.Hash_table*** %ht_addr, align 8
  %11 = load %struct.Hash_table** %10, align 8
  %12 = load i8** %filename_addr, align 8
  %13 = load %struct.stat** %st_addr, align 8
  %14 = call zeroext i8 @seen_file(%struct.Hash_table* %11, i8* %12, %struct.stat* %13) nounwind
  %toBool = icmp ne i8 %14, 0
  br i1 %toBool, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 1, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %bb2
  %15 = load %struct.Hash_table*** %ht_addr, align 8
  %16 = load %struct.Hash_table** %15, align 8
  %17 = load i8** %filename_addr, align 8
  %18 = load %struct.stat** %st_addr, align 8
  call void @record_file(%struct.Hash_table* %16, i8* %17, %struct.stat* %18) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %19 = load i32* %0, align 4
  store i32 %19, i32* %retval, align 4
  %retval6 = load i32* %retval
  %retval67 = trunc i32 %retval6 to i8
  ret i8 %retval67
}

define i8* @canonicalize_filename_mode(i8* %name, i32 %can_mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %can_mode_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.24 = alloca i8
  %0 = alloca i8*
  %rname = alloca i8*
  %dest = alloca i8*
  %extra_buf = alloca i8*
  %start = alloca i8*
  %end = alloca i8*
  %rname_limit = alloca i8*
  %extra_len = alloca i64
  %ht = alloca %struct.Hash_table*
  %saved_errno = alloca i32
  %can_flags = alloca i32
  %logical = alloca i8
  %prefix_len = alloca i64
  %p = alloca i8*
  %st = alloca %struct.stat
  %dest_offset = alloca i64
  %new_size = alloca i64
  %buf = alloca i8*
  %n = alloca i64
  %len = alloca i64
  %pfxlen = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %can_mode, i32* %can_mode_addr
  store i8* null, i8** %extra_buf, align 8
  store i64 0, i64* %extra_len, align 8
  store %struct.Hash_table* null, %struct.Hash_table** %ht, align 8
  %1 = load i32* %can_mode_addr, align 4
  %2 = and i32 %1, -4
  store i32 %2, i32* %can_flags, align 4
  %3 = load i32* %can_flags, align 4
  %4 = and i32 %3, 4
  %5 = icmp ne i32 %4, 0
  %6 = zext i1 %5 to i8
  store i8 %6, i8* %logical, align 1
  %7 = load i32* %can_mode_addr, align 4
  %8 = and i32 %7, 3
  store i32 %8, i32* %can_mode_addr, align 4
  %9 = load i32* %can_mode_addr, align 4
  %10 = sub i32 %9, 1
  %11 = load i32* %can_mode_addr, align 4
  %12 = and i32 %10, %11
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  %14 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %14, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb1:                                              ; preds = %entry
  %15 = load i8** %name_addr, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %17 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %17, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb3:                                              ; preds = %bb1
  %18 = load i8** %name_addr, align 8
  %19 = getelementptr inbounds i8* %18, i64 0
  %20 = load i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %22 = call i32* @__errno_location() nounwind readnone
  store i32 2, i32* %22, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb5:                                              ; preds = %bb3
  store i64 0, i64* %prefix_len, align 8
  %23 = load i8** %name_addr, align 8
  %24 = getelementptr inbounds i8* %23, i64 0
  %25 = load i8* %24, align 1
  %26 = icmp ne i8 %25, 47
  br i1 %26, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %27 = call i8* @xgetcwd() nounwind
  store i8* %27, i8** %rname, align 8
  %28 = load i8** %rname, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb100

bb8:                                              ; preds = %bb6
  %30 = load i8** %rname, align 8
  %31 = call i8* @strchr(i8* %30, i32 0) nounwind readonly
  store i8* %31, i8** %dest, align 8
  %32 = load i8** %dest, align 8
  %33 = ptrtoint i8* %32 to i64
  %34 = load i8** %rname, align 8
  %35 = ptrtoint i8* %34 to i64
  %36 = sub nsw i64 %33, %35
  %37 = icmp sle i64 %36, 4095
  br i1 %37, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %38 = load i8** %rname, align 8
  %39 = call i8* @xrealloc(i8* %38, i64 4096) nounwind
  store i8* %39, i8** %p, align 8
  %40 = load i8** %dest, align 8
  %41 = ptrtoint i8* %40 to i64
  %42 = load i8** %rname, align 8
  %43 = ptrtoint i8* %42 to i64
  %44 = sub nsw i64 %41, %43
  %45 = load i8** %p, align 8
  %46 = getelementptr inbounds i8* %45, i64 %44
  store i8* %46, i8** %dest, align 8
  %47 = load i8** %p, align 8
  store i8* %47, i8** %rname, align 8
  %48 = load i8** %rname, align 8
  %49 = getelementptr inbounds i8* %48, i64 4096
  store i8* %49, i8** %rname_limit, align 8
  br label %bb11

bb10:                                             ; preds = %bb8
  %50 = load i8** %dest, align 8
  store i8* %50, i8** %rname_limit, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %51 = load i8** %name_addr, align 8
  store i8* %51, i8** %start, align 8
  store i64 0, i64* %prefix_len, align 8
  br label %bb89

bb12:                                             ; preds = %bb5
  %52 = call noalias i8* @xmalloc(i64 4096) nounwind
  store i8* %52, i8** %rname, align 8
  %53 = load i8** %rname, align 8
  %54 = getelementptr inbounds i8* %53, i64 4096
  store i8* %54, i8** %rname_limit, align 8
  %55 = load i8** %rname, align 8
  store i8* %55, i8** %dest, align 8
  %56 = load i64* %prefix_len, align 8
  %57 = icmp ne i64 %56, 0
  br i1 %57, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %58 = load i8** %rname, align 8
  %59 = load i8** %name_addr, align 8
  %60 = load i64* %prefix_len, align 8
  %61 = call i8* @memcpy(i8* %58, i8* %59, i64 %60)
  %62 = load i8** %dest, align 8
  %63 = load i64* %prefix_len, align 8
  %64 = getelementptr inbounds i8* %62, i64 %63
  store i8* %64, i8** %dest, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %65 = load i8** %dest, align 8
  store i8 47, i8* %65, align 1
  %66 = load i8** %dest, align 8
  %67 = getelementptr inbounds i8* %66, i64 1
  store i8* %67, i8** %dest, align 8
  %68 = load i8** %name_addr, align 8
  %69 = load i64* %prefix_len, align 8
  %70 = getelementptr inbounds i8* %68, i64 %69
  store i8* %70, i8** %start, align 8
  br label %bb89

bb17:                                             ; preds = %bb18
  %71 = getelementptr inbounds i8* %75, i64 1
  store i8* %71, i8** %start, align 8
  br label %bb18

bb18:                                             ; preds = %bb89, %bb17
  %72 = load i8** %start, align 8
  %73 = load i8* %72, align 1
  %74 = icmp eq i8 %73, 47
  %75 = load i8** %start, align 8
  br i1 %74, label %bb17, label %bb19

bb19:                                             ; preds = %bb18
  store i8* %75, i8** %end, align 8
  br label %bb21

bb20:                                             ; preds = %bb22
  %76 = load i8** %end, align 8
  %77 = getelementptr inbounds i8* %76, i64 1
  store i8* %77, i8** %end, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %78 = load i8** %end, align 8
  %79 = load i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %bb23, label %bb22

bb22:                                             ; preds = %bb21
  %81 = load i8** %end, align 8
  %82 = load i8* %81, align 1
  %83 = icmp ne i8 %82, 47
  br i1 %83, label %bb20, label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %84 = load i8** %end, align 8
  %85 = load i8** %start, align 8
  %86 = icmp eq i8* %84, %85
  br i1 %86, label %bb90, label %bb24

bb24:                                             ; preds = %bb23
  %87 = load i8** %end, align 8
  %88 = ptrtoint i8* %87 to i64
  %89 = load i8** %start, align 8
  %90 = ptrtoint i8* %89 to i64
  %91 = sub nsw i64 %88, %90
  %92 = icmp ne i64 %91, 1
  br i1 %92, label %bb27, label %bb25

bb25:                                             ; preds = %bb24
  %93 = load i8** %start, align 8
  %94 = getelementptr inbounds i8* %93, i64 0
  %95 = load i8* %94, align 1
  %96 = icmp ne i8 %95, 46
  br i1 %96, label %bb27, label %bb88

bb27:                                             ; preds = %bb25, %bb24
  %97 = load i8** %end, align 8
  %98 = ptrtoint i8* %97 to i64
  %99 = load i8** %start, align 8
  %100 = ptrtoint i8* %99 to i64
  %101 = sub nsw i64 %98, %100
  %102 = icmp ne i64 %101, 2
  br i1 %102, label %bb36, label %bb28

bb28:                                             ; preds = %bb27
  %103 = load i8** %start, align 8
  %104 = getelementptr inbounds i8* %103, i64 0
  %105 = load i8* %104, align 1
  %106 = icmp ne i8 %105, 46
  br i1 %106, label %bb36, label %bb29

bb29:                                             ; preds = %bb28
  %107 = load i8** %start, align 8
  %108 = getelementptr inbounds i8* %107, i64 1
  %109 = load i8* %108, align 1
  %110 = icmp ne i8 %109, 46
  br i1 %110, label %bb36, label %bb30

bb30:                                             ; preds = %bb29
  %111 = load i8** %rname, align 8
  %112 = load i64* %prefix_len, align 8
  %113 = getelementptr inbounds i8* %111, i64 %112
  %114 = getelementptr inbounds i8* %113, i64 1
  %115 = load i8** %dest, align 8
  %116 = icmp ult i8* %114, %115
  br i1 %116, label %bb31, label %bb88

bb31:                                             ; preds = %bb30
  %117 = load i8** %dest, align 8
  %118 = getelementptr inbounds i8* %117, i64 -1
  store i8* %118, i8** %dest, align 8
  br label %bb33

bb32:                                             ; preds = %bb34
  %119 = load i8** %dest, align 8
  %120 = getelementptr inbounds i8* %119, i64 -1
  store i8* %120, i8** %dest, align 8
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31
  %121 = load i8** %dest, align 8
  %122 = load i8** %rname, align 8
  %123 = icmp ule i8* %121, %122
  br i1 %123, label %bb88, label %bb34

bb34:                                             ; preds = %bb33
  %124 = load i8** %dest, align 8
  %125 = getelementptr inbounds i8* %124, i64 -1
  %126 = load i8* %125, align 1
  %127 = icmp ne i8 %126, 47
  br i1 %127, label %bb32, label %bb88

bb36:                                             ; preds = %bb29, %bb28, %bb27
  %128 = load i8** %dest, align 8
  %129 = getelementptr inbounds i8* %128, i64 -1
  %130 = load i8* %129, align 1
  %131 = icmp ne i8 %130, 47
  br i1 %131, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %132 = load i8** %dest, align 8
  store i8 47, i8* %132, align 1
  %133 = load i8** %dest, align 8
  %134 = getelementptr inbounds i8* %133, i64 1
  store i8* %134, i8** %dest, align 8
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %135 = load i8** %end, align 8
  %136 = ptrtoint i8* %135 to i64
  %137 = load i8** %start, align 8
  %138 = ptrtoint i8* %137 to i64
  %139 = sub nsw i64 %136, %138
  %140 = load i8** %dest, align 8
  %141 = getelementptr inbounds i8* %140, i64 %139
  %142 = load i8** %rname_limit, align 8
  %143 = icmp uge i8* %141, %142
  br i1 %143, label %bb39, label %bb43

bb39:                                             ; preds = %bb38
  %144 = load i8** %dest, align 8
  %145 = ptrtoint i8* %144 to i64
  %146 = load i8** %rname, align 8
  %147 = ptrtoint i8* %146 to i64
  %148 = sub nsw i64 %145, %147
  store i64 %148, i64* %dest_offset, align 8
  %149 = load i8** %rname_limit, align 8
  %150 = ptrtoint i8* %149 to i64
  %151 = load i8** %rname, align 8
  %152 = ptrtoint i8* %151 to i64
  %153 = sub nsw i64 %150, %152
  store i64 %153, i64* %new_size, align 8
  %154 = load i8** %end, align 8
  %155 = ptrtoint i8* %154 to i64
  %156 = load i8** %start, align 8
  %157 = ptrtoint i8* %156 to i64
  %158 = sub nsw i64 %155, %157
  %159 = add nsw i64 %158, 1
  %160 = icmp sgt i64 %159, 4096
  br i1 %160, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  %161 = load i8** %end, align 8
  %162 = ptrtoint i8* %161 to i64
  %163 = load i8** %start, align 8
  %164 = ptrtoint i8* %163 to i64
  %165 = sub nsw i64 %162, %164
  %166 = load i64* %new_size, align 8
  %167 = add i64 %165, %166
  %168 = add i64 %167, 1
  store i64 %168, i64* %new_size, align 8
  br label %bb42

bb41:                                             ; preds = %bb39
  %169 = load i64* %new_size, align 8
  %170 = add i64 %169, 4096
  store i64 %170, i64* %new_size, align 8
  br label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %171 = load i8** %rname, align 8
  %172 = load i64* %new_size, align 8
  %173 = call i8* @xrealloc(i8* %171, i64 %172) nounwind
  store i8* %173, i8** %rname, align 8
  %174 = load i8** %rname, align 8
  %175 = load i64* %new_size, align 8
  %176 = getelementptr inbounds i8* %174, i64 %175
  store i8* %176, i8** %rname_limit, align 8
  %177 = load i8** %rname, align 8
  %178 = load i64* %dest_offset, align 8
  %179 = getelementptr inbounds i8* %177, i64 %178
  store i8* %179, i8** %dest, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb38
  %180 = load i8** %end, align 8
  %181 = ptrtoint i8* %180 to i64
  %182 = load i8** %start, align 8
  %183 = ptrtoint i8* %182 to i64
  %184 = sub nsw i64 %181, %183
  %185 = load i8** %dest, align 8
  %186 = load i8** %start, align 8
  %187 = call i8* @memcpy(i8* %185, i8* %186, i64 %184)
  store i8* %185, i8** %dest, align 8
  %188 = load i8** %end, align 8
  %189 = ptrtoint i8* %188 to i64
  %190 = load i8** %start, align 8
  %191 = ptrtoint i8* %190 to i64
  %192 = sub nsw i64 %189, %191
  %193 = load i8** %dest, align 8
  %194 = getelementptr inbounds i8* %193, i64 %192
  store i8* %194, i8** %dest, align 8
  %195 = load i8** %dest, align 8
  store i8 0, i8* %195, align 1
  %196 = load i8* %logical, align 1
  %toBool = icmp ne i8 %196, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot44 = zext i1 %toBoolnot to i8
  %toBool46 = icmp ne i8 %toBoolnot44, 0
  br i1 %toBool46, label %bb49, label %bb47

bb47:                                             ; preds = %bb43
  %197 = load i32* %can_mode_addr, align 4
  %198 = icmp ne i32 %197, 2
  br i1 %198, label %bb49, label %bb48

bb48:                                             ; preds = %bb47
  %199 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  store i32 0, i32* %199, align 8
  br label %bb61

bb49:                                             ; preds = %bb47, %bb43
  %200 = load i8* %logical, align 1
  %toBool50 = icmp ne i8 %200, 0
  %201 = load i8** %rname, align 8
  br i1 %toBool50, label %bb51, label %bb52

bb51:                                             ; preds = %bb49
  %202 = call i32 @stat(i8* noalias %201, %struct.stat* noalias %st) nounwind
  %203 = icmp ne i32 %202, 0
  %204 = zext i1 %203 to i8
  store i8 %204, i8* %iftmp.24, align 1
  br label %bb53

bb52:                                             ; preds = %bb49
  %205 = call i32 @lstat(i8* noalias %201, %struct.stat* noalias %st) nounwind
  %206 = icmp ne i32 %205, 0
  %207 = zext i1 %206 to i8
  store i8 %207, i8* %iftmp.24, align 1
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %208 = load i8* %iftmp.24, align 1
  %toBool54 = icmp ne i8 %208, 0
  br i1 %toBool54, label %bb55, label %bb61

bb55:                                             ; preds = %bb53
  %209 = call i32* @__errno_location() nounwind readnone
  %210 = load i32* %209, align 4
  store i32 %210, i32* %saved_errno, align 4
  %211 = load i32* %can_mode_addr, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %error, label %bb56

bb56:                                             ; preds = %bb55
  %213 = load i32* %can_mode_addr, align 4
  %214 = icmp eq i32 %213, 1
  br i1 %214, label %bb57, label %bb60

bb57:                                             ; preds = %bb56
  %215 = load i8** %end, align 8
  %216 = call i64 @strspn(i8* %215, i8* getelementptr inbounds ([2 x i8]* @.str123, i64 0, i64 0)) nounwind readonly
  %217 = load i8** %end, align 8
  %218 = getelementptr inbounds i8* %217, i64 %216
  %219 = load i8* %218, align 1
  %220 = icmp ne i8 %219, 0
  br i1 %220, label %error, label %bb58

bb58:                                             ; preds = %bb57
  %221 = load i32* %saved_errno, align 4
  %222 = icmp ne i32 %221, 2
  br i1 %222, label %error, label %bb88

bb60:                                             ; preds = %bb56
  %223 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  store i32 0, i32* %223, align 8
  br label %bb61

bb61:                                             ; preds = %bb60, %bb53, %bb48
  %224 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %225 = load i32* %224, align 8
  %226 = and i32 %225, 61440
  %227 = icmp eq i32 %226, 40960
  br i1 %227, label %bb62, label %bb84

bb62:                                             ; preds = %bb61
  %228 = load i8** %name_addr, align 8
  %229 = call zeroext i8 @seen_triple(%struct.Hash_table** %ht, i8* %228, %struct.stat* %st) nounwind
  %toBool63 = icmp ne i8 %229, 0
  br i1 %toBool63, label %bb64, label %bb66

bb64:                                             ; preds = %bb62
  %230 = load i32* %can_mode_addr, align 4
  %231 = icmp eq i32 %230, 2
  br i1 %231, label %bb88, label %bb65

bb65:                                             ; preds = %bb64
  store i32 40, i32* %saved_errno, align 4
  br label %error

bb66:                                             ; preds = %bb62
  %232 = getelementptr inbounds %struct.stat* %st, i32 0, i32 8
  %233 = load i64* %232, align 8
  %234 = load i8** %rname, align 8
  %235 = call i8* @areadlink_with_size(i8* %234, i64 %233) nounwind
  store i8* %235, i8** %buf, align 8
  %236 = load i8** %buf, align 8
  %237 = icmp eq i8* %236, null
  br i1 %237, label %bb67, label %bb70

bb67:                                             ; preds = %bb66
  %238 = load i32* %can_mode_addr, align 4
  %239 = icmp eq i32 %238, 2
  br i1 %239, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  %240 = call i32* @__errno_location() nounwind readnone
  %241 = load i32* %240, align 4
  %242 = icmp ne i32 %241, 12
  br i1 %242, label %bb88, label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %243 = call i32* @__errno_location() nounwind readnone
  %244 = load i32* %243, align 4
  store i32 %244, i32* %saved_errno, align 4
  br label %error

bb70:                                             ; preds = %bb66
  %245 = load i8** %buf, align 8
  %246 = call i64 @strlen(i8* %245) nounwind readonly
  store i64 %246, i64* %n, align 8
  %247 = load i8** %end, align 8
  %248 = call i64 @strlen(i8* %247) nounwind readonly
  store i64 %248, i64* %len, align 8
  %249 = load i64* %extra_len, align 8
  %250 = icmp eq i64 %249, 0
  %251 = load i64* %n, align 8
  %252 = load i64* %len, align 8
  %253 = add i64 %251, %252
  %254 = add i64 %253, 1
  br i1 %250, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  %255 = icmp uge i64 %254, 4096
  %max = select i1 %255, i64 %254, i64 4096
  store i64 %max, i64* %extra_len, align 8
  %256 = load i64* %extra_len, align 8
  %257 = call noalias i8* @xmalloc(i64 %256) nounwind
  store i8* %257, i8** %extra_buf, align 8
  br label %bb74

bb72:                                             ; preds = %bb70
  %258 = load i64* %extra_len, align 8
  %259 = icmp ugt i64 %254, %258
  br i1 %259, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %260 = load i64* %n, align 8
  %261 = load i64* %len, align 8
  %262 = add i64 %260, %261
  %263 = add i64 %262, 1
  store i64 %263, i64* %extra_len, align 8
  %264 = load i8** %extra_buf, align 8
  %265 = load i64* %extra_len, align 8
  %266 = call i8* @xrealloc(i8* %264, i64 %265) nounwind
  store i8* %266, i8** %extra_buf, align 8
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72, %bb71
  %267 = load i64* %len, align 8
  %268 = add i64 %267, 1
  %269 = load i8** %extra_buf, align 8
  %270 = load i64* %n, align 8
  %271 = getelementptr inbounds i8* %269, i64 %270
  %272 = load i8** %end, align 8
  %273 = call i8* @memmove(i8* %271, i8* %272, i64 %268)
  %274 = load i8** %extra_buf, align 8
  %275 = load i8** %buf, align 8
  %276 = load i64* %n, align 8
  %277 = call i8* @memcpy(i8* %274, i8* %275, i64 %276)
  store i8* %274, i8** %end, align 8
  %278 = load i8** %end, align 8
  store i8* %278, i8** %name_addr, align 8
  %279 = load i8** %buf, align 8
  %280 = getelementptr inbounds i8* %279, i64 0
  %281 = load i8* %280, align 1
  %282 = icmp eq i8 %281, 47
  br i1 %282, label %bb75, label %bb78

bb75:                                             ; preds = %bb74
  store i64 0, i64* %pfxlen, align 8
  %283 = load i64* %pfxlen, align 8
  %284 = icmp ne i64 %283, 0
  br i1 %284, label %bb76, label %bb77

bb76:                                             ; preds = %bb75
  %285 = load i8** %rname, align 8
  %286 = load i8** %buf, align 8
  %287 = load i64* %pfxlen, align 8
  %288 = call i8* @memcpy(i8* %285, i8* %286, i64 %287)
  br label %bb77

bb77:                                             ; preds = %bb76, %bb75
  %289 = load i8** %rname, align 8
  %290 = load i64* %pfxlen, align 8
  %291 = getelementptr inbounds i8* %289, i64 %290
  store i8* %291, i8** %dest, align 8
  %292 = load i8** %dest, align 8
  store i8 47, i8* %292, align 1
  %293 = load i8** %dest, align 8
  %294 = getelementptr inbounds i8* %293, i64 1
  store i8* %294, i8** %dest, align 8
  %295 = load i64* %pfxlen, align 8
  store i64 %295, i64* %prefix_len, align 8
  br label %bb83

bb78:                                             ; preds = %bb74
  %296 = load i8** %rname, align 8
  %297 = load i64* %prefix_len, align 8
  %298 = getelementptr inbounds i8* %296, i64 %297
  %299 = getelementptr inbounds i8* %298, i64 1
  %300 = load i8** %dest, align 8
  %301 = icmp ult i8* %299, %300
  br i1 %301, label %bb79, label %bb83

bb79:                                             ; preds = %bb78
  %302 = load i8** %dest, align 8
  %303 = getelementptr inbounds i8* %302, i64 -1
  store i8* %303, i8** %dest, align 8
  br label %bb81

bb80:                                             ; preds = %bb82
  %304 = load i8** %dest, align 8
  %305 = getelementptr inbounds i8* %304, i64 -1
  store i8* %305, i8** %dest, align 8
  br label %bb81

bb81:                                             ; preds = %bb80, %bb79
  %306 = load i8** %dest, align 8
  %307 = load i8** %rname, align 8
  %308 = icmp ule i8* %306, %307
  br i1 %308, label %bb83, label %bb82

bb82:                                             ; preds = %bb81
  %309 = load i8** %dest, align 8
  %310 = getelementptr inbounds i8* %309, i64 -1
  %311 = load i8* %310, align 1
  %312 = icmp ne i8 %311, 47
  br i1 %312, label %bb80, label %bb83

bb83:                                             ; preds = %bb82, %bb81, %bb78, %bb77
  %313 = load i8** %buf, align 8
  call void @free(i8* %313) nounwind
  br label %bb88

bb84:                                             ; preds = %bb61
  %314 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %315 = load i32* %314, align 8
  %316 = and i32 %315, 61440
  %317 = icmp ne i32 %316, 16384
  br i1 %317, label %bb85, label %bb88

bb85:                                             ; preds = %bb84
  %318 = load i8** %end, align 8
  %319 = load i8* %318, align 1
  %320 = icmp ne i8 %319, 0
  br i1 %320, label %bb86, label %bb88

bb86:                                             ; preds = %bb85
  %321 = load i32* %can_mode_addr, align 4
  %322 = icmp ne i32 %321, 2
  br i1 %322, label %bb87, label %bb88

bb87:                                             ; preds = %bb86
  store i32 20, i32* %saved_errno, align 4
  br label %error

bb88:                                             ; preds = %bb58, %bb30, %bb33, %bb34, %bb25, %bb86, %bb85, %bb84, %bb83, %bb68, %bb64
  %323 = load i8** %end, align 8
  store i8* %323, i8** %start, align 8
  br label %bb89

bb89:                                             ; preds = %bb11, %bb14, %bb88
  %324 = load i8** %start, align 8
  %325 = load i8* %324, align 1
  %326 = icmp ne i8 %325, 0
  br i1 %326, label %bb18, label %bb90

bb90:                                             ; preds = %bb89, %bb23
  %327 = load i8** %rname, align 8
  %328 = load i64* %prefix_len, align 8
  %329 = getelementptr inbounds i8* %327, i64 %328
  %330 = getelementptr inbounds i8* %329, i64 1
  %331 = load i8** %dest, align 8
  %332 = icmp ult i8* %330, %331
  br i1 %332, label %bb91, label %bb93

bb91:                                             ; preds = %bb90
  %333 = load i8** %dest, align 8
  %334 = getelementptr inbounds i8* %333, i64 -1
  %335 = load i8* %334, align 1
  %336 = icmp eq i8 %335, 47
  br i1 %336, label %bb92, label %bb93

bb92:                                             ; preds = %bb91
  %337 = load i8** %dest, align 8
  %338 = getelementptr inbounds i8* %337, i64 -1
  store i8* %338, i8** %dest, align 8
  br label %bb93

bb93:                                             ; preds = %bb92, %bb91, %bb90
  %339 = load i8** %dest, align 8
  store i8 0, i8* %339, align 1
  %340 = load i8** %dest, align 8
  %341 = getelementptr inbounds i8* %340, i64 1
  %342 = load i8** %rname_limit, align 8
  %343 = icmp ne i8* %341, %342
  br i1 %343, label %bb94, label %bb95

bb94:                                             ; preds = %bb93
  %344 = load i8** %dest, align 8
  %345 = ptrtoint i8* %344 to i64
  %346 = load i8** %rname, align 8
  %347 = ptrtoint i8* %346 to i64
  %348 = sub nsw i64 %345, %347
  %349 = add nsw i64 %348, 1
  %350 = load i8** %rname, align 8
  %351 = call i8* @xrealloc(i8* %350, i64 %349) nounwind
  store i8* %351, i8** %rname, align 8
  br label %bb95

bb95:                                             ; preds = %bb94, %bb93
  %352 = load i8** %extra_buf, align 8
  call void @free(i8* %352) nounwind
  %353 = load %struct.Hash_table** %ht, align 8
  %354 = icmp ne %struct.Hash_table* %353, null
  br i1 %354, label %bb96, label %bb97

bb96:                                             ; preds = %bb95
  %355 = load %struct.Hash_table** %ht, align 8
  call void @hash_free(%struct.Hash_table* %355) nounwind
  br label %bb97

bb97:                                             ; preds = %bb96, %bb95
  %356 = load i8** %rname, align 8
  store i8* %356, i8** %0, align 8
  br label %bb100

error:                                            ; preds = %bb87, %bb69, %bb65, %bb58, %bb57, %bb55
  %357 = load i8** %extra_buf, align 8
  call void @free(i8* %357) nounwind
  %358 = load i8** %rname, align 8
  call void @free(i8* %358) nounwind
  %359 = load %struct.Hash_table** %ht, align 8
  %360 = icmp ne %struct.Hash_table* %359, null
  br i1 %360, label %bb98, label %bb99

bb98:                                             ; preds = %error
  %361 = load %struct.Hash_table** %ht, align 8
  call void @hash_free(%struct.Hash_table* %361) nounwind
  br label %bb99

bb99:                                             ; preds = %bb98, %error
  %362 = call i32* @__errno_location() nounwind readnone
  %363 = load i32* %saved_errno, align 4
  store i32 %363, i32* %362, align 4
  store i8* null, i8** %0, align 8
  br label %bb100

bb100:                                            ; preds = %bb99, %bb97, %bb7, %bb4, %bb2, %bb
  %364 = load i8** %0, align 8
  store i8* %364, i8** %retval, align 8
  %retval101 = load i8** %retval
  ret i8* %retval101
}

declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define void @close_stdout_set_file_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %0 = load i8** %file_addr, align 8
  store i8* %0, i8** @file_name, align 8
  ret void
}

define void @close_stdout_set_ignore_EPIPE(i8 zeroext %ignore) nounwind {
entry:
  %ignore_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  store i8 %ignore, i8* %ignore_addr
  %0 = load i8* %ignore_addr, align 1
  store i8 %0, i8* @ignore_EPIPE, align 1
  ret void
}

define void @close_stdout() nounwind {
entry:
  %write_error = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i32 @close_stream(%struct.FILE* %0) nounwind
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %bb, label %bb9

bb:                                               ; preds = %entry
  %3 = load i8* @ignore_EPIPE, align 1
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb4

bb4:                                              ; preds = %bb
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp ne i32 %5, 32
  br i1 %6, label %bb5, label %bb9

bb5:                                              ; preds = %bb4, %bb
  %7 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str125, i64 0, i64 0)) nounwind
  store i8* %7, i8** %write_error, align 8
  %8 = load i8** @file_name, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %10 = load i8** @file_name, align 8
  %11 = call i8* @quotearg_colon(i8* %10) nounwind
  %12 = call i32* @__errno_location() nounwind readnone
  %13 = load i32* %12, align 4
  %14 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %13, i8* getelementptr inbounds ([7 x i8]* @.str1126, i64 0, i64 0), i8* %11, i8* %14) nounwind
  br label %bb8

bb7:                                              ; preds = %bb5
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %16, i8* getelementptr inbounds ([3 x i8]* @.str2127, i64 0, i64 0), i8* %17) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %18 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %18) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb4, %entry
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 @close_stream(%struct.FILE* %19) nounwind
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb10, label %return

bb10:                                             ; preds = %bb9
  %22 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %22) noreturn nounwind
  unreachable

return:                                           ; preds = %bb9
  ret void
}

declare void @_exit(i32) noreturn nounwind

define i8* @dir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i8* @mdir_name(i8* %1) nounwind
  store i8* %2, i8** %result, align 8
  %3 = load i8** %result, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %result, align 8
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i64 @dir_len(i8* %file) nounwind readonly {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.0 = alloca i32
  %prefix_length = alloca i64
  %length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 0, i64* %prefix_length, align 8
  %1 = load i64* %prefix_length, align 8
  %2 = icmp ne i64 %1, 0
  br i1 %2, label %bb2, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %file_addr, align 8
  %4 = getelementptr inbounds i8* %3, i64 0
  %5 = load i8* %4, align 1
  %6 = icmp ne i8 %5, 47
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4
  %8 = sext i32 %7 to i64
  %9 = load i64* %prefix_length, align 8
  %10 = add i64 %8, %9
  store i64 %10, i64* %prefix_length, align 8
  %11 = load i8** %file_addr, align 8
  %12 = call i8* @last_component(i8* %11) nounwind readonly
  %13 = ptrtoint i8* %12 to i64
  %14 = load i8** %file_addr, align 8
  %15 = ptrtoint i8* %14 to i64
  %16 = sub nsw i64 %13, %15
  store i64 %16, i64* %length, align 8
  br label %bb6

bb4:                                              ; preds = %bb6
  %17 = load i64* %length, align 8
  %18 = sub i64 %17, 1
  %19 = load i8** %file_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = icmp ne i8 %21, 47
  br i1 %22, label %bb7, label %bb5

bb5:                                              ; preds = %bb4
  %23 = load i64* %length, align 8
  %24 = sub i64 %23, 1
  store i64 %24, i64* %length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %25 = load i64* %prefix_length, align 8
  %26 = load i64* %length, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %bb4, label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %28 = load i64* %length, align 8
  store i64 %28, i64* %0, align 8
  %29 = load i64* %0, align 8
  store i64 %29, i64* %retval, align 8
  %retval8 = load i64* %retval
  ret i64 %retval8
}

define i8* @mdir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %length = alloca i64
  %append_dot = alloca i8
  %dir = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i64 @dir_len(i8* %1) nounwind readonly
  store i64 %2, i64* %length, align 8
  %3 = load i64* %length, align 8
  %4 = icmp eq i64 %3, 0
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %append_dot, align 1
  %6 = load i8* %append_dot, align 1
  %7 = zext i8 %6 to i64
  %8 = load i64* %length, align 8
  %9 = add i64 %7, %8
  %10 = add i64 %9, 1
  %11 = call noalias i8* @malloc(i64 %10) nounwind
  store i8* %11, i8** %dir, align 8
  %12 = load i8** %dir, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb4

bb1:                                              ; preds = %entry
  %14 = load i8** %dir, align 8
  %15 = load i8** %file_addr, align 8
  %16 = load i64* %length, align 8
  %17 = call i8* @memcpy(i8* %14, i8* %15, i64 %16)
  %18 = load i8* %append_dot, align 1
  %toBool = icmp ne i8 %18, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %19 = load i8** %dir, align 8
  %20 = load i64* %length, align 8
  %21 = getelementptr inbounds i8* %19, i64 %20
  store i8 46, i8* %21, align 1
  %22 = load i64* %length, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %24 = load i8** %dir, align 8
  %25 = load i64* %length, align 8
  %26 = getelementptr inbounds i8* %24, i64 %25
  store i8 0, i8* %26, align 1
  %27 = load i8** %dir, align 8
  store i8* %27, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %28 = load i8** %0, align 8
  store i8* %28, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

declare noalias i8* @malloc(i64) nounwind

define i8* @last_component(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %base = alloca i8*
  %p = alloca i8*
  %saw_slash = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 0
  store i8* %2, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb1

bb:                                               ; preds = %bb1
  %3 = getelementptr inbounds i8* %7, i64 1
  store i8* %3, i8** %base, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i8** %base, align 8
  %5 = load i8* %4, align 1
  %6 = icmp eq i8 %5, 47
  %7 = load i8** %base, align 8
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i8* %7, i8** %p, align 8
  br label %bb8

bb3:                                              ; preds = %bb8
  %8 = load i8** %p, align 8
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %saw_slash, align 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %11 = load i8* %saw_slash, align 1
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %12 = load i8** %p, align 8
  store i8* %12, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5, %bb4
  %13 = load i8** %p, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  store i8* %14, i8** %p, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb2
  %15 = load i8** %p, align 8
  %16 = load i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %bb3, label %bb9

bb9:                                              ; preds = %bb8
  %18 = load i8** %base, align 8
  store i8* %18, i8** %0, align 8
  %19 = load i8** %0, align 8
  store i8* %19, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i64 @base_len(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %len = alloca i64
  %prefix_len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i64 0, i64* %prefix_len, align 8
  %1 = load i8** %name_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %len, align 8
  br label %bb1

bb:                                               ; preds = %bb2
  %3 = load i64* %len, align 8
  %4 = sub i64 %3, 1
  store i64 %4, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %5 = load i64* %len, align 8
  %6 = icmp ule i64 %5, 1
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load i64* %len, align 8
  %8 = sub i64 %7, 1
  %9 = load i8** %name_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 %8
  %11 = load i8* %10, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i64* %len, align 8
  store i64 %13, i64* %0, align 8
  %14 = load i64* %0, align 8
  store i64 %14, i64* %retval, align 8
  %retval4 = load i64* %retval
  ret i64 %retval4
}

define void @record_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*
  %ent_from_table = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %0 = load %struct.Hash_table** %ht_addr, align 8
  %1 = icmp eq %struct.Hash_table* %0, null
  br i1 %1, label %return, label %bb

bb:                                               ; preds = %entry
  %2 = call noalias i8* @xmalloc(i64 24) nounwind
  %3 = bitcast i8* %2 to %struct.F_triple*
  store %struct.F_triple* %3, %struct.F_triple** %ent, align 8
  %4 = load i8** %file_addr, align 8
  %5 = call noalias i8* @xstrdup(i8* %4) nounwind
  %6 = load %struct.F_triple** %ent, align 8
  %7 = getelementptr inbounds %struct.F_triple* %6, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = load %struct.stat** %stats_addr, align 8
  %9 = getelementptr inbounds %struct.stat* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load %struct.F_triple** %ent, align 8
  %12 = getelementptr inbounds %struct.F_triple* %11, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  %13 = load %struct.stat** %stats_addr, align 8
  %14 = getelementptr inbounds %struct.stat* %13, i32 0, i32 0
  %15 = load i64* %14, align 8
  %16 = load %struct.F_triple** %ent, align 8
  %17 = getelementptr inbounds %struct.F_triple* %16, i32 0, i32 2
  store i64 %15, i64* %17, align 8
  %18 = load %struct.Hash_table** %ht_addr, align 8
  %19 = load %struct.F_triple** %ent, align 8
  %20 = bitcast %struct.F_triple* %19 to i8*
  %21 = call i8* @hash_insert(%struct.Hash_table* %18, i8* %20) nounwind
  %22 = bitcast i8* %21 to %struct.F_triple*
  store %struct.F_triple* %22, %struct.F_triple** %ent_from_table, align 8
  %23 = load %struct.F_triple** %ent_from_table, align 8
  %24 = icmp eq %struct.F_triple* %23, null
  br i1 %24, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb
  %25 = load %struct.F_triple** %ent_from_table, align 8
  %26 = load %struct.F_triple** %ent, align 8
  %27 = icmp ne %struct.F_triple* %25, %26
  br i1 %27, label %bb3, label %return

bb3:                                              ; preds = %bb2
  %28 = load %struct.F_triple** %ent, align 8
  %29 = bitcast %struct.F_triple* %28 to i8*
  call void @triple_free(i8* %29) nounwind
  br label %return

return:                                           ; preds = %entry, %bb2, %bb3
  ret void
}

define zeroext i8 @seen_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_ent = alloca %struct.F_triple
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %1 = load %struct.Hash_table** %ht_addr, align 8
  %2 = bitcast %struct.Hash_table* %1 to i8*
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb3

bb1:                                              ; preds = %entry
  %4 = load i8** %file_addr, align 8
  %5 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = load %struct.stat** %stats_addr, align 8
  %7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 1
  %8 = load i64* %7, align 8
  %9 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = load %struct.stat** %stats_addr, align 8
  %11 = getelementptr inbounds %struct.stat* %10, i32 0, i32 0
  %12 = load i64* %11, align 8
  %13 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = load %struct.Hash_table** %ht_addr, align 8
  %new_ent2 = bitcast %struct.F_triple* %new_ent to i8*
  %15 = call i8* @hash_lookup(%struct.Hash_table* %14, i8* %new_ent2) nounwind
  %16 = icmp ne i8* %15, null
  %17 = zext i1 %16 to i32
  store i32 %17, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define i64 @hash_get_n_buckets(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 2
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_buckets_used(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 3
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_entries(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_max_bucket_length(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %max_bucket_length = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %max_bucket_length, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  store i64 1, i64* %bucket_length, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %9 = add i64 %15, 1
  store i64 %9, i64* %bucket_length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %10 = load %struct.fs_type_list** %cursor, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 1
  %12 = load %struct.fs_type_list** %11, align 8
  store %struct.fs_type_list* %12, %struct.fs_type_list** %cursor, align 8
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = icmp ne %struct.fs_type_list* %13, null
  %15 = load i64* %bucket_length, align 8
  br i1 %14, label %bb2, label %bb4

bb4:                                              ; preds = %bb3
  %16 = load i64* %max_bucket_length, align 8
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = load i64* %bucket_length, align 8
  store i64 %18, i64* %max_bucket_length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb
  %19 = load %struct.fs_type_list** %bucket, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i64 1
  store %struct.fs_type_list* %20, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 1
  %23 = load %struct.fs_type_list** %22, align 8
  %24 = load %struct.fs_type_list** %bucket, align 8
  %25 = icmp ugt %struct.fs_type_list* %23, %24
  br i1 %25, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %26 = load i64* %max_bucket_length, align 8
  store i64 %26, i64* %0, align 8
  %27 = load i64* %0, align 8
  store i64 %27, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define zeroext i8 @hash_table_ok(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.fs_type_list*
  %n_buckets_used = alloca i64
  %n_entries = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %n_buckets_used, align 8
  store i64 0, i64* %n_entries, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb4

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  %9 = load i64* %n_buckets_used, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %n_buckets_used, align 8
  %11 = load i64* %n_entries, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %n_entries, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %13 = load i64* %n_entries, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %n_entries, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load %struct.fs_type_list** %cursor, align 8
  %16 = getelementptr inbounds %struct.fs_type_list* %15, i32 0, i32 1
  %17 = load %struct.fs_type_list** %16, align 8
  store %struct.fs_type_list* %17, %struct.fs_type_list** %cursor, align 8
  %18 = load %struct.fs_type_list** %cursor, align 8
  %19 = icmp ne %struct.fs_type_list* %18, null
  br i1 %19, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb
  %20 = load %struct.fs_type_list** %bucket, align 8
  %21 = getelementptr inbounds %struct.fs_type_list* %20, i64 1
  store %struct.fs_type_list* %21, %struct.fs_type_list** %bucket, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 1
  %24 = load %struct.fs_type_list** %23, align 8
  %25 = load %struct.fs_type_list** %bucket, align 8
  %26 = icmp ugt %struct.fs_type_list* %24, %25
  br i1 %26, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = getelementptr inbounds %struct.Hash_table* %27, i32 0, i32 3
  %29 = load i64* %28, align 8
  %30 = load i64* %n_buckets_used, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 4
  %34 = load i64* %33, align 8
  %35 = load i64* %n_entries, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %37 = load i32* %0, align 4
  store i32 %37, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define void @hash_print_statistics(%struct.Hash_table* %table, %struct.FILE* %stream) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %stream_addr = alloca %struct.FILE*, align 8
  %n_entries = alloca i64
  %n_buckets = alloca i64
  %n_buckets_used = alloca i64
  %max_bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = call i64 @hash_get_n_entries(%struct.Hash_table* %0) nounwind readonly
  store i64 %1, i64* %n_entries, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = call i64 @hash_get_n_buckets(%struct.Hash_table* %2) nounwind readonly
  store i64 %3, i64* %n_buckets, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = call i64 @hash_get_n_buckets_used(%struct.Hash_table* %4) nounwind readonly
  store i64 %5, i64* %n_buckets_used, align 8
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = call i64 @hash_get_max_bucket_length(%struct.Hash_table* %6) nounwind readonly
  store i64 %7, i64* %max_bucket_length, align 8
  %8 = load %struct.FILE** %stream_addr, align 8
  %9 = load i64* %n_entries, align 8
  %10 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %8, i8* noalias getelementptr inbounds ([24 x i8]* @.str135, i64 0, i64 0), i64 %9) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = load i64* %n_buckets, align 8
  %13 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([24 x i8]* @.str1136, i64 0, i64 0), i64 %12) nounwind
  %14 = load i64* %n_buckets_used, align 8
  %15 = uitofp i64 %14 to double
  %16 = fmul double %15, 1.000000e+02
  %17 = load i64* %n_buckets, align 8
  %18 = uitofp i64 %17 to double
  %19 = fdiv double %16, %18
  %20 = load %struct.FILE** %stream_addr, align 8
  %21 = load i64* %n_buckets_used, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %20, i8* noalias getelementptr inbounds ([33 x i8]* @.str2137, i64 0, i64 0), i64 %21, double %19) nounwind
  %23 = load %struct.FILE** %stream_addr, align 8
  %24 = load i64* %max_bucket_length, align 8
  %25 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %23, i8* noalias getelementptr inbounds ([24 x i8]* @.str3138, i64 0, i64 0), i64 %24) nounwind
  ret void
}

define internal %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %table, i8* %key) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %key_addr = alloca i8*, align 8
  %retval = alloca %struct.fs_type_list*
  %0 = alloca %struct.fs_type_list*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %key, i8** %key_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 6
  %3 = load i64 (i8*, i64)** %2, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 2
  %6 = load i64* %5, align 8
  %7 = load i8** %key_addr, align 8
  %8 = call i64 %3(i8* %7, i64 %6) nounwind
  store i64 %8, i64* %n, align 8
  %9 = load %struct.Hash_table** %table_addr, align 8
  %10 = getelementptr inbounds %struct.Hash_table* %9, i32 0, i32 2
  %11 = load i64* %10, align 8
  %12 = load i64* %n, align 8
  %13 = icmp ule i64 %11, %12
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 0
  %16 = load %struct.fs_type_list** %15, align 8
  %17 = load i64* %n, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %16, i64 %17
  store %struct.fs_type_list* %18, %struct.fs_type_list** %0, align 8
  %19 = load %struct.fs_type_list** %0, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %retval, align 8
  %retval2 = load %struct.fs_type_list** %retval
  ret %struct.fs_type_list* %retval2
}

define i8* @hash_lookup(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb9

bb2:                                              ; preds = %entry
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb7

bb3:                                              ; preds = %bb7
  %9 = load %struct.fs_type_list** %cursor, align 8
  %10 = getelementptr inbounds %struct.fs_type_list* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8** %entry_addr, align 8
  %13 = icmp eq i8* %11, %12
  br i1 %13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 7
  %16 = load i8 (i8*, i8*)** %15, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  %20 = load i8** %entry_addr, align 8
  %21 = call zeroext i8 %16(i8* %20, i8* %19) nounwind
  %toBool = icmp ne i8 %21, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  store i8* %24, i8** %0, align 8
  br label %bb9

bb6:                                              ; preds = %bb4
  %25 = load %struct.fs_type_list** %cursor, align 8
  %26 = getelementptr inbounds %struct.fs_type_list* %25, i32 0, i32 1
  %27 = load %struct.fs_type_list** %26, align 8
  store %struct.fs_type_list* %27, %struct.fs_type_list** %cursor, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb2
  %28 = load %struct.fs_type_list** %cursor, align 8
  %29 = icmp ne %struct.fs_type_list* %28, null
  br i1 %29, label %bb3, label %bb8

bb8:                                              ; preds = %bb7
  store i8* null, i8** %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5, %bb
  %30 = load i8** %0, align 8
  store i8* %30, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i8* @hash_get_first(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb7

bb1:                                              ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 0
  %7 = load %struct.fs_type_list** %6, align 8
  store %struct.fs_type_list* %7, %struct.fs_type_list** %bucket, align 8
  br label %bb2

bb2:                                              ; preds = %bb6, %bb1
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  %11 = load %struct.fs_type_list** %bucket, align 8
  %12 = icmp ule %struct.fs_type_list* %10, %11
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %13 = load %struct.fs_type_list** %bucket, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  %17 = load %struct.fs_type_list** %bucket, align 8
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  store i8* %19, i8** %0, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %20 = getelementptr inbounds %struct.fs_type_list* %17, i64 1
  store %struct.fs_type_list* %20, %struct.fs_type_list** %bucket, align 8
  br label %bb2

bb7:                                              ; preds = %bb5, %bb
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval8 = load i8** %retval
  ret i8* %retval8
}

define i8* @hash_get_next(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %4, %struct.fs_type_list** %cursor, align 8
  br label %bb

bb:                                               ; preds = %bb4, %entry
  %5 = load %struct.fs_type_list** %cursor, align 8
  %6 = getelementptr inbounds %struct.fs_type_list* %5, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load i8** %entry_addr, align 8
  %9 = icmp eq i8* %7, %8
  br i1 %9, label %bb2, label %bb4

bb2:                                              ; preds = %bb
  %10 = load %struct.fs_type_list** %cursor, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 1
  %12 = load %struct.fs_type_list** %11, align 8
  %13 = icmp ne %struct.fs_type_list* %12, null
  br i1 %13, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %14 = load %struct.fs_type_list** %cursor, align 8
  %15 = getelementptr inbounds %struct.fs_type_list* %14, i32 0, i32 1
  %16 = load %struct.fs_type_list** %15, align 8
  %17 = getelementptr inbounds %struct.fs_type_list* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %0, align 8
  br label %bb10

bb4:                                              ; preds = %bb2, %bb
  %19 = load %struct.fs_type_list** %cursor, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i32 0, i32 1
  %21 = load %struct.fs_type_list** %20, align 8
  store %struct.fs_type_list* %21, %struct.fs_type_list** %cursor, align 8
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = bitcast %struct.fs_type_list* %22 to i8*
  %24 = icmp ne i8* %23, null
  br i1 %24, label %bb, label %bb8

bb6:                                              ; preds = %bb8
  %25 = load %struct.fs_type_list** %bucket, align 8
  %26 = getelementptr inbounds %struct.fs_type_list* %25, i32 0, i32 0
  %27 = load i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %29 = load %struct.fs_type_list** %bucket, align 8
  %30 = getelementptr inbounds %struct.fs_type_list* %29, i32 0, i32 0
  %31 = load i8** %30, align 8
  store i8* %31, i8** %0, align 8
  br label %bb10

bb8:                                              ; preds = %bb4, %bb6
  %32 = load %struct.fs_type_list** %bucket, align 8
  %33 = getelementptr inbounds %struct.fs_type_list* %32, i64 1
  store %struct.fs_type_list* %33, %struct.fs_type_list** %bucket, align 8
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 1
  %36 = load %struct.fs_type_list** %35, align 8
  %37 = load %struct.fs_type_list** %bucket, align 8
  %38 = icmp ult %struct.fs_type_list* %37, %36
  br i1 %38, label %bb6, label %bb9

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define i64 @hash_get_entries(%struct.Hash_table* %table, i8** %buffer, i64 %buffer_size) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %buffer_addr = alloca i8**, align 8
  %buffer_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8** %buffer, i8*** %buffer_addr
  store i64 %buffer_size, i64* %buffer_size_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  %9 = load i64* %counter, align 8
  %10 = load i64* %buffer_size_addr, align 8
  %11 = icmp uge i64 %9, %10
  br i1 %11, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %12 = load i64* %counter, align 8
  store i64 %12, i64* %0, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = load i8*** %buffer_addr, align 8
  %17 = load i64* %counter, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  store i8* %15, i8** %18, align 1
  %19 = load i64* %counter, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %counter, align 8
  %21 = load %struct.fs_type_list** %cursor, align 8
  %22 = getelementptr inbounds %struct.fs_type_list* %21, i32 0, i32 1
  %23 = load %struct.fs_type_list** %22, align 8
  store %struct.fs_type_list* %23, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %24 = load %struct.fs_type_list** %cursor, align 8
  %25 = icmp ne %struct.fs_type_list* %24, null
  br i1 %25, label %bb2, label %bb6

bb6:                                              ; preds = %bb5, %bb
  %26 = load %struct.fs_type_list** %bucket, align 8
  %27 = getelementptr inbounds %struct.fs_type_list* %26, i64 1
  store %struct.fs_type_list* %27, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %28 = load %struct.Hash_table** %table_addr, align 8
  %29 = getelementptr inbounds %struct.Hash_table* %28, i32 0, i32 1
  %30 = load %struct.fs_type_list** %29, align 8
  %31 = load %struct.fs_type_list** %bucket, align 8
  %32 = icmp ugt %struct.fs_type_list* %30, %31
  br i1 %32, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %33 = load i64* %counter, align 8
  store i64 %33, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb3
  %34 = load i64* %0, align 8
  store i64 %34, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define i64 @hash_do_for_each(%struct.Hash_table* %table, i8 (i8*, i8*)* %processor, i8* %processor_data) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %processor_addr = alloca i8 (i8*, i8*)*, align 8
  %processor_data_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8 (i8*, i8*)* %processor, i8 (i8*, i8*)** %processor_addr
  store i8* %processor_data, i8** %processor_data_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %8, %struct.fs_type_list** %cursor, align 8
  br label %bb8

bb2:                                              ; preds = %bb8
  %9 = load %struct.fs_type_list** %cursor, align 8
  %10 = getelementptr inbounds %struct.fs_type_list* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8 (i8*, i8*)** %processor_addr, align 8
  %13 = load i8** %processor_data_addr, align 8
  %14 = call zeroext i8 %12(i8* %11, i8* %13) nounwind
  %toBool = icmp ne i8 %14, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot3 = zext i1 %toBoolnot to i8
  %toBool5 = icmp ne i8 %toBoolnot3, 0
  %15 = load i64* %counter, align 8
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb2
  store i64 %15, i64* %0, align 8
  br label %bb12

bb7:                                              ; preds = %bb2
  %16 = add i64 %15, 1
  store i64 %16, i64* %counter, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 1
  %19 = load %struct.fs_type_list** %18, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %cursor, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  %20 = load %struct.fs_type_list** %cursor, align 8
  %21 = icmp ne %struct.fs_type_list* %20, null
  br i1 %21, label %bb2, label %bb9

bb9:                                              ; preds = %bb8, %bb
  %22 = load %struct.fs_type_list** %bucket, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i64 1
  store %struct.fs_type_list* %23, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %24 = load %struct.Hash_table** %table_addr, align 8
  %25 = getelementptr inbounds %struct.Hash_table* %24, i32 0, i32 1
  %26 = load %struct.fs_type_list** %25, align 8
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = icmp ugt %struct.fs_type_list* %26, %27
  br i1 %28, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %29 = load i64* %counter, align 8
  store i64 %29, i64* %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb6
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval13 = load i64* %retval
  ret i64 %retval13
}

define i64 @hash_string(i8* %string, i64 %n_buckets) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %n_buckets_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %value = alloca i64
  %ch = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %n_buckets, i64* %n_buckets_addr
  store i64 0, i64* %value, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = mul i64 %15, 31
  %2 = load i8* %ch, align 1
  %3 = zext i8 %2 to i64
  %4 = add i64 %1, %3
  %5 = load i64* %n_buckets_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %value, align 8
  %9 = load i8** %string_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %string_addr, align 8
  br label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit, %entry
  %11 = load i8** %string_addr, align 8
  %12 = load i8* %11, align 1
  store i8 %12, i8* %ch, align 1
  %13 = load i8* %ch, align 1
  %14 = icmp ne i8 %13, 0
  %15 = load i64* %value, align 8
  br i1 %14, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i64 %15, i64* %0, align 8
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal zeroext i8 @is_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %divisor = alloca i64
  %square = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store i64 3, i64* %divisor, align 8
  %1 = load i64* %divisor, align 8
  %2 = load i64* %divisor, align 8
  %3 = mul i64 %1, %2
  store i64 %3, i64* %square, align 8
  br label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  %4 = load i64* %divisor, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %divisor, align 8
  %6 = load i64* %divisor, align 8
  %7 = mul i64 %6, 4
  %8 = load i64* %square, align 8
  %9 = add i64 %7, %8
  store i64 %9, i64* %square, align 8
  %10 = load i64* %divisor, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %divisor, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %square, align 8
  %13 = load i64* %candidate_addr, align 8
  %14 = icmp uge i64 %12, %13
  br i1 %14, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %15 = load i64* %candidate_addr, align 8
  %16 = load i64* %divisor, align 8
  %int_cast_to_i64 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %18, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %19 = urem i64 %15, %16
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %bb, label %bb3

bb3:                                              ; preds = %klee_div_zero_check.exit, %bb1
  %21 = load i64* %candidate_addr, align 8
  %22 = load i64* %divisor, align 8
  %int_cast_to_i641 = bitcast i64 %22 to i64
  %23 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %24 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %24, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %25 = urem i64 %21, %22
  %26 = icmp ne i64 %25, 0
  %27 = zext i1 %26 to i32
  store i32 %27, i32* %0, align 4
  %28 = load i32* %0, align 4
  store i32 %28, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal i64 @next_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  %1 = load i64* %candidate_addr, align 8
  %2 = icmp ule i64 %1, 9
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 10, i64* %candidate_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i64* %candidate_addr, align 8
  %4 = or i64 %3, 1
  store i64 %4, i64* %candidate_addr, align 8
  br label %bb3

bb2:                                              ; preds = %bb4
  %5 = load i64* %candidate_addr, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %candidate_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i64* %candidate_addr, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %bb8, label %bb4

bb4:                                              ; preds = %bb3
  %9 = load i64* %candidate_addr, align 8
  %10 = call zeroext i8 @is_prime(i64 %9) nounwind readnone
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot5 = zext i1 %toBoolnot to i8
  %toBool7 = icmp ne i8 %toBoolnot5, 0
  br i1 %toBool7, label %bb2, label %bb8

bb8:                                              ; preds = %bb4, %bb3
  %11 = load i64* %candidate_addr, align 8
  store i64 %11, i64* %0, align 8
  %12 = load i64* %0, align 8
  store i64 %12, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define void @hash_reset_tuning(%struct.Hash_tuning* %tuning) nounwind {
entry:
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %0 = load %struct.Hash_tuning** %tuning_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 0
  %2 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 0), align 4
  store float %2, float* %1, align 4
  %3 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 1
  %4 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 1), align 4
  store float %4, float* %3, align 4
  %5 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 2
  %6 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 2), align 4
  store float %6, float* %5, align 4
  %7 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 3
  %8 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 3), align 4
  store float %8, float* %7, align 4
  %9 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 4
  %10 = load i8* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 4), align 4
  store i8 %10, i8* %9, align 4
  ret void
}

define internal i64 @raw_hasher(i8* %data, i64 %n) nounwind {
entry:
  %data_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %val = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %data, i8** %data_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %data_addr, align 8
  %2 = ptrtoint i8* %1 to i64
  %3 = call i64 @rotr_sz(i64 %2, i32 3) nounwind
  store i64 %3, i64* %val, align 8
  %4 = load i64* %val, align 8
  %5 = load i64* %n_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @raw_comparator(i8* %a, i8* %b) nounwind {
entry:
  %a_addr = alloca i8*, align 8
  %b_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %a, i8** %a_addr
  store i8* %b, i8** %b_addr
  %1 = load i8** %a_addr, align 8
  %2 = load i8** %b_addr, align 8
  %3 = icmp eq i8* %1, %2
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal zeroext i8 @check_tuning(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %tuning = alloca %struct.Hash_tuning*
  %epsilon = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  store %struct.Hash_tuning* %3, %struct.Hash_tuning** %tuning, align 8
  %4 = load %struct.Hash_tuning** %tuning, align 8
  %5 = icmp eq %struct.Hash_tuning* %4, @default_tuning
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb10

bb1:                                              ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4
  %6 = load %struct.Hash_tuning** %tuning, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = load float* %epsilon, align 4
  %10 = fcmp ogt float %8, %9
  br i1 %10, label %bb2, label %bb9

bb2:                                              ; preds = %bb1
  %11 = load %struct.Hash_tuning** %tuning, align 8
  %12 = getelementptr inbounds %struct.Hash_tuning* %11, i32 0, i32 2
  %13 = load float* %12, align 4
  %14 = load float* %epsilon, align 4
  %15 = fsub float 1.000000e+00, %14
  %16 = fcmp olt float %13, %15
  br i1 %16, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %17 = load float* %epsilon, align 4
  %18 = fadd float %17, 1.000000e+00
  %19 = load %struct.Hash_tuning** %tuning, align 8
  %20 = getelementptr inbounds %struct.Hash_tuning* %19, i32 0, i32 3
  %21 = load float* %20, align 4
  %22 = fcmp olt float %18, %21
  br i1 %22, label %bb4, label %bb9

bb4:                                              ; preds = %bb3
  %23 = load %struct.Hash_tuning** %tuning, align 8
  %24 = getelementptr inbounds %struct.Hash_tuning* %23, i32 0, i32 0
  %25 = load float* %24, align 4
  %26 = fcmp oge float %25, 0.000000e+00
  br i1 %26, label %bb5, label %bb9

bb5:                                              ; preds = %bb4
  %27 = load %struct.Hash_tuning** %tuning, align 8
  %28 = getelementptr inbounds %struct.Hash_tuning* %27, i32 0, i32 0
  %29 = load float* %28, align 4
  %30 = load float* %epsilon, align 4
  %31 = fadd float %29, %30
  %32 = load %struct.Hash_tuning** %tuning, align 8
  %33 = getelementptr inbounds %struct.Hash_tuning* %32, i32 0, i32 1
  %34 = load float* %33, align 4
  %35 = fcmp olt float %31, %34
  br i1 %35, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %36 = load %struct.Hash_tuning** %tuning, align 8
  %37 = getelementptr inbounds %struct.Hash_tuning* %36, i32 0, i32 1
  %38 = load float* %37, align 4
  %39 = fcmp ole float %38, 1.000000e+00
  br i1 %39, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %40 = load %struct.Hash_tuning** %tuning, align 8
  %41 = getelementptr inbounds %struct.Hash_tuning* %40, i32 0, i32 0
  %42 = load float* %41, align 4
  %43 = load float* %epsilon, align 4
  %44 = fadd float %42, %43
  %45 = load %struct.Hash_tuning** %tuning, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 2
  %47 = load float* %46, align 4
  %48 = fcmp olt float %44, %47
  br i1 %48, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1
  %49 = load %struct.Hash_table** %table_addr, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %50, align 8
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb
  %51 = load i32* %0, align 4
  store i32 %51, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define internal i64 @compute_bucket_size(i64 %candidate, %struct.Hash_tuning* %tuning) nounwind readonly {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %new_candidate = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %1 = load %struct.Hash_tuning** %tuning_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_tuning* %1, i32 0, i32 4
  %3 = load i8* %2, align 4
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb6

bb:                                               ; preds = %entry
  %4 = load i64* %candidate_addr, align 8
  %5 = uitofp i64 %4 to float
  %6 = load %struct.Hash_tuning** %tuning_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = fdiv float %5, %8
  store float %9, float* %new_candidate, align 4
  %10 = load float* %new_candidate, align 4
  %11 = fcmp oge float %10, 0x43F0000000000000
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb
  store i64 0, i64* %0, align 8
  br label %bb9

bb5:                                              ; preds = %bb
  %12 = load float* %new_candidate, align 4
  %13 = fptoui float %12 to i64
  store i64 %13, i64* %candidate_addr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %14 = load i64* %candidate_addr, align 8
  %15 = call i64 @next_prime(i64 %14) nounwind readnone
  store i64 %15, i64* %candidate_addr, align 8
  %16 = load i64* %candidate_addr, align 8
  %17 = icmp ugt i64 %16, 1152921504606846975
  br i1 %17, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i64 0, i64* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  %18 = load i64* %candidate_addr, align 8
  store i64 %18, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %19 = load i64* %0, align 8
  store i64 %19, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define %struct.Hash_table* @hash_initialize(i64 %candidate, %struct.Hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i8 (i8*, i8*)* %comparator, void (i8*)* %data_freer) nounwind {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %hasher_addr = alloca i64 (i8*, i64)*, align 8
  %comparator_addr = alloca i8 (i8*, i8*)*, align 8
  %data_freer_addr = alloca void (i8*)*, align 8
  %retval = alloca %struct.Hash_table*
  %0 = alloca %struct.Hash_table*
  %table = alloca %struct.Hash_table*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher_addr
  store i8 (i8*, i8*)* %comparator, i8 (i8*, i8*)** %comparator_addr
  store void (i8*)* %data_freer, void (i8*)** %data_freer_addr
  %1 = load i64 (i8*, i64)** %hasher_addr, align 8
  %2 = icmp eq i64 (i8*, i64)* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i8 (i8*, i8*)** %comparator_addr, align 8
  %4 = icmp eq i8 (i8*, i8*)* %3, null
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 (i8*, i8*)* @raw_comparator, i8 (i8*, i8*)** %comparator_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = call noalias i8* @malloc(i64 80) nounwind
  %6 = bitcast i8* %5 to %struct.Hash_table*
  store %struct.Hash_table* %6, %struct.Hash_table** %table, align 8
  %7 = load %struct.Hash_table** %table, align 8
  %8 = icmp eq %struct.Hash_table* %7, null
  br i1 %8, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb5:                                              ; preds = %bb3
  %9 = load %struct.Hash_tuning** %tuning_addr, align 8
  %10 = icmp eq %struct.Hash_tuning* %9, null
  br i1 %10, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %tuning_addr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %11 = load %struct.Hash_table** %table, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 5
  %13 = load %struct.Hash_tuning** %tuning_addr, align 8
  store %struct.Hash_tuning* %13, %struct.Hash_tuning** %12, align 8
  %14 = load %struct.Hash_table** %table, align 8
  %15 = call zeroext i8 @check_tuning(%struct.Hash_table* %14) nounwind
  %toBool = icmp ne i8 %15, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot8 = zext i1 %toBoolnot to i8
  %toBool10 = icmp ne i8 %toBoolnot8, 0
  br i1 %toBool10, label %fail, label %bb11

bb11:                                             ; preds = %bb7
  %16 = load i64* %candidate_addr, align 8
  %17 = load %struct.Hash_tuning** %tuning_addr, align 8
  %18 = call i64 @compute_bucket_size(i64 %16, %struct.Hash_tuning* %17) nounwind readonly
  %19 = load %struct.Hash_table** %table, align 8
  %20 = getelementptr inbounds %struct.Hash_table* %19, i32 0, i32 2
  store i64 %18, i64* %20, align 8
  %21 = load %struct.Hash_table** %table, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %fail, label %bb12

bb12:                                             ; preds = %bb11
  %25 = load %struct.Hash_table** %table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 2
  %27 = load i64* %26, align 8
  %28 = call noalias i8* @calloc(i64 %27, i64 16) nounwind
  %29 = bitcast i8* %28 to %struct.fs_type_list*
  %30 = load %struct.Hash_table** %table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 0
  store %struct.fs_type_list* %29, %struct.fs_type_list** %31, align 8
  %32 = load %struct.Hash_table** %table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 0
  %34 = load %struct.fs_type_list** %33, align 8
  %35 = icmp eq %struct.fs_type_list* %34, null
  br i1 %35, label %fail, label %bb13

bb13:                                             ; preds = %bb12
  %36 = load %struct.Hash_table** %table, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 0
  %38 = load %struct.fs_type_list** %37, align 8
  %39 = load %struct.Hash_table** %table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 2
  %41 = load i64* %40, align 8
  %42 = getelementptr inbounds %struct.fs_type_list* %38, i64 %41
  %43 = load %struct.Hash_table** %table, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 1
  store %struct.fs_type_list* %42, %struct.fs_type_list** %44, align 8
  %45 = load %struct.Hash_table** %table, align 8
  %46 = getelementptr inbounds %struct.Hash_table* %45, i32 0, i32 3
  store i64 0, i64* %46, align 8
  %47 = load %struct.Hash_table** %table, align 8
  %48 = getelementptr inbounds %struct.Hash_table* %47, i32 0, i32 4
  store i64 0, i64* %48, align 8
  %49 = load %struct.Hash_table** %table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 6
  %51 = load i64 (i8*, i64)** %hasher_addr, align 8
  store i64 (i8*, i64)* %51, i64 (i8*, i64)** %50, align 8
  %52 = load %struct.Hash_table** %table, align 8
  %53 = getelementptr inbounds %struct.Hash_table* %52, i32 0, i32 7
  %54 = load i8 (i8*, i8*)** %comparator_addr, align 8
  store i8 (i8*, i8*)* %54, i8 (i8*, i8*)** %53, align 8
  %55 = load %struct.Hash_table** %table, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 8
  %57 = load void (i8*)** %data_freer_addr, align 8
  store void (i8*)* %57, void (i8*)** %56, align 8
  %58 = load %struct.Hash_table** %table, align 8
  %59 = getelementptr inbounds %struct.Hash_table* %58, i32 0, i32 9
  store %struct.fs_type_list* null, %struct.fs_type_list** %59, align 8
  %60 = load %struct.Hash_table** %table, align 8
  store %struct.Hash_table* %60, %struct.Hash_table** %0, align 8
  br label %bb14

fail:                                             ; preds = %bb12, %bb11, %bb7
  %61 = load %struct.Hash_table** %table, align 8
  %62 = bitcast %struct.Hash_table* %61 to i8*
  call void @free(i8* %62) nounwind
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb14:                                             ; preds = %fail, %bb13, %bb4
  %63 = load %struct.Hash_table** %0, align 8
  store %struct.Hash_table* %63, %struct.Hash_table** %retval, align 8
  %retval15 = load %struct.Hash_table** %retval
  ret %struct.Hash_table* %retval15
}

declare noalias i8* @calloc(i64, i64) nounwind

define void @hash_clear(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 0
  %2 = load %struct.fs_type_list** %1, align 8
  store %struct.fs_type_list* %2, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %3 = load %struct.fs_type_list** %bucket, align 8
  %4 = getelementptr inbounds %struct.fs_type_list* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %7 = load %struct.fs_type_list** %bucket, align 8
  %8 = getelementptr inbounds %struct.fs_type_list* %7, i32 0, i32 1
  %9 = load %struct.fs_type_list** %8, align 8
  store %struct.fs_type_list* %9, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  br i1 %35, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 8
  %12 = load void (i8*)** %11, align 8
  %13 = load %struct.fs_type_list** %cursor, align 8
  %14 = getelementptr inbounds %struct.fs_type_list* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  call void %12(i8* %15) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %16 = load %struct.fs_type_list** %cursor, align 8
  %17 = getelementptr inbounds %struct.fs_type_list* %16, i32 0, i32 0
  store i8* null, i8** %17, align 8
  %18 = load %struct.fs_type_list** %cursor, align 8
  %19 = getelementptr inbounds %struct.fs_type_list* %18, i32 0, i32 1
  %20 = load %struct.fs_type_list** %19, align 8
  store %struct.fs_type_list* %20, %struct.fs_type_list** %next, align 8
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 9
  %23 = load %struct.fs_type_list** %22, align 8
  %24 = load %struct.fs_type_list** %cursor, align 8
  %25 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 1
  store %struct.fs_type_list* %23, %struct.fs_type_list** %25, align 8
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 9
  %28 = load %struct.fs_type_list** %cursor, align 8
  store %struct.fs_type_list* %28, %struct.fs_type_list** %27, align 8
  %29 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %29, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %30 = load %struct.fs_type_list** %cursor, align 8
  %31 = icmp ne %struct.fs_type_list* %30, null
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 8
  %34 = load void (i8*)** %33, align 8
  %35 = icmp ne void (i8*)* %34, null
  br i1 %31, label %bb2, label %bb6

bb6:                                              ; preds = %bb5
  br i1 %35, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 8
  %38 = load void (i8*)** %37, align 8
  %39 = load %struct.fs_type_list** %bucket, align 8
  %40 = getelementptr inbounds %struct.fs_type_list* %39, i32 0, i32 0
  %41 = load i8** %40, align 8
  call void %38(i8* %41) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %42 = load %struct.fs_type_list** %bucket, align 8
  %43 = getelementptr inbounds %struct.fs_type_list* %42, i32 0, i32 0
  store i8* null, i8** %43, align 8
  %44 = load %struct.fs_type_list** %bucket, align 8
  %45 = getelementptr inbounds %struct.fs_type_list* %44, i32 0, i32 1
  store %struct.fs_type_list* null, %struct.fs_type_list** %45, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %46 = load %struct.fs_type_list** %bucket, align 8
  %47 = getelementptr inbounds %struct.fs_type_list* %46, i64 1
  store %struct.fs_type_list* %47, %struct.fs_type_list** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 1
  %50 = load %struct.fs_type_list** %49, align 8
  %51 = load %struct.fs_type_list** %bucket, align 8
  %52 = icmp ugt %struct.fs_type_list* %50, %51
  br i1 %52, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %53 = load %struct.Hash_table** %table_addr, align 8
  %54 = getelementptr inbounds %struct.Hash_table* %53, i32 0, i32 3
  store i64 0, i64* %54, align 8
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 4
  store i64 0, i64* %56, align 8
  ret void
}

define void @hash_free(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 8
  %2 = load void (i8*)** %1, align 8
  %3 = icmp ne void (i8*)* %2, null
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 4
  %6 = load i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 0
  %10 = load %struct.fs_type_list** %9, align 8
  store %struct.fs_type_list* %10, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb2:                                              ; preds = %bb7
  %11 = load %struct.fs_type_list** %bucket, align 8
  %12 = getelementptr inbounds %struct.fs_type_list* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %15 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %15, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb4:                                              ; preds = %bb5
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 8
  %18 = load void (i8*)** %17, align 8
  %19 = load %struct.fs_type_list** %cursor, align 8
  %20 = getelementptr inbounds %struct.fs_type_list* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  call void %18(i8* %21) nounwind
  %22 = load %struct.fs_type_list** %cursor, align 8
  %23 = getelementptr inbounds %struct.fs_type_list* %22, i32 0, i32 1
  %24 = load %struct.fs_type_list** %23, align 8
  store %struct.fs_type_list* %24, %struct.fs_type_list** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %25 = load %struct.fs_type_list** %cursor, align 8
  %26 = icmp ne %struct.fs_type_list* %25, null
  br i1 %26, label %bb4, label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i64 1
  store %struct.fs_type_list* %28, %struct.fs_type_list** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 1
  %31 = load %struct.fs_type_list** %30, align 8
  %32 = load %struct.fs_type_list** %bucket, align 8
  %33 = icmp ugt %struct.fs_type_list* %31, %32
  br i1 %33, label %bb2, label %bb8

bb8:                                              ; preds = %bb7, %bb, %entry
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 0
  %36 = load %struct.fs_type_list** %35, align 8
  store %struct.fs_type_list* %36, %struct.fs_type_list** %bucket, align 8
  br label %bb13

bb9:                                              ; preds = %bb13
  %37 = load %struct.fs_type_list** %bucket, align 8
  %38 = getelementptr inbounds %struct.fs_type_list* %37, i32 0, i32 1
  %39 = load %struct.fs_type_list** %38, align 8
  store %struct.fs_type_list* %39, %struct.fs_type_list** %cursor, align 8
  br label %bb11

bb10:                                             ; preds = %bb11
  %40 = load %struct.fs_type_list** %cursor, align 8
  %41 = getelementptr inbounds %struct.fs_type_list* %40, i32 0, i32 1
  %42 = load %struct.fs_type_list** %41, align 8
  store %struct.fs_type_list* %42, %struct.fs_type_list** %next, align 8
  %43 = load %struct.fs_type_list** %cursor, align 8
  %44 = bitcast %struct.fs_type_list* %43 to i8*
  call void @free(i8* %44) nounwind
  %45 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %45, %struct.fs_type_list** %cursor, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %46 = load %struct.fs_type_list** %cursor, align 8
  %47 = icmp ne %struct.fs_type_list* %46, null
  br i1 %47, label %bb10, label %bb12

bb12:                                             ; preds = %bb11
  %48 = load %struct.fs_type_list** %bucket, align 8
  %49 = getelementptr inbounds %struct.fs_type_list* %48, i64 1
  store %struct.fs_type_list* %49, %struct.fs_type_list** %bucket, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb8
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 1
  %52 = load %struct.fs_type_list** %51, align 8
  %53 = load %struct.fs_type_list** %bucket, align 8
  %54 = icmp ugt %struct.fs_type_list* %52, %53
  br i1 %54, label %bb9, label %bb14

bb14:                                             ; preds = %bb13
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 9
  %57 = load %struct.fs_type_list** %56, align 8
  store %struct.fs_type_list* %57, %struct.fs_type_list** %cursor, align 8
  br label %bb16

bb15:                                             ; preds = %bb16
  %58 = load %struct.fs_type_list** %cursor, align 8
  %59 = getelementptr inbounds %struct.fs_type_list* %58, i32 0, i32 1
  %60 = load %struct.fs_type_list** %59, align 8
  store %struct.fs_type_list* %60, %struct.fs_type_list** %next, align 8
  %61 = load %struct.fs_type_list** %cursor, align 8
  %62 = bitcast %struct.fs_type_list* %61 to i8*
  call void @free(i8* %62) nounwind
  %63 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %63, %struct.fs_type_list** %cursor, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %64 = load %struct.fs_type_list** %cursor, align 8
  %65 = icmp ne %struct.fs_type_list* %64, null
  br i1 %65, label %bb15, label %bb17

bb17:                                             ; preds = %bb16
  %66 = load %struct.Hash_table** %table_addr, align 8
  %67 = getelementptr inbounds %struct.Hash_table* %66, i32 0, i32 0
  %68 = load %struct.fs_type_list** %67, align 8
  %69 = bitcast %struct.fs_type_list* %68 to i8*
  call void @free(i8* %69) nounwind
  %70 = load %struct.Hash_table** %table_addr, align 8
  %71 = bitcast %struct.Hash_table* %70 to i8*
  call void @free(i8* %71) nounwind
  ret void
}

define internal %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca %struct.fs_type_list*
  %0 = alloca %struct.fs_type_list*
  %new = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 9
  %3 = load %struct.fs_type_list** %2, align 8
  %4 = icmp ne %struct.fs_type_list* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 9
  %7 = load %struct.fs_type_list** %6, align 8
  store %struct.fs_type_list* %7, %struct.fs_type_list** %new, align 8
  %8 = load %struct.fs_type_list** %new, align 8
  %9 = getelementptr inbounds %struct.fs_type_list* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  %11 = load %struct.Hash_table** %table_addr, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 9
  store %struct.fs_type_list* %10, %struct.fs_type_list** %12, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %13 = call noalias i8* @malloc(i64 16) nounwind
  %14 = bitcast i8* %13 to %struct.fs_type_list*
  store %struct.fs_type_list* %14, %struct.fs_type_list** %new, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %15 = load %struct.fs_type_list** %new, align 8
  store %struct.fs_type_list* %15, %struct.fs_type_list** %0, align 8
  %16 = load %struct.fs_type_list** %0, align 8
  store %struct.fs_type_list* %16, %struct.fs_type_list** %retval, align 8
  %retval3 = load %struct.fs_type_list** %retval
  ret %struct.fs_type_list* %retval3
}

define internal void @free_entry(%struct.Hash_table* %table, %struct.fs_type_list* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca %struct.fs_type_list*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.fs_type_list* %entry1, %struct.fs_type_list** %entry_addr
  %0 = load %struct.fs_type_list** %entry_addr, align 8
  %1 = getelementptr inbounds %struct.fs_type_list* %0, i32 0, i32 0
  store i8* null, i8** %1, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = getelementptr inbounds %struct.Hash_table* %2, i32 0, i32 9
  %4 = load %struct.fs_type_list** %3, align 8
  %5 = load %struct.fs_type_list** %entry_addr, align 8
  %6 = getelementptr inbounds %struct.fs_type_list* %5, i32 0, i32 1
  store %struct.fs_type_list* %4, %struct.fs_type_list** %6, align 8
  %7 = load %struct.Hash_table** %table_addr, align 8
  %8 = getelementptr inbounds %struct.Hash_table* %7, i32 0, i32 9
  %9 = load %struct.fs_type_list** %entry_addr, align 8
  store %struct.fs_type_list* %9, %struct.fs_type_list** %8, align 8
  ret void
}

define internal i8* @hash_find_entry(%struct.Hash_table* %table, i8* %entry1, %struct.fs_type_list** %bucket_head, i8 zeroext %delete) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %bucket_head_addr = alloca %struct.fs_type_list**, align 8
  %delete_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %data = alloca i8*
  %next = alloca %struct.fs_type_list*
  %data15 = alloca i8*
  %next18 = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store %struct.fs_type_list** %bucket_head, %struct.fs_type_list*** %bucket_head_addr
  store i8 %delete, i8* %delete_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  %4 = load %struct.fs_type_list*** %bucket_head_addr, align 8
  %5 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %5, %struct.fs_type_list** %4, align 8
  %6 = load %struct.fs_type_list** %bucket, align 8
  %7 = getelementptr inbounds %struct.fs_type_list* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb23

bb2:                                              ; preds = %entry
  %10 = load %struct.fs_type_list** %bucket, align 8
  %11 = getelementptr inbounds %struct.fs_type_list* %10, i32 0, i32 0
  %12 = load i8** %11, align 8
  %13 = load i8** %entry_addr, align 8
  %14 = icmp eq i8* %12, %13
  br i1 %14, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %15 = load %struct.Hash_table** %table_addr, align 8
  %16 = getelementptr inbounds %struct.Hash_table* %15, i32 0, i32 7
  %17 = load i8 (i8*, i8*)** %16, align 8
  %18 = load %struct.fs_type_list** %bucket, align 8
  %19 = getelementptr inbounds %struct.fs_type_list* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8** %entry_addr, align 8
  %22 = call zeroext i8 %17(i8* %21, i8* %20) nounwind
  %toBool = icmp ne i8 %22, 0
  br i1 %toBool, label %bb4, label %bb10

bb4:                                              ; preds = %bb3, %bb2
  %23 = load %struct.fs_type_list** %bucket, align 8
  %24 = getelementptr inbounds %struct.fs_type_list* %23, i32 0, i32 0
  %25 = load i8** %24, align 8
  store i8* %25, i8** %data, align 8
  %26 = load i8* %delete_addr, align 1
  %toBool5 = icmp ne i8 %26, 0
  br i1 %toBool5, label %bb6, label %bb9

bb6:                                              ; preds = %bb4
  %27 = load %struct.fs_type_list** %bucket, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i32 0, i32 1
  %29 = load %struct.fs_type_list** %28, align 8
  %30 = icmp ne %struct.fs_type_list* %29, null
  %31 = load %struct.fs_type_list** %bucket, align 8
  br i1 %30, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %32 = getelementptr inbounds %struct.fs_type_list* %31, i32 0, i32 1
  %33 = load %struct.fs_type_list** %32, align 8
  store %struct.fs_type_list* %33, %struct.fs_type_list** %next, align 8
  %34 = load %struct.fs_type_list** %bucket, align 8
  %35 = load %struct.fs_type_list** %next, align 8
  %36 = getelementptr inbounds %struct.fs_type_list* %34, i32 0, i32 0
  %37 = getelementptr inbounds %struct.fs_type_list* %35, i32 0, i32 0
  %38 = load i8** %37, align 8
  store i8* %38, i8** %36, align 8
  %39 = getelementptr inbounds %struct.fs_type_list* %34, i32 0, i32 1
  %40 = getelementptr inbounds %struct.fs_type_list* %35, i32 0, i32 1
  %41 = load %struct.fs_type_list** %40, align 8
  store %struct.fs_type_list* %41, %struct.fs_type_list** %39, align 8
  %42 = load %struct.Hash_table** %table_addr, align 8
  %43 = load %struct.fs_type_list** %next, align 8
  call void @free_entry(%struct.Hash_table* %42, %struct.fs_type_list* %43) nounwind
  br label %bb9

bb8:                                              ; preds = %bb6
  %44 = getelementptr inbounds %struct.fs_type_list* %31, i32 0, i32 0
  store i8* null, i8** %44, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %45 = load i8** %data, align 8
  store i8* %45, i8** %0, align 8
  br label %bb23

bb10:                                             ; preds = %bb3
  %46 = load %struct.fs_type_list** %bucket, align 8
  store %struct.fs_type_list* %46, %struct.fs_type_list** %cursor, align 8
  br label %bb21

bb11:                                             ; preds = %bb21
  %47 = load %struct.fs_type_list** %cursor, align 8
  %48 = getelementptr inbounds %struct.fs_type_list* %47, i32 0, i32 1
  %49 = load %struct.fs_type_list** %48, align 8
  %50 = getelementptr inbounds %struct.fs_type_list* %49, i32 0, i32 0
  %51 = load i8** %50, align 8
  %52 = load i8** %entry_addr, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %bb14, label %bb12

bb12:                                             ; preds = %bb11
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 7
  %56 = load i8 (i8*, i8*)** %55, align 8
  %57 = load %struct.fs_type_list** %cursor, align 8
  %58 = getelementptr inbounds %struct.fs_type_list* %57, i32 0, i32 1
  %59 = load %struct.fs_type_list** %58, align 8
  %60 = getelementptr inbounds %struct.fs_type_list* %59, i32 0, i32 0
  %61 = load i8** %60, align 8
  %62 = load i8** %entry_addr, align 8
  %63 = call zeroext i8 %56(i8* %62, i8* %61) nounwind
  %toBool13 = icmp ne i8 %63, 0
  br i1 %toBool13, label %bb14, label %bb20

bb14:                                             ; preds = %bb12, %bb11
  %64 = load %struct.fs_type_list** %cursor, align 8
  %65 = getelementptr inbounds %struct.fs_type_list* %64, i32 0, i32 1
  %66 = load %struct.fs_type_list** %65, align 8
  %67 = getelementptr inbounds %struct.fs_type_list* %66, i32 0, i32 0
  %68 = load i8** %67, align 8
  store i8* %68, i8** %data15, align 8
  %69 = load i8* %delete_addr, align 1
  %toBool16 = icmp ne i8 %69, 0
  br i1 %toBool16, label %bb17, label %bb19

bb17:                                             ; preds = %bb14
  %70 = load %struct.fs_type_list** %cursor, align 8
  %71 = getelementptr inbounds %struct.fs_type_list* %70, i32 0, i32 1
  %72 = load %struct.fs_type_list** %71, align 8
  store %struct.fs_type_list* %72, %struct.fs_type_list** %next18, align 8
  %73 = load %struct.fs_type_list** %next18, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 1
  %75 = load %struct.fs_type_list** %74, align 8
  %76 = load %struct.fs_type_list** %cursor, align 8
  %77 = getelementptr inbounds %struct.fs_type_list* %76, i32 0, i32 1
  store %struct.fs_type_list* %75, %struct.fs_type_list** %77, align 8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = load %struct.fs_type_list** %next18, align 8
  call void @free_entry(%struct.Hash_table* %78, %struct.fs_type_list* %79) nounwind
  br label %bb19

bb19:                                             ; preds = %bb17, %bb14
  %80 = load i8** %data15, align 8
  store i8* %80, i8** %0, align 8
  br label %bb23

bb20:                                             ; preds = %bb12
  %81 = load %struct.fs_type_list** %cursor, align 8
  %82 = getelementptr inbounds %struct.fs_type_list* %81, i32 0, i32 1
  %83 = load %struct.fs_type_list** %82, align 8
  store %struct.fs_type_list* %83, %struct.fs_type_list** %cursor, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb10
  %84 = load %struct.fs_type_list** %cursor, align 8
  %85 = getelementptr inbounds %struct.fs_type_list* %84, i32 0, i32 1
  %86 = load %struct.fs_type_list** %85, align 8
  %87 = icmp ne %struct.fs_type_list* %86, null
  br i1 %87, label %bb11, label %bb22

bb22:                                             ; preds = %bb21
  store i8* null, i8** %0, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb19, %bb9, %bb
  %88 = load i8** %0, align 8
  store i8* %88, i8** %retval, align 8
  %retval24 = load i8** %retval
  ret i8* %retval24
}

define internal zeroext i8 @transfer_entries(%struct.Hash_table* %dst, %struct.Hash_table* %src, i8 zeroext %safe) nounwind {
entry:
  %dst_addr = alloca %struct.Hash_table*, align 8
  %src_addr = alloca %struct.Hash_table*, align 8
  %safe_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.fs_type_list*
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %data = alloca i8*
  %new_bucket = alloca %struct.fs_type_list*
  %new_entry = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %dst, %struct.Hash_table** %dst_addr
  store %struct.Hash_table* %src, %struct.Hash_table** %src_addr
  store i8 %safe, i8* %safe_addr
  %1 = load %struct.Hash_table** %src_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.fs_type_list** %2, align 8
  store %struct.fs_type_list* %3, %struct.fs_type_list** %bucket, align 8
  br label %bb15

bb:                                               ; preds = %bb15
  %4 = load %struct.fs_type_list** %bucket, align 8
  %5 = getelementptr inbounds %struct.fs_type_list* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb14

bb1:                                              ; preds = %bb
  %8 = load %struct.fs_type_list** %bucket, align 8
  %9 = getelementptr inbounds %struct.fs_type_list* %8, i32 0, i32 1
  %10 = load %struct.fs_type_list** %9, align 8
  store %struct.fs_type_list* %10, %struct.fs_type_list** %cursor, align 8
  br label %bb6

bb2:                                              ; preds = %bb6
  %11 = load %struct.fs_type_list** %cursor, align 8
  %12 = getelementptr inbounds %struct.fs_type_list* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  store i8* %13, i8** %data, align 8
  %14 = load %struct.Hash_table** %dst_addr, align 8
  %15 = load i8** %data, align 8
  %16 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %14, i8* %15) nounwind
  store %struct.fs_type_list* %16, %struct.fs_type_list** %new_bucket, align 8
  %17 = load %struct.fs_type_list** %cursor, align 8
  %18 = getelementptr inbounds %struct.fs_type_list* %17, i32 0, i32 1
  %19 = load %struct.fs_type_list** %18, align 8
  store %struct.fs_type_list* %19, %struct.fs_type_list** %next, align 8
  %20 = load %struct.fs_type_list** %new_bucket, align 8
  %21 = getelementptr inbounds %struct.fs_type_list* %20, i32 0, i32 0
  %22 = load i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = load %struct.fs_type_list** %new_bucket, align 8
  br i1 %23, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %25 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 1
  %26 = load %struct.fs_type_list** %25, align 8
  %27 = load %struct.fs_type_list** %cursor, align 8
  %28 = getelementptr inbounds %struct.fs_type_list* %27, i32 0, i32 1
  store %struct.fs_type_list* %26, %struct.fs_type_list** %28, align 8
  %29 = load %struct.fs_type_list** %new_bucket, align 8
  %30 = getelementptr inbounds %struct.fs_type_list* %29, i32 0, i32 1
  %31 = load %struct.fs_type_list** %cursor, align 8
  store %struct.fs_type_list* %31, %struct.fs_type_list** %30, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %32 = getelementptr inbounds %struct.fs_type_list* %24, i32 0, i32 0
  %33 = load i8** %data, align 8
  store i8* %33, i8** %32, align 8
  %34 = load %struct.Hash_table** %dst_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 3
  %36 = load i64* %35, align 8
  %37 = add i64 %36, 1
  %38 = load %struct.Hash_table** %dst_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 3
  store i64 %37, i64* %39, align 8
  %40 = load %struct.Hash_table** %dst_addr, align 8
  %41 = load %struct.fs_type_list** %cursor, align 8
  call void @free_entry(%struct.Hash_table* %40, %struct.fs_type_list* %41) nounwind
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %42 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %42, %struct.fs_type_list** %cursor, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %43 = load %struct.fs_type_list** %cursor, align 8
  %44 = icmp ne %struct.fs_type_list* %43, null
  br i1 %44, label %bb2, label %bb7

bb7:                                              ; preds = %bb6
  %45 = load %struct.fs_type_list** %bucket, align 8
  %46 = getelementptr inbounds %struct.fs_type_list* %45, i32 0, i32 0
  %47 = load i8** %46, align 8
  store i8* %47, i8** %data, align 8
  %48 = load %struct.fs_type_list** %bucket, align 8
  %49 = getelementptr inbounds %struct.fs_type_list* %48, i32 0, i32 1
  store %struct.fs_type_list* null, %struct.fs_type_list** %49, align 8
  %50 = load i8* %safe_addr, align 1
  %toBool = icmp ne i8 %50, 0
  br i1 %toBool, label %bb14, label %bb8

bb8:                                              ; preds = %bb7
  %51 = load %struct.Hash_table** %dst_addr, align 8
  %52 = load i8** %data, align 8
  %53 = call %struct.fs_type_list* @safe_hasher(%struct.Hash_table* %51, i8* %52) nounwind
  store %struct.fs_type_list* %53, %struct.fs_type_list** %new_bucket, align 8
  %54 = load %struct.fs_type_list** %new_bucket, align 8
  %55 = getelementptr inbounds %struct.fs_type_list* %54, i32 0, i32 0
  %56 = load i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %bb9, label %bb12

bb9:                                              ; preds = %bb8
  %58 = load %struct.Hash_table** %dst_addr, align 8
  %59 = call %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %58) nounwind
  store %struct.fs_type_list* %59, %struct.fs_type_list** %new_entry, align 8
  %60 = load %struct.fs_type_list** %new_entry, align 8
  %61 = icmp eq %struct.fs_type_list* %60, null
  br i1 %61, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store i32 0, i32* %0, align 4
  br label %bb17

bb11:                                             ; preds = %bb9
  %62 = load %struct.fs_type_list** %new_entry, align 8
  %63 = getelementptr inbounds %struct.fs_type_list* %62, i32 0, i32 0
  %64 = load i8** %data, align 8
  store i8* %64, i8** %63, align 8
  %65 = load %struct.fs_type_list** %new_bucket, align 8
  %66 = getelementptr inbounds %struct.fs_type_list* %65, i32 0, i32 1
  %67 = load %struct.fs_type_list** %66, align 8
  %68 = load %struct.fs_type_list** %new_entry, align 8
  %69 = getelementptr inbounds %struct.fs_type_list* %68, i32 0, i32 1
  store %struct.fs_type_list* %67, %struct.fs_type_list** %69, align 8
  %70 = load %struct.fs_type_list** %new_bucket, align 8
  %71 = getelementptr inbounds %struct.fs_type_list* %70, i32 0, i32 1
  %72 = load %struct.fs_type_list** %new_entry, align 8
  store %struct.fs_type_list* %72, %struct.fs_type_list** %71, align 8
  br label %bb13

bb12:                                             ; preds = %bb8
  %73 = load %struct.fs_type_list** %new_bucket, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 0
  %75 = load i8** %data, align 8
  store i8* %75, i8** %74, align 8
  %76 = load %struct.Hash_table** %dst_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 3
  %78 = load i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = load %struct.Hash_table** %dst_addr, align 8
  %81 = getelementptr inbounds %struct.Hash_table* %80, i32 0, i32 3
  store i64 %79, i64* %81, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %82 = load %struct.fs_type_list** %bucket, align 8
  %83 = getelementptr inbounds %struct.fs_type_list* %82, i32 0, i32 0
  store i8* null, i8** %83, align 8
  %84 = load %struct.Hash_table** %src_addr, align 8
  %85 = getelementptr inbounds %struct.Hash_table* %84, i32 0, i32 3
  %86 = load i64* %85, align 8
  %87 = sub i64 %86, 1
  %88 = load %struct.Hash_table** %src_addr, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 3
  store i64 %87, i64* %89, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb7, %bb
  %90 = load %struct.fs_type_list** %bucket, align 8
  %91 = getelementptr inbounds %struct.fs_type_list* %90, i64 1
  store %struct.fs_type_list* %91, %struct.fs_type_list** %bucket, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %entry
  %92 = load %struct.Hash_table** %src_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 1
  %94 = load %struct.fs_type_list** %93, align 8
  %95 = load %struct.fs_type_list** %bucket, align 8
  %96 = icmp ugt %struct.fs_type_list* %94, %95
  br i1 %96, label %bb, label %bb16

bb16:                                             ; preds = %bb15
  store i32 1, i32* %0, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb10
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval18 = load i32* %retval
  %retval1819 = trunc i32 %retval18 to i8
  ret i8 %retval1819
}

define zeroext i8 @hash_rehash(%struct.Hash_table* %table, i64 %candidate) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %storage = alloca %struct.Hash_table
  %new_table = alloca %struct.Hash_table*
  %new_size = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 %candidate, i64* %candidate_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  %4 = load i64* %candidate_addr, align 8
  %5 = call i64 @compute_bucket_size(i64 %4, %struct.Hash_tuning* %3) nounwind readonly
  store i64 %5, i64* %new_size, align 8
  %6 = load i64* %new_size, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb19

bb1:                                              ; preds = %entry
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 2
  %10 = load i64* %9, align 8
  %11 = load i64* %new_size, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4
  br label %bb19

bb3:                                              ; preds = %bb1
  store %struct.Hash_table* %storage, %struct.Hash_table** %new_table, align 8
  %13 = load i64* %new_size, align 8
  %14 = call noalias i8* @calloc(i64 %13, i64 16) nounwind
  %15 = bitcast i8* %14 to %struct.fs_type_list*
  %16 = load %struct.Hash_table** %new_table, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 0
  store %struct.fs_type_list* %15, %struct.fs_type_list** %17, align 8
  %18 = load %struct.Hash_table** %new_table, align 8
  %19 = getelementptr inbounds %struct.Hash_table* %18, i32 0, i32 0
  %20 = load %struct.fs_type_list** %19, align 8
  %21 = icmp eq %struct.fs_type_list* %20, null
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 0, i32* %0, align 4
  br label %bb19

bb5:                                              ; preds = %bb3
  %22 = load %struct.Hash_table** %new_table, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 2
  %24 = load i64* %new_size, align 8
  store i64 %24, i64* %23, align 8
  %25 = load %struct.Hash_table** %new_table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 0
  %27 = load %struct.fs_type_list** %26, align 8
  %28 = load i64* %new_size, align 8
  %29 = getelementptr inbounds %struct.fs_type_list* %27, i64 %28
  %30 = load %struct.Hash_table** %new_table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 1
  store %struct.fs_type_list* %29, %struct.fs_type_list** %31, align 8
  %32 = load %struct.Hash_table** %new_table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 3
  store i64 0, i64* %33, align 8
  %34 = load %struct.Hash_table** %new_table, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 4
  store i64 0, i64* %35, align 8
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 5
  %38 = load %struct.Hash_tuning** %37, align 8
  %39 = load %struct.Hash_table** %new_table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 5
  store %struct.Hash_tuning* %38, %struct.Hash_tuning** %40, align 8
  %41 = load %struct.Hash_table** %table_addr, align 8
  %42 = getelementptr inbounds %struct.Hash_table* %41, i32 0, i32 6
  %43 = load i64 (i8*, i64)** %42, align 8
  %44 = load %struct.Hash_table** %new_table, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 6
  store i64 (i8*, i64)* %43, i64 (i8*, i64)** %45, align 8
  %46 = load %struct.Hash_table** %table_addr, align 8
  %47 = getelementptr inbounds %struct.Hash_table* %46, i32 0, i32 7
  %48 = load i8 (i8*, i8*)** %47, align 8
  %49 = load %struct.Hash_table** %new_table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 7
  store i8 (i8*, i8*)* %48, i8 (i8*, i8*)** %50, align 8
  %51 = load %struct.Hash_table** %table_addr, align 8
  %52 = getelementptr inbounds %struct.Hash_table* %51, i32 0, i32 8
  %53 = load void (i8*)** %52, align 8
  %54 = load %struct.Hash_table** %new_table, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 8
  store void (i8*)* %53, void (i8*)** %55, align 8
  %56 = load %struct.Hash_table** %table_addr, align 8
  %57 = getelementptr inbounds %struct.Hash_table* %56, i32 0, i32 9
  %58 = load %struct.fs_type_list** %57, align 8
  %59 = load %struct.Hash_table** %new_table, align 8
  %60 = getelementptr inbounds %struct.Hash_table* %59, i32 0, i32 9
  store %struct.fs_type_list* %58, %struct.fs_type_list** %60, align 8
  %61 = load %struct.Hash_table** %new_table, align 8
  %62 = load %struct.Hash_table** %table_addr, align 8
  %63 = call zeroext i8 @transfer_entries(%struct.Hash_table* %61, %struct.Hash_table* %62, i8 zeroext 0) nounwind
  %toBool = icmp ne i8 %63, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %64 = load %struct.Hash_table** %table_addr, align 8
  %65 = getelementptr inbounds %struct.Hash_table* %64, i32 0, i32 0
  %66 = load %struct.fs_type_list** %65, align 8
  %67 = bitcast %struct.fs_type_list* %66 to i8*
  call void @free(i8* %67) nounwind
  %68 = load %struct.Hash_table** %new_table, align 8
  %69 = getelementptr inbounds %struct.Hash_table* %68, i32 0, i32 0
  %70 = load %struct.fs_type_list** %69, align 8
  %71 = load %struct.Hash_table** %table_addr, align 8
  %72 = getelementptr inbounds %struct.Hash_table* %71, i32 0, i32 0
  store %struct.fs_type_list* %70, %struct.fs_type_list** %72, align 8
  %73 = load %struct.Hash_table** %new_table, align 8
  %74 = getelementptr inbounds %struct.Hash_table* %73, i32 0, i32 1
  %75 = load %struct.fs_type_list** %74, align 8
  %76 = load %struct.Hash_table** %table_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 1
  store %struct.fs_type_list* %75, %struct.fs_type_list** %77, align 8
  %78 = load %struct.Hash_table** %new_table, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 2
  %80 = load i64* %79, align 8
  %81 = load %struct.Hash_table** %table_addr, align 8
  %82 = getelementptr inbounds %struct.Hash_table* %81, i32 0, i32 2
  store i64 %80, i64* %82, align 8
  %83 = load %struct.Hash_table** %new_table, align 8
  %84 = getelementptr inbounds %struct.Hash_table* %83, i32 0, i32 3
  %85 = load i64* %84, align 8
  %86 = load %struct.Hash_table** %table_addr, align 8
  %87 = getelementptr inbounds %struct.Hash_table* %86, i32 0, i32 3
  store i64 %85, i64* %87, align 8
  %88 = load %struct.Hash_table** %new_table, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 9
  %90 = load %struct.fs_type_list** %89, align 8
  %91 = load %struct.Hash_table** %table_addr, align 8
  %92 = getelementptr inbounds %struct.Hash_table* %91, i32 0, i32 9
  store %struct.fs_type_list* %90, %struct.fs_type_list** %92, align 8
  store i32 1, i32* %0, align 4
  br label %bb19

bb7:                                              ; preds = %bb5
  %93 = load %struct.Hash_table** %new_table, align 8
  %94 = getelementptr inbounds %struct.Hash_table* %93, i32 0, i32 9
  %95 = load %struct.fs_type_list** %94, align 8
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 9
  store %struct.fs_type_list* %95, %struct.fs_type_list** %97, align 8
  %98 = load %struct.Hash_table** %table_addr, align 8
  %99 = load %struct.Hash_table** %new_table, align 8
  %100 = call zeroext i8 @transfer_entries(%struct.Hash_table* %98, %struct.Hash_table* %99, i8 zeroext 1) nounwind
  %toBool8 = icmp ne i8 %100, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  br i1 %toBool11, label %bb17, label %bb12

bb12:                                             ; preds = %bb7
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = load %struct.Hash_table** %new_table, align 8
  %103 = call zeroext i8 @transfer_entries(%struct.Hash_table* %101, %struct.Hash_table* %102, i8 zeroext 0) nounwind
  %toBool13 = icmp ne i8 %103, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb18

bb17:                                             ; preds = %bb12, %bb7
  call void @abort() noreturn nounwind
  unreachable

bb18:                                             ; preds = %bb12
  %104 = load %struct.Hash_table** %new_table, align 8
  %105 = getelementptr inbounds %struct.Hash_table* %104, i32 0, i32 0
  %106 = load %struct.fs_type_list** %105, align 8
  %107 = bitcast %struct.fs_type_list* %106 to i8*
  call void @free(i8* %107) nounwind
  store i32 0, i32* %0, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb6, %bb4, %bb2, %bb
  %108 = load i32* %0, align 4
  store i32 %108, i32* %retval, align 4
  %retval20 = load i32* %retval
  %retval2021 = trunc i32 %retval20 to i8
  ret i8 %retval2021
}

define i32 @hash_insert_if_absent(%struct.Hash_table* %table, i8* %entry1, i8** %matched_ent) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %matched_ent_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.3 = alloca float
  %0 = alloca i32
  %data = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca float
  %new_entry = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store i8** %matched_ent, i8*** %matched_ent_addr
  %1 = load i8** %entry_addr, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = load %struct.Hash_table** %table_addr, align 8
  %4 = load i8** %entry_addr, align 8
  %5 = call i8* @hash_find_entry(%struct.Hash_table* %3, i8* %4, %struct.fs_type_list** %bucket, i8 zeroext 0) nounwind
  store i8* %5, i8** %data, align 8
  %6 = load i8** %data, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %8 = load i8*** %matched_ent_addr, align 8
  %9 = icmp ne i8** %8, null
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %10 = load i8*** %matched_ent_addr, align 8
  %11 = load i8** %data, align 8
  store i8* %11, i8** %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb26

bb6:                                              ; preds = %bb2
  %12 = load %struct.Hash_table** %table_addr, align 8
  %13 = getelementptr inbounds %struct.Hash_table* %12, i32 0, i32 3
  %14 = load i64* %13, align 8
  %15 = uitofp i64 %14 to float
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 5
  %18 = load %struct.Hash_tuning** %17, align 8
  %19 = getelementptr inbounds %struct.Hash_tuning* %18, i32 0, i32 2
  %20 = load float* %19, align 4
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = fmul float %20, %24
  %26 = fcmp ogt float %15, %25
  br i1 %26, label %bb7, label %bb21

bb7:                                              ; preds = %bb6
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = call zeroext i8 @check_tuning(%struct.Hash_table* %27) nounwind
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 3
  %31 = load i64* %30, align 8
  %32 = uitofp i64 %31 to float
  %33 = load %struct.Hash_table** %table_addr, align 8
  %34 = getelementptr inbounds %struct.Hash_table* %33, i32 0, i32 5
  %35 = load %struct.Hash_tuning** %34, align 8
  %36 = getelementptr inbounds %struct.Hash_tuning* %35, i32 0, i32 2
  %37 = load float* %36, align 4
  %38 = load %struct.Hash_table** %table_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 2
  %40 = load i64* %39, align 8
  %41 = uitofp i64 %40 to float
  %42 = fmul float %37, %41
  %43 = fcmp ogt float %32, %42
  br i1 %43, label %bb8, label %bb21

bb8:                                              ; preds = %bb7
  %44 = load %struct.Hash_table** %table_addr, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 5
  %46 = load %struct.Hash_tuning** %45, align 8
  store %struct.Hash_tuning* %46, %struct.Hash_tuning** %tuning, align 8
  %47 = load %struct.Hash_tuning** %tuning, align 8
  %48 = getelementptr inbounds %struct.Hash_tuning* %47, i32 0, i32 4
  %49 = load i8* %48, align 4
  %toBool = icmp ne i8 %49, 0
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 2
  %52 = load i64* %51, align 8
  %53 = uitofp i64 %52 to float
  %54 = load %struct.Hash_tuning** %tuning, align 8
  %55 = getelementptr inbounds %struct.Hash_tuning* %54, i32 0, i32 3
  %56 = load float* %55, align 4
  %57 = fmul float %53, %56
  br i1 %toBool, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store float %57, float* %iftmp.3, align 4
  br label %bb11

bb10:                                             ; preds = %bb8
  %58 = load %struct.Hash_tuning** %tuning, align 8
  %59 = getelementptr inbounds %struct.Hash_tuning* %58, i32 0, i32 2
  %60 = load float* %59, align 4
  %61 = fmul float %57, %60
  store float %61, float* %iftmp.3, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %62 = load float* %iftmp.3, align 4
  store float %62, float* %candidate, align 4
  %63 = load float* %candidate, align 4
  %64 = fcmp oge float %63, 0x43F0000000000000
  br i1 %64, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i32 -1, i32* %0, align 4
  br label %bb26

bb13:                                             ; preds = %bb11
  %65 = load float* %candidate, align 4
  %66 = fptoui float %65 to i64
  %67 = load %struct.Hash_table** %table_addr, align 8
  %68 = call zeroext i8 @hash_rehash(%struct.Hash_table* %67, i64 %66) nounwind
  %toBool14 = icmp ne i8 %68, 0
  %toBool14not = xor i1 %toBool14, true
  %toBool14not15 = zext i1 %toBool14not to i8
  %toBool17 = icmp ne i8 %toBool14not15, 0
  br i1 %toBool17, label %bb18, label %bb19

bb18:                                             ; preds = %bb13
  store i32 -1, i32* %0, align 4
  br label %bb26

bb19:                                             ; preds = %bb13
  %69 = load %struct.Hash_table** %table_addr, align 8
  %70 = load i8** %entry_addr, align 8
  %71 = call i8* @hash_find_entry(%struct.Hash_table* %69, i8* %70, %struct.fs_type_list** %bucket, i8 zeroext 0) nounwind
  %72 = icmp ne i8* %71, null
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  call void @abort() noreturn nounwind
  unreachable

bb21:                                             ; preds = %bb19, %bb7, %bb6
  %73 = load %struct.fs_type_list** %bucket, align 8
  %74 = getelementptr inbounds %struct.fs_type_list* %73, i32 0, i32 0
  %75 = load i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %bb22, label %bb25

bb22:                                             ; preds = %bb21
  %77 = load %struct.Hash_table** %table_addr, align 8
  %78 = call %struct.fs_type_list* @allocate_entry(%struct.Hash_table* %77) nounwind
  store %struct.fs_type_list* %78, %struct.fs_type_list** %new_entry, align 8
  %79 = load %struct.fs_type_list** %new_entry, align 8
  %80 = icmp eq %struct.fs_type_list* %79, null
  br i1 %80, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  store i32 -1, i32* %0, align 4
  br label %bb26

bb24:                                             ; preds = %bb22
  %81 = load i8** %entry_addr, align 8
  %82 = load %struct.fs_type_list** %new_entry, align 8
  %83 = getelementptr inbounds %struct.fs_type_list* %82, i32 0, i32 0
  store i8* %81, i8** %83, align 8
  %84 = load %struct.fs_type_list** %bucket, align 8
  %85 = getelementptr inbounds %struct.fs_type_list* %84, i32 0, i32 1
  %86 = load %struct.fs_type_list** %85, align 8
  %87 = load %struct.fs_type_list** %new_entry, align 8
  %88 = getelementptr inbounds %struct.fs_type_list* %87, i32 0, i32 1
  store %struct.fs_type_list* %86, %struct.fs_type_list** %88, align 8
  %89 = load %struct.fs_type_list** %bucket, align 8
  %90 = getelementptr inbounds %struct.fs_type_list* %89, i32 0, i32 1
  %91 = load %struct.fs_type_list** %new_entry, align 8
  store %struct.fs_type_list* %91, %struct.fs_type_list** %90, align 8
  %92 = load %struct.Hash_table** %table_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 4
  %94 = load i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 4
  store i64 %95, i64* %97, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb25:                                             ; preds = %bb21
  %98 = load %struct.fs_type_list** %bucket, align 8
  %99 = load i8** %entry_addr, align 8
  %100 = getelementptr inbounds %struct.fs_type_list* %98, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = getelementptr inbounds %struct.Hash_table* %101, i32 0, i32 4
  %103 = load i64* %102, align 8
  %104 = add i64 %103, 1
  %105 = load %struct.Hash_table** %table_addr, align 8
  %106 = getelementptr inbounds %struct.Hash_table* %105, i32 0, i32 4
  store i64 %104, i64* %106, align 8
  %107 = load %struct.Hash_table** %table_addr, align 8
  %108 = getelementptr inbounds %struct.Hash_table* %107, i32 0, i32 3
  %109 = load i64* %108, align 8
  %110 = add i64 %109, 1
  %111 = load %struct.Hash_table** %table_addr, align 8
  %112 = getelementptr inbounds %struct.Hash_table* %111, i32 0, i32 3
  store i64 %110, i64* %112, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24, %bb23, %bb18, %bb12, %bb5
  %113 = load i32* %0, align 4
  store i32 %113, i32* %retval, align 4
  %retval27 = load i32* %retval
  ret i32 %retval27
}

define i8* @hash_insert(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.11 = alloca i8*
  %iftmp.10 = alloca i8*
  %0 = alloca i8*
  %matched_ent = alloca i8*
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i32 @hash_insert_if_absent(%struct.Hash_table* %1, i8* %2, i8** %matched_ent) nounwind
  store i32 %3, i32* %err, align 4
  %4 = load i32* %err, align 4
  %5 = icmp ne i32 %4, -1
  br i1 %5, label %bb, label %bb5

bb:                                               ; preds = %entry
  %6 = load i32* %err, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  %8 = load i8** %matched_ent, align 8
  store i8* %8, i8** %iftmp.11, align 8
  br label %bb4

bb3:                                              ; preds = %bb
  %9 = load i8** %entry_addr, align 8
  store i8* %9, i8** %iftmp.11, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = load i8** %iftmp.11, align 8
  store i8* %10, i8** %iftmp.10, align 8
  br label %bb6

bb5:                                              ; preds = %entry
  store i8* null, i8** %iftmp.10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i8** %iftmp.10, align 8
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define i8* @hash_delete(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.13 = alloca i64
  %0 = alloca i8*
  %data = alloca i8*
  %bucket = alloca %struct.fs_type_list*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca i64
  %cursor = alloca %struct.fs_type_list*
  %next = alloca %struct.fs_type_list*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i8* @hash_find_entry(%struct.Hash_table* %1, i8* %2, %struct.fs_type_list** %bucket, i8 zeroext 1) nounwind
  store i8* %3, i8** %data, align 8
  %4 = load i8** %data, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb18

bb2:                                              ; preds = %entry
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_table* %6, i32 0, i32 4
  %8 = load i64* %7, align 8
  %9 = sub i64 %8, 1
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 4
  store i64 %9, i64* %11, align 8
  %12 = load %struct.fs_type_list** %bucket, align 8
  %13 = getelementptr inbounds %struct.fs_type_list* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %bb3, label %bb17

bb3:                                              ; preds = %bb2
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 3
  %18 = load i64* %17, align 8
  %19 = sub i64 %18, 1
  %20 = load %struct.Hash_table** %table_addr, align 8
  %21 = getelementptr inbounds %struct.Hash_table* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 3
  %24 = load i64* %23, align 8
  %25 = uitofp i64 %24 to float
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 5
  %28 = load %struct.Hash_tuning** %27, align 8
  %29 = getelementptr inbounds %struct.Hash_tuning* %28, i32 0, i32 0
  %30 = load float* %29, align 4
  %31 = load %struct.Hash_table** %table_addr, align 8
  %32 = getelementptr inbounds %struct.Hash_table* %31, i32 0, i32 2
  %33 = load i64* %32, align 8
  %34 = uitofp i64 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp olt float %25, %35
  br i1 %36, label %bb4, label %bb17

bb4:                                              ; preds = %bb3
  %37 = load %struct.Hash_table** %table_addr, align 8
  %38 = call zeroext i8 @check_tuning(%struct.Hash_table* %37) nounwind
  %39 = load %struct.Hash_table** %table_addr, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 3
  %41 = load i64* %40, align 8
  %42 = uitofp i64 %41 to float
  %43 = load %struct.Hash_table** %table_addr, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 5
  %45 = load %struct.Hash_tuning** %44, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 0
  %47 = load float* %46, align 4
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 2
  %50 = load i64* %49, align 8
  %51 = uitofp i64 %50 to float
  %52 = fmul float %47, %51
  %53 = fcmp olt float %42, %52
  br i1 %53, label %bb5, label %bb17

bb5:                                              ; preds = %bb4
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 5
  %56 = load %struct.Hash_tuning** %55, align 8
  store %struct.Hash_tuning* %56, %struct.Hash_tuning** %tuning, align 8
  %57 = load %struct.Hash_tuning** %tuning, align 8
  %58 = getelementptr inbounds %struct.Hash_tuning* %57, i32 0, i32 4
  %59 = load i8* %58, align 4
  %toBool = icmp ne i8 %59, 0
  %60 = load %struct.Hash_table** %table_addr, align 8
  %61 = getelementptr inbounds %struct.Hash_table* %60, i32 0, i32 2
  %62 = load i64* %61, align 8
  %63 = uitofp i64 %62 to float
  %64 = load %struct.Hash_tuning** %tuning, align 8
  %65 = getelementptr inbounds %struct.Hash_tuning* %64, i32 0, i32 1
  %66 = load float* %65, align 4
  %67 = fmul float %63, %66
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %68 = fptoui float %67 to i64
  store i64 %68, i64* %iftmp.13, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %69 = load %struct.Hash_tuning** %tuning, align 8
  %70 = getelementptr inbounds %struct.Hash_tuning* %69, i32 0, i32 2
  %71 = load float* %70, align 4
  %72 = fmul float %67, %71
  %73 = fptoui float %72 to i64
  store i64 %73, i64* %iftmp.13, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %74 = load i64* %iftmp.13, align 8
  store i64 %74, i64* %candidate, align 8
  %75 = load %struct.Hash_table** %table_addr, align 8
  %76 = load i64* %candidate, align 8
  %77 = call zeroext i8 @hash_rehash(%struct.Hash_table* %75, i64 %76) nounwind
  %toBool9 = icmp ne i8 %77, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb17

bb13:                                             ; preds = %bb8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 9
  %80 = load %struct.fs_type_list** %79, align 8
  store %struct.fs_type_list* %80, %struct.fs_type_list** %cursor, align 8
  br label %bb15

bb14:                                             ; preds = %bb15
  %81 = load %struct.fs_type_list** %cursor, align 8
  %82 = getelementptr inbounds %struct.fs_type_list* %81, i32 0, i32 1
  %83 = load %struct.fs_type_list** %82, align 8
  store %struct.fs_type_list* %83, %struct.fs_type_list** %next, align 8
  %84 = load %struct.fs_type_list** %cursor, align 8
  %85 = bitcast %struct.fs_type_list* %84 to i8*
  call void @free(i8* %85) nounwind
  %86 = load %struct.fs_type_list** %next, align 8
  store %struct.fs_type_list* %86, %struct.fs_type_list** %cursor, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %87 = load %struct.fs_type_list** %cursor, align 8
  %88 = icmp ne %struct.fs_type_list* %87, null
  br i1 %88, label %bb14, label %bb16

bb16:                                             ; preds = %bb15
  %89 = load %struct.Hash_table** %table_addr, align 8
  %90 = getelementptr inbounds %struct.Hash_table* %89, i32 0, i32 9
  store %struct.fs_type_list* null, %struct.fs_type_list** %90, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb8, %bb4, %bb3, %bb2
  %91 = load i8** %data, align 8
  store i8* %91, i8** %0, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb
  %92 = load i8** %0, align 8
  store i8* %92, i8** %retval, align 8
  %retval19 = load i8** %retval
  ret i8* %retval19
}

define i64 @triple_hash(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %7 = call i64 @hash_pjw(i8* %5, i64 %6) nounwind readonly
  store i64 %7, i64* %tmp, align 8
  %8 = load %struct.F_triple** %p, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load i64* %tmp, align 8
  %12 = xor i64 %10, %11
  %13 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %13 to i64
  %14 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %15 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %15, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %16 = urem i64 %12, %13
  store i64 %16, i64* %0, align 8
  %17 = load i64* %0, align 8
  store i64 %17, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @triple_hash_no_name(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 1
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i8 @triple_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb6, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb6, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call zeroext i8 @same_name(i8* %24, i8* %21) nounwind
  %toBool = icmp ne i8 %25, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb6, label %bb5

bb5:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.0, align 4
  br label %bb7

bb6:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %iftmp.0, align 4
  %27 = trunc i32 %26 to i8
  %28 = zext i8 %27 to i32
  store i32 %28, i32* %0, align 4
  %29 = load i32* %0, align 4
  store i32 %29, i32* %retval, align 4
  %retval8 = load i32* %retval
  %retval89 = trunc i32 %retval8 to i8
  ret i8 %retval89
}

define zeroext i8 @triple_compare_ino_str(i8* %x, i8* %y) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb3, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call i32 @strcmp(i8* %24, i8* %21) nounwind readonly
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.1, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %27 = load i32* %iftmp.1, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %0, align 4
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define void @triple_free(i8* %x) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  %0 = load i8** %x_addr, align 8
  %1 = bitcast i8* %0 to %struct.F_triple*
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8
  %2 = load %struct.F_triple** %a, align 8
  %3 = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 0
  %4 = load i8** %3, align 8
  call void @free(i8* %4) nounwind
  %5 = load %struct.F_triple** %a, align 8
  %6 = bitcast %struct.F_triple* %5 to i8*
  call void @free(i8* %6) nounwind
  ret void
}

define internal x86_fp80 @adjust_value(i32 %inexact_style, x86_fp80 %value) nounwind {
entry:
  %inexact_style_addr = alloca i32, align 4
  %value_addr = alloca x86_fp80, align 16
  %retval = alloca x86_fp80
  %0 = alloca x86_fp80
  %iftmp.0 = alloca i32
  %u = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %inexact_style, i32* %inexact_style_addr
  store x86_fp80 %value, x86_fp80* %value_addr
  %1 = load i32* %inexact_style_addr, align 4
  %2 = icmp ne i32 %1, 1
  br i1 %2, label %bb, label %bb6

bb:                                               ; preds = %entry
  %3 = load x86_fp80* %value_addr, align 16
  %4 = fcmp olt x86_fp80 %3, 0xK403EFFFFFFFFFFFFFFFF
  br i1 %4, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %5 = load x86_fp80* %value_addr, align 16
  %6 = fptoui x86_fp80 %5 to i64
  store i64 %6, i64* %u, align 8
  %7 = load i32* %inexact_style_addr, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb4, label %bb2

bb2:                                              ; preds = %bb1
  %9 = load i64* %u, align 8
  %10 = uitofp i64 %9 to x86_fp80
  %11 = load x86_fp80* %value_addr, align 16
  %12 = fcmp oeq x86_fp80 %10, %11
  br i1 %12, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  store i32 1, i32* %iftmp.0, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 0, i32* %iftmp.0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %13 = load i32* %iftmp.0, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64* %u, align 8
  %16 = add i64 %14, %15
  %17 = uitofp i64 %16 to x86_fp80
  store x86_fp80 %17, x86_fp80* %value_addr, align 16
  br label %bb6

bb6:                                              ; preds = %bb5, %bb, %entry
  %18 = load x86_fp80* %value_addr, align 16
  store x86_fp80 %18, x86_fp80* %0, align 16
  %19 = load x86_fp80* %0, align 16
  store x86_fp80 %19, x86_fp80* %retval, align 16
  %retval7 = load x86_fp80* %retval
  ret x86_fp80 %retval7
}

define internal i8* @group_number(i8* %number, i64 %numberlen, i8* %grouping, i8* %thousands_sep) nounwind {
entry:
  %number_addr = alloca i8*, align 8
  %numberlen_addr = alloca i64, align 8
  %grouping_addr = alloca i8*, align 8
  %thousands_sep_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.1 = alloca i64
  %d = alloca i8*
  %grouplen = alloca i64
  %thousands_seplen = alloca i64
  %i = alloca i64
  %buf = alloca [41 x i8]
  %g = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %number, i8** %number_addr
  store i64 %numberlen, i64* %numberlen_addr
  store i8* %grouping, i8** %grouping_addr
  store i8* %thousands_sep, i8** %thousands_sep_addr
  store i64 -1, i64* %grouplen, align 8
  %1 = load i8** %thousands_sep_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %thousands_seplen, align 8
  %3 = load i64* %numberlen_addr, align 8
  store i64 %3, i64* %i, align 8
  %buf1 = bitcast [41 x i8]* %buf to i8*
  %4 = load i8** %number_addr, align 8
  %5 = load i64* %numberlen_addr, align 8
  %6 = call i8* @memcpy(i8* %buf1, i8* %4, i64 %5)
  %7 = load i8** %number_addr, align 8
  %8 = load i64* %numberlen_addr, align 8
  %9 = getelementptr inbounds i8* %7, i64 %8
  store i8* %9, i8** %d, align 8
  br label %bb

bb:                                               ; preds = %bb11, %entry
  %10 = load i8** %grouping_addr, align 8
  %11 = load i8* %10, align 1
  store i8 %11, i8* %g, align 1
  %12 = load i8* %g, align 1
  %13 = icmp ne i8 %12, 0
  br i1 %13, label %bb2, label %bb6

bb2:                                              ; preds = %bb
  %14 = load i8* %g, align 1
  %15 = icmp ule i8 %14, 126
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load i8* %g, align 1
  %17 = zext i8 %16 to i64
  store i64 %17, i64* %iftmp.1, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %18 = load i64* %i, align 8
  store i64 %18, i64* %iftmp.1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %19 = load i64* %iftmp.1, align 8
  store i64 %19, i64* %grouplen, align 8
  %20 = load i8** %grouping_addr, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %grouping_addr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb
  %22 = load i64* %i, align 8
  %23 = load i64* %grouplen, align 8
  %24 = icmp ult i64 %22, %23
  br i1 %24, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %25 = load i64* %i, align 8
  store i64 %25, i64* %grouplen, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %26 = load i64* %grouplen, align 8
  %27 = sub nsw i64 0, %26
  %28 = load i8** %d, align 8
  %29 = getelementptr inbounds i8* %28, i64 %27
  store i8* %29, i8** %d, align 8
  %30 = load i64* %i, align 8
  %31 = load i64* %grouplen, align 8
  %32 = sub i64 %30, %31
  store i64 %32, i64* %i, align 8
  %buf9 = bitcast [41 x i8]* %buf to i8*
  %33 = load i64* %i, align 8
  %34 = getelementptr inbounds i8* %buf9, i64 %33
  %35 = load i8** %d, align 8
  %36 = load i64* %grouplen, align 8
  %37 = call i8* @memcpy(i8* %35, i8* %34, i64 %36)
  %38 = load i64* %i, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %bb10, label %bb11

bb10:                                             ; preds = %bb8
  %40 = load i8** %d, align 8
  store i8* %40, i8** %0, align 8
  %41 = load i8** %0, align 8
  store i8* %41, i8** %retval, align 8
  %retval12 = load i8** %retval
  ret i8* %retval12

bb11:                                             ; preds = %bb8
  %42 = load i64* %thousands_seplen, align 8
  %43 = sub nsw i64 0, %42
  %44 = load i8** %d, align 8
  %45 = getelementptr inbounds i8* %44, i64 %43
  store i8* %45, i8** %d, align 8
  %46 = load i8** %d, align 8
  %47 = load i8** %thousands_sep_addr, align 8
  %48 = load i64* %thousands_seplen, align 8
  %49 = call i8* @memcpy(i8* %46, i8* %47, i64 %48)
  br label %bb
}

define i8* @human_readable(i64 %n, i8* %buf, i32 %opts, i64 %from_block_size, i64 %to_block_size) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %opts_addr = alloca i32, align 4
  %from_block_size_addr = alloca i64, align 8
  %to_block_size_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.22 = alloca i8
  %iftmp.18 = alloca i32
  %iftmp.17 = alloca i8
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i8
  %iftmp.12 = alloca i32
  %iftmp.10 = alloca i32
  %iftmp.6 = alloca i32
  %iftmp.5 = alloca i32
  %iftmp.4 = alloca i32
  %inexact_style = alloca i32
  %base = alloca i32
  %amt = alloca i64
  %tenths = alloca i32
  %exponent = alloca i32
  %exponent_max = alloca i32
  %p = alloca i8*
  %psuffix = alloca i8*
  %integerlim = alloca i8*
  %rounding = alloca i32
  %decimal_point = alloca i8*
  %decimal_pointlen = alloca i64
  %grouping = alloca i8*
  %thousands_sep = alloca i8*
  %l = alloca %struct.lconv*
  %pointlen = alloca i64
  %multiplier = alloca i64
  %divisor = alloca i64
  %r10 = alloca i64
  %r2 = alloca i64
  %dto_block_size = alloca x86_fp80
  %damt = alloca x86_fp80
  %buflen = alloca i64
  %nonintegerlen = alloca i64
  %e = alloca x86_fp80
  %r1033 = alloca i32
  %r234 = alloca i32
  %digit = alloca i32
  %power = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i8* %buf, i8** %buf_addr
  store i32 %opts, i32* %opts_addr
  store i64 %from_block_size, i64* %from_block_size_addr
  store i64 %to_block_size, i64* %to_block_size_addr
  %1 = load i32* %opts_addr, align 4
  %2 = and i32 %1, 3
  store i32 %2, i32* %inexact_style, align 4
  %3 = load i32* %opts_addr, align 4
  %4 = and i32 %3, 32
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1024, i32* %iftmp.4, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 1000, i32* %iftmp.4, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load i32* %iftmp.4, align 4
  store i32 %6, i32* %base, align 4
  store i32 -1, i32* %exponent, align 4
  store i32 8, i32* %exponent_max, align 4
  store i8* getelementptr inbounds ([2 x i8]* @.str146, i64 0, i64 0), i8** %decimal_point, align 8
  store i64 1, i64* %decimal_pointlen, align 8
  store i8* getelementptr inbounds ([1 x i8]* @.str1147, i64 0, i64 0), i8** %grouping, align 8
  store i8* getelementptr inbounds ([1 x i8]* @.str1147, i64 0, i64 0), i8** %thousands_sep, align 8
  %7 = call %struct.lconv* @localeconv() nounwind
  store %struct.lconv* %7, %struct.lconv** %l, align 8
  %8 = load %struct.lconv** %l, align 8
  %9 = getelementptr inbounds %struct.lconv* %8, i32 0, i32 0
  %10 = load i8** %9, align 8
  %11 = call i64 @strlen(i8* %10) nounwind readonly
  store i64 %11, i64* %pointlen, align 8
  %12 = load i64* %pointlen, align 8
  %13 = icmp ne i64 %12, 0
  %14 = load i64* %pointlen, align 8
  %15 = icmp ule i64 %14, 16
  %or.cond = and i1 %13, %15
  br i1 %or.cond, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %16 = load %struct.lconv** %l, align 8
  %17 = getelementptr inbounds %struct.lconv* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %decimal_point, align 8
  %19 = load i64* %pointlen, align 8
  store i64 %19, i64* %decimal_pointlen, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %20 = load %struct.lconv** %l, align 8
  %21 = getelementptr inbounds %struct.lconv* %20, i32 0, i32 2
  %22 = load i8** %21, align 8
  store i8* %22, i8** %grouping, align 8
  %23 = load %struct.lconv** %l, align 8
  %24 = getelementptr inbounds %struct.lconv* %23, i32 0, i32 1
  %25 = load i8** %24, align 8
  %26 = call i64 @strlen(i8* %25) nounwind readonly
  %27 = icmp ule i64 %26, 16
  br i1 %27, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %28 = load %struct.lconv** %l, align 8
  %29 = getelementptr inbounds %struct.lconv* %28, i32 0, i32 1
  %30 = load i8** %29, align 8
  store i8* %30, i8** %thousands_sep, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %31 = load i8** %buf_addr, align 8
  %32 = getelementptr inbounds i8* %31, i64 651
  %33 = getelementptr inbounds i8* %32, i64 -1
  %34 = getelementptr inbounds i8* %33, i64 -3
  store i8* %34, i8** %psuffix, align 8
  %35 = load i8** %psuffix, align 8
  store i8* %35, i8** %p, align 8
  %36 = load i64* %to_block_size_addr, align 8
  %37 = load i64* %from_block_size_addr, align 8
  %38 = icmp ule i64 %36, %37
  %39 = load i64* %from_block_size_addr, align 8
  br i1 %38, label %bb8, label %bb12

bb8:                                              ; preds = %bb7
  %40 = load i64* %to_block_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %40 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %42, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb8
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb8
  call void @klee_disable_symbex() nounwind
  %43 = urem i64 %39, %40
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %bb9, label %bb21

bb9:                                              ; preds = %klee_div_zero_check.exit
  %45 = load i64* %from_block_size_addr, align 8
  %46 = load i64* %to_block_size_addr, align 8
  %int_cast_to_i641 = bitcast i64 %46 to i64
  %47 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %48 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %48, label %bb.i16, label %klee_div_zero_check.exit17

bb.i16:                                           ; preds = %bb9
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit17:                       ; preds = %bb9
  call void @klee_disable_symbex() nounwind
  %49 = udiv i64 %45, %46
  store i64 %49, i64* %multiplier, align 8
  %50 = load i64* %n_addr, align 8
  %51 = load i64* %multiplier, align 8
  %52 = mul i64 %50, %51
  store i64 %52, i64* %amt, align 8
  %53 = load i64* %amt, align 8
  %54 = load i64* %multiplier, align 8
  %int_cast_to_i642 = bitcast i64 %54 to i64
  %55 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %56 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %56, label %bb.i18, label %klee_div_zero_check.exit19

bb.i18:                                           ; preds = %klee_div_zero_check.exit17
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit19:                       ; preds = %klee_div_zero_check.exit17
  call void @klee_disable_symbex() nounwind
  %57 = udiv i64 %53, %54
  %58 = load i64* %n_addr, align 8
  %59 = icmp eq i64 %57, %58
  br i1 %59, label %bb10, label %bb21

bb10:                                             ; preds = %klee_div_zero_check.exit19
  store i32 0, i32* %tenths, align 4
  store i32 0, i32* %rounding, align 4
  br label %use_integer_arithmetic

bb12:                                             ; preds = %bb7
  %60 = icmp ne i64 %39, 0
  br i1 %60, label %bb13, label %bb21

bb13:                                             ; preds = %bb12
  %61 = load i64* %to_block_size_addr, align 8
  %62 = load i64* %from_block_size_addr, align 8
  %int_cast_to_i643 = bitcast i64 %62 to i64
  %63 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %64 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %64, label %bb.i20, label %klee_div_zero_check.exit21

bb.i20:                                           ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit21:                       ; preds = %bb13
  call void @klee_disable_symbex() nounwind
  %65 = urem i64 %61, %62
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %bb14, label %bb21

bb14:                                             ; preds = %klee_div_zero_check.exit21
  %67 = load i64* %to_block_size_addr, align 8
  %68 = load i64* %from_block_size_addr, align 8
  %int_cast_to_i644 = bitcast i64 %68 to i64
  %69 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %70 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %70, label %bb.i22, label %klee_div_zero_check.exit23

bb.i22:                                           ; preds = %bb14
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit23:                       ; preds = %bb14
  call void @klee_disable_symbex() nounwind
  %71 = udiv i64 %67, %68
  store i64 %71, i64* %divisor, align 8
  %72 = load i64* %n_addr, align 8
  %73 = load i64* %divisor, align 8
  %int_cast_to_i645 = bitcast i64 %73 to i64
  %74 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %75 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %75, label %bb.i24, label %klee_div_zero_check.exit25

bb.i24:                                           ; preds = %klee_div_zero_check.exit23
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit25:                       ; preds = %klee_div_zero_check.exit23
  call void @klee_disable_symbex() nounwind
  %76 = urem i64 %72, %73
  %77 = mul i64 %76, 10
  store i64 %77, i64* %r10, align 8
  %78 = load i64* %r10, align 8
  %79 = load i64* %divisor, align 8
  %int_cast_to_i646 = bitcast i64 %79 to i64
  %80 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %81 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %81, label %bb.i26, label %klee_div_zero_check.exit27

bb.i26:                                           ; preds = %klee_div_zero_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit27:                       ; preds = %klee_div_zero_check.exit25
  call void @klee_disable_symbex() nounwind
  %82 = urem i64 %78, %79
  %83 = mul i64 %82, 2
  store i64 %83, i64* %r2, align 8
  %84 = load i64* %n_addr, align 8
  %85 = load i64* %divisor, align 8
  %int_cast_to_i647 = bitcast i64 %85 to i64
  %86 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %87 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %87, label %bb.i28, label %klee_div_zero_check.exit29

bb.i28:                                           ; preds = %klee_div_zero_check.exit27
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit29:                       ; preds = %klee_div_zero_check.exit27
  call void @klee_disable_symbex() nounwind
  %88 = udiv i64 %84, %85
  store i64 %88, i64* %amt, align 8
  %89 = load i64* %r10, align 8
  %90 = load i64* %divisor, align 8
  %int_cast_to_i648 = bitcast i64 %90 to i64
  %91 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %92 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %92, label %bb.i30, label %klee_div_zero_check.exit31

bb.i30:                                           ; preds = %klee_div_zero_check.exit29
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit31:                       ; preds = %klee_div_zero_check.exit29
  call void @klee_disable_symbex() nounwind
  %93 = udiv i64 %89, %90
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %tenths, align 4
  %95 = load i64* %r2, align 8
  %96 = load i64* %divisor, align 8
  %97 = icmp ult i64 %95, %96
  br i1 %97, label %bb15, label %bb16

bb15:                                             ; preds = %klee_div_zero_check.exit31
  %98 = load i64* %r2, align 8
  %99 = icmp ne i64 %98, 0
  %100 = zext i1 %99 to i32
  store i32 %100, i32* %iftmp.5, align 4
  br label %bb20

bb16:                                             ; preds = %klee_div_zero_check.exit31
  %101 = load i64* %divisor, align 8
  %102 = load i64* %r2, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  store i32 3, i32* %iftmp.6, align 4
  br label %bb19

bb18:                                             ; preds = %bb16
  store i32 2, i32* %iftmp.6, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %104 = load i32* %iftmp.6, align 4
  store i32 %104, i32* %iftmp.5, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb15
  %105 = load i32* %iftmp.5, align 4
  store i32 %105, i32* %rounding, align 4
  br label %use_integer_arithmetic

bb21:                                             ; preds = %klee_div_zero_check.exit, %klee_div_zero_check.exit19, %klee_div_zero_check.exit21, %bb12
  %106 = load i64* %to_block_size_addr, align 8
  %107 = uitofp i64 %106 to x86_fp80
  store x86_fp80 %107, x86_fp80* %dto_block_size, align 16
  %108 = load i64* %n_addr, align 8
  %109 = uitofp i64 %108 to x86_fp80
  %110 = load i64* %from_block_size_addr, align 8
  %111 = uitofp i64 %110 to x86_fp80
  %112 = load x86_fp80* %dto_block_size, align 16
  %113 = fdiv x86_fp80 %111, %112
  %114 = fmul x86_fp80 %109, %113
  store x86_fp80 %114, x86_fp80* %damt, align 16
  %115 = load i32* %opts_addr, align 4
  %116 = and i32 %115, 16
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %118 = load i32* %inexact_style, align 4
  %119 = load x86_fp80* %damt, align 16
  %120 = call x86_fp80 @adjust_value(i32 %118, x86_fp80 %119) nounwind
  %121 = load i8** %buf_addr, align 8
  %122 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %121, i8* noalias getelementptr inbounds ([6 x i8]* @.str2148, i64 0, i64 0), x86_fp80 %120) nounwind
  %123 = load i8** %buf_addr, align 8
  %124 = call i64 @strlen(i8* %123) nounwind readonly
  store i64 %124, i64* %buflen, align 8
  store i64 0, i64* %nonintegerlen, align 8
  br label %bb30

bb23:                                             ; preds = %bb21
  store x86_fp80 0xK3FFF8000000000000000, x86_fp80* %e, align 16
  store i32 0, i32* %exponent, align 4
  br label %bb24

bb24:                                             ; preds = %bb25, %bb23
  %125 = load i32* %base, align 4
  %126 = uitofp i32 %125 to x86_fp80
  %127 = load x86_fp80* %e, align 16
  %128 = fmul x86_fp80 %126, %127
  store x86_fp80 %128, x86_fp80* %e, align 16
  %129 = load i32* %exponent, align 4
  %130 = add nsw i32 %129, 1
  store i32 %130, i32* %exponent, align 4
  %131 = load i32* %base, align 4
  %132 = uitofp i32 %131 to x86_fp80
  %133 = load x86_fp80* %e, align 16
  %134 = fmul x86_fp80 %132, %133
  %135 = load x86_fp80* %damt, align 16
  %136 = fcmp ugt x86_fp80 %134, %135
  br i1 %136, label %bb26, label %bb25

bb25:                                             ; preds = %bb24
  %137 = load i32* %exponent, align 4
  %138 = load i32* %exponent_max, align 4
  %139 = icmp slt i32 %137, %138
  br i1 %139, label %bb24, label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %140 = load x86_fp80* %damt, align 16
  %141 = load x86_fp80* %e, align 16
  %142 = fdiv x86_fp80 %140, %141
  store x86_fp80 %142, x86_fp80* %damt, align 16
  %143 = load i32* %inexact_style, align 4
  %144 = load x86_fp80* %damt, align 16
  %145 = call x86_fp80 @adjust_value(i32 %143, x86_fp80 %144) nounwind
  %146 = load i8** %buf_addr, align 8
  %147 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %146, i8* noalias getelementptr inbounds ([6 x i8]* @.str3149, i64 0, i64 0), x86_fp80 %145) nounwind
  %148 = load i8** %buf_addr, align 8
  %149 = call i64 @strlen(i8* %148) nounwind readonly
  store i64 %149, i64* %buflen, align 8
  %150 = load i64* %decimal_pointlen, align 8
  %151 = add i64 %150, 1
  store i64 %151, i64* %nonintegerlen, align 8
  %152 = load i32* %opts_addr, align 4
  %153 = and i32 %152, 32
  %154 = icmp eq i32 %153, 0
  %155 = zext i1 %154 to i64
  %156 = load i64* %nonintegerlen, align 8
  %157 = add i64 %155, %156
  %158 = add i64 %157, 1
  %159 = load i64* %buflen, align 8
  %160 = icmp ult i64 %158, %159
  br i1 %160, label %bb29, label %bb27

bb27:                                             ; preds = %bb26
  %161 = load i32* %opts_addr, align 4
  %162 = and i32 %161, 8
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %bb30, label %bb28

bb28:                                             ; preds = %bb27
  %164 = load i64* %buflen, align 8
  %165 = sub i64 %164, 1
  %166 = load i8** %buf_addr, align 8
  %167 = getelementptr inbounds i8* %166, i64 %165
  %168 = load i8* %167, align 1
  %169 = icmp eq i8 %168, 48
  br i1 %169, label %bb29, label %bb30

bb29:                                             ; preds = %bb28, %bb26
  %170 = load x86_fp80* %damt, align 16
  %171 = fmul x86_fp80 %170, 0xK4002A000000000000000
  %172 = load i32* %inexact_style, align 4
  %173 = call x86_fp80 @adjust_value(i32 %172, x86_fp80 %171) nounwind
  %174 = fdiv x86_fp80 %173, 0xK4002A000000000000000
  %175 = load i8** %buf_addr, align 8
  %176 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %175, i8* noalias getelementptr inbounds ([6 x i8]* @.str2148, i64 0, i64 0), x86_fp80 %174) nounwind
  %177 = load i8** %buf_addr, align 8
  %178 = call i64 @strlen(i8* %177) nounwind readonly
  store i64 %178, i64* %buflen, align 8
  store i64 0, i64* %nonintegerlen, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28, %bb27, %bb22
  %179 = load i64* %buflen, align 8
  %180 = sub nsw i64 0, %179
  %181 = load i8** %psuffix, align 8
  %182 = getelementptr inbounds i8* %181, i64 %180
  store i8* %182, i8** %p, align 8
  %183 = load i8** %p, align 8
  %184 = load i8** %buf_addr, align 8
  %185 = load i64* %buflen, align 8
  %186 = call i8* @memmove(i8* %183, i8* %184, i64 %185)
  %187 = load i8** %p, align 8
  %188 = load i64* %buflen, align 8
  %189 = getelementptr inbounds i8* %187, i64 %188
  %190 = load i64* %nonintegerlen, align 8
  %191 = sub nsw i64 0, %190
  %192 = getelementptr inbounds i8* %189, i64 %191
  store i8* %192, i8** %integerlim, align 8
  br label %do_grouping

use_integer_arithmetic:                           ; preds = %bb20, %bb10
  %193 = load i32* %opts_addr, align 4
  %194 = and i32 %193, 16
  %195 = icmp ne i32 %194, 0
  br i1 %195, label %bb31, label %bb57

bb31:                                             ; preds = %use_integer_arithmetic
  store i32 0, i32* %exponent, align 4
  %196 = load i32* %base, align 4
  %197 = zext i32 %196 to i64
  %198 = load i64* %amt, align 8
  %199 = icmp ule i64 %197, %198
  br i1 %199, label %bb32, label %bb57

bb32:                                             ; preds = %bb41, %bb31
  %200 = load i32* %base, align 4
  %201 = zext i32 %200 to i64
  %202 = load i64* %amt, align 8
  %int_cast_to_i649 = bitcast i64 %201 to i64
  %203 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %204 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %204, label %bb.i32, label %klee_div_zero_check.exit33

bb.i32:                                           ; preds = %bb32
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit33:                       ; preds = %bb32
  call void @klee_disable_symbex() nounwind
  %205 = urem i64 %202, %201
  %206 = mul i64 %205, 10
  %207 = trunc i64 %206 to i32
  %208 = load i32* %tenths, align 4
  %209 = add i32 %207, %208
  store i32 %209, i32* %r1033, align 4
  %210 = load i32* %r1033, align 4
  %211 = load i32* %base, align 4
  %int_cast_to_i6410 = zext i32 %211 to i64
  %212 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %213 = icmp eq i64 %int_cast_to_i6410, 0
  br i1 %213, label %bb.i34, label %klee_div_zero_check.exit35

bb.i34:                                           ; preds = %klee_div_zero_check.exit33
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit35:                       ; preds = %klee_div_zero_check.exit33
  call void @klee_disable_symbex() nounwind
  %214 = urem i32 %210, %211
  %215 = mul i32 %214, 2
  %216 = load i32* %rounding, align 4
  %int_cast_to_i6415 = zext i32 1 to i64
  %217 = icmp ult i64 %int_cast_to_i6415, 32
  br i1 %217, label %klee_overshift_check.exit, label %bb.i44

bb.i44:                                           ; preds = %klee_div_zero_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit35
  %218 = ashr i32 %216, 1
  %219 = add i32 %215, %218
  store i32 %219, i32* %r234, align 4
  %220 = load i32* %base, align 4
  %221 = zext i32 %220 to i64
  %222 = load i64* %amt, align 8
  %int_cast_to_i6411 = bitcast i64 %221 to i64
  %223 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %224 = icmp eq i64 %int_cast_to_i6411, 0
  br i1 %224, label %bb.i36, label %klee_div_zero_check.exit37

bb.i36:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit37:                       ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %225 = udiv i64 %222, %221
  store i64 %225, i64* %amt, align 8
  %226 = load i32* %r1033, align 4
  %227 = load i32* %base, align 4
  %int_cast_to_i6412 = zext i32 %227 to i64
  %228 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %229 = icmp eq i64 %int_cast_to_i6412, 0
  br i1 %229, label %bb.i38, label %klee_div_zero_check.exit39

bb.i38:                                           ; preds = %klee_div_zero_check.exit37
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit39:                       ; preds = %klee_div_zero_check.exit37
  call void @klee_disable_symbex() nounwind
  %230 = udiv i32 %226, %227
  store i32 %230, i32* %tenths, align 4
  %231 = load i32* %r234, align 4
  %232 = load i32* %base, align 4
  %233 = icmp ult i32 %231, %232
  %234 = load i32* %rounding, align 4
  %235 = load i32* %r234, align 4
  %236 = add i32 %235, %234
  br i1 %233, label %bb35, label %bb36

bb35:                                             ; preds = %klee_div_zero_check.exit39
  %237 = icmp ne i32 %236, 0
  %238 = zext i1 %237 to i32
  store i32 %238, i32* %iftmp.10, align 4
  br label %bb40

bb36:                                             ; preds = %klee_div_zero_check.exit39
  %239 = load i32* %base, align 4
  %240 = icmp ugt i32 %236, %239
  br i1 %240, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  store i32 3, i32* %iftmp.12, align 4
  br label %bb39

bb38:                                             ; preds = %bb36
  store i32 2, i32* %iftmp.12, align 4
  br label %bb39

bb39:                                             ; preds = %bb38, %bb37
  %241 = load i32* %iftmp.12, align 4
  store i32 %241, i32* %iftmp.10, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %bb35
  %242 = load i32* %iftmp.10, align 4
  store i32 %242, i32* %rounding, align 4
  %243 = load i32* %exponent, align 4
  %244 = add nsw i32 %243, 1
  store i32 %244, i32* %exponent, align 4
  %245 = load i32* %base, align 4
  %246 = zext i32 %245 to i64
  %247 = load i64* %amt, align 8
  %248 = icmp ugt i64 %246, %247
  br i1 %248, label %bb42, label %bb41

bb41:                                             ; preds = %bb40
  %249 = load i32* %exponent, align 4
  %250 = load i32* %exponent_max, align 4
  %251 = icmp slt i32 %249, %250
  br i1 %251, label %bb32, label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %252 = load i64* %amt, align 8
  %253 = icmp ule i64 %252, 9
  br i1 %253, label %bb43, label %bb57

bb43:                                             ; preds = %bb42
  %254 = load i32* %inexact_style, align 4
  %255 = icmp eq i32 %254, 1
  br i1 %255, label %bb44, label %bb45

bb44:                                             ; preds = %bb43
  %256 = load i32* %tenths, align 4
  %257 = and i32 %256, 1
  %258 = load i32* %rounding, align 4
  %259 = add nsw i32 %257, %258
  %260 = icmp sgt i32 %259, 2
  %261 = zext i1 %260 to i8
  store i8 %261, i8* %iftmp.14, align 1
  br label %bb50

bb45:                                             ; preds = %bb43
  %262 = load i32* %inexact_style, align 4
  %263 = icmp ne i32 %262, 0
  br i1 %263, label %bb48, label %bb46

bb46:                                             ; preds = %bb45
  %264 = load i32* %rounding, align 4
  %265 = icmp sle i32 %264, 0
  br i1 %265, label %bb48, label %bb47

bb47:                                             ; preds = %bb46
  store i32 1, i32* %iftmp.15, align 4
  br label %bb49

bb48:                                             ; preds = %bb46, %bb45
  store i32 0, i32* %iftmp.15, align 4
  br label %bb49

bb49:                                             ; preds = %bb48, %bb47
  %266 = load i32* %iftmp.15, align 4
  %267 = trunc i32 %266 to i8
  store i8 %267, i8* %iftmp.14, align 1
  br label %bb50

bb50:                                             ; preds = %bb49, %bb44
  %268 = load i8* %iftmp.14, align 1
  %toBool = icmp ne i8 %268, 0
  br i1 %toBool, label %bb51, label %bb53

bb51:                                             ; preds = %bb50
  %269 = load i32* %tenths, align 4
  %270 = add nsw i32 %269, 1
  store i32 %270, i32* %tenths, align 4
  store i32 0, i32* %rounding, align 4
  %271 = load i32* %tenths, align 4
  %272 = icmp eq i32 %271, 10
  br i1 %272, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  %273 = load i64* %amt, align 8
  %274 = add i64 %273, 1
  store i64 %274, i64* %amt, align 8
  store i32 0, i32* %tenths, align 4
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51, %bb50
  %275 = load i64* %amt, align 8
  %276 = icmp ule i64 %275, 9
  br i1 %276, label %bb54, label %bb57

bb54:                                             ; preds = %bb53
  %277 = load i32* %tenths, align 4
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %bb56, label %bb55

bb55:                                             ; preds = %bb54
  %279 = load i32* %opts_addr, align 4
  %280 = and i32 %279, 8
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %bb56, label %bb57

bb56:                                             ; preds = %bb55, %bb54
  %282 = load i8** %p, align 8
  %283 = getelementptr inbounds i8* %282, i64 -1
  store i8* %283, i8** %p, align 8
  %284 = load i32* %tenths, align 4
  %285 = trunc i32 %284 to i8
  %286 = add i8 %285, 48
  %287 = load i8** %p, align 8
  store i8 %286, i8* %287, align 1
  %288 = load i64* %decimal_pointlen, align 8
  %289 = sub nsw i64 0, %288
  %290 = load i8** %p, align 8
  %291 = getelementptr inbounds i8* %290, i64 %289
  store i8* %291, i8** %p, align 8
  %292 = load i8** %p, align 8
  %293 = load i8** %decimal_point, align 8
  %294 = load i64* %decimal_pointlen, align 8
  %295 = call i8* @memcpy(i8* %292, i8* %293, i64 %294)
  store i32 0, i32* %rounding, align 4
  %296 = load i32* %rounding, align 4
  store i32 %296, i32* %tenths, align 4
  br label %bb57

bb57:                                             ; preds = %bb56, %bb55, %bb53, %bb42, %bb31, %use_integer_arithmetic
  %297 = load i32* %inexact_style, align 4
  %298 = icmp eq i32 %297, 1
  br i1 %298, label %bb58, label %bb59

bb58:                                             ; preds = %bb57
  %299 = load i32* %rounding, align 4
  %300 = sext i32 %299 to i64
  %301 = load i64* %amt, align 8
  %302 = and i64 %301, 1
  %303 = add i64 %300, %302
  %304 = icmp ne i64 %303, 0
  %305 = zext i1 %304 to i32
  %306 = load i32* %tenths, align 4
  %307 = add nsw i32 %305, %306
  %308 = icmp sgt i32 %307, 5
  %309 = zext i1 %308 to i8
  store i8 %309, i8* %iftmp.17, align 1
  br label %bb64

bb59:                                             ; preds = %bb57
  %310 = load i32* %inexact_style, align 4
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %bb62, label %bb60

bb60:                                             ; preds = %bb59
  %312 = load i32* %tenths, align 4
  %313 = load i32* %rounding, align 4
  %314 = add nsw i32 %312, %313
  %315 = icmp sle i32 %314, 0
  br i1 %315, label %bb62, label %bb61

bb61:                                             ; preds = %bb60
  store i32 1, i32* %iftmp.18, align 4
  br label %bb63

bb62:                                             ; preds = %bb60, %bb59
  store i32 0, i32* %iftmp.18, align 4
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %316 = load i32* %iftmp.18, align 4
  %317 = trunc i32 %316 to i8
  store i8 %317, i8* %iftmp.17, align 1
  br label %bb64

bb64:                                             ; preds = %bb63, %bb58
  %318 = load i8* %iftmp.17, align 1
  %toBool65 = icmp ne i8 %318, 0
  br i1 %toBool65, label %bb66, label %bb72

bb66:                                             ; preds = %bb64
  %319 = load i64* %amt, align 8
  %320 = add i64 %319, 1
  store i64 %320, i64* %amt, align 8
  %321 = load i32* %opts_addr, align 4
  %322 = and i32 %321, 16
  %323 = icmp ne i32 %322, 0
  br i1 %323, label %bb67, label %bb72

bb67:                                             ; preds = %bb66
  %324 = load i32* %base, align 4
  %325 = zext i32 %324 to i64
  %326 = load i64* %amt, align 8
  %327 = icmp eq i64 %325, %326
  br i1 %327, label %bb68, label %bb72

bb68:                                             ; preds = %bb67
  %328 = load i32* %exponent, align 4
  %329 = load i32* %exponent_max, align 4
  %330 = icmp slt i32 %328, %329
  br i1 %330, label %bb69, label %bb72

bb69:                                             ; preds = %bb68
  %331 = load i32* %exponent, align 4
  %332 = add nsw i32 %331, 1
  store i32 %332, i32* %exponent, align 4
  %333 = load i32* %opts_addr, align 4
  %334 = and i32 %333, 8
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %bb70, label %bb71

bb70:                                             ; preds = %bb69
  %336 = load i8** %p, align 8
  %337 = getelementptr inbounds i8* %336, i64 -1
  store i8* %337, i8** %p, align 8
  %338 = load i8** %p, align 8
  store i8 48, i8* %338, align 1
  %339 = load i64* %decimal_pointlen, align 8
  %340 = sub nsw i64 0, %339
  %341 = load i8** %p, align 8
  %342 = getelementptr inbounds i8* %341, i64 %340
  store i8* %342, i8** %p, align 8
  %343 = load i8** %p, align 8
  %344 = load i8** %decimal_point, align 8
  %345 = load i64* %decimal_pointlen, align 8
  %346 = call i8* @memcpy(i8* %343, i8* %344, i64 %345)
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  store i64 1, i64* %amt, align 8
  br label %bb72

bb72:                                             ; preds = %bb71, %bb68, %bb67, %bb66, %bb64
  %347 = load i8** %p, align 8
  store i8* %347, i8** %integerlim, align 8
  br label %bb73

bb73:                                             ; preds = %klee_div_zero_check.exit43, %bb72
  %348 = load i64* %amt, align 8
  %int_cast_to_i6413 = bitcast i64 10 to i64
  %349 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %350 = icmp eq i64 %int_cast_to_i6413, 0
  br i1 %350, label %bb.i40, label %klee_div_zero_check.exit41

bb.i40:                                           ; preds = %bb73
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit41:                       ; preds = %bb73
  call void @klee_disable_symbex() nounwind
  %351 = urem i64 %348, 10
  %352 = trunc i64 %351 to i32
  store i32 %352, i32* %digit, align 4
  %353 = load i8** %p, align 8
  %354 = getelementptr inbounds i8* %353, i64 -1
  store i8* %354, i8** %p, align 8
  %355 = load i32* %digit, align 4
  %356 = trunc i32 %355 to i8
  %357 = add i8 %356, 48
  %358 = load i8** %p, align 8
  store i8 %357, i8* %358, align 1
  %359 = load i64* %amt, align 8
  %int_cast_to_i6414 = bitcast i64 10 to i64
  %360 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %361 = icmp eq i64 %int_cast_to_i6414, 0
  br i1 %361, label %bb.i42, label %klee_div_zero_check.exit43

bb.i42:                                           ; preds = %klee_div_zero_check.exit41
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit43:                       ; preds = %klee_div_zero_check.exit41
  call void @klee_disable_symbex() nounwind
  %362 = udiv i64 %359, 10
  store i64 %362, i64* %amt, align 8
  %363 = load i64* %amt, align 8
  %364 = icmp ne i64 %363, 0
  br i1 %364, label %bb73, label %do_grouping

do_grouping:                                      ; preds = %klee_div_zero_check.exit43, %bb30
  %365 = load i32* %opts_addr, align 4
  %366 = and i32 %365, 4
  %367 = icmp ne i32 %366, 0
  br i1 %367, label %bb74, label %bb75

bb74:                                             ; preds = %do_grouping
  %368 = load i8** %integerlim, align 8
  %369 = ptrtoint i8* %368 to i64
  %370 = load i8** %p, align 8
  %371 = ptrtoint i8* %370 to i64
  %372 = sub nsw i64 %369, %371
  %373 = load i8** %p, align 8
  %374 = load i8** %grouping, align 8
  %375 = load i8** %thousands_sep, align 8
  %376 = call i8* @group_number(i8* %373, i64 %372, i8* %374, i8* %375) nounwind
  store i8* %376, i8** %p, align 8
  br label %bb75

bb75:                                             ; preds = %bb74, %do_grouping
  %377 = load i32* %opts_addr, align 4
  %378 = and i32 %377, 128
  %379 = icmp ne i32 %378, 0
  br i1 %379, label %bb76, label %bb95

bb76:                                             ; preds = %bb75
  %380 = load i32* %exponent, align 4
  %381 = icmp slt i32 %380, 0
  br i1 %381, label %bb77, label %bb81

bb77:                                             ; preds = %bb76
  store i32 0, i32* %exponent, align 4
  store i64 1, i64* %power, align 8
  br label %bb80

bb78:                                             ; preds = %bb80
  %382 = load i32* %exponent, align 4
  %383 = add nsw i32 %382, 1
  store i32 %383, i32* %exponent, align 4
  %384 = load i32* %exponent, align 4
  %385 = load i32* %exponent_max, align 4
  %386 = icmp eq i32 %384, %385
  br i1 %386, label %bb81, label %bb79

bb79:                                             ; preds = %bb78
  %387 = load i32* %base, align 4
  %388 = zext i32 %387 to i64
  %389 = load i64* %power, align 8
  %390 = mul i64 %388, %389
  store i64 %390, i64* %power, align 8
  br label %bb80

bb80:                                             ; preds = %bb79, %bb77
  %391 = load i64* %power, align 8
  %392 = load i64* %to_block_size_addr, align 8
  %393 = icmp ult i64 %391, %392
  br i1 %393, label %bb78, label %bb81

bb81:                                             ; preds = %bb80, %bb78, %bb76
  %394 = load i32* %opts_addr, align 4
  %395 = and i32 %394, 256
  %396 = load i32* %exponent, align 4
  %397 = or i32 %395, %396
  %398 = icmp ne i32 %397, 0
  br i1 %398, label %bb82, label %bb84

bb82:                                             ; preds = %bb81
  %399 = load i32* %opts_addr, align 4
  %400 = and i32 %399, 64
  %401 = icmp ne i32 %400, 0
  br i1 %401, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %402 = load i8** %psuffix, align 8
  store i8 32, i8* %402, align 1
  %403 = load i8** %psuffix, align 8
  %404 = getelementptr inbounds i8* %403, i64 1
  store i8* %404, i8** %psuffix, align 8
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82, %bb81
  %405 = load i32* %exponent, align 4
  %406 = icmp ne i32 %405, 0
  br i1 %406, label %bb85, label %bb90

bb85:                                             ; preds = %bb84
  %407 = load i32* %opts_addr, align 4
  %408 = and i32 %407, 32
  %409 = icmp ne i32 %408, 0
  br i1 %409, label %bb87, label %bb86

bb86:                                             ; preds = %bb85
  %410 = load i32* %exponent, align 4
  %411 = icmp ne i32 %410, 1
  br i1 %411, label %bb87, label %bb88

bb87:                                             ; preds = %bb86, %bb85
  %412 = load i32* %exponent, align 4
  %413 = sext i32 %412 to i64
  %414 = getelementptr inbounds [9 x i8]* @power_letter, i64 0, i64 %413
  %415 = load i8* %414, align 1
  store i8 %415, i8* %iftmp.22, align 1
  br label %bb89

bb88:                                             ; preds = %bb86
  store i8 107, i8* %iftmp.22, align 1
  br label %bb89

bb89:                                             ; preds = %bb88, %bb87
  %416 = load i8** %psuffix, align 8
  %417 = load i8* %iftmp.22, align 1
  store i8 %417, i8* %416, align 1
  %418 = load i8** %psuffix, align 8
  %419 = getelementptr inbounds i8* %418, i64 1
  store i8* %419, i8** %psuffix, align 8
  br label %bb90

bb90:                                             ; preds = %bb89, %bb84
  %420 = load i32* %opts_addr, align 4
  %421 = and i32 %420, 256
  %422 = icmp ne i32 %421, 0
  br i1 %422, label %bb91, label %bb95

bb91:                                             ; preds = %bb90
  %423 = load i32* %opts_addr, align 4
  %424 = and i32 %423, 32
  %425 = icmp ne i32 %424, 0
  br i1 %425, label %bb92, label %bb94

bb92:                                             ; preds = %bb91
  %426 = load i32* %exponent, align 4
  %427 = icmp ne i32 %426, 0
  br i1 %427, label %bb93, label %bb94

bb93:                                             ; preds = %bb92
  %428 = load i8** %psuffix, align 8
  store i8 105, i8* %428, align 1
  %429 = load i8** %psuffix, align 8
  %430 = getelementptr inbounds i8* %429, i64 1
  store i8* %430, i8** %psuffix, align 8
  br label %bb94

bb94:                                             ; preds = %bb93, %bb92, %bb91
  %431 = load i8** %psuffix, align 8
  store i8 66, i8* %431, align 1
  %432 = load i8** %psuffix, align 8
  %433 = getelementptr inbounds i8* %432, i64 1
  store i8* %433, i8** %psuffix, align 8
  br label %bb95

bb95:                                             ; preds = %bb94, %bb90, %bb75
  %434 = load i8** %psuffix, align 8
  store i8 0, i8* %434, align 1
  %435 = load i8** %p, align 8
  store i8* %435, i8** %0, align 8
  %436 = load i8** %0, align 8
  store i8* %436, i8** %retval, align 8
  %retval96 = load i8** %retval
  ret i8* %retval96
}

define internal i64 @default_block_size() nounwind {
entry:
  %retval = alloca i64
  %iftmp.24 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str6152, i64 0, i64 0)) nounwind
  %2 = icmp ne i8* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 512, i64* %iftmp.24, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store i64 1024, i64* %iftmp.24, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %3 = load i64* %iftmp.24, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal i32 @humblock(i8* %spec, i64* %block_size, i32* %options) nounwind {
entry:
  %spec_addr = alloca i8*, align 8
  %block_size_addr = alloca i64*, align 8
  %options_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %i = alloca i32
  %opts = alloca i32
  %ptr = alloca i8*
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %spec, i8** %spec_addr
  store i64* %block_size, i64** %block_size_addr
  store i32* %options, i32** %options_addr
  store i32 0, i32* %opts, align 4
  %1 = load i8** %spec_addr, align 8
  %2 = icmp ne i8* %1, null
  br i1 %2, label %bb3, label %bb

bb:                                               ; preds = %entry
  %3 = call i8* @getenv(i8* getelementptr inbounds ([11 x i8]* @.str7153, i64 0, i64 0)) nounwind
  store i8* %3, i8** %spec_addr, align 8
  %4 = load i8** %spec_addr, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %6 = call i8* @getenv(i8* getelementptr inbounds ([10 x i8]* @.str8154, i64 0, i64 0)) nounwind
  store i8* %6, i8** %spec_addr, align 8
  %7 = load i8** %spec_addr, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = call i64 @default_block_size() nounwind
  %10 = load i64** %block_size_addr, align 8
  store i64 %9, i64* %10, align 8
  br label %bb20

bb3:                                              ; preds = %bb1, %bb, %entry
  %11 = load i8** %spec_addr, align 8
  %12 = load i8* %11, align 1
  %13 = icmp eq i8 %12, 39
  br i1 %13, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %14 = load i32* %opts, align 4
  %15 = or i32 %14, 4
  store i32 %15, i32* %opts, align 4
  %16 = load i8** %spec_addr, align 8
  %17 = getelementptr inbounds i8* %16, i64 1
  store i8* %17, i8** %spec_addr, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %18 = load i8** %spec_addr, align 8
  %19 = call i64 @argmatch(i8* %18, i8** getelementptr inbounds ([3 x i8*]* @block_size_args, i64 0, i64 0), i8* bitcast ([2 x i32]* @block_size_opts to i8*), i64 4) nounwind readonly
  %20 = trunc i64 %19 to i32
  store i32 %20, i32* %i, align 4
  %21 = load i32* %i, align 4
  %22 = icmp sge i32 %21, 0
  br i1 %22, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %23 = load i32* %i, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds [2 x i32]* @block_size_opts, i64 0, i64 %24
  %26 = load i32* %25, align 4
  %27 = load i32* %opts, align 4
  %28 = or i32 %26, %27
  store i32 %28, i32* %opts, align 4
  %29 = load i64** %block_size_addr, align 8
  store i64 1, i64* %29, align 8
  br label %bb20

bb7:                                              ; preds = %bb5
  %30 = load i8** %spec_addr, align 8
  %31 = load i64** %block_size_addr, align 8
  %32 = call i32 @xstrtoumax(i8* %30, i8** %ptr, i32 0, i64* %31, i8* getelementptr inbounds ([18 x i8]* @.str9155, i64 0, i64 0)) nounwind
  store i32 %32, i32* %e, align 4
  %33 = load i32* %e, align 4
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %bb8, label %bb18

bb8:                                              ; preds = %bb7
  %35 = load i32** %options_addr, align 8
  store i32 0, i32* %35, align 4
  %36 = load i32* %e, align 4
  store i32 %36, i32* %0, align 4
  br label %bb21

bb10:                                             ; preds = %bb19, %bb18
  %37 = load i8** %ptr, align 8
  %38 = load i8** %spec_addr, align 8
  %39 = icmp eq i8* %38, %37
  br i1 %39, label %bb11, label %bb17

bb11:                                             ; preds = %bb10
  %40 = load i32* %opts, align 4
  %41 = or i32 %40, 128
  store i32 %41, i32* %opts, align 4
  %42 = load i8** %ptr, align 8
  %43 = getelementptr inbounds i8* %42, i64 -1
  %44 = load i8* %43, align 1
  %45 = icmp eq i8 %44, 66
  br i1 %45, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %46 = load i32* %opts, align 4
  %47 = or i32 %46, 256
  store i32 %47, i32* %opts, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %48 = load i8** %ptr, align 8
  %49 = getelementptr inbounds i8* %48, i64 -1
  %50 = load i8* %49, align 1
  %51 = icmp ne i8 %50, 66
  br i1 %51, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  %52 = load i8** %ptr, align 8
  %53 = getelementptr inbounds i8* %52, i64 -2
  %54 = load i8* %53, align 1
  %55 = icmp eq i8 %54, 105
  br i1 %55, label %bb15, label %bb20

bb15:                                             ; preds = %bb14, %bb13
  %56 = load i32* %opts, align 4
  %57 = or i32 %56, 32
  store i32 %57, i32* %opts, align 4
  br label %bb20

bb17:                                             ; preds = %bb10
  %58 = load i8** %spec_addr, align 8
  %59 = getelementptr inbounds i8* %58, i64 1
  store i8* %59, i8** %spec_addr, align 8
  br label %bb18

bb18:                                             ; preds = %bb7, %bb17
  %60 = load i8** %spec_addr, align 8
  %61 = load i8* %60, align 1
  %62 = icmp sle i8 %61, 47
  br i1 %62, label %bb10, label %bb19

bb19:                                             ; preds = %bb18
  %63 = load i8** %spec_addr, align 8
  %64 = load i8* %63, align 1
  %65 = icmp sgt i8 %64, 57
  br i1 %65, label %bb10, label %bb20

bb20:                                             ; preds = %bb14, %bb15, %bb19, %bb6, %bb2
  %66 = load i32** %options_addr, align 8
  %67 = load i32* %opts, align 4
  store i32 %67, i32* %66, align 4
  store i32 0, i32* %0, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb8
  %68 = load i32* %0, align 4
  store i32 %68, i32* %retval, align 4
  %retval22 = load i32* %retval
  ret i32 %retval22
}

define i32 @human_options(i8* %spec, i32* %opts, i64* %block_size) nounwind {
entry:
  %spec_addr = alloca i8*, align 8
  %opts_addr = alloca i32*, align 8
  %block_size_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %spec, i8** %spec_addr
  store i32* %opts, i32** %opts_addr
  store i64* %block_size, i64** %block_size_addr
  %1 = load i8** %spec_addr, align 8
  %2 = load i64** %block_size_addr, align 8
  %3 = load i32** %opts_addr, align 8
  %4 = call i32 @humblock(i8* %1, i64* %2, i32* %3) nounwind
  store i32 %4, i32* %e, align 4
  %5 = load i64** %block_size_addr, align 8
  %6 = load i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = call i64 @default_block_size() nounwind
  %9 = load i64** %block_size_addr, align 8
  store i64 %8, i64* %9, align 8
  store i32 4, i32* %e, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %10 = load i32* %e, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define i8* @umaxtostr(i64 %i, i8* %buf) nounwind {
entry:
  %i_addr = alloca i64, align 8
  %buf_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %i, i64* %i_addr
  store i8* %buf, i8** %buf_addr
  %1 = load i8** %buf_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 20
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  store i8 0, i8* %3, align 1
  br label %bb

bb:                                               ; preds = %klee_div_zero_check.exit3, %entry
  %4 = load i8** %p, align 8
  %5 = getelementptr inbounds i8* %4, i64 -1
  store i8* %5, i8** %p, align 8
  %6 = load i64* %i_addr, align 8
  %int_cast_to_i64 = bitcast i64 10 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %6, 10
  %10 = trunc i64 %9 to i8
  %11 = add i8 %10, 48
  %12 = load i8** %p, align 8
  store i8 %11, i8* %12, align 1
  %13 = load i64* %i_addr, align 8
  %int_cast_to_i641 = bitcast i64 10 to i64
  %14 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %15 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %15, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %16 = udiv i64 %13, 10
  store i64 %16, i64* %i_addr, align 8
  %17 = load i64* %i_addr, align 8
  %18 = icmp ne i64 %17, 0
  br i1 %18, label %bb, label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit3
  %19 = load i8** %p, align 8
  store i8* %19, i8** %0, align 8
  %20 = load i8** %0, align 8
  store i8* %20, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define internal zeroext i8 @wc_ensure_printable(i32* %wchars) nounwind {
entry:
  %wchars_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %replaced = alloca i8
  %wc = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* %wchars, i32** %wchars_addr
  store i8 0, i8* %replaced, align 1
  %1 = load i32** %wchars_addr, align 8
  store i32* %1, i32** %wc, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %2 = load i32** %wc, align 8
  %3 = load i32* %2, align 4
  %4 = call i32 @iswprint(i32 %3) nounwind readonly
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %6 = load i32** %wc, align 8
  store i32 65533, i32* %6, align 4
  store i8 1, i8* %replaced, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i32** %wc, align 8
  %8 = getelementptr inbounds i32* %7, i64 1
  store i32* %8, i32** %wc, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %9 = load i32** %wc, align 8
  %10 = load i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  %12 = load i8* %replaced, align 1
  %13 = zext i8 %12 to i32
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define internal i64 @wc_truncate(i32* %wc, i64 %width) nounwind {
entry:
  %wc_addr = alloca i32*, align 8
  %width_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %cells = alloca i64
  %next_cells = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %wc, i32** %wc_addr
  store i64 %width, i64* %width_addr
  store i64 0, i64* %cells, align 8
  store i32 0, i32* %next_cells, align 4
  br label %bb4

bb:                                               ; preds = %bb4
  %1 = load i32** %wc_addr, align 8
  %2 = load i32* %1, align 4
  %3 = call i32 @wcwidth(i32 %2) nounwind
  store i32 %3, i32* %next_cells, align 4
  %4 = load i32* %next_cells, align 4
  %5 = icmp eq i32 %4, -1
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %6 = load i32** %wc_addr, align 8
  store i32 65533, i32* %6, align 4
  store i32 1, i32* %next_cells, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i32* %next_cells, align 4
  %8 = sext i32 %7 to i64
  %9 = load i64* %cells, align 8
  %10 = add i64 %8, %9
  %11 = load i64* %width_addr, align 8
  %12 = icmp ugt i64 %10, %11
  br i1 %12, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %13 = load i32* %next_cells, align 4
  %14 = sext i32 %13 to i64
  %15 = load i64* %cells, align 8
  %16 = add i64 %14, %15
  store i64 %16, i64* %cells, align 8
  %17 = load i32** %wc_addr, align 8
  %18 = getelementptr inbounds i32* %17, i64 1
  store i32* %18, i32** %wc_addr, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %entry
  %19 = load i32** %wc_addr, align 8
  %20 = load i32* %19, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb, label %bb5

bb5:                                              ; preds = %bb4, %bb2
  %22 = load i32** %wc_addr, align 8
  store i32 0, i32* %22, align 4
  %23 = load i64* %cells, align 8
  store i64 %23, i64* %0, align 8
  %24 = load i64* %0, align 8
  store i64 %24, i64* %retval, align 8
  %retval6 = load i64* %retval
  ret i64 %retval6
}

define internal i8* @mbs_align_pad(i8* %dest, i8* %dest_end, i64 %n_spaces) nounwind {
entry:
  %dest_addr = alloca i8*, align 8
  %dest_end_addr = alloca i8*, align 8
  %n_spaces_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dest, i8** %dest_addr
  store i8* %dest_end, i8** %dest_end_addr
  store i64 %n_spaces, i64* %n_spaces_addr
  br label %bb1

bb:                                               ; preds = %bb2
  %1 = load i8** %dest_addr, align 8
  store i8 32, i8* %1, align 1
  %2 = load i8** %dest_addr, align 8
  %3 = getelementptr inbounds i8* %2, i64 1
  store i8* %3, i8** %dest_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i64* %n_spaces_addr, align 8
  %5 = sub i64 %4, 1
  store i64 %5, i64* %n_spaces_addr, align 8
  %6 = load i64* %n_spaces_addr, align 8
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %8 = load i8** %dest_addr, align 8
  %9 = load i8** %dest_end_addr, align 8
  %10 = icmp ult i8* %8, %9
  br i1 %10, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %dest_addr, align 8
  store i8 0, i8* %11, align 1
  %12 = load i8** %dest_addr, align 8
  store i8* %12, i8** %0, align 8
  %13 = load i8** %0, align 8
  store i8* %13, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define i64 @mbsalign(i8* %src, i8* %dest, i64 %dest_size, i64* %width, i32 %align, i32 %flags) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %dest_addr = alloca i8*, align 8
  %dest_size_addr = alloca i64, align 8
  %width_addr = alloca i64*, align 8
  %align_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %ret = alloca i64
  %src_size = alloca i64
  %newstr = alloca i8*
  %str_wc = alloca i32*
  %str_to_print = alloca i8*
  %n_cols = alloca i64
  %n_used_bytes = alloca i64
  %n_spaces = alloca i64
  %conversion = alloca i8
  %wc_enabled = alloca i8
  %src_chars = alloca i64
  %start_spaces = alloca i64
  %end_spaces = alloca i64
  %space_left = alloca i64
  %dest_end = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %dest, i8** %dest_addr
  store i64 %dest_size, i64* %dest_size_addr
  store i64* %width, i64** %width_addr
  store i32 %align, i32* %align_addr
  store i32 %flags, i32* %flags_addr
  store i64 -1, i64* %ret, align 8
  %1 = load i8** %src_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = add i64 %2, 1
  store i64 %3, i64* %src_size, align 8
  store i8* null, i8** %newstr, align 8
  store i32* null, i32** %str_wc, align 8
  %4 = load i8** %src_addr, align 8
  store i8* %4, i8** %str_to_print, align 8
  %5 = load i64* %src_size, align 8
  %6 = sub i64 %5, 1
  store i64 %6, i64* %n_cols, align 8
  %7 = load i64* %n_cols, align 8
  store i64 %7, i64* %n_used_bytes, align 8
  store i64 0, i64* %n_spaces, align 8
  store i8 0, i8* %conversion, align 1
  store i8 0, i8* %wc_enabled, align 1
  %8 = load i32* %flags_addr, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb, label %bb8

bb:                                               ; preds = %entry
  %11 = call i64 @_stdlib_mb_cur_max() nounwind
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %13 = load i8** %src_addr, align 8
  %14 = call i64 @mbstowcs(i32* noalias null, i8* noalias %13, i64 0) nounwind
  store i64 %14, i64* %src_chars, align 8
  %15 = load i64* %src_chars, align 8
  %16 = icmp eq i64 %15, -1
  br i1 %16, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %17 = load i32* %flags_addr, align 4
  %18 = and i32 %17, 1
  %19 = trunc i32 %18 to i8
  %toBool = icmp ne i8 %19, 0
  br i1 %toBool, label %mbsalign_unibyte, label %mbsalign_cleanup

bb3:                                              ; preds = %bb1
  %20 = load i64* %src_chars, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %src_chars, align 8
  %22 = load i64* %src_chars, align 8
  %23 = mul i64 %22, 4
  %24 = call noalias i8* @malloc(i64 %23) nounwind
  %25 = bitcast i8* %24 to i32*
  store i32* %25, i32** %str_wc, align 8
  %26 = load i32** %str_wc, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %bb4, label %bb6

bb4:                                              ; preds = %bb3
  %28 = load i32* %flags_addr, align 4
  %29 = and i32 %28, 1
  %30 = trunc i32 %29 to i8
  %toBool5 = icmp ne i8 %30, 0
  br i1 %toBool5, label %mbsalign_unibyte, label %mbsalign_cleanup

bb6:                                              ; preds = %bb3
  %31 = load i32** %str_wc, align 8
  %32 = load i8** %src_addr, align 8
  %33 = load i64* %src_chars, align 8
  %34 = call i64 @mbstowcs(i32* noalias %31, i8* noalias %32, i64 %33) nounwind
  %35 = icmp ne i64 %34, 0
  br i1 %35, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %36 = load i64* %src_chars, align 8
  %37 = sub i64 %36, 1
  %38 = load i32** %str_wc, align 8
  %39 = getelementptr inbounds i32* %38, i64 %37
  store i32 0, i32* %39, align 1
  store i8 1, i8* %wc_enabled, align 1
  %40 = load i32** %str_wc, align 8
  %41 = call zeroext i8 @wc_ensure_printable(i32* %40) nounwind
  store i8 %41, i8* %conversion, align 1
  %42 = load i32** %str_wc, align 8
  %43 = load i64* %src_chars, align 8
  %44 = call i32 @wcswidth(i32* %42, i64 %43) nounwind
  %45 = sext i32 %44 to i64
  store i64 %45, i64* %n_cols, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb, %entry
  %46 = load i8* %wc_enabled, align 1
  %toBool9 = icmp ne i8 %46, 0
  br i1 %toBool9, label %bb10, label %mbsalign_unibyte

bb10:                                             ; preds = %bb8
  %47 = load i8* %conversion, align 1
  %toBool11 = icmp ne i8 %47, 0
  br i1 %toBool11, label %bb13, label %bb12

bb12:                                             ; preds = %bb10
  %48 = load i64** %width_addr, align 8
  %49 = load i64* %48, align 8
  %50 = load i64* %n_cols, align 8
  %51 = icmp ult i64 %49, %50
  br i1 %51, label %bb13, label %mbsalign_unibyte

bb13:                                             ; preds = %bb12, %bb10
  %52 = load i8* %conversion, align 1
  %toBool14 = icmp ne i8 %52, 0
  br i1 %toBool14, label %bb15, label %bb16

bb15:                                             ; preds = %bb13
  %53 = load i32** %str_wc, align 8
  %54 = call i64 @wcstombs(i8* noalias null, i32* noalias %53, i64 0) nounwind
  %55 = add i64 %54, 1
  store i64 %55, i64* %src_size, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb13
  %56 = load i64* %src_size, align 8
  %57 = call noalias i8* @malloc(i64 %56) nounwind
  store i8* %57, i8** %newstr, align 8
  %58 = load i8** %newstr, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %bb17, label %bb19

bb17:                                             ; preds = %bb16
  %60 = load i32* %flags_addr, align 4
  %61 = and i32 %60, 1
  %62 = trunc i32 %61 to i8
  %toBool18 = icmp ne i8 %62, 0
  br i1 %toBool18, label %mbsalign_unibyte, label %mbsalign_cleanup

bb19:                                             ; preds = %bb16
  %63 = load i8** %newstr, align 8
  store i8* %63, i8** %str_to_print, align 8
  %64 = load i64** %width_addr, align 8
  %65 = load i64* %64, align 8
  %66 = load i32** %str_wc, align 8
  %67 = call i64 @wc_truncate(i32* %66, i64 %65) nounwind
  store i64 %67, i64* %n_cols, align 8
  %68 = load i8** %newstr, align 8
  %69 = load i32** %str_wc, align 8
  %70 = load i64* %src_size, align 8
  %71 = call i64 @wcstombs(i8* noalias %68, i32* noalias %69, i64 %70) nounwind
  store i64 %71, i64* %n_used_bytes, align 8
  br label %mbsalign_unibyte

mbsalign_unibyte:                                 ; preds = %bb19, %bb17, %bb12, %bb8, %bb4, %bb2
  %72 = load i64** %width_addr, align 8
  %73 = load i64* %72, align 8
  %74 = load i64* %n_cols, align 8
  %75 = icmp ult i64 %73, %74
  br i1 %75, label %bb20, label %bb21

bb20:                                             ; preds = %mbsalign_unibyte
  %76 = load i64** %width_addr, align 8
  %77 = load i64* %76, align 8
  store i64 %77, i64* %n_cols, align 8
  %78 = load i64* %n_cols, align 8
  store i64 %78, i64* %n_used_bytes, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %mbsalign_unibyte
  %79 = load i64** %width_addr, align 8
  %80 = load i64* %79, align 8
  %81 = load i64* %n_cols, align 8
  %82 = icmp ugt i64 %80, %81
  br i1 %82, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %83 = load i64** %width_addr, align 8
  %84 = load i64* %83, align 8
  %85 = load i64* %n_cols, align 8
  %86 = sub i64 %84, %85
  store i64 %86, i64* %n_spaces, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21
  %87 = load i64** %width_addr, align 8
  %88 = load i64* %n_cols, align 8
  store i64 %88, i64* %87, align 8
  %89 = load i32* %align_addr, align 4
  switch i32 %89, label %bb26 [
    i32 0, label %bb24
    i32 1, label %bb25
  ]

bb24:                                             ; preds = %bb23
  store i64 0, i64* %start_spaces, align 8
  %90 = load i64* %n_spaces, align 8
  store i64 %90, i64* %end_spaces, align 8
  br label %bb27

bb25:                                             ; preds = %bb23
  %91 = load i64* %n_spaces, align 8
  store i64 %91, i64* %start_spaces, align 8
  store i64 0, i64* %end_spaces, align 8
  br label %bb27

bb26:                                             ; preds = %bb23
  %92 = load i64* %n_spaces, align 8
  %int_cast_to_i64 = bitcast i64 2 to i64
  %93 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %94 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %94, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb26
  call void @klee_disable_symbex() nounwind
  %95 = udiv i64 %92, 2
  %96 = load i64* %n_spaces, align 8
  %97 = and i64 %96, 1
  %98 = add i64 %95, %97
  store i64 %98, i64* %start_spaces, align 8
  %99 = load i64* %n_spaces, align 8
  %int_cast_to_i641 = bitcast i64 2 to i64
  %100 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %101 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %101, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %102 = udiv i64 %99, 2
  store i64 %102, i64* %end_spaces, align 8
  br label %bb27

bb27:                                             ; preds = %klee_div_zero_check.exit3, %bb25, %bb24
  %103 = load i32* %flags_addr, align 4
  %104 = and i32 %103, 4
  %105 = icmp ne i32 %104, 0
  br i1 %105, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  store i64 0, i64* %start_spaces, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %106 = load i32* %flags_addr, align 4
  %107 = and i32 %106, 8
  %108 = icmp ne i32 %107, 0
  br i1 %108, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  store i64 0, i64* %end_spaces, align 8
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %109 = load i64* %dest_size_addr, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %bb32, label %bb34

bb32:                                             ; preds = %bb31
  %111 = load i8** %dest_addr, align 8
  %112 = load i64* %dest_size_addr, align 8
  %113 = getelementptr inbounds i8* %111, i64 %112
  %114 = getelementptr inbounds i8* %113, i64 -1
  store i8* %114, i8** %dest_end, align 8
  %115 = load i8** %dest_addr, align 8
  %116 = load i8** %dest_end, align 8
  %117 = load i64* %start_spaces, align 8
  %118 = call i8* @mbs_align_pad(i8* %115, i8* %116, i64 %117) nounwind
  store i8* %118, i8** %dest_addr, align 8
  %119 = load i8** %dest_end, align 8
  %120 = ptrtoint i8* %119 to i64
  %121 = load i8** %dest_addr, align 8
  %122 = ptrtoint i8* %121 to i64
  %123 = sub nsw i64 %120, %122
  store i64 %123, i64* %space_left, align 8
  %124 = load i64* %space_left, align 8
  %125 = load i64* %n_used_bytes, align 8
  %126 = icmp ule i64 %124, %125
  %min = select i1 %126, i64 %124, i64 %125
  %127 = load i8** %dest_addr, align 8
  %128 = load i8** %str_to_print, align 8
  %129 = call i8* @mempcpy(i8* noalias %127, i8* noalias %128, i64 %min) nounwind
  store i8* %129, i8** %dest_addr, align 8
  %130 = load i8** %dest_addr, align 8
  %131 = load i8** %dest_end, align 8
  %132 = load i64* %end_spaces, align 8
  %133 = call i8* @mbs_align_pad(i8* %130, i8* %131, i64 %132) nounwind
  br label %bb34

bb34:                                             ; preds = %bb32, %bb31
  %134 = load i64* %start_spaces, align 8
  %135 = load i64* %end_spaces, align 8
  %136 = add i64 %134, %135
  %137 = load i64* %n_used_bytes, align 8
  %138 = add i64 %136, %137
  store i64 %138, i64* %ret, align 8
  br label %mbsalign_cleanup

mbsalign_cleanup:                                 ; preds = %bb34, %bb17, %bb4, %bb2
  %139 = load i32** %str_wc, align 8
  %140 = bitcast i32* %139 to i8*
  call void @free(i8* %140) nounwind
  %141 = load i8** %newstr, align 8
  call void @free(i8* %141) nounwind
  %142 = load i64* %ret, align 8
  store i64 %142, i64* %0, align 8
  %143 = load i64* %0, align 8
  store i64 %143, i64* %retval, align 8
  %retval35 = load i64* %retval
  ret i64 %retval35
}

define i8* @ambsalign(i8* %src, i64* %width, i32 %align, i32 %flags) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %width_addr = alloca i64*, align 8
  %align_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %orig_width = alloca i64
  %size = alloca i64
  %req = alloca i64
  %buf = alloca i8*
  %nbuf = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64* %width, i64** %width_addr
  store i32 %align, i32* %align_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i64** %width_addr, align 8
  %2 = load i64* %1, align 8
  store i64 %2, i64* %orig_width, align 8
  %3 = load i64** %width_addr, align 8
  %4 = load i64* %3, align 8
  store i64 %4, i64* %size, align 8
  %5 = load i64* %size, align 8
  store i64 %5, i64* %req, align 8
  store i8* null, i8** %buf, align 8
  br label %bb4

bb:                                               ; preds = %bb4
  %6 = load i64* %req, align 8
  %7 = add i64 %6, 1
  store i64 %7, i64* %size, align 8
  %8 = load i8** %buf, align 8
  %9 = load i64* %size, align 8
  %10 = call i8* @realloc(i8* %8, i64 %9) nounwind
  store i8* %10, i8** %nbuf, align 8
  %11 = load i8** %nbuf, align 8
  %12 = icmp eq i8* %11, null
  br i1 %12, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %13 = load i8** %buf, align 8
  call void @free(i8* %13) nounwind
  store i8* null, i8** %buf, align 8
  br label %bb5

bb2:                                              ; preds = %bb
  %14 = load i8** %nbuf, align 8
  store i8* %14, i8** %buf, align 8
  %15 = load i64** %width_addr, align 8
  %16 = load i64* %orig_width, align 8
  store i64 %16, i64* %15, align 8
  %17 = load i8** %src_addr, align 8
  %18 = load i8** %buf, align 8
  %19 = load i64* %size, align 8
  %20 = load i64** %width_addr, align 8
  %21 = load i32* %align_addr, align 4
  %22 = load i32* %flags_addr, align 4
  %23 = call i64 @mbsalign(i8* %17, i8* %18, i64 %19, i64* %20, i32 %21, i32 %22) nounwind
  store i64 %23, i64* %req, align 8
  %24 = load i64* %req, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %26 = load i8** %buf, align 8
  call void @free(i8* %26) nounwind
  store i8* null, i8** %buf, align 8
  br label %bb5

bb4:                                              ; preds = %bb2, %entry
  %27 = load i64* %req, align 8
  %28 = load i64* %size, align 8
  %29 = icmp uge i64 %27, %28
  br i1 %29, label %bb, label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb1
  %30 = load i8** %buf, align 8
  store i8* %30, i8** %0, align 8
  %31 = load i8** %0, align 8
  store i8* %31, i8** %retval, align 8
  %retval6 = load i8** %retval
  ret i8* %retval6
}

declare i8* @realloc(i8*, i64) nounwind

define i32 @gnu_mbswidth(i8* %string, i32 %flags) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i8** %string_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = load i8** %string_addr, align 8
  %4 = load i32* %flags_addr, align 4
  %5 = call i32 @mbsnwidth(i8* %3, i64 %2, i32 %4) nounwind
  store i32 %5, i32* %0, align 4
  %6 = load i32* %0, align 4
  store i32 %6, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @mbsnwidth(i8* %string, i64 %nbytes, i32 %flags) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %nbytes_addr = alloca i64, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %plimit = alloca i8*
  %width = alloca i32
  %mbstate = alloca %struct.mbstate_t
  %wc = alloca i32
  %bytes = alloca i64
  %w = alloca i32
  %c = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %nbytes, i64* %nbytes_addr
  store i32 %flags, i32* %flags_addr
  %1 = load i8** %string_addr, align 8
  store i8* %1, i8** %p, align 8
  %2 = load i8** %p, align 8
  %3 = load i64* %nbytes_addr, align 8
  %4 = getelementptr inbounds i8* %2, i64 %3
  store i8* %4, i8** %plimit, align 8
  store i32 0, i32* %width, align 4
  %5 = call i64 @_stdlib_mb_cur_max() nounwind
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %bb25, label %bb37

bb1:                                              ; preds = %bb25
  %7 = load i8** %p, align 8
  %8 = load i8* %7, align 1
  %9 = sext i8 %8 to i32
  switch i32 %9, label %bb3 [
    i32 32, label %bb2
    i32 33, label %bb2
    i32 34, label %bb2
    i32 35, label %bb2
    i32 37, label %bb2
    i32 38, label %bb2
    i32 39, label %bb2
    i32 40, label %bb2
    i32 41, label %bb2
    i32 42, label %bb2
    i32 43, label %bb2
    i32 44, label %bb2
    i32 45, label %bb2
    i32 46, label %bb2
    i32 47, label %bb2
    i32 48, label %bb2
    i32 49, label %bb2
    i32 50, label %bb2
    i32 51, label %bb2
    i32 52, label %bb2
    i32 53, label %bb2
    i32 54, label %bb2
    i32 55, label %bb2
    i32 56, label %bb2
    i32 57, label %bb2
    i32 58, label %bb2
    i32 59, label %bb2
    i32 60, label %bb2
    i32 61, label %bb2
    i32 62, label %bb2
    i32 63, label %bb2
    i32 65, label %bb2
    i32 66, label %bb2
    i32 67, label %bb2
    i32 68, label %bb2
    i32 69, label %bb2
    i32 70, label %bb2
    i32 71, label %bb2
    i32 72, label %bb2
    i32 73, label %bb2
    i32 74, label %bb2
    i32 75, label %bb2
    i32 76, label %bb2
    i32 77, label %bb2
    i32 78, label %bb2
    i32 79, label %bb2
    i32 80, label %bb2
    i32 81, label %bb2
    i32 82, label %bb2
    i32 83, label %bb2
    i32 84, label %bb2
    i32 85, label %bb2
    i32 86, label %bb2
    i32 87, label %bb2
    i32 88, label %bb2
    i32 89, label %bb2
    i32 90, label %bb2
    i32 91, label %bb2
    i32 92, label %bb2
    i32 93, label %bb2
    i32 94, label %bb2
    i32 95, label %bb2
    i32 97, label %bb2
    i32 98, label %bb2
    i32 99, label %bb2
    i32 100, label %bb2
    i32 101, label %bb2
    i32 102, label %bb2
    i32 103, label %bb2
    i32 104, label %bb2
    i32 105, label %bb2
    i32 106, label %bb2
    i32 107, label %bb2
    i32 108, label %bb2
    i32 109, label %bb2
    i32 110, label %bb2
    i32 111, label %bb2
    i32 112, label %bb2
    i32 113, label %bb2
    i32 114, label %bb2
    i32 115, label %bb2
    i32 116, label %bb2
    i32 117, label %bb2
    i32 118, label %bb2
    i32 119, label %bb2
    i32 120, label %bb2
    i32 121, label %bb2
    i32 122, label %bb2
    i32 123, label %bb2
    i32 124, label %bb2
    i32 125, label %bb2
    i32 126, label %bb2
  ]

bb2:                                              ; preds = %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %bb1, %b
  %10 = load i8** %p, align 8
  %11 = getelementptr inbounds i8* %10, i64 1
  store i8* %11, i8** %p, align 8
  %12 = load i32* %width, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* %width, align 4
  br label %bb25

bb3:                                              ; preds = %bb1
  %mbstate4 = bitcast %struct.mbstate_t* %mbstate to i8*
  %14 = call i8* @memset(i8* %mbstate4, i32 0, i64 8)
  br label %bb5

bb5:                                              ; preds = %bb24, %bb3
  %15 = load i8** %plimit, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = load i8** %p, align 8
  %18 = ptrtoint i8* %17 to i64
  %19 = sub nsw i64 %16, %18
  %20 = load i8** %p, align 8
  %21 = call i64 @rpl_mbrtowc(i32* %wc, i8* %20, i64 %19, %struct.mbstate_t* %mbstate) nounwind
  store i64 %21, i64* %bytes, align 8
  %22 = load i64* %bytes, align 8
  %23 = icmp eq i64 %22, -1
  br i1 %23, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %24 = load i32* %flags_addr, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %p, align 8
  %28 = getelementptr inbounds i8* %27, i64 1
  store i8* %28, i8** %p, align 8
  %29 = load i32* %width, align 4
  %30 = add nsw i32 %29, 1
  store i32 %30, i32* %width, align 4
  br label %bb25

bb8:                                              ; preds = %bb6
  store i32 -1, i32* %0, align 4
  br label %bb39

bb9:                                              ; preds = %bb5
  %31 = load i64* %bytes, align 8
  %32 = icmp eq i64 %31, -2
  br i1 %32, label %bb10, label %bb13

bb10:                                             ; preds = %bb9
  %33 = load i32* %flags_addr, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %36 = load i8** %plimit, align 8
  store i8* %36, i8** %p, align 8
  %37 = load i32* %width, align 4
  %38 = add nsw i32 %37, 1
  store i32 %38, i32* %width, align 4
  br label %bb25

bb12:                                             ; preds = %bb10
  store i32 -1, i32* %0, align 4
  br label %bb39

bb13:                                             ; preds = %bb9
  %39 = load i64* %bytes, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i64 1, i64* %bytes, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %41 = load i32* %wc, align 4
  %42 = call i32 @wcwidth(i32 %41) nounwind
  store i32 %42, i32* %w, align 4
  %43 = load i32* %w, align 4
  %44 = icmp sge i32 %43, 0
  br i1 %44, label %bb16, label %bb18

bb16:                                             ; preds = %bb15
  %45 = load i32* %width, align 4
  %46 = sub nsw i32 2147483647, %45
  %47 = load i32* %w, align 4
  %48 = icmp slt i32 %46, %47
  br i1 %48, label %overflow, label %bb17

bb17:                                             ; preds = %bb16
  %49 = load i32* %width, align 4
  %50 = load i32* %w, align 4
  %51 = add nsw i32 %49, %50
  store i32 %51, i32* %width, align 4
  br label %bb24

bb18:                                             ; preds = %bb15
  %52 = load i32* %flags_addr, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %bb19, label %bb23

bb19:                                             ; preds = %bb18
  %55 = load i32* %wc, align 4
  %56 = call i32 @iswcntrl(i32 %55) nounwind readonly
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %bb20, label %bb24

bb20:                                             ; preds = %bb19
  %58 = load i32* %width, align 4
  %59 = icmp eq i32 %58, 2147483647
  br i1 %59, label %overflow, label %bb21

bb21:                                             ; preds = %bb20
  %60 = load i32* %width, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %width, align 4
  br label %bb24

bb23:                                             ; preds = %bb18
  store i32 -1, i32* %0, align 4
  br label %bb39

bb24:                                             ; preds = %bb19, %bb21, %bb17
  %62 = load i8** %p, align 8
  %63 = load i64* %bytes, align 8
  %64 = getelementptr inbounds i8* %62, i64 %63
  store i8* %64, i8** %p, align 8
  %65 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %mbstate) nounwind readonly
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb5, label %bb25

bb25:                                             ; preds = %entry, %bb24, %bb11, %bb7, %bb2
  %67 = load i8** %p, align 8
  %68 = load i8** %plimit, align 8
  %69 = icmp ult i8* %67, %68
  br i1 %69, label %bb1, label %bb26

bb26:                                             ; preds = %bb25
  %70 = load i32* %width, align 4
  store i32 %70, i32* %0, align 4
  br label %bb39

bb28:                                             ; preds = %bb37
  %71 = load i8** %p, align 8
  %72 = load i8* %71, align 1
  store i8 %72, i8* %c, align 1
  %73 = load i8** %p, align 8
  %74 = getelementptr inbounds i8* %73, i64 1
  store i8* %74, i8** %p, align 8
  %75 = call i16** @__ctype_b_loc() nounwind readnone
  %76 = load i16** %75, align 8
  %77 = load i8* %c, align 1
  %78 = zext i8 %77 to i32
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i16* %76, i64 %79
  %81 = load i16* %80, align 1
  %82 = zext i16 %81 to i32
  %83 = and i32 %82, 16384
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %bb29, label %bb31

bb29:                                             ; preds = %bb28
  %85 = load i32* %width, align 4
  %86 = icmp eq i32 %85, 2147483647
  br i1 %86, label %overflow, label %bb30

bb30:                                             ; preds = %bb29
  %87 = load i32* %width, align 4
  %88 = add nsw i32 %87, 1
  store i32 %88, i32* %width, align 4
  br label %bb37

bb31:                                             ; preds = %bb28
  %89 = load i32* %flags_addr, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %bb32, label %bb36

bb32:                                             ; preds = %bb31
  %92 = call i16** @__ctype_b_loc() nounwind readnone
  %93 = load i16** %92, align 8
  %94 = load i8* %c, align 1
  %95 = zext i8 %94 to i32
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds i16* %93, i64 %96
  %98 = load i16* %97, align 1
  %99 = zext i16 %98 to i32
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %bb33, label %bb37

bb33:                                             ; preds = %bb32
  %102 = load i32* %width, align 4
  %103 = icmp eq i32 %102, 2147483647
  br i1 %103, label %overflow, label %bb34

bb34:                                             ; preds = %bb33
  %104 = load i32* %width, align 4
  %105 = add nsw i32 %104, 1
  store i32 %105, i32* %width, align 4
  br label %bb37

bb36:                                             ; preds = %bb31
  store i32 -1, i32* %0, align 4
  br label %bb39

bb37:                                             ; preds = %bb32, %bb34, %entry, %bb30
  %106 = load i8** %p, align 8
  %107 = load i8** %plimit, align 8
  %108 = icmp ult i8* %106, %107
  br i1 %108, label %bb28, label %bb38

bb38:                                             ; preds = %bb37
  %109 = load i32* %width, align 4
  store i32 %109, i32* %0, align 4
  br label %bb39

overflow:                                         ; preds = %bb33, %bb29, %bb20, %bb16
  store i32 2147483647, i32* %0, align 4
  br label %bb39

bb39:                                             ; preds = %overflow, %bb38, %bb36, %bb26, %bb23, %bb12, %bb8
  %110 = load i32* %0, align 4
  store i32 %110, i32* %retval, align 4
  %retval40 = load i32* %retval
  ret i32 %retval40
}

declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) nounwind

define void @set_program_name(i8* %argv0) nounwind {
entry:
  %argv0_addr = alloca i8*, align 8
  %iftmp.2 = alloca i8*
  %slash = alloca i8*
  %base = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %argv0, i8** %argv0_addr
  %0 = load i8** %argv0_addr, align 8
  %1 = icmp eq i8* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %3 = bitcast %struct.FILE* %2 to i8*
  %4 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([56 x i8]* @.str162, i64 0, i64 0), i64 1, i64 55, i8* %3) nounwind
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %argv0_addr, align 8
  %6 = call i8* @strrchr(i8* %5, i32 47) nounwind readonly
  store i8* %6, i8** %slash, align 8
  %7 = load i8** %slash, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %9 = load i8** %slash, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %iftmp.2, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %11 = load i8** %argv0_addr, align 8
  store i8* %11, i8** %iftmp.2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %12 = load i8** %iftmp.2, align 8
  store i8* %12, i8** %base, align 8
  %13 = load i8** %base, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = load i8** %argv0_addr, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = sub nsw i64 %14, %16
  %18 = icmp sgt i64 %17, 6
  br i1 %18, label %bb5, label %bb8

bb5:                                              ; preds = %bb4
  %19 = load i8** %base, align 8
  %20 = getelementptr inbounds i8* %19, i64 -7
  %21 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([8 x i8]* @.str1163, i64 0, i64 0), i64 7) nounwind readonly
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = load i8** %base, align 8
  store i8* %23, i8** %argv0_addr, align 8
  %24 = load i8** %base, align 8
  %25 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([4 x i8]* @.str2164, i64 0, i64 0), i64 3) nounwind readonly
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %base, align 8
  %28 = getelementptr inbounds i8* %27, i64 3
  store i8* %28, i8** %argv0_addr, align 8
  %29 = load i8** %argv0_addr, align 8
  store i8* %29, i8** @program_invocation_short_name, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  %30 = load i8** %argv0_addr, align 8
  store i8* %30, i8** @program_name, align 8
  %31 = load i8** %argv0_addr, align 8
  store i8* %31, i8** @program_invocation_name, align 8
  ret void
}

define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca %struct.quoting_options*
  %0 = alloca %struct.quoting_options*
  %iftmp.16 = alloca %struct.quoting_options*
  %e = alloca i32
  %p = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = icmp ne %struct.quoting_options* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %5, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load %struct.quoting_options** %iftmp.16, align 8
  %7 = bitcast %struct.quoting_options* %6 to i8*
  %8 = call i8* @xmemdup(i8* %7, i64 56) nounwind
  %9 = bitcast i8* %8 to %struct.quoting_options*
  store %struct.quoting_options* %9, %struct.quoting_options** %p, align 8
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %e, align 4
  store i32 %11, i32* %10, align 4
  %12 = load %struct.quoting_options** %p, align 8
  store %struct.quoting_options* %12, %struct.quoting_options** %0, align 8
  %13 = load %struct.quoting_options** %0, align 8
  store %struct.quoting_options* %13, %struct.quoting_options** %retval, align 8
  %retval3 = load %struct.quoting_options** %retval
  ret %struct.quoting_options* %retval3
}

define i32 @get_quoting_style(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i32
  %iftmp.17 = alloca %struct.quoting_options*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.17, align 8
  %5 = getelementptr inbounds %struct.quoting_options* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  store i32 %6, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @set_quoting_style(%struct.quoting_options* %o, i32 %s) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %s_addr = alloca i32, align 4
  %iftmp.18 = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %s, i32* %s_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp ne %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %2, %struct.quoting_options** %iftmp.18, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.18, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %3 = load %struct.quoting_options** %iftmp.18, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 0
  %5 = load i32* %s_addr, align 4
  store i32 %5, i32* %4, align 8
  ret void
}

define i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %c_addr = alloca i8, align 1
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.19 = alloca %struct.quoting_options*
  %uc = alloca i8
  %p = alloca i32*
  %shift = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8 %c, i8* %c_addr
  store i32 %i, i32* %i_addr
  %1 = load i8* %c_addr, align 1
  store i8 %1, i8* %uc, align 1
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = icmp ne %struct.quoting_options* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %iftmp.19, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.19, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %5 = load %struct.quoting_options** %iftmp.19, align 8
  %6 = getelementptr inbounds %struct.quoting_options* %5, i32 0, i32 2
  %7 = getelementptr inbounds [8 x i32]* %6, i64 0, i64 0
  %8 = load i8* %uc, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %11 = udiv i8 %8, 32
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds i32* %7, i64 %12
  store i32* %13, i32** %p, align 8
  %14 = load i8* %uc, align 1
  %15 = zext i8 %14 to i32
  %16 = and i32 %15, 31
  store i32 %16, i32* %shift, align 4
  %17 = load i32** %p, align 8
  %18 = load i32* %17, align 4
  %19 = load i32* %shift, align 4
  %int_cast_to_i641 = zext i32 %19 to i64
  %20 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %20, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %21 = lshr i32 %18, %19
  %22 = and i32 %21, 1
  store i32 %22, i32* %r, align 4
  %23 = load i32** %p, align 8
  %24 = load i32* %23, align 4
  %25 = load i32* %i_addr, align 4
  %26 = and i32 %25, 1
  %27 = load i32* %r, align 4
  %28 = xor i32 %26, %27
  %29 = load i32* %shift, align 4
  %int_cast_to_i642 = zext i32 %29 to i64
  %30 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %30, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %31 = shl i32 %28, %29
  %32 = xor i32 %24, %31
  %33 = load i32** %p, align 8
  store i32 %32, i32* %33, align 4
  %34 = load i32* %r, align 4
  store i32 %34, i32* %0, align 4
  %35 = load i32* %0, align 4
  store i32 %35, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %i, i32* %i_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp eq %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 1
  %5 = load i32* %4, align 4
  store i32 %5, i32* %r, align 4
  %6 = load %struct.quoting_options** %o_addr, align 8
  %7 = getelementptr inbounds %struct.quoting_options* %6, i32 0, i32 1
  %8 = load i32* %i_addr, align 4
  store i32 %8, i32* %7, align 4
  %9 = load i32* %r, align 4
  store i32 %9, i32* %0, align 4
  %10 = load i32* %0, align 4
  store i32 %10, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp eq %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = getelementptr inbounds %struct.quoting_options* %2, i32 0, i32 0
  store i32 10, i32* %3, align 8
  %4 = load i8** %left_quote_addr, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %6 = load i8** %right_quote_addr, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %bb1
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %8 = load %struct.quoting_options** %o_addr, align 8
  %9 = getelementptr inbounds %struct.quoting_options* %8, i32 0, i32 3
  %10 = load i8** %left_quote_addr, align 8
  store i8* %10, i8** %9, align 8
  %11 = load %struct.quoting_options** %o_addr, align 8
  %12 = getelementptr inbounds %struct.quoting_options* %11, i32 0, i32 4
  %13 = load i8** %right_quote_addr, align 8
  store i8* %13, i8** %12, align 8
  ret void
}

define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) nounwind {
entry:
  %style_addr = alloca i32, align 4
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %style, i32* %style_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %0 = call i8* @memset(i8* %o1, i32 0, i64 56)
  %1 = load i32* %style_addr, align 4
  %2 = icmp eq i32 %1, 10
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 0
  %4 = load i32* %style_addr, align 4
  store i32 %4, i32* %3, align 8
  %agg.result3 = bitcast %struct.quoting_options* %agg.result to i8*
  %o4 = bitcast %struct.quoting_options* %o to i8*
  %5 = call i8* @memcpy(i8* %agg.result3, i8* %o4, i64 56)
  ret void
}

define internal i8* @gettext_quote(i8* %msgid, i32 %s) nounwind {
entry:
  %msgid_addr = alloca i8*, align 8
  %s_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.22 = alloca i8*
  %iftmp.21 = alloca i8*
  %iftmp.20 = alloca i8*
  %0 = alloca i8*
  %translation = alloca i8*
  %locale_code = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %msgid, i8** %msgid_addr
  store i32 %s, i32* %s_addr
  %1 = load i8** %msgid_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = load i8** %translation, align 8
  %4 = load i8** %msgid_addr, align 8
  %5 = icmp ne i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %translation, align 8
  store i8* %6, i8** %0, align 8
  br label %bb15

bb1:                                              ; preds = %entry
  %7 = call i8* @locale_charset() nounwind
  store i8* %7, i8** %locale_code, align 8
  %8 = load i8** %locale_code, align 8
  %9 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([6 x i8]* @.str10176, i64 0, i64 0)) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %11 = load i8** %msgid_addr, align 8
  %12 = getelementptr inbounds i8* %11, i64 0
  %13 = load i8* %12, align 1
  %14 = icmp eq i8 %13, 96
  br i1 %14, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str11177, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str12178, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %15 = load i8** %iftmp.20, align 8
  store i8* %15, i8** %0, align 8
  br label %bb15

bb6:                                              ; preds = %bb1
  %16 = load i8** %locale_code, align 8
  %17 = call i32 @c_strcasecmp(i8* %16, i8* getelementptr inbounds ([8 x i8]* @.str13179, i64 0, i64 0)) nounwind readonly
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %19 = load i8** %msgid_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 0
  %21 = load i8* %20, align 1
  %22 = icmp eq i8 %21, 96
  br i1 %22, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([4 x i8]* @.str14180, i64 0, i64 0), i8** %iftmp.21, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([3 x i8]* @.str15181, i64 0, i64 0), i8** %iftmp.21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %23 = load i8** %iftmp.21, align 8
  store i8* %23, i8** %0, align 8
  br label %bb15

bb11:                                             ; preds = %bb6
  %24 = load i32* %s_addr, align 4
  %25 = icmp eq i32 %24, 9
  br i1 %25, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str16182, i64 0, i64 0), i8** %iftmp.22, align 8
  br label %bb14

bb13:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str17183, i64 0, i64 0), i8** %iftmp.22, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %26 = load i8** %iftmp.22, align 8
  store i8* %26, i8** %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb10, %bb5, %bb
  %27 = load i8** %0, align 8
  store i8* %27, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %quoting_style_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %quote_these_too_addr = alloca i32*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.29 = alloca i8
  %iftmp.24 = alloca i8
  %iftmp.23 = alloca i64
  %i = alloca i64
  %len = alloca i64
  %orig_buffersize = alloca i64
  %quote_string = alloca i8*
  %quote_string_len = alloca i64
  %backslash_escapes = alloca i8
  %unibyte_locale = alloca i8
  %elide_outer_quotes = alloca i8
  %pending_shell_escape_end = alloca i8
  %encountered_single_quote = alloca i8
  %all_c_and_shell_quote_compat = alloca i8
  %c = alloca i8
  %esc = alloca i8
  %is_right_quote = alloca i8
  %escaping = alloca i8
  %c_and_shell_quote_compat = alloca i8
  %m = alloca i64
  %printable = alloca i8
  %mbstate = alloca %struct.mbstate_t
  %w = alloca i32
  %bytes = alloca i64
  %j = alloca i64
  %ilim = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i32 %quoting_style, i32* %quoting_style_addr
  store i32 %flags, i32* %flags_addr
  store i32* %quote_these_too, i32** %quote_these_too_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i64 0, i64* %len, align 8
  store i64 0, i64* %orig_buffersize, align 8
  store i8* null, i8** %quote_string, align 8
  store i64 0, i64* %quote_string_len, align 8
  store i8 0, i8* %backslash_escapes, align 1
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp eq i64 %1, 1
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %unibyte_locale, align 1
  %4 = load i32* %flags_addr, align 4
  %5 = and i32 %4, 2
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %elide_outer_quotes, align 1
  store i8 0, i8* %pending_shell_escape_end, align 1
  store i8 0, i8* %encountered_single_quote, align 1
  store i8 1, i8* %all_c_and_shell_quote_compat, align 1
  br label %process_input

process_input:                                    ; preds = %bb328, %entry
  %8 = load i32* %quoting_style_addr, align 4
  switch i32 %8, label %bb41 [
    i32 0, label %bb40
    i32 1, label %bb24
    i32 2, label %bb31
    i32 3, label %bb23
    i32 4, label %bb25
    i32 5, label %bb1
    i32 6, label %bb
    i32 7, label %bb9
    i32 8, label %bb10
    i32 9, label %bb10
    i32 10, label %bb10
  ]

bb:                                               ; preds = %process_input
  store i32 5, i32* %quoting_style_addr, align 4
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb1

bb1:                                              ; preds = %bb, %process_input
  %9 = load i8* %elide_outer_quotes, align 1
  %toBool = icmp ne i8 %9, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb5, label %bb8

bb5:                                              ; preds = %bb1
  %10 = load i64* %len, align 8
  %11 = load i64* %buffersize_addr, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %13 = load i8** %buffer_addr, align 8
  %14 = load i64* %len, align 8
  %15 = getelementptr inbounds i8* %13, i64 %14
  store i8 34, i8* %15, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %16 = load i64* %len, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %len, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  store i8 1, i8* %backslash_escapes, align 1
  store i8* getelementptr inbounds ([2 x i8]* @.str16182, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb42

bb9:                                              ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb42

bb10:                                             ; preds = %process_input, %process_input, %process_input
  %18 = load i32* %quoting_style_addr, align 4
  %19 = icmp ne i32 %18, 10
  br i1 %19, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %20 = load i32* %quoting_style_addr, align 4
  %21 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str18184, i64 0, i64 0), i32 %20) nounwind
  store i8* %21, i8** %left_quote_addr, align 8
  %22 = load i32* %quoting_style_addr, align 4
  %23 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str17183, i64 0, i64 0), i32 %22) nounwind
  store i8* %23, i8** %right_quote_addr, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %24 = load i8* %elide_outer_quotes, align 1
  %toBool13 = icmp ne i8 %24, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb22

bb17:                                             ; preds = %bb12
  %25 = load i8** %left_quote_addr, align 8
  store i8* %25, i8** %quote_string, align 8
  br label %bb21

bb18:                                             ; preds = %bb21
  %26 = load i64* %len, align 8
  %27 = load i64* %buffersize_addr, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %29 = load i8** %quote_string, align 8
  %30 = load i8* %29, align 1
  %31 = load i8** %buffer_addr, align 8
  %32 = load i64* %len, align 8
  %33 = getelementptr inbounds i8* %31, i64 %32
  store i8 %30, i8* %33, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %34 = load i64* %len, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %len, align 8
  %36 = load i8** %quote_string, align 8
  %37 = getelementptr inbounds i8* %36, i64 1
  store i8* %37, i8** %quote_string, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb17
  %38 = load i8** %quote_string, align 8
  %39 = load i8* %38, align 1
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %bb18, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  store i8 1, i8* %backslash_escapes, align 1
  %41 = load i8** %right_quote_addr, align 8
  store i8* %41, i8** %quote_string, align 8
  %42 = load i8** %quote_string, align 8
  %43 = call i64 @strlen(i8* %42) nounwind readonly
  store i64 %43, i64* %quote_string_len, align 8
  br label %bb42

bb23:                                             ; preds = %process_input
  store i8 1, i8* %backslash_escapes, align 1
  br label %bb24

bb24:                                             ; preds = %bb23, %process_input
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb25

bb25:                                             ; preds = %bb24, %process_input
  %44 = load i8* %elide_outer_quotes, align 1
  %toBool26 = icmp ne i8 %44, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  br i1 %toBool29, label %bb30, label %bb31

bb30:                                             ; preds = %bb25
  store i8 1, i8* %backslash_escapes, align 1
  br label %bb31

bb31:                                             ; preds = %bb30, %bb25, %process_input
  store i32 2, i32* %quoting_style_addr, align 4
  %45 = load i8* %elide_outer_quotes, align 1
  %toBool32 = icmp ne i8 %45, 0
  %toBool32not = xor i1 %toBool32, true
  %toBool32not33 = zext i1 %toBool32not to i8
  %toBool35 = icmp ne i8 %toBool32not33, 0
  br i1 %toBool35, label %bb36, label %bb39

bb36:                                             ; preds = %bb31
  %46 = load i64* %len, align 8
  %47 = load i64* %buffersize_addr, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %49 = load i8** %buffer_addr, align 8
  %50 = load i64* %len, align 8
  %51 = getelementptr inbounds i8* %49, i64 %50
  store i8 39, i8* %51, align 1
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %52 = load i64* %len, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %len, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb31
  store i8* getelementptr inbounds ([2 x i8]* @.str17183, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb42

bb40:                                             ; preds = %process_input
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb42

bb41:                                             ; preds = %process_input
  call void @abort() noreturn nounwind
  unreachable

bb42:                                             ; preds = %bb40, %bb39, %bb22, %bb9, %bb8
  store i64 0, i64* %i, align 8
  br label %bb306

bb43:                                             ; preds = %bb309
  store i8 0, i8* %is_right_quote, align 1
  store i8 0, i8* %escaping, align 1
  store i8 0, i8* %c_and_shell_quote_compat, align 1
  %54 = load i8* %backslash_escapes, align 1
  %toBool44 = icmp ne i8 %54, 0
  br i1 %toBool44, label %bb45, label %bb56

bb45:                                             ; preds = %bb43
  %55 = load i32* %quoting_style_addr, align 4
  %56 = icmp ne i32 %55, 2
  br i1 %56, label %bb46, label %bb56

bb46:                                             ; preds = %bb45
  %57 = load i64* %quote_string_len, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %bb47, label %bb56

bb47:                                             ; preds = %bb46
  %59 = load i64* %i, align 8
  %60 = load i64* %quote_string_len, align 8
  %61 = add i64 %59, %60
  %62 = load i64* %argsize_addr, align 8
  %63 = icmp ne i64 %62, -1
  br i1 %63, label %bb50, label %bb48

bb48:                                             ; preds = %bb47
  %64 = load i64* %quote_string_len, align 8
  %65 = icmp ule i64 %64, 1
  br i1 %65, label %bb50, label %bb49

bb49:                                             ; preds = %bb48
  %66 = load i8** %arg_addr, align 8
  %67 = call i64 @strlen(i8* %66) nounwind readonly
  store i64 %67, i64* %argsize_addr, align 8
  %68 = load i64* %argsize_addr, align 8
  store i64 %68, i64* %iftmp.23, align 8
  br label %bb51

bb50:                                             ; preds = %bb48, %bb47
  %69 = load i64* %argsize_addr, align 8
  store i64 %69, i64* %iftmp.23, align 8
  br label %bb51

bb51:                                             ; preds = %bb50, %bb49
  %70 = load i64* %iftmp.23, align 8
  %71 = icmp ule i64 %61, %70
  br i1 %71, label %bb52, label %bb56

bb52:                                             ; preds = %bb51
  %72 = load i8** %arg_addr, align 8
  %73 = load i64* %i, align 8
  %74 = getelementptr inbounds i8* %72, i64 %73
  %75 = load i8** %quote_string, align 8
  %76 = load i64* %quote_string_len, align 8
  %77 = call i32 @memcmp(i8* %74, i8* %75, i64 %76) nounwind readonly
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %bb53, label %bb56

bb53:                                             ; preds = %bb52
  %79 = load i8* %elide_outer_quotes, align 1
  %toBool54 = icmp ne i8 %79, 0
  br i1 %toBool54, label %force_outer_quoting_style, label %bb55

bb55:                                             ; preds = %bb53
  store i8 1, i8* %is_right_quote, align 1
  br label %bb56

bb56:                                             ; preds = %bb55, %bb52, %bb51, %bb46, %bb45, %bb43
  %80 = load i8** %arg_addr, align 8
  %81 = load i64* %i, align 8
  %82 = getelementptr inbounds i8* %80, i64 %81
  %83 = load i8* %82, align 1
  store i8 %83, i8* %c, align 1
  %84 = load i8* %c, align 1
  %85 = zext i8 %84 to i32
  switch i32 %85, label %bb156 [
    i32 0, label %bb57
    i32 7, label %bb109
    i32 8, label %bb110
    i32 9, label %bb114
    i32 10, label %bb112
    i32 11, label %bb115
    i32 12, label %bb111
    i32 13, label %bb113
    i32 32, label %bb136
    i32 33, label %bb137
    i32 34, label %bb137
    i32 35, label %bb135
    i32 36, label %bb137
    i32 37, label %bb155
    i32 38, label %bb137
    i32 39, label %bb141
    i32 40, label %bb137
    i32 41, label %bb137
    i32 42, label %bb137
    i32 43, label %bb155
    i32 44, label %bb155
    i32 45, label %bb155
    i32 46, label %bb155
    i32 47, label %bb155
    i32 48, label %bb155
    i32 49, label %bb155
    i32 50, label %bb155
    i32 51, label %bb155
    i32 52, label %bb155
    i32 53, label %bb155
    i32 54, label %bb155
    i32 55, label %bb155
    i32 56, label %bb155
    i32 57, label %bb155
    i32 58, label %bb155
    i32 59, label %bb137
    i32 60, label %bb137
    i32 61, label %bb137
    i32 62, label %bb137
    i32 63, label %bb89
    i32 65, label %bb155
    i32 66, label %bb155
    i32 67, label %bb155
    i32 68, label %bb155
    i32 69, label %bb155
    i32 70, label %bb155
    i32 71, label %bb155
    i32 72, label %bb155
    i32 73, label %bb155
    i32 74, label %bb155
    i32 75, label %bb155
    i32 76, label %bb155
    i32 77, label %bb155
    i32 78, label %bb155
    i32 79, label %bb155
    i32 80, label %bb155
    i32 81, label %bb155
    i32 82, label %bb155
    i32 83, label %bb155
    i32 84, label %bb155
    i32 85, label %bb155
    i32 86, label %bb155
    i32 87, label %bb155
    i32 88, label %bb155
    i32 89, label %bb155
    i32 90, label %bb155
    i32 91, label %bb137
    i32 92, label %bb116
    i32 93, label %bb155
    i32 94, label %bb137
    i32 95, label %bb155
    i32 96, label %bb137
    i32 97, label %bb155
    i32 98, label %bb155
    i32 99, label %bb155
    i32 100, label %bb155
    i32 101, label %bb155
    i32 102, label %bb155
    i32 103, label %bb155
    i32 104, label %bb155
    i32 105, label %bb155
    i32 106, label %bb155
    i32 107, label %bb155
    i32 108, label %bb155
    i32 109, label %bb155
    i32 110, label %bb155
    i32 111, label %bb155
    i32 112, label %bb155
    i32 113, label %bb155
    i32 114, label %bb155
    i32 115, label %bb155
    i32 116, label %bb155
    i32 117, label %bb155
    i32 118, label %bb155
    i32 119, label %bb155
    i32 120, label %bb155
    i32 121, label %bb155
    i32 122, label %bb155
    i32 123, label %bb130
    i32 124, label %bb137
    i32 125, label %bb130
    i32 126, label %bb135
  ]

bb57:                                             ; preds = %bb56
  %86 = load i8* %backslash_escapes, align 1
  %toBool58 = icmp ne i8 %86, 0
  br i1 %toBool58, label %bb59, label %bb86

bb59:                                             ; preds = %bb57
  %87 = load i8* %elide_outer_quotes, align 1
  %toBool60 = icmp ne i8 %87, 0
  br i1 %toBool60, label %force_outer_quoting_style, label %bb61

bb61:                                             ; preds = %bb59
  store i8 1, i8* %escaping, align 1
  %88 = load i32* %quoting_style_addr, align 4
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %bb62, label %bb74

bb62:                                             ; preds = %bb61
  %90 = load i8* %pending_shell_escape_end, align 1
  %toBool63 = icmp ne i8 %90, 0
  %toBool63not = xor i1 %toBool63, true
  %toBool63not64 = zext i1 %toBool63not to i8
  %toBool66 = icmp ne i8 %toBool63not64, 0
  br i1 %toBool66, label %bb67, label %bb74

bb67:                                             ; preds = %bb62
  %91 = load i64* %len, align 8
  %92 = load i64* %buffersize_addr, align 8
  %93 = icmp ult i64 %91, %92
  br i1 %93, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  %94 = load i8** %buffer_addr, align 8
  %95 = load i64* %len, align 8
  %96 = getelementptr inbounds i8* %94, i64 %95
  store i8 39, i8* %96, align 1
  br label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %97 = load i64* %len, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %len, align 8
  %99 = load i64* %len, align 8
  %100 = load i64* %buffersize_addr, align 8
  %101 = icmp ult i64 %99, %100
  br i1 %101, label %bb70, label %bb71

bb70:                                             ; preds = %bb69
  %102 = load i8** %buffer_addr, align 8
  %103 = load i64* %len, align 8
  %104 = getelementptr inbounds i8* %102, i64 %103
  store i8 36, i8* %104, align 1
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  %105 = load i64* %len, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %len, align 8
  %107 = load i64* %len, align 8
  %108 = load i64* %buffersize_addr, align 8
  %109 = icmp ult i64 %107, %108
  br i1 %109, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  %110 = load i8** %buffer_addr, align 8
  %111 = load i64* %len, align 8
  %112 = getelementptr inbounds i8* %110, i64 %111
  store i8 39, i8* %112, align 1
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71
  %113 = load i64* %len, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb74

bb74:                                             ; preds = %bb73, %bb62, %bb61
  %115 = load i64* %len, align 8
  %116 = load i64* %buffersize_addr, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  %118 = load i8** %buffer_addr, align 8
  %119 = load i64* %len, align 8
  %120 = getelementptr inbounds i8* %118, i64 %119
  store i8 92, i8* %120, align 1
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74
  %121 = load i64* %len, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %len, align 8
  %123 = load i32* %quoting_style_addr, align 4
  %124 = icmp ne i32 %123, 2
  br i1 %124, label %bb77, label %bb85

bb77:                                             ; preds = %bb76
  %125 = load i64* %i, align 8
  %126 = add i64 %125, 1
  %127 = load i64* %argsize_addr, align 8
  %128 = icmp ult i64 %126, %127
  br i1 %128, label %bb78, label %bb85

bb78:                                             ; preds = %bb77
  %129 = load i64* %i, align 8
  %130 = add i64 %129, 1
  %131 = load i8** %arg_addr, align 8
  %132 = getelementptr inbounds i8* %131, i64 %130
  %133 = load i8* %132, align 1
  %134 = icmp sgt i8 %133, 47
  br i1 %134, label %bb79, label %bb85

bb79:                                             ; preds = %bb78
  %135 = load i64* %i, align 8
  %136 = add i64 %135, 1
  %137 = load i8** %arg_addr, align 8
  %138 = getelementptr inbounds i8* %137, i64 %136
  %139 = load i8* %138, align 1
  %140 = icmp sle i8 %139, 57
  br i1 %140, label %bb80, label %bb85

bb80:                                             ; preds = %bb79
  %141 = load i64* %len, align 8
  %142 = load i64* %buffersize_addr, align 8
  %143 = icmp ult i64 %141, %142
  br i1 %143, label %bb81, label %bb82

bb81:                                             ; preds = %bb80
  %144 = load i8** %buffer_addr, align 8
  %145 = load i64* %len, align 8
  %146 = getelementptr inbounds i8* %144, i64 %145
  store i8 48, i8* %146, align 1
  br label %bb82

bb82:                                             ; preds = %bb81, %bb80
  %147 = load i64* %len, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %len, align 8
  %149 = load i64* %len, align 8
  %150 = load i64* %buffersize_addr, align 8
  %151 = icmp ult i64 %149, %150
  br i1 %151, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %152 = load i8** %buffer_addr, align 8
  %153 = load i64* %len, align 8
  %154 = getelementptr inbounds i8* %152, i64 %153
  store i8 48, i8* %154, align 1
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82
  %155 = load i64* %len, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %len, align 8
  br label %bb85

bb85:                                             ; preds = %bb84, %bb79, %bb78, %bb77, %bb76
  store i8 48, i8* %c, align 1
  br label %bb251

bb86:                                             ; preds = %bb57
  %157 = load i32* %flags_addr, align 4
  %158 = and i32 %157, 1
  %159 = trunc i32 %158 to i8
  %toBool87 = icmp ne i8 %159, 0
  br i1 %toBool87, label %bb305, label %bb251

bb89:                                             ; preds = %bb56
  %160 = load i32* %quoting_style_addr, align 4
  switch i32 %160, label %bb251 [
    i32 2, label %bb90
    i32 5, label %bb93
  ]

bb90:                                             ; preds = %bb89
  %161 = load i8* %elide_outer_quotes, align 1
  %toBool91 = icmp ne i8 %161, 0
  br i1 %toBool91, label %force_outer_quoting_style, label %bb251

bb93:                                             ; preds = %bb89
  %162 = load i32* %flags_addr, align 4
  %163 = and i32 %162, 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %bb94, label %bb251

bb94:                                             ; preds = %bb93
  %165 = load i64* %i, align 8
  %166 = add i64 %165, 2
  %167 = load i64* %argsize_addr, align 8
  %168 = icmp ult i64 %166, %167
  br i1 %168, label %bb95, label %bb251

bb95:                                             ; preds = %bb94
  %169 = load i64* %i, align 8
  %170 = add i64 %169, 1
  %171 = load i8** %arg_addr, align 8
  %172 = getelementptr inbounds i8* %171, i64 %170
  %173 = load i8* %172, align 1
  %174 = icmp eq i8 %173, 63
  br i1 %174, label %bb96, label %bb251

bb96:                                             ; preds = %bb95
  %175 = load i64* %i, align 8
  %176 = add i64 %175, 2
  %177 = load i8** %arg_addr, align 8
  %178 = getelementptr inbounds i8* %177, i64 %176
  %179 = load i8* %178, align 1
  %180 = sext i8 %179 to i32
  switch i32 %180, label %bb251 [
    i32 33, label %bb97
    i32 39, label %bb97
    i32 40, label %bb97
    i32 41, label %bb97
    i32 45, label %bb97
    i32 47, label %bb97
    i32 60, label %bb97
    i32 61, label %bb97
    i32 62, label %bb97
  ]

bb97:                                             ; preds = %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96
  %181 = load i8* %elide_outer_quotes, align 1
  %toBool98 = icmp ne i8 %181, 0
  br i1 %toBool98, label %force_outer_quoting_style, label %bb99

bb99:                                             ; preds = %bb97
  %182 = load i64* %i, align 8
  %183 = add i64 %182, 2
  %184 = load i8** %arg_addr, align 8
  %185 = getelementptr inbounds i8* %184, i64 %183
  %186 = load i8* %185, align 1
  store i8 %186, i8* %c, align 1
  %187 = load i64* %i, align 8
  %188 = add i64 %187, 2
  store i64 %188, i64* %i, align 8
  %189 = load i64* %len, align 8
  %190 = load i64* %buffersize_addr, align 8
  %191 = icmp ult i64 %189, %190
  br i1 %191, label %bb100, label %bb101

bb100:                                            ; preds = %bb99
  %192 = load i8** %buffer_addr, align 8
  %193 = load i64* %len, align 8
  %194 = getelementptr inbounds i8* %192, i64 %193
  store i8 63, i8* %194, align 1
  br label %bb101

bb101:                                            ; preds = %bb100, %bb99
  %195 = load i64* %len, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %len, align 8
  %197 = load i64* %len, align 8
  %198 = load i64* %buffersize_addr, align 8
  %199 = icmp ult i64 %197, %198
  br i1 %199, label %bb102, label %bb103

bb102:                                            ; preds = %bb101
  %200 = load i8** %buffer_addr, align 8
  %201 = load i64* %len, align 8
  %202 = getelementptr inbounds i8* %200, i64 %201
  store i8 34, i8* %202, align 1
  br label %bb103

bb103:                                            ; preds = %bb102, %bb101
  %203 = load i64* %len, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %len, align 8
  %205 = load i64* %len, align 8
  %206 = load i64* %buffersize_addr, align 8
  %207 = icmp ult i64 %205, %206
  br i1 %207, label %bb104, label %bb105

bb104:                                            ; preds = %bb103
  %208 = load i8** %buffer_addr, align 8
  %209 = load i64* %len, align 8
  %210 = getelementptr inbounds i8* %208, i64 %209
  store i8 34, i8* %210, align 1
  br label %bb105

bb105:                                            ; preds = %bb104, %bb103
  %211 = load i64* %len, align 8
  %212 = add i64 %211, 1
  store i64 %212, i64* %len, align 8
  %213 = load i64* %len, align 8
  %214 = load i64* %buffersize_addr, align 8
  %215 = icmp ult i64 %213, %214
  br i1 %215, label %bb106, label %bb107

bb106:                                            ; preds = %bb105
  %216 = load i8** %buffer_addr, align 8
  %217 = load i64* %len, align 8
  %218 = getelementptr inbounds i8* %216, i64 %217
  store i8 63, i8* %218, align 1
  br label %bb107

bb107:                                            ; preds = %bb106, %bb105
  %219 = load i64* %len, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %len, align 8
  br label %bb251

bb109:                                            ; preds = %bb56
  store i8 97, i8* %esc, align 1
  br label %c_escape

bb110:                                            ; preds = %bb56
  store i8 98, i8* %esc, align 1
  br label %c_escape

bb111:                                            ; preds = %bb56
  store i8 102, i8* %esc, align 1
  br label %c_escape

bb112:                                            ; preds = %bb56
  store i8 110, i8* %esc, align 1
  br label %c_and_shell_escape

bb113:                                            ; preds = %bb56
  store i8 114, i8* %esc, align 1
  br label %c_and_shell_escape

bb114:                                            ; preds = %bb56
  store i8 116, i8* %esc, align 1
  br label %c_and_shell_escape

bb115:                                            ; preds = %bb56
  store i8 118, i8* %esc, align 1
  br label %c_escape

bb116:                                            ; preds = %bb56
  %221 = load i8* %c, align 1
  store i8 %221, i8* %esc, align 1
  %222 = load i32* %quoting_style_addr, align 4
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %bb117, label %bb120

bb117:                                            ; preds = %bb116
  %224 = load i8* %elide_outer_quotes, align 1
  %toBool118 = icmp ne i8 %224, 0
  br i1 %toBool118, label %force_outer_quoting_style, label %store_c

bb120:                                            ; preds = %bb116
  %225 = load i8* %backslash_escapes, align 1
  %toBool121 = icmp ne i8 %225, 0
  br i1 %toBool121, label %bb122, label %c_and_shell_escape

bb122:                                            ; preds = %bb120
  %226 = load i8* %elide_outer_quotes, align 1
  %toBool123 = icmp ne i8 %226, 0
  br i1 %toBool123, label %bb124, label %c_and_shell_escape

bb124:                                            ; preds = %bb122
  %227 = load i64* %quote_string_len, align 8
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %store_c, label %c_and_shell_escape

c_and_shell_escape:                               ; preds = %bb124, %bb122, %bb120, %bb114, %bb113, %bb112
  %229 = load i32* %quoting_style_addr, align 4
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %bb125, label %c_escape

bb125:                                            ; preds = %c_and_shell_escape
  %231 = load i8* %elide_outer_quotes, align 1
  %toBool126 = icmp ne i8 %231, 0
  br i1 %toBool126, label %force_outer_quoting_style, label %c_escape

c_escape:                                         ; preds = %bb125, %c_and_shell_escape, %bb115, %bb111, %bb110, %bb109
  %232 = load i8* %backslash_escapes, align 1
  %toBool127 = icmp ne i8 %232, 0
  br i1 %toBool127, label %bb128, label %bb251

bb128:                                            ; preds = %c_escape
  %233 = load i8* %esc, align 1
  store i8 %233, i8* %c, align 1
  br label %store_escape

bb130:                                            ; preds = %bb56, %bb56
  %234 = load i64* %argsize_addr, align 8
  %235 = icmp eq i64 %234, -1
  br i1 %235, label %bb131, label %bb132

bb131:                                            ; preds = %bb130
  %236 = load i8** %arg_addr, align 8
  %237 = getelementptr inbounds i8* %236, i64 1
  %238 = load i8* %237, align 1
  %239 = icmp ne i8 %238, 0
  %240 = zext i1 %239 to i8
  store i8 %240, i8* %iftmp.24, align 1
  br label %bb133

bb132:                                            ; preds = %bb130
  %241 = load i64* %argsize_addr, align 8
  %242 = icmp ne i64 %241, 1
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %iftmp.24, align 1
  br label %bb133

bb133:                                            ; preds = %bb132, %bb131
  %244 = load i8* %iftmp.24, align 1
  %toBool134 = icmp ne i8 %244, 0
  br i1 %toBool134, label %bb251, label %bb135

bb135:                                            ; preds = %bb133, %bb56, %bb56
  %245 = load i64* %i, align 8
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %bb251, label %bb136

bb136:                                            ; preds = %bb135, %bb56
  store i8 1, i8* %c_and_shell_quote_compat, align 1
  br label %bb137

bb137:                                            ; preds = %bb136, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56
  %247 = load i32* %quoting_style_addr, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %bb138, label %bb251

bb138:                                            ; preds = %bb137
  %249 = load i8* %elide_outer_quotes, align 1
  %toBool139 = icmp ne i8 %249, 0
  br i1 %toBool139, label %force_outer_quoting_style, label %bb251

bb141:                                            ; preds = %bb56
  store i8 1, i8* %encountered_single_quote, align 1
  store i8 1, i8* %c_and_shell_quote_compat, align 1
  %250 = load i32* %quoting_style_addr, align 4
  %251 = icmp eq i32 %250, 2
  br i1 %251, label %bb142, label %bb251

bb142:                                            ; preds = %bb141
  %252 = load i8* %elide_outer_quotes, align 1
  %toBool143 = icmp ne i8 %252, 0
  br i1 %toBool143, label %force_outer_quoting_style, label %bb144

bb144:                                            ; preds = %bb142
  %253 = load i64* %buffersize_addr, align 8
  %254 = icmp ne i64 %253, 0
  br i1 %254, label %bb145, label %bb147

bb145:                                            ; preds = %bb144
  %255 = load i64* %orig_buffersize, align 8
  %256 = icmp eq i64 %255, 0
  br i1 %256, label %bb146, label %bb147

bb146:                                            ; preds = %bb145
  %257 = load i64* %buffersize_addr, align 8
  store i64 %257, i64* %orig_buffersize, align 8
  store i64 0, i64* %buffersize_addr, align 8
  br label %bb147

bb147:                                            ; preds = %bb146, %bb145, %bb144
  %258 = load i64* %len, align 8
  %259 = load i64* %buffersize_addr, align 8
  %260 = icmp ult i64 %258, %259
  br i1 %260, label %bb148, label %bb149

bb148:                                            ; preds = %bb147
  %261 = load i8** %buffer_addr, align 8
  %262 = load i64* %len, align 8
  %263 = getelementptr inbounds i8* %261, i64 %262
  store i8 39, i8* %263, align 1
  br label %bb149

bb149:                                            ; preds = %bb148, %bb147
  %264 = load i64* %len, align 8
  %265 = add i64 %264, 1
  store i64 %265, i64* %len, align 8
  %266 = load i64* %len, align 8
  %267 = load i64* %buffersize_addr, align 8
  %268 = icmp ult i64 %266, %267
  br i1 %268, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  %269 = load i8** %buffer_addr, align 8
  %270 = load i64* %len, align 8
  %271 = getelementptr inbounds i8* %269, i64 %270
  store i8 92, i8* %271, align 1
  br label %bb151

bb151:                                            ; preds = %bb150, %bb149
  %272 = load i64* %len, align 8
  %273 = add i64 %272, 1
  store i64 %273, i64* %len, align 8
  %274 = load i64* %len, align 8
  %275 = load i64* %buffersize_addr, align 8
  %276 = icmp ult i64 %274, %275
  br i1 %276, label %bb152, label %bb153

bb152:                                            ; preds = %bb151
  %277 = load i8** %buffer_addr, align 8
  %278 = load i64* %len, align 8
  %279 = getelementptr inbounds i8* %277, i64 %278
  store i8 39, i8* %279, align 1
  br label %bb153

bb153:                                            ; preds = %bb152, %bb151
  %280 = load i64* %len, align 8
  %281 = add i64 %280, 1
  store i64 %281, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb251

bb155:                                            ; preds = %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56
  store i8 1, i8* %c_and_shell_quote_compat, align 1
  br label %bb251

bb156:                                            ; preds = %bb56
  %282 = load i8* %unibyte_locale, align 1
  %toBool157 = icmp ne i8 %282, 0
  br i1 %toBool157, label %bb158, label %bb159

bb158:                                            ; preds = %bb156
  store i64 1, i64* %m, align 8
  %283 = call i16** @__ctype_b_loc() nounwind readnone
  %284 = load i16** %283, align 8
  %285 = load i8* %c, align 1
  %286 = zext i8 %285 to i32
  %287 = sext i32 %286 to i64
  %288 = getelementptr inbounds i16* %284, i64 %287
  %289 = load i16* %288, align 1
  %290 = zext i16 %289 to i32
  %291 = and i32 %290, 16384
  %292 = icmp ne i32 %291, 0
  %293 = zext i1 %292 to i8
  store i8 %293, i8* %printable, align 1
  br label %bb182

bb159:                                            ; preds = %bb156
  %mbstate160 = bitcast %struct.mbstate_t* %mbstate to i8*
  %294 = call i8* @memset(i8* %mbstate160, i32 0, i64 8)
  store i64 0, i64* %m, align 8
  store i8 1, i8* %printable, align 1
  %295 = load i64* %argsize_addr, align 8
  %296 = icmp eq i64 %295, -1
  br i1 %296, label %bb161, label %bb162

bb161:                                            ; preds = %bb159
  %297 = load i8** %arg_addr, align 8
  %298 = call i64 @strlen(i8* %297) nounwind readonly
  store i64 %298, i64* %argsize_addr, align 8
  br label %bb162

bb162:                                            ; preds = %bb181, %bb161, %bb159
  %299 = load i64* %i, align 8
  %300 = load i64* %m, align 8
  %301 = add i64 %299, %300
  %302 = load i64* %argsize_addr, align 8
  %303 = sub i64 %302, %301
  %304 = load i64* %i, align 8
  %305 = load i64* %m, align 8
  %306 = add i64 %304, %305
  %307 = load i8** %arg_addr, align 8
  %308 = getelementptr inbounds i8* %307, i64 %306
  %309 = call i64 @rpl_mbrtowc(i32* %w, i8* %308, i64 %303, %struct.mbstate_t* %mbstate) nounwind
  store i64 %309, i64* %bytes, align 8
  %310 = load i64* %bytes, align 8
  %311 = icmp eq i64 %310, 0
  br i1 %311, label %bb182, label %bb163

bb163:                                            ; preds = %bb162
  %312 = load i64* %bytes, align 8
  %313 = icmp eq i64 %312, -1
  br i1 %313, label %bb164, label %bb165

bb164:                                            ; preds = %bb163
  store i8 0, i8* %printable, align 1
  br label %bb182

bb165:                                            ; preds = %bb163
  %314 = load i64* %bytes, align 8
  %315 = icmp eq i64 %314, -2
  br i1 %315, label %bb166, label %bb171

bb166:                                            ; preds = %bb165
  store i8 0, i8* %printable, align 1
  br label %bb168

bb167:                                            ; preds = %bb169
  %316 = load i64* %m, align 8
  %317 = add i64 %316, 1
  store i64 %317, i64* %m, align 8
  br label %bb168

bb168:                                            ; preds = %bb167, %bb166
  %318 = load i64* %i, align 8
  %319 = load i64* %m, align 8
  %320 = add i64 %318, %319
  %321 = load i64* %argsize_addr, align 8
  %322 = icmp uge i64 %320, %321
  br i1 %322, label %bb182, label %bb169

bb169:                                            ; preds = %bb168
  %323 = load i64* %i, align 8
  %324 = load i64* %m, align 8
  %325 = add i64 %323, %324
  %326 = load i8** %arg_addr, align 8
  %327 = getelementptr inbounds i8* %326, i64 %325
  %328 = load i8* %327, align 1
  %329 = icmp ne i8 %328, 0
  br i1 %329, label %bb167, label %bb182

bb171:                                            ; preds = %bb165
  %330 = load i8* %elide_outer_quotes, align 1
  %toBool172 = icmp ne i8 %330, 0
  br i1 %toBool172, label %bb173, label %bb179

bb173:                                            ; preds = %bb171
  %331 = load i32* %quoting_style_addr, align 4
  %332 = icmp eq i32 %331, 2
  br i1 %332, label %bb174, label %bb179

bb174:                                            ; preds = %bb173
  store i64 1, i64* %j, align 8
  br label %bb178

bb175:                                            ; preds = %bb178
  %333 = load i64* %i, align 8
  %334 = load i64* %m, align 8
  %335 = add i64 %333, %334
  %336 = load i64* %j, align 8
  %337 = add i64 %335, %336
  %338 = load i8** %arg_addr, align 8
  %339 = getelementptr inbounds i8* %338, i64 %337
  %340 = load i8* %339, align 1
  %341 = sext i8 %340 to i32
  switch i32 %341, label %bb177 [
    i32 91, label %force_outer_quoting_style
    i32 92, label %force_outer_quoting_style
    i32 94, label %force_outer_quoting_style
    i32 96, label %force_outer_quoting_style
    i32 124, label %force_outer_quoting_style
  ]

bb177:                                            ; preds = %bb175
  %342 = load i64* %j, align 8
  %343 = add i64 %342, 1
  store i64 %343, i64* %j, align 8
  br label %bb178

bb178:                                            ; preds = %bb177, %bb174
  %344 = load i64* %j, align 8
  %345 = load i64* %bytes, align 8
  %346 = icmp ult i64 %344, %345
  br i1 %346, label %bb175, label %bb179

bb179:                                            ; preds = %bb178, %bb173, %bb171
  %347 = load i32* %w, align 4
  %348 = call i32 @iswprint(i32 %347) nounwind readonly
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %bb180, label %bb181

bb180:                                            ; preds = %bb179
  store i8 0, i8* %printable, align 1
  br label %bb181

bb181:                                            ; preds = %bb180, %bb179
  %350 = load i64* %m, align 8
  %351 = load i64* %bytes, align 8
  %352 = add i64 %350, %351
  store i64 %352, i64* %m, align 8
  %353 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %mbstate) nounwind readonly
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %bb162, label %bb182

bb182:                                            ; preds = %bb168, %bb169, %bb181, %bb164, %bb162, %bb158
  %355 = load i8* %printable, align 1
  store i8 %355, i8* %c_and_shell_quote_compat, align 1
  %356 = load i64* %m, align 8
  %357 = icmp ugt i64 %356, 1
  br i1 %357, label %bb193, label %bb183

bb183:                                            ; preds = %bb182
  %358 = load i8* %backslash_escapes, align 1
  %toBool184 = icmp ne i8 %358, 0
  %toBool184not = xor i1 %toBool184, true
  %toBool184not185 = zext i1 %toBool184not to i8
  %toBool187 = icmp ne i8 %toBool184not185, 0
  br i1 %toBool187, label %bb251, label %bb188

bb188:                                            ; preds = %bb183
  %359 = load i8* %printable, align 1
  %toBool189 = icmp ne i8 %359, 0
  %toBool189not = xor i1 %toBool189, true
  %toBool189not190 = zext i1 %toBool189not to i8
  %toBool192 = icmp ne i8 %toBool189not190, 0
  br i1 %toBool192, label %bb193, label %bb251

bb193:                                            ; preds = %bb188, %bb182
  %360 = load i64* %i, align 8
  %361 = load i64* %m, align 8
  %362 = add i64 %360, %361
  store i64 %362, i64* %ilim, align 8
  br label %bb194

bb194:                                            ; preds = %bb249, %bb193
  %363 = load i8* %backslash_escapes, align 1
  %toBool195 = icmp ne i8 %363, 0
  %toBool195not = xor i1 %toBool195, true
  %toBool195not196 = zext i1 %toBool195not to i8
  %toBool198 = icmp ne i8 %toBool195not196, 0
  br i1 %toBool198, label %bb229, label %bb199

bb199:                                            ; preds = %bb194
  %364 = load i8* %printable, align 1
  %toBool200 = icmp ne i8 %364, 0
  %toBool200not = xor i1 %toBool200, true
  %toBool200not201 = zext i1 %toBool200not to i8
  %toBool203 = icmp ne i8 %toBool200not201, 0
  %toBool203not = xor i1 %toBool203, true
  %toBool203not204 = zext i1 %toBool203not to i8
  %toBool206 = icmp ne i8 %toBool203not204, 0
  br i1 %toBool206, label %bb229, label %bb207

bb207:                                            ; preds = %bb199
  %365 = load i8* %elide_outer_quotes, align 1
  %toBool208 = icmp ne i8 %365, 0
  br i1 %toBool208, label %force_outer_quoting_style, label %bb209

bb209:                                            ; preds = %bb207
  store i8 1, i8* %escaping, align 1
  %366 = load i32* %quoting_style_addr, align 4
  %367 = icmp eq i32 %366, 2
  br i1 %367, label %bb210, label %bb222

bb210:                                            ; preds = %bb209
  %368 = load i8* %pending_shell_escape_end, align 1
  %toBool211 = icmp ne i8 %368, 0
  %toBool211not = xor i1 %toBool211, true
  %toBool211not212 = zext i1 %toBool211not to i8
  %toBool214 = icmp ne i8 %toBool211not212, 0
  br i1 %toBool214, label %bb215, label %bb222

bb215:                                            ; preds = %bb210
  %369 = load i64* %len, align 8
  %370 = load i64* %buffersize_addr, align 8
  %371 = icmp ult i64 %369, %370
  br i1 %371, label %bb216, label %bb217

bb216:                                            ; preds = %bb215
  %372 = load i8** %buffer_addr, align 8
  %373 = load i64* %len, align 8
  %374 = getelementptr inbounds i8* %372, i64 %373
  store i8 39, i8* %374, align 1
  br label %bb217

bb217:                                            ; preds = %bb216, %bb215
  %375 = load i64* %len, align 8
  %376 = add i64 %375, 1
  store i64 %376, i64* %len, align 8
  %377 = load i64* %len, align 8
  %378 = load i64* %buffersize_addr, align 8
  %379 = icmp ult i64 %377, %378
  br i1 %379, label %bb218, label %bb219

bb218:                                            ; preds = %bb217
  %380 = load i8** %buffer_addr, align 8
  %381 = load i64* %len, align 8
  %382 = getelementptr inbounds i8* %380, i64 %381
  store i8 36, i8* %382, align 1
  br label %bb219

bb219:                                            ; preds = %bb218, %bb217
  %383 = load i64* %len, align 8
  %384 = add i64 %383, 1
  store i64 %384, i64* %len, align 8
  %385 = load i64* %len, align 8
  %386 = load i64* %buffersize_addr, align 8
  %387 = icmp ult i64 %385, %386
  br i1 %387, label %bb220, label %bb221

bb220:                                            ; preds = %bb219
  %388 = load i8** %buffer_addr, align 8
  %389 = load i64* %len, align 8
  %390 = getelementptr inbounds i8* %388, i64 %389
  store i8 39, i8* %390, align 1
  br label %bb221

bb221:                                            ; preds = %bb220, %bb219
  %391 = load i64* %len, align 8
  %392 = add i64 %391, 1
  store i64 %392, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb222

bb222:                                            ; preds = %bb221, %bb210, %bb209
  %393 = load i64* %len, align 8
  %394 = load i64* %buffersize_addr, align 8
  %395 = icmp ult i64 %393, %394
  br i1 %395, label %bb223, label %bb224

bb223:                                            ; preds = %bb222
  %396 = load i8** %buffer_addr, align 8
  %397 = load i64* %len, align 8
  %398 = getelementptr inbounds i8* %396, i64 %397
  store i8 92, i8* %398, align 1
  br label %bb224

bb224:                                            ; preds = %bb223, %bb222
  %399 = load i64* %len, align 8
  %400 = add i64 %399, 1
  store i64 %400, i64* %len, align 8
  %401 = load i64* %len, align 8
  %402 = load i64* %buffersize_addr, align 8
  %403 = icmp ult i64 %401, %402
  br i1 %403, label %bb225, label %bb226

bb225:                                            ; preds = %bb224
  %404 = load i8* %c, align 1
  %int_cast_to_i641 = zext i8 6 to i64
  %405 = icmp ult i64 %int_cast_to_i641, 8
  br i1 %405, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb225
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb225
  %406 = lshr i8 %404, 6
  %407 = add i8 %406, 48
  %408 = load i8** %buffer_addr, align 8
  %409 = load i64* %len, align 8
  %410 = getelementptr inbounds i8* %408, i64 %409
  store i8 %407, i8* %410, align 1
  br label %bb226

bb226:                                            ; preds = %klee_overshift_check.exit, %bb224
  %411 = load i64* %len, align 8
  %412 = add i64 %411, 1
  store i64 %412, i64* %len, align 8
  %413 = load i64* %len, align 8
  %414 = load i64* %buffersize_addr, align 8
  %415 = icmp ult i64 %413, %414
  br i1 %415, label %bb227, label %bb228

bb227:                                            ; preds = %bb226
  %416 = load i8* %c, align 1
  %int_cast_to_i642 = zext i8 3 to i64
  %417 = icmp ult i64 %int_cast_to_i642, 8
  br i1 %417, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %bb227
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %bb227
  %418 = lshr i8 %416, 3
  %419 = and i8 %418, 7
  %420 = add i8 %419, 48
  %421 = load i8** %buffer_addr, align 8
  %422 = load i64* %len, align 8
  %423 = getelementptr inbounds i8* %421, i64 %422
  store i8 %420, i8* %423, align 1
  br label %bb228

bb228:                                            ; preds = %klee_overshift_check.exit6, %bb226
  %424 = load i64* %len, align 8
  %425 = add i64 %424, 1
  store i64 %425, i64* %len, align 8
  %426 = load i8* %c, align 1
  %427 = and i8 %426, 7
  %428 = add i8 %427, 48
  store i8 %428, i8* %c, align 1
  br label %bb234

bb229:                                            ; preds = %bb199, %bb194
  %429 = load i8* %is_right_quote, align 1
  %toBool230 = icmp ne i8 %429, 0
  br i1 %toBool230, label %bb231, label %bb234

bb231:                                            ; preds = %bb229
  %430 = load i64* %len, align 8
  %431 = load i64* %buffersize_addr, align 8
  %432 = icmp ult i64 %430, %431
  br i1 %432, label %bb232, label %bb233

bb232:                                            ; preds = %bb231
  %433 = load i8** %buffer_addr, align 8
  %434 = load i64* %len, align 8
  %435 = getelementptr inbounds i8* %433, i64 %434
  store i8 92, i8* %435, align 1
  br label %bb233

bb233:                                            ; preds = %bb232, %bb231
  %436 = load i64* %len, align 8
  %437 = add i64 %436, 1
  store i64 %437, i64* %len, align 8
  store i8 0, i8* %is_right_quote, align 1
  br label %bb234

bb234:                                            ; preds = %bb233, %bb229, %bb228
  %438 = load i64* %i, align 8
  %439 = add i64 %438, 1
  %440 = load i64* %ilim, align 8
  %441 = icmp uge i64 %439, %440
  br i1 %441, label %store_c, label %bb235

bb235:                                            ; preds = %bb234
  %442 = load i8* %pending_shell_escape_end, align 1
  %toBool236 = icmp ne i8 %442, 0
  br i1 %toBool236, label %bb237, label %bb247

bb237:                                            ; preds = %bb235
  %443 = load i8* %escaping, align 1
  %toBool238 = icmp ne i8 %443, 0
  %toBool238not = xor i1 %toBool238, true
  %toBool238not239 = zext i1 %toBool238not to i8
  %toBool241 = icmp ne i8 %toBool238not239, 0
  br i1 %toBool241, label %bb242, label %bb247

bb242:                                            ; preds = %bb237
  %444 = load i64* %len, align 8
  %445 = load i64* %buffersize_addr, align 8
  %446 = icmp ult i64 %444, %445
  br i1 %446, label %bb243, label %bb244

bb243:                                            ; preds = %bb242
  %447 = load i8** %buffer_addr, align 8
  %448 = load i64* %len, align 8
  %449 = getelementptr inbounds i8* %447, i64 %448
  store i8 39, i8* %449, align 1
  br label %bb244

bb244:                                            ; preds = %bb243, %bb242
  %450 = load i64* %len, align 8
  %451 = add i64 %450, 1
  store i64 %451, i64* %len, align 8
  %452 = load i64* %len, align 8
  %453 = load i64* %buffersize_addr, align 8
  %454 = icmp ult i64 %452, %453
  br i1 %454, label %bb245, label %bb246

bb245:                                            ; preds = %bb244
  %455 = load i8** %buffer_addr, align 8
  %456 = load i64* %len, align 8
  %457 = getelementptr inbounds i8* %455, i64 %456
  store i8 39, i8* %457, align 1
  br label %bb246

bb246:                                            ; preds = %bb245, %bb244
  %458 = load i64* %len, align 8
  %459 = add i64 %458, 1
  store i64 %459, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb247

bb247:                                            ; preds = %bb246, %bb237, %bb235
  %460 = load i64* %len, align 8
  %461 = load i64* %buffersize_addr, align 8
  %462 = icmp ult i64 %460, %461
  br i1 %462, label %bb248, label %bb249

bb248:                                            ; preds = %bb247
  %463 = load i8* %c, align 1
  %464 = load i8** %buffer_addr, align 8
  %465 = load i64* %len, align 8
  %466 = getelementptr inbounds i8* %464, i64 %465
  store i8 %463, i8* %466, align 1
  br label %bb249

bb249:                                            ; preds = %bb248, %bb247
  %467 = load i64* %len, align 8
  %468 = add i64 %467, 1
  store i64 %468, i64* %len, align 8
  %469 = load i64* %i, align 8
  %470 = add i64 %469, 1
  store i64 %470, i64* %i, align 8
  %471 = load i8** %arg_addr, align 8
  %472 = load i64* %i, align 8
  %473 = getelementptr inbounds i8* %471, i64 %472
  %474 = load i8* %473, align 1
  store i8 %474, i8* %c, align 1
  br label %bb194

bb251:                                            ; preds = %bb141, %bb153, %bb137, %bb138, %c_escape, %bb89, %bb93, %bb94, %bb95, %bb96, %bb107, %bb90, %bb85, %bb86, %bb188, %bb183, %bb155, %bb135, %bb133
  %475 = load i8* %backslash_escapes, align 1
  %toBool252 = icmp ne i8 %475, 0
  %toBool252not = xor i1 %toBool252, true
  %toBool252not253 = zext i1 %toBool252not to i8
  %toBool255 = icmp ne i8 %toBool252not253, 0
  br i1 %toBool255, label %bb257, label %bb256

bb256:                                            ; preds = %bb251
  %476 = load i32* %quoting_style_addr, align 4
  %477 = icmp eq i32 %476, 2
  br i1 %477, label %bb257, label %bb262

bb257:                                            ; preds = %bb256, %bb251
  %478 = load i8* %elide_outer_quotes, align 1
  %toBool258 = icmp ne i8 %478, 0
  %toBool258not = xor i1 %toBool258, true
  %toBool258not259 = zext i1 %toBool258not to i8
  %toBool261 = icmp ne i8 %toBool258not259, 0
  br i1 %toBool261, label %bb264, label %bb262

bb262:                                            ; preds = %bb257, %bb256
  %479 = load i32** %quote_these_too_addr, align 8
  %480 = icmp eq i32* %479, null
  br i1 %480, label %bb264, label %bb263

bb263:                                            ; preds = %bb262
  %481 = load i8* %c, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %482 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %483 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %483, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb263
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb263
  call void @klee_disable_symbex() nounwind
  %484 = udiv i8 %481, 32
  %485 = zext i8 %484 to i64
  %486 = load i32** %quote_these_too_addr, align 8
  %487 = getelementptr inbounds i32* %486, i64 %485
  %488 = load i32* %487, align 1
  %489 = load i8* %c, align 1
  %490 = zext i8 %489 to i32
  %491 = and i32 %490, 31
  %int_cast_to_i643 = zext i32 %491 to i64
  %492 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %492, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %klee_div_zero_check.exit
  %493 = lshr i32 %488, %491
  %494 = and i32 %493, 1
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %bb264, label %store_escape

bb264:                                            ; preds = %klee_overshift_check.exit8, %bb262, %bb257
  %496 = load i8* %is_right_quote, align 1
  %toBool265 = icmp ne i8 %496, 0
  %toBool265not = xor i1 %toBool265, true
  %toBool265not266 = zext i1 %toBool265not to i8
  %toBool268 = icmp ne i8 %toBool265not266, 0
  br i1 %toBool268, label %store_c, label %store_escape

store_escape:                                     ; preds = %bb264, %klee_overshift_check.exit8, %bb128
  %497 = load i8* %elide_outer_quotes, align 1
  %toBool269 = icmp ne i8 %497, 0
  br i1 %toBool269, label %force_outer_quoting_style, label %bb270

bb270:                                            ; preds = %store_escape
  store i8 1, i8* %escaping, align 1
  %498 = load i32* %quoting_style_addr, align 4
  %499 = icmp eq i32 %498, 2
  br i1 %499, label %bb271, label %bb283

bb271:                                            ; preds = %bb270
  %500 = load i8* %pending_shell_escape_end, align 1
  %toBool272 = icmp ne i8 %500, 0
  %toBool272not = xor i1 %toBool272, true
  %toBool272not273 = zext i1 %toBool272not to i8
  %toBool275 = icmp ne i8 %toBool272not273, 0
  br i1 %toBool275, label %bb276, label %bb283

bb276:                                            ; preds = %bb271
  %501 = load i64* %len, align 8
  %502 = load i64* %buffersize_addr, align 8
  %503 = icmp ult i64 %501, %502
  br i1 %503, label %bb277, label %bb278

bb277:                                            ; preds = %bb276
  %504 = load i8** %buffer_addr, align 8
  %505 = load i64* %len, align 8
  %506 = getelementptr inbounds i8* %504, i64 %505
  store i8 39, i8* %506, align 1
  br label %bb278

bb278:                                            ; preds = %bb277, %bb276
  %507 = load i64* %len, align 8
  %508 = add i64 %507, 1
  store i64 %508, i64* %len, align 8
  %509 = load i64* %len, align 8
  %510 = load i64* %buffersize_addr, align 8
  %511 = icmp ult i64 %509, %510
  br i1 %511, label %bb279, label %bb280

bb279:                                            ; preds = %bb278
  %512 = load i8** %buffer_addr, align 8
  %513 = load i64* %len, align 8
  %514 = getelementptr inbounds i8* %512, i64 %513
  store i8 36, i8* %514, align 1
  br label %bb280

bb280:                                            ; preds = %bb279, %bb278
  %515 = load i64* %len, align 8
  %516 = add i64 %515, 1
  store i64 %516, i64* %len, align 8
  %517 = load i64* %len, align 8
  %518 = load i64* %buffersize_addr, align 8
  %519 = icmp ult i64 %517, %518
  br i1 %519, label %bb281, label %bb282

bb281:                                            ; preds = %bb280
  %520 = load i8** %buffer_addr, align 8
  %521 = load i64* %len, align 8
  %522 = getelementptr inbounds i8* %520, i64 %521
  store i8 39, i8* %522, align 1
  br label %bb282

bb282:                                            ; preds = %bb281, %bb280
  %523 = load i64* %len, align 8
  %524 = add i64 %523, 1
  store i64 %524, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb283

bb283:                                            ; preds = %bb282, %bb271, %bb270
  %525 = load i64* %len, align 8
  %526 = load i64* %buffersize_addr, align 8
  %527 = icmp ult i64 %525, %526
  br i1 %527, label %bb284, label %bb285

bb284:                                            ; preds = %bb283
  %528 = load i8** %buffer_addr, align 8
  %529 = load i64* %len, align 8
  %530 = getelementptr inbounds i8* %528, i64 %529
  store i8 92, i8* %530, align 1
  br label %bb285

bb285:                                            ; preds = %bb284, %bb283
  %531 = load i64* %len, align 8
  %532 = add i64 %531, 1
  store i64 %532, i64* %len, align 8
  br label %store_c

store_c:                                          ; preds = %bb234, %bb117, %bb285, %bb264, %bb124
  %533 = load i8* %pending_shell_escape_end, align 1
  %toBool286 = icmp ne i8 %533, 0
  br i1 %toBool286, label %bb287, label %bb297

bb287:                                            ; preds = %store_c
  %534 = load i8* %escaping, align 1
  %toBool288 = icmp ne i8 %534, 0
  %toBool288not = xor i1 %toBool288, true
  %toBool288not289 = zext i1 %toBool288not to i8
  %toBool291 = icmp ne i8 %toBool288not289, 0
  br i1 %toBool291, label %bb292, label %bb297

bb292:                                            ; preds = %bb287
  %535 = load i64* %len, align 8
  %536 = load i64* %buffersize_addr, align 8
  %537 = icmp ult i64 %535, %536
  br i1 %537, label %bb293, label %bb294

bb293:                                            ; preds = %bb292
  %538 = load i8** %buffer_addr, align 8
  %539 = load i64* %len, align 8
  %540 = getelementptr inbounds i8* %538, i64 %539
  store i8 39, i8* %540, align 1
  br label %bb294

bb294:                                            ; preds = %bb293, %bb292
  %541 = load i64* %len, align 8
  %542 = add i64 %541, 1
  store i64 %542, i64* %len, align 8
  %543 = load i64* %len, align 8
  %544 = load i64* %buffersize_addr, align 8
  %545 = icmp ult i64 %543, %544
  br i1 %545, label %bb295, label %bb296

bb295:                                            ; preds = %bb294
  %546 = load i8** %buffer_addr, align 8
  %547 = load i64* %len, align 8
  %548 = getelementptr inbounds i8* %546, i64 %547
  store i8 39, i8* %548, align 1
  br label %bb296

bb296:                                            ; preds = %bb295, %bb294
  %549 = load i64* %len, align 8
  %550 = add i64 %549, 1
  store i64 %550, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb297

bb297:                                            ; preds = %bb296, %bb287, %store_c
  %551 = load i64* %len, align 8
  %552 = load i64* %buffersize_addr, align 8
  %553 = icmp ult i64 %551, %552
  br i1 %553, label %bb298, label %bb299

bb298:                                            ; preds = %bb297
  %554 = load i8* %c, align 1
  %555 = load i8** %buffer_addr, align 8
  %556 = load i64* %len, align 8
  %557 = getelementptr inbounds i8* %555, i64 %556
  store i8 %554, i8* %557, align 1
  br label %bb299

bb299:                                            ; preds = %bb298, %bb297
  %558 = load i64* %len, align 8
  %559 = add i64 %558, 1
  store i64 %559, i64* %len, align 8
  %560 = load i8* %c_and_shell_quote_compat, align 1
  %toBool300 = icmp ne i8 %560, 0
  %toBool300not = xor i1 %toBool300, true
  %toBool300not301 = zext i1 %toBool300not to i8
  %toBool303 = icmp ne i8 %toBool300not301, 0
  br i1 %toBool303, label %bb304, label %bb305

bb304:                                            ; preds = %bb299
  store i8 0, i8* %all_c_and_shell_quote_compat, align 1
  br label %bb305

bb305:                                            ; preds = %bb304, %bb299, %bb86
  %561 = load i64* %i, align 8
  %562 = add i64 %561, 1
  store i64 %562, i64* %i, align 8
  br label %bb306

bb306:                                            ; preds = %bb305, %bb42
  %563 = load i64* %argsize_addr, align 8
  %564 = icmp eq i64 %563, -1
  br i1 %564, label %bb307, label %bb308

bb307:                                            ; preds = %bb306
  %565 = load i8** %arg_addr, align 8
  %566 = load i64* %i, align 8
  %567 = getelementptr inbounds i8* %565, i64 %566
  %568 = load i8* %567, align 1
  %569 = icmp ne i8 %568, 0
  %570 = zext i1 %569 to i8
  store i8 %570, i8* %iftmp.29, align 1
  br label %bb309

bb308:                                            ; preds = %bb306
  %571 = load i64* %i, align 8
  %572 = load i64* %argsize_addr, align 8
  %573 = icmp ne i64 %571, %572
  %574 = zext i1 %573 to i8
  store i8 %574, i8* %iftmp.29, align 1
  br label %bb309

bb309:                                            ; preds = %bb308, %bb307
  %575 = load i8* %iftmp.29, align 1
  %toBool310 = icmp ne i8 %575, 0
  br i1 %toBool310, label %bb43, label %bb311

bb311:                                            ; preds = %bb309
  %576 = load i64* %len, align 8
  %577 = icmp eq i64 %576, 0
  br i1 %577, label %bb312, label %bb315

bb312:                                            ; preds = %bb311
  %578 = load i32* %quoting_style_addr, align 4
  %579 = icmp eq i32 %578, 2
  br i1 %579, label %bb313, label %bb315

bb313:                                            ; preds = %bb312
  %580 = load i8* %elide_outer_quotes, align 1
  %toBool314 = icmp ne i8 %580, 0
  br i1 %toBool314, label %force_outer_quoting_style, label %bb315

bb315:                                            ; preds = %bb313, %bb312, %bb311
  %581 = load i32* %quoting_style_addr, align 4
  %582 = icmp eq i32 %581, 2
  br i1 %582, label %bb316, label %bb329

bb316:                                            ; preds = %bb315
  %583 = load i8* %elide_outer_quotes, align 1
  %toBool317 = icmp ne i8 %583, 0
  %toBool317not = xor i1 %toBool317, true
  %toBool317not318 = zext i1 %toBool317not to i8
  %toBool320 = icmp ne i8 %toBool317not318, 0
  br i1 %toBool320, label %bb321, label %bb329

bb321:                                            ; preds = %bb316
  %584 = load i8* %encountered_single_quote, align 1
  %toBool322 = icmp ne i8 %584, 0
  br i1 %toBool322, label %bb323, label %bb329

bb323:                                            ; preds = %bb321
  %585 = load i8* %all_c_and_shell_quote_compat, align 1
  %toBool324 = icmp ne i8 %585, 0
  br i1 %toBool324, label %bb325, label %bb326

bb325:                                            ; preds = %bb323
  %586 = load i8** %buffer_addr, align 8
  %587 = load i64* %orig_buffersize, align 8
  %588 = load i8** %arg_addr, align 8
  %589 = load i64* %argsize_addr, align 8
  %590 = load i32* %flags_addr, align 4
  %591 = load i32** %quote_these_too_addr, align 8
  %592 = load i8** %left_quote_addr, align 8
  %593 = load i8** %right_quote_addr, align 8
  %594 = call i64 @quotearg_buffer_restyled(i8* %586, i64 %587, i8* %588, i64 %589, i32 5, i32 %590, i32* %591, i8* %592, i8* %593) nounwind
  store i64 %594, i64* %0, align 8
  br label %bb347

bb326:                                            ; preds = %bb323
  %595 = load i64* %buffersize_addr, align 8
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %bb327, label %bb329

bb327:                                            ; preds = %bb326
  %597 = load i64* %orig_buffersize, align 8
  %598 = icmp ne i64 %597, 0
  br i1 %598, label %bb328, label %bb329

bb328:                                            ; preds = %bb327
  %599 = load i64* %orig_buffersize, align 8
  store i64 %599, i64* %buffersize_addr, align 8
  store i64 0, i64* %len, align 8
  br label %process_input

bb329:                                            ; preds = %bb327, %bb326, %bb321, %bb316, %bb315
  %600 = load i8** %quote_string, align 8
  %601 = icmp ne i8* %600, null
  br i1 %601, label %bb330, label %bb340

bb330:                                            ; preds = %bb329
  %602 = load i8* %elide_outer_quotes, align 1
  %toBool331 = icmp ne i8 %602, 0
  %toBool331not = xor i1 %toBool331, true
  %toBool331not332 = zext i1 %toBool331not to i8
  %toBool334 = icmp ne i8 %toBool331not332, 0
  br i1 %toBool334, label %bb339, label %bb340

bb336:                                            ; preds = %bb339
  %603 = load i64* %len, align 8
  %604 = load i64* %buffersize_addr, align 8
  %605 = icmp ult i64 %603, %604
  br i1 %605, label %bb337, label %bb338

bb337:                                            ; preds = %bb336
  %606 = load i8** %quote_string, align 8
  %607 = load i8* %606, align 1
  %608 = load i8** %buffer_addr, align 8
  %609 = load i64* %len, align 8
  %610 = getelementptr inbounds i8* %608, i64 %609
  store i8 %607, i8* %610, align 1
  br label %bb338

bb338:                                            ; preds = %bb337, %bb336
  %611 = load i64* %len, align 8
  %612 = add i64 %611, 1
  store i64 %612, i64* %len, align 8
  %613 = load i8** %quote_string, align 8
  %614 = getelementptr inbounds i8* %613, i64 1
  store i8* %614, i8** %quote_string, align 8
  br label %bb339

bb339:                                            ; preds = %bb330, %bb338
  %615 = load i8** %quote_string, align 8
  %616 = load i8* %615, align 1
  %617 = icmp ne i8 %616, 0
  br i1 %617, label %bb336, label %bb340

bb340:                                            ; preds = %bb339, %bb330, %bb329
  %618 = load i64* %len, align 8
  %619 = load i64* %buffersize_addr, align 8
  %620 = icmp ult i64 %618, %619
  br i1 %620, label %bb341, label %bb342

bb341:                                            ; preds = %bb340
  %621 = load i8** %buffer_addr, align 8
  %622 = load i64* %len, align 8
  %623 = getelementptr inbounds i8* %621, i64 %622
  store i8 0, i8* %623, align 1
  br label %bb342

bb342:                                            ; preds = %bb341, %bb340
  %624 = load i64* %len, align 8
  store i64 %624, i64* %0, align 8
  br label %bb347

force_outer_quoting_style:                        ; preds = %bb175, %bb175, %bb175, %bb175, %bb175, %bb313, %store_escape, %bb207, %bb142, %bb138, %bb125, %bb117, %bb97, %bb90, %bb59, %bb53
  %625 = load i32* %quoting_style_addr, align 4
  %626 = icmp eq i32 %625, 2
  br i1 %626, label %bb343, label %bb346

bb343:                                            ; preds = %force_outer_quoting_style
  %627 = load i8* %backslash_escapes, align 1
  %toBool344 = icmp ne i8 %627, 0
  br i1 %toBool344, label %bb345, label %bb346

bb345:                                            ; preds = %bb343
  store i32 4, i32* %quoting_style_addr, align 4
  br label %bb346

bb346:                                            ; preds = %bb345, %bb343, %force_outer_quoting_style
  %628 = load i32* %flags_addr, align 4
  %629 = and i32 %628, -3
  %630 = load i8** %buffer_addr, align 8
  %631 = load i64* %buffersize_addr, align 8
  %632 = load i8** %arg_addr, align 8
  %633 = load i64* %argsize_addr, align 8
  %634 = load i32* %quoting_style_addr, align 4
  %635 = load i8** %left_quote_addr, align 8
  %636 = load i8** %right_quote_addr, align 8
  %637 = call i64 @quotearg_buffer_restyled(i8* %630, i64 %631, i8* %632, i64 %633, i32 %634, i32 %629, i32* null, i8* %635, i8* %636) nounwind
  store i64 %637, i64* %0, align 8
  br label %bb347

bb347:                                            ; preds = %bb346, %bb342, %bb325
  %638 = load i64* %0, align 8
  store i64 %638, i64* %retval, align 8
  %retval348 = load i64* %retval
  ret i64 %retval348
}

define i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.30 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %r = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.30, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.30, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.30, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 4
  %9 = load i8** %8, align 8
  %10 = load %struct.quoting_options** %p, align 8
  %11 = getelementptr inbounds %struct.quoting_options* %10, i32 0, i32 3
  %12 = load i8** %11, align 8
  %13 = load %struct.quoting_options** %p, align 8
  %14 = getelementptr inbounds %struct.quoting_options* %13, i32 0, i32 2
  %15 = getelementptr inbounds [8 x i32]* %14, i64 0, i64 0
  %16 = load %struct.quoting_options** %p, align 8
  %17 = getelementptr inbounds %struct.quoting_options* %16, i32 0, i32 1
  %18 = load i32* %17, align 4
  %19 = load %struct.quoting_options** %p, align 8
  %20 = getelementptr inbounds %struct.quoting_options* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = load i8** %buffer_addr, align 8
  %23 = load i64* %buffersize_addr, align 8
  %24 = load i8** %arg_addr, align 8
  %25 = load i64* %argsize_addr, align 8
  %26 = call i64 @quotearg_buffer_restyled(i8* %22, i64 %23, i8* %24, i64 %25, i32 %21, i32 %18, i32* %15, i8* %12, i8* %9) nounwind
  store i64 %26, i64* %r, align 8
  %27 = call i32* @__errno_location() nounwind readnone
  %28 = load i32* %e, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i64* %r, align 8
  store i64 %29, i64* %0, align 8
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = call i8* @quotearg_alloc_mem(i8* %1, i64 %2, i64* null, %struct.quoting_options* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %size_addr = alloca i64*, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.31 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %flags = alloca i32
  %bufsize = alloca i64
  %buf = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i64* %size, i64** %size_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.31, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.31, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.31, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 1
  %9 = load i32* %8, align 4
  %10 = load i64** %size_addr, align 8
  %11 = icmp eq i64* %10, null
  %12 = zext i1 %11 to i32
  %13 = or i32 %9, %12
  store i32 %13, i32* %flags, align 4
  %14 = load %struct.quoting_options** %p, align 8
  %15 = getelementptr inbounds %struct.quoting_options* %14, i32 0, i32 4
  %16 = load i8** %15, align 8
  %17 = load %struct.quoting_options** %p, align 8
  %18 = getelementptr inbounds %struct.quoting_options* %17, i32 0, i32 3
  %19 = load i8** %18, align 8
  %20 = load %struct.quoting_options** %p, align 8
  %21 = getelementptr inbounds %struct.quoting_options* %20, i32 0, i32 2
  %22 = getelementptr inbounds [8 x i32]* %21, i64 0, i64 0
  %23 = load %struct.quoting_options** %p, align 8
  %24 = getelementptr inbounds %struct.quoting_options* %23, i32 0, i32 0
  %25 = load i32* %24, align 8
  %26 = load i8** %arg_addr, align 8
  %27 = load i64* %argsize_addr, align 8
  %28 = load i32* %flags, align 4
  %29 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %26, i64 %27, i32 %25, i32 %28, i32* %22, i8* %19, i8* %16) nounwind
  %30 = add i64 %29, 1
  store i64 %30, i64* %bufsize, align 8
  %31 = load i64* %bufsize, align 8
  %32 = call noalias i8* @xcharalloc(i64 %31) nounwind
  store i8* %32, i8** %buf, align 8
  %33 = load %struct.quoting_options** %p, align 8
  %34 = getelementptr inbounds %struct.quoting_options* %33, i32 0, i32 4
  %35 = load i8** %34, align 8
  %36 = load %struct.quoting_options** %p, align 8
  %37 = getelementptr inbounds %struct.quoting_options* %36, i32 0, i32 3
  %38 = load i8** %37, align 8
  %39 = load %struct.quoting_options** %p, align 8
  %40 = getelementptr inbounds %struct.quoting_options* %39, i32 0, i32 2
  %41 = getelementptr inbounds [8 x i32]* %40, i64 0, i64 0
  %42 = load %struct.quoting_options** %p, align 8
  %43 = getelementptr inbounds %struct.quoting_options* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = load i8** %buf, align 8
  %46 = load i64* %bufsize, align 8
  %47 = load i8** %arg_addr, align 8
  %48 = load i64* %argsize_addr, align 8
  %49 = load i32* %flags, align 4
  %50 = call i64 @quotearg_buffer_restyled(i8* %45, i64 %46, i8* %47, i64 %48, i32 %44, i32 %49, i32* %41, i8* %38, i8* %35) nounwind
  %51 = call i32* @__errno_location() nounwind readnone
  %52 = load i32* %e, align 4
  store i32 %52, i32* %51, align 4
  %53 = load i64** %size_addr, align 8
  %54 = icmp ne i64* %53, null
  br i1 %54, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %55 = load i64* %bufsize, align 8
  %56 = sub i64 %55, 1
  %57 = load i64** %size_addr, align 8
  store i64 %56, i64* %57, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %58 = load i8** %buf, align 8
  store i8* %58, i8** %0, align 8
  %59 = load i8** %0, align 8
  store i8* %59, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define void @quotearg_free() nounwind {
entry:
  %sv = alloca %struct.slotvec*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8
  store i32 1, i32* %i, align 4
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = load i32* %i, align 4
  %2 = sext i32 %1 to i64
  %3 = getelementptr inbounds %struct.slotvec* %11, i64 %2
  %4 = getelementptr inbounds %struct.slotvec* %3, i32 0, i32 1
  %5 = load i8** %4, align 8
  call void @free(i8* %5) nounwind
  %6 = load i32* %i, align 4
  %7 = add nsw i32 %6, 1
  store i32 %7, i32* %i, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* @nslots, align 4
  %9 = load i32* %i, align 4
  %10 = icmp slt i32 %9, %8
  %11 = load %struct.slotvec** %sv, align 8
  br i1 %10, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.slotvec* %11, i64 0
  %13 = getelementptr inbounds %struct.slotvec* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = icmp ne i8* %14, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load %struct.slotvec** %sv, align 8
  %17 = getelementptr inbounds %struct.slotvec* %16, i64 0
  %18 = getelementptr inbounds %struct.slotvec* %17, i32 0, i32 1
  %19 = load i8** %18, align 8
  call void @free(i8* %19) nounwind
  store i64 256, i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 16
  store i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %20 = load %struct.slotvec** %sv, align 8
  %21 = icmp ne %struct.slotvec* %20, @slotvec0
  br i1 %21, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %22 = load %struct.slotvec** %sv, align 8
  %23 = bitcast %struct.slotvec* %22 to i8*
  call void @free(i8* %23) nounwind
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  store i32 1, i32* @nslots, align 4
  ret void
}

define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %options_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.34 = alloca i8*
  %e = alloca i32
  %sv = alloca %struct.slotvec*
  %preallocated = alloca i8
  %nmax = alloca i32
  %size = alloca i64
  %val = alloca i8*
  %flags = alloca i32
  %qsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %options, %struct.quoting_options** %options_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %3, %struct.slotvec** %sv, align 8
  %4 = load i32* %n_addr, align 4
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %6 = load i32* @nslots, align 4
  %7 = load i32* %n_addr, align 4
  %8 = icmp sle i32 %6, %7
  br i1 %8, label %bb2, label %bb11

bb2:                                              ; preds = %bb1
  %9 = load %struct.slotvec** %sv, align 8
  %10 = icmp eq %struct.slotvec* %9, @slotvec0
  %11 = zext i1 %10 to i8
  store i8 %11, i8* %preallocated, align 1
  store i32 2147483646, i32* %nmax, align 4
  %12 = load i32* %nmax, align 4
  %13 = load i32* %n_addr, align 4
  %14 = icmp slt i32 %12, %13
  br i1 %14, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @xalloc_die() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %15 = load i32* %n_addr, align 4
  %16 = add nsw i32 %15, 1
  %17 = sext i32 %16 to i64
  %18 = mul i64 %17, 16
  %19 = load i8* %preallocated, align 1
  %toBool = icmp ne i8 %19, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i8* null, i8** %iftmp.34, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %20 = load %struct.slotvec** %sv, align 8
  %21 = bitcast %struct.slotvec* %20 to i8*
  store i8* %21, i8** %iftmp.34, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %22 = load i8** %iftmp.34, align 8
  %23 = call i8* @xrealloc(i8* %22, i64 %18) nounwind
  %24 = bitcast i8* %23 to %struct.slotvec*
  store %struct.slotvec* %24, %struct.slotvec** %sv, align 8
  %25 = load %struct.slotvec** %sv, align 8
  store %struct.slotvec* %25, %struct.slotvec** @slotvec, align 8
  %26 = load i8* %preallocated, align 1
  %toBool8 = icmp ne i8 %26, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  %27 = load %struct.slotvec** %sv, align 8
  %28 = getelementptr inbounds %struct.slotvec* %27, i32 0, i32 0
  %29 = load i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 8
  store i64 %29, i64* %28, align 8
  %30 = getelementptr inbounds %struct.slotvec* %27, i32 0, i32 1
  %31 = load i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  store i8* %31, i8** %30, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %32 = load i32* %n_addr, align 4
  %33 = add nsw i32 %32, 1
  %34 = load i32* @nslots, align 4
  %35 = sub nsw i32 %33, %34
  %36 = sext i32 %35 to i64
  %37 = mul i64 %36, 16
  %38 = load i32* @nslots, align 4
  %39 = load %struct.slotvec** %sv, align 8
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds %struct.slotvec* %39, i64 %40
  %42 = bitcast %struct.slotvec* %41 to i8*
  %43 = call i8* @memset(i8* %42, i32 0, i64 %37)
  %44 = load i32* %n_addr, align 4
  %45 = add nsw i32 %44, 1
  store i32 %45, i32* @nslots, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %46 = load %struct.slotvec** %sv, align 8
  %47 = load i32* %n_addr, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.slotvec* %46, i64 %48
  %50 = getelementptr inbounds %struct.slotvec* %49, i32 0, i32 0
  %51 = load i64* %50, align 8
  store i64 %51, i64* %size, align 8
  %52 = load %struct.slotvec** %sv, align 8
  %53 = load i32* %n_addr, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.slotvec* %52, i64 %54
  %56 = getelementptr inbounds %struct.slotvec* %55, i32 0, i32 1
  %57 = load i8** %56, align 8
  store i8* %57, i8** %val, align 8
  %58 = load %struct.quoting_options** %options_addr, align 8
  %59 = getelementptr inbounds %struct.quoting_options* %58, i32 0, i32 1
  %60 = load i32* %59, align 4
  %61 = or i32 %60, 1
  store i32 %61, i32* %flags, align 4
  %62 = load %struct.quoting_options** %options_addr, align 8
  %63 = getelementptr inbounds %struct.quoting_options* %62, i32 0, i32 4
  %64 = load i8** %63, align 8
  %65 = load %struct.quoting_options** %options_addr, align 8
  %66 = getelementptr inbounds %struct.quoting_options* %65, i32 0, i32 3
  %67 = load i8** %66, align 8
  %68 = load %struct.quoting_options** %options_addr, align 8
  %69 = getelementptr inbounds %struct.quoting_options* %68, i32 0, i32 2
  %70 = getelementptr inbounds [8 x i32]* %69, i64 0, i64 0
  %71 = load %struct.quoting_options** %options_addr, align 8
  %72 = getelementptr inbounds %struct.quoting_options* %71, i32 0, i32 0
  %73 = load i32* %72, align 8
  %74 = load i8** %val, align 8
  %75 = load i64* %size, align 8
  %76 = load i8** %arg_addr, align 8
  %77 = load i64* %argsize_addr, align 8
  %78 = load i32* %flags, align 4
  %79 = call i64 @quotearg_buffer_restyled(i8* %74, i64 %75, i8* %76, i64 %77, i32 %73, i32 %78, i32* %70, i8* %67, i8* %64) nounwind
  store i64 %79, i64* %qsize, align 8
  %80 = load i64* %size, align 8
  %81 = load i64* %qsize, align 8
  %82 = icmp ule i64 %80, %81
  br i1 %82, label %bb12, label %bb15

bb12:                                             ; preds = %bb11
  %83 = load %struct.slotvec** %sv, align 8
  %84 = load i32* %n_addr, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.slotvec* %83, i64 %85
  %87 = load i64* %qsize, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %size, align 8
  %89 = getelementptr inbounds %struct.slotvec* %86, i32 0, i32 0
  %90 = load i64* %size, align 8
  store i64 %90, i64* %89, align 8
  %91 = load i8** %val, align 8
  %92 = icmp ne i8* %91, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %92, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %93 = load i8** %val, align 8
  call void @free(i8* %93) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %94 = load %struct.slotvec** %sv, align 8
  %95 = load i32* %n_addr, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.slotvec* %94, i64 %96
  %98 = load i64* %size, align 8
  %99 = call noalias i8* @xcharalloc(i64 %98) nounwind
  store i8* %99, i8** %val, align 8
  %100 = getelementptr inbounds %struct.slotvec* %97, i32 0, i32 1
  %101 = load i8** %val, align 8
  store i8* %101, i8** %100, align 8
  %102 = load %struct.quoting_options** %options_addr, align 8
  %103 = getelementptr inbounds %struct.quoting_options* %102, i32 0, i32 4
  %104 = load i8** %103, align 8
  %105 = load %struct.quoting_options** %options_addr, align 8
  %106 = getelementptr inbounds %struct.quoting_options* %105, i32 0, i32 3
  %107 = load i8** %106, align 8
  %108 = load %struct.quoting_options** %options_addr, align 8
  %109 = getelementptr inbounds %struct.quoting_options* %108, i32 0, i32 2
  %110 = getelementptr inbounds [8 x i32]* %109, i64 0, i64 0
  %111 = load %struct.quoting_options** %options_addr, align 8
  %112 = getelementptr inbounds %struct.quoting_options* %111, i32 0, i32 0
  %113 = load i32* %112, align 8
  %114 = load i8** %val, align 8
  %115 = load i64* %size, align 8
  %116 = load i8** %arg_addr, align 8
  %117 = load i64* %argsize_addr, align 8
  %118 = load i32* %flags, align 4
  %119 = call i64 @quotearg_buffer_restyled(i8* %114, i64 %115, i8* %116, i64 %117, i32 %113, i32 %118, i32* %110, i8* %107, i8* %104) nounwind
  br label %bb15

bb15:                                             ; preds = %bb14, %bb11
  %120 = call i32* @__errno_location() nounwind readnone
  %121 = load i32* %e, align 4
  store i32 %121, i32* %120, align 4
  %122 = load i8** %val, align 8
  store i8* %122, i8** %0, align 8
  %123 = load i8** %0, align 8
  store i8* %123, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define i8* @quotearg_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 -1, %struct.quoting_options* %o) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 %4, %struct.quoting_options* %o) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style(i32 %s, i8* %arg) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_style(i32 0, i32 %1, i8* %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_style_mem(i32 0, i32 %1, i8* %2, i64 %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %options = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i8 %ch, i8* %ch_addr
  %options1 = bitcast %struct.quoting_options* %options to i8*
  %1 = call i8* @memcpy(i8* %options1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8* %ch_addr, align 1
  %3 = sext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  %5 = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %4, i32 1) nounwind
  %6 = load i8** %arg_addr, align 8
  %7 = load i64* %argsize_addr, align 8
  %8 = call i8* @quotearg_n_options(i32 0, i8* %6, i64 %7, %struct.quoting_options* %options) nounwind
  store i8* %8, i8** %0, align 8
  %9 = load i8** %0, align 8
  store i8* %9, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_char(i8* %arg, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8 %ch, i8* %ch_addr
  %1 = load i8* %ch_addr, align 1
  %2 = sext i8 %1 to i32
  %3 = load i8** %arg_addr, align 8
  %4 = trunc i32 %2 to i8
  %5 = call i8* @quotearg_char_mem(i8* %3, i64 -1, i8 signext %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_char(i8* %1, i8 signext 58) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_char_mem(i8* %1, i64 %2, i8 signext 58) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %options = alloca %struct.quoting_options
  %memtmp = alloca %struct.quoting_options, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %memtmp, i32 %1) nounwind
  %options1 = bitcast %struct.quoting_options* %options to i8*
  %memtmp2 = bitcast %struct.quoting_options* %memtmp to i8*
  %2 = call i8* @memcpy(i8* %options1, i8* %memtmp2, i64 56)
  %3 = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1) nounwind
  %4 = load i32* %n_addr, align 4
  %5 = load i8** %arg_addr, align 8
  %6 = call i8* @quotearg_n_options(i32 %4, i8* %5, i64 -1, %struct.quoting_options* %options) nounwind
  store i8* %6, i8** %0, align 8
  %7 = load i8** %0, align 8
  store i8* %7, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  %4 = load i8** %arg_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 %1, i8* %2, i8* %3, i8* %4, i64 -1) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %1 = call i8* @memcpy(i8* %o1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %2, i8* %3) nounwind
  %4 = load i32* %n_addr, align 4
  %5 = load i8** %arg_addr, align 8
  %6 = load i64* %argsize_addr, align 8
  %7 = call i8* @quotearg_n_options(i32 %4, i8* %5, i64 %6, %struct.quoting_options* %o) nounwind
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_custom(i32 0, i8* %1, i8* %2, i8* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 0, i8* %1, i8* %2, i8* %3, i64 %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @quote_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quote_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quote_n_mem(i32 %1, i8* %2, i64 -1) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quote_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define zeroext i8 @same_name(i8* %source, i8* %dest) nounwind {
entry:
  %source_addr = alloca i8*, align 8
  %dest_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %source, i8** %source_addr
  store i8* %dest, i8** %dest_addr
  %1 = load i8** %source_addr, align 8
  %2 = load i8** %dest_addr, align 8
  %3 = call zeroext i8 @same_nameat(i32 -100, i8* %1, i32 -100, i8* %2) nounwind
  %4 = zext i8 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define zeroext i8 @same_nameat(i32 %source_dfd, i8* %source, i32 %dest_dfd, i8* %dest) nounwind {
entry:
  %source_dfd_addr = alloca i32, align 4
  %source_addr = alloca i8*, align 8
  %dest_dfd_addr = alloca i32, align 4
  %dest_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %source_basename = alloca i8*
  %dest_basename = alloca i8*
  %source_baselen = alloca i64
  %dest_baselen = alloca i64
  %identical_basenames = alloca i8
  %compare_dirs = alloca i8
  %same = alloca i8
  %source_dir_stats = alloca %struct.stat
  %dest_dir_stats = alloca %struct.stat
  %source_dirname = alloca i8*
  %flags = alloca i32
  %dest_dirname = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %source_dfd, i32* %source_dfd_addr
  store i8* %source, i8** %source_addr
  store i32 %dest_dfd, i32* %dest_dfd_addr
  store i8* %dest, i8** %dest_addr
  %1 = load i8** %source_addr, align 8
  %2 = call i8* @last_component(i8* %1) nounwind readonly
  store i8* %2, i8** %source_basename, align 8
  %3 = load i8** %dest_addr, align 8
  %4 = call i8* @last_component(i8* %3) nounwind readonly
  store i8* %4, i8** %dest_basename, align 8
  %5 = load i8** %source_basename, align 8
  %6 = call i64 @base_len(i8* %5) nounwind readonly
  store i64 %6, i64* %source_baselen, align 8
  %7 = load i8** %dest_basename, align 8
  %8 = call i64 @base_len(i8* %7) nounwind readonly
  store i64 %8, i64* %dest_baselen, align 8
  %9 = load i64* %source_baselen, align 8
  %10 = load i64* %dest_baselen, align 8
  %11 = icmp ne i64 %9, %10
  br i1 %11, label %bb2, label %bb

bb:                                               ; preds = %entry
  %12 = load i8** %source_basename, align 8
  %13 = load i8** %dest_basename, align 8
  %14 = load i64* %dest_baselen, align 8
  %15 = call i32 @memcmp(i8* %12, i8* %13, i64 %14) nounwind readonly
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %identical_basenames, align 1
  %19 = load i8* %identical_basenames, align 1
  store i8 %19, i8* %compare_dirs, align 1
  store i8 0, i8* %same, align 1
  %20 = load i8* %compare_dirs, align 1
  %toBool = icmp ne i8 %20, 0
  br i1 %toBool, label %bb4, label %bb13

bb4:                                              ; preds = %bb3
  %21 = load i8** %source_addr, align 8
  %22 = call i8* @dir_name(i8* %21) nounwind
  store i8* %22, i8** %source_dirname, align 8
  store i32 256, i32* %flags, align 4
  %23 = load i32* %source_dfd_addr, align 4
  %24 = load i8** %source_dirname, align 8
  %25 = load i32* %flags, align 4
  %26 = call i32 @fstatat(i32 %23, i8* noalias %24, %struct.stat* noalias %source_dir_stats, i32 %25) nounwind
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %28 = call i32* @__errno_location() nounwind readnone
  %29 = load i32* %28, align 4
  %30 = load i8** %source_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %29, i8* getelementptr inbounds ([3 x i8]* @.str189, i64 0, i64 0), i8* %30) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %31 = load i8** %source_dirname, align 8
  call void @free(i8* %31) nounwind
  %32 = load i8** %dest_addr, align 8
  %33 = call i8* @dir_name(i8* %32) nounwind
  store i8* %33, i8** %dest_dirname, align 8
  %34 = load i32* %dest_dfd_addr, align 4
  %35 = load i8** %dest_dirname, align 8
  %36 = load i32* %flags, align 4
  %37 = call i32 @fstatat(i32 %34, i8* noalias %35, %struct.stat* noalias %dest_dir_stats, i32 %36) nounwind
  %38 = icmp ne i32 %37, 0
  br i1 %38, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %39 = call i32* @__errno_location() nounwind readnone
  %40 = load i32* %39, align 4
  %41 = load i8** %dest_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %40, i8* getelementptr inbounds ([3 x i8]* @.str189, i64 0, i64 0), i8* %41) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %42 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 1
  %43 = load i64* %42, align 8
  %44 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 1
  %45 = load i64* %44, align 8
  %46 = icmp ne i64 %43, %45
  br i1 %46, label %bb11, label %bb9

bb9:                                              ; preds = %bb8
  %47 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 0
  %48 = load i64* %47, align 8
  %49 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 0
  %50 = load i64* %49, align 8
  %51 = icmp ne i64 %48, %50
  br i1 %51, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  store i32 1, i32* %iftmp.1, align 4
  br label %bb12

bb11:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %iftmp.1, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %52 = load i32* %iftmp.1, align 4
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %same, align 1
  %54 = load i8** %dest_dirname, align 8
  call void @free(i8* %54) nounwind
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  %55 = load i8* %same, align 1
  %56 = zext i8 %55 to i32
  store i32 %56, i32* %0, align 4
  %57 = load i32* %0, align 4
  store i32 %57, i32* %retval, align 4
  %retval14 = load i32* %retval
  %retval1415 = trunc i32 %retval14 to i8
  ret i8 %retval1415
}

define i32 @save_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 1
  store i8* null, i8** %2, align 8
  %3 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([2 x i8]* @.str191, i64 0, i64 0), i32 524288) nounwind
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  store i32 %3, i32* %5, align 8
  %6 = load %struct.saved_cwd** %cwd_addr, align 8
  %7 = getelementptr inbounds %struct.saved_cwd* %6, i32 0, i32 0
  %8 = load i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %bb, label %bb4

bb:                                               ; preds = %entry
  %10 = call i8* @getcwd(i8* null, i64 0) nounwind
  %11 = load %struct.saved_cwd** %cwd_addr, align 8
  %12 = getelementptr inbounds %struct.saved_cwd* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 8
  %13 = load %struct.saved_cwd** %cwd_addr, align 8
  %14 = getelementptr inbounds %struct.saved_cwd* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  store i32 -1, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  store i32 %17, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

define i32 @restore_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 0
  %3 = load i32* %2, align 8
  %4 = icmp sge i32 %3, 0
  %5 = load %struct.saved_cwd** %cwd_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = call i32 @fchdir(i32 %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 1
  %10 = load i8** %9, align 8
  %11 = call i32 @chdir_long(i8* %10) nounwind
  store i32 %11, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @free_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %0 = load %struct.saved_cwd** %cwd_addr, align 8
  %1 = getelementptr inbounds %struct.saved_cwd* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = call i32 @close(i32 %6) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load %struct.saved_cwd** %cwd_addr, align 8
  %9 = getelementptr inbounds %struct.saved_cwd* %8, i32 0, i32 1
  %10 = load i8** %9, align 8
  call void @free(i8* %10) nounwind
  ret void
}

define void @version_etc_arn(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 %n_authors, i64* %n_authors_addr
  %0 = load i8** %command_name_addr, align 8
  %1 = icmp ne i8* %0, null
  %2 = load %struct.FILE** %stream_addr, align 8
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i8** %command_name_addr, align 8
  %4 = load i8** %package_addr, align 8
  %5 = load i8** %version_addr, align 8
  %6 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([12 x i8]* @.str195, i64 0, i64 0), i8* %3, i8* %4, i8* %5) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %7 = load i8** %package_addr, align 8
  %8 = load i8** %version_addr, align 8
  %9 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([7 x i8]* @.str1196, i64 0, i64 0), i8* %7, i8* %8) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8]* @.str2197, i64 0, i64 0)) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %10, i32 2018) noun
  %13 = call i8* @gettext(i8* getelementptr inbounds ([204 x i8]* @.str3198, i64 0, i64 0)) nounwind
  %14 = load %struct.FILE** %stream_addr, align 8
  %15 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %13, %struct.FILE* noalias %14) nounwind
  %16 = load i64* %n_authors_addr, align 8
  switch i64 %16, label %bb13 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
  ]

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %17 = load i8*** %authors_addr, align 8
  %18 = getelementptr inbounds i8** %17, i64 0
  %19 = load i8** %18, align 1
  %20 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str4199, i64 0, i64 0)) nounwind
  %21 = load %struct.FILE** %stream_addr, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %21, i8* noalias %20, i8* %19) nounwind
  br label %return

bb5:                                              ; preds = %bb2
  %23 = load i8*** %authors_addr, align 8
  %24 = getelementptr inbounds i8** %23, i64 1
  %25 = load i8** %24, align 1
  %26 = load i8*** %authors_addr, align 8
  %27 = getelementptr inbounds i8** %26, i64 0
  %28 = load i8** %27, align 1
  %29 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str5200, i64 0, i64 0)) nounwind
  %30 = load %struct.FILE** %stream_addr, align 8
  %31 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %30, i8* noalias %29, i8* %28, i8* %25) nounwind
  br label %return

bb6:                                              ; preds = %bb2
  %32 = load i8*** %authors_addr, align 8
  %33 = getelementptr inbounds i8** %32, i64 2
  %34 = load i8** %33, align 1
  %35 = load i8*** %authors_addr, align 8
  %36 = getelementptr inbounds i8** %35, i64 1
  %37 = load i8** %36, align 1
  %38 = load i8*** %authors_addr, align 8
  %39 = getelementptr inbounds i8** %38, i64 0
  %40 = load i8** %39, align 1
  %41 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8]* @.str6201, i64 0, i64 0)) nounwind
  %42 = load %struct.FILE** %stream_addr, align 8
  %43 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias %41, i8* %40, i8* %37, i8* %34) nounwind
  br label %return

bb7:                                              ; preds = %bb2
  %44 = load i8*** %authors_addr, align 8
  %45 = getelementptr inbounds i8** %44, i64 3
  %46 = load i8** %45, align 1
  %47 = load i8*** %authors_addr, align 8
  %48 = getelementptr inbounds i8** %47, i64 2
  %49 = load i8** %48, align 1
  %50 = load i8*** %authors_addr, align 8
  %51 = getelementptr inbounds i8** %50, i64 1
  %52 = load i8** %51, align 1
  %53 = load i8*** %authors_addr, align 8
  %54 = getelementptr inbounds i8** %53, i64 0
  %55 = load i8** %54, align 1
  %56 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8]* @.str7202, i64 0, i64 0)) nounwind
  %57 = load %struct.FILE** %stream_addr, align 8
  %58 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %57, i8* noalias %56, i8* %55, i8* %52, i8* %49, i8* %46) nounwind
  br label %return

bb8:                                              ; preds = %bb2
  %59 = load i8*** %authors_addr, align 8
  %60 = getelementptr inbounds i8** %59, i64 4
  %61 = load i8** %60, align 1
  %62 = load i8*** %authors_addr, align 8
  %63 = getelementptr inbounds i8** %62, i64 3
  %64 = load i8** %63, align 1
  %65 = load i8*** %authors_addr, align 8
  %66 = getelementptr inbounds i8** %65, i64 2
  %67 = load i8** %66, align 1
  %68 = load i8*** %authors_addr, align 8
  %69 = getelementptr inbounds i8** %68, i64 1
  %70 = load i8** %69, align 1
  %71 = load i8*** %authors_addr, align 8
  %72 = getelementptr inbounds i8** %71, i64 0
  %73 = load i8** %72, align 1
  %74 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str8203, i64 0, i64 0)) nounwind
  %75 = load %struct.FILE** %stream_addr, align 8
  %76 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %75, i8* noalias %74, i8* %73, i8* %70, i8* %67, i8* %64, i8* %61) nounwind
  br label %return

bb9:                                              ; preds = %bb2
  %77 = load i8*** %authors_addr, align 8
  %78 = getelementptr inbounds i8** %77, i64 5
  %79 = load i8** %78, align 1
  %80 = load i8*** %authors_addr, align 8
  %81 = getelementptr inbounds i8** %80, i64 4
  %82 = load i8** %81, align 1
  %83 = load i8*** %authors_addr, align 8
  %84 = getelementptr inbounds i8** %83, i64 3
  %85 = load i8** %84, align 1
  %86 = load i8*** %authors_addr, align 8
  %87 = getelementptr inbounds i8** %86, i64 2
  %88 = load i8** %87, align 1
  %89 = load i8*** %authors_addr, align 8
  %90 = getelementptr inbounds i8** %89, i64 1
  %91 = load i8** %90, align 1
  %92 = load i8*** %authors_addr, align 8
  %93 = getelementptr inbounds i8** %92, i64 0
  %94 = load i8** %93, align 1
  %95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8]* @.str9204, i64 0, i64 0)) nounwind
  %96 = load %struct.FILE** %stream_addr, align 8
  %97 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %96, i8* noalias %95, i8* %94, i8* %91, i8* %88, i8* %85, i8* %82, i8* %79) nounwind
  br label %return

bb10:                                             ; preds = %bb2
  %98 = load i8*** %authors_addr, align 8
  %99 = getelementptr inbounds i8** %98, i64 6
  %100 = load i8** %99, align 1
  %101 = load i8*** %authors_addr, align 8
  %102 = getelementptr inbounds i8** %101, i64 5
  %103 = load i8** %102, align 1
  %104 = load i8*** %authors_addr, align 8
  %105 = getelementptr inbounds i8** %104, i64 4
  %106 = load i8** %105, align 1
  %107 = load i8*** %authors_addr, align 8
  %108 = getelementptr inbounds i8** %107, i64 3
  %109 = load i8** %108, align 1
  %110 = load i8*** %authors_addr, align 8
  %111 = getelementptr inbounds i8** %110, i64 2
  %112 = load i8** %111, align 1
  %113 = load i8*** %authors_addr, align 8
  %114 = getelementptr inbounds i8** %113, i64 1
  %115 = load i8** %114, align 1
  %116 = load i8*** %authors_addr, align 8
  %117 = getelementptr inbounds i8** %116, i64 0
  %118 = load i8** %117, align 1
  %119 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8]* @.str10205, i64 0, i64 0)) nounwind
  %120 = load %struct.FILE** %stream_addr, align 8
  %121 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %120, i8* noalias %119, i8* %118, i8* %115, i8* %112, i8* %109, i8* %106, i8* %103, i8* %100) nounwind
  br label %return

bb11:                                             ; preds = %bb2
  %122 = load i8*** %authors_addr, align 8
  %123 = getelementptr inbounds i8** %122, i64 7
  %124 = load i8** %123, align 1
  %125 = load i8*** %authors_addr, align 8
  %126 = getelementptr inbounds i8** %125, i64 6
  %127 = load i8** %126, align 1
  %128 = load i8*** %authors_addr, align 8
  %129 = getelementptr inbounds i8** %128, i64 5
  %130 = load i8** %129, align 1
  %131 = load i8*** %authors_addr, align 8
  %132 = getelementptr inbounds i8** %131, i64 4
  %133 = load i8** %132, align 1
  %134 = load i8*** %authors_addr, align 8
  %135 = getelementptr inbounds i8** %134, i64 3
  %136 = load i8** %135, align 1
  %137 = load i8*** %authors_addr, align 8
  %138 = getelementptr inbounds i8** %137, i64 2
  %139 = load i8** %138, align 1
  %140 = load i8*** %authors_addr, align 8
  %141 = getelementptr inbounds i8** %140, i64 1
  %142 = load i8** %141, align 1
  %143 = load i8*** %authors_addr, align 8
  %144 = getelementptr inbounds i8** %143, i64 0
  %145 = load i8** %144, align 1
  %146 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8]* @.str11206, i64 0, i64 0)) nounwind
  %147 = load %struct.FILE** %stream_addr, align 8
  %148 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %147, i8* noalias %146, i8* %145, i8* %142, i8* %139, i8* %136, i8* %133, i8* %130, i8* %127, i8* %124) nounwind
  br label %return

bb12:                                             ; preds = %bb2
  %149 = load i8*** %authors_addr, align 8
  %150 = getelementptr inbounds i8** %149, i64 8
  %151 = load i8** %150, align 1
  %152 = load i8*** %authors_addr, align 8
  %153 = getelementptr inbounds i8** %152, i64 7
  %154 = load i8** %153, align 1
  %155 = load i8*** %authors_addr, align 8
  %156 = getelementptr inbounds i8** %155, i64 6
  %157 = load i8** %156, align 1
  %158 = load i8*** %authors_addr, align 8
  %159 = getelementptr inbounds i8** %158, i64 5
  %160 = load i8** %159, align 1
  %161 = load i8*** %authors_addr, align 8
  %162 = getelementptr inbounds i8** %161, i64 4
  %163 = load i8** %162, align 1
  %164 = load i8*** %authors_addr, align 8
  %165 = getelementptr inbounds i8** %164, i64 3
  %166 = load i8** %165, align 1
  %167 = load i8*** %authors_addr, align 8
  %168 = getelementptr inbounds i8** %167, i64 2
  %169 = load i8** %168, align 1
  %170 = load i8*** %authors_addr, align 8
  %171 = getelementptr inbounds i8** %170, i64 1
  %172 = load i8** %171, align 1
  %173 = load i8*** %authors_addr, align 8
  %174 = getelementptr inbounds i8** %173, i64 0
  %175 = load i8** %174, align 1
  %176 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str12207, i64 0, i64 0)) nounwind
  %177 = load %struct.FILE** %stream_addr, align 8
  %178 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %177, i8* noalias %176, i8* %175, i8* %172, i8* %169, i8* %166, i8* %163, i8* %160, i8* %157, i8* %154, i8* %151)
  br label %return

bb13:                                             ; preds = %bb2
  %179 = load i8*** %authors_addr, align 8
  %180 = getelementptr inbounds i8** %179, i64 8
  %181 = load i8** %180, align 1
  %182 = load i8*** %authors_addr, align 8
  %183 = getelementptr inbounds i8** %182, i64 7
  %184 = load i8** %183, align 1
  %185 = load i8*** %authors_addr, align 8
  %186 = getelementptr inbounds i8** %185, i64 6
  %187 = load i8** %186, align 1
  %188 = load i8*** %authors_addr, align 8
  %189 = getelementptr inbounds i8** %188, i64 5
  %190 = load i8** %189, align 1
  %191 = load i8*** %authors_addr, align 8
  %192 = getelementptr inbounds i8** %191, i64 4
  %193 = load i8** %192, align 1
  %194 = load i8*** %authors_addr, align 8
  %195 = getelementptr inbounds i8** %194, i64 3
  %196 = load i8** %195, align 1
  %197 = load i8*** %authors_addr, align 8
  %198 = getelementptr inbounds i8** %197, i64 2
  %199 = load i8** %198, align 1
  %200 = load i8*** %authors_addr, align 8
  %201 = getelementptr inbounds i8** %200, i64 1
  %202 = load i8** %201, align 1
  %203 = load i8*** %authors_addr, align 8
  %204 = getelementptr inbounds i8** %203, i64 0
  %205 = load i8** %204, align 1
  %206 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8]* @.str13208, i64 0, i64 0)) nounwind
  %207 = load %struct.FILE** %stream_addr, align 8
  %208 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %207, i8* noalias %206, i8* %205, i8* %202, i8* %199, i8* %196, i8* %193, i8* %190, i8* %187, i8* %184, i8* %181)
  br label %return

return:                                           ; preds = %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13
  ret void
}

define void @version_etc_ar(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i8*** %authors_addr, align 8
  %3 = load i64* %n_authors, align 8
  %4 = getelementptr inbounds i8** %2, i64 %3
  %5 = load i8** %4, align 1
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load %struct.FILE** %stream_addr, align 8
  %8 = load i8** %command_name_addr, align 8
  %9 = load i8** %package_addr, align 8
  %10 = load i8** %version_addr, align 8
  %11 = load i8*** %authors_addr, align 8
  %12 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %7, i8* %8, i8* %9, i8* %10, i8** %11, i64 %12) nounwind
  ret void
}

define void @version_etc_va(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca %struct.__va_list_tag*, align 8
  %addr.16 = alloca i8*
  %n_authors = alloca i64
  %authtab = alloca [10 x i8*]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb5
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i64* %n_authors, align 8
  %3 = icmp ugt i64 %2, 9
  br i1 %3, label %bb6, label %bb2

bb2:                                              ; preds = %bb1
  %4 = load i64* %n_authors, align 8
  %5 = load %struct.__va_list_tag** %authors_addr, align 8
  %6 = getelementptr inbounds %struct.__va_list_tag* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = icmp uge i32 %7, 48
  %9 = load %struct.__va_list_tag** %authors_addr, align 8
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 3
  %11 = load i8** %10, align 8
  %12 = load %struct.__va_list_tag** %authors_addr, align 8
  %13 = getelementptr inbounds %struct.__va_list_tag* %12, i32 0, i32 0
  %14 = load i32* %13, align 8
  %15 = inttoptr i32 %14 to i8*
  %16 = ptrtoint i8* %11 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = add i64 %16, %17
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %addr.16, align 8
  %20 = load %struct.__va_list_tag** %authors_addr, align 8
  %21 = getelementptr inbounds %struct.__va_list_tag* %20, i32 0, i32 0
  %22 = load i32* %21, align 8
  %23 = add i32 %22, 8
  %24 = load %struct.__va_list_tag** %authors_addr, align 8
  %25 = getelementptr inbounds %struct.__va_list_tag* %24, i32 0, i32 0
  store i32 %23, i32* %25, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %26 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 2
  %27 = load i8** %26, align 8
  store i8* %27, i8** %addr.16, align 8
  %28 = getelementptr inbounds i8* %27, i64 8
  %29 = load %struct.__va_list_tag** %authors_addr, align 8
  %30 = getelementptr inbounds %struct.__va_list_tag* %29, i32 0, i32 2
  store i8* %28, i8** %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %31 = load i8** %addr.16, align 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8** %32, align 8
  %34 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  %36 = load i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %bb, label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %38 = load %struct.FILE** %stream_addr, align 8
  %39 = load i8** %command_name_addr, align 8
  %40 = load i8** %package_addr, align 8
  %41 = load i8** %version_addr, align 8
  %authtab7 = bitcast [10 x i8*]* %authtab to i8**
  %42 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %38, i8* %39, i8* %40, i8* %41, i8** %authtab7, i64 %42) nounwind
  ret void
}

define void @version_etc(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  %authors1 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors12 = bitcast %struct.__va_list_tag* %authors1 to i8*
  call void @llvm.va_start(i8* %authors12)
  %0 = load %struct.FILE** %stream_addr, align 8
  %1 = load i8** %command_name_addr, align 8
  %2 = load i8** %package_addr, align 8
  %3 = load i8** %version_addr, align 8
  %authors3 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  call void @version_etc_va(%struct.FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %authors3) nounwind
  %authors4 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors45 = bitcast %struct.__va_list_tag* %authors4 to i8*
  call void @llvm.va_end(i8* %authors45)
  ret void
}

declare void @llvm.va_start(i8*) nounwind

declare void @llvm.va_end(i8*) nounwind

define void @emit_bug_reporting_address() nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str14209, i64 0, i64 0)) nounwind
  %1 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* getelementptr inbounds ([22 x i8]* @.str15210, i64 0, i64 0)) nounwind
  %2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str16211, i64 0, i64 0)) nounwind
  %3 = call i32 (i8*, ...)* @printf(i8* noalias %2, i8* getelementptr inbounds ([14 x i8]* @.str17212, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8]* @.str18213, i64 0, i64 0)) nounwind
  %4 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %5 = call i8* @gettext(i8* getelementptr inbounds ([65 x i8]* @.str19214, i64 0, i64 0)) nounwind
  %6 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %5, %struct.FILE* noalias %4) nounwind
  ret void
}

define noalias i8* @xnmalloc(i64 %n, i64 %s) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 9223372036854775807, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = call noalias i8* @xmalloc(i64 %9) nounwind
  store i8* %10, i8** %0, align 8
  %11 = load i8** %0, align 8
  store i8* %11, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @xnrealloc(i8* %p, i64 %n, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 9223372036854775807, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = load i8** %p_addr, align 8
  %11 = call i8* @xrealloc(i8* %10, i64 %9) nounwind
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  store i64 %s, i64* %s_addr
  %1 = load i64** %pn_addr, align 8
  %2 = load i64* %1, align 8
  store i64 %2, i64* %n, align 8
  %3 = load i8** %p_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb5

bb:                                               ; preds = %entry
  %5 = load i64* %n, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %7 to i64
  %8 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %9 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %9, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %10 = udiv i64 128, %7
  store i64 %10, i64* %n, align 8
  %11 = load i64* %n, align 8
  %12 = icmp eq i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = load i64* %n, align 8
  %15 = add i64 %13, %14
  store i64 %15, i64* %n, align 8
  br label %bb2

bb2:                                              ; preds = %klee_div_zero_check.exit, %bb
  %16 = load i64* %s_addr, align 8
  %int_cast_to_i641 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %18, label %bb.i4, label %klee_div_zero_check.exit5

bb.i4:                                            ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit5:                        ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %19 = udiv i64 9223372036854775807, %16
  %20 = load i64* %n, align 8
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %bb3, label %bb8

bb3:                                              ; preds = %klee_div_zero_check.exit5
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %entry
  %22 = load i64* %s_addr, align 8
  %int_cast_to_i642 = bitcast i64 %22 to i64
  %23 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %24 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %24, label %bb.i6, label %klee_div_zero_check.exit7

bb.i6:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit7:                        ; preds = %bb5
  call void @klee_disable_symbex() nounwind
  %25 = udiv i64 6148914691236517204, %22
  %26 = load i64* %n, align 8
  %27 = icmp ule i64 %25, %26
  br i1 %27, label %bb6, label %bb7

bb6:                                              ; preds = %klee_div_zero_check.exit7
  call void @xalloc_die() noreturn nounwind
  unreachable

bb7:                                              ; preds = %klee_div_zero_check.exit7
  %28 = load i64* %n, align 8
  %int_cast_to_i643 = bitcast i64 2 to i64
  %29 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %30 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %30, label %bb.i8, label %klee_div_zero_check.exit9

bb.i8:                                            ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit9:                        ; preds = %bb7
  call void @klee_disable_symbex() nounwind
  %31 = udiv i64 %28, 2
  %32 = load i64* %n, align 8
  %33 = add i64 %31, %32
  %34 = add i64 %33, 1
  store i64 %34, i64* %n, align 8
  br label %bb8

bb8:                                              ; preds = %klee_div_zero_check.exit5, %klee_div_zero_check.exit9
  %35 = load i64** %pn_addr, align 8
  %36 = load i64* %n, align 8
  store i64 %36, i64* %35, align 8
  %37 = load i64* %n, align 8
  %38 = load i64* %s_addr, align 8
  %39 = mul i64 %37, %38
  %40 = load i8** %p_addr, align 8
  %41 = call i8* @xrealloc(i8* %40, i64 %39) nounwind
  store i8* %41, i8** %0, align 8
  %42 = load i8** %0, align 8
  store i8* %42, i8** %retval, align 8
  %retval9 = load i8** %retval
  ret i8* %retval9
}

define noalias i8* @xcharalloc(i64 %n) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xmalloc(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @malloc(i64 %1) nounwind
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %5 = load i64* %n_addr, align 8
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %7 = load i8** %p, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xrealloc(i8* %p, i64 %n) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  %3 = load i8** %p_addr, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %5 = load i8** %p_addr, align 8
  call void @free(i8* %5) nounwind
  store i8* null, i8** %0, align 8
  br label %bb6

bb2:                                              ; preds = %bb, %entry
  %6 = load i8** %p_addr, align 8
  %7 = load i64* %n_addr, align 8
  %8 = call i8* @realloc(i8* %6, i64 %7) nounwind
  store i8* %8, i8** %p_addr, align 8
  %9 = load i8** %p_addr, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %11 = load i64* %n_addr, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %bb3, %bb2
  %13 = load i8** %p_addr, align 8
  store i8* %13, i8** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %14 = load i8** %0, align 8
  store i8* %14, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define i8* @x2realloc(i8* %p, i64* %pn) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  %1 = load i8** %p_addr, align 8
  %2 = load i64** %pn_addr, align 8
  %3 = call i8* @x2nrealloc(i8* %1, i64* %2, i64 1) nounwind inlinehint
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xzalloc(i64 %s) nounwind {
entry:
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i64* %s_addr, align 8
  %4 = call i8* @memset(i8* %2, i32 0, i64 %3)
  store i8* %2, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xcalloc(i64 %n, i64 %s) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 9223372036854775807, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb1, label %bb

bb:                                               ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = call noalias i8* @calloc(i64 %7, i64 %8) nounwind
  store i8* %9, i8** %p, align 8
  %10 = load i8** %p, align 8
  %11 = icmp ne i8* %10, null
  br i1 %11, label %bb2, label %bb1

bb1:                                              ; preds = %bb, %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb
  %12 = load i8** %p, align 8
  store i8* %12, i8** %0, align 8
  %13 = load i8** %0, align 8
  store i8* %13, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xmemdup(i8* %p, i64 %s) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i8** %p_addr, align 8
  %4 = load i64* %s_addr, align 8
  %5 = call i8* @memcpy(i8* %2, i8* %3, i64 %4)
  store i8* %2, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xstrdup(i8* %string) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  %1 = load i8** %string_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = add i64 %2, 1
  %4 = load i8** %string_addr, align 8
  %5 = call i8* @xmemdup(i8* %4, i64 %3) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define void @xalloc_die() noreturn nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str224, i64 0, i64 0)) nounwind
  %1 = volatile load i32* @exit_failure, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str1225, i64 0, i64 0), i8* %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define i8* @xgetcwd() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %cwd = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @getcwd(i8* null, i64 0) nounwind
  store i8* %1, i8** %cwd, align 8
  %2 = load i8** %cwd, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb2

bb:                                               ; preds = %entry
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp eq i32 %5, 12
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %7 = load i8** %cwd, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define internal void @xstrtol_error(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg, i32 %exit_status) nounwind {
entry:
  %err_addr = alloca i32, align 4
  %opt_idx_addr = alloca i32, align 4
  %c_addr = alloca i8, align 1
  %long_options_addr = alloca %struct.option*, align 8
  %arg_addr = alloca i8*, align 8
  %exit_status_addr = alloca i32, align 4
  %hyphens = alloca i8*
  %msgid = alloca i8*
  %option = alloca i8*
  %option_buffer = alloca [2 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  store i32 %opt_idx, i32* %opt_idx_addr
  store i8 %c, i8* %c_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i8* %arg, i8** %arg_addr
  store i32 %exit_status, i32* %exit_status_addr
  store i8* getelementptr inbounds ([3 x i8]* @.str228, i64 0, i64 0), i8** %hyphens, align 8
  %0 = load i32* %err_addr, align 4
  switch i32 %0, label %bb [
    i32 1, label %bb3
    i32 2, label %bb2
    i32 3, label %bb2
    i32 4, label %bb1
  ]

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  store i8* getelementptr inbounds ([27 x i8]* @.str1229, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb2:                                              ; preds = %entry, %entry
  store i8* getelementptr inbounds ([37 x i8]* @.str2230, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb3:                                              ; preds = %entry
  store i8* getelementptr inbounds ([29 x i8]* @.str3231, i64 0, i64 0), i8** %msgid, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb1
  %1 = load i32* %opt_idx_addr, align 4
  %2 = icmp slt i32 %1, 0
  br i1 %2, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %3 = load i32* %opt_idx_addr, align 4
  %4 = sext i32 %3 to i64
  %5 = sub nsw i64 0, %4
  %6 = load i8** %hyphens, align 8
  %7 = getelementptr inbounds i8* %6, i64 %5
  store i8* %7, i8** %hyphens, align 8
  %8 = getelementptr inbounds [2 x i8]* %option_buffer, i64 0, i64 0
  %9 = load i8* %c_addr, align 1
  store i8 %9, i8* %8, align 1
  %10 = getelementptr inbounds [2 x i8]* %option_buffer, i64 0, i64 1
  store i8 0, i8* %10, align 1
  %option_buffer6 = bitcast [2 x i8]* %option_buffer to i8*
  store i8* %option_buffer6, i8** %option, align 8
  br label %bb8

bb7:                                              ; preds = %bb4
  %11 = load %struct.option** %long_options_addr, align 8
  %12 = load i32* %opt_idx_addr, align 4
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds %struct.option* %11, i64 %13
  %15 = getelementptr inbounds %struct.option* %14, i32 0, i32 0
  %16 = load i8** %15, align 8
  store i8* %16, i8** %option, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %17 = load i8** %msgid, align 8
  %18 = call i8* @gettext(i8* %17) nounwind
  %19 = load i32* %exit_status_addr, align 4
  %20 = load i8** %hyphens, align 8
  %21 = load i8** %option, align 8
  %22 = load i8** %arg_addr, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 %19, i32 0, i8* %18, i8* %20, i8* %21, i8* %22) nounwind
  ret void
}

define void @xstrtol_fatal(i32 %err, i32 %opt_idx, i8 signext %c, %struct.option* %long_options, i8* %arg) noreturn nounwind {
entry:
  %err_addr = alloca i32, align 4
  %opt_idx_addr = alloca i32, align 4
  %c_addr = alloca i8, align 1
  %long_options_addr = alloca %struct.option*, align 8
  %arg_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  store i32 %opt_idx, i32* %opt_idx_addr
  store i8 %c, i8* %c_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i8* %arg, i8** %arg_addr
  %0 = volatile load i32* @exit_failure, align 4
  %1 = load i8* %c_addr, align 1
  %2 = sext i8 %1 to i32
  %3 = load i32* %err_addr, align 4
  %4 = load i32* %opt_idx_addr, align 4
  %5 = trunc i32 %2 to i8
  %6 = load %struct.option** %long_options_addr, align 8
  %7 = load i8** %arg_addr, align 8
  call void @xstrtol_error(i32 %3, i32 %4, i8 signext %5, %struct.option* %6, i8* %7, i32 %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define internal i32 @bkm_scale(i64* %x, i32 %scale_factor) nounwind {
entry:
  %x_addr = alloca i64*, align 8
  %scale_factor_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64* %x, i64** %x_addr
  store i32 %scale_factor, i32* %scale_factor_addr
  %1 = load i32* %scale_factor_addr, align 4
  %2 = sext i32 %1 to i64
  %int_cast_to_i64 = bitcast i64 %2 to i64
  %3 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %4 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %4, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %5 = udiv i64 -1, %2
  %6 = load i64** %x_addr, align 8
  %7 = load i64* %6, align 8
  %8 = icmp ult i64 %5, %7
  %9 = load i64** %x_addr, align 8
  br i1 %8, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  store i64 -1, i64* %9, align 8
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %klee_div_zero_check.exit
  %10 = load i64* %9, align 8
  %11 = load i32* %scale_factor_addr, align 4
  %12 = sext i32 %11 to i64
  %13 = mul i64 %10, %12
  %14 = load i64** %x_addr, align 8
  store i64 %13, i64* %14, align 8
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i32 @bkm_scale_by_power(i64* %x, i32 %base, i32 %power) nounwind {
entry:
  %x_addr = alloca i64*, align 8
  %base_addr = alloca i32, align 4
  %power_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64* %x, i64** %x_addr
  store i32 %base, i32* %base_addr
  store i32 %power, i32* %power_addr
  store i32 0, i32* %err, align 4
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = load i64** %x_addr, align 8
  %2 = load i32* %base_addr, align 4
  %3 = call i32 @bkm_scale(i64* %1, i32 %2) nounwind
  %4 = load i32* %err, align 4
  %5 = or i32 %3, %4
  store i32 %5, i32* %err, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %6 = load i32* %power_addr, align 4
  %7 = sub nsw i32 %6, 1
  store i32 %7, i32* %power_addr, align 4
  %8 = load i32* %power_addr, align 4
  %9 = icmp ne i32 %8, -1
  br i1 %9, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %10 = load i32* %err, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @xstrtoumax(i8* %s, i8** %ptr, i32 %strtol_base, i64* %val, i8* %valid_suffixes) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %ptr_addr = alloca i8**, align 8
  %strtol_base_addr = alloca i32, align 4
  %val_addr = alloca i64*, align 8
  %valid_suffixes_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.0 = alloca i8**
  %t_ptr = alloca i8*
  %p = alloca i8**
  %tmp = alloca i64
  %err = alloca i32
  %q = alloca i8*
  %ch = alloca i8
  %base = alloca i32
  %suffixes = alloca i32
  %overflow = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i8** %ptr, i8*** %ptr_addr
  store i32 %strtol_base, i32* %strtol_base_addr
  store i64* %val, i64** %val_addr
  store i8* %valid_suffixes, i8** %valid_suffixes_addr
  store i32 0, i32* %err, align 4
  %1 = load i32* %strtol_base_addr, align 4
  %2 = icmp slt i32 %1, 0
  %3 = load i32* %strtol_base_addr, align 4
  %4 = icmp sgt i32 %3, 36
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb2, label %bb1

bb1:                                              ; preds = %entry
  %5 = load i8*** %ptr_addr, align 8
  %6 = icmp eq i8** %5, null
  br i1 %6, label %bb3, label %bb4

bb2:                                              ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8]* @.str233, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1234, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3299, i64 0, i64 0)) noreturn 
  unreachable

bb3:                                              ; preds = %bb1
  store i8** %t_ptr, i8*** %iftmp.0, align 8
  br label %bb5

bb4:                                              ; preds = %bb1
  %7 = load i8*** %ptr_addr, align 8
  store i8** %7, i8*** %iftmp.0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %8 = load i8*** %iftmp.0, align 8
  store i8** %8, i8*** %p, align 8
  %9 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %9, align 4
  %10 = load i8** %s_addr, align 8
  store i8* %10, i8** %q, align 8
  %11 = load i8** %q, align 8
  %12 = load i8* %11, align 1
  store i8 %12, i8* %ch, align 1
  br label %bb7

bb6:                                              ; preds = %bb7
  %13 = load i8** %q, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  store i8* %14, i8** %q, align 8
  %15 = load i8** %q, align 8
  %16 = load i8* %15, align 1
  store i8 %16, i8* %ch, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %17 = call i16** @__ctype_b_loc() nounwind readnone
  %18 = load i16** %17, align 8
  %19 = load i8* %ch, align 1
  %20 = zext i8 %19 to i32
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i16* %18, i64 %21
  %23 = load i16* %22, align 1
  %24 = zext i16 %23 to i32
  %25 = and i32 %24, 8192
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %bb6, label %bb8

bb8:                                              ; preds = %bb7
  %27 = load i8* %ch, align 1
  %28 = icmp eq i8 %27, 45
  br i1 %28, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i32 4, i32* %0, align 4
  br label %bb49

bb10:                                             ; preds = %bb8
  %29 = load i8** %s_addr, align 8
  %30 = load i8*** %p, align 8
  %31 = load i32* %strtol_base_addr, align 4
  %32 = call i64 @strtoul(i8* noalias %29, i8** noalias %30, i32 %31) nounwind
  store i64 %32, i64* %tmp, align 8
  %33 = load i8*** %p, align 8
  %34 = load i8** %33, align 8
  %35 = load i8** %s_addr, align 8
  %36 = icmp eq i8* %34, %35
  br i1 %36, label %bb11, label %bb16

bb11:                                             ; preds = %bb10
  %37 = load i8** %valid_suffixes_addr, align 8
  %38 = icmp eq i8* %37, null
  br i1 %38, label %bb15, label %bb12

bb12:                                             ; preds = %bb11
  %39 = load i8*** %p, align 8
  %40 = load i8** %39, align 8
  %41 = load i8* %40, align 1
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %bb15, label %bb13

bb13:                                             ; preds = %bb12
  %43 = load i8*** %p, align 8
  %44 = load i8** %43, align 8
  %45 = load i8* %44, align 1
  %46 = sext i8 %45 to i32
  %47 = load i8** %valid_suffixes_addr, align 8
  %48 = call i8* @strchr(i8* %47, i32 %46) nounwind readonly
  %49 = icmp eq i8* %48, null
  br i1 %49, label %bb15, label %bb14

bb14:                                             ; preds = %bb13
  store i64 1, i64* %tmp, align 8
  br label %bb20

bb15:                                             ; preds = %bb13, %bb12, %bb11
  store i32 4, i32* %0, align 4
  br label %bb49

bb16:                                             ; preds = %bb10
  %50 = call i32* @__errno_location() nounwind readnone
  %51 = load i32* %50, align 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %bb17, label %bb20

bb17:                                             ; preds = %bb16
  %53 = call i32* @__errno_location() nounwind readnone
  %54 = load i32* %53, align 4
  %55 = icmp ne i32 %54, 34
  br i1 %55, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  store i32 4, i32* %0, align 4
  br label %bb49

bb19:                                             ; preds = %bb17
  store i32 1, i32* %err, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb16, %bb14
  %56 = load i8** %valid_suffixes_addr, align 8
  %57 = icmp eq i8* %56, null
  br i1 %57, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %58 = load i64* %tmp, align 8
  %59 = load i64** %val_addr, align 8
  store i64 %58, i64* %59, align 8
  %60 = load i32* %err, align 4
  store i32 %60, i32* %0, align 4
  br label %bb49

bb22:                                             ; preds = %bb20
  %61 = load i8*** %p, align 8
  %62 = load i8** %61, align 8
  %63 = load i8* %62, align 1
  %64 = icmp ne i8 %63, 0
  br i1 %64, label %bb23, label %bb48

bb23:                                             ; preds = %bb22
  store i32 1024, i32* %base, align 4
  store i32 1, i32* %suffixes, align 4
  %65 = load i8*** %p, align 8
  %66 = load i8** %65, align 8
  %67 = load i8* %66, align 1
  %68 = sext i8 %67 to i32
  %69 = load i8** %valid_suffixes_addr, align 8
  %70 = call i8* @strchr(i8* %69, i32 %68) nounwind readonly
  %71 = icmp eq i8* %70, null
  br i1 %71, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %72 = load i64* %tmp, align 8
  %73 = load i64** %val_addr, align 8
  store i64 %72, i64* %73, align 8
  %74 = load i32* %err, align 4
  %75 = or i32 %74, 2
  store i32 %75, i32* %0, align 4
  br label %bb49

bb25:                                             ; preds = %bb23
  %76 = load i8*** %p, align 8
  %77 = load i8** %76, align 8
  %78 = load i8* %77, align 1
  %79 = sext i8 %78 to i32
  switch i32 %79, label %bb32 [
    i32 69, label %bb26
    i32 71, label %bb26
    i32 75, label %bb26
    i32 77, label %bb26
    i32 80, label %bb26
    i32 84, label %bb26
    i32 89, label %bb26
    i32 90, label %bb26
    i32 103, label %bb26
    i32 107, label %bb26
    i32 109, label %bb26
    i32 116, label %bb26
  ]

bb26:                                             ; preds = %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25, %bb25
  %80 = load i8** %valid_suffixes_addr, align 8
  %81 = call i8* @strchr(i8* %80, i32 48) nounwind readonly
  %82 = icmp ne i8* %81, null
  br i1 %82, label %bb27, label %bb32

bb27:                                             ; preds = %bb26
  %83 = load i8*** %p, align 8
  %84 = getelementptr inbounds i8** %83, i64 0
  %85 = load i8** %84, align 1
  %86 = getelementptr inbounds i8* %85, i64 1
  %87 = load i8* %86, align 1
  %88 = sext i8 %87 to i32
  switch i32 %88, label %bb32 [
    i32 66, label %bb31
    i32 68, label %bb31
    i32 105, label %bb28
  ]

bb28:                                             ; preds = %bb27
  %89 = load i8*** %p, align 8
  %90 = getelementptr inbounds i8** %89, i64 0
  %91 = load i8** %90, align 1
  %92 = getelementptr inbounds i8* %91, i64 2
  %93 = load i8* %92, align 1
  %94 = icmp eq i8 %93, 66
  br i1 %94, label %bb29, label %bb32

bb29:                                             ; preds = %bb28
  %95 = load i32* %suffixes, align 4
  %96 = add nsw i32 %95, 2
  store i32 %96, i32* %suffixes, align 4
  br label %bb32

bb31:                                             ; preds = %bb27, %bb27
  store i32 1000, i32* %base, align 4
  %97 = load i32* %suffixes, align 4
  %98 = add nsw i32 %97, 1
  store i32 %98, i32* %suffixes, align 4
  br label %bb32

bb32:                                             ; preds = %bb28, %bb29, %bb31, %bb27, %bb26, %bb25
  %99 = load i8*** %p, align 8
  %100 = load i8** %99, align 8
  %101 = load i8* %100, align 1
  %102 = sext i8 %101 to i32
  switch i32 %102, label %bb45 [
    i32 66, label %bb34
    i32 69, label %bb36
    i32 71, label %bb37
    i32 75, label %bb38
    i32 77, label %bb39
    i32 80, label %bb40
    i32 84, label %bb41
    i32 89, label %bb43
    i32 90, label %bb44
    i32 98, label %bb33
    i32 99, label %bb35
    i32 103, label %bb37
    i32 107, label %bb38
    i32 109, label %bb39
    i32 116, label %bb41
    i32 119, label %bb42
  ]

bb33:                                             ; preds = %bb32
  %103 = call i32 @bkm_scale(i64* %tmp, i32 512) nounwind
  store i32 %103, i32* %overflow, align 4
  br label %bb46

bb34:                                             ; preds = %bb32
  %104 = call i32 @bkm_scale(i64* %tmp, i32 1024) nounwind
  store i32 %104, i32* %overflow, align 4
  br label %bb46

bb35:                                             ; preds = %bb32
  store i32 0, i32* %overflow, align 4
  br label %bb46

bb36:                                             ; preds = %bb32
  %105 = load i32* %base, align 4
  %106 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %105, i32 6) nounwind
  store i32 %106, i32* %overflow, align 4
  br label %bb46

bb37:                                             ; preds = %bb32, %bb32
  %107 = load i32* %base, align 4
  %108 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %107, i32 3) nounwind
  store i32 %108, i32* %overflow, align 4
  br label %bb46

bb38:                                             ; preds = %bb32, %bb32
  %109 = load i32* %base, align 4
  %110 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %109, i32 1) nounwind
  store i32 %110, i32* %overflow, align 4
  br label %bb46

bb39:                                             ; preds = %bb32, %bb32
  %111 = load i32* %base, align 4
  %112 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %111, i32 2) nounwind
  store i32 %112, i32* %overflow, align 4
  br label %bb46

bb40:                                             ; preds = %bb32
  %113 = load i32* %base, align 4
  %114 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %113, i32 5) nounwind
  store i32 %114, i32* %overflow, align 4
  br label %bb46

bb41:                                             ; preds = %bb32, %bb32
  %115 = load i32* %base, align 4
  %116 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %115, i32 4) nounwind
  store i32 %116, i32* %overflow, align 4
  br label %bb46

bb42:                                             ; preds = %bb32
  %117 = call i32 @bkm_scale(i64* %tmp, i32 2) nounwind
  store i32 %117, i32* %overflow, align 4
  br label %bb46

bb43:                                             ; preds = %bb32
  %118 = load i32* %base, align 4
  %119 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %118, i32 8) nounwind
  store i32 %119, i32* %overflow, align 4
  br label %bb46

bb44:                                             ; preds = %bb32
  %120 = load i32* %base, align 4
  %121 = call i32 @bkm_scale_by_power(i64* %tmp, i32 %120, i32 7) nounwind
  store i32 %121, i32* %overflow, align 4
  br label %bb46

bb45:                                             ; preds = %bb32
  %122 = load i64* %tmp, align 8
  %123 = load i64** %val_addr, align 8
  store i64 %122, i64* %123, align 8
  %124 = load i32* %err, align 4
  %125 = or i32 %124, 2
  store i32 %125, i32* %0, align 4
  br label %bb49

bb46:                                             ; preds = %bb44, %bb43, %bb42, %bb41, %bb40, %bb39, %bb38, %bb37, %bb36, %bb35, %bb34, %bb33
  %126 = load i32* %err, align 4
  %127 = load i32* %overflow, align 4
  %128 = or i32 %126, %127
  store i32 %128, i32* %err, align 4
  %129 = load i8*** %p, align 8
  %130 = load i8** %129, align 8
  %131 = load i32* %suffixes, align 4
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8* %130, i64 %132
  %134 = load i8*** %p, align 8
  store i8* %133, i8** %134, align 8
  %135 = load i8*** %p, align 8
  %136 = load i8** %135, align 8
  %137 = load i8* %136, align 1
  %138 = icmp ne i8 %137, 0
  br i1 %138, label %bb47, label %bb48

bb47:                                             ; preds = %bb46
  %139 = load i32* %err, align 4
  %140 = or i32 %139, 2
  store i32 %140, i32* %err, align 4
  br label %bb48

bb48:                                             ; preds = %bb47, %bb46, %bb22
  %141 = load i64* %tmp, align 8
  %142 = load i64** %val_addr, align 8
  store i64 %141, i64* %142, align 8
  %143 = load i32* %err, align 4
  store i32 %143, i32* %0, align 4
  br label %bb49

bb49:                                             ; preds = %bb48, %bb45, %bb24, %bb21, %bb18, %bb15, %bb9
  %144 = load i32* %0, align 4
  store i32 %144, i32* %retval, align 4
  %retval50 = load i32* %retval
  ret i32 %retval50
}

define internal void @cdb_init(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  store i32 -100, i32* %1, align 4
  ret void
}

define internal i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = call i32 @fchdir(i32 %3) nounwind
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal void @cdb_free(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %close_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  %2 = load i32* %1, align 4
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %return

bb:                                               ; preds = %entry
  %4 = load %struct.cd_buf** %cdb_addr, align 8
  %5 = getelementptr inbounds %struct.cd_buf* %4, i32 0, i32 0
  %6 = load i32* %5, align 4
  %7 = call i32 @close(i32 %6) nounwind
  %8 = icmp ne i32 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %close_fail, align 1
  %10 = load i8* %close_fail, align 1
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool3not = xor i1 %toBool3, true
  %toBool3not4 = zext i1 %toBool3not to i8
  %toBool6 = icmp ne i8 %toBool3not4, 0
  br i1 %toBool6, label %bb7, label %return

bb7:                                              ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str236, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([9 x i8]* @__PRETTY_FUNCTION__.3963, i64 0, i64 0)) noreturn n
  unreachable

return:                                           ; preds = %entry, %bb
  ret void
}

define internal i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %dir) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_fd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  store i8* %dir, i8** %dir_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = load i8** %dir_addr, align 8
  %5 = call i32 (i32, i8*, i32, ...)* @openat(i32 %3, i8* %4, i32 67840) nounwind
  store i32 %5, i32* %new_fd, align 4
  %6 = load i32* %new_fd, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %8 = load %struct.cd_buf** %cdb_addr, align 8
  call void @cdb_free(%struct.cd_buf* %8) nounwind
  %9 = load %struct.cd_buf** %cdb_addr, align 8
  %10 = getelementptr inbounds %struct.cd_buf* %9, i32 0, i32 0
  %11 = load i32* %new_fd, align 4
  store i32 %11, i32* %10, align 4
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i8* @find_non_slash(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n_slash = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8
  %2 = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str2238, i64 0, i64 0)) nounwind readonly
  store i64 %2, i64* %n_slash, align 8
  %3 = load i8** %s_addr, align 8
  %4 = load i64* %n_slash, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i32 @chdir_long(i8* %dir) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %e = alloca i32
  %len = alloca i64
  %dir_end = alloca i8*
  %cdb = alloca %struct.cd_buf
  %n_leading_slash = alloca i64
  %err = alloca i32
  %slash = alloca i8*
  %err20 = alloca i32
  %slash21 = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  %1 = load i8** %dir_addr, align 8
  %2 = call i32 @chdir(i8* %1) nounwind
  store i32 %2, i32* %e, align 4
  %3 = load i32* %e, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  %7 = icmp ne i32 %6, 36
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %e, align 4
  store i32 %8, i32* %0, align 4
  br label %bb32

bb2:                                              ; preds = %bb
  %9 = load i8** %dir_addr, align 8
  %10 = call i64 @strlen(i8* %9) nounwind readonly
  store i64 %10, i64* %len, align 8
  %11 = load i8** %dir_addr, align 8
  %12 = load i64* %len, align 8
  %13 = getelementptr inbounds i8* %11, i64 %12
  store i8* %13, i8** %dir_end, align 8
  call void @cdb_init(%struct.cd_buf* %cdb) nounwind
  %14 = load i64* %len, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8]* @.str3239, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noreturn
  unreachable

bb4:                                              ; preds = %bb2
  %16 = load i64* %len, align 8
  %17 = icmp ule i64 %16, 4095
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str4240, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb6:                                              ; preds = %bb4
  %18 = load i8** %dir_addr, align 8
  %19 = call i64 @strspn(i8* %18, i8* getelementptr inbounds ([2 x i8]* @.str2238, i64 0, i64 0)) nounwind readonly
  store i64 %19, i64* %n_leading_slash, align 8
  %20 = load i64* %n_leading_slash, align 8
  %21 = icmp eq i64 %20, 2
  br i1 %21, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %22 = load i8** %dir_end, align 8
  %23 = ptrtoint i8* %22 to i64
  %24 = load i8** %dir_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 3
  %26 = ptrtoint i8* %25 to i64
  %27 = sub nsw i64 %23, %26
  %28 = load i8** %dir_addr, align 8
  %29 = getelementptr inbounds i8* %28, i64 3
  %30 = call i8* @memchr(i8* %29, i32 47, i64 %27) nounwind readonly
  store i8* %30, i8** %slash, align 8
  %31 = load i8** %slash, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %33 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %33, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb9:                                              ; preds = %bb7
  %34 = load i8** %slash, align 8
  store i8 0, i8* %34, align 1
  %35 = load i8** %dir_addr, align 8
  %36 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %35) nounwind
  store i32 %36, i32* %err, align 4
  %37 = load i8** %slash, align 8
  store i8 47, i8* %37, align 1
  %38 = load i32* %err, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %Fail, label %bb10

bb10:                                             ; preds = %bb9
  %40 = load i8** %slash, align 8
  %41 = getelementptr inbounds i8* %40, i64 1
  %42 = call i8* @find_non_slash(i8* %41) nounwind readonly
  store i8* %42, i8** %dir_addr, align 8
  br label %bb14

bb11:                                             ; preds = %bb6
  %43 = load i64* %n_leading_slash, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %bb12, label %bb14

bb12:                                             ; preds = %bb11
  %45 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* getelementptr inbounds ([2 x i8]* @.str2238, i64 0, i64 0)) nounwind
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %Fail, label %bb13

bb13:                                             ; preds = %bb12
  %47 = load i8** %dir_addr, align 8
  %48 = load i64* %n_leading_slash, align 8
  %49 = getelementptr inbounds i8* %47, i64 %48
  store i8* %49, i8** %dir_addr, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb10
  %50 = load i8** %dir_addr, align 8
  %51 = load i8* %50, align 1
  %52 = icmp eq i8 %51, 47
  br i1 %52, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str5241, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 162, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14
  %53 = load i8** %dir_addr, align 8
  %54 = load i8** %dir_end, align 8
  %55 = icmp ugt i8* %53, %54
  br i1 %55, label %bb17, label %bb27

bb17:                                             ; preds = %bb16
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8]* @.str6242, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 163, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb19:                                             ; preds = %bb27
  %56 = call i8* @memrchr(i8* %81, i32 47, i64 4096) nounwind readonly
  store i8* %56, i8** %slash21, align 8
  %57 = load i8** %slash21, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %bb22, label %bb23

bb22:                                             ; preds = %bb19
  %59 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %59, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb23:                                             ; preds = %bb19
  %60 = load i8** %slash21, align 8
  store i8 0, i8* %60, align 1
  %61 = load i8** %slash21, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = load i8** %dir_addr, align 8
  %64 = ptrtoint i8* %63 to i64
  %65 = sub nsw i64 %62, %64
  %66 = icmp sgt i64 %65, 4095
  br i1 %66, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str7243, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1237, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3999, i64 0, i64 0)) noretur
  unreachable

bb25:                                             ; preds = %bb23
  %67 = load i8** %dir_addr, align 8
  %68 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %67) nounwind
  store i32 %68, i32* %err20, align 4
  %69 = load i8** %slash21, align 8
  store i8 47, i8* %69, align 1
  %70 = load i32* %err20, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %Fail, label %bb26

bb26:                                             ; preds = %bb25
  %72 = load i8** %slash21, align 8
  %73 = getelementptr inbounds i8* %72, i64 1
  %74 = call i8* @find_non_slash(i8* %73) nounwind readonly
  store i8* %74, i8** %dir_addr, align 8
  br label %bb27

bb27:                                             ; preds = %bb16, %bb26
  %75 = load i8** %dir_end, align 8
  %76 = ptrtoint i8* %75 to i64
  %77 = load i8** %dir_addr, align 8
  %78 = ptrtoint i8* %77 to i64
  %79 = sub nsw i64 %76, %78
  %80 = icmp sgt i64 %79, 4095
  %81 = load i8** %dir_addr, align 8
  br i1 %80, label %bb19, label %bb28

bb28:                                             ; preds = %bb27
  %82 = load i8** %dir_end, align 8
  %83 = icmp ult i8* %81, %82
  br i1 %83, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  %84 = load i8** %dir_addr, align 8
  %85 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %84) nounwind
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %Fail, label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %87 = call i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %Fail, label %bb31

bb31:                                             ; preds = %bb30
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

Fail:                                             ; preds = %bb30, %bb29, %bb25, %bb12, %bb9
  %89 = call i32* @__errno_location() nounwind readnone
  %90 = load i32* %89, align 4
  store i32 %90, i32* %saved_errno, align 4
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %saved_errno, align 4
  store i32 %92, i32* %91, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb32:                                             ; preds = %Fail, %bb31, %bb22, %bb8, %bb1
  %93 = load i32* %0, align 4
  store i32 %93, i32* %retval, align 4
  %retval33 = load i32* %retval
  ret i32 %retval33
}

define internal i32 @statvfs_works() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca i32
  %name = alloca %struct.utsname
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @statvfs_works_cache.2096, align 4
  %2 = icmp slt i32 %1, 0
  br i1 %2, label %bb, label %bb5

bb:                                               ; preds = %entry
  %3 = call i32 @uname(%struct.utsname* %name) nounwind
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.utsname* %name, i32 0, i32 2
  %6 = getelementptr inbounds [65 x i8]* %5, i64 0, i64 0
  %7 = call i32 @strverscmp(i8* %6, i8* getelementptr inbounds ([7 x i8]* @.str245, i64 0, i64 0)) nounwind readonly
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.1, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb
  store i32 0, i32* %iftmp.1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %9 = load i32* %iftmp.1, align 4
  store i32 %9, i32* @statvfs_works_cache.2096, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %10 = load i32* @statvfs_works_cache.2096, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

declare i32 @uname(%struct.utsname*) nounwind

define i32 @get_fs_usage(i8* %file, i8* %disk, %struct.fs_usage* %fsp) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %disk_addr = alloca i8*, align 8
  %fsp_addr = alloca %struct.fs_usage*, align 8
  %retval = alloca i32
  %iftmp.2 = alloca i64
  %0 = alloca i32
  %fsd = alloca %struct.statfs
  %vfsd = alloca %struct.statvfs
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8* %disk, i8** %disk_addr
  store %struct.fs_usage* %fsp, %struct.fs_usage** %fsp_addr
  %1 = call i32 @statvfs_works() nounwind
  %2 = icmp ne i32 %1, 0
  %3 = load i8** %file_addr, align 8
  br i1 %2, label %bb, label %bb6

bb:                                               ; preds = %entry
  %4 = call i32 @statvfs(i8* noalias %3, %struct.statvfs* noalias %vfsd) nounwind
  %5 = icmp slt i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4
  br label %bb9

bb2:                                              ; preds = %bb
  %6 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = icmp ne i64 %7, 0
  br i1 %8, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 1
  %10 = load i64* %9, align 8
  store i64 %10, i64* %iftmp.2, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 0
  %12 = load i64* %11, align 8
  store i64 %12, i64* %iftmp.2, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %13 = load %struct.fs_usage** %fsp_addr, align 8
  %14 = getelementptr inbounds %struct.fs_usage* %13, i32 0, i32 0
  %15 = load i64* %iftmp.2, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = load %struct.fs_usage** %fsp_addr, align 8
  %19 = getelementptr inbounds %struct.fs_usage* %18, i32 0, i32 1
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 3
  %21 = load i64* %20, align 8
  %22 = load %struct.fs_usage** %fsp_addr, align 8
  %23 = getelementptr inbounds %struct.fs_usage* %22, i32 0, i32 2
  store i64 %21, i64* %23, align 8
  %24 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %25 = load i64* %24, align 8
  %26 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %27 = load i64* %26, align 8
  %28 = and i64 %27, -9223372036854775808
  %29 = sub i64 0, %28
  %30 = or i64 %25, %29
  %31 = load %struct.fs_usage** %fsp_addr, align 8
  %32 = getelementptr inbounds %struct.fs_usage* %31, i32 0, i32 3
  store i64 %30, i64* %32, align 8
  %33 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 4
  %34 = load i64* %33, align 8
  %35 = icmp slt i64 %34, 0
  %36 = zext i1 %35 to i8
  %37 = load %struct.fs_usage** %fsp_addr, align 8
  %38 = getelementptr inbounds %struct.fs_usage* %37, i32 0, i32 4
  store i8 %36, i8* %38, align 8
  %39 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 5
  %40 = load i64* %39, align 8
  %41 = load %struct.fs_usage** %fsp_addr, align 8
  %42 = getelementptr inbounds %struct.fs_usage* %41, i32 0, i32 5
  store i64 %40, i64* %42, align 8
  %43 = getelementptr inbounds %struct.statvfs* %vfsd, i32 0, i32 6
  %44 = load i64* %43, align 8
  %45 = load %struct.fs_usage** %fsp_addr, align 8
  %46 = getelementptr inbounds %struct.fs_usage* %45, i32 0, i32 6
  store i64 %44, i64* %46, align 8
  store i32 0, i32* %0, align 4
  br label %bb9

bb6:                                              ; preds = %entry
  %47 = call i32 @statfs(i8* %3, %struct.statfs* %fsd) nounwind
  %48 = icmp slt i32 %47, 0
  br i1 %48, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i32 -1, i32* %0, align 4
  br label %bb9

bb8:                                              ; preds = %bb6
  %49 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 9
  %50 = load i64* %49, align 8
  %51 = load %struct.fs_usage** %fsp_addr, align 8
  %52 = getelementptr inbounds %struct.fs_usage* %51, i32 0, i32 0
  store i64 %50, i64* %52, align 8
  %53 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 2
  %54 = load i64* %53, align 8
  %55 = load %struct.fs_usage** %fsp_addr, align 8
  %56 = getelementptr inbounds %struct.fs_usage* %55, i32 0, i32 1
  store i64 %54, i64* %56, align 8
  %57 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 3
  %58 = load i64* %57, align 8
  %59 = load %struct.fs_usage** %fsp_addr, align 8
  %60 = getelementptr inbounds %struct.fs_usage* %59, i32 0, i32 2
  store i64 %58, i64* %60, align 8
  %61 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %62 = load i64* %61, align 8
  %63 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %64 = load i64* %63, align 8
  %65 = and i64 %64, -9223372036854775808
  %66 = sub i64 0, %65
  %67 = or i64 %62, %66
  %68 = load %struct.fs_usage** %fsp_addr, align 8
  %69 = getelementptr inbounds %struct.fs_usage* %68, i32 0, i32 3
  store i64 %67, i64* %69, align 8
  %70 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 4
  %71 = load i64* %70, align 8
  %72 = icmp slt i64 %71, 0
  %73 = zext i1 %72 to i8
  %74 = load %struct.fs_usage** %fsp_addr, align 8
  %75 = getelementptr inbounds %struct.fs_usage* %74, i32 0, i32 4
  store i8 %73, i8* %75, align 8
  %76 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 5
  %77 = load i64* %76, align 8
  %78 = load %struct.fs_usage** %fsp_addr, align 8
  %79 = getelementptr inbounds %struct.fs_usage* %78, i32 0, i32 5
  store i64 %77, i64* %79, align 8
  %80 = getelementptr inbounds %struct.statfs* %fsd, i32 0, i32 6
  %81 = load i64* %80, align 8
  %82 = load %struct.fs_usage** %fsp_addr, align 8
  %83 = getelementptr inbounds %struct.fs_usage* %82, i32 0, i32 6
  store i64 %81, i64* %83, align 8
  store i32 0, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb1
  %84 = load i32* %0, align 4
  store i32 %84, i32* %retval, align 4
  %retval10 = load i32* %retval
  ret i32 %retval10
}

define i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.mbstate_t* %ps) nounwind {
entry:
  %pwc_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %ps_addr = alloca %struct.mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %ret = alloca i64
  %wc = alloca i32
  %uc = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwc, i32** %pwc_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  store %struct.mbstate_t* %ps, %struct.mbstate_t** %ps_addr
  %1 = load i32** %pwc_addr, align 8
  %2 = icmp eq i32* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32* %wc, i32** %pwc_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i32** %pwc_addr, align 8
  %4 = load i8** %s_addr, align 8
  %5 = load i64* %n_addr, align 8
  %6 = load %struct.mbstate_t** %ps_addr, align 8
  %7 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %3, i8* noalias %4, i64 %5, %struct.mbstate_t* noalias %6) nounwind
  store i64 %7, i64* %ret, align 8
  %8 = load i64* %ret, align 8
  %9 = icmp ugt i64 %8, -3
  br i1 %9, label %bb2, label %bb8

bb2:                                              ; preds = %bb1
  %10 = load i64* %n_addr, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %12 = call zeroext i8 @hard_locale(i32 0) nounwind
  %toBool = icmp ne i8 %12, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot4 = zext i1 %toBoolnot to i8
  %toBool6 = icmp ne i8 %toBoolnot4, 0
  br i1 %toBool6, label %bb7, label %bb8

bb7:                                              ; preds = %bb3
  %13 = load i8** %s_addr, align 8
  %14 = load i8* %13, align 1
  store i8 %14, i8* %uc, align 1
  %15 = load i8* %uc, align 1
  %16 = zext i8 %15 to i32
  %17 = load i32** %pwc_addr, align 8
  store i32 %16, i32* %17, align 4
  store i64 1, i64* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb3, %bb2, %bb1
  %18 = load i64* %ret, align 8
  store i64 %18, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %19 = load i64* %0, align 8
  store i64 %19, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define internal i64 @dev_from_mount_options(i8* %mount_options) nounwind {
entry:
  %mount_options_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %mount_options, i8** %mount_options_addr
  store i64 -1, i64* %0, align 8
  %1 = load i64* %0, align 8
  store i64 %1, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal void @unescape_tab(i8* %str) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %i = alloca i64
  %j = alloca i64
  %len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i64 0, i64* %j, align 8
  %0 = load i8** %str_addr, align 8
  %1 = call i64 @strlen(i8* %0) nounwind readonly
  %2 = add i64 %1, 1
  store i64 %2, i64* %len, align 8
  store i64 0, i64* %i, align 8
  br label %bb11

bb:                                               ; preds = %bb11
  %3 = load i8** %str_addr, align 8
  %4 = load i64* %i, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  %6 = load i8* %5, align 1
  %7 = icmp ne i8 %6, 92
  br i1 %7, label %bb9, label %bb1

bb1:                                              ; preds = %bb
  %8 = load i64* %i, align 8
  %9 = add i64 %8, 4
  %10 = load i64* %len, align 8
  %11 = icmp uge i64 %9, %10
  br i1 %11, label %bb9, label %bb2

bb2:                                              ; preds = %bb1
  %12 = load i64* %i, align 8
  %13 = add i64 %12, 1
  %14 = load i8** %str_addr, align 8
  %15 = getelementptr inbounds i8* %14, i64 %13
  %16 = load i8* %15, align 1
  %17 = icmp sle i8 %16, 47
  br i1 %17, label %bb9, label %bb3

bb3:                                              ; preds = %bb2
  %18 = load i64* %i, align 8
  %19 = add i64 %18, 1
  %20 = load i8** %str_addr, align 8
  %21 = getelementptr inbounds i8* %20, i64 %19
  %22 = load i8* %21, align 1
  %23 = icmp sgt i8 %22, 51
  br i1 %23, label %bb9, label %bb4

bb4:                                              ; preds = %bb3
  %24 = load i64* %i, align 8
  %25 = add i64 %24, 2
  %26 = load i8** %str_addr, align 8
  %27 = getelementptr inbounds i8* %26, i64 %25
  %28 = load i8* %27, align 1
  %29 = icmp sle i8 %28, 47
  br i1 %29, label %bb9, label %bb5

bb5:                                              ; preds = %bb4
  %30 = load i64* %i, align 8
  %31 = add i64 %30, 2
  %32 = load i8** %str_addr, align 8
  %33 = getelementptr inbounds i8* %32, i64 %31
  %34 = load i8* %33, align 1
  %35 = icmp sgt i8 %34, 55
  br i1 %35, label %bb9, label %bb6

bb6:                                              ; preds = %bb5
  %36 = load i64* %i, align 8
  %37 = add i64 %36, 3
  %38 = load i8** %str_addr, align 8
  %39 = getelementptr inbounds i8* %38, i64 %37
  %40 = load i8* %39, align 1
  %41 = icmp sle i8 %40, 47
  br i1 %41, label %bb9, label %bb7

bb7:                                              ; preds = %bb6
  %42 = load i64* %i, align 8
  %43 = add i64 %42, 3
  %44 = load i8** %str_addr, align 8
  %45 = getelementptr inbounds i8* %44, i64 %43
  %46 = load i8* %45, align 1
  %47 = icmp sgt i8 %46, 55
  br i1 %47, label %bb9, label %bb8

bb8:                                              ; preds = %bb7
  %48 = load i64* %i, align 8
  %49 = add i64 %48, 1
  %50 = load i8** %str_addr, align 8
  %51 = getelementptr inbounds i8* %50, i64 %49
  %52 = load i8* %51, align 1
  %53 = sext i8 %52 to i32
  %54 = mul nsw i32 %53, 64
  %55 = trunc i32 %54 to i8
  %56 = load i64* %i, align 8
  %57 = add i64 %56, 2
  %58 = load i8** %str_addr, align 8
  %59 = getelementptr inbounds i8* %58, i64 %57
  %60 = load i8* %59, align 1
  %61 = sext i8 %60 to i32
  %62 = mul nsw i32 %61, 8
  %63 = trunc i32 %62 to i8
  %64 = add i8 %55, %63
  %65 = load i64* %i, align 8
  %66 = add i64 %65, 3
  %67 = load i8** %str_addr, align 8
  %68 = getelementptr inbounds i8* %67, i64 %66
  %69 = load i8* %68, align 1
  %70 = add i8 %64, %69
  %71 = add i8 %70, 80
  %72 = load i8** %str_addr, align 8
  %73 = load i64* %j, align 8
  %74 = getelementptr inbounds i8* %72, i64 %73
  store i8 %71, i8* %74, align 1
  %75 = load i64* %j, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %j, align 8
  %77 = load i64* %i, align 8
  %78 = add i64 %77, 3
  store i64 %78, i64* %i, align 8
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %bb
  %79 = load i8** %str_addr, align 8
  %80 = load i64* %i, align 8
  %81 = getelementptr inbounds i8* %79, i64 %80
  %82 = load i8* %81, align 1
  %83 = load i8** %str_addr, align 8
  %84 = load i64* %j, align 8
  %85 = getelementptr inbounds i8* %83, i64 %84
  store i8 %82, i8* %85, align 1
  %86 = load i64* %j, align 8
  %87 = add i64 %86, 1
  store i64 %87, i64* %j, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %88 = load i64* %i, align 8
  %89 = add i64 %88, 1
  store i64 %89, i64* %i, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %entry
  %90 = load i64* %i, align 8
  %91 = load i64* %len, align 8
  %92 = icmp ult i64 %90, %91
  br i1 %92, label %bb, label %return

return:                                           ; preds = %bb11
  ret void
}

define %struct.mount_entry* @read_file_system_list(i8 zeroext %need_fs_type) nounwind {
entry:
  %need_fs_type_addr = alloca i8, align 1
  %retval = alloca %struct.mount_entry*
  %iftmp.26 = alloca i32
  %iftmp.25 = alloca i32
  %0 = alloca %struct.mount_entry*
  %iftmp.23 = alloca i32
  %iftmp.22 = alloca i32
  %mount_list = alloca %struct.mount_entry*
  %me = alloca %struct.mount_entry*
  %mtail = alloca %struct.mount_entry**
  %fp = alloca %struct.FILE*
  %mountinfo = alloca i8*
  %line = alloca i8*
  %buf_size = alloca i64
  %devmaj = alloca i32
  %devmin = alloca i32
  %target_s = alloca i32
  %target_e = alloca i32
  %type_s = alloca i32
  %type_e = alloca i32
  %source_s = alloca i32
  %source_e = alloca i32
  %mntroot_s = alloca i32
  %mntroot_e = alloca i32
  %test = alloca i8
  %dash = alloca i8*
  %rc = alloca i32
  %saved_errno = alloca i32
  %mnt = alloca %struct.mntent*
  %table = alloca i8*
  %bind = alloca i8
  %saved_errno69 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %need_fs_type, i8* %need_fs_type_addr
  store %struct.mount_entry** %mount_list, %struct.mount_entry*** %mtail, align 8
  store i8* getelementptr inbounds ([21 x i8]* @.str248, i64 0, i64 0), i8** %mountinfo, align 8
  %1 = load i8** %mountinfo, align 8
  %2 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @fopen to %struct.FILE* (i8*, i8*)*)(i8* noalias %1, i8* noalias getelementptr inbounds ([2 x i8]* @.str1249, i64 0, i64 0)) nounwind
  store %struct.FILE* %2, %struct.FILE** %fp, align 8
  %3 = load %struct.FILE** %fp, align 8
  %4 = icmp ne %struct.FILE* %3, null
  br i1 %4, label %bb, label %bb35

bb:                                               ; preds = %entry
  store i8* null, i8** %line, align 8
  store i64 0, i64* %buf_size, align 8
  br label %bb30

bb1:                                              ; preds = %bb30
  %5 = call i32 (i8*, i8*, ...)* @sscanf(i8* noalias %217, i8* noalias getelementptr inbounds ([32 x i8]* @.str2250, i64 0, i64 0), i32* %devmaj, i32* %devmin, i32* %mntroot_s, i32* %mntroot_e, i32* %target_s, i32* %target_e, i8* %test) nounwind
  store i32 %5, i32* %rc, align 4
  %6 = load i32* %rc, align 4
  %7 = icmp ne i32 %6, 3
  %8 = load i32* %rc, align 4
  %9 = icmp ne i32 %8, 7
  %or.cond = and i1 %7, %9
  br i1 %or.cond, label %bb30, label %bb3

bb3:                                              ; preds = %bb1
  %10 = load i8** %line, align 8
  %11 = load i32* %target_e, align 4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i8* %10, i64 %12
  %14 = call i8* @strstr(i8* %13, i8* getelementptr inbounds ([4 x i8]* @.str3251, i64 0, i64 0)) nounwind readonly
  store i8* %14, i8** %dash, align 8
  %15 = load i8** %dash, align 8
  %16 = icmp eq i8* %15, null
  br i1 %16, label %bb30, label %bb4

bb4:                                              ; preds = %bb3
  %17 = load i8** %dash, align 8
  %18 = call i32 (i8*, i8*, ...)* @sscanf(i8* noalias %17, i8* noalias getelementptr inbounds ([22 x i8]* @.str4252, i64 0, i64 0), i32* %type_s, i32* %type_e, i32* %source_s, i32* %source_e, i8* %test) nounwind
  store i32 %18, i32* %rc, align 4
  %19 = load i32* %rc, align 4
  %20 = icmp ne i32 %19, 1
  %21 = load i32* %rc, align 4
  %22 = icmp ne i32 %21, 5
  %or.cond6 = and i1 %20, %22
  br i1 %or.cond6, label %bb30, label %bb6

bb6:                                              ; preds = %bb4
  %23 = load i8** %line, align 8
  %24 = load i32* %mntroot_e, align 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8* %23, i64 %25
  store i8 0, i8* %26, align 1
  %27 = load i8** %line, align 8
  %28 = load i32* %target_e, align 4
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8* %27, i64 %29
  store i8 0, i8* %30, align 1
  %31 = load i32* %type_e, align 4
  %32 = load i8** %dash, align 8
  %33 = sext i32 %31 to i64
  %34 = getelementptr inbounds i8* %32, i64 %33
  store i8 0, i8* %34, align 1
  %35 = load i32* %source_e, align 4
  %36 = load i8** %dash, align 8
  %37 = sext i32 %35 to i64
  %38 = getelementptr inbounds i8* %36, i64 %37
  store i8 0, i8* %38, align 1
  %39 = load i32* %source_s, align 4
  %40 = load i8** %dash, align 8
  %41 = sext i32 %39 to i64
  %42 = getelementptr inbounds i8* %40, i64 %41
  call void @unescape_tab(i8* %42) nounwind
  %43 = load i8** %line, align 8
  %44 = load i32* %target_s, align 4
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8* %43, i64 %45
  call void @unescape_tab(i8* %46) nounwind
  %47 = load i8** %line, align 8
  %48 = load i32* %mntroot_s, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8* %47, i64 %49
  call void @unescape_tab(i8* %50) nounwind
  %51 = call noalias i8* @xmalloc(i64 56) nounwind
  %52 = bitcast i8* %51 to %struct.mount_entry*
  store %struct.mount_entry* %52, %struct.mount_entry** %me, align 8
  %53 = load i32* %source_s, align 4
  %54 = load i8** %dash, align 8
  %55 = sext i32 %53 to i64
  %56 = getelementptr inbounds i8* %54, i64 %55
  %57 = call noalias i8* @xstrdup(i8* %56) nounwind
  %58 = load %struct.mount_entry** %me, align 8
  %59 = getelementptr inbounds %struct.mount_entry* %58, i32 0, i32 0
  store i8* %57, i8** %59, align 8
  %60 = load i8** %line, align 8
  %61 = load i32* %target_s, align 4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8* %60, i64 %62
  %64 = call noalias i8* @xstrdup(i8* %63) nounwind
  %65 = load %struct.mount_entry** %me, align 8
  %66 = getelementptr inbounds %struct.mount_entry* %65, i32 0, i32 1
  store i8* %64, i8** %66, align 8
  %67 = load i8** %line, align 8
  %68 = load i32* %mntroot_s, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8* %67, i64 %69
  %71 = call noalias i8* @xstrdup(i8* %70) nounwind
  %72 = load %struct.mount_entry** %me, align 8
  %73 = getelementptr inbounds %struct.mount_entry* %72, i32 0, i32 2
  store i8* %71, i8** %73, align 8
  %74 = load i32* %type_s, align 4
  %75 = load i8** %dash, align 8
  %76 = sext i32 %74 to i64
  %77 = getelementptr inbounds i8* %75, i64 %76
  %78 = call noalias i8* @xstrdup(i8* %77) nounwind
  %79 = load %struct.mount_entry** %me, align 8
  %80 = getelementptr inbounds %struct.mount_entry* %79, i32 0, i32 3
  store i8* %78, i8** %80, align 8
  %81 = load %struct.mount_entry** %me, align 8
  %82 = getelementptr inbounds %struct.mount_entry* %81, i32 0, i32 5
  %83 = load i64* %82, align 8
  %84 = and i64 %83, -5
  %85 = or i64 %84, 4
  store i64 %85, i64* %82, align 8
  %86 = load i32* %devmin, align 4
  %87 = load i32* %devmaj, align 4
  %88 = call i64 @gnu_dev_makedev(i32 %87, i32 %86) nounwind readnone
  %89 = load %struct.mount_entry** %me, align 8
  %90 = getelementptr inbounds %struct.mount_entry* %89, i32 0, i32 4
  store i64 %88, i64* %90, align 8
  %91 = load %struct.mount_entry** %me, align 8
  %92 = getelementptr inbounds %struct.mount_entry* %91, i32 0, i32 3
  %93 = load i8** %92, align 8
  %94 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([7 x i8]* @.str5253, i64 0, i64 0)) nounwind readonly
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %bb19, label %bb7

bb7:                                              ; preds = %bb6
  %96 = load %struct.mount_entry** %me, align 8
  %97 = getelementptr inbounds %struct.mount_entry* %96, i32 0, i32 3
  %98 = load i8** %97, align 8
  %99 = call i32 @strcmp(i8* %98, i8* getelementptr inbounds ([5 x i8]* @.str6254, i64 0, i64 0)) nounwind readonly
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %bb19, label %bb8

bb8:                                              ; preds = %bb7
  %101 = load %struct.mount_entry** %me, align 8
  %102 = getelementptr inbounds %struct.mount_entry* %101, i32 0, i32 3
  %103 = load i8** %102, align 8
  %104 = call i32 @strcmp(i8* %103, i8* getelementptr inbounds ([6 x i8]* @.str7255, i64 0, i64 0)) nounwind readonly
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %bb19, label %bb9

bb9:                                              ; preds = %bb8
  %106 = load %struct.mount_entry** %me, align 8
  %107 = getelementptr inbounds %struct.mount_entry* %106, i32 0, i32 3
  %108 = load i8** %107, align 8
  %109 = call i32 @strcmp(i8* %108, i8* getelementptr inbounds ([8 x i8]* @.str8256, i64 0, i64 0)) nounwind readonly
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %bb19, label %bb10

bb10:                                             ; preds = %bb9
  %111 = load %struct.mount_entry** %me, align 8
  %112 = getelementptr inbounds %struct.mount_entry* %111, i32 0, i32 3
  %113 = load i8** %112, align 8
  %114 = call i32 @strcmp(i8* %113, i8* getelementptr inbounds ([7 x i8]* @.str9257, i64 0, i64 0)) nounwind readonly
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %bb19, label %bb11

bb11:                                             ; preds = %bb10
  %116 = load %struct.mount_entry** %me, align 8
  %117 = getelementptr inbounds %struct.mount_entry* %116, i32 0, i32 3
  %118 = load i8** %117, align 8
  %119 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([8 x i8]* @.str10258, i64 0, i64 0)) nounwind readonly
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %bb19, label %bb12

bb12:                                             ; preds = %bb11
  %121 = load %struct.mount_entry** %me, align 8
  %122 = getelementptr inbounds %struct.mount_entry* %121, i32 0, i32 3
  %123 = load i8** %122, align 8
  %124 = call i32 @strcmp(i8* %123, i8* getelementptr inbounds ([7 x i8]* @.str11259, i64 0, i64 0)) nounwind readonly
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %bb19, label %bb13

bb13:                                             ; preds = %bb12
  %126 = load %struct.mount_entry** %me, align 8
  %127 = getelementptr inbounds %struct.mount_entry* %126, i32 0, i32 3
  %128 = load i8** %127, align 8
  %129 = call i32 @strcmp(i8* %128, i8* getelementptr inbounds ([11 x i8]* @.str12260, i64 0, i64 0)) nounwind readonly
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %bb19, label %bb14

bb14:                                             ; preds = %bb13
  %131 = load %struct.mount_entry** %me, align 8
  %132 = getelementptr inbounds %struct.mount_entry* %131, i32 0, i32 3
  %133 = load i8** %132, align 8
  %134 = call i32 @strcmp(i8* %133, i8* getelementptr inbounds ([6 x i8]* @.str13261, i64 0, i64 0)) nounwind readonly
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %bb19, label %bb15

bb15:                                             ; preds = %bb14
  %136 = load %struct.mount_entry** %me, align 8
  %137 = getelementptr inbounds %struct.mount_entry* %136, i32 0, i32 3
  %138 = load i8** %137, align 8
  %139 = call i32 @strcmp(i8* %138, i8* getelementptr inbounds ([6 x i8]* @.str14262, i64 0, i64 0)) nounwind readonly
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %bb19, label %bb16

bb16:                                             ; preds = %bb15
  %141 = load %struct.mount_entry** %me, align 8
  %142 = getelementptr inbounds %struct.mount_entry* %141, i32 0, i32 3
  %143 = load i8** %142, align 8
  %144 = call i32 @strcmp(i8* %143, i8* getelementptr inbounds ([7 x i8]* @.str15263, i64 0, i64 0)) nounwind readonly
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %bb19, label %bb17

bb17:                                             ; preds = %bb16
  %146 = load %struct.mount_entry** %me, align 8
  %147 = getelementptr inbounds %struct.mount_entry* %146, i32 0, i32 3
  %148 = load i8** %147, align 8
  %149 = call i32 @strcmp(i8* %148, i8* getelementptr inbounds ([7 x i8]* @.str16264, i64 0, i64 0)) nounwind readonly
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  %151 = load %struct.mount_entry** %me, align 8
  %152 = getelementptr inbounds %struct.mount_entry* %151, i32 0, i32 3
  %153 = load i8** %152, align 8
  %154 = call i32 @strcmp(i8* %153, i8* getelementptr inbounds ([5 x i8]* @.str17265, i64 0, i64 0)) nounwind readonly
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %bb19, label %bb20

bb19:                                             ; preds = %bb18, %bb17, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb7, %bb6
  store i32 1, i32* %iftmp.22, align 4
  br label %bb21

bb20:                                             ; preds = %bb18
  store i32 0, i32* %iftmp.22, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %156 = load i32* %iftmp.22, align 4
  %157 = trunc i32 %156 to i8
  %158 = trunc i8 %157 to i1
  %159 = load %struct.mount_entry** %me, align 8
  %160 = getelementptr inbounds %struct.mount_entry* %159, i32 0, i32 5
  %161 = zext i1 %158 to i64
  %162 = load i64* %160, align 8
  %163 = and i64 %161, 1
  %164 = and i64 %162, -2
  %165 = or i64 %164, %163
  store i64 %165, i64* %160, align 8
  %166 = load %struct.mount_entry** %me, align 8
  %167 = getelementptr inbounds %struct.mount_entry* %166, i32 0, i32 0
  %168 = load i8** %167, align 8
  %169 = call i8* @strchr(i8* %168, i32 58) nounwind readonly
  %170 = icmp ne i8* %169, null
  br i1 %170, label %bb27, label %bb22

bb22:                                             ; preds = %bb21
  %171 = load %struct.mount_entry** %me, align 8
  %172 = getelementptr inbounds %struct.mount_entry* %171, i32 0, i32 0
  %173 = load i8** %172, align 8
  %174 = getelementptr inbounds i8* %173, i64 0
  %175 = load i8* %174, align 1
  %176 = icmp ne i8 %175, 47
  br i1 %176, label %bb26, label %bb23

bb23:                                             ; preds = %bb22
  %177 = load %struct.mount_entry** %me, align 8
  %178 = getelementptr inbounds %struct.mount_entry* %177, i32 0, i32 0
  %179 = load i8** %178, align 8
  %180 = getelementptr inbounds i8* %179, i64 1
  %181 = load i8* %180, align 1
  %182 = icmp ne i8 %181, 47
  br i1 %182, label %bb26, label %bb24

bb24:                                             ; preds = %bb23
  %183 = load %struct.mount_entry** %me, align 8
  %184 = getelementptr inbounds %struct.mount_entry* %183, i32 0, i32 3
  %185 = load i8** %184, align 8
  %186 = call i32 @strcmp(i8* %185, i8* getelementptr inbounds ([6 x i8]* @.str18266, i64 0, i64 0)) nounwind readonly
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %bb27, label %bb25

bb25:                                             ; preds = %bb24
  %188 = load %struct.mount_entry** %me, align 8
  %189 = getelementptr inbounds %struct.mount_entry* %188, i32 0, i32 3
  %190 = load i8** %189, align 8
  %191 = call i32 @strcmp(i8* %190, i8* getelementptr inbounds ([5 x i8]* @.str19267, i64 0, i64 0)) nounwind readonly
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %bb27, label %bb26

bb26:                                             ; preds = %bb25, %bb23, %bb22
  %193 = load %struct.mount_entry** %me, align 8
  %194 = getelementptr inbounds %struct.mount_entry* %193, i32 0, i32 0
  %195 = load i8** %194, align 8
  %196 = call i32 @strcmp(i8* getelementptr inbounds ([7 x i8]* @.str20268, i64 0, i64 0), i8* %195) nounwind readonly
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %bb27, label %bb28

bb27:                                             ; preds = %bb26, %bb25, %bb24, %bb21
  store i32 1, i32* %iftmp.23, align 4
  br label %bb29

bb28:                                             ; preds = %bb26
  store i32 0, i32* %iftmp.23, align 4
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %198 = load i32* %iftmp.23, align 4
  %199 = trunc i32 %198 to i8
  %200 = trunc i8 %199 to i1
  %201 = load %struct.mount_entry** %me, align 8
  %202 = getelementptr inbounds %struct.mount_entry* %201, i32 0, i32 5
  %203 = zext i1 %200 to i64
  %204 = load i64* %202, align 8
  %int_cast_to_i64 = bitcast i64 1 to i64
  %205 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %205, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb29
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb29
  %206 = shl i64 %203, 1
  %207 = and i64 %206, 2
  %208 = and i64 %204, -3
  %209 = or i64 %208, %207
  store i64 %209, i64* %202, align 8
  %210 = load %struct.mount_entry*** %mtail, align 8
  %211 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %211, %struct.mount_entry** %210, align 8
  %212 = load %struct.mount_entry** %me, align 8
  %213 = getelementptr inbounds %struct.mount_entry* %212, i32 0, i32 6
  store %struct.mount_entry** %213, %struct.mount_entry*** %mtail, align 8
  br label %bb30

bb30:                                             ; preds = %bb4, %bb1, %klee_overshift_check.exit, %bb3, %bb
  %214 = load %struct.FILE** %fp, align 8
  %215 = call i64 bitcast (i64 (i8**, i64*, %4*)* @getline to i64 (i8**, i64*, %struct.FILE*)*)(i8** noalias %line, i64* noalias %buf_size, %struct.FILE* noalias %214) nounwind
  %216 = icmp ne i64 %215, -1
  %217 = load i8** %line, align 8
  br i1 %216, label %bb1, label %bb31

bb31:                                             ; preds = %bb30
  call void @free(i8* %217) nounwind
  %218 = load %struct.FILE** %fp, align 8
  %219 = call i32 bitcast (i32 (%4*)* @ferror_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %218) nounwind
  %220 = icmp ne i32 %219, 0
  br i1 %220, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %221 = call i32* @__errno_location() nounwind readnone
  %222 = load i32* %221, align 4
  store i32 %222, i32* %saved_errno, align 4
  %223 = load %struct.FILE** %fp, align 8
  %224 = call i32 @rpl_fclose(%struct.FILE* %223) nounwind
  %225 = call i32* @__errno_location() nounwind readnone
  %226 = load i32* %saved_errno, align 4
  store i32 %226, i32* %225, align 4
  br label %free_then_fail

bb33:                                             ; preds = %bb31
  %227 = load %struct.FILE** %fp, align 8
  %228 = call i32 @rpl_fclose(%struct.FILE* %227) nounwind
  %229 = icmp eq i32 %228, -1
  br i1 %229, label %free_then_fail, label %bb68

bb35:                                             ; preds = %entry
  store i8* getelementptr inbounds ([10 x i8]* @.str21269, i64 0, i64 0), i8** %table, align 8
  %230 = load i8** %table, align 8
  %231 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* %230, i8* getelementptr inbounds ([2 x i8]* @.str1249, i64 0, i64 0)) nounwind
  store %struct.FILE* %231, %struct.FILE** %fp, align 8
  %232 = load %struct.FILE** %fp, align 8
  %233 = icmp eq %struct.FILE* %232, null
  br i1 %233, label %bb36, label %bb66

bb36:                                             ; preds = %bb35
  store %struct.mount_entry* null, %struct.mount_entry** %0, align 8
  br label %bb73

bb38:                                             ; preds = %bb66
  %234 = load %struct.mntent** %mnt, align 8
  %235 = call i8* @hasmntopt(%struct.mntent* %234, i8* getelementptr inbounds ([5 x i8]* @.str22270, i64 0, i64 0)) nounwind
  %236 = icmp ne i8* %235, null
  %237 = zext i1 %236 to i8
  store i8 %237, i8* %bind, align 1
  %238 = call noalias i8* @xmalloc(i64 56) nounwind
  %239 = bitcast i8* %238 to %struct.mount_entry*
  store %struct.mount_entry* %239, %struct.mount_entry** %me, align 8
  %240 = load %struct.mntent** %mnt, align 8
  %241 = getelementptr inbounds %struct.mntent* %240, i32 0, i32 0
  %242 = load i8** %241, align 8
  %243 = call noalias i8* @xstrdup(i8* %242) nounwind
  %244 = load %struct.mount_entry** %me, align 8
  %245 = getelementptr inbounds %struct.mount_entry* %244, i32 0, i32 0
  store i8* %243, i8** %245, align 8
  %246 = load %struct.mntent** %mnt, align 8
  %247 = getelementptr inbounds %struct.mntent* %246, i32 0, i32 1
  %248 = load i8** %247, align 8
  %249 = call noalias i8* @xstrdup(i8* %248) nounwind
  %250 = load %struct.mount_entry** %me, align 8
  %251 = getelementptr inbounds %struct.mount_entry* %250, i32 0, i32 1
  store i8* %249, i8** %251, align 8
  %252 = load %struct.mount_entry** %me, align 8
  %253 = getelementptr inbounds %struct.mount_entry* %252, i32 0, i32 2
  store i8* null, i8** %253, align 8
  %254 = load %struct.mntent** %mnt, align 8
  %255 = getelementptr inbounds %struct.mntent* %254, i32 0, i32 2
  %256 = load i8** %255, align 8
  %257 = call noalias i8* @xstrdup(i8* %256) nounwind
  %258 = load %struct.mount_entry** %me, align 8
  %259 = getelementptr inbounds %struct.mount_entry* %258, i32 0, i32 3
  store i8* %257, i8** %259, align 8
  %260 = load %struct.mount_entry** %me, align 8
  %261 = getelementptr inbounds %struct.mount_entry* %260, i32 0, i32 5
  %262 = load i64* %261, align 8
  %263 = and i64 %262, -5
  %264 = or i64 %263, 4
  store i64 %264, i64* %261, align 8
  %265 = load %struct.mount_entry** %me, align 8
  %266 = getelementptr inbounds %struct.mount_entry* %265, i32 0, i32 3
  %267 = load i8** %266, align 8
  %268 = call i32 @strcmp(i8* %267, i8* getelementptr inbounds ([7 x i8]* @.str5253, i64 0, i64 0)) nounwind readonly
  %269 = icmp eq i32 %268, 0
  br i1 %269, label %bb55, label %bb39

bb39:                                             ; preds = %bb38
  %270 = load %struct.mount_entry** %me, align 8
  %271 = getelementptr inbounds %struct.mount_entry* %270, i32 0, i32 3
  %272 = load i8** %271, align 8
  %273 = call i32 @strcmp(i8* %272, i8* getelementptr inbounds ([5 x i8]* @.str6254, i64 0, i64 0)) nounwind readonly
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %bb55, label %bb40

bb40:                                             ; preds = %bb39
  %275 = load %struct.mount_entry** %me, align 8
  %276 = getelementptr inbounds %struct.mount_entry* %275, i32 0, i32 3
  %277 = load i8** %276, align 8
  %278 = call i32 @strcmp(i8* %277, i8* getelementptr inbounds ([6 x i8]* @.str7255, i64 0, i64 0)) nounwind readonly
  %279 = icmp eq i32 %278, 0
  br i1 %279, label %bb55, label %bb41

bb41:                                             ; preds = %bb40
  %280 = load %struct.mount_entry** %me, align 8
  %281 = getelementptr inbounds %struct.mount_entry* %280, i32 0, i32 3
  %282 = load i8** %281, align 8
  %283 = call i32 @strcmp(i8* %282, i8* getelementptr inbounds ([8 x i8]* @.str8256, i64 0, i64 0)) nounwind readonly
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %bb55, label %bb42

bb42:                                             ; preds = %bb41
  %285 = load %struct.mount_entry** %me, align 8
  %286 = getelementptr inbounds %struct.mount_entry* %285, i32 0, i32 3
  %287 = load i8** %286, align 8
  %288 = call i32 @strcmp(i8* %287, i8* getelementptr inbounds ([7 x i8]* @.str9257, i64 0, i64 0)) nounwind readonly
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %bb55, label %bb43

bb43:                                             ; preds = %bb42
  %290 = load %struct.mount_entry** %me, align 8
  %291 = getelementptr inbounds %struct.mount_entry* %290, i32 0, i32 3
  %292 = load i8** %291, align 8
  %293 = call i32 @strcmp(i8* %292, i8* getelementptr inbounds ([8 x i8]* @.str10258, i64 0, i64 0)) nounwind readonly
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %bb55, label %bb44

bb44:                                             ; preds = %bb43
  %295 = load %struct.mount_entry** %me, align 8
  %296 = getelementptr inbounds %struct.mount_entry* %295, i32 0, i32 3
  %297 = load i8** %296, align 8
  %298 = call i32 @strcmp(i8* %297, i8* getelementptr inbounds ([7 x i8]* @.str11259, i64 0, i64 0)) nounwind readonly
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %bb55, label %bb45

bb45:                                             ; preds = %bb44
  %300 = load %struct.mount_entry** %me, align 8
  %301 = getelementptr inbounds %struct.mount_entry* %300, i32 0, i32 3
  %302 = load i8** %301, align 8
  %303 = call i32 @strcmp(i8* %302, i8* getelementptr inbounds ([11 x i8]* @.str12260, i64 0, i64 0)) nounwind readonly
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %bb55, label %bb46

bb46:                                             ; preds = %bb45
  %305 = load %struct.mount_entry** %me, align 8
  %306 = getelementptr inbounds %struct.mount_entry* %305, i32 0, i32 3
  %307 = load i8** %306, align 8
  %308 = call i32 @strcmp(i8* %307, i8* getelementptr inbounds ([6 x i8]* @.str13261, i64 0, i64 0)) nounwind readonly
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %bb55, label %bb47

bb47:                                             ; preds = %bb46
  %310 = load %struct.mount_entry** %me, align 8
  %311 = getelementptr inbounds %struct.mount_entry* %310, i32 0, i32 3
  %312 = load i8** %311, align 8
  %313 = call i32 @strcmp(i8* %312, i8* getelementptr inbounds ([6 x i8]* @.str14262, i64 0, i64 0)) nounwind readonly
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %bb55, label %bb48

bb48:                                             ; preds = %bb47
  %315 = load %struct.mount_entry** %me, align 8
  %316 = getelementptr inbounds %struct.mount_entry* %315, i32 0, i32 3
  %317 = load i8** %316, align 8
  %318 = call i32 @strcmp(i8* %317, i8* getelementptr inbounds ([7 x i8]* @.str15263, i64 0, i64 0)) nounwind readonly
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %bb55, label %bb49

bb49:                                             ; preds = %bb48
  %320 = load %struct.mount_entry** %me, align 8
  %321 = getelementptr inbounds %struct.mount_entry* %320, i32 0, i32 3
  %322 = load i8** %321, align 8
  %323 = call i32 @strcmp(i8* %322, i8* getelementptr inbounds ([7 x i8]* @.str16264, i64 0, i64 0)) nounwind readonly
  %324 = icmp eq i32 %323, 0
  br i1 %324, label %bb55, label %bb50

bb50:                                             ; preds = %bb49
  %325 = load %struct.mount_entry** %me, align 8
  %326 = getelementptr inbounds %struct.mount_entry* %325, i32 0, i32 3
  %327 = load i8** %326, align 8
  %328 = call i32 @strcmp(i8* %327, i8* getelementptr inbounds ([5 x i8]* @.str17265, i64 0, i64 0)) nounwind readonly
  %329 = icmp ne i32 %328, 0
  br i1 %329, label %bb56, label %bb51

bb51:                                             ; preds = %bb50
  %330 = load i8* %bind, align 1
  %toBool = icmp ne i8 %330, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot52 = zext i1 %toBoolnot to i8
  %toBool54 = icmp ne i8 %toBoolnot52, 0
  br i1 %toBool54, label %bb55, label %bb56

bb55:                                             ; preds = %bb51, %bb49, %bb48, %bb47, %bb46, %bb45, %bb44, %bb43, %bb42, %bb41, %bb40, %bb39, %bb38
  store i32 1, i32* %iftmp.25, align 4
  br label %bb57

bb56:                                             ; preds = %bb51, %bb50
  store i32 0, i32* %iftmp.25, align 4
  br label %bb57

bb57:                                             ; preds = %bb56, %bb55
  %331 = load i32* %iftmp.25, align 4
  %332 = trunc i32 %331 to i8
  %333 = trunc i8 %332 to i1
  %334 = load %struct.mount_entry** %me, align 8
  %335 = getelementptr inbounds %struct.mount_entry* %334, i32 0, i32 5
  %336 = zext i1 %333 to i64
  %337 = load i64* %335, align 8
  %338 = and i64 %336, 1
  %339 = and i64 %337, -2
  %340 = or i64 %339, %338
  store i64 %340, i64* %335, align 8
  %341 = load %struct.mount_entry** %me, align 8
  %342 = getelementptr inbounds %struct.mount_entry* %341, i32 0, i32 0
  %343 = load i8** %342, align 8
  %344 = call i8* @strchr(i8* %343, i32 58) nounwind readonly
  %345 = icmp ne i8* %344, null
  br i1 %345, label %bb63, label %bb58

bb58:                                             ; preds = %bb57
  %346 = load %struct.mount_entry** %me, align 8
  %347 = getelementptr inbounds %struct.mount_entry* %346, i32 0, i32 0
  %348 = load i8** %347, align 8
  %349 = getelementptr inbounds i8* %348, i64 0
  %350 = load i8* %349, align 1
  %351 = icmp ne i8 %350, 47
  br i1 %351, label %bb62, label %bb59

bb59:                                             ; preds = %bb58
  %352 = load %struct.mount_entry** %me, align 8
  %353 = getelementptr inbounds %struct.mount_entry* %352, i32 0, i32 0
  %354 = load i8** %353, align 8
  %355 = getelementptr inbounds i8* %354, i64 1
  %356 = load i8* %355, align 1
  %357 = icmp ne i8 %356, 47
  br i1 %357, label %bb62, label %bb60

bb60:                                             ; preds = %bb59
  %358 = load %struct.mount_entry** %me, align 8
  %359 = getelementptr inbounds %struct.mount_entry* %358, i32 0, i32 3
  %360 = load i8** %359, align 8
  %361 = call i32 @strcmp(i8* %360, i8* getelementptr inbounds ([6 x i8]* @.str18266, i64 0, i64 0)) nounwind readonly
  %362 = icmp eq i32 %361, 0
  br i1 %362, label %bb63, label %bb61

bb61:                                             ; preds = %bb60
  %363 = load %struct.mount_entry** %me, align 8
  %364 = getelementptr inbounds %struct.mount_entry* %363, i32 0, i32 3
  %365 = load i8** %364, align 8
  %366 = call i32 @strcmp(i8* %365, i8* getelementptr inbounds ([5 x i8]* @.str19267, i64 0, i64 0)) nounwind readonly
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %bb63, label %bb62

bb62:                                             ; preds = %bb61, %bb59, %bb58
  %368 = load %struct.mount_entry** %me, align 8
  %369 = getelementptr inbounds %struct.mount_entry* %368, i32 0, i32 0
  %370 = load i8** %369, align 8
  %371 = call i32 @strcmp(i8* getelementptr inbounds ([7 x i8]* @.str20268, i64 0, i64 0), i8* %370) nounwind readonly
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %bb63, label %bb64

bb63:                                             ; preds = %bb62, %bb61, %bb60, %bb57
  store i32 1, i32* %iftmp.26, align 4
  br label %bb65

bb64:                                             ; preds = %bb62
  store i32 0, i32* %iftmp.26, align 4
  br label %bb65

bb65:                                             ; preds = %bb64, %bb63
  %373 = load i32* %iftmp.26, align 4
  %374 = trunc i32 %373 to i8
  %375 = trunc i8 %374 to i1
  %376 = load %struct.mount_entry** %me, align 8
  %377 = getelementptr inbounds %struct.mount_entry* %376, i32 0, i32 5
  %378 = zext i1 %375 to i64
  %379 = load i64* %377, align 8
  %int_cast_to_i641 = bitcast i64 1 to i64
  %380 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %380, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb65
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb65
  %381 = shl i64 %378, 1
  %382 = and i64 %381, 2
  %383 = and i64 %379, -3
  %384 = or i64 %383, %382
  store i64 %384, i64* %377, align 8
  %385 = load %struct.mntent** %mnt, align 8
  %386 = getelementptr inbounds %struct.mntent* %385, i32 0, i32 3
  %387 = load i8** %386, align 8
  %388 = call i64 @dev_from_mount_options(i8* %387) nounwind
  %389 = load %struct.mount_entry** %me, align 8
  %390 = getelementptr inbounds %struct.mount_entry* %389, i32 0, i32 4
  store i64 %388, i64* %390, align 8
  %391 = load %struct.mount_entry*** %mtail, align 8
  %392 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %392, %struct.mount_entry** %391, align 8
  %393 = load %struct.mount_entry** %me, align 8
  %394 = getelementptr inbounds %struct.mount_entry* %393, i32 0, i32 6
  store %struct.mount_entry** %394, %struct.mount_entry*** %mtail, align 8
  br label %bb66

bb66:                                             ; preds = %bb35, %klee_overshift_check.exit3
  %395 = load %struct.FILE** %fp, align 8
  %396 = call %struct.mntent* bitcast (%struct.mntent* (%4*)* @getmntent to %struct.mntent* (%struct.FILE*)*)(%struct.FILE* %395) nounwind
  store %struct.mntent* %396, %struct.mntent** %mnt, align 8
  %397 = load %struct.mntent** %mnt, align 8
  %398 = icmp ne %struct.mntent* %397, null
  br i1 %398, label %bb38, label %bb67

bb67:                                             ; preds = %bb66
  %399 = load %struct.FILE** %fp, align 8
  %400 = call i32 bitcast (i32 (%4*)* @endmntent to i32 (%struct.FILE*)*)(%struct.FILE* %399) nounwind
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %free_then_fail, label %bb68

bb68:                                             ; preds = %bb33, %bb67
  %402 = load %struct.mount_entry*** %mtail, align 8
  store %struct.mount_entry* null, %struct.mount_entry** %402, align 8
  %403 = load %struct.mount_entry** %mount_list, align 8
  store %struct.mount_entry* %403, %struct.mount_entry** %0, align 8
  br label %bb73

free_then_fail:                                   ; preds = %bb67, %bb33, %bb32
  %404 = call i32* @__errno_location() nounwind readnone
  %405 = load i32* %404, align 4
  store i32 %405, i32* %saved_errno69, align 4
  %406 = load %struct.mount_entry*** %mtail, align 8
  store %struct.mount_entry* null, %struct.mount_entry** %406, align 8
  br label %bb71

bb70:                                             ; preds = %bb71
  %407 = load %struct.mount_entry** %mount_list, align 8
  %408 = getelementptr inbounds %struct.mount_entry* %407, i32 0, i32 6
  %409 = load %struct.mount_entry** %408, align 8
  store %struct.mount_entry* %409, %struct.mount_entry** %me, align 8
  %410 = load %struct.mount_entry** %mount_list, align 8
  call void @free_mount_entry(%struct.mount_entry* %410) nounwind
  %411 = load %struct.mount_entry** %me, align 8
  store %struct.mount_entry* %411, %struct.mount_entry** %mount_list, align 8
  br label %bb71

bb71:                                             ; preds = %bb70, %free_then_fail
  %412 = load %struct.mount_entry** %mount_list, align 8
  %413 = icmp ne %struct.mount_entry* %412, null
  br i1 %413, label %bb70, label %bb72

bb72:                                             ; preds = %bb71
  %414 = call i32* @__errno_location() nounwind readnone
  %415 = load i32* %saved_errno69, align 4
  store i32 %415, i32* %414, align 4
  store %struct.mount_entry* null, %struct.mount_entry** %0, align 8
  br label %bb73

bb73:                                             ; preds = %bb72, %bb68, %bb36
  %416 = load %struct.mount_entry** %0, align 8
  store %struct.mount_entry* %416, %struct.mount_entry** %retval, align 8
  %retval74 = load %struct.mount_entry** %retval
  ret %struct.mount_entry* %retval74
}

define void @free_mount_entry(%struct.mount_entry* %me) nounwind {
entry:
  %me_addr = alloca %struct.mount_entry*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mount_entry* %me, %struct.mount_entry** %me_addr
  %0 = load %struct.mount_entry** %me_addr, align 8
  %1 = getelementptr inbounds %struct.mount_entry* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  call void @free(i8* %2) nounwind
  %3 = load %struct.mount_entry** %me_addr, align 8
  %4 = getelementptr inbounds %struct.mount_entry* %3, i32 0, i32 1
  %5 = load i8** %4, align 8
  call void @free(i8* %5) nounwind
  %6 = load %struct.mount_entry** %me_addr, align 8
  %7 = getelementptr inbounds %struct.mount_entry* %6, i32 0, i32 2
  %8 = load i8** %7, align 8
  call void @free(i8* %8) nounwind
  %9 = load %struct.mount_entry** %me_addr, align 8
  %10 = getelementptr inbounds %struct.mount_entry* %9, i32 0, i32 5
  %11 = load i64* %10, align 8
  %int_cast_to_i64 = bitcast i64 61 to i64
  %12 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %12, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %13 = shl i64 %11, 61
  %int_cast_to_i641 = bitcast i64 63 to i64
  %14 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %14, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %15 = lshr i64 %13, 63
  %16 = trunc i64 %15 to i1
  %17 = icmp ne i1 %16, false
  br i1 %17, label %bb, label %bb1

bb:                                               ; preds = %klee_overshift_check.exit3
  %18 = load %struct.mount_entry** %me_addr, align 8
  %19 = getelementptr inbounds %struct.mount_entry* %18, i32 0, i32 3
  %20 = load i8** %19, align 8
  call void @free(i8* %20) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %klee_overshift_check.exit3
  %21 = load %struct.mount_entry** %me_addr, align 8
  %22 = bitcast %struct.mount_entry* %21 to i8*
  call void @free(i8* %22) nounwind
  ret void
}

define i8* @areadlink_with_size(i8* %file, i64 %size) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.1 = alloca i64
  %iftmp.0 = alloca i64
  %symlink_max = alloca i64
  %INITIAL_LIMIT_BOUND = alloca i64
  %initial_limit = alloca i64
  %buf_size = alloca i64
  %r = alloca i64
  %link_length = alloca i64
  %buffer = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 %size, i64* %size_addr
  store i64 1024, i64* %symlink_max, align 8
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8
  %1 = load i64* %symlink_max, align 8
  %2 = load i64* %INITIAL_LIMIT_BOUND, align 8
  %3 = icmp ult i64 %1, %2
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load i64* %symlink_max, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %iftmp.0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i64* %INITIAL_LIMIT_BOUND, align 8
  store i64 %6, i64* %iftmp.0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i64* %iftmp.0, align 8
  store i64 %7, i64* %initial_limit, align 8
  %8 = load i64* %size_addr, align 8
  %9 = load i64* %initial_limit, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %11 = load i64* %size_addr, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %iftmp.1, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %13 = load i64* %initial_limit, align 8
  store i64 %13, i64* %iftmp.1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load i64* %iftmp.1, align 8
  store i64 %14, i64* %buf_size, align 8
  br label %bb6

bb6:                                              ; preds = %bb14, %bb16, %bb5
  %15 = load i64* %buf_size, align 8
  %16 = call noalias i8* @malloc(i64 %15) nounwind
  store i8* %16, i8** %buffer, align 8
  %17 = load i8** %buffer, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb19

bb8:                                              ; preds = %bb6
  %19 = load i8** %file_addr, align 8
  %20 = load i8** %buffer, align 8
  %21 = load i64* %buf_size, align 8
  %22 = call i64 @readlink(i8* noalias %19, i8* noalias %20, i64 %21) nounwind
  store i64 %22, i64* %r, align 8
  %23 = load i64* %r, align 8
  store i64 %23, i64* %link_length, align 8
  %24 = load i64* %r, align 8
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %bb9, label %bb11

bb9:                                              ; preds = %bb8
  %26 = call i32* @__errno_location() nounwind readnone
  %27 = load i32* %26, align 4
  %28 = icmp ne i32 %27, 34
  br i1 %28, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %29 = call i32* @__errno_location() nounwind readnone
  %30 = load i32* %29, align 4
  store i32 %30, i32* %saved_errno, align 4
  %31 = load i8** %buffer, align 8
  call void @free(i8* %31) nounwind
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %saved_errno, align 4
  store i32 %33, i32* %32, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb11:                                             ; preds = %bb9, %bb8
  %34 = load i64* %link_length, align 8
  %35 = load i64* %buf_size, align 8
  %36 = icmp ult i64 %34, %35
  %37 = load i8** %buffer, align 8
  br i1 %36, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %38 = load i64* %link_length, align 8
  %39 = getelementptr inbounds i8* %37, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load i8** %buffer, align 8
  store i8* %40, i8** %0, align 8
  br label %bb19

bb13:                                             ; preds = %bb11
  call void @free(i8* %37) nounwind
  %41 = load i64* %buf_size, align 8
  %42 = icmp ule i64 %41, 4611686018427387903
  %43 = load i64* %buf_size, align 8
  br i1 %42, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  %44 = mul i64 %43, 2
  store i64 %44, i64* %buf_size, align 8
  br label %bb6

bb15:                                             ; preds = %bb13
  %45 = icmp ule i64 %43, 9223372036854775806
  br i1 %45, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i64 9223372036854775807, i64* %buf_size, align 8
  br label %bb6

bb17:                                             ; preds = %bb15
  %46 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %46, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb12, %bb10, %bb7
  %47 = load i8** %0, align 8
  store i8* %47, i8** %retval, align 8
  %retval20 = load i8** %retval
  ret i8* %retval20
}

define internal void @__argmatch_die() nounwind {
entry:
  call void @usage(i32 1) nounwind
  unreachable
}

define i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %i = alloca i64
  %arglen = alloca i64
  %matchind = alloca i64
  %ambiguous = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 -1, i64* %matchind, align 8
  store i8 0, i8* %ambiguous, align 1
  %1 = load i8** %arg_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %arglen, align 8
  store i64 0, i64* %i, align 8
  br label %bb9

bb:                                               ; preds = %bb9
  %3 = load i8*** %arglist_addr, align 8
  %4 = load i64* %i, align 8
  %5 = getelementptr inbounds i8** %3, i64 %4
  %6 = load i8** %5, align 1
  %7 = load i8** %arg_addr, align 8
  %8 = load i64* %arglen, align 8
  %9 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %11 = load i8*** %arglist_addr, align 8
  %12 = load i64* %i, align 8
  %13 = getelementptr inbounds i8** %11, i64 %12
  %14 = load i8** %13, align 1
  %15 = call i64 @strlen(i8* %14) nounwind readonly
  %16 = load i64* %arglen, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %18 = load i64* %i, align 8
  store i64 %18, i64* %0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  %19 = load i64* %matchind, align 8
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %21 = load i64* %i, align 8
  store i64 %21, i64* %matchind, align 8
  br label %bb8

bb5:                                              ; preds = %bb3
  %22 = load i8** %vallist_addr, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %24 = load i64* %valsize_addr, align 8
  %25 = load i64* %i, align 8
  %26 = mul i64 %24, %25
  %27 = load i8** %vallist_addr, align 8
  %28 = getelementptr inbounds i8* %27, i64 %26
  %29 = load i64* %matchind, align 8
  %30 = load i64* %valsize_addr, align 8
  %31 = mul i64 %30, %29
  %32 = load i8** %vallist_addr, align 8
  %33 = getelementptr inbounds i8* %32, i64 %31
  %34 = load i64* %valsize_addr, align 8
  %35 = call i32 @memcmp(i8* %33, i8* %28, i64 %34) nounwind readonly
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb5
  store i8 1, i8* %ambiguous, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb
  %37 = load i64* %i, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %i, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %entry
  %39 = load i8*** %arglist_addr, align 8
  %40 = load i64* %i, align 8
  %41 = getelementptr inbounds i8** %39, i64 %40
  %42 = load i8** %41, align 1
  %43 = icmp ne i8* %42, null
  br i1 %43, label %bb, label %bb10

bb10:                                             ; preds = %bb9
  %44 = load i8* %ambiguous, align 1
  %toBool = icmp ne i8 %44, 0
  br i1 %toBool, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i64 -2, i64* %0, align 8
  br label %bb13

bb12:                                             ; preds = %bb10
  %45 = load i64* %matchind, align 8
  store i64 %45, i64* %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb2
  %46 = load i64* %0, align 8
  store i64 %46, i64* %retval, align 8
  %retval14 = load i64* %retval
  ret i64 %retval14
}

define void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %value_addr = alloca i8*, align 8
  %problem_addr = alloca i64, align 8
  %iftmp.17 = alloca i8*
  %format = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %value, i8** %value_addr
  store i64 %problem, i64* %problem_addr
  %0 = load i64* %problem_addr, align 8
  %1 = icmp eq i64 %0, -1
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str274, i64 0, i64 0)) nounwind
  store i8* %2, i8** %iftmp.17, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %3 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str1275, i64 0, i64 0)) nounwind
  store i8* %3, i8** %iftmp.17, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i8** %iftmp.17, align 8
  store i8* %4, i8** %format, align 8
  %5 = load i8** %context_addr, align 8
  %6 = call i8* @quote_n(i32 1, i8* %5) nounwind
  %7 = load i8** %value_addr, align 8
  %8 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %7) nounwind
  %9 = load i8** %format, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %9, i8* %8, i8* %6) nounwind
  ret void
}

define void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) nounwind {
entry:
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %i = alloca i64
  %last_val = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i8* null, i8** %last_val, align 8
  %0 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str2276, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  store i64 0, i64* %i, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %3 = load i64* %i, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %5 = load i64* %valsize_addr, align 8
  %6 = load i64* %i, align 8
  %7 = mul i64 %5, %6
  %8 = load i8** %vallist_addr, align 8
  %9 = getelementptr inbounds i8* %8, i64 %7
  %10 = load i8** %last_val, align 8
  %11 = load i64* %valsize_addr, align 8
  %12 = call i32 @memcmp(i8* %10, i8* %9, i64 %11) nounwind readonly
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  %14 = load i8*** %arglist_addr, align 8
  %15 = load i64* %i, align 8
  %16 = getelementptr inbounds i8** %14, i64 %15
  %17 = load i8** %16, align 1
  %18 = call i8* @quote(i8* %17) nounwind
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str3277, i64 0, i64 0), i8* %18) nounwind
  %21 = load i64* %valsize_addr, align 8
  %22 = load i64* %i, align 8
  %23 = mul i64 %21, %22
  %24 = load i8** %vallist_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 %23
  store i8* %25, i8** %last_val, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %26 = load i8*** %arglist_addr, align 8
  %27 = load i64* %i, align 8
  %28 = getelementptr inbounds i8** %26, i64 %27
  %29 = load i8** %28, align 1
  %30 = call i8* @quote(i8* %29) nounwind
  %31 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %32 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %31, i8* noalias getelementptr inbounds ([5 x i8]* @.str4278, i64 0, i64 0), i8* %30) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %33 = load i64* %i, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %i, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %35 = load i8*** %arglist_addr, align 8
  %36 = load i64* %i, align 8
  %37 = getelementptr inbounds i8** %35, i64 %36
  %38 = load i8** %37, align 1
  %39 = icmp ne i8* %38, null
  br i1 %39, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %40 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %41 = call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 10, %struct.FILE* %40) nounwind
  ret void
}

define i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %exit_fn_addr = alloca void ()*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store void ()* %exit_fn, void ()** %exit_fn_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i8*** %arglist_addr, align 8
  %3 = load i8** %vallist_addr, align 8
  %4 = load i64* %valsize_addr, align 8
  %5 = call i64 @argmatch(i8* %1, i8** %2, i8* %3, i64 %4) nounwind readonly
  store i64 %5, i64* %res, align 8
  %6 = load i64* %res, align 8
  %7 = icmp sge i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = load i64* %res, align 8
  store i64 %8, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = load i8** %context_addr, align 8
  %10 = load i8** %arg_addr, align 8
  %11 = load i64* %res, align 8
  call void @argmatch_invalid(i8* %9, i8* %10, i64 %11) nounwind
  %12 = load i8*** %arglist_addr, align 8
  %13 = load i8** %vallist_addr, align 8
  %14 = load i64* %valsize_addr, align 8
  call void @argmatch_valid(i8** %12, i8* %13, i64 %14) nounwind
  %15 = load void ()** %exit_fn_addr, align 8
  call void %15() nounwind
  store i64 -1, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %value_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %i = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %value, i8** %value_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 0, i64* %i, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %1 = load i64* %valsize_addr, align 8
  %2 = load i64* %i, align 8
  %3 = mul i64 %1, %2
  %4 = load i8** %vallist_addr, align 8
  %5 = getelementptr inbounds i8* %4, i64 %3
  %6 = load i8** %value_addr, align 8
  %7 = load i64* %valsize_addr, align 8
  %8 = call i32 @memcmp(i8* %6, i8* %5, i64 %7) nounwind readonly
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8*** %arglist_addr, align 8
  %11 = load i64* %i, align 8
  %12 = getelementptr inbounds i8** %10, i64 %11
  %13 = load i8** %12, align 1
  store i8* %13, i8** %0, align 8
  br label %bb5

bb2:                                              ; preds = %bb
  %14 = load i64* %i, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %i, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %16 = load i8*** %arglist_addr, align 8
  %17 = load i64* %i, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  %19 = load i8** %18, align 1
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval6 = load i8** %retval
  ret i8* %retval6
}

define i64 @rotl64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i32 @rotl32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @rotr32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i64 @rotl_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i16 @rotl16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i16 @rotr16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i8 @rotl8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define zeroext i8 @rotr8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i32 @c_strcasecmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.2 = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %p1 = alloca i8*
  %p2 = alloca i8*
  %c1 = alloca i8
  %c2 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8
  store i8* %1, i8** %p1, align 8
  %2 = load i8** %s2_addr, align 8
  store i8* %2, i8** %p2, align 8
  %3 = load i8** %p1, align 8
  %4 = load i8** %p2, align 8
  %5 = icmp eq i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %bb2, %entry
  %6 = load i8** %p1, align 8
  %7 = load i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = call i32 @c_tolower(i32 %8) nounwind
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %c1, align 1
  %11 = load i8** %p2, align 8
  %12 = load i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = call i32 @c_tolower(i32 %13) nounwind
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %c2, align 1
  %16 = load i8* %c1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %18 = load i8** %p1, align 8
  %19 = getelementptr inbounds i8* %18, i64 1
  store i8* %19, i8** %p1, align 8
  %20 = load i8** %p2, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %p2, align 8
  %22 = load i8* %c1, align 1
  %23 = load i8* %c2, align 1
  %24 = icmp eq i8 %22, %23
  br i1 %24, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %25 = load i8* %c1, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8* %c2, align 1
  %28 = zext i8 %27 to i32
  %29 = sub nsw i32 %26, %28
  store i32 %29, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  ret i32 %retval5
}

define i32 @close_stream(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %some_pending = alloca i8
  %prev_fail = alloca i8
  %fclose_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = call i64 bitcast (i64 (%4*)* @__fpending to i64 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  %3 = icmp ne i64 %2, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %some_pending, align 1
  %5 = load %struct.FILE** %stream_addr, align 8
  %6 = call i32 bitcast (i32 (%4*)* @ferror_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %prev_fail, align 1
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 @rpl_fclose(%struct.FILE* %9) nounwind
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %fclose_fail, align 1
  %13 = load i8* %prev_fail, align 1
  %toBool = icmp ne i8 %13, 0
  br i1 %toBool, label %bb8, label %bb

bb:                                               ; preds = %entry
  %14 = load i8* %fclose_fail, align 1
  %toBool1 = icmp ne i8 %14, 0
  %toBool1not = xor i1 %toBool1, true
  %toBool1not2 = zext i1 %toBool1not to i8
  %toBool4 = icmp ne i8 %toBool1not2, 0
  br i1 %toBool4, label %bb15, label %bb5

bb5:                                              ; preds = %bb
  %15 = load i8* %some_pending, align 1
  %toBool6 = icmp ne i8 %15, 0
  br i1 %toBool6, label %bb8, label %bb7

bb7:                                              ; preds = %bb5
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %17, 9
  br i1 %18, label %bb8, label %bb15

bb8:                                              ; preds = %bb7, %bb5, %entry
  %19 = load i8* %fclose_fail, align 1
  %toBool9 = icmp ne i8 %19, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb8
  %20 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %20, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb8
  store i32 -1, i32* %0, align 4
  br label %bb16

bb15:                                             ; preds = %bb7, %bb
  store i32 0, i32* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval17 = load i32* %retval
  ret i32 %retval17
}

define i32 @open_safer(i8* %file, i32 %flags, ...) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.0 = alloca i8*
  %mode = alloca i32
  %ap = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %flags, i32* %flags_addr
  store i32 0, i32* %mode, align 4
  %1 = load i32* %flags_addr, align 4
  %2 = and i32 %1, 64
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %ap1 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap12 = bitcast %struct.__va_list_tag* %ap1 to i8*
  call void @llvm.va_start(i8* %ap12)
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %5 = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = icmp uge i32 %6, 48
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  br i1 %7, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 3
  %10 = load i8** %9, align 8
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %12 = getelementptr inbounds %struct.__va_list_tag* %11, i32 0, i32 0
  %13 = load i32* %12, align 8
  %14 = inttoptr i32 %13 to i8*
  %15 = ptrtoint i8* %10 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i8*
  store i8* %18, i8** %addr.0, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %20 = getelementptr inbounds %struct.__va_list_tag* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = add i32 %21, 8
  %23 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %24 = getelementptr inbounds %struct.__va_list_tag* %23, i32 0, i32 0
  store i32 %22, i32* %24, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %25 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 2
  %26 = load i8** %25, align 8
  store i8* %26, i8** %addr.0, align 8
  %27 = getelementptr inbounds i8* %26, i64 8
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %29 = getelementptr inbounds %struct.__va_list_tag* %28, i32 0, i32 2
  store i8* %27, i8** %29, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %30 = load i8** %addr.0, align 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32* %31, align 4
  store i32 %32, i32* %mode, align 4
  %ap6 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap67 = bitcast %struct.__va_list_tag* %ap6 to i8*
  call void @llvm.va_end(i8* %ap67)
  br label %bb8

bb8:                                              ; preds = %bb5, %entry
  %33 = load i8** %file_addr, align 8
  %34 = load i32* %flags_addr, align 4
  %35 = load i32* %mode, align 4
  %36 = call i32 (i8*, i32, ...)* @open(i8* %33, i32 %34, i32 %35) nounwind
  %37 = call i32 @fd_safer(i32 %36) nounwind
  store i32 %37, i32* %0, align 4
  %38 = load i32* %0, align 4
  store i32 %38, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define zeroext i8 @hard_locale(i32 %category) nounwind {
entry:
  %category_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %hard = alloca i8
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %category, i32* %category_addr
  store i8 1, i8* %hard, align 1
  %1 = load i32* %category_addr, align 4
  %2 = call i8* @setlocale(i32 %1, i8* null) nounwind
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %5 = load i8** %p, align 8
  %6 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str284, i64 0, i64 0)) nounwind readonly
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %8 = load i8** %p, align 8
  %9 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([6 x i8]* @.str1285, i64 0, i64 0)) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1, %bb
  store i8 0, i8* %hard, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2, %entry
  %11 = load i8* %hard, align 1
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define i64 @hash_pjw(i8* %x, i64 %tablesize) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %tablesize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %h = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %tablesize, i64* %tablesize_addr
  store i64 0, i64* %h, align 8
  %1 = load i8** %x_addr, align 8
  store i8* %1, i8** %s, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %2 = load i8** %s, align 8
  %3 = load i8* %2, align 1
  %4 = sext i8 %3 to i64
  %5 = load i64* %h, align 8
  %int_cast_to_i641 = bitcast i64 55 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %7 = lshr i64 %5, 55
  %int_cast_to_i642 = bitcast i64 9 to i64
  %8 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %8, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %9 = shl i64 %5, 9
  %10 = or i64 %7, %9
  %11 = add i64 %4, %10
  store i64 %11, i64* %h, align 8
  %12 = load i8** %s, align 8
  %13 = getelementptr inbounds i8* %12, i64 1
  store i8* %13, i8** %s, align 8
  br label %bb1

bb1:                                              ; preds = %klee_overshift_check.exit5, %entry
  %14 = load i8** %s, align 8
  %15 = load i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %17 = load i64* %h, align 8
  %18 = load i64* %tablesize_addr, align 8
  %int_cast_to_i64 = bitcast i64 %18 to i64
  %19 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %20 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %20, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %21 = urem i64 %17, %18
  store i64 %21, i64* %0, align 8
  %22 = load i64* %0, align 8
  store i64 %22, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @locale_charset() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %codeset = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @nl_langinfo(i32 14) nounwind
  store i8* %1, i8** %codeset, align 8
  %2 = load i8** %codeset, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8]* @.str288, i64 0, i64 0), i8** %codeset, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i8** %codeset, align 8
  %5 = getelementptr inbounds i8* %4, i64 0
  %6 = load i8* %5, align 1
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8* getelementptr inbounds ([6 x i8]* @.str1289, i64 0, i64 0), i8** %codeset, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %8 = load i8** %codeset, align 8
  store i8* %8, i8** %0, align 8
  %9 = load i8** %0, align 8
  store i8* %9, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define i32 @fd_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca i32
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = icmp sge i32 %1, 0
  %3 = load i32* %fd_addr, align 4
  %4 = icmp sle i32 %3, 2
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  %5 = load i32* %fd_addr, align 4
  %6 = call i32 @dup_safer(i32 %5) nounwind
  store i32 %6, i32* %f, align 4
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  store i32 %8, i32* %e, align 4
  %9 = load i32* %fd_addr, align 4
  %10 = call i32 @close(i32 %9) nounwind
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %e, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32* %f, align 4
  store i32 %13, i32* %fd_addr, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %entry
  %14 = load i32* %fd_addr, align 4
  store i32 %14, i32* %0, align 4
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @rpl_fclose(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %saved_errno = alloca i32
  %fd = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i32 0, i32* %saved_errno, align 4
  store i32 0, i32* %result, align 4
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = icmp slt i32 %3, 0
  %5 = load %struct.FILE** %fp_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  store i32 %6, i32* %0, align 4
  br label %bb8

bb1:                                              ; preds = %entry
  %7 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = load %struct.FILE** %fp_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  %11 = call i64 @lseek(i32 %10, i64 0, i32 1) nounwind
  %12 = icmp ne i64 %11, -1
  br i1 %12, label %bb3, label %bb5

bb3:                                              ; preds = %bb2, %bb1
  %13 = load %struct.FILE** %fp_addr, align 8
  %14 = call i32 @rpl_fflush(%struct.FILE* %13) nounwind
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  store i32 %17, i32* %saved_errno, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb2
  %18 = load %struct.FILE** %fp_addr, align 8
  %19 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %18) nounwind
  store i32 %19, i32* %result, align 4
  %20 = load i32* %saved_errno, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %22 = call i32* @__errno_location() nounwind readnone
  %23 = load i32* %saved_errno, align 4
  store i32 %23, i32* %22, align 4
  store i32 -1, i32* %result, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %24 = load i32* %result, align 4
  store i32 %24, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb
  %25 = load i32* %0, align 4
  store i32 %25, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define internal void @clear_ungetc_buffer_preserving_position(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  %0 = load %struct.FILE** %fp_addr, align 8
  %1 = getelementptr inbounds %struct.FILE* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = and i32 %2, 256
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb, label %return

bb:                                               ; preds = %entry
  %5 = load %struct.FILE** %fp_addr, align 8
  %6 = call i32 @rpl_fseeko(%struct.FILE* %5, i64 0, i32 1) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define i32 @rpl_fflush(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = icmp eq %struct.FILE* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.FILE** %stream_addr, align 8
  %4 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %3) nounwind
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %6 = load %struct.FILE** %stream_addr, align 8
  %7 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %6) nounwind
  store i32 %7, i32* %0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %8 = load %struct.FILE** %stream_addr, align 8
  call void @clear_ungetc_buffer_preserving_position(%struct.FILE* %8) nounwind
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  store i32 %10, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i32 @rpl_fseeko(%struct.FILE* %fp, i64 %offset, i32 %whence) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = getelementptr inbounds %struct.FILE* %1, i32 0, i32 2
  %3 = load i8** %2, align 8
  %4 = load %struct.FILE** %fp_addr, align 8
  %5 = getelementptr inbounds %struct.FILE* %4, i32 0, i32 1
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %3, %6
  br i1 %7, label %bb, label %bb5

bb:                                               ; preds = %entry
  %8 = load %struct.FILE** %fp_addr, align 8
  %9 = getelementptr inbounds %struct.FILE* %8, i32 0, i32 5
  %10 = load i8** %9, align 8
  %11 = load %struct.FILE** %fp_addr, align 8
  %12 = getelementptr inbounds %struct.FILE* %11, i32 0, i32 4
  %13 = load i8** %12, align 8
  %14 = icmp eq i8* %10, %13
  br i1 %14, label %bb1, label %bb5

bb1:                                              ; preds = %bb
  %15 = load %struct.FILE** %fp_addr, align 8
  %16 = getelementptr inbounds %struct.FILE* %15, i32 0, i32 9
  %17 = load i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %19 = load %struct.FILE** %fp_addr, align 8
  %20 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %19) nounwind
  %21 = load i64* %offset_addr, align 8
  %22 = load i32* %whence_addr, align 4
  %23 = call i64 @lseek(i32 %20, i64 %21, i32 %22) nounwind
  store i64 %23, i64* %pos, align 8
  %24 = load i64* %pos, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 -1, i32* %0, align 4
  br label %bb6

bb4:                                              ; preds = %bb2
  %26 = load %struct.FILE** %fp_addr, align 8
  %27 = getelementptr inbounds %struct.FILE* %26, i32 0, i32 0
  %28 = load i32* %27, align 8
  %29 = and i32 %28, -17
  %30 = load %struct.FILE** %fp_addr, align 8
  %31 = getelementptr inbounds %struct.FILE* %30, i32 0, i32 0
  store i32 %29, i32* %31, align 8
  %32 = load %struct.FILE** %fp_addr, align 8
  %33 = getelementptr inbounds %struct.FILE* %32, i32 0, i32 21
  %34 = load i64* %pos, align 8
  store i64 %34, i64* %33, align 8
  store i32 0, i32* %0, align 4
  br label %bb6

bb5:                                              ; preds = %bb1, %bb, %entry
  %35 = load %struct.FILE** %fp_addr, align 8
  %36 = load i64* %offset_addr, align 8
  %37 = load i32* %whence_addr, align 4
  %38 = call i32 bitcast (i32 (%4*, i64, i32)* @fseek to i32 (%struct.FILE*, i64, i32)*)(%struct.FILE* %35, i64 %36, i32 %37) nounwind
  store i32 %38, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %39 = load i32* %0, align 4
  store i32 %39, i32* %retval, align 4
  %retval7 = load i32* %retval
  ret i32 %retval7
}

define i32 @dup_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 0, i32 3) nounwind
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @rpl_fcntl(i32 %fd, i32 %action, ...) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %action_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.4 = alloca i8*
  %addr.0 = alloca i8*
  %arg = alloca [1 x %struct.__va_list_tag]
  %result = alloca i32
  %target = alloca i32
  %flags = alloca i32
  %saved_errno = alloca i32
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %action, i32* %action_addr
  store i32 -1, i32* %result, align 4
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*
  call void @llvm.va_start(i8* %arg12)
  %1 = load i32* %action_addr, align 4
  %cond = icmp eq i32 %1, 1030
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %3 = getelementptr inbounds %struct.__va_list_tag* %2, i32 0, i32 0
  %4 = load i32* %3, align 8
  %5 = icmp uge i32 %4, 48
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  br i1 %cond, label %bb, label %bb19

bb:                                               ; preds = %entry
  br i1 %5, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %7 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %8 = load i8** %7, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 0
  %11 = load i32* %10, align 8
  %12 = inttoptr i32 %11 to i8*
  %13 = ptrtoint i8* %8 to i64
  %14 = ptrtoint i8* %12 to i64
  %15 = add i64 %13, %14
  %16 = inttoptr i64 %15 to i8*
  store i8* %16, i8** %addr.0, align 8
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %18 = getelementptr inbounds %struct.__va_list_tag* %17, i32 0, i32 0
  %19 = load i32* %18, align 8
  %20 = add i32 %19, 8
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %22 = getelementptr inbounds %struct.__va_list_tag* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %23 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %24 = load i8** %23, align 8
  store i8* %24, i8** %addr.0, align 8
  %25 = getelementptr inbounds i8* %24, i64 8
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %27 = getelementptr inbounds %struct.__va_list_tag* %26, i32 0, i32 2
  store i8* %25, i8** %27, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %28 = load i8** %addr.0, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4
  store i32 %30, i32* %target, align 4
  %31 = load i32* @have_dupfd_cloexec.2634, align 4
  %32 = icmp sge i32 %31, 0
  %33 = load i32* %fd_addr, align 4
  br i1 %32, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %34 = load i32* %action_addr, align 4
  %35 = load i32* %target, align 4
  %36 = call i32 (i32, i32, ...)* @fcntl(i32 %33, i32 %34, i32 %35) nounwind
  store i32 %36, i32* %result, align 4
  %37 = load i32* %result, align 4
  %38 = icmp sge i32 %37, 0
  br i1 %38, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %39 = call i32* @__errno_location() nounwind readnone
  %40 = load i32* %39, align 4
  %41 = icmp ne i32 %40, 22
  br i1 %41, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb6
  store i32 1, i32* @have_dupfd_cloexec.2634, align 4
  br label %bb13

bb9:                                              ; preds = %bb7
  %42 = load i32* %fd_addr, align 4
  %43 = load i32* %target, align 4
  %44 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %42, i32 0, i32 %43) nounwind
  store i32 %44, i32* %result, align 4
  %45 = load i32* %result, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %bb23, label %bb10

bb10:                                             ; preds = %bb9
  store i32 -1, i32* @have_dupfd_cloexec.2634, align 4
  br label %bb13

bb12:                                             ; preds = %bb5
  %47 = load i32* %target, align 4
  %48 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %33, i32 0, i32 %47) nounwind
  store i32 %48, i32* %result, align 4
  br label %bb13

bb13:                                             ; preds = %bb8, %bb10, %bb12
  %49 = load i32* %result, align 4
  %50 = icmp sge i32 %49, 0
  %51 = load i32* @have_dupfd_cloexec.2634, align 4
  %52 = icmp eq i32 %51, -1
  %or.cond = and i1 %50, %52
  br i1 %or.cond, label %bb15, label %bb23

bb15:                                             ; preds = %bb13
  %53 = load i32* %result, align 4
  %54 = call i32 (i32, i32, ...)* @fcntl(i32 %53, i32 1) nounwind
  store i32 %54, i32* %flags, align 4
  %55 = load i32* %flags, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %57 = load i32* %flags, align 4
  %58 = or i32 %57, 1
  %59 = load i32* %result, align 4
  %60 = call i32 (i32, i32, ...)* @fcntl(i32 %59, i32 2, i32 %58) nounwind
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %bb17, label %bb23

bb17:                                             ; preds = %bb16, %bb15
  %62 = call i32* @__errno_location() nounwind readnone
  %63 = load i32* %62, align 4
  store i32 %63, i32* %saved_errno, align 4
  %64 = load i32* %result, align 4
  %65 = call i32 @close(i32 %64) nounwind
  %66 = call i32* @__errno_location() nounwind readnone
  %67 = load i32* %saved_errno, align 4
  store i32 %67, i32* %66, align 4
  store i32 -1, i32* %result, align 4
  br label %bb23

bb19:                                             ; preds = %entry
  br i1 %5, label %bb21, label %bb20

bb20:                                             ; preds = %bb19
  %68 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %69 = load i8** %68, align 8
  %70 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %71 = getelementptr inbounds %struct.__va_list_tag* %70, i32 0, i32 0
  %72 = load i32* %71, align 8
  %73 = inttoptr i32 %72 to i8*
  %74 = ptrtoint i8* %69 to i64
  %75 = ptrtoint i8* %73 to i64
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i8*
  store i8* %77, i8** %addr.4, align 8
  %78 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0
  %80 = load i32* %79, align 8
  %81 = add i32 %80, 8
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 0
  store i32 %81, i32* %83, align 8
  br label %bb22

bb21:                                             ; preds = %bb19
  %84 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %85 = load i8** %84, align 8
  store i8* %85, i8** %addr.4, align 8
  %86 = getelementptr inbounds i8* %85, i64 8
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %88 = getelementptr inbounds %struct.__va_list_tag* %87, i32 0, i32 2
  store i8* %86, i8** %88, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %89 = load i8** %addr.4, align 8
  %90 = bitcast i8* %89 to i8**
  %91 = load i8** %90, align 8
  store i8* %91, i8** %p, align 8
  %92 = load i32* %fd_addr, align 4
  %93 = load i32* %action_addr, align 4
  %94 = load i8** %p, align 8
  %95 = call i32 (i32, i32, ...)* @fcntl(i32 %92, i32 %93, i8* %94) nounwind
  store i32 %95, i32* %result, align 4
  br label %bb23

bb23:                                             ; preds = %bb13, %bb16, %bb17, %bb22, %bb9
  %arg24 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg2425 = bitcast %struct.__va_list_tag* %arg24 to i8*
  call void @llvm.va_end(i8* %arg2425)
  %96 = load i32* %result, align 4
  store i32 %96, i32* %0, align 4
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval26 = load i32* %retval
  ret i32 %retval26
}

define weak i32* @__errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @errno, i32** %0, align 8, !dbg !5661
  %1 = load i32** %0, align 8, !dbg !5661
  store i32* %1, i32** %retval, align 8, !dbg !5661
  %retval1 = load i32** %retval, !dbg !5661
  ret i32* %retval1, !dbg !5661
}

define i32 @__fgetc_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %uc16 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5663
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5663
  %3 = load i8** %2, align 8, !dbg !5663
  %4 = load %4** %stream_addr, align 8, !dbg !5663
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !5663
  %6 = load i8** %5, align 8, !dbg !5663
  %7 = icmp ult i8* %3, %6, !dbg !5663
  %8 = load %4** %stream_addr, align 8, !dbg !5665
  br i1 %7, label %bb, label %bb1, !dbg !5663

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5665
  %10 = load i8** %9, align 8, !dbg !5665
  %11 = load i8* %10, align 1, !dbg !5665
  %12 = zext i8 %11 to i32, !dbg !5665
  store i32 %12, i32* %0, align 4, !dbg !5665
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5665
  %14 = load %4** %stream_addr, align 8, !dbg !5665
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5665
  store i8* %13, i8** %15, align 8, !dbg !5665
  br label %bb19, !dbg !5665

bb1:                                              ; preds = %entry
  %16 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5666
  %17 = load i16* %16, align 8, !dbg !5666
  %18 = zext i16 %17 to i32, !dbg !5666
  %19 = and i32 %18, 131, !dbg !5666
  %20 = icmp ugt i32 %19, 128, !dbg !5666
  br i1 %20, label %bb3, label %bb2, !dbg !5666

bb2:                                              ; preds = %bb1
  %21 = load %4** %stream_addr, align 8, !dbg !5666
  %22 = call i32 @__stdio_trans2r_o(%4* noalias %21, i32 128) nounwind, !dbg !5666
  %23 = icmp eq i32 %22, 0, !dbg !5666
  br i1 %23, label %bb3, label %bb18, !dbg !5666

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5667
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5667
  %26 = load i16* %25, align 8, !dbg !5667
  %27 = zext i16 %26 to i32, !dbg !5667
  %28 = and i32 %27, 2, !dbg !5667
  %29 = icmp ne i32 %28, 0, !dbg !5667
  %30 = load %4** %stream_addr, align 8, !dbg !5668
  br i1 %29, label %bb4, label %bb5, !dbg !5667

bb4:                                              ; preds = %bb3
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5668
  %32 = load i16* %31, align 8, !dbg !5668
  %33 = zext i16 %32 to i32, !dbg !5668
  %34 = and i32 %33, 1, !dbg !5668
  %35 = load %4** %stream_addr, align 8, !dbg !5668
  %36 = getelementptr inbounds %4* %35, i32 0, i32 10, !dbg !5668
  %37 = sext i32 %34 to i64, !dbg !5668
  %38 = getelementptr inbounds [2 x i32]* %36, i64 0, i64 %37, !dbg !5668
  %39 = load i32* %38, align 4, !dbg !5668
  %40 = trunc i32 %39 to i8, !dbg !5668
  store i8 %40, i8* %uc, align 1, !dbg !5668
  %41 = sub i16 %32, 1, !dbg !5668
  %42 = load %4** %stream_addr, align 8, !dbg !5668
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !5668
  store i16 %41, i16* %43, align 8, !dbg !5668
  %44 = load %4** %stream_addr, align 8, !dbg !5670
  %45 = getelementptr inbounds %4* %44, i32 0, i32 10, !dbg !5670
  %46 = getelementptr inbounds [2 x i32]* %45, i64 0, i64 1, !dbg !5670
  store i32 0, i32* %46, align 4, !dbg !5670
  %47 = load i8* %uc, align 1, !dbg !5671
  %48 = zext i8 %47 to i32, !dbg !5671
  store i32 %48, i32* %0, align 4, !dbg !5671
  br label %bb19, !dbg !5671

bb5:                                              ; preds = %bb3
  %49 = getelementptr inbounds %4* %30, i32 0, i32 6, !dbg !5672
  %50 = load i8** %49, align 8, !dbg !5672
  %51 = load %4** %stream_addr, align 8, !dbg !5672
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5672
  %53 = load i8** %52, align 8, !dbg !5672
  %54 = icmp ne i8* %50, %53, !dbg !5672
  %55 = load %4** %stream_addr, align 8, !dbg !5673
  br i1 %54, label %bb6, label %bb7, !dbg !5672

bb6:                                              ; preds = %bb5
  %56 = getelementptr inbounds %4* %55, i32 0, i32 5, !dbg !5673
  %57 = load i8** %56, align 8, !dbg !5673
  %58 = load i8* %57, align 1, !dbg !5673
  %59 = zext i8 %58 to i32, !dbg !5673
  store i32 %59, i32* %0, align 4, !dbg !5673
  %60 = getelementptr inbounds i8* %57, i64 1, !dbg !5673
  %61 = load %4** %stream_addr, align 8, !dbg !5673
  %62 = getelementptr inbounds %4* %61, i32 0, i32 5, !dbg !5673
  store i8* %60, i8** %62, align 8, !dbg !5673
  br label %bb19, !dbg !5673

bb7:                                              ; preds = %bb5
  %63 = getelementptr inbounds %4* %55, i32 0, i32 2, !dbg !5674
  %64 = load i32* %63, align 4, !dbg !5674
  %65 = icmp eq i32 %64, -2, !dbg !5674
  %66 = load %4** %stream_addr, align 8, !dbg !5675
  %67 = getelementptr inbounds %4* %66, i32 0, i32 0, !dbg !5675
  %68 = load i16* %67, align 8, !dbg !5675
  br i1 %65, label %bb8, label %bb9, !dbg !5674

bb8:                                              ; preds = %bb7
  %69 = or i16 %68, 4, !dbg !5675
  %70 = load %4** %stream_addr, align 8, !dbg !5675
  %71 = getelementptr inbounds %4* %70, i32 0, i32 0, !dbg !5675
  store i16 %69, i16* %71, align 8, !dbg !5675
  store i32 -1, i32* %0, align 4, !dbg !5676
  br label %bb19, !dbg !5676

bb9:                                              ; preds = %bb7
  %72 = zext i16 %68 to i32, !dbg !5677
  %73 = and i32 %72, 768, !dbg !5677
  %74 = icmp ne i32 %73, 0, !dbg !5677
  br i1 %74, label %bb10, label %bb11, !dbg !5677

bb10:                                             ; preds = %bb9
  %75 = call i32 @fflush_unlocked(%4* bitcast (%4** @_stdio_openlist to %4*)) nounwind, !dbg !5678
  br label %bb11, !dbg !5678

bb11:                                             ; preds = %bb10, %bb9
  %76 = load %4** %stream_addr, align 8, !dbg !5679
  %77 = getelementptr inbounds %4* %76, i32 0, i32 4, !dbg !5679
  %78 = load i8** %77, align 8, !dbg !5679
  %79 = load %4** %stream_addr, align 8, !dbg !5679
  %80 = getelementptr inbounds %4* %79, i32 0, i32 3, !dbg !5679
  %81 = load i8** %80, align 8, !dbg !5679
  %82 = icmp ne i8* %78, %81, !dbg !5679
  %83 = load %4** %stream_addr, align 8, !dbg !5680
  br i1 %82, label %bb12, label %bb15, !dbg !5679

bb12:                                             ; preds = %bb11
  %84 = getelementptr inbounds %4* %83, i32 0, i32 3, !dbg !5680
  %85 = load i8** %84, align 8, !dbg !5680
  %86 = load %4** %stream_addr, align 8, !dbg !5680
  %87 = getelementptr inbounds %4* %86, i32 0, i32 7, !dbg !5680
  store i8* %85, i8** %87, align 8, !dbg !5680
  %88 = load %4** %stream_addr, align 8, !dbg !5681
  %89 = call i64 @__stdio_rfill(%4* noalias %88) nounwind, !dbg !5681
  %90 = icmp ne i64 %89, 0, !dbg !5681
  br i1 %90, label %bb13, label %bb18, !dbg !5681

bb13:                                             ; preds = %bb12
  %91 = load %4** %stream_addr, align 8, !dbg !5682
  %92 = getelementptr inbounds %4* %91, i32 0, i32 6, !dbg !5682
  %93 = load i8** %92, align 8, !dbg !5682
  %94 = load %4** %stream_addr, align 8, !dbg !5682
  %95 = getelementptr inbounds %4* %94, i32 0, i32 7, !dbg !5682
  store i8* %93, i8** %95, align 8, !dbg !5682
  %96 = load %4** %stream_addr, align 8, !dbg !5683
  %97 = getelementptr inbounds %4* %96, i32 0, i32 5, !dbg !5683
  %98 = load i8** %97, align 8, !dbg !5683
  %99 = load i8* %98, align 1, !dbg !5683
  %100 = zext i8 %99 to i32, !dbg !5683
  store i32 %100, i32* %0, align 4, !dbg !5683
  %101 = getelementptr inbounds i8* %98, i64 1, !dbg !5683
  %102 = load %4** %stream_addr, align 8, !dbg !5683
  %103 = getelementptr inbounds %4* %102, i32 0, i32 5, !dbg !5683
  store i8* %101, i8** %103, align 8, !dbg !5683
  br label %bb19, !dbg !5683

bb15:                                             ; preds = %bb11
  %104 = call i64 @__stdio_READ(%4* %83, i8* %uc16, i64 1) nounwind, !dbg !5684
  %105 = icmp ne i64 %104, 0, !dbg !5684
  br i1 %105, label %bb17, label %bb18, !dbg !5684

bb17:                                             ; preds = %bb15
  %106 = load i8* %uc16, align 1, !dbg !5686
  %107 = zext i8 %106 to i32, !dbg !5686
  store i32 %107, i32* %0, align 4, !dbg !5686
  br label %bb19, !dbg !5686

bb18:                                             ; preds = %bb12, %bb15, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5687
  br label %bb19, !dbg !5687

bb19:                                             ; preds = %bb18, %bb17, %bb13, %bb8, %bb6, %bb4, %bb
  %108 = load i32* %0, align 4, !dbg !5665
  store i32 %108, i32* %retval, align 4, !dbg !5665
  %retval20 = load i32* %retval, !dbg !5665
  ret i32 %retval20, !dbg !5665
}

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

define i64 @__fpending(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5688
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5688
  %3 = load i16* %2, align 8, !dbg !5688
  %4 = zext i16 %3 to i32, !dbg !5688
  %5 = and i32 %4, 64, !dbg !5688
  %6 = icmp ne i32 %5, 0, !dbg !5688
  br i1 %6, label %bb, label %bb1, !dbg !5688

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5688
  %8 = getelementptr inbounds %4* %7, i32 0, i32 5, !dbg !5688
  %9 = load i8** %8, align 8, !dbg !5688
  %10 = ptrtoint i8* %9 to i64, !dbg !5688
  %11 = load %4** %stream_addr, align 8, !dbg !5688
  %12 = getelementptr inbounds %4* %11, i32 0, i32 3, !dbg !5688
  %13 = load i8** %12, align 8, !dbg !5688
  %14 = ptrtoint i8* %13 to i64, !dbg !5688
  %15 = sub nsw i64 %10, %14, !dbg !5688
  store i64 %15, i64* %iftmp.0, align 8, !dbg !5688
  br label %bb2, !dbg !5688

bb1:                                              ; preds = %entry
  store i64 0, i64* %iftmp.0, align 8, !dbg !5688
  br label %bb2, !dbg !5688

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %iftmp.0, align 8, !dbg !5688
  store i64 %16, i64* %0, align 8, !dbg !5688
  %17 = load i64* %0, align 8, !dbg !5688
  store i64 %17, i64* %retval, align 8, !dbg !5688
  %retval3 = load i64* %retval, !dbg !5688
  ret i64 %retval3, !dbg !5688
}

define i32 @__fputc_unlocked(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5690
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5690
  %3 = load i8** %2, align 8, !dbg !5690
  %4 = load %4** %stream_addr, align 8, !dbg !5690
  %5 = getelementptr inbounds %4* %4, i32 0, i32 8, !dbg !5690
  %6 = load i8** %5, align 8, !dbg !5690
  %7 = icmp ult i8* %3, %6, !dbg !5690
  %8 = load %4** %stream_addr, align 8, !dbg !5692
  br i1 %7, label %bb, label %bb1, !dbg !5690

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5692
  %10 = load i8** %9, align 8, !dbg !5692
  %11 = load i32* %c_addr, align 4, !dbg !5692
  %12 = trunc i32 %11 to i8, !dbg !5692
  store i8 %12, i8* %10, align 1, !dbg !5692
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5692
  %14 = load %4** %stream_addr, align 8, !dbg !5692
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5692
  store i8* %13, i8** %15, align 8, !dbg !5692
  %16 = load i32* %c_addr, align 4, !dbg !5693
  %17 = trunc i32 %16 to i8, !dbg !5693
  %18 = zext i8 %17 to i32, !dbg !5693
  store i32 %18, i32* %0, align 4, !dbg !5693
  br label %bb15, !dbg !5693

bb1:                                              ; preds = %entry
  %19 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5694
  %20 = load i16* %19, align 8, !dbg !5694
  %21 = zext i16 %20 to i32, !dbg !5694
  %22 = and i32 %21, 192, !dbg !5694
  %23 = icmp eq i32 %22, 192, !dbg !5694
  br i1 %23, label %bb3, label %bb2, !dbg !5694

bb2:                                              ; preds = %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5694
  %25 = call i32 @__stdio_trans2w_o(%4* noalias %24, i32 128) nounwind, !dbg !5694
  %26 = icmp eq i32 %25, 0, !dbg !5694
  br i1 %26, label %bb3, label %BAD, !dbg !5694

bb3:                                              ; preds = %bb2, %bb1
  %27 = load %4** %stream_addr, align 8, !dbg !5695
  %28 = getelementptr inbounds %4* %27, i32 0, i32 2, !dbg !5695
  %29 = load i32* %28, align 4, !dbg !5695
  %30 = icmp eq i32 %29, -2, !dbg !5695
  br i1 %30, label %bb4, label %bb5, !dbg !5695

bb4:                                              ; preds = %bb3
  %31 = load i32* %c_addr, align 4, !dbg !5696
  %32 = trunc i32 %31 to i8, !dbg !5696
  %33 = zext i8 %32 to i32, !dbg !5696
  store i32 %33, i32* %0, align 4, !dbg !5696
  br label %bb15, !dbg !5696

bb5:                                              ; preds = %bb3
  %34 = load %4** %stream_addr, align 8, !dbg !5697
  %35 = getelementptr inbounds %4* %34, i32 0, i32 4, !dbg !5697
  %36 = load i8** %35, align 8, !dbg !5697
  %37 = load %4** %stream_addr, align 8, !dbg !5697
  %38 = getelementptr inbounds %4* %37, i32 0, i32 3, !dbg !5697
  %39 = load i8** %38, align 8, !dbg !5697
  %40 = icmp ne i8* %36, %39, !dbg !5697
  br i1 %40, label %bb6, label %bb13, !dbg !5697

bb6:                                              ; preds = %bb5
  %41 = load %4** %stream_addr, align 8, !dbg !5698
  %42 = getelementptr inbounds %4* %41, i32 0, i32 4, !dbg !5698
  %43 = load i8** %42, align 8, !dbg !5698
  %44 = load %4** %stream_addr, align 8, !dbg !5698
  %45 = getelementptr inbounds %4* %44, i32 0, i32 5, !dbg !5698
  %46 = load i8** %45, align 8, !dbg !5698
  %47 = icmp eq i8* %43, %46, !dbg !5698
  br i1 %47, label %bb7, label %bb8, !dbg !5698

bb7:                                              ; preds = %bb6
  %48 = load %4** %stream_addr, align 8, !dbg !5698
  %49 = call i64 @__stdio_wcommit(%4* noalias %48) nounwind, !dbg !5698
  %50 = icmp ne i64 %49, 0, !dbg !5698
  br i1 %50, label %BAD, label %bb8, !dbg !5698

bb8:                                              ; preds = %bb7, %bb6
  %51 = load %4** %stream_addr, align 8, !dbg !5699
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5699
  %53 = load i8** %52, align 8, !dbg !5699
  %54 = load i32* %c_addr, align 4, !dbg !5699
  %55 = trunc i32 %54 to i8, !dbg !5699
  store i8 %55, i8* %53, align 1, !dbg !5699
  %56 = getelementptr inbounds i8* %53, i64 1, !dbg !5699
  %57 = load %4** %stream_addr, align 8, !dbg !5699
  %58 = getelementptr inbounds %4* %57, i32 0, i32 5, !dbg !5699
  store i8* %56, i8** %58, align 8, !dbg !5699
  %59 = load %4** %stream_addr, align 8, !dbg !5700
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !5700
  %61 = load i16* %60, align 8, !dbg !5700
  %62 = zext i16 %61 to i32, !dbg !5700
  %63 = and i32 %62, 256, !dbg !5700
  %64 = icmp ne i32 %63, 0, !dbg !5700
  br i1 %64, label %bb9, label %bb14, !dbg !5700

bb9:                                              ; preds = %bb8
  %65 = load i32* %c_addr, align 4, !dbg !5701
  %66 = trunc i32 %65 to i8, !dbg !5701
  %67 = icmp eq i8 %66, 10, !dbg !5701
  br i1 %67, label %bb10, label %bb14, !dbg !5701

bb10:                                             ; preds = %bb9
  %68 = load %4** %stream_addr, align 8, !dbg !5701
  %69 = call i64 @__stdio_wcommit(%4* noalias %68) nounwind, !dbg !5701
  %70 = icmp ne i64 %69, 0, !dbg !5701
  br i1 %70, label %bb11, label %bb14, !dbg !5701

bb11:                                             ; preds = %bb10
  %71 = load %4** %stream_addr, align 8, !dbg !5702
  %72 = getelementptr inbounds %4* %71, i32 0, i32 5, !dbg !5702
  %73 = load i8** %72, align 8, !dbg !5702
  %74 = getelementptr inbounds i8* %73, i64 -1, !dbg !5702
  %75 = load %4** %stream_addr, align 8, !dbg !5702
  %76 = getelementptr inbounds %4* %75, i32 0, i32 5, !dbg !5702
  store i8* %74, i8** %76, align 8, !dbg !5702
  br label %BAD, !dbg !5702

bb13:                                             ; preds = %bb5
  %77 = load i32* %c_addr, align 4, !dbg !5703
  %78 = trunc i32 %77 to i8, !dbg !5703
  store i8 %78, i8* %uc, align 1, !dbg !5703
  %79 = load %4** %stream_addr, align 8, !dbg !5705
  %80 = call i64 @__stdio_WRITE(%4* %79, i8* %uc, i64 1) nounwind, !dbg !5705
  %81 = icmp eq i64 %80, 0, !dbg !5705
  br i1 %81, label %BAD, label %bb14, !dbg !5705

bb14:                                             ; preds = %bb8, %bb9, %bb10, %bb13
  %82 = load i32* %c_addr, align 4, !dbg !5706
  %83 = trunc i32 %82 to i8, !dbg !5706
  %84 = zext i8 %83 to i32, !dbg !5706
  store i32 %84, i32* %0, align 4, !dbg !5706
  br label %bb15, !dbg !5706

BAD:                                              ; preds = %bb13, %bb11, %bb7, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5707
  br label %bb15, !dbg !5707

bb15:                                             ; preds = %BAD, %bb14, %bb4, %bb
  %85 = load i32* %0, align 4, !dbg !5693
  store i32 %85, i32* %retval, align 4, !dbg !5693
  %retval16 = load i32* %retval, !dbg !5693
  ret i32 %retval16, !dbg !5693
}

define i32 @__freading(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5708
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5708
  %3 = load i16* %2, align 8, !dbg !5708
  %4 = zext i16 %3 to i32, !dbg !5708
  %5 = and i32 %4, 35, !dbg !5708
  store i32 %5, i32* %0, align 4, !dbg !5708
  %6 = load i32* %0, align 4, !dbg !5708
  store i32 %6, i32* %retval, align 4, !dbg !5708
  %retval1 = load i32* %retval, !dbg !5708
  ret i32 %retval1, !dbg !5708
}

define internal void @__check_one_fd(i32 %fd, i32 %mode) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %iftmp.0 = alloca i32
  %st = alloca %8
  %nullfd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %mode, i32* %mode_addr
  %0 = load i32* %fd_addr, align 4, !dbg !5710
  %1 = call i32 (i32, i32, ...)* @fcntl(i32 %0, i32 1) nounwind, !dbg !5710
  %2 = icmp ne i32 %1, -1, !dbg !5710
  br i1 %2, label %bb2, label %bb, !dbg !5710

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !5710
  %4 = load i32* %3, align 4, !dbg !5710
  %5 = icmp ne i32 %4, 9, !dbg !5710
  br i1 %5, label %bb2, label %bb1, !dbg !5710

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4, !dbg !5710
  br label %bb3, !dbg !5710

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !5710
  br label %bb3, !dbg !5710

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i32* %iftmp.0, align 4, !dbg !5710
  %7 = sext i32 %6 to i64, !dbg !5710
  %8 = icmp ne i64 %7, 0, !dbg !5710
  br i1 %8, label %bb4, label %return, !dbg !5710

bb4:                                              ; preds = %bb3
  %9 = load i32* %mode_addr, align 4, !dbg !5712
  %10 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str1114, i64 0, i64 0), i32 %9) nounwind, !dbg !5712
  store i32 %10, i32* %nullfd, align 4, !dbg !5712
  %11 = load i32* %nullfd, align 4, !dbg !5714
  %12 = load i32* %fd_addr, align 4, !dbg !5714
  %13 = icmp ne i32 %11, %12, !dbg !5714
  br i1 %13, label %bb8, label %bb5, !dbg !5714

bb5:                                              ; preds = %bb4
  %14 = load i32* %fd_addr, align 4, !dbg !5714
  %15 = call i32 bitcast (i32 (i32, %struct.stat*)* @fstat to i32 (i32, %8*)*)(i32 %14, %8* %st) nounwind, !dbg !5714
  %16 = icmp ne i32 %15, 0, !dbg !5714
  br i1 %16, label %bb8, label %bb6, !dbg !5714

bb6:                                              ; preds = %bb5
  %17 = getelementptr inbounds %8* %st, i32 0, i32 3, !dbg !5714
  %18 = load i32* %17, align 8, !dbg !5714
  %19 = and i32 %18, 61440, !dbg !5714
  %20 = icmp ne i32 %19, 8192, !dbg !5714
  br i1 %20, label %bb8, label %bb7, !dbg !5714

bb7:                                              ; preds = %bb6
  %21 = getelementptr inbounds %8* %st, i32 0, i32 7, !dbg !5714
  %22 = load i64* %21, align 8, !dbg !5714
  %23 = call i64 @gnu_dev_makedev115(i32 1, i32 3) nounwind, !dbg !5714
  %24 = icmp ne i64 %22, %23, !dbg !5714
  br i1 %24, label %bb8, label %return, !dbg !5714

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  call void @abort() noreturn nounwind, !dbg !5715
  unreachable, !dbg !5715

return:                                           ; preds = %bb3, %bb7
  ret void, !dbg !5716
}

define internal i64 @gnu_dev_makedev115(i32 %__major, i32 %__minor) nounwind inlinehint {
entry:
  %__major_addr = alloca i32, align 4
  %__minor_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %__major, i32* %__major_addr
  store i32 %__minor, i32* %__minor_addr
  %1 = load i32* %__minor_addr, align 4, !dbg !5717
  %2 = and i32 %1, 255, !dbg !5717
  %3 = load i32* %__major_addr, align 4, !dbg !5717
  %4 = and i32 %3, 4095, !dbg !5717
  %int_cast_to_i64 = zext i32 8 to i64
  %5 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %5, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %6 = shl i32 %4, 8, !dbg !5717
  %7 = or i32 %2, %6, !dbg !5717
  %8 = zext i32 %7 to i64, !dbg !5717
  %9 = load i32* %__minor_addr, align 4, !dbg !5717
  %10 = zext i32 %9 to i64, !dbg !5717
  %11 = and i64 %10, 4294967040, !dbg !5717
  %int_cast_to_i641 = bitcast i64 12 to i64
  %12 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %12, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %13 = shl i64 %11, 12, !dbg !5717
  %14 = or i64 %8, %13, !dbg !5717
  %15 = load i32* %__major_addr, align 4, !dbg !5717
  %16 = zext i32 %15 to i64, !dbg !5717
  %17 = and i64 %16, 4294963200, !dbg !5717
  %int_cast_to_i642 = bitcast i64 32 to i64
  %18 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %18, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %19 = shl i64 %17, 32, !dbg !5717
  %20 = or i64 %14, %19, !dbg !5717
  store i64 %20, i64* %0, align 8, !dbg !5717
  %21 = load i64* %0, align 8, !dbg !5717
  store i64 %21, i64* %retval, align 8, !dbg !5717
  %retval1 = load i64* %retval, !dbg !5717
  ret i64 %retval1, !dbg !5717
}

define internal i32 @__check_suid() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %uid = alloca i32
  %euid = alloca i32
  %gid = alloca i32
  %egid = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i32 @getuid() nounwind, !dbg !5719
  store i32 %1, i32* %uid, align 4, !dbg !5719
  %2 = call i32 @geteuid() nounwind, !dbg !5721
  store i32 %2, i32* %euid, align 4, !dbg !5721
  %3 = call i32 @getgid() nounwind, !dbg !5722
  store i32 %3, i32* %gid, align 4, !dbg !5722
  %4 = call i32 @getegid() nounwind, !dbg !5723
  store i32 %4, i32* %egid, align 4, !dbg !5723
  %5 = load i32* %uid, align 4, !dbg !5724
  %6 = load i32* %euid, align 4, !dbg !5724
  %7 = icmp eq i32 %5, %6, !dbg !5724
  br i1 %7, label %bb, label %bb2, !dbg !5724

bb:                                               ; preds = %entry
  %8 = load i32* %gid, align 4, !dbg !5724
  %9 = load i32* %egid, align 4, !dbg !5724
  %10 = icmp eq i32 %8, %9, !dbg !5724
  br i1 %10, label %bb1, label %bb2, !dbg !5724

bb1:                                              ; preds = %bb
  store i32 0, i32* %0, align 4, !dbg !5725
  br label %bb3, !dbg !5725

bb2:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4, !dbg !5726
  br label %bb3, !dbg !5726

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4, !dbg !5725
  store i32 %11, i32* %retval, align 4, !dbg !5725
  %retval4 = load i32* %retval, !dbg !5725
  ret i32 %retval4, !dbg !5725
}

declare i32 @getuid() nounwind

declare i32 @geteuid() nounwind

declare i32 @getgid() nounwind

declare i32 @getegid() nounwind

define void @__uClibc_init() nounwind {
entry:
  %0 = load i32* @been_there_done_that.2848, align 4, !dbg !5727
  %1 = icmp ne i32 %0, 0, !dbg !5727
  br i1 %1, label %return, label %bb, !dbg !5727

bb:                                               ; preds = %entry
  %2 = load i32* @been_there_done_that.2848, align 4, !dbg !5729
  %3 = add nsw i32 %2, 1, !dbg !5729
  store i32 %3, i32* @been_there_done_that.2848, align 4, !dbg !5729
  store i64 4096, i64* @__pagesize, align 8, !dbg !5730
  call void @_stdio_init() nounwind, !dbg !5731
  br label %return, !dbg !5731

return:                                           ; preds = %entry, %bb
  ret void, !dbg !5732
}

define void @__uClibc_fini() nounwind {
entry:
  %0 = load void ()** @__app_fini, align 8, !dbg !5733
  %1 = icmp ne void ()* %0, null, !dbg !5733
  br i1 %1, label %bb, label %bb1, !dbg !5733

bb:                                               ; preds = %entry
  %2 = load void ()** @__app_fini, align 8, !dbg !5735
  call void %2() nounwind, !dbg !5735
  br label %bb1, !dbg !5735

bb1:                                              ; preds = %bb, %entry
  %3 = load void ()** @__rtld_fini, align 8, !dbg !5736
  %4 = icmp ne void ()* %3, null, !dbg !5736
  br i1 %4, label %bb2, label %return, !dbg !5736

bb2:                                              ; preds = %bb1
  %5 = load void ()** @__rtld_fini, align 8, !dbg !5737
  call void %5() nounwind, !dbg !5737
  br label %return, !dbg !5737

return:                                           ; preds = %bb1, %bb2
  ret void, !dbg !5738
}

define void @__uClibc_main(i32 (i32, i8**, i8**)* %main, i32 %argc, i8** %argv, void ()* %app_init, void ()* %app_fini, void ()* %rtld_fini, i8* %stack_end) noreturn nounwind {
entry:
  %main_addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %app_init_addr = alloca void ()*, align 8
  %app_fini_addr = alloca void ()*, align 8
  %rtld_fini_addr = alloca void ()*, align 8
  %stack_end_addr = alloca i8*, align 8
  %iftmp.10 = alloca i64
  %aux_dat = alloca i64*
  %auxvt = alloca [15 x %struct.Elf64_auxv_t]
  %auxv_entry = alloca %struct.Elf64_auxv_t*
  %"alloca point" = bitcast i32 0 to i32
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main_addr
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store void ()* %app_init, void ()** %app_init_addr
  store void ()* %app_fini, void ()** %app_fini_addr
  store void ()* %rtld_fini, void ()** %rtld_fini_addr
  store i8* %stack_end, i8** %stack_end_addr
  %0 = load i8** %stack_end_addr, align 8, !dbg !5739
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !5739
  %1 = load void ()** %rtld_fini_addr, align 8, !dbg !5741
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !5741
  %2 = load i32* %argc_addr, align 4, !dbg !5742
  %3 = add nsw i32 %2, 1, !dbg !5742
  %4 = load i8*** %argv_addr, align 8, !dbg !5742
  %5 = sext i32 %3 to i64, !dbg !5742
  %6 = getelementptr inbounds i8** %4, i64 %5, !dbg !5742
  store i8** %6, i8*** @__environ, align 8, !dbg !5742
  %7 = load i8*** %argv_addr, align 8, !dbg !5743
  %8 = load i8** %7, align 8, !dbg !5743
  %9 = load i8*** @__environ, align 8, !dbg !5743
  %10 = bitcast i8** %9 to i8*, !dbg !5743
  %11 = icmp eq i8* %8, %10, !dbg !5743
  br i1 %11, label %bb, label %bb1, !dbg !5743

bb:                                               ; preds = %entry
  %12 = load i8*** %argv_addr, align 8, !dbg !5744
  %13 = load i32* %argc_addr, align 4, !dbg !5744
  %14 = sext i32 %13 to i64, !dbg !5744
  %15 = getelementptr inbounds i8** %12, i64 %14, !dbg !5744
  store i8** %15, i8*** @__environ, align 8, !dbg !5744
  br label %bb1, !dbg !5744

bb1:                                              ; preds = %bb, %entry
  %auxvt2 = bitcast [15 x %struct.Elf64_auxv_t]* %auxvt to %struct.Elf64_auxv_t*, !dbg !5745
  %auxvt23 = bitcast %struct.Elf64_auxv_t* %auxvt2 to i8*, !dbg !5745
  %16 = call i8* @memset(i8* %auxvt23, i32 0, i64 240) nounwind, !dbg !5745
  %17 = load i8*** @__environ, align 8, !dbg !5746
  %18 = bitcast i8** %17 to i64*, !dbg !5746
  store i64* %18, i64** %aux_dat, align 8, !dbg !5746
  br label %bb5, !dbg !5746

bb5:                                              ; preds = %bb5, %bb1
  %19 = load i64** %aux_dat, align 8, !dbg !5747
  %20 = load i64* %19, align 8, !dbg !5747
  %21 = icmp ne i64 %20, 0, !dbg !5747
  %22 = load i64** %aux_dat, align 8, !dbg !5748
  %23 = getelementptr inbounds i64* %22, i64 1, !dbg !5748
  store i64* %23, i64** %aux_dat, align 8, !dbg !5748
  br i1 %21, label %bb5, label %bb10, !dbg !5747

bb7:                                              ; preds = %bb10
  %24 = load i64** %aux_dat, align 8, !dbg !5749
  %25 = bitcast i64* %24 to %struct.Elf64_auxv_t*, !dbg !5749
  store %struct.Elf64_auxv_t* %25, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5749
  %26 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5751
  %27 = getelementptr inbounds %struct.Elf64_auxv_t* %26, i32 0, i32 0, !dbg !5751
  %28 = load i64* %27, align 8, !dbg !5751
  %29 = icmp ule i64 %28, 14, !dbg !5751
  br i1 %29, label %bb8, label %bb9, !dbg !5751

bb8:                                              ; preds = %bb7
  %30 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5752
  %31 = getelementptr inbounds %struct.Elf64_auxv_t* %30, i32 0, i32 0, !dbg !5752
  %32 = load i64* %31, align 8, !dbg !5752
  %33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %32, !dbg !5752
  %34 = bitcast %struct.Elf64_auxv_t* %33 to i8*, !dbg !5752
  %35 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5752
  %36 = bitcast %struct.Elf64_auxv_t* %35 to i8*, !dbg !5752
  %37 = call i8* @memcpy(i8* noalias %34, i8* noalias %36, i64 16) nounwind, !dbg !5752
  br label %bb9, !dbg !5752

bb9:                                              ; preds = %bb8, %bb7
  %38 = load i64** %aux_dat, align 8, !dbg !5753
  %39 = getelementptr inbounds i64* %38, i64 2, !dbg !5753
  store i64* %39, i64** %aux_dat, align 8, !dbg !5753
  br label %bb10, !dbg !5753

bb10:                                             ; preds = %bb5, %bb9
  %40 = load i64** %aux_dat, align 8, !dbg !5754
  %41 = load i64* %40, align 8, !dbg !5754
  %42 = icmp ne i64 %41, 0, !dbg !5754
  br i1 %42, label %bb7, label %bb11, !dbg !5754

bb11:                                             ; preds = %bb10
  call void @__uClibc_init() nounwind, !dbg !5755
  %43 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5756
  %44 = getelementptr inbounds %struct.Elf64_auxv_t* %43, i32 0, i32 1, !dbg !5756
  %45 = getelementptr inbounds %0* %44, i32 0, i32 0, !dbg !5756
  %46 = load i64* %45, align 8, !dbg !5756
  %47 = icmp ne i64 %46, 0, !dbg !5756
  br i1 %47, label %bb12, label %bb13, !dbg !5756

bb12:                                             ; preds = %bb11
  %48 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5756
  %49 = getelementptr inbounds %struct.Elf64_auxv_t* %48, i32 0, i32 1, !dbg !5756
  %50 = getelementptr inbounds %0* %49, i32 0, i32 0, !dbg !5756
  %51 = load i64* %50, align 8, !dbg !5756
  store i64 %51, i64* %iftmp.10, align 8, !dbg !5756
  br label %bb14, !dbg !5756

bb13:                                             ; preds = %bb11
  store i64 4096, i64* %iftmp.10, align 8, !dbg !5756
  br label %bb14, !dbg !5756

bb14:                                             ; preds = %bb13, %bb12
  %52 = load i64* %iftmp.10, align 8, !dbg !5756
  store i64 %52, i64* @__pagesize, align 8, !dbg !5756
  %53 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5757
  %54 = getelementptr inbounds %struct.Elf64_auxv_t* %53, i32 0, i32 1, !dbg !5757
  %55 = getelementptr inbounds %0* %54, i32 0, i32 0, !dbg !5757
  %56 = load i64* %55, align 8, !dbg !5757
  %57 = icmp ne i64 %56, -1, !dbg !5757
  br i1 %57, label %bb16, label %bb15, !dbg !5757

bb15:                                             ; preds = %bb14
  %58 = call i32 @__check_suid() nounwind, !dbg !5757
  %59 = icmp ne i32 %58, 0, !dbg !5757
  br i1 %59, label %bb19, label %bb16, !dbg !5757

bb16:                                             ; preds = %bb15, %bb14
  %60 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5757
  %61 = getelementptr inbounds %struct.Elf64_auxv_t* %60, i32 0, i32 1, !dbg !5757
  %62 = getelementptr inbounds %0* %61, i32 0, i32 0, !dbg !5757
  %63 = load i64* %62, align 8, !dbg !5757
  %64 = icmp eq i64 %63, -1, !dbg !5757
  br i1 %64, label %bb20, label %bb17, !dbg !5757

bb17:                                             ; preds = %bb16
  %65 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5757
  %66 = getelementptr inbounds %struct.Elf64_auxv_t* %65, i32 0, i32 1, !dbg !5757
  %67 = getelementptr inbounds %0* %66, i32 0, i32 0, !dbg !5757
  %68 = load i64* %67, align 8, !dbg !5757
  %69 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !5757
  %70 = getelementptr inbounds %struct.Elf64_auxv_t* %69, i32 0, i32 1, !dbg !5757
  %71 = getelementptr inbounds %0* %70, i32 0, i32 0, !dbg !5757
  %72 = load i64* %71, align 8, !dbg !5757
  %73 = icmp ne i64 %68, %72, !dbg !5757
  br i1 %73, label %bb19, label %bb18, !dbg !5757

bb18:                                             ; preds = %bb17
  %74 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !5757
  %75 = getelementptr inbounds %struct.Elf64_auxv_t* %74, i32 0, i32 1, !dbg !5757
  %76 = getelementptr inbounds %0* %75, i32 0, i32 0, !dbg !5757
  %77 = load i64* %76, align 8, !dbg !5757
  %78 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !5757
  %79 = getelementptr inbounds %struct.Elf64_auxv_t* %78, i32 0, i32 1, !dbg !5757
  %80 = getelementptr inbounds %0* %79, i32 0, i32 0, !dbg !5757
  %81 = load i64* %80, align 8, !dbg !5757
  %82 = icmp ne i64 %77, %81, !dbg !5757
  br i1 %82, label %bb19, label %bb20, !dbg !5757

bb19:                                             ; preds = %bb18, %bb17, %bb15
  call void @__check_one_fd(i32 0, i32 131072) nounwind, !dbg !5758
  call void @__check_one_fd(i32 1, i32 131074) nounwind, !dbg !5759
  call void @__check_one_fd(i32 2, i32 131074) nounwind, !dbg !5760
  br label %bb20, !dbg !5760

bb20:                                             ; preds = %bb19, %bb18, %bb16
  %83 = load i8*** %argv_addr, align 8, !dbg !5761
  %84 = load i8** %83, align 8, !dbg !5761
  store i8* %84, i8** @__uclibc_progname, align 8, !dbg !5761
  %85 = load void ()** %app_fini_addr, align 8, !dbg !5762
  store void ()* %85, void ()** @__app_fini, align 8, !dbg !5762
  %86 = load void ()** %app_init_addr, align 8, !dbg !5763
  %87 = icmp ne void ()* %86, null, !dbg !5763
  br i1 %87, label %bb21, label %bb22, !dbg !5763

bb21:                                             ; preds = %bb20
  %88 = load void ()** %app_init_addr, align 8, !dbg !5764
  call void %88() nounwind, !dbg !5764
  br label %bb22, !dbg !5764

bb22:                                             ; preds = %bb21, %bb20
  %89 = icmp ne i8* bitcast (i32* ()* @__errno_location to i8*), null, !dbg !5765
  br i1 %89, label %bb23, label %bb24, !dbg !5765

bb23:                                             ; preds = %bb22
  %90 = call i32* @__errno_location() nounwind readnone, !dbg !5766
  store i32 0, i32* %90, align 4, !dbg !5766
  br label %bb24, !dbg !5766

bb24:                                             ; preds = %bb23, %bb22
  %91 = icmp ne i8* bitcast (i32* ()* @__h_errno_location to i8*), null, !dbg !5767
  br i1 %91, label %bb25, label %bb26, !dbg !5767

bb25:                                             ; preds = %bb24
  %92 = call i32* @__h_errno_location() nounwind readnone, !dbg !5768
  store i32 0, i32* %92, align 4, !dbg !5768
  br label %bb26, !dbg !5768

bb26:                                             ; preds = %bb25, %bb24
  %93 = load i8*** @__environ, align 8, !dbg !5769
  %94 = load i32 (i32, i8**, i8**)** %main_addr, align 8, !dbg !5769
  %95 = load i32* %argc_addr, align 4, !dbg !5769
  %96 = load i8*** %argv_addr, align 8, !dbg !5769
  %97 = call i32 %94(i32 %95, i8** %96, i8** %93) nounwind, !dbg !5769
  call void @exit(i32 %97) noreturn nounwind, !dbg !5769
  unreachable, !dbg !5769
}

define i64 @_stdlib_mb_cur_max() nounwind {
entry:
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 1, i64* %0, align 8, !dbg !5770
  %1 = load i64* %0, align 8, !dbg !5770
  store i64 %1, i64* %retval, align 8, !dbg !5770
  %retval1 = load i64* %retval, !dbg !5770
  ret i64 %retval1, !dbg !5770
}

declare void @abort() noreturn nounwind

declare i32 @sigprocmask(i32, %struct.__sigset_t* noalias, %struct.__sigset_t* noalias) nounwind

define i32 @asprintf(i8** noalias %buf, i8* noalias %format, ...) nounwind {
entry:
  %buf_addr = alloca i8**, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %buf, i8*** %buf_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5772
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5772
  call void @llvm.va_start(i8* %arg12), !dbg !5772
  %1 = load i8*** %buf_addr, align 8, !dbg !5774
  %2 = load i8** %format_addr, align 8, !dbg !5774
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5774
  %3 = call i32 @vasprintf(i8** noalias %1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !5774
  store i32 %3, i32* %rv, align 4, !dbg !5774
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5775
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !5775
  call void @llvm.va_end(i8* %arg45), !dbg !5775
  %4 = load i32* %rv, align 4, !dbg !5776
  store i32 %4, i32* %0, align 4, !dbg !5776
  %5 = load i32* %0, align 4, !dbg !5776
  store i32 %5, i32* %retval, align 4, !dbg !5776
  %retval6 = load i32* %retval, !dbg !5776
  ret i32 %retval6, !dbg !5776
}

define hidden i32 @atexit(void ()* %func) nounwind {
entry:
  %func_addr = alloca void ()*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store void ()* %func, void ()** %func_addr
  br i1 icmp ne (i8** @__dso_handle, i8** null), label %bb, label %bb1, !dbg !5777

bb:                                               ; preds = %entry
  %1 = load i8** @__dso_handle, align 8, !dbg !5777
  store i8* %1, i8** %iftmp.0, align 8, !dbg !5777
  br label %bb2, !dbg !5777

bb1:                                              ; preds = %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !5777
  br label %bb2, !dbg !5777

bb2:                                              ; preds = %bb1, %bb
  %2 = load void ()** %func_addr, align 8, !dbg !5777
  %3 = bitcast void ()* %2 to void (i8*)*, !dbg !5777
  %4 = load i8** %iftmp.0, align 8, !dbg !5777
  %5 = call i32 @__cxa_atexit(void (i8*)* %3, i8* null, i8* %4) nounwind, !dbg !5777
  store i32 %5, i32* %0, align 4, !dbg !5777
  %6 = load i32* %0, align 4, !dbg !5777
  store i32 %6, i32* %retval, align 4, !dbg !5777
  %retval3 = load i32* %retval, !dbg !5777
  ret i32 %retval3, !dbg !5777
}

define %struct.mntent* @getmntent_r(%4* %filep, %struct.mntent* %mnt, i8* %buff, i32 %bufsize) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %mnt_addr = alloca %struct.mntent*, align 8
  %buff_addr = alloca i8*, align 8
  %bufsize_addr = alloca i32, align 4
  %retval = alloca %struct.mntent*
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca %struct.mntent*
  %cp = alloca i8*
  %ptrptr = alloca i8*
  %sep = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  store i8* %buff, i8** %buff_addr
  store i32 %bufsize, i32* %bufsize_addr
  store i8* getelementptr inbounds ([4 x i8]* @.str122, i64 0, i64 0), i8** %sep, align 8, !dbg !5779
  %1 = load %4** %filep_addr, align 8, !dbg !5781
  %2 = icmp eq %4* %1, null, !dbg !5781
  br i1 %2, label %bb2, label %bb, !dbg !5781

bb:                                               ; preds = %entry
  %3 = load %struct.mntent** %mnt_addr, align 8, !dbg !5781
  %4 = icmp eq %struct.mntent* %3, null, !dbg !5781
  br i1 %4, label %bb2, label %bb1, !dbg !5781

bb1:                                              ; preds = %bb
  %5 = load i8** %buff_addr, align 8, !dbg !5781
  %6 = icmp eq i8* %5, null, !dbg !5781
  br i1 %6, label %bb2, label %bb7, !dbg !5781

bb2:                                              ; preds = %bb1, %bb, %entry
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5782
  br label %bb25, !dbg !5782

bb4:                                              ; preds = %bb7
  %7 = load i8** %buff_addr, align 8, !dbg !5783
  %8 = getelementptr inbounds i8* %7, i64 0, !dbg !5783
  %9 = load i8* %8, align 1, !dbg !5783
  %10 = icmp eq i8 %9, 35, !dbg !5783
  br i1 %10, label %bb7, label %bb5, !dbg !5783

bb5:                                              ; preds = %bb4
  %11 = load i8** %buff_addr, align 8, !dbg !5783
  %12 = getelementptr inbounds i8* %11, i64 0, !dbg !5783
  %13 = load i8* %12, align 1, !dbg !5783
  %14 = icmp eq i8 %13, 10, !dbg !5783
  br i1 %14, label %bb7, label %bb8, !dbg !5783

bb7:                                              ; preds = %bb1, %bb5, %bb4
  %15 = load i8** %buff_addr, align 8, !dbg !5784
  %16 = load i32* %bufsize_addr, align 4, !dbg !5784
  %17 = load %4** %filep_addr, align 8, !dbg !5784
  %18 = call i8* @fgets_unlocked(i8* noalias %15, i32 %16, %4* noalias %17) nounwind, !dbg !5784
  store i8* %18, i8** %cp, align 8, !dbg !5784
  %19 = load i8** %cp, align 8, !dbg !5784
  %20 = icmp ne i8* %19, null, !dbg !5784
  br i1 %20, label %bb4, label %bb8, !dbg !5784

bb8:                                              ; preds = %bb5, %bb7
  %21 = load i8** %cp, align 8, !dbg !5785
  %22 = icmp eq i8* %21, null, !dbg !5785
  br i1 %22, label %bb9, label %bb10, !dbg !5785

bb9:                                              ; preds = %bb8
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5786
  br label %bb25, !dbg !5786

bb10:                                             ; preds = %bb8
  store i8* null, i8** %ptrptr, align 8, !dbg !5787
  %23 = load i8** %buff_addr, align 8, !dbg !5788
  %24 = load i8** %sep, align 8, !dbg !5788
  %25 = call i8* @strtok_r(i8* noalias %23, i8* noalias %24, i8** noalias %ptrptr) nounwind, !dbg !5788
  %26 = load %struct.mntent** %mnt_addr, align 8, !dbg !5788
  %27 = getelementptr inbounds %struct.mntent* %26, i32 0, i32 0, !dbg !5788
  store i8* %25, i8** %27, align 8, !dbg !5788
  %28 = load %struct.mntent** %mnt_addr, align 8, !dbg !5789
  %29 = getelementptr inbounds %struct.mntent* %28, i32 0, i32 0, !dbg !5789
  %30 = load i8** %29, align 8, !dbg !5789
  %31 = icmp eq i8* %30, null, !dbg !5789
  br i1 %31, label %bb11, label %bb12, !dbg !5789

bb11:                                             ; preds = %bb10
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5790
  br label %bb25, !dbg !5790

bb12:                                             ; preds = %bb10
  %32 = load i8** %sep, align 8, !dbg !5791
  %33 = call i8* @strtok_r(i8* noalias null, i8* noalias %32, i8** noalias %ptrptr) nounwind, !dbg !5791
  %34 = load %struct.mntent** %mnt_addr, align 8, !dbg !5791
  %35 = getelementptr inbounds %struct.mntent* %34, i32 0, i32 1, !dbg !5791
  store i8* %33, i8** %35, align 8, !dbg !5791
  %36 = load %struct.mntent** %mnt_addr, align 8, !dbg !5792
  %37 = getelementptr inbounds %struct.mntent* %36, i32 0, i32 1, !dbg !5792
  %38 = load i8** %37, align 8, !dbg !5792
  %39 = icmp eq i8* %38, null, !dbg !5792
  br i1 %39, label %bb13, label %bb14, !dbg !5792

bb13:                                             ; preds = %bb12
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5793
  br label %bb25, !dbg !5793

bb14:                                             ; preds = %bb12
  %40 = load i8** %sep, align 8, !dbg !5794
  %41 = call i8* @strtok_r(i8* noalias null, i8* noalias %40, i8** noalias %ptrptr) nounwind, !dbg !5794
  %42 = load %struct.mntent** %mnt_addr, align 8, !dbg !5794
  %43 = getelementptr inbounds %struct.mntent* %42, i32 0, i32 2, !dbg !5794
  store i8* %41, i8** %43, align 8, !dbg !5794
  %44 = load %struct.mntent** %mnt_addr, align 8, !dbg !5795
  %45 = getelementptr inbounds %struct.mntent* %44, i32 0, i32 2, !dbg !5795
  %46 = load i8** %45, align 8, !dbg !5795
  %47 = icmp eq i8* %46, null, !dbg !5795
  br i1 %47, label %bb15, label %bb16, !dbg !5795

bb15:                                             ; preds = %bb14
  store %struct.mntent* null, %struct.mntent** %0, align 8, !dbg !5796
  br label %bb25, !dbg !5796

bb16:                                             ; preds = %bb14
  %48 = load i8** %sep, align 8, !dbg !5797
  %49 = call i8* @strtok_r(i8* noalias null, i8* noalias %48, i8** noalias %ptrptr) nounwind, !dbg !5797
  %50 = load %struct.mntent** %mnt_addr, align 8, !dbg !5797
  %51 = getelementptr inbounds %struct.mntent* %50, i32 0, i32 3, !dbg !5797
  store i8* %49, i8** %51, align 8, !dbg !5797
  %52 = load %struct.mntent** %mnt_addr, align 8, !dbg !5798
  %53 = getelementptr inbounds %struct.mntent* %52, i32 0, i32 3, !dbg !5798
  %54 = load i8** %53, align 8, !dbg !5798
  %55 = icmp eq i8* %54, null, !dbg !5798
  br i1 %55, label %bb17, label %bb18, !dbg !5798

bb17:                                             ; preds = %bb16
  %56 = load %struct.mntent** %mnt_addr, align 8, !dbg !5799
  %57 = getelementptr inbounds %struct.mntent* %56, i32 0, i32 3, !dbg !5799
  store i8* getelementptr inbounds ([1 x i8]* @.str1123, i64 0, i64 0), i8** %57, align 8, !dbg !5799
  br label %bb18, !dbg !5799

bb18:                                             ; preds = %bb17, %bb16
  %58 = load i8** %sep, align 8, !dbg !5800
  %59 = call i8* @strtok_r(i8* noalias null, i8* noalias %58, i8** noalias %ptrptr) nounwind, !dbg !5800
  store i8* %59, i8** %cp, align 8, !dbg !5800
  %60 = load i8** %cp, align 8, !dbg !5801
  %61 = icmp ne i8* %60, null, !dbg !5801
  br i1 %61, label %bb19, label %bb20, !dbg !5801

bb19:                                             ; preds = %bb18
  %62 = load i8** %cp, align 8, !dbg !5801
  %63 = call i32 @atoi(i8* %62) nounwind readonly, !dbg !5801
  store i32 %63, i32* %iftmp.0, align 4, !dbg !5801
  br label %bb21, !dbg !5801

bb20:                                             ; preds = %bb18
  store i32 0, i32* %iftmp.0, align 4, !dbg !5801
  br label %bb21, !dbg !5801

bb21:                                             ; preds = %bb20, %bb19
  %64 = load %struct.mntent** %mnt_addr, align 8, !dbg !5801
  %65 = getelementptr inbounds %struct.mntent* %64, i32 0, i32 4, !dbg !5801
  %66 = load i32* %iftmp.0, align 4, !dbg !5801
  store i32 %66, i32* %65, align 8, !dbg !5801
  %67 = load i8** %sep, align 8, !dbg !5802
  %68 = call i8* @strtok_r(i8* noalias null, i8* noalias %67, i8** noalias %ptrptr) nounwind, !dbg !5802
  store i8* %68, i8** %cp, align 8, !dbg !5802
  %69 = load i8** %cp, align 8, !dbg !5803
  %70 = icmp ne i8* %69, null, !dbg !5803
  br i1 %70, label %bb22, label %bb23, !dbg !5803

bb22:                                             ; preds = %bb21
  %71 = load i8** %cp, align 8, !dbg !5803
  %72 = call i32 @atoi(i8* %71) nounwind readonly, !dbg !5803
  store i32 %72, i32* %iftmp.1, align 4, !dbg !5803
  br label %bb24, !dbg !5803

bb23:                                             ; preds = %bb21
  store i32 0, i32* %iftmp.1, align 4, !dbg !5803
  br label %bb24, !dbg !5803

bb24:                                             ; preds = %bb23, %bb22
  %73 = load %struct.mntent** %mnt_addr, align 8, !dbg !5803
  %74 = getelementptr inbounds %struct.mntent* %73, i32 0, i32 5, !dbg !5803
  %75 = load i32* %iftmp.1, align 4, !dbg !5803
  store i32 %75, i32* %74, align 4, !dbg !5803
  %76 = load %struct.mntent** %mnt_addr, align 8, !dbg !5804
  store %struct.mntent* %76, %struct.mntent** %0, align 8, !dbg !5804
  br label %bb25, !dbg !5804

bb25:                                             ; preds = %bb24, %bb15, %bb13, %bb11, %bb9, %bb2
  %77 = load %struct.mntent** %0, align 8, !dbg !5782
  store %struct.mntent* %77, %struct.mntent** %retval, align 8, !dbg !5782
  %retval26 = load %struct.mntent** %retval, !dbg !5782
  ret %struct.mntent* %retval26, !dbg !5782
}

define %struct.mntent* @getmntent(%4* %filep) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %retval = alloca %struct.mntent*
  %0 = alloca %struct.mntent*
  %tmp = alloca %struct.mntent*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  %1 = load i8** @buff.2072, align 8, !dbg !5805
  %2 = icmp eq i8* %1, null, !dbg !5805
  br i1 %2, label %bb, label %bb2, !dbg !5805

bb:                                               ; preds = %entry
  %3 = call noalias i8* @malloc(i64 4096) nounwind, !dbg !5807
  store i8* %3, i8** @buff.2072, align 8, !dbg !5807
  %4 = load i8** @buff.2072, align 8, !dbg !5808
  %5 = icmp eq i8* %4, null, !dbg !5808
  br i1 %5, label %bb1, label %bb2, !dbg !5808

bb1:                                              ; preds = %bb
  call void @abort() noreturn nounwind, !dbg !5809
  unreachable, !dbg !5809

bb2:                                              ; preds = %bb, %entry
  %6 = load i8** @buff.2072, align 8, !dbg !5810
  %7 = load %4** %filep_addr, align 8, !dbg !5810
  %8 = call %struct.mntent* @getmntent_r(%4* %7, %struct.mntent* @mnt.2073, i8* %6, i32 4096) nounwind, !dbg !5810
  store %struct.mntent* %8, %struct.mntent** %tmp, align 8, !dbg !5810
  %9 = load %struct.mntent** %tmp, align 8, !dbg !5811
  store %struct.mntent* %9, %struct.mntent** %0, align 8, !dbg !5811
  %10 = load %struct.mntent** %0, align 8, !dbg !5811
  store %struct.mntent* %10, %struct.mntent** %retval, align 8, !dbg !5811
  %retval3 = load %struct.mntent** %retval, !dbg !5811
  ret %struct.mntent* %retval3, !dbg !5811
}

define i32 @addmntent(%4* %filep, %struct.mntent* %mnt) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %mnt_addr = alloca %struct.mntent*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  %1 = load %4** %filep_addr, align 8, !dbg !5812
  %2 = call i32 @fseek(%4* %1, i64 0, i32 2) nounwind, !dbg !5812
  %3 = icmp slt i32 %2, 0, !dbg !5812
  br i1 %3, label %bb, label %bb1, !dbg !5812

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4, !dbg !5814
  br label %bb4, !dbg !5814

bb1:                                              ; preds = %entry
  %4 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %5 = getelementptr inbounds %struct.mntent* %4, i32 0, i32 5, !dbg !5815
  %6 = load i32* %5, align 4, !dbg !5815
  %7 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %8 = getelementptr inbounds %struct.mntent* %7, i32 0, i32 4, !dbg !5815
  %9 = load i32* %8, align 8, !dbg !5815
  %10 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %11 = getelementptr inbounds %struct.mntent* %10, i32 0, i32 3, !dbg !5815
  %12 = load i8** %11, align 8, !dbg !5815
  %13 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %14 = getelementptr inbounds %struct.mntent* %13, i32 0, i32 2, !dbg !5815
  %15 = load i8** %14, align 8, !dbg !5815
  %16 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %17 = getelementptr inbounds %struct.mntent* %16, i32 0, i32 1, !dbg !5815
  %18 = load i8** %17, align 8, !dbg !5815
  %19 = load %struct.mntent** %mnt_addr, align 8, !dbg !5815
  %20 = getelementptr inbounds %struct.mntent* %19, i32 0, i32 0, !dbg !5815
  %21 = load i8** %20, align 8, !dbg !5815
  %22 = load %4** %filep_addr, align 8, !dbg !5815
  %23 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %22, i8* noalias getelementptr inbounds ([19 x i8]* @.str2124, i64 0, i64 0), i8* %21, i8* %18, i8* %15, i8* %12, i32 %9, i32 %6) nounwind, !dbg !5815
  %24 = icmp sle i32 %23, 0, !dbg !5815
  br i1 %24, label %bb2, label %bb3, !dbg !5815

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4, !dbg !5816
  br label %bb4, !dbg !5816

bb3:                                              ; preds = %bb1
  store i32 0, i32* %0, align 4, !dbg !5817
  br label %bb4, !dbg !5817

bb4:                                              ; preds = %bb3, %bb2, %bb
  %25 = load i32* %0, align 4, !dbg !5814
  store i32 %25, i32* %retval, align 4, !dbg !5814
  %retval5 = load i32* %retval, !dbg !5814
  ret i32 %retval5, !dbg !5814
}

define i8* @hasmntopt(%struct.mntent* %mnt, i8* %opt) nounwind {
entry:
  %mnt_addr = alloca %struct.mntent*, align 8
  %opt_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mntent* %mnt, %struct.mntent** %mnt_addr
  store i8* %opt, i8** %opt_addr
  %1 = load %struct.mntent** %mnt_addr, align 8, !dbg !5818
  %2 = getelementptr inbounds %struct.mntent* %1, i32 0, i32 3, !dbg !5818
  %3 = load i8** %2, align 8, !dbg !5818
  %4 = load i8** %opt_addr, align 8, !dbg !5818
  %5 = call i8* @strstr(i8* %3, i8* %4) nounwind readonly, !dbg !5818
  store i8* %5, i8** %0, align 8, !dbg !5818
  %6 = load i8** %0, align 8, !dbg !5818
  store i8* %6, i8** %retval, align 8, !dbg !5818
  %retval1 = load i8** %retval, !dbg !5818
  ret i8* %retval1, !dbg !5818
}

define %4* @setmntent(i8* %name, i8* %mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %0 = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i8** %name_addr, align 8, !dbg !5820
  %2 = load i8** %mode_addr, align 8, !dbg !5820
  %3 = call %4* @fopen(i8* noalias %1, i8* noalias %2) nounwind, !dbg !5820
  store %4* %3, %4** %0, align 8, !dbg !5820
  %4 = load %4** %0, align 8, !dbg !5820
  store %4* %4, %4** %retval, align 8, !dbg !5820
  %retval1 = load %4** %retval, !dbg !5820
  ret %4* %retval1, !dbg !5820
}

define i32 @endmntent(%4* %filep) nounwind {
entry:
  %filep_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %filep, %4** %filep_addr
  %1 = load %4** %filep_addr, align 8, !dbg !5822
  %2 = icmp ne %4* %1, null, !dbg !5822
  br i1 %2, label %bb, label %bb1, !dbg !5822

bb:                                               ; preds = %entry
  %3 = load %4** %filep_addr, align 8, !dbg !5824
  %4 = call i32 @fclose(%4* %3) nounwind, !dbg !5824
  br label %bb1, !dbg !5824

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4, !dbg !5825
  %5 = load i32* %0, align 4, !dbg !5825
  store i32 %5, i32* %retval, align 4, !dbg !5825
  %retval2 = load i32* %retval, !dbg !5825
  ret i32 %retval2, !dbg !5825
}

define hidden void @__error(i32 %status, i32 %errnum, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.4 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %message, i8** %message_addr
  %1 = load %4** @stdout, align 8, !dbg !5826
  %2 = call i32 @fflush_unlocked(%4* %1) nounwind, !dbg !5826
  %args1 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5828
  %args12 = bitcast %struct.__va_list_tag* %args1 to i8*, !dbg !5828
  call void @llvm.va_start(i8* %args12), !dbg !5828
  %3 = load %4** @stderr, align 8, !dbg !5829
  %4 = load i8** %message_addr, align 8, !dbg !5829
  %args3 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5829
  %5 = call i32 @vfprintf(%4* noalias %3, i8* noalias %4, %struct.__va_list_tag* %args3) nounwind, !dbg !5829
  %args4 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5830
  %args45 = bitcast %struct.__va_list_tag* %args4 to i8*, !dbg !5830
  call void @llvm.va_end(i8* %args45), !dbg !5830
  %6 = load i32* @error_message_count, align 4, !dbg !5831
  %7 = add i32 %6, 1, !dbg !5831
  store i32 %7, i32* @error_message_count, align 4, !dbg !5831
  %8 = load i32* %errnum_addr, align 4, !dbg !5832
  %9 = icmp ne i32 %8, 0, !dbg !5832
  br i1 %9, label %bb, label %bb6, !dbg !5832

bb:                                               ; preds = %entry
  %10 = load i32* %errnum_addr, align 4, !dbg !5833
  %11 = call i8* @strerror(i32 %10) nounwind, !dbg !5833
  %12 = load %4** @stderr, align 8, !dbg !5833
  %13 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %12, i8* noalias getelementptr inbounds ([5 x i8]* @.str129, i64 0, i64 0), i8* %11) nounwind, !dbg !5833
  br label %bb6, !dbg !5833

bb6:                                              ; preds = %bb, %entry
  %14 = load %4** @stderr, align 8, !dbg !5834
  store %4* %14, %4** %__S, align 8, !dbg !5834
  %15 = load %4** %__S, align 8, !dbg !5834
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !5834
  %17 = load i8** %16, align 8, !dbg !5834
  %18 = load %4** %__S, align 8, !dbg !5834
  %19 = getelementptr inbounds %4* %18, i32 0, i32 8, !dbg !5834
  %20 = load i8** %19, align 8, !dbg !5834
  %21 = icmp ult i8* %17, %20, !dbg !5834
  %22 = load %4** %__S, align 8, !dbg !5834
  br i1 %21, label %bb7, label %bb8, !dbg !5834

bb7:                                              ; preds = %bb6
  %23 = getelementptr inbounds %4* %22, i32 0, i32 5, !dbg !5834
  %24 = load i8** %23, align 8, !dbg !5834
  store i8 10, i8* %24, align 1, !dbg !5834
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5834
  %26 = load %4** %__S, align 8, !dbg !5834
  %27 = getelementptr inbounds %4* %26, i32 0, i32 5, !dbg !5834
  store i8* %25, i8** %27, align 8, !dbg !5834
  store i32 10, i32* %iftmp.4, align 4, !dbg !5834
  br label %bb9, !dbg !5834

bb8:                                              ; preds = %bb6
  %28 = call i32 @__fputc_unlocked(i32 10, %4* %22) nounwind, !dbg !5834
  store i32 %28, i32* %iftmp.4, align 4, !dbg !5834
  br label %bb9, !dbg !5834

bb9:                                              ; preds = %bb8, %bb7
  %29 = load i32* %iftmp.4, align 4, !dbg !5834
  store i32 %29, i32* %0, align 4, !dbg !5834
  %30 = load i32* %status_addr, align 4, !dbg !5836
  %31 = icmp ne i32 %30, 0, !dbg !5836
  br i1 %31, label %bb10, label %return, !dbg !5836

bb10:                                             ; preds = %bb9
  %32 = load i32* %status_addr, align 4, !dbg !5837
  call void @exit(i32 %32) noreturn nounwind, !dbg !5837
  unreachable, !dbg !5837

return:                                           ; preds = %bb9
  ret void, !dbg !5838
}

define hidden void @__error_at_line(i32 %status, i32 %errnum, i8* %file_name, i32 %line_number, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %file_name_addr = alloca i8*, align 8
  %line_number_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.15 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %file_name, i8** %file_name_addr
  store i32 %line_number, i32* %line_number_addr
  store i8* %message, i8** %message_addr
  %1 = load i32* @error_one_per_line, align 4, !dbg !5839
  %2 = icmp ne i32 %1, 0, !dbg !5839
  br i1 %2, label %bb, label %bb5, !dbg !5839

bb:                                               ; preds = %entry
  %3 = load i32* @old_line_number.2047, align 4, !dbg !5841
  %4 = load i32* %line_number_addr, align 4, !dbg !5841
  %5 = icmp eq i32 %3, %4, !dbg !5841
  br i1 %5, label %bb1, label %bb4, !dbg !5841

bb1:                                              ; preds = %bb
  %6 = load i8** @old_file_name.2046, align 8, !dbg !5841
  %7 = load i8** %file_name_addr, align 8, !dbg !5841
  %8 = icmp eq i8* %7, %6, !dbg !5841
  br i1 %8, label %return, label %bb2, !dbg !5841

bb2:                                              ; preds = %bb1
  %9 = load i8** @old_file_name.2046, align 8, !dbg !5841
  %10 = load i8** %file_name_addr, align 8, !dbg !5841
  %11 = call i32 @strcmp(i8* %9, i8* %10) nounwind readonly, !dbg !5841
  %12 = icmp eq i32 %11, 0, !dbg !5841
  br i1 %12, label %return, label %bb4, !dbg !5841

bb4:                                              ; preds = %bb2, %bb
  %13 = load i8** %file_name_addr, align 8, !dbg !5843
  store i8* %13, i8** @old_file_name.2046, align 8, !dbg !5843
  %14 = load i32* %line_number_addr, align 4, !dbg !5844
  store i32 %14, i32* @old_line_number.2047, align 4, !dbg !5844
  br label %bb5, !dbg !5844

bb5:                                              ; preds = %bb4, %entry
  %15 = load %4** @stdout, align 8, !dbg !5845
  %16 = call i32 @fflush_unlocked(%4* %15) nounwind, !dbg !5845
  %17 = load i8** %file_name_addr, align 8, !dbg !5846
  %18 = icmp ne i8* %17, null, !dbg !5846
  br i1 %18, label %bb6, label %bb7, !dbg !5846

bb6:                                              ; preds = %bb5
  %19 = load %4** @stderr, align 8, !dbg !5847
  %20 = load i8** %file_name_addr, align 8, !dbg !5847
  %21 = load i32* %line_number_addr, align 4, !dbg !5847
  %22 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str1130, i64 0, i64 0), i8* %20, i32 %21) nounwind, !dbg !5847
  br label %bb7, !dbg !5847

bb7:                                              ; preds = %bb6, %bb5
  %args8 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5848
  %args89 = bitcast %struct.__va_list_tag* %args8 to i8*, !dbg !5848
  call void @llvm.va_start(i8* %args89), !dbg !5848
  %23 = load %4** @stderr, align 8, !dbg !5849
  %24 = load i8** %message_addr, align 8, !dbg !5849
  %args10 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5849
  %25 = call i32 @vfprintf(%4* noalias %23, i8* noalias %24, %struct.__va_list_tag* %args10) nounwind, !dbg !5849
  %args11 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5850
  %args1112 = bitcast %struct.__va_list_tag* %args11 to i8*, !dbg !5850
  call void @llvm.va_end(i8* %args1112), !dbg !5850
  %26 = load i32* @error_message_count, align 4, !dbg !5851
  %27 = add i32 %26, 1, !dbg !5851
  store i32 %27, i32* @error_message_count, align 4, !dbg !5851
  %28 = load i32* %errnum_addr, align 4, !dbg !5852
  %29 = icmp ne i32 %28, 0, !dbg !5852
  br i1 %29, label %bb13, label %bb14, !dbg !5852

bb13:                                             ; preds = %bb7
  %30 = load i32* %errnum_addr, align 4, !dbg !5853
  %31 = call i8* @strerror(i32 %30) nounwind, !dbg !5853
  %32 = load %4** @stderr, align 8, !dbg !5853
  %33 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %32, i8* noalias getelementptr inbounds ([5 x i8]* @.str129, i64 0, i64 0), i8* %31) nounwind, !dbg !5853
  br label %bb14, !dbg !5853

bb14:                                             ; preds = %bb13, %bb7
  %34 = load %4** @stderr, align 8, !dbg !5854
  store %4* %34, %4** %__S, align 8, !dbg !5854
  %35 = load %4** %__S, align 8, !dbg !5854
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !5854
  %37 = load i8** %36, align 8, !dbg !5854
  %38 = load %4** %__S, align 8, !dbg !5854
  %39 = getelementptr inbounds %4* %38, i32 0, i32 8, !dbg !5854
  %40 = load i8** %39, align 8, !dbg !5854
  %41 = icmp ult i8* %37, %40, !dbg !5854
  %42 = load %4** %__S, align 8, !dbg !5854
  br i1 %41, label %bb15, label %bb16, !dbg !5854

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %4* %42, i32 0, i32 5, !dbg !5854
  %44 = load i8** %43, align 8, !dbg !5854
  store i8 10, i8* %44, align 1, !dbg !5854
  %45 = getelementptr inbounds i8* %44, i64 1, !dbg !5854
  %46 = load %4** %__S, align 8, !dbg !5854
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !5854
  store i8* %45, i8** %47, align 8, !dbg !5854
  store i32 10, i32* %iftmp.15, align 4, !dbg !5854
  br label %bb17, !dbg !5854

bb16:                                             ; preds = %bb14
  %48 = call i32 @__fputc_unlocked(i32 10, %4* %42) nounwind, !dbg !5854
  store i32 %48, i32* %iftmp.15, align 4, !dbg !5854
  br label %bb17, !dbg !5854

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %iftmp.15, align 4, !dbg !5854
  store i32 %49, i32* %0, align 4, !dbg !5854
  %50 = load i32* %status_addr, align 4, !dbg !5856
  %51 = icmp ne i32 %50, 0, !dbg !5856
  br i1 %51, label %bb18, label %return, !dbg !5856

bb18:                                             ; preds = %bb17
  %52 = load i32* %status_addr, align 4, !dbg !5857
  call void @exit(i32 %52) noreturn nounwind, !dbg !5857
  unreachable, !dbg !5857

return:                                           ; preds = %bb17, %bb2, %bb1
  ret void, !dbg !5858
}

define void @exit(i32 %rv) noreturn nounwind {
entry:
  %rv_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %rv, i32* %rv_addr
  %0 = load void (i32)** @__exit_cleanup, align 8, !dbg !5859
  %1 = icmp ne void (i32)* %0, null, !dbg !5859
  br i1 %1, label %bb, label %bb1, !dbg !5859

bb:                                               ; preds = %entry
  %2 = load void (i32)** @__exit_cleanup, align 8, !dbg !5861
  %3 = load i32* %rv_addr, align 4, !dbg !5861
  call void %2(i32 %3) nounwind, !dbg !5861
  br label %bb1, !dbg !5861

bb1:                                              ; preds = %bb, %entry
  call void @__uClibc_fini() nounwind, !dbg !5862
  call void @_stdio_term() nounwind, !dbg !5863
  %4 = load i32* %rv_addr, align 4, !dbg !5864
  call void @_exit(i32 %4) noreturn nounwind, !dbg !5864
  unreachable, !dbg !5864
}

define i32 @fclose(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %rv = alloca i32
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %rv, align 4, !dbg !5865
  %1 = load %4** @_stdio_openlist, align 8, !dbg !5867
  store %4* %1, %4** %ptr, align 8, !dbg !5867
  %2 = load %4** @_stdio_openlist, align 8, !dbg !5869
  store %4* %2, %4** %ptr, align 8, !dbg !5869
  %3 = load %4** %ptr, align 8, !dbg !5869
  %4 = load %4** %stream_addr, align 8, !dbg !5869
  %5 = icmp eq %4* %3, %4, !dbg !5869
  br i1 %5, label %bb, label %bb5, !dbg !5869

bb:                                               ; preds = %entry
  %6 = load %4** %stream_addr, align 8, !dbg !5870
  %7 = getelementptr inbounds %4* %6, i32 0, i32 9, !dbg !5870
  %8 = load %4** %7, align 8, !dbg !5870
  store %4* %8, %4** @_stdio_openlist, align 8, !dbg !5870
  br label %bb6, !dbg !5870

bb2:                                              ; preds = %bb5
  %9 = load %4** %ptr, align 8, !dbg !5871
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !5871
  %11 = load %4** %10, align 8, !dbg !5871
  %12 = load %4** %stream_addr, align 8, !dbg !5871
  %13 = icmp eq %4* %11, %12, !dbg !5871
  br i1 %13, label %bb3, label %bb4, !dbg !5871

bb3:                                              ; preds = %bb2
  %14 = load %4** %stream_addr, align 8, !dbg !5872
  %15 = getelementptr inbounds %4* %14, i32 0, i32 9, !dbg !5872
  %16 = load %4** %15, align 8, !dbg !5872
  %17 = load %4** %ptr, align 8, !dbg !5872
  %18 = getelementptr inbounds %4* %17, i32 0, i32 9, !dbg !5872
  store %4* %16, %4** %18, align 8, !dbg !5872
  br label %bb6, !dbg !5872

bb4:                                              ; preds = %bb2
  %19 = load %4** %ptr, align 8, !dbg !5873
  %20 = getelementptr inbounds %4* %19, i32 0, i32 9, !dbg !5873
  %21 = load %4** %20, align 8, !dbg !5873
  store %4* %21, %4** %ptr, align 8, !dbg !5873
  br label %bb5, !dbg !5873

bb5:                                              ; preds = %entry, %bb4
  %22 = load %4** %ptr, align 8, !dbg !5874
  %23 = icmp ne %4* %22, null, !dbg !5874
  br i1 %23, label %bb2, label %bb6, !dbg !5874

bb6:                                              ; preds = %bb5, %bb3, %bb
  %24 = load %4** %stream_addr, align 8, !dbg !5875
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5875
  %26 = load i16* %25, align 8, !dbg !5875
  %27 = zext i16 %26 to i32, !dbg !5875
  %28 = and i32 %27, 64, !dbg !5875
  %29 = icmp ne i32 %28, 0, !dbg !5875
  br i1 %29, label %bb7, label %bb8, !dbg !5875

bb7:                                              ; preds = %bb6
  %30 = load %4** %stream_addr, align 8, !dbg !5876
  %31 = call i32 @fflush_unlocked(%4* %30) nounwind, !dbg !5876
  store i32 %31, i32* %rv, align 4, !dbg !5876
  br label %bb8, !dbg !5876

bb8:                                              ; preds = %bb7, %bb6
  %32 = load %4** %stream_addr, align 8, !dbg !5877
  %33 = getelementptr inbounds %4* %32, i32 0, i32 2, !dbg !5877
  %34 = load i32* %33, align 4, !dbg !5877
  %35 = call i32 @close(i32 %34) nounwind, !dbg !5877
  %36 = icmp slt i32 %35, 0, !dbg !5877
  br i1 %36, label %bb9, label %bb10, !dbg !5877

bb9:                                              ; preds = %bb8
  store i32 -1, i32* %rv, align 4, !dbg !5878
  br label %bb10, !dbg !5878

bb10:                                             ; preds = %bb9, %bb8
  %37 = load %4** %stream_addr, align 8, !dbg !5879
  %38 = getelementptr inbounds %4* %37, i32 0, i32 2, !dbg !5879
  store i32 -1, i32* %38, align 4, !dbg !5879
  %39 = load %4** %stream_addr, align 8, !dbg !5880
  %40 = getelementptr inbounds %4* %39, i32 0, i32 0, !dbg !5880
  %41 = load i16* %40, align 8, !dbg !5880
  %42 = and i16 %41, 24576, !dbg !5880
  %43 = load %4** %stream_addr, align 8, !dbg !5880
  %44 = getelementptr inbounds %4* %43, i32 0, i32 0, !dbg !5880
  store i16 %42, i16* %44, align 8, !dbg !5880
  %45 = load %4** %stream_addr, align 8, !dbg !5881
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !5881
  %47 = load i16* %46, align 8, !dbg !5881
  %48 = or i16 %47, 48, !dbg !5881
  %49 = load %4** %stream_addr, align 8, !dbg !5881
  %50 = getelementptr inbounds %4* %49, i32 0, i32 0, !dbg !5881
  store i16 %48, i16* %50, align 8, !dbg !5881
  %51 = load %4** %stream_addr, align 8, !dbg !5882
  %52 = getelementptr inbounds %4* %51, i32 0, i32 0, !dbg !5882
  %53 = load i16* %52, align 8, !dbg !5882
  %54 = zext i16 %53 to i32, !dbg !5882
  %55 = and i32 %54, 16384, !dbg !5882
  %56 = icmp ne i32 %55, 0, !dbg !5882
  br i1 %56, label %bb11, label %bb12, !dbg !5882

bb11:                                             ; preds = %bb10
  %57 = load %4** %stream_addr, align 8, !dbg !5882
  %58 = getelementptr inbounds %4* %57, i32 0, i32 3, !dbg !5882
  %59 = load i8** %58, align 8, !dbg !5882
  call void @free(i8* %59) nounwind, !dbg !5882
  br label %bb12, !dbg !5882

bb12:                                             ; preds = %bb11, %bb10
  %60 = load %4** %stream_addr, align 8, !dbg !5883
  %61 = getelementptr inbounds %4* %60, i32 0, i32 0, !dbg !5883
  %62 = load i16* %61, align 8, !dbg !5883
  %63 = zext i16 %62 to i32, !dbg !5883
  %64 = and i32 %63, 8192, !dbg !5883
  %65 = icmp ne i32 %64, 0, !dbg !5883
  br i1 %65, label %bb13, label %bb14, !dbg !5883

bb13:                                             ; preds = %bb12
  %66 = load %4** %stream_addr, align 8, !dbg !5883
  %67 = bitcast %4* %66 to i8*, !dbg !5883
  call void @free(i8* %67) nounwind, !dbg !5883
  br label %bb14, !dbg !5883

bb14:                                             ; preds = %bb13, %bb12
  %68 = load i32* %rv, align 4, !dbg !5884
  store i32 %68, i32* %0, align 4, !dbg !5884
  %69 = load i32* %0, align 4, !dbg !5884
  store i32 %69, i32* %retval, align 4, !dbg !5884
  %retval15 = load i32* %retval, !dbg !5884
  ret i32 %retval15, !dbg !5884
}

define i32 @ferror_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5885
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5885
  %3 = load i16* %2, align 8, !dbg !5885
  %4 = zext i16 %3 to i32, !dbg !5885
  %5 = and i32 %4, 8, !dbg !5885
  store i32 %5, i32* %0, align 4, !dbg !5885
  %6 = load i32* %0, align 4, !dbg !5885
  store i32 %6, i32* %retval, align 4, !dbg !5885
  %retval1 = load i32* %retval, !dbg !5885
  ret i32 %retval1, !dbg !5885
}

define i32 @fflush_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %retval1 = alloca i32
  %bufmask = alloca i16
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %retval1, align 4, !dbg !5887
  store i16 256, i16* %bufmask, align 2, !dbg !5889
  %1 = load %4** %stream_addr, align 8, !dbg !5890
  %2 = icmp eq %4* %1, bitcast (%4** @_stdio_openlist to %4*), !dbg !5890
  br i1 %2, label %bb, label %bb2, !dbg !5890

bb:                                               ; preds = %entry
  store %4* null, %4** %stream_addr, align 8, !dbg !5891
  store i16 0, i16* %bufmask, align 2, !dbg !5892
  br label %bb2, !dbg !5892

bb2:                                              ; preds = %bb, %entry
  %3 = load %4** %stream_addr, align 8, !dbg !5893
  %4 = icmp eq %4* %3, null, !dbg !5893
  br i1 %4, label %bb3, label %bb12, !dbg !5893

bb3:                                              ; preds = %bb2
  %5 = load %4** @_stdio_openlist, align 8, !dbg !5894
  store %4* %5, %4** %stream_addr, align 8, !dbg !5894
  br label %bb10, !dbg !5894

bb4:                                              ; preds = %bb10
  %6 = load %4** %stream_addr, align 8, !dbg !5895
  %7 = getelementptr inbounds %4* %6, i32 0, i32 0, !dbg !5895
  %8 = load i16* %7, align 8, !dbg !5895
  %9 = zext i16 %8 to i32, !dbg !5895
  %10 = and i32 %9, 64, !dbg !5895
  %11 = icmp ne i32 %10, 0, !dbg !5895
  br i1 %11, label %bb5, label %bb9, !dbg !5895

bb5:                                              ; preds = %bb4
  %12 = load %4** %stream_addr, align 8, !dbg !5896
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !5896
  %14 = load i16* %13, align 8, !dbg !5896
  %15 = load i16* %bufmask, align 2, !dbg !5896
  %16 = or i16 %14, %15, !dbg !5896
  %17 = xor i16 %16, 320, !dbg !5896
  %18 = zext i16 %17 to i32, !dbg !5896
  %19 = and i32 %18, 832, !dbg !5896
  %20 = icmp eq i32 %19, 0, !dbg !5896
  br i1 %20, label %bb6, label %bb9, !dbg !5896

bb6:                                              ; preds = %bb5
  %21 = load %4** %stream_addr, align 8, !dbg !5897
  %22 = call i64 @__stdio_wcommit(%4* noalias %21) nounwind, !dbg !5897
  %23 = icmp eq i64 %22, 0, !dbg !5897
  br i1 %23, label %bb7, label %bb8, !dbg !5897

bb7:                                              ; preds = %bb6
  %24 = load %4** %stream_addr, align 8, !dbg !5898
  %25 = getelementptr inbounds %4* %24, i32 0, i32 3, !dbg !5898
  %26 = load i8** %25, align 8, !dbg !5898
  %27 = load %4** %stream_addr, align 8, !dbg !5898
  %28 = getelementptr inbounds %4* %27, i32 0, i32 8, !dbg !5898
  store i8* %26, i8** %28, align 8, !dbg !5898
  %29 = load %4** %stream_addr, align 8, !dbg !5899
  %30 = getelementptr inbounds %4* %29, i32 0, i32 0, !dbg !5899
  %31 = load i16* %30, align 8, !dbg !5899
  %32 = and i16 %31, -65, !dbg !5899
  %33 = load %4** %stream_addr, align 8, !dbg !5899
  %34 = getelementptr inbounds %4* %33, i32 0, i32 0, !dbg !5899
  store i16 %32, i16* %34, align 8, !dbg !5899
  br label %bb9, !dbg !5899

bb8:                                              ; preds = %bb6
  store i32 -1, i32* %retval1, align 4, !dbg !5900
  br label %bb9, !dbg !5900

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb4
  %35 = load %4** %stream_addr, align 8, !dbg !5901
  %36 = getelementptr inbounds %4* %35, i32 0, i32 9, !dbg !5901
  %37 = load %4** %36, align 8, !dbg !5901
  store %4* %37, %4** %stream_addr, align 8, !dbg !5901
  br label %bb10, !dbg !5901

bb10:                                             ; preds = %bb9, %bb3
  %38 = load %4** %stream_addr, align 8, !dbg !5902
  %39 = icmp ne %4* %38, null, !dbg !5902
  br i1 %39, label %bb4, label %bb16, !dbg !5902

bb12:                                             ; preds = %bb2
  %40 = load %4** %stream_addr, align 8, !dbg !5903
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !5903
  %42 = load i16* %41, align 8, !dbg !5903
  %43 = zext i16 %42 to i32, !dbg !5903
  %44 = and i32 %43, 64, !dbg !5903
  %45 = icmp ne i32 %44, 0, !dbg !5903
  br i1 %45, label %bb13, label %bb16, !dbg !5903

bb13:                                             ; preds = %bb12
  %46 = load %4** %stream_addr, align 8, !dbg !5904
  %47 = call i64 @__stdio_wcommit(%4* noalias %46) nounwind, !dbg !5904
  %48 = icmp eq i64 %47, 0, !dbg !5904
  br i1 %48, label %bb14, label %bb15, !dbg !5904

bb14:                                             ; preds = %bb13
  %49 = load %4** %stream_addr, align 8, !dbg !5905
  %50 = getelementptr inbounds %4* %49, i32 0, i32 3, !dbg !5905
  %51 = load i8** %50, align 8, !dbg !5905
  %52 = load %4** %stream_addr, align 8, !dbg !5905
  %53 = getelementptr inbounds %4* %52, i32 0, i32 8, !dbg !5905
  store i8* %51, i8** %53, align 8, !dbg !5905
  %54 = load %4** %stream_addr, align 8, !dbg !5906
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !5906
  %56 = load i16* %55, align 8, !dbg !5906
  %57 = and i16 %56, -65, !dbg !5906
  %58 = load %4** %stream_addr, align 8, !dbg !5906
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !5906
  store i16 %57, i16* %59, align 8, !dbg !5906
  br label %bb16, !dbg !5906

bb15:                                             ; preds = %bb13
  store i32 -1, i32* %retval1, align 4, !dbg !5907
  br label %bb16, !dbg !5907

bb16:                                             ; preds = %bb10, %bb15, %bb14, %bb12
  %60 = load i32* %retval1, align 4, !dbg !5908
  store i32 %60, i32* %0, align 4, !dbg !5908
  %61 = load i32* %0, align 4, !dbg !5908
  store i32 %61, i32* %retval, align 4, !dbg !5908
  %retval17 = load i32* %retval, !dbg !5908
  ret i32 %retval17, !dbg !5908
}

define i32 @fileno_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5909
  %2 = getelementptr inbounds %4* %1, i32 0, i32 2, !dbg !5909
  %3 = load i32* %2, align 4, !dbg !5909
  %4 = icmp sge i32 %3, 0, !dbg !5909
  br i1 %4, label %bb, label %bb1, !dbg !5909

bb:                                               ; preds = %entry
  %5 = load %4** %stream_addr, align 8, !dbg !5911
  %6 = getelementptr inbounds %4* %5, i32 0, i32 2, !dbg !5911
  %7 = load i32* %6, align 4, !dbg !5911
  store i32 %7, i32* %0, align 4, !dbg !5911
  br label %bb2, !dbg !5911

bb1:                                              ; preds = %entry
  store i32 9, i32* @errno, align 4, !dbg !5912
  store i32 -1, i32* %0, align 4, !dbg !5913
  br label %bb2, !dbg !5913

bb2:                                              ; preds = %bb1, %bb
  %8 = load i32* %0, align 4, !dbg !5911
  store i32 %8, i32* %retval, align 4, !dbg !5911
  %retval3 = load i32* %retval, !dbg !5911
  ret i32 %retval3, !dbg !5911
}

define %4* @fopen(i8* noalias %filename, i8* noalias %mode) nounwind {
entry:
  %filename_addr = alloca i8*, align 8
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %0 = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %filename, i8** %filename_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i8** %filename_addr, align 8, !dbg !5914
  %2 = ptrtoint i8* %1 to i64, !dbg !5914
  %3 = load i8** %mode_addr, align 8, !dbg !5914
  %4 = call %4* @_stdio_fopen(i64 %2, i8* noalias %3, %4* noalias null, i32 -1) nounwind, !dbg !5914
  store %4* %4, %4** %0, align 8, !dbg !5914
  %5 = load %4** %0, align 8, !dbg !5914
  store %4* %5, %4** %retval, align 8, !dbg !5914
  %retval1 = load %4** %retval, !dbg !5914
  ret %4* %retval1, !dbg !5914
}

define i32 @fprintf(%4* noalias %stream, i8* noalias %format, ...) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5916
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5916
  call void @llvm.va_start(i8* %arg12), !dbg !5916
  %1 = load %4** @stdout, align 8, !dbg !5918
  %2 = load %4** %stream_addr, align 8, !dbg !5918
  %3 = icmp eq %4* %2, %1, !dbg !5918
  br i1 %3, label %bb3, label %bb, !dbg !5918

bb:                                               ; preds = %entry
  %4 = load %4** @stderr, align 8, !dbg !5918
  %5 = load %4** %stream_addr, align 8, !dbg !5918
  %6 = icmp eq %4* %5, %4, !dbg !5918
  br i1 %6, label %bb3, label %bb5, !dbg !5918

bb3:                                              ; preds = %bb, %entry
  %7 = load i8** %format_addr, align 8, !dbg !5919
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5919
  %8 = call i32 @vprintf(i8* noalias %7, %struct.__va_list_tag* %arg4) nounwind, !dbg !5919
  store i32 %8, i32* %rv, align 4, !dbg !5919
  br label %bb7, !dbg !5919

bb5:                                              ; preds = %bb
  %9 = load %4** %stream_addr, align 8, !dbg !5920
  %10 = load i8** %format_addr, align 8, !dbg !5920
  %arg6 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5920
  %11 = call i32 @vfprintf(%4* noalias %9, i8* noalias %10, %struct.__va_list_tag* %arg6) nounwind, !dbg !5920
  store i32 %11, i32* %rv, align 4, !dbg !5920
  br label %bb7, !dbg !5920

bb7:                                              ; preds = %bb5, %bb3
  %arg8 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5921
  %arg89 = bitcast %struct.__va_list_tag* %arg8 to i8*, !dbg !5921
  call void @llvm.va_end(i8* %arg89), !dbg !5921
  %12 = load i32* %rv, align 4, !dbg !5922
  store i32 %12, i32* %0, align 4, !dbg !5922
  %13 = load i32* %0, align 4, !dbg !5922
  store i32 %13, i32* %retval, align 4, !dbg !5922
  %retval10 = load i32* %retval, !dbg !5922
  ret i32 %retval10, !dbg !5922
}

declare i32 @vprintf(i8* noalias, %struct.__va_list_tag*)

define i32 @fputs_unlocked(i8* noalias %s, %4* noalias %stream) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i8** %s_addr, align 8, !dbg !5923
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !5923
  store i64 %2, i64* %n, align 8, !dbg !5923
  %3 = load i8** %s_addr, align 8, !dbg !5925
  %4 = load i64* %n, align 8, !dbg !5925
  %5 = load %4** %stream_addr, align 8, !dbg !5925
  %6 = call i64 @fwrite_unlocked(i8* noalias %3, i64 1, i64 %4, %4* noalias %5) nounwind, !dbg !5925
  %7 = load i64* %n, align 8, !dbg !5925
  %8 = icmp eq i64 %6, %7, !dbg !5925
  br i1 %8, label %bb, label %bb1, !dbg !5925

bb:                                               ; preds = %entry
  %9 = load i64* %n, align 8, !dbg !5925
  %10 = trunc i64 %9 to i32, !dbg !5925
  store i32 %10, i32* %iftmp.0, align 4, !dbg !5925
  br label %bb2, !dbg !5925

bb1:                                              ; preds = %entry
  store i32 -1, i32* %iftmp.0, align 4, !dbg !5925
  br label %bb2, !dbg !5925

bb2:                                              ; preds = %bb1, %bb
  %11 = load i32* %iftmp.0, align 4, !dbg !5925
  store i32 %11, i32* %0, align 4, !dbg !5925
  %12 = load i32* %0, align 4, !dbg !5925
  store i32 %12, i32* %retval, align 4, !dbg !5925
  %retval3 = load i32* %retval, !dbg !5925
  ret i32 %retval3, !dbg !5925
}

define i32 @fseek(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5926
  %2 = load i64* %offset_addr, align 8, !dbg !5926
  %3 = load i32* %whence_addr, align 4, !dbg !5926
  %4 = call i32 @fseeko64(%4* %1, i64 %2, i32 %3) nounwind, !dbg !5926
  store i32 %4, i32* %0, align 4, !dbg !5926
  %5 = load i32* %0, align 4, !dbg !5926
  store i32 %5, i32* %retval, align 4, !dbg !5926
  %retval1 = load i32* %retval, !dbg !5926
  ret i32 %retval1, !dbg !5926
}

define i64 @fwrite_unlocked(i8* noalias %ptr, i64 %size, i64 %nmemb, %4* noalias %stream) nounwind {
entry:
  %ptr_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %nmemb_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %ptr, i8** %ptr_addr
  store i64 %size, i64* %size_addr
  store i64 %nmemb, i64* %nmemb_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5928
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5928
  %3 = load i16* %2, align 8, !dbg !5928
  %4 = zext i16 %3 to i32, !dbg !5928
  %5 = and i32 %4, 192, !dbg !5928
  %6 = icmp eq i32 %5, 192, !dbg !5928
  br i1 %6, label %bb1, label %bb, !dbg !5928

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5928
  %8 = call i32 @__stdio_trans2w_o(%4* noalias %7, i32 128) nounwind, !dbg !5928
  %9 = icmp eq i32 %8, 0, !dbg !5928
  br i1 %9, label %bb1, label %bb6, !dbg !5928

bb1:                                              ; preds = %bb, %entry
  %10 = load i64* %size_addr, align 8, !dbg !5928
  %11 = icmp ne i64 %10, 0, !dbg !5928
  br i1 %11, label %bb2, label %bb6, !dbg !5928

bb2:                                              ; preds = %bb1
  %12 = load i64* %nmemb_addr, align 8, !dbg !5928
  %13 = icmp ne i64 %12, 0, !dbg !5928
  br i1 %13, label %bb3, label %bb6, !dbg !5928

bb3:                                              ; preds = %bb2
  %14 = load i64* %size_addr, align 8, !dbg !5930
  %int_cast_to_i64 = bitcast i64 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 -1, %14, !dbg !5930
  %18 = load i64* %nmemb_addr, align 8, !dbg !5930
  %19 = icmp uge i64 %17, %18, !dbg !5930
  br i1 %19, label %bb4, label %bb5, !dbg !5930

bb4:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i64* %size_addr, align 8, !dbg !5931
  %21 = load i64* %nmemb_addr, align 8, !dbg !5931
  %22 = mul i64 %20, %21, !dbg !5931
  %23 = load i8** %ptr_addr, align 8, !dbg !5931
  %24 = load %4** %stream_addr, align 8, !dbg !5931
  %25 = call i64 @__stdio_fwrite(i8* noalias %23, i64 %22, %4* noalias %24) nounwind, !dbg !5931
  %26 = load i64* %size_addr, align 8, !dbg !5931
  %int_cast_to_i641 = bitcast i64 %26 to i64
  %27 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %28 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %28, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %29 = udiv i64 %25, %26, !dbg !5931
  store i64 %29, i64* %0, align 8, !dbg !5931
  br label %bb7, !dbg !5931

bb5:                                              ; preds = %klee_div_zero_check.exit
  %30 = load %4** %stream_addr, align 8, !dbg !5932
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5932
  %32 = load i16* %31, align 8, !dbg !5932
  %33 = or i16 %32, 8, !dbg !5932
  %34 = load %4** %stream_addr, align 8, !dbg !5932
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !5932
  store i16 %33, i16* %35, align 8, !dbg !5932
  store i32 22, i32* @errno, align 4, !dbg !5933
  br label %bb6, !dbg !5933

bb6:                                              ; preds = %bb5, %bb2, %bb1, %bb
  store i64 0, i64* %0, align 8, !dbg !5934
  br label %bb7, !dbg !5934

bb7:                                              ; preds = %bb6, %klee_div_zero_check.exit3
  %36 = load i64* %0, align 8, !dbg !5931
  store i64 %36, i64* %retval, align 8, !dbg !5931
  %retval8 = load i64* %retval, !dbg !5931
  ret i64 %retval8, !dbg !5931
}

define i32 @wcswidth(i32* %pwcs, i64 %n) nounwind {
entry:
  %pwcs_addr = alloca i32*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %count = alloca i32
  %wc = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwcs, i32** %pwcs_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %count, align 4, !dbg !5935
  br label %bb7, !dbg !5935

bb:                                               ; preds = %bb8
  %1 = load i32* %wc, align 4, !dbg !5937
  %2 = icmp sle i32 %1, 255, !dbg !5937
  br i1 %2, label %bb1, label %bb6, !dbg !5937

bb1:                                              ; preds = %bb
  %3 = load i32* %wc, align 4, !dbg !5938
  %4 = icmp sle i32 %3, 31, !dbg !5938
  br i1 %4, label %bb4, label %bb2, !dbg !5938

bb2:                                              ; preds = %bb1
  %5 = load i32* %wc, align 4, !dbg !5938
  %6 = icmp sgt i32 %5, 126, !dbg !5938
  %7 = load i32* %wc, align 4, !dbg !5938
  %8 = icmp sle i32 %7, 159, !dbg !5938
  %or.cond = and i1 %6, %8
  br i1 %or.cond, label %bb4, label %bb5, !dbg !5938

bb4:                                              ; preds = %bb2, %bb1
  store i32 -1, i32* %0, align 4, !dbg !5939
  br label %bb10, !dbg !5939

bb5:                                              ; preds = %bb2
  %9 = load i32* %count, align 4, !dbg !5940
  %10 = add nsw i32 %9, 1, !dbg !5940
  store i32 %10, i32* %count, align 4, !dbg !5940
  %11 = load i64* %n_addr, align 8, !dbg !5935
  %12 = sub i64 %11, 1, !dbg !5935
  store i64 %12, i64* %n_addr, align 8, !dbg !5935
  br label %bb7, !dbg !5935

bb6:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4, !dbg !5941
  br label %bb10, !dbg !5941

bb7:                                              ; preds = %bb5, %entry
  %13 = load i64* %n_addr, align 8, !dbg !5935
  %14 = icmp eq i64 %13, 0, !dbg !5935
  br i1 %14, label %bb9, label %bb8, !dbg !5935

bb8:                                              ; preds = %bb7
  %15 = load i32** %pwcs_addr, align 8, !dbg !5935
  %16 = load i32* %15, align 4, !dbg !5935
  store i32 %16, i32* %wc, align 4, !dbg !5935
  %17 = load i32* %wc, align 4, !dbg !5935
  %18 = icmp ne i32 %17, 0, !dbg !5935
  %19 = zext i1 %18 to i8, !dbg !5935
  %20 = load i32** %pwcs_addr, align 8, !dbg !5935
  %21 = getelementptr inbounds i32* %20, i64 1, !dbg !5935
  store i32* %21, i32** %pwcs_addr, align 8, !dbg !5935
  %toBool = icmp ne i8 %19, 0, !dbg !5935
  br i1 %toBool, label %bb, label %bb9, !dbg !5935

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i32* %count, align 4, !dbg !5942
  store i32 %22, i32* %0, align 4, !dbg !5942
  br label %bb10, !dbg !5942

bb10:                                             ; preds = %bb9, %bb6, %bb4
  %23 = load i32* %0, align 4, !dbg !5939
  store i32 %23, i32* %retval, align 4, !dbg !5939
  %retval11 = load i32* %retval, !dbg !5939
  ret i32 %retval11, !dbg !5939
}

define i8* @getenv(i8* %var) nounwind {
entry:
  %var_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %len = alloca i32
  %ep = alloca i8**
  %"alloca point" = bitcast i32 0 to i32
  store i8* %var, i8** %var_addr
  %1 = load i8*** @__environ, align 8, !dbg !5943
  store i8** %1, i8*** %ep, align 8, !dbg !5943
  %2 = load i8*** %ep, align 8, !dbg !5943
  %3 = icmp eq i8** %2, null, !dbg !5943
  br i1 %3, label %bb, label %bb1, !dbg !5943

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8, !dbg !5945
  br label %bb8, !dbg !5945

bb1:                                              ; preds = %entry
  %4 = load i8** %var_addr, align 8, !dbg !5946
  %5 = call i64 @strlen(i8* %4) nounwind readonly, !dbg !5946
  %6 = trunc i64 %5 to i32, !dbg !5946
  store i32 %6, i32* %len, align 4, !dbg !5946
  br label %bb6, !dbg !5946

bb2:                                              ; preds = %bb6
  %7 = load i32* %len, align 4, !dbg !5947
  %8 = sext i32 %7 to i64, !dbg !5947
  %9 = load i8*** %ep, align 8, !dbg !5947
  %10 = load i8** %9, align 8, !dbg !5947
  %11 = load i8** %var_addr, align 8, !dbg !5947
  %12 = call i32 @memcmp(i8* %11, i8* %10, i64 %8) nounwind readonly, !dbg !5947
  %13 = icmp eq i32 %12, 0, !dbg !5947
  br i1 %13, label %bb3, label %bb5, !dbg !5947

bb3:                                              ; preds = %bb2
  %14 = load i8*** %ep, align 8, !dbg !5947
  %15 = load i8** %14, align 8, !dbg !5947
  %16 = load i32* %len, align 4, !dbg !5947
  %17 = sext i32 %16 to i64, !dbg !5947
  %18 = getelementptr inbounds i8* %15, i64 %17, !dbg !5947
  %19 = load i8* %18, align 1, !dbg !5947
  %20 = icmp eq i8 %19, 61, !dbg !5947
  br i1 %20, label %bb4, label %bb5, !dbg !5947

bb4:                                              ; preds = %bb3
  %21 = load i8*** %ep, align 8, !dbg !5948
  %22 = load i8** %21, align 8, !dbg !5948
  %23 = load i32* %len, align 4, !dbg !5948
  %24 = sext i32 %23 to i64, !dbg !5948
  %25 = getelementptr inbounds i8* %22, i64 %24, !dbg !5948
  %26 = getelementptr inbounds i8* %25, i64 1, !dbg !5948
  store i8* %26, i8** %0, align 8, !dbg !5948
  br label %bb8, !dbg !5948

bb5:                                              ; preds = %bb3, %bb2
  %27 = load i8*** %ep, align 8, !dbg !5949
  %28 = getelementptr inbounds i8** %27, i64 1, !dbg !5949
  store i8** %28, i8*** %ep, align 8, !dbg !5949
  br label %bb6, !dbg !5949

bb6:                                              ; preds = %bb5, %bb1
  %29 = load i8*** %ep, align 8, !dbg !5950
  %30 = load i8** %29, align 8, !dbg !5950
  %31 = icmp ne i8* %30, null, !dbg !5950
  br i1 %31, label %bb2, label %bb7, !dbg !5950

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8, !dbg !5951
  br label %bb8, !dbg !5951

bb8:                                              ; preds = %bb7, %bb4, %bb
  %32 = load i8** %0, align 8, !dbg !5945
  store i8* %32, i8** %retval, align 8, !dbg !5945
  %retval9 = load i8** %retval, !dbg !5945
  ret i8* %retval9, !dbg !5945
}

define i64 @getline(i8** noalias %lineptr, i64* noalias %n, %4* noalias %stream) nounwind {
entry:
  %lineptr_addr = alloca i8**, align 8
  %n_addr = alloca i64*, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8** %lineptr, i8*** %lineptr_addr
  store i64* %n, i64** %n_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i8*** %lineptr_addr, align 8, !dbg !5952
  %2 = load i64** %n_addr, align 8, !dbg !5952
  %3 = load %4** %stream_addr, align 8, !dbg !5952
  %4 = call i64 @getdelim(i8** noalias %1, i64* noalias %2, i32 10, %4* noalias %3) nounwind, !dbg !5952
  store i64 %4, i64* %0, align 8, !dbg !5952
  %5 = load i64* %0, align 8, !dbg !5952
  store i64 %5, i64* %retval, align 8, !dbg !5952
  %retval1 = load i64* %retval, !dbg !5952
  ret i64 %retval1, !dbg !5952
}

define internal void @exchange(i8** %argv, %struct._getopt_data* %d) nounwind {
entry:
  %argv_addr = alloca i8**, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %bottom = alloca i32
  %middle = alloca i32
  %top = alloca i32
  %tem = alloca i8*
  %len = alloca i32
  %i = alloca i32
  %len6 = alloca i32
  %i7 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %argv, i8*** %argv_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %0 = load %struct._getopt_data** %d_addr, align 8, !dbg !5954
  %1 = getelementptr inbounds %struct._getopt_data* %0, i32 0, i32 8, !dbg !5954
  %2 = load i32* %1, align 8, !dbg !5954
  store i32 %2, i32* %bottom, align 4, !dbg !5954
  %3 = load %struct._getopt_data** %d_addr, align 8, !dbg !5956
  %4 = getelementptr inbounds %struct._getopt_data* %3, i32 0, i32 9, !dbg !5956
  %5 = load i32* %4, align 4, !dbg !5956
  store i32 %5, i32* %middle, align 4, !dbg !5956
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5957
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 0, !dbg !5957
  %8 = load i32* %7, align 8, !dbg !5957
  store i32 %8, i32* %top, align 4, !dbg !5957
  br label %bb11, !dbg !5957

bb:                                               ; preds = %bb12
  %9 = load i32* %top, align 4, !dbg !5958
  %10 = load i32* %middle, align 4, !dbg !5958
  %11 = sub nsw i32 %9, %10, !dbg !5958
  %12 = load i32* %middle, align 4, !dbg !5958
  %13 = load i32* %bottom, align 4, !dbg !5958
  %14 = sub nsw i32 %12, %13, !dbg !5958
  %15 = icmp sgt i32 %11, %14, !dbg !5958
  br i1 %15, label %bb1, label %bb5, !dbg !5958

bb1:                                              ; preds = %bb
  %16 = load i32* %middle, align 4, !dbg !5959
  %17 = load i32* %bottom, align 4, !dbg !5959
  %18 = sub nsw i32 %16, %17, !dbg !5959
  store i32 %18, i32* %len, align 4, !dbg !5959
  store i32 0, i32* %i, align 4, !dbg !5961
  br label %bb3, !dbg !5961

bb2:                                              ; preds = %bb3
  %19 = load i32* %bottom, align 4, !dbg !5962
  %20 = load i32* %i, align 4, !dbg !5962
  %21 = add nsw i32 %19, %20, !dbg !5962
  %22 = load i8*** %argv_addr, align 8, !dbg !5962
  %23 = sext i32 %21 to i64, !dbg !5962
  %24 = getelementptr inbounds i8** %22, i64 %23, !dbg !5962
  %25 = load i8** %24, align 1, !dbg !5962
  store i8* %25, i8** %tem, align 8, !dbg !5962
  %26 = load i32* %bottom, align 4, !dbg !5963
  %27 = load i32* %i, align 4, !dbg !5963
  %28 = add nsw i32 %26, %27, !dbg !5963
  %29 = load i32* %middle, align 4, !dbg !5963
  %30 = load i32* %bottom, align 4, !dbg !5963
  %31 = sub nsw i32 %29, %30, !dbg !5963
  %32 = load i32* %top, align 4, !dbg !5963
  %33 = sub nsw i32 %32, %31, !dbg !5963
  %34 = load i32* %i, align 4, !dbg !5963
  %35 = add nsw i32 %33, %34, !dbg !5963
  %36 = load i8*** %argv_addr, align 8, !dbg !5963
  %37 = sext i32 %35 to i64, !dbg !5963
  %38 = getelementptr inbounds i8** %36, i64 %37, !dbg !5963
  %39 = load i8** %38, align 1, !dbg !5963
  %40 = load i8*** %argv_addr, align 8, !dbg !5963
  %41 = sext i32 %28 to i64, !dbg !5963
  %42 = getelementptr inbounds i8** %40, i64 %41, !dbg !5963
  store i8* %39, i8** %42, align 1, !dbg !5963
  %43 = load i32* %middle, align 4, !dbg !5964
  %44 = load i32* %bottom, align 4, !dbg !5964
  %45 = sub nsw i32 %43, %44, !dbg !5964
  %46 = load i32* %top, align 4, !dbg !5964
  %47 = sub nsw i32 %46, %45, !dbg !5964
  %48 = load i32* %i, align 4, !dbg !5964
  %49 = add nsw i32 %47, %48, !dbg !5964
  %50 = load i8*** %argv_addr, align 8, !dbg !5964
  %51 = sext i32 %49 to i64, !dbg !5964
  %52 = getelementptr inbounds i8** %50, i64 %51, !dbg !5964
  %53 = load i8** %tem, align 8, !dbg !5964
  store i8* %53, i8** %52, align 1, !dbg !5964
  %54 = load i32* %i, align 4, !dbg !5961
  %55 = add nsw i32 %54, 1, !dbg !5961
  store i32 %55, i32* %i, align 4, !dbg !5961
  br label %bb3, !dbg !5961

bb3:                                              ; preds = %bb2, %bb1
  %56 = load i32* %i, align 4, !dbg !5961
  %57 = load i32* %len, align 4, !dbg !5961
  %58 = icmp slt i32 %56, %57, !dbg !5961
  br i1 %58, label %bb2, label %bb4, !dbg !5961

bb4:                                              ; preds = %bb3
  %59 = load i32* %top, align 4, !dbg !5965
  %60 = load i32* %len, align 4, !dbg !5965
  %61 = sub nsw i32 %59, %60, !dbg !5965
  store i32 %61, i32* %top, align 4, !dbg !5965
  br label %bb11, !dbg !5965

bb5:                                              ; preds = %bb
  %62 = load i32* %top, align 4, !dbg !5966
  %63 = load i32* %middle, align 4, !dbg !5966
  %64 = sub nsw i32 %62, %63, !dbg !5966
  store i32 %64, i32* %len6, align 4, !dbg !5966
  store i32 0, i32* %i7, align 4, !dbg !5968
  br label %bb9, !dbg !5968

bb8:                                              ; preds = %bb9
  %65 = load i32* %i7, align 4, !dbg !5969
  %66 = add nsw i32 %96, %65, !dbg !5969
  %67 = load i8*** %argv_addr, align 8, !dbg !5969
  %68 = sext i32 %66 to i64, !dbg !5969
  %69 = getelementptr inbounds i8** %67, i64 %68, !dbg !5969
  %70 = load i8** %69, align 1, !dbg !5969
  store i8* %70, i8** %tem, align 8, !dbg !5969
  %71 = load i32* %bottom, align 4, !dbg !5970
  %72 = load i32* %i7, align 4, !dbg !5970
  %73 = add nsw i32 %71, %72, !dbg !5970
  %74 = load i32* %middle, align 4, !dbg !5970
  %75 = load i32* %i7, align 4, !dbg !5970
  %76 = add nsw i32 %74, %75, !dbg !5970
  %77 = load i8*** %argv_addr, align 8, !dbg !5970
  %78 = sext i32 %76 to i64, !dbg !5970
  %79 = getelementptr inbounds i8** %77, i64 %78, !dbg !5970
  %80 = load i8** %79, align 1, !dbg !5970
  %81 = load i8*** %argv_addr, align 8, !dbg !5970
  %82 = sext i32 %73 to i64, !dbg !5970
  %83 = getelementptr inbounds i8** %81, i64 %82, !dbg !5970
  store i8* %80, i8** %83, align 1, !dbg !5970
  %84 = load i32* %middle, align 4, !dbg !5971
  %85 = load i32* %i7, align 4, !dbg !5971
  %86 = add nsw i32 %84, %85, !dbg !5971
  %87 = load i8*** %argv_addr, align 8, !dbg !5971
  %88 = sext i32 %86 to i64, !dbg !5971
  %89 = getelementptr inbounds i8** %87, i64 %88, !dbg !5971
  %90 = load i8** %tem, align 8, !dbg !5971
  store i8* %90, i8** %89, align 1, !dbg !5971
  %91 = load i32* %i7, align 4, !dbg !5968
  %92 = add nsw i32 %91, 1, !dbg !5968
  store i32 %92, i32* %i7, align 4, !dbg !5968
  br label %bb9, !dbg !5968

bb9:                                              ; preds = %bb8, %bb5
  %93 = load i32* %i7, align 4, !dbg !5968
  %94 = load i32* %len6, align 4, !dbg !5968
  %95 = icmp slt i32 %93, %94, !dbg !5968
  %96 = load i32* %bottom, align 4, !dbg !5969
  br i1 %95, label %bb8, label %bb10, !dbg !5968

bb10:                                             ; preds = %bb9
  %97 = load i32* %len6, align 4, !dbg !5972
  %98 = add nsw i32 %96, %97, !dbg !5972
  store i32 %98, i32* %bottom, align 4, !dbg !5972
  br label %bb11, !dbg !5972

bb11:                                             ; preds = %bb10, %bb4, %entry
  %99 = load i32* %top, align 4, !dbg !5973
  %100 = load i32* %middle, align 4, !dbg !5973
  %101 = icmp sle i32 %99, %100, !dbg !5973
  br i1 %101, label %bb13, label %bb12, !dbg !5973

bb12:                                             ; preds = %bb11
  %102 = load i32* %middle, align 4, !dbg !5973
  %103 = load i32* %bottom, align 4, !dbg !5973
  %104 = icmp sgt i32 %102, %103, !dbg !5973
  br i1 %104, label %bb, label %bb13, !dbg !5973

bb13:                                             ; preds = %bb12, %bb11
  %105 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %106 = getelementptr inbounds %struct._getopt_data* %105, i32 0, i32 8, !dbg !5974
  %107 = load i32* %106, align 8, !dbg !5974
  %108 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %109 = getelementptr inbounds %struct._getopt_data* %108, i32 0, i32 0, !dbg !5974
  %110 = load i32* %109, align 8, !dbg !5974
  %111 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %112 = getelementptr inbounds %struct._getopt_data* %111, i32 0, i32 9, !dbg !5974
  %113 = load i32* %112, align 4, !dbg !5974
  %114 = sub nsw i32 %110, %113, !dbg !5974
  %115 = add nsw i32 %107, %114, !dbg !5974
  %116 = load %struct._getopt_data** %d_addr, align 8, !dbg !5974
  %117 = getelementptr inbounds %struct._getopt_data* %116, i32 0, i32 8, !dbg !5974
  store i32 %115, i32* %117, align 8, !dbg !5974
  %118 = load %struct._getopt_data** %d_addr, align 8, !dbg !5975
  %119 = getelementptr inbounds %struct._getopt_data* %118, i32 0, i32 0, !dbg !5975
  %120 = load i32* %119, align 8, !dbg !5975
  %121 = load %struct._getopt_data** %d_addr, align 8, !dbg !5975
  %122 = getelementptr inbounds %struct._getopt_data* %121, i32 0, i32 9, !dbg !5975
  store i32 %120, i32* %122, align 4, !dbg !5975
  ret void, !dbg !5976
}

define internal i8* @_getopt_initialize(i32 %argc, i8** %argv, i8* %optstring, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 0, !dbg !5977
  %3 = load i32* %2, align 8, !dbg !5977
  %4 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %5 = getelementptr inbounds %struct._getopt_data* %4, i32 0, i32 9, !dbg !5977
  store i32 %3, i32* %5, align 4, !dbg !5977
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 9, !dbg !5977
  %8 = load i32* %7, align 4, !dbg !5977
  %9 = load %struct._getopt_data** %d_addr, align 8, !dbg !5977
  %10 = getelementptr inbounds %struct._getopt_data* %9, i32 0, i32 8, !dbg !5977
  store i32 %8, i32* %10, align 8, !dbg !5977
  %11 = load %struct._getopt_data** %d_addr, align 8, !dbg !5979
  %12 = getelementptr inbounds %struct._getopt_data* %11, i32 0, i32 5, !dbg !5979
  store i8* null, i8** %12, align 8, !dbg !5979
  %13 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str149, i64 0, i64 0)) nounwind, !dbg !5980
  %14 = icmp ne i8* %13, null, !dbg !5980
  %15 = zext i1 %14 to i32, !dbg !5980
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5980
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 7, !dbg !5980
  store i32 %15, i32* %17, align 4, !dbg !5980
  %18 = load i8** %optstring_addr, align 8, !dbg !5981
  %19 = getelementptr inbounds i8* %18, i64 0, !dbg !5981
  %20 = load i8* %19, align 1, !dbg !5981
  %21 = icmp eq i8 %20, 45, !dbg !5981
  br i1 %21, label %bb, label %bb1, !dbg !5981

bb:                                               ; preds = %entry
  %22 = load %struct._getopt_data** %d_addr, align 8, !dbg !5982
  %23 = getelementptr inbounds %struct._getopt_data* %22, i32 0, i32 6, !dbg !5982
  store i32 2, i32* %23, align 8, !dbg !5982
  %24 = load i8** %optstring_addr, align 8, !dbg !5983
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5983
  store i8* %25, i8** %optstring_addr, align 8, !dbg !5983
  br label %bb6, !dbg !5983

bb1:                                              ; preds = %entry
  %26 = load i8** %optstring_addr, align 8, !dbg !5984
  %27 = getelementptr inbounds i8* %26, i64 0, !dbg !5984
  %28 = load i8* %27, align 1, !dbg !5984
  %29 = icmp eq i8 %28, 43, !dbg !5984
  %30 = load %struct._getopt_data** %d_addr, align 8, !dbg !5985
  br i1 %29, label %bb2, label %bb3, !dbg !5984

bb2:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 6, !dbg !5985
  store i32 0, i32* %31, align 8, !dbg !5985
  %32 = load i8** %optstring_addr, align 8, !dbg !5986
  %33 = getelementptr inbounds i8* %32, i64 1, !dbg !5986
  store i8* %33, i8** %optstring_addr, align 8, !dbg !5986
  br label %bb6, !dbg !5986

bb3:                                              ; preds = %bb1
  %34 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 7, !dbg !5987
  %35 = load i32* %34, align 4, !dbg !5987
  %36 = icmp ne i32 %35, 0, !dbg !5987
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !5988
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 6, !dbg !5988
  br i1 %36, label %bb4, label %bb5, !dbg !5987

bb4:                                              ; preds = %bb3
  store i32 0, i32* %38, align 8, !dbg !5988
  br label %bb6, !dbg !5988

bb5:                                              ; preds = %bb3
  store i32 1, i32* %38, align 8, !dbg !5989
  br label %bb6, !dbg !5989

bb6:                                              ; preds = %bb5, %bb4, %bb2, %bb
  %39 = load i8** %optstring_addr, align 8, !dbg !5990
  store i8* %39, i8** %0, align 8, !dbg !5990
  %40 = load i8** %0, align 8, !dbg !5990
  store i8* %40, i8** %retval, align 8, !dbg !5990
  %retval7 = load i8** %retval, !dbg !5990
  ret i8* %retval7, !dbg !5990
}

define internal i32 @_getopt_internal_r(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i32
  %print_errors = alloca i32
  %nameend = alloca i8*
  %p = alloca %struct.option*
  %pfound = alloca %struct.option*
  %exact = alloca i32
  %ambig = alloca i32
  %indfound = alloca i32
  %option_index = alloca i32
  %c = alloca i8
  %temp = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5991
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 1, !dbg !5991
  %3 = load i32* %2, align 4, !dbg !5991
  store i32 %3, i32* %print_errors, align 4, !dbg !5991
  %4 = load i8** %optstring_addr, align 8, !dbg !5993
  %5 = getelementptr inbounds i8* %4, i64 0, !dbg !5993
  %6 = load i8* %5, align 1, !dbg !5993
  %7 = icmp eq i8 %6, 58, !dbg !5993
  br i1 %7, label %bb, label %bb1, !dbg !5993

bb:                                               ; preds = %entry
  store i32 0, i32* %print_errors, align 4, !dbg !5994
  br label %bb1, !dbg !5994

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %argc_addr, align 4, !dbg !5995
  %9 = icmp sle i32 %8, 0, !dbg !5995
  br i1 %9, label %bb2, label %bb3, !dbg !5995

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !5996
  br label %bb133, !dbg !5996

bb3:                                              ; preds = %bb1
  %10 = load %struct._getopt_data** %d_addr, align 8, !dbg !5997
  %11 = getelementptr inbounds %struct._getopt_data* %10, i32 0, i32 3, !dbg !5997
  store i8* null, i8** %11, align 8, !dbg !5997
  %12 = load %struct._getopt_data** %d_addr, align 8, !dbg !5998
  %13 = getelementptr inbounds %struct._getopt_data* %12, i32 0, i32 0, !dbg !5998
  %14 = load i32* %13, align 8, !dbg !5998
  %15 = icmp eq i32 %14, 0, !dbg !5998
  br i1 %15, label %bb5, label %bb4, !dbg !5998

bb4:                                              ; preds = %bb3
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5998
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 4, !dbg !5998
  %18 = load i32* %17, align 8, !dbg !5998
  %19 = icmp eq i32 %18, 0, !dbg !5998
  br i1 %19, label %bb5, label %bb8, !dbg !5998

bb5:                                              ; preds = %bb4, %bb3
  %20 = load %struct._getopt_data** %d_addr, align 8, !dbg !5999
  %21 = getelementptr inbounds %struct._getopt_data* %20, i32 0, i32 0, !dbg !5999
  %22 = load i32* %21, align 8, !dbg !5999
  %23 = icmp eq i32 %22, 0, !dbg !5999
  br i1 %23, label %bb6, label %bb7, !dbg !5999

bb6:                                              ; preds = %bb5
  %24 = load %struct._getopt_data** %d_addr, align 8, !dbg !6000
  %25 = getelementptr inbounds %struct._getopt_data* %24, i32 0, i32 0, !dbg !6000
  store i32 1, i32* %25, align 8, !dbg !6000
  br label %bb7, !dbg !6000

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %argc_addr, align 4, !dbg !6001
  %27 = load i8*** %argv_addr, align 8, !dbg !6001
  %28 = load i8** %optstring_addr, align 8, !dbg !6001
  %29 = load %struct._getopt_data** %d_addr, align 8, !dbg !6001
  %30 = call i8* @_getopt_initialize(i32 %26, i8** %27, i8* %28, %struct._getopt_data* %29) nounwind, !dbg !6001
  store i8* %30, i8** %optstring_addr, align 8, !dbg !6001
  %31 = load %struct._getopt_data** %d_addr, align 8, !dbg !6002
  %32 = getelementptr inbounds %struct._getopt_data* %31, i32 0, i32 4, !dbg !6002
  store i32 1, i32* %32, align 8, !dbg !6002
  br label %bb8, !dbg !6002

bb8:                                              ; preds = %bb7, %bb4
  %33 = load %struct._getopt_data** %d_addr, align 8, !dbg !6003
  %34 = getelementptr inbounds %struct._getopt_data* %33, i32 0, i32 5, !dbg !6003
  %35 = load i8** %34, align 8, !dbg !6003
  %36 = icmp eq i8* %35, null, !dbg !6003
  br i1 %36, label %bb10, label %bb9, !dbg !6003

bb9:                                              ; preds = %bb8
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !6003
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 5, !dbg !6003
  %39 = load i8** %38, align 8, !dbg !6003
  %40 = load i8* %39, align 1, !dbg !6003
  %41 = icmp eq i8 %40, 0, !dbg !6003
  br i1 %41, label %bb10, label %bb48, !dbg !6003

bb10:                                             ; preds = %bb9, %bb8
  %42 = load %struct._getopt_data** %d_addr, align 8, !dbg !6004
  %43 = getelementptr inbounds %struct._getopt_data* %42, i32 0, i32 9, !dbg !6004
  %44 = load i32* %43, align 4, !dbg !6004
  %45 = load %struct._getopt_data** %d_addr, align 8, !dbg !6004
  %46 = getelementptr inbounds %struct._getopt_data* %45, i32 0, i32 0, !dbg !6004
  %47 = load i32* %46, align 8, !dbg !6004
  %48 = icmp sgt i32 %44, %47, !dbg !6004
  br i1 %48, label %bb11, label %bb12, !dbg !6004

bb11:                                             ; preds = %bb10
  %49 = load %struct._getopt_data** %d_addr, align 8, !dbg !6005
  %50 = getelementptr inbounds %struct._getopt_data* %49, i32 0, i32 0, !dbg !6005
  %51 = load i32* %50, align 8, !dbg !6005
  %52 = load %struct._getopt_data** %d_addr, align 8, !dbg !6005
  %53 = getelementptr inbounds %struct._getopt_data* %52, i32 0, i32 9, !dbg !6005
  store i32 %51, i32* %53, align 4, !dbg !6005
  br label %bb12, !dbg !6005

bb12:                                             ; preds = %bb11, %bb10
  %54 = load %struct._getopt_data** %d_addr, align 8, !dbg !6006
  %55 = getelementptr inbounds %struct._getopt_data* %54, i32 0, i32 8, !dbg !6006
  %56 = load i32* %55, align 8, !dbg !6006
  %57 = load %struct._getopt_data** %d_addr, align 8, !dbg !6006
  %58 = getelementptr inbounds %struct._getopt_data* %57, i32 0, i32 0, !dbg !6006
  %59 = load i32* %58, align 8, !dbg !6006
  %60 = icmp sgt i32 %56, %59, !dbg !6006
  br i1 %60, label %bb13, label %bb14, !dbg !6006

bb13:                                             ; preds = %bb12
  %61 = load %struct._getopt_data** %d_addr, align 8, !dbg !6007
  %62 = getelementptr inbounds %struct._getopt_data* %61, i32 0, i32 0, !dbg !6007
  %63 = load i32* %62, align 8, !dbg !6007
  %64 = load %struct._getopt_data** %d_addr, align 8, !dbg !6007
  %65 = getelementptr inbounds %struct._getopt_data* %64, i32 0, i32 8, !dbg !6007
  store i32 %63, i32* %65, align 8, !dbg !6007
  br label %bb14, !dbg !6007

bb14:                                             ; preds = %bb13, %bb12
  %66 = load %struct._getopt_data** %d_addr, align 8, !dbg !6008
  %67 = getelementptr inbounds %struct._getopt_data* %66, i32 0, i32 6, !dbg !6008
  %68 = load i32* %67, align 8, !dbg !6008
  %69 = icmp eq i32 %68, 1, !dbg !6008
  br i1 %69, label %bb15, label %bb26, !dbg !6008

bb15:                                             ; preds = %bb14
  %70 = load %struct._getopt_data** %d_addr, align 8, !dbg !6009
  %71 = getelementptr inbounds %struct._getopt_data* %70, i32 0, i32 8, !dbg !6009
  %72 = load i32* %71, align 8, !dbg !6009
  %73 = load %struct._getopt_data** %d_addr, align 8, !dbg !6009
  %74 = getelementptr inbounds %struct._getopt_data* %73, i32 0, i32 9, !dbg !6009
  %75 = load i32* %74, align 4, !dbg !6009
  %76 = icmp eq i32 %72, %75, !dbg !6009
  br i1 %76, label %bb18, label %bb16, !dbg !6009

bb16:                                             ; preds = %bb15
  %77 = load %struct._getopt_data** %d_addr, align 8, !dbg !6009
  %78 = getelementptr inbounds %struct._getopt_data* %77, i32 0, i32 9, !dbg !6009
  %79 = load i32* %78, align 4, !dbg !6009
  %80 = load %struct._getopt_data** %d_addr, align 8, !dbg !6009
  %81 = getelementptr inbounds %struct._getopt_data* %80, i32 0, i32 0, !dbg !6009
  %82 = load i32* %81, align 8, !dbg !6009
  %83 = icmp eq i32 %79, %82, !dbg !6009
  br i1 %83, label %bb18, label %bb17, !dbg !6009

bb17:                                             ; preds = %bb16
  %84 = load i8*** %argv_addr, align 8, !dbg !6010
  %85 = load %struct._getopt_data** %d_addr, align 8, !dbg !6010
  call void @exchange(i8** %84, %struct._getopt_data* %85) nounwind, !dbg !6010
  br label %bb22, !dbg !6010

bb18:                                             ; preds = %bb16, %bb15
  %86 = load %struct._getopt_data** %d_addr, align 8, !dbg !6011
  %87 = getelementptr inbounds %struct._getopt_data* %86, i32 0, i32 9, !dbg !6011
  %88 = load i32* %87, align 4, !dbg !6011
  %89 = load %struct._getopt_data** %d_addr, align 8, !dbg !6011
  %90 = getelementptr inbounds %struct._getopt_data* %89, i32 0, i32 0, !dbg !6011
  %91 = load i32* %90, align 8, !dbg !6011
  %92 = icmp ne i32 %88, %91, !dbg !6011
  br i1 %92, label %bb19, label %bb22, !dbg !6011

bb19:                                             ; preds = %bb18
  %93 = load %struct._getopt_data** %d_addr, align 8, !dbg !6012
  %94 = getelementptr inbounds %struct._getopt_data* %93, i32 0, i32 0, !dbg !6012
  %95 = load i32* %94, align 8, !dbg !6012
  %96 = load %struct._getopt_data** %d_addr, align 8, !dbg !6012
  %97 = getelementptr inbounds %struct._getopt_data* %96, i32 0, i32 8, !dbg !6012
  store i32 %95, i32* %97, align 8, !dbg !6012
  br label %bb22, !dbg !6012

bb21:                                             ; preds = %bb24, %bb23
  %98 = load %struct._getopt_data** %d_addr, align 8, !dbg !6013
  %99 = getelementptr inbounds %struct._getopt_data* %98, i32 0, i32 0, !dbg !6013
  %100 = load i32* %99, align 8, !dbg !6013
  %101 = add nsw i32 %100, 1, !dbg !6013
  %102 = load %struct._getopt_data** %d_addr, align 8, !dbg !6013
  %103 = getelementptr inbounds %struct._getopt_data* %102, i32 0, i32 0, !dbg !6013
  store i32 %101, i32* %103, align 8, !dbg !6013
  br label %bb22, !dbg !6013

bb22:                                             ; preds = %bb17, %bb18, %bb19, %bb21
  %104 = load %struct._getopt_data** %d_addr, align 8, !dbg !6014
  %105 = getelementptr inbounds %struct._getopt_data* %104, i32 0, i32 0, !dbg !6014
  %106 = load i32* %105, align 8, !dbg !6014
  %107 = load i32* %argc_addr, align 4, !dbg !6014
  %108 = icmp sge i32 %106, %107, !dbg !6014
  br i1 %108, label %bb25, label %bb23, !dbg !6014

bb23:                                             ; preds = %bb22
  %109 = load %struct._getopt_data** %d_addr, align 8, !dbg !6014
  %110 = getelementptr inbounds %struct._getopt_data* %109, i32 0, i32 0, !dbg !6014
  %111 = load i32* %110, align 8, !dbg !6014
  %112 = load i8*** %argv_addr, align 8, !dbg !6014
  %113 = sext i32 %111 to i64, !dbg !6014
  %114 = getelementptr inbounds i8** %112, i64 %113, !dbg !6014
  %115 = load i8** %114, align 1, !dbg !6014
  %116 = getelementptr inbounds i8* %115, i64 0, !dbg !6014
  %117 = load i8* %116, align 1, !dbg !6014
  %118 = icmp ne i8 %117, 45, !dbg !6014
  br i1 %118, label %bb21, label %bb24, !dbg !6014

bb24:                                             ; preds = %bb23
  %119 = load %struct._getopt_data** %d_addr, align 8, !dbg !6014
  %120 = getelementptr inbounds %struct._getopt_data* %119, i32 0, i32 0, !dbg !6014
  %121 = load i32* %120, align 8, !dbg !6014
  %122 = load i8*** %argv_addr, align 8, !dbg !6014
  %123 = sext i32 %121 to i64, !dbg !6014
  %124 = getelementptr inbounds i8** %122, i64 %123, !dbg !6014
  %125 = load i8** %124, align 1, !dbg !6014
  %126 = getelementptr inbounds i8* %125, i64 1, !dbg !6014
  %127 = load i8* %126, align 1, !dbg !6014
  %128 = icmp eq i8 %127, 0, !dbg !6014
  br i1 %128, label %bb21, label %bb25, !dbg !6014

bb25:                                             ; preds = %bb24, %bb22
  %129 = load %struct._getopt_data** %d_addr, align 8, !dbg !6015
  %130 = getelementptr inbounds %struct._getopt_data* %129, i32 0, i32 0, !dbg !6015
  %131 = load i32* %130, align 8, !dbg !6015
  %132 = load %struct._getopt_data** %d_addr, align 8, !dbg !6015
  %133 = getelementptr inbounds %struct._getopt_data* %132, i32 0, i32 9, !dbg !6015
  store i32 %131, i32* %133, align 4, !dbg !6015
  br label %bb26, !dbg !6015

bb26:                                             ; preds = %bb25, %bb14
  %134 = load %struct._getopt_data** %d_addr, align 8, !dbg !6016
  %135 = getelementptr inbounds %struct._getopt_data* %134, i32 0, i32 0, !dbg !6016
  %136 = load i32* %135, align 8, !dbg !6016
  %137 = load i32* %argc_addr, align 4, !dbg !6016
  %138 = icmp ne i32 %136, %137, !dbg !6016
  br i1 %138, label %bb27, label %bb34, !dbg !6016

bb27:                                             ; preds = %bb26
  %139 = load %struct._getopt_data** %d_addr, align 8, !dbg !6016
  %140 = getelementptr inbounds %struct._getopt_data* %139, i32 0, i32 0, !dbg !6016
  %141 = load i32* %140, align 8, !dbg !6016
  %142 = load i8*** %argv_addr, align 8, !dbg !6016
  %143 = sext i32 %141 to i64, !dbg !6016
  %144 = getelementptr inbounds i8** %142, i64 %143, !dbg !6016
  %145 = load i8** %144, align 1, !dbg !6016
  %146 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([3 x i8]* @.str1150, i64 0, i64 0)) nounwind readonly, !dbg !6016
  %147 = icmp eq i32 %146, 0, !dbg !6016
  br i1 %147, label %bb28, label %bb34, !dbg !6016

bb28:                                             ; preds = %bb27
  %148 = load %struct._getopt_data** %d_addr, align 8, !dbg !6017
  %149 = getelementptr inbounds %struct._getopt_data* %148, i32 0, i32 0, !dbg !6017
  %150 = load i32* %149, align 8, !dbg !6017
  %151 = add nsw i32 %150, 1, !dbg !6017
  %152 = load %struct._getopt_data** %d_addr, align 8, !dbg !6017
  %153 = getelementptr inbounds %struct._getopt_data* %152, i32 0, i32 0, !dbg !6017
  store i32 %151, i32* %153, align 8, !dbg !6017
  %154 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %155 = getelementptr inbounds %struct._getopt_data* %154, i32 0, i32 8, !dbg !6018
  %156 = load i32* %155, align 8, !dbg !6018
  %157 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %158 = getelementptr inbounds %struct._getopt_data* %157, i32 0, i32 9, !dbg !6018
  %159 = load i32* %158, align 4, !dbg !6018
  %160 = icmp eq i32 %156, %159, !dbg !6018
  br i1 %160, label %bb31, label %bb29, !dbg !6018

bb29:                                             ; preds = %bb28
  %161 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %162 = getelementptr inbounds %struct._getopt_data* %161, i32 0, i32 9, !dbg !6018
  %163 = load i32* %162, align 4, !dbg !6018
  %164 = load %struct._getopt_data** %d_addr, align 8, !dbg !6018
  %165 = getelementptr inbounds %struct._getopt_data* %164, i32 0, i32 0, !dbg !6018
  %166 = load i32* %165, align 8, !dbg !6018
  %167 = icmp eq i32 %163, %166, !dbg !6018
  br i1 %167, label %bb31, label %bb30, !dbg !6018

bb30:                                             ; preds = %bb29
  %168 = load i8*** %argv_addr, align 8, !dbg !6019
  %169 = load %struct._getopt_data** %d_addr, align 8, !dbg !6019
  call void @exchange(i8** %168, %struct._getopt_data* %169) nounwind, !dbg !6019
  br label %bb33, !dbg !6019

bb31:                                             ; preds = %bb29, %bb28
  %170 = load %struct._getopt_data** %d_addr, align 8, !dbg !6020
  %171 = getelementptr inbounds %struct._getopt_data* %170, i32 0, i32 8, !dbg !6020
  %172 = load i32* %171, align 8, !dbg !6020
  %173 = load %struct._getopt_data** %d_addr, align 8, !dbg !6020
  %174 = getelementptr inbounds %struct._getopt_data* %173, i32 0, i32 9, !dbg !6020
  %175 = load i32* %174, align 4, !dbg !6020
  %176 = icmp eq i32 %172, %175, !dbg !6020
  br i1 %176, label %bb32, label %bb33, !dbg !6020

bb32:                                             ; preds = %bb31
  %177 = load %struct._getopt_data** %d_addr, align 8, !dbg !6021
  %178 = getelementptr inbounds %struct._getopt_data* %177, i32 0, i32 0, !dbg !6021
  %179 = load i32* %178, align 8, !dbg !6021
  %180 = load %struct._getopt_data** %d_addr, align 8, !dbg !6021
  %181 = getelementptr inbounds %struct._getopt_data* %180, i32 0, i32 8, !dbg !6021
  store i32 %179, i32* %181, align 8, !dbg !6021
  br label %bb33, !dbg !6021

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %182 = load %struct._getopt_data** %d_addr, align 8, !dbg !6022
  %183 = getelementptr inbounds %struct._getopt_data* %182, i32 0, i32 9, !dbg !6022
  %184 = load i32* %argc_addr, align 4, !dbg !6022
  store i32 %184, i32* %183, align 4, !dbg !6022
  %185 = load %struct._getopt_data** %d_addr, align 8, !dbg !6023
  %186 = getelementptr inbounds %struct._getopt_data* %185, i32 0, i32 0, !dbg !6023
  %187 = load i32* %argc_addr, align 4, !dbg !6023
  store i32 %187, i32* %186, align 8, !dbg !6023
  br label %bb34, !dbg !6023

bb34:                                             ; preds = %bb33, %bb27, %bb26
  %188 = load %struct._getopt_data** %d_addr, align 8, !dbg !6024
  %189 = getelementptr inbounds %struct._getopt_data* %188, i32 0, i32 0, !dbg !6024
  %190 = load i32* %189, align 8, !dbg !6024
  %191 = load i32* %argc_addr, align 4, !dbg !6024
  %192 = icmp eq i32 %190, %191, !dbg !6024
  %193 = load %struct._getopt_data** %d_addr, align 8, !dbg !6025
  br i1 %192, label %bb35, label %bb38, !dbg !6024

bb35:                                             ; preds = %bb34
  %194 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 8, !dbg !6025
  %195 = load i32* %194, align 8, !dbg !6025
  %196 = load %struct._getopt_data** %d_addr, align 8, !dbg !6025
  %197 = getelementptr inbounds %struct._getopt_data* %196, i32 0, i32 9, !dbg !6025
  %198 = load i32* %197, align 4, !dbg !6025
  %199 = icmp ne i32 %195, %198, !dbg !6025
  br i1 %199, label %bb36, label %bb37, !dbg !6025

bb36:                                             ; preds = %bb35
  %200 = load %struct._getopt_data** %d_addr, align 8, !dbg !6026
  %201 = getelementptr inbounds %struct._getopt_data* %200, i32 0, i32 8, !dbg !6026
  %202 = load i32* %201, align 8, !dbg !6026
  %203 = load %struct._getopt_data** %d_addr, align 8, !dbg !6026
  %204 = getelementptr inbounds %struct._getopt_data* %203, i32 0, i32 0, !dbg !6026
  store i32 %202, i32* %204, align 8, !dbg !6026
  br label %bb37, !dbg !6026

bb37:                                             ; preds = %bb36, %bb35
  store i32 -1, i32* %0, align 4, !dbg !6027
  br label %bb133, !dbg !6027

bb38:                                             ; preds = %bb34
  %205 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 0, !dbg !6028
  %206 = load i32* %205, align 8, !dbg !6028
  %207 = load i8*** %argv_addr, align 8, !dbg !6028
  %208 = sext i32 %206 to i64, !dbg !6028
  %209 = getelementptr inbounds i8** %207, i64 %208, !dbg !6028
  %210 = load i8** %209, align 1, !dbg !6028
  %211 = getelementptr inbounds i8* %210, i64 0, !dbg !6028
  %212 = load i8* %211, align 1, !dbg !6028
  %213 = icmp ne i8 %212, 45, !dbg !6028
  br i1 %213, label %bb40, label %bb39, !dbg !6028

bb39:                                             ; preds = %bb38
  %214 = load %struct._getopt_data** %d_addr, align 8, !dbg !6028
  %215 = getelementptr inbounds %struct._getopt_data* %214, i32 0, i32 0, !dbg !6028
  %216 = load i32* %215, align 8, !dbg !6028
  %217 = load i8*** %argv_addr, align 8, !dbg !6028
  %218 = sext i32 %216 to i64, !dbg !6028
  %219 = getelementptr inbounds i8** %217, i64 %218, !dbg !6028
  %220 = load i8** %219, align 1, !dbg !6028
  %221 = getelementptr inbounds i8* %220, i64 1, !dbg !6028
  %222 = load i8* %221, align 1, !dbg !6028
  %223 = icmp eq i8 %222, 0, !dbg !6028
  br i1 %223, label %bb40, label %bb43, !dbg !6028

bb40:                                             ; preds = %bb39, %bb38
  %224 = load %struct._getopt_data** %d_addr, align 8, !dbg !6029
  %225 = getelementptr inbounds %struct._getopt_data* %224, i32 0, i32 6, !dbg !6029
  %226 = load i32* %225, align 8, !dbg !6029
  %227 = icmp eq i32 %226, 0, !dbg !6029
  br i1 %227, label %bb41, label %bb42, !dbg !6029

bb41:                                             ; preds = %bb40
  store i32 -1, i32* %0, align 4, !dbg !6030
  br label %bb133, !dbg !6030

bb42:                                             ; preds = %bb40
  %228 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %229 = getelementptr inbounds %struct._getopt_data* %228, i32 0, i32 0, !dbg !6031
  %230 = load i32* %229, align 8, !dbg !6031
  %231 = load i8*** %argv_addr, align 8, !dbg !6031
  %232 = sext i32 %230 to i64, !dbg !6031
  %233 = getelementptr inbounds i8** %231, i64 %232, !dbg !6031
  %234 = load i8** %233, align 1, !dbg !6031
  %235 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %236 = getelementptr inbounds %struct._getopt_data* %235, i32 0, i32 3, !dbg !6031
  store i8* %234, i8** %236, align 8, !dbg !6031
  %237 = add nsw i32 %230, 1, !dbg !6031
  %238 = load %struct._getopt_data** %d_addr, align 8, !dbg !6031
  %239 = getelementptr inbounds %struct._getopt_data* %238, i32 0, i32 0, !dbg !6031
  store i32 %237, i32* %239, align 8, !dbg !6031
  store i32 1, i32* %0, align 4, !dbg !6032
  br label %bb133, !dbg !6032

bb43:                                             ; preds = %bb39
  %240 = load %struct._getopt_data** %d_addr, align 8, !dbg !6033
  %241 = getelementptr inbounds %struct._getopt_data* %240, i32 0, i32 0, !dbg !6033
  %242 = load i32* %241, align 8, !dbg !6033
  %243 = load i8*** %argv_addr, align 8, !dbg !6033
  %244 = sext i32 %242 to i64, !dbg !6033
  %245 = getelementptr inbounds i8** %243, i64 %244, !dbg !6033
  %246 = load i8** %245, align 1, !dbg !6033
  %247 = getelementptr inbounds i8* %246, i64 1, !dbg !6033
  %248 = load %struct.option** %longopts_addr, align 8, !dbg !6033
  %249 = bitcast %struct.option* %248 to i8*, !dbg !6033
  %250 = icmp eq i8* %249, null, !dbg !6033
  br i1 %250, label %bb46, label %bb44, !dbg !6033

bb44:                                             ; preds = %bb43
  %251 = load %struct._getopt_data** %d_addr, align 8, !dbg !6033
  %252 = getelementptr inbounds %struct._getopt_data* %251, i32 0, i32 0, !dbg !6033
  %253 = load i32* %252, align 8, !dbg !6033
  %254 = load i8*** %argv_addr, align 8, !dbg !6033
  %255 = sext i32 %253 to i64, !dbg !6033
  %256 = getelementptr inbounds i8** %254, i64 %255, !dbg !6033
  %257 = load i8** %256, align 1, !dbg !6033
  %258 = getelementptr inbounds i8* %257, i64 1, !dbg !6033
  %259 = load i8* %258, align 1, !dbg !6033
  %260 = icmp ne i8 %259, 45, !dbg !6033
  br i1 %260, label %bb46, label %bb45, !dbg !6033

bb45:                                             ; preds = %bb44
  store i32 1, i32* %iftmp.2, align 4, !dbg !6033
  br label %bb47, !dbg !6033

bb46:                                             ; preds = %bb44, %bb43
  store i32 0, i32* %iftmp.2, align 4, !dbg !6033
  br label %bb47, !dbg !6033

bb47:                                             ; preds = %bb46, %bb45
  %261 = load i32* %iftmp.2, align 4, !dbg !6033
  %262 = sext i32 %261 to i64, !dbg !6033
  %263 = getelementptr inbounds i8* %247, i64 %262, !dbg !6033
  %264 = load %struct._getopt_data** %d_addr, align 8, !dbg !6033
  %265 = getelementptr inbounds %struct._getopt_data* %264, i32 0, i32 5, !dbg !6033
  store i8* %263, i8** %265, align 8, !dbg !6033
  br label %bb48, !dbg !6033

bb48:                                             ; preds = %bb47, %bb9
  %266 = load %struct.option** %longopts_addr, align 8, !dbg !6034
  %267 = bitcast %struct.option* %266 to i8*, !dbg !6034
  %268 = icmp ne i8* %267, null, !dbg !6034
  br i1 %268, label %bb49, label %bb106, !dbg !6034

bb49:                                             ; preds = %bb48
  %269 = load %struct._getopt_data** %d_addr, align 8, !dbg !6034
  %270 = getelementptr inbounds %struct._getopt_data* %269, i32 0, i32 0, !dbg !6034
  %271 = load i32* %270, align 8, !dbg !6034
  %272 = load i8*** %argv_addr, align 8, !dbg !6034
  %273 = sext i32 %271 to i64, !dbg !6034
  %274 = getelementptr inbounds i8** %272, i64 %273, !dbg !6034
  %275 = load i8** %274, align 1, !dbg !6034
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !6034
  %277 = load i8* %276, align 1, !dbg !6034
  %278 = icmp eq i8 %277, 45, !dbg !6034
  br i1 %278, label %bb53, label %bb50, !dbg !6034

bb50:                                             ; preds = %bb49
  %279 = load i32* %long_only_addr, align 4, !dbg !6034
  %280 = icmp eq i32 %279, 0, !dbg !6034
  br i1 %280, label %bb106, label %bb51, !dbg !6034

bb51:                                             ; preds = %bb50
  %281 = load %struct._getopt_data** %d_addr, align 8, !dbg !6034
  %282 = getelementptr inbounds %struct._getopt_data* %281, i32 0, i32 0, !dbg !6034
  %283 = load i32* %282, align 8, !dbg !6034
  %284 = load i8*** %argv_addr, align 8, !dbg !6034
  %285 = sext i32 %283 to i64, !dbg !6034
  %286 = getelementptr inbounds i8** %284, i64 %285, !dbg !6034
  %287 = load i8** %286, align 1, !dbg !6034
  %288 = getelementptr inbounds i8* %287, i64 2, !dbg !6034
  %289 = load i8* %288, align 1, !dbg !6034
  %290 = icmp ne i8 %289, 0, !dbg !6034
  br i1 %290, label %bb53, label %bb52, !dbg !6034

bb52:                                             ; preds = %bb51
  %291 = load %struct._getopt_data** %d_addr, align 8, !dbg !6034
  %292 = getelementptr inbounds %struct._getopt_data* %291, i32 0, i32 0, !dbg !6034
  %293 = load i32* %292, align 8, !dbg !6034
  %294 = load i8*** %argv_addr, align 8, !dbg !6034
  %295 = sext i32 %293 to i64, !dbg !6034
  %296 = getelementptr inbounds i8** %294, i64 %295, !dbg !6034
  %297 = load i8** %296, align 1, !dbg !6034
  %298 = getelementptr inbounds i8* %297, i64 1, !dbg !6034
  %299 = load i8* %298, align 1, !dbg !6034
  %300 = sext i8 %299 to i32, !dbg !6034
  %301 = load i8** %optstring_addr, align 8, !dbg !6034
  %302 = call i8* @strchr(i8* %301, i32 %300) nounwind readonly, !dbg !6034
  %303 = icmp eq i8* %302, null, !dbg !6034
  br i1 %303, label %bb53, label %bb106, !dbg !6034

bb53:                                             ; preds = %bb52, %bb51, %bb49
  store %struct.option* null, %struct.option** %pfound, align 8, !dbg !6035
  store i32 0, i32* %exact, align 4, !dbg !6037
  store i32 0, i32* %ambig, align 4, !dbg !6038
  store i32 -1, i32* %indfound, align 4, !dbg !6039
  %304 = load %struct._getopt_data** %d_addr, align 8, !dbg !6040
  %305 = getelementptr inbounds %struct._getopt_data* %304, i32 0, i32 5, !dbg !6040
  %306 = load i8** %305, align 8, !dbg !6040
  store i8* %306, i8** %nameend, align 8, !dbg !6040
  br label %bb55, !dbg !6040

bb54:                                             ; preds = %bb56
  %307 = load i8** %nameend, align 8, !dbg !6040
  %308 = getelementptr inbounds i8* %307, i64 1, !dbg !6040
  store i8* %308, i8** %nameend, align 8, !dbg !6040
  br label %bb55, !dbg !6040

bb55:                                             ; preds = %bb54, %bb53
  %309 = load i8** %nameend, align 8, !dbg !6040
  %310 = load i8* %309, align 1, !dbg !6040
  %311 = icmp eq i8 %310, 0, !dbg !6040
  br i1 %311, label %bb57, label %bb56, !dbg !6040

bb56:                                             ; preds = %bb55
  %312 = load i8** %nameend, align 8, !dbg !6040
  %313 = load i8* %312, align 1, !dbg !6040
  %314 = icmp ne i8 %313, 61, !dbg !6040
  br i1 %314, label %bb54, label %bb57, !dbg !6040

bb57:                                             ; preds = %bb56, %bb55
  %315 = load %struct.option** %longopts_addr, align 8, !dbg !6041
  store %struct.option* %315, %struct.option** %p, align 8, !dbg !6041
  store i32 0, i32* %option_index, align 4, !dbg !6041
  br label %bb69, !dbg !6041

bb58:                                             ; preds = %bb69
  %316 = load i8** %nameend, align 8, !dbg !6042
  %317 = ptrtoint i8* %316 to i64, !dbg !6042
  %318 = load %struct._getopt_data** %d_addr, align 8, !dbg !6042
  %319 = getelementptr inbounds %struct._getopt_data* %318, i32 0, i32 5, !dbg !6042
  %320 = load i8** %319, align 8, !dbg !6042
  %321 = ptrtoint i8* %320 to i64, !dbg !6042
  %322 = sub nsw i64 %317, %321, !dbg !6042
  %323 = load %struct._getopt_data** %d_addr, align 8, !dbg !6042
  %324 = getelementptr inbounds %struct._getopt_data* %323, i32 0, i32 5, !dbg !6042
  %325 = load i8** %324, align 8, !dbg !6042
  %326 = load %struct.option** %p, align 8, !dbg !6042
  %327 = getelementptr inbounds %struct.option* %326, i32 0, i32 0, !dbg !6042
  %328 = load i8** %327, align 8, !dbg !6042
  %329 = call i32 @strncmp(i8* %328, i8* %325, i64 %322) nounwind readonly, !dbg !6042
  %330 = icmp eq i32 %329, 0, !dbg !6042
  br i1 %330, label %bb59, label %bb68, !dbg !6042

bb59:                                             ; preds = %bb58
  %331 = load i8** %nameend, align 8, !dbg !6043
  %332 = ptrtoint i8* %331 to i64, !dbg !6043
  %333 = trunc i64 %332 to i32, !dbg !6043
  %334 = load %struct._getopt_data** %d_addr, align 8, !dbg !6043
  %335 = getelementptr inbounds %struct._getopt_data* %334, i32 0, i32 5, !dbg !6043
  %336 = load i8** %335, align 8, !dbg !6043
  %337 = ptrtoint i8* %336 to i64, !dbg !6043
  %338 = trunc i64 %337 to i32, !dbg !6043
  %339 = sub i32 %333, %338, !dbg !6043
  %340 = load %struct.option** %p, align 8, !dbg !6043
  %341 = getelementptr inbounds %struct.option* %340, i32 0, i32 0, !dbg !6043
  %342 = load i8** %341, align 8, !dbg !6043
  %343 = call i64 @strlen(i8* %342) nounwind readonly, !dbg !6043
  %344 = trunc i64 %343 to i32, !dbg !6043
  %345 = icmp eq i32 %339, %344, !dbg !6043
  br i1 %345, label %bb60, label %bb61, !dbg !6043

bb60:                                             ; preds = %bb59
  %346 = load %struct.option** %p, align 8, !dbg !6044
  store %struct.option* %346, %struct.option** %pfound, align 8, !dbg !6044
  %347 = load i32* %option_index, align 4, !dbg !6045
  store i32 %347, i32* %indfound, align 4, !dbg !6045
  store i32 1, i32* %exact, align 4, !dbg !6046
  br label %bb70, !dbg !6046

bb61:                                             ; preds = %bb59
  %348 = load %struct.option** %pfound, align 8, !dbg !6047
  %349 = bitcast %struct.option* %348 to i8*, !dbg !6047
  %350 = icmp eq i8* %349, null, !dbg !6047
  br i1 %350, label %bb62, label %bb63, !dbg !6047

bb62:                                             ; preds = %bb61
  %351 = load %struct.option** %p, align 8, !dbg !6048
  store %struct.option* %351, %struct.option** %pfound, align 8, !dbg !6048
  %352 = load i32* %option_index, align 4, !dbg !6049
  store i32 %352, i32* %indfound, align 4, !dbg !6049
  br label %bb68, !dbg !6049

bb63:                                             ; preds = %bb61
  %353 = load i32* %long_only_addr, align 4, !dbg !6050
  %354 = icmp ne i32 %353, 0, !dbg !6050
  br i1 %354, label %bb67, label %bb64, !dbg !6050

bb64:                                             ; preds = %bb63
  %355 = load %struct.option** %pfound, align 8, !dbg !6050
  %356 = getelementptr inbounds %struct.option* %355, i32 0, i32 1, !dbg !6050
  %357 = load i32* %356, align 8, !dbg !6050
  %358 = load %struct.option** %p, align 8, !dbg !6050
  %359 = getelementptr inbounds %struct.option* %358, i32 0, i32 1, !dbg !6050
  %360 = load i32* %359, align 8, !dbg !6050
  %361 = icmp ne i32 %357, %360, !dbg !6050
  br i1 %361, label %bb67, label %bb65, !dbg !6050

bb65:                                             ; preds = %bb64
  %362 = load %struct.option** %pfound, align 8, !dbg !6050
  %363 = getelementptr inbounds %struct.option* %362, i32 0, i32 2, !dbg !6050
  %364 = load i32** %363, align 8, !dbg !6050
  %365 = load %struct.option** %p, align 8, !dbg !6050
  %366 = getelementptr inbounds %struct.option* %365, i32 0, i32 2, !dbg !6050
  %367 = load i32** %366, align 8, !dbg !6050
  %368 = icmp ne i32* %364, %367, !dbg !6050
  br i1 %368, label %bb67, label %bb66, !dbg !6050

bb66:                                             ; preds = %bb65
  %369 = load %struct.option** %pfound, align 8, !dbg !6050
  %370 = getelementptr inbounds %struct.option* %369, i32 0, i32 3, !dbg !6050
  %371 = load i32* %370, align 8, !dbg !6050
  %372 = load %struct.option** %p, align 8, !dbg !6050
  %373 = getelementptr inbounds %struct.option* %372, i32 0, i32 3, !dbg !6050
  %374 = load i32* %373, align 8, !dbg !6050
  %375 = icmp ne i32 %371, %374, !dbg !6050
  br i1 %375, label %bb67, label %bb68, !dbg !6050

bb67:                                             ; preds = %bb66, %bb65, %bb64, %bb63
  store i32 1, i32* %ambig, align 4, !dbg !6051
  br label %bb68, !dbg !6051

bb68:                                             ; preds = %bb67, %bb66, %bb62, %bb58
  %376 = load %struct.option** %p, align 8, !dbg !6041
  %377 = getelementptr inbounds %struct.option* %376, i64 1, !dbg !6041
  store %struct.option* %377, %struct.option** %p, align 8, !dbg !6041
  %378 = load i32* %option_index, align 4, !dbg !6041
  %379 = add nsw i32 %378, 1, !dbg !6041
  store i32 %379, i32* %option_index, align 4, !dbg !6041
  br label %bb69, !dbg !6041

bb69:                                             ; preds = %bb68, %bb57
  %380 = load %struct.option** %p, align 8, !dbg !6041
  %381 = getelementptr inbounds %struct.option* %380, i32 0, i32 0, !dbg !6041
  %382 = load i8** %381, align 8, !dbg !6041
  %383 = icmp ne i8* %382, null, !dbg !6041
  br i1 %383, label %bb58, label %bb70, !dbg !6041

bb70:                                             ; preds = %bb69, %bb60
  %384 = load i32* %ambig, align 4, !dbg !6052
  %385 = icmp ne i32 %384, 0, !dbg !6052
  br i1 %385, label %bb71, label %bb75, !dbg !6052

bb71:                                             ; preds = %bb70
  %386 = load i32* %exact, align 4, !dbg !6052
  %387 = icmp eq i32 %386, 0, !dbg !6052
  br i1 %387, label %bb72, label %bb75, !dbg !6052

bb72:                                             ; preds = %bb71
  %388 = load i32* %print_errors, align 4, !dbg !6053
  %389 = icmp ne i32 %388, 0, !dbg !6053
  br i1 %389, label %bb73, label %bb74, !dbg !6053

bb73:                                             ; preds = %bb72
  %390 = load %struct._getopt_data** %d_addr, align 8, !dbg !6054
  %391 = getelementptr inbounds %struct._getopt_data* %390, i32 0, i32 0, !dbg !6054
  %392 = load i32* %391, align 8, !dbg !6054
  %393 = load i8*** %argv_addr, align 8, !dbg !6054
  %394 = sext i32 %392 to i64, !dbg !6054
  %395 = getelementptr inbounds i8** %393, i64 %394, !dbg !6054
  %396 = load i8** %395, align 1, !dbg !6054
  %397 = load i8*** %argv_addr, align 8, !dbg !6054
  %398 = getelementptr inbounds i8** %397, i64 0, !dbg !6054
  %399 = load i8** %398, align 1, !dbg !6054
  %400 = load %4** @stderr, align 8, !dbg !6054
  %401 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %400, i8* noalias getelementptr inbounds ([30 x i8]* @.str2151, i64 0, i64 0), i8* %399, i8* %396) nounwind, !dbg !6054
  br label %bb74, !dbg !6054

bb74:                                             ; preds = %bb73, %bb72
  %402 = load %struct._getopt_data** %d_addr, align 8, !dbg !6055
  %403 = getelementptr inbounds %struct._getopt_data* %402, i32 0, i32 5, !dbg !6055
  %404 = load i8** %403, align 8, !dbg !6055
  %405 = load %struct._getopt_data** %d_addr, align 8, !dbg !6055
  %406 = getelementptr inbounds %struct._getopt_data* %405, i32 0, i32 5, !dbg !6055
  %407 = load i8** %406, align 8, !dbg !6055
  %408 = call i64 @strlen(i8* %407) nounwind readonly, !dbg !6055
  %409 = getelementptr inbounds i8* %404, i64 %408, !dbg !6055
  %410 = load %struct._getopt_data** %d_addr, align 8, !dbg !6055
  %411 = getelementptr inbounds %struct._getopt_data* %410, i32 0, i32 5, !dbg !6055
  store i8* %409, i8** %411, align 8, !dbg !6055
  %412 = load %struct._getopt_data** %d_addr, align 8, !dbg !6056
  %413 = getelementptr inbounds %struct._getopt_data* %412, i32 0, i32 0, !dbg !6056
  %414 = load i32* %413, align 8, !dbg !6056
  %415 = add nsw i32 %414, 1, !dbg !6056
  %416 = load %struct._getopt_data** %d_addr, align 8, !dbg !6056
  %417 = getelementptr inbounds %struct._getopt_data* %416, i32 0, i32 0, !dbg !6056
  store i32 %415, i32* %417, align 8, !dbg !6056
  %418 = load %struct._getopt_data** %d_addr, align 8, !dbg !6057
  %419 = getelementptr inbounds %struct._getopt_data* %418, i32 0, i32 2, !dbg !6057
  store i32 0, i32* %419, align 8, !dbg !6057
  store i32 63, i32* %0, align 4, !dbg !6058
  br label %bb133, !dbg !6058

bb75:                                             ; preds = %bb71, %bb70
  %420 = load %struct.option** %pfound, align 8, !dbg !6059
  %421 = bitcast %struct.option* %420 to i8*, !dbg !6059
  %422 = icmp ne i8* %421, null, !dbg !6059
  br i1 %422, label %bb76, label %bb98, !dbg !6059

bb76:                                             ; preds = %bb75
  %423 = load i32* %indfound, align 4, !dbg !6060
  store i32 %423, i32* %option_index, align 4, !dbg !6060
  %424 = load %struct._getopt_data** %d_addr, align 8, !dbg !6061
  %425 = getelementptr inbounds %struct._getopt_data* %424, i32 0, i32 0, !dbg !6061
  %426 = load i32* %425, align 8, !dbg !6061
  %427 = add nsw i32 %426, 1, !dbg !6061
  %428 = load %struct._getopt_data** %d_addr, align 8, !dbg !6061
  %429 = getelementptr inbounds %struct._getopt_data* %428, i32 0, i32 0, !dbg !6061
  store i32 %427, i32* %429, align 8, !dbg !6061
  %430 = load i8** %nameend, align 8, !dbg !6062
  %431 = load i8* %430, align 1, !dbg !6062
  %432 = icmp ne i8 %431, 0, !dbg !6062
  %433 = load %struct.option** %pfound, align 8, !dbg !6063
  %434 = getelementptr inbounds %struct.option* %433, i32 0, i32 1, !dbg !6063
  %435 = load i32* %434, align 8, !dbg !6063
  br i1 %432, label %bb77, label %bb84, !dbg !6062

bb77:                                             ; preds = %bb76
  %436 = icmp ne i32 %435, 0, !dbg !6063
  br i1 %436, label %bb78, label %bb79, !dbg !6063

bb78:                                             ; preds = %bb77
  %437 = load i8** %nameend, align 8, !dbg !6064
  %438 = getelementptr inbounds i8* %437, i64 1, !dbg !6064
  %439 = load %struct._getopt_data** %d_addr, align 8, !dbg !6064
  %440 = getelementptr inbounds %struct._getopt_data* %439, i32 0, i32 3, !dbg !6064
  store i8* %438, i8** %440, align 8, !dbg !6064
  br label %bb93, !dbg !6064

bb79:                                             ; preds = %bb77
  %441 = load i32* %print_errors, align 4, !dbg !6065
  %442 = icmp ne i32 %441, 0, !dbg !6065
  br i1 %442, label %bb80, label %bb83, !dbg !6065

bb80:                                             ; preds = %bb79
  %443 = load %struct._getopt_data** %d_addr, align 8, !dbg !6066
  %444 = getelementptr inbounds %struct._getopt_data* %443, i32 0, i32 0, !dbg !6066
  %445 = load i32* %444, align 8, !dbg !6066
  %446 = sub nsw i32 %445, 1, !dbg !6066
  %447 = load i8*** %argv_addr, align 8, !dbg !6066
  %448 = sext i32 %446 to i64, !dbg !6066
  %449 = getelementptr inbounds i8** %447, i64 %448, !dbg !6066
  %450 = load i8** %449, align 1, !dbg !6066
  %451 = getelementptr inbounds i8* %450, i64 1, !dbg !6066
  %452 = load i8* %451, align 1, !dbg !6066
  %453 = icmp eq i8 %452, 45, !dbg !6066
  %454 = load %struct.option** %pfound, align 8, !dbg !6067
  %455 = getelementptr inbounds %struct.option* %454, i32 0, i32 0, !dbg !6067
  %456 = load i8** %455, align 8, !dbg !6067
  br i1 %453, label %bb81, label %bb82, !dbg !6066

bb81:                                             ; preds = %bb80
  %457 = load i8*** %argv_addr, align 8, !dbg !6067
  %458 = getelementptr inbounds i8** %457, i64 0, !dbg !6067
  %459 = load i8** %458, align 1, !dbg !6067
  %460 = load %4** @stderr, align 8, !dbg !6067
  %461 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %460, i8* noalias getelementptr inbounds ([45 x i8]* @.str3152, i64 0, i64 0), i8* %459, i8* %456) nounwind, !dbg !6067
  br label %bb83, !dbg !6067

bb82:                                             ; preds = %bb80
  %462 = load %struct._getopt_data** %d_addr, align 8, !dbg !6068
  %463 = getelementptr inbounds %struct._getopt_data* %462, i32 0, i32 0, !dbg !6068
  %464 = load i32* %463, align 8, !dbg !6068
  %465 = sub nsw i32 %464, 1, !dbg !6068
  %466 = load i8*** %argv_addr, align 8, !dbg !6068
  %467 = sext i32 %465 to i64, !dbg !6068
  %468 = getelementptr inbounds i8** %466, i64 %467, !dbg !6068
  %469 = load i8** %468, align 1, !dbg !6068
  %470 = getelementptr inbounds i8* %469, i64 0, !dbg !6068
  %471 = load i8* %470, align 1, !dbg !6068
  %472 = sext i8 %471 to i32, !dbg !6068
  %473 = load i8*** %argv_addr, align 8, !dbg !6068
  %474 = getelementptr inbounds i8** %473, i64 0, !dbg !6068
  %475 = load i8** %474, align 1, !dbg !6068
  %476 = load %4** @stderr, align 8, !dbg !6068
  %477 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %476, i8* noalias getelementptr inbounds ([45 x i8]* @.str4153, i64 0, i64 0), i8* %475, i32 %472, i8* %456) nounwind, !dbg !6068
  br label %bb83, !dbg !6068

bb83:                                             ; preds = %bb82, %bb81, %bb79
  %478 = load %struct._getopt_data** %d_addr, align 8, !dbg !6069
  %479 = getelementptr inbounds %struct._getopt_data* %478, i32 0, i32 5, !dbg !6069
  %480 = load i8** %479, align 8, !dbg !6069
  %481 = load %struct._getopt_data** %d_addr, align 8, !dbg !6069
  %482 = getelementptr inbounds %struct._getopt_data* %481, i32 0, i32 5, !dbg !6069
  %483 = load i8** %482, align 8, !dbg !6069
  %484 = call i64 @strlen(i8* %483) nounwind readonly, !dbg !6069
  %485 = getelementptr inbounds i8* %480, i64 %484, !dbg !6069
  %486 = load %struct._getopt_data** %d_addr, align 8, !dbg !6069
  %487 = getelementptr inbounds %struct._getopt_data* %486, i32 0, i32 5, !dbg !6069
  store i8* %485, i8** %487, align 8, !dbg !6069
  %488 = load %struct.option** %pfound, align 8, !dbg !6070
  %489 = getelementptr inbounds %struct.option* %488, i32 0, i32 3, !dbg !6070
  %490 = load i32* %489, align 8, !dbg !6070
  %491 = load %struct._getopt_data** %d_addr, align 8, !dbg !6070
  %492 = getelementptr inbounds %struct._getopt_data* %491, i32 0, i32 2, !dbg !6070
  store i32 %490, i32* %492, align 8, !dbg !6070
  store i32 63, i32* %0, align 4, !dbg !6071
  br label %bb133, !dbg !6071

bb84:                                             ; preds = %bb76
  %493 = icmp eq i32 %435, 1, !dbg !6072
  br i1 %493, label %bb85, label %bb93, !dbg !6072

bb85:                                             ; preds = %bb84
  %494 = load %struct._getopt_data** %d_addr, align 8, !dbg !6073
  %495 = getelementptr inbounds %struct._getopt_data* %494, i32 0, i32 0, !dbg !6073
  %496 = load i32* %495, align 8, !dbg !6073
  %497 = load i32* %argc_addr, align 4, !dbg !6073
  %498 = icmp slt i32 %496, %497, !dbg !6073
  br i1 %498, label %bb86, label %bb87, !dbg !6073

bb86:                                             ; preds = %bb85
  %499 = load %struct._getopt_data** %d_addr, align 8, !dbg !6074
  %500 = getelementptr inbounds %struct._getopt_data* %499, i32 0, i32 0, !dbg !6074
  %501 = load i32* %500, align 8, !dbg !6074
  %502 = load i8*** %argv_addr, align 8, !dbg !6074
  %503 = sext i32 %501 to i64, !dbg !6074
  %504 = getelementptr inbounds i8** %502, i64 %503, !dbg !6074
  %505 = load i8** %504, align 1, !dbg !6074
  %506 = load %struct._getopt_data** %d_addr, align 8, !dbg !6074
  %507 = getelementptr inbounds %struct._getopt_data* %506, i32 0, i32 3, !dbg !6074
  store i8* %505, i8** %507, align 8, !dbg !6074
  %508 = add nsw i32 %501, 1, !dbg !6074
  %509 = load %struct._getopt_data** %d_addr, align 8, !dbg !6074
  %510 = getelementptr inbounds %struct._getopt_data* %509, i32 0, i32 0, !dbg !6074
  store i32 %508, i32* %510, align 8, !dbg !6074
  br label %bb93, !dbg !6074

bb87:                                             ; preds = %bb85
  %511 = load i32* %print_errors, align 4, !dbg !6075
  %512 = icmp ne i32 %511, 0, !dbg !6075
  br i1 %512, label %bb88, label %bb89, !dbg !6075

bb88:                                             ; preds = %bb87
  %513 = load %struct._getopt_data** %d_addr, align 8, !dbg !6076
  %514 = getelementptr inbounds %struct._getopt_data* %513, i32 0, i32 0, !dbg !6076
  %515 = load i32* %514, align 8, !dbg !6076
  %516 = sub nsw i32 %515, 1, !dbg !6076
  %517 = load i8*** %argv_addr, align 8, !dbg !6076
  %518 = sext i32 %516 to i64, !dbg !6076
  %519 = getelementptr inbounds i8** %517, i64 %518, !dbg !6076
  %520 = load i8** %519, align 1, !dbg !6076
  %521 = load i8*** %argv_addr, align 8, !dbg !6076
  %522 = getelementptr inbounds i8** %521, i64 0, !dbg !6076
  %523 = load i8** %522, align 1, !dbg !6076
  %524 = load %4** @stderr, align 8, !dbg !6076
  %525 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %524, i8* noalias getelementptr inbounds ([38 x i8]* @.str5154, i64 0, i64 0), i8* %523, i8* %520) nounwind, !dbg !6076
  br label %bb89, !dbg !6076

bb89:                                             ; preds = %bb88, %bb87
  %526 = load %struct._getopt_data** %d_addr, align 8, !dbg !6077
  %527 = getelementptr inbounds %struct._getopt_data* %526, i32 0, i32 5, !dbg !6077
  %528 = load i8** %527, align 8, !dbg !6077
  %529 = load %struct._getopt_data** %d_addr, align 8, !dbg !6077
  %530 = getelementptr inbounds %struct._getopt_data* %529, i32 0, i32 5, !dbg !6077
  %531 = load i8** %530, align 8, !dbg !6077
  %532 = call i64 @strlen(i8* %531) nounwind readonly, !dbg !6077
  %533 = getelementptr inbounds i8* %528, i64 %532, !dbg !6077
  %534 = load %struct._getopt_data** %d_addr, align 8, !dbg !6077
  %535 = getelementptr inbounds %struct._getopt_data* %534, i32 0, i32 5, !dbg !6077
  store i8* %533, i8** %535, align 8, !dbg !6077
  %536 = load %struct.option** %pfound, align 8, !dbg !6078
  %537 = getelementptr inbounds %struct.option* %536, i32 0, i32 3, !dbg !6078
  %538 = load i32* %537, align 8, !dbg !6078
  %539 = load %struct._getopt_data** %d_addr, align 8, !dbg !6078
  %540 = getelementptr inbounds %struct._getopt_data* %539, i32 0, i32 2, !dbg !6078
  store i32 %538, i32* %540, align 8, !dbg !6078
  %541 = load i8** %optstring_addr, align 8, !dbg !6079
  %542 = getelementptr inbounds i8* %541, i64 0, !dbg !6079
  %543 = load i8* %542, align 1, !dbg !6079
  %544 = icmp eq i8 %543, 58, !dbg !6079
  br i1 %544, label %bb90, label %bb91, !dbg !6079

bb90:                                             ; preds = %bb89
  store i32 58, i32* %iftmp.13, align 4, !dbg !6079
  br label %bb92, !dbg !6079

bb91:                                             ; preds = %bb89
  store i32 63, i32* %iftmp.13, align 4, !dbg !6079
  br label %bb92, !dbg !6079

bb92:                                             ; preds = %bb91, %bb90
  %545 = load i32* %iftmp.13, align 4, !dbg !6079
  store i32 %545, i32* %0, align 4, !dbg !6079
  br label %bb133, !dbg !6079

bb93:                                             ; preds = %bb86, %bb84, %bb78
  %546 = load %struct._getopt_data** %d_addr, align 8, !dbg !6080
  %547 = getelementptr inbounds %struct._getopt_data* %546, i32 0, i32 5, !dbg !6080
  %548 = load i8** %547, align 8, !dbg !6080
  %549 = load %struct._getopt_data** %d_addr, align 8, !dbg !6080
  %550 = getelementptr inbounds %struct._getopt_data* %549, i32 0, i32 5, !dbg !6080
  %551 = load i8** %550, align 8, !dbg !6080
  %552 = call i64 @strlen(i8* %551) nounwind readonly, !dbg !6080
  %553 = getelementptr inbounds i8* %548, i64 %552, !dbg !6080
  %554 = load %struct._getopt_data** %d_addr, align 8, !dbg !6080
  %555 = getelementptr inbounds %struct._getopt_data* %554, i32 0, i32 5, !dbg !6080
  store i8* %553, i8** %555, align 8, !dbg !6080
  %556 = load i32** %longind_addr, align 8, !dbg !6081
  %557 = icmp ne i32* %556, null, !dbg !6081
  br i1 %557, label %bb94, label %bb95, !dbg !6081

bb94:                                             ; preds = %bb93
  %558 = load i32** %longind_addr, align 8, !dbg !6082
  %559 = load i32* %option_index, align 4, !dbg !6082
  store i32 %559, i32* %558, align 4, !dbg !6082
  br label %bb95, !dbg !6082

bb95:                                             ; preds = %bb94, %bb93
  %560 = load %struct.option** %pfound, align 8, !dbg !6083
  %561 = getelementptr inbounds %struct.option* %560, i32 0, i32 2, !dbg !6083
  %562 = load i32** %561, align 8, !dbg !6083
  %563 = icmp ne i32* %562, null, !dbg !6083
  %564 = load %struct.option** %pfound, align 8, !dbg !6084
  br i1 %563, label %bb96, label %bb97, !dbg !6083

bb96:                                             ; preds = %bb95
  %565 = getelementptr inbounds %struct.option* %564, i32 0, i32 2, !dbg !6084
  %566 = load i32** %565, align 8, !dbg !6084
  %567 = load %struct.option** %pfound, align 8, !dbg !6084
  %568 = getelementptr inbounds %struct.option* %567, i32 0, i32 3, !dbg !6084
  %569 = load i32* %568, align 8, !dbg !6084
  store i32 %569, i32* %566, align 4, !dbg !6084
  store i32 0, i32* %0, align 4, !dbg !6085
  br label %bb133, !dbg !6085

bb97:                                             ; preds = %bb95
  %570 = getelementptr inbounds %struct.option* %564, i32 0, i32 3, !dbg !6086
  %571 = load i32* %570, align 8, !dbg !6086
  store i32 %571, i32* %0, align 4, !dbg !6086
  br label %bb133, !dbg !6086

bb98:                                             ; preds = %bb75
  %572 = load i32* %long_only_addr, align 4, !dbg !6087
  %573 = icmp eq i32 %572, 0, !dbg !6087
  br i1 %573, label %bb101, label %bb99, !dbg !6087

bb99:                                             ; preds = %bb98
  %574 = load %struct._getopt_data** %d_addr, align 8, !dbg !6087
  %575 = getelementptr inbounds %struct._getopt_data* %574, i32 0, i32 0, !dbg !6087
  %576 = load i32* %575, align 8, !dbg !6087
  %577 = load i8*** %argv_addr, align 8, !dbg !6087
  %578 = sext i32 %576 to i64, !dbg !6087
  %579 = getelementptr inbounds i8** %577, i64 %578, !dbg !6087
  %580 = load i8** %579, align 1, !dbg !6087
  %581 = getelementptr inbounds i8* %580, i64 1, !dbg !6087
  %582 = load i8* %581, align 1, !dbg !6087
  %583 = icmp eq i8 %582, 45, !dbg !6087
  br i1 %583, label %bb101, label %bb100, !dbg !6087

bb100:                                            ; preds = %bb99
  %584 = load %struct._getopt_data** %d_addr, align 8, !dbg !6087
  %585 = getelementptr inbounds %struct._getopt_data* %584, i32 0, i32 5, !dbg !6087
  %586 = load i8** %585, align 8, !dbg !6087
  %587 = load i8* %586, align 1, !dbg !6087
  %588 = sext i8 %587 to i32, !dbg !6087
  %589 = load i8** %optstring_addr, align 8, !dbg !6087
  %590 = call i8* @strchr(i8* %589, i32 %588) nounwind readonly, !dbg !6087
  %591 = icmp eq i8* %590, null, !dbg !6087
  br i1 %591, label %bb101, label %bb106, !dbg !6087

bb101:                                            ; preds = %bb100, %bb99, %bb98
  %592 = load i32* %print_errors, align 4, !dbg !6088
  %593 = icmp ne i32 %592, 0, !dbg !6088
  br i1 %593, label %bb102, label %bb105, !dbg !6088

bb102:                                            ; preds = %bb101
  %594 = load %struct._getopt_data** %d_addr, align 8, !dbg !6089
  %595 = getelementptr inbounds %struct._getopt_data* %594, i32 0, i32 0, !dbg !6089
  %596 = load i32* %595, align 8, !dbg !6089
  %597 = load i8*** %argv_addr, align 8, !dbg !6089
  %598 = sext i32 %596 to i64, !dbg !6089
  %599 = getelementptr inbounds i8** %597, i64 %598, !dbg !6089
  %600 = load i8** %599, align 1, !dbg !6089
  %601 = getelementptr inbounds i8* %600, i64 1, !dbg !6089
  %602 = load i8* %601, align 1, !dbg !6089
  %603 = icmp eq i8 %602, 45, !dbg !6089
  %604 = load %struct._getopt_data** %d_addr, align 8, !dbg !6090
  %605 = getelementptr inbounds %struct._getopt_data* %604, i32 0, i32 5, !dbg !6090
  %606 = load i8** %605, align 8, !dbg !6090
  br i1 %603, label %bb103, label %bb104, !dbg !6089

bb103:                                            ; preds = %bb102
  %607 = load i8*** %argv_addr, align 8, !dbg !6090
  %608 = getelementptr inbounds i8** %607, i64 0, !dbg !6090
  %609 = load i8** %608, align 1, !dbg !6090
  %610 = load %4** @stderr, align 8, !dbg !6090
  %611 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %610, i8* noalias getelementptr inbounds ([32 x i8]* @.str6155, i64 0, i64 0), i8* %609, i8* %606) nounwind, !dbg !6090
  br label %bb105, !dbg !6090

bb104:                                            ; preds = %bb102
  %612 = load %struct._getopt_data** %d_addr, align 8, !dbg !6091
  %613 = getelementptr inbounds %struct._getopt_data* %612, i32 0, i32 0, !dbg !6091
  %614 = load i32* %613, align 8, !dbg !6091
  %615 = load i8*** %argv_addr, align 8, !dbg !6091
  %616 = sext i32 %614 to i64, !dbg !6091
  %617 = getelementptr inbounds i8** %615, i64 %616, !dbg !6091
  %618 = load i8** %617, align 1, !dbg !6091
  %619 = getelementptr inbounds i8* %618, i64 0, !dbg !6091
  %620 = load i8* %619, align 1, !dbg !6091
  %621 = sext i8 %620 to i32, !dbg !6091
  %622 = load i8*** %argv_addr, align 8, !dbg !6091
  %623 = getelementptr inbounds i8** %622, i64 0, !dbg !6091
  %624 = load i8** %623, align 1, !dbg !6091
  %625 = load %4** @stderr, align 8, !dbg !6091
  %626 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %625, i8* noalias getelementptr inbounds ([32 x i8]* @.str7156, i64 0, i64 0), i8* %624, i32 %621, i8* %606) nounwind, !dbg !6091
  br label %bb105, !dbg !6091

bb105:                                            ; preds = %bb104, %bb103, %bb101
  %627 = load %struct._getopt_data** %d_addr, align 8, !dbg !6092
  %628 = getelementptr inbounds %struct._getopt_data* %627, i32 0, i32 5, !dbg !6092
  store i8* getelementptr inbounds ([1 x i8]* @.str8157, i64 0, i64 0), i8** %628, align 8, !dbg !6092
  %629 = load %struct._getopt_data** %d_addr, align 8, !dbg !6093
  %630 = getelementptr inbounds %struct._getopt_data* %629, i32 0, i32 0, !dbg !6093
  %631 = load i32* %630, align 8, !dbg !6093
  %632 = add nsw i32 %631, 1, !dbg !6093
  %633 = load %struct._getopt_data** %d_addr, align 8, !dbg !6093
  %634 = getelementptr inbounds %struct._getopt_data* %633, i32 0, i32 0, !dbg !6093
  store i32 %632, i32* %634, align 8, !dbg !6093
  %635 = load %struct._getopt_data** %d_addr, align 8, !dbg !6094
  %636 = getelementptr inbounds %struct._getopt_data* %635, i32 0, i32 2, !dbg !6094
  store i32 0, i32* %636, align 8, !dbg !6094
  store i32 63, i32* %0, align 4, !dbg !6095
  br label %bb133, !dbg !6095

bb106:                                            ; preds = %bb100, %bb52, %bb50, %bb48
  %637 = load %struct._getopt_data** %d_addr, align 8, !dbg !6096
  %638 = getelementptr inbounds %struct._getopt_data* %637, i32 0, i32 5, !dbg !6096
  %639 = load i8** %638, align 8, !dbg !6096
  %640 = load i8* %639, align 1, !dbg !6096
  store i8 %640, i8* %c, align 1, !dbg !6096
  %641 = getelementptr inbounds i8* %639, i64 1, !dbg !6096
  %642 = load %struct._getopt_data** %d_addr, align 8, !dbg !6096
  %643 = getelementptr inbounds %struct._getopt_data* %642, i32 0, i32 5, !dbg !6096
  store i8* %641, i8** %643, align 8, !dbg !6096
  %644 = load i8* %c, align 1, !dbg !6098
  %645 = sext i8 %644 to i32, !dbg !6098
  %646 = load i8** %optstring_addr, align 8, !dbg !6098
  %647 = call i8* @strchr(i8* %646, i32 %645) nounwind readonly, !dbg !6098
  store i8* %647, i8** %temp, align 8, !dbg !6098
  %648 = load %struct._getopt_data** %d_addr, align 8, !dbg !6099
  %649 = getelementptr inbounds %struct._getopt_data* %648, i32 0, i32 5, !dbg !6099
  %650 = load i8** %649, align 8, !dbg !6099
  %651 = load i8* %650, align 1, !dbg !6099
  %652 = icmp eq i8 %651, 0, !dbg !6099
  br i1 %652, label %bb107, label %bb108, !dbg !6099

bb107:                                            ; preds = %bb106
  %653 = load %struct._getopt_data** %d_addr, align 8, !dbg !6100
  %654 = getelementptr inbounds %struct._getopt_data* %653, i32 0, i32 0, !dbg !6100
  %655 = load i32* %654, align 8, !dbg !6100
  %656 = add nsw i32 %655, 1, !dbg !6100
  %657 = load %struct._getopt_data** %d_addr, align 8, !dbg !6100
  %658 = getelementptr inbounds %struct._getopt_data* %657, i32 0, i32 0, !dbg !6100
  store i32 %656, i32* %658, align 8, !dbg !6100
  br label %bb108, !dbg !6100

bb108:                                            ; preds = %bb107, %bb106
  %659 = load i8** %temp, align 8, !dbg !6101
  %660 = icmp eq i8* %659, null, !dbg !6101
  br i1 %660, label %bb110, label %bb109, !dbg !6101

bb109:                                            ; preds = %bb108
  %661 = load i8* %c, align 1, !dbg !6101
  %662 = icmp eq i8 %661, 58, !dbg !6101
  br i1 %662, label %bb110, label %bb115, !dbg !6101

bb110:                                            ; preds = %bb109, %bb108
  %663 = load i32* %print_errors, align 4, !dbg !6102
  %664 = icmp ne i32 %663, 0, !dbg !6102
  br i1 %664, label %bb111, label %bb114, !dbg !6102

bb111:                                            ; preds = %bb110
  %665 = load %struct._getopt_data** %d_addr, align 8, !dbg !6103
  %666 = getelementptr inbounds %struct._getopt_data* %665, i32 0, i32 7, !dbg !6103
  %667 = load i32* %666, align 4, !dbg !6103
  %668 = icmp ne i32 %667, 0, !dbg !6103
  %669 = load i8* %c, align 1, !dbg !6104
  %670 = sext i8 %669 to i32, !dbg !6104
  %671 = load i8*** %argv_addr, align 8, !dbg !6104
  %672 = getelementptr inbounds i8** %671, i64 0, !dbg !6104
  %673 = load i8** %672, align 1, !dbg !6104
  %674 = load %4** @stderr, align 8, !dbg !6104
  br i1 %668, label %bb112, label %bb113, !dbg !6103

bb112:                                            ; preds = %bb111
  %675 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str9158, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !6104
  br label %bb114, !dbg !6104

bb113:                                            ; preds = %bb111
  %676 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str10159, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !6105
  br label %bb114, !dbg !6105

bb114:                                            ; preds = %bb113, %bb112, %bb110
  %677 = load i8* %c, align 1, !dbg !6106
  %678 = sext i8 %677 to i32, !dbg !6106
  %679 = load %struct._getopt_data** %d_addr, align 8, !dbg !6106
  %680 = getelementptr inbounds %struct._getopt_data* %679, i32 0, i32 2, !dbg !6106
  store i32 %678, i32* %680, align 8, !dbg !6106
  store i32 63, i32* %0, align 4, !dbg !6107
  br label %bb133, !dbg !6107

bb115:                                            ; preds = %bb109
  %681 = load i8** %temp, align 8, !dbg !6108
  %682 = getelementptr inbounds i8* %681, i64 1, !dbg !6108
  %683 = load i8* %682, align 1, !dbg !6108
  %684 = icmp eq i8 %683, 58, !dbg !6108
  br i1 %684, label %bb116, label %bb132, !dbg !6108

bb116:                                            ; preds = %bb115
  %685 = load i8** %temp, align 8, !dbg !6109
  %686 = getelementptr inbounds i8* %685, i64 2, !dbg !6109
  %687 = load i8* %686, align 1, !dbg !6109
  %688 = icmp eq i8 %687, 58, !dbg !6109
  %689 = load %struct._getopt_data** %d_addr, align 8, !dbg !6110
  %690 = getelementptr inbounds %struct._getopt_data* %689, i32 0, i32 5, !dbg !6110
  %691 = load i8** %690, align 8, !dbg !6110
  %692 = load i8* %691, align 1, !dbg !6110
  %693 = icmp ne i8 %692, 0, !dbg !6110
  %694 = load %struct._getopt_data** %d_addr, align 8, !dbg !6111
  br i1 %688, label %bb117, label %bb121, !dbg !6109

bb117:                                            ; preds = %bb116
  br i1 %693, label %bb118, label %bb119, !dbg !6110

bb118:                                            ; preds = %bb117
  %695 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !6111
  %696 = load i8** %695, align 8, !dbg !6111
  %697 = load %struct._getopt_data** %d_addr, align 8, !dbg !6111
  %698 = getelementptr inbounds %struct._getopt_data* %697, i32 0, i32 3, !dbg !6111
  store i8* %696, i8** %698, align 8, !dbg !6111
  %699 = load %struct._getopt_data** %d_addr, align 8, !dbg !6112
  %700 = getelementptr inbounds %struct._getopt_data* %699, i32 0, i32 0, !dbg !6112
  %701 = load i32* %700, align 8, !dbg !6112
  %702 = add nsw i32 %701, 1, !dbg !6112
  %703 = load %struct._getopt_data** %d_addr, align 8, !dbg !6112
  %704 = getelementptr inbounds %struct._getopt_data* %703, i32 0, i32 0, !dbg !6112
  store i32 %702, i32* %704, align 8, !dbg !6112
  br label %bb120, !dbg !6112

bb119:                                            ; preds = %bb117
  %705 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 3, !dbg !6113
  store i8* null, i8** %705, align 8, !dbg !6113
  br label %bb120, !dbg !6113

bb120:                                            ; preds = %bb119, %bb118
  %706 = load %struct._getopt_data** %d_addr, align 8, !dbg !6114
  %707 = getelementptr inbounds %struct._getopt_data* %706, i32 0, i32 5, !dbg !6114
  store i8* null, i8** %707, align 8, !dbg !6114
  br label %bb132, !dbg !6114

bb121:                                            ; preds = %bb116
  br i1 %693, label %bb122, label %bb123, !dbg !6115

bb122:                                            ; preds = %bb121
  %708 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !6116
  %709 = load i8** %708, align 8, !dbg !6116
  %710 = load %struct._getopt_data** %d_addr, align 8, !dbg !6116
  %711 = getelementptr inbounds %struct._getopt_data* %710, i32 0, i32 3, !dbg !6116
  store i8* %709, i8** %711, align 8, !dbg !6116
  %712 = load %struct._getopt_data** %d_addr, align 8, !dbg !6117
  %713 = getelementptr inbounds %struct._getopt_data* %712, i32 0, i32 0, !dbg !6117
  %714 = load i32* %713, align 8, !dbg !6117
  %715 = add nsw i32 %714, 1, !dbg !6117
  %716 = load %struct._getopt_data** %d_addr, align 8, !dbg !6117
  %717 = getelementptr inbounds %struct._getopt_data* %716, i32 0, i32 0, !dbg !6117
  store i32 %715, i32* %717, align 8, !dbg !6117
  br label %bb131, !dbg !6117

bb123:                                            ; preds = %bb121
  %718 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 0, !dbg !6118
  %719 = load i32* %718, align 8, !dbg !6118
  %720 = load i32* %argc_addr, align 4, !dbg !6118
  %721 = icmp eq i32 %719, %720, !dbg !6118
  br i1 %721, label %bb124, label %bb130, !dbg !6118

bb124:                                            ; preds = %bb123
  %722 = load i32* %print_errors, align 4, !dbg !6119
  %723 = icmp ne i32 %722, 0, !dbg !6119
  br i1 %723, label %bb125, label %bb126, !dbg !6119

bb125:                                            ; preds = %bb124
  %724 = load i8* %c, align 1, !dbg !6120
  %725 = sext i8 %724 to i32, !dbg !6120
  %726 = load i8*** %argv_addr, align 8, !dbg !6120
  %727 = getelementptr inbounds i8** %726, i64 0, !dbg !6120
  %728 = load i8** %727, align 1, !dbg !6120
  %729 = load %4** @stderr, align 8, !dbg !6120
  %730 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %729, i8* noalias getelementptr inbounds ([39 x i8]* @.str11160, i64 0, i64 0), i8* %728, i32 %725) nounwind, !dbg !6120
  br label %bb126, !dbg !6120

bb126:                                            ; preds = %bb125, %bb124
  %731 = load i8* %c, align 1, !dbg !6121
  %732 = sext i8 %731 to i32, !dbg !6121
  %733 = load %struct._getopt_data** %d_addr, align 8, !dbg !6121
  %734 = getelementptr inbounds %struct._getopt_data* %733, i32 0, i32 2, !dbg !6121
  store i32 %732, i32* %734, align 8, !dbg !6121
  %735 = load i8** %optstring_addr, align 8, !dbg !6122
  %736 = getelementptr inbounds i8* %735, i64 0, !dbg !6122
  %737 = load i8* %736, align 1, !dbg !6122
  %738 = icmp eq i8 %737, 58, !dbg !6122
  br i1 %738, label %bb127, label %bb128, !dbg !6122

bb127:                                            ; preds = %bb126
  store i8 58, i8* %c, align 1, !dbg !6123
  br label %bb131, !dbg !6123

bb128:                                            ; preds = %bb126
  store i8 63, i8* %c, align 1, !dbg !6124
  br label %bb131, !dbg !6124

bb130:                                            ; preds = %bb123
  %739 = load %struct._getopt_data** %d_addr, align 8, !dbg !6125
  %740 = getelementptr inbounds %struct._getopt_data* %739, i32 0, i32 0, !dbg !6125
  %741 = load i32* %740, align 8, !dbg !6125
  %742 = load i8*** %argv_addr, align 8, !dbg !6125
  %743 = sext i32 %741 to i64, !dbg !6125
  %744 = getelementptr inbounds i8** %742, i64 %743, !dbg !6125
  %745 = load i8** %744, align 1, !dbg !6125
  %746 = load %struct._getopt_data** %d_addr, align 8, !dbg !6125
  %747 = getelementptr inbounds %struct._getopt_data* %746, i32 0, i32 3, !dbg !6125
  store i8* %745, i8** %747, align 8, !dbg !6125
  %748 = add nsw i32 %741, 1, !dbg !6125
  %749 = load %struct._getopt_data** %d_addr, align 8, !dbg !6125
  %750 = getelementptr inbounds %struct._getopt_data* %749, i32 0, i32 0, !dbg !6125
  store i32 %748, i32* %750, align 8, !dbg !6125
  br label %bb131, !dbg !6125

bb131:                                            ; preds = %bb127, %bb128, %bb130, %bb122
  %751 = load %struct._getopt_data** %d_addr, align 8, !dbg !6126
  %752 = getelementptr inbounds %struct._getopt_data* %751, i32 0, i32 5, !dbg !6126
  store i8* null, i8** %752, align 8, !dbg !6126
  br label %bb132, !dbg !6126

bb132:                                            ; preds = %bb131, %bb120, %bb115
  %753 = load i8* %c, align 1, !dbg !6127
  %754 = sext i8 %753 to i32, !dbg !6127
  store i32 %754, i32* %0, align 4, !dbg !6127
  br label %bb133, !dbg !6127

bb133:                                            ; preds = %bb132, %bb114, %bb105, %bb97, %bb96, %bb92, %bb83, %bb74, %bb42, %bb41, %bb37, %bb2
  %755 = load i32* %0, align 4, !dbg !5996
  store i32 %755, i32* %retval, align 4, !dbg !5996
  %retval134 = load i32* %retval, !dbg !5996
  ret i32 %retval134, !dbg !5996
}

define hidden i32 @_getopt_internal(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  %1 = load i32* @optind, align 4, !dbg !6128
  store i32 %1, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !6128
  %2 = load i32* @opterr, align 4, !dbg !6130
  store i32 %2, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 1), align 4, !dbg !6130
  %3 = load i32* %argc_addr, align 4, !dbg !6131
  %4 = load i8*** %argv_addr, align 8, !dbg !6131
  %5 = load i8** %optstring_addr, align 8, !dbg !6131
  %6 = load %struct.option** %longopts_addr, align 8, !dbg !6131
  %7 = load i32** %longind_addr, align 8, !dbg !6131
  %8 = load i32* %long_only_addr, align 4, !dbg !6131
  %9 = call i32 @_getopt_internal_r(i32 %3, i8** %4, i8* %5, %struct.option* %6, i32* %7, i32 %8, %struct._getopt_data* @getopt_data) nounwind, !dbg !6131
  store i32 %9, i32* %result, align 4, !dbg !6131
  %10 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !6132
  store i32 %10, i32* @optind, align 4, !dbg !6132
  %11 = load i8** getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 3), align 8, !dbg !6133
  store i8* %11, i8** @optarg, align 8, !dbg !6133
  %12 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 2), align 8, !dbg !6134
  store i32 %12, i32* @optopt, align 4, !dbg !6134
  %13 = load i32* %result, align 4, !dbg !6135
  store i32 %13, i32* %0, align 4, !dbg !6135
  %14 = load i32* %0, align 4, !dbg !6135
  store i32 %14, i32* %retval, align 4, !dbg !6135
  %retval1 = load i32* %retval, !dbg !6135
  ret i32 %retval1, !dbg !6135
}

define i32 @getopt(i32 %argc, i8** %argv, i8* %optstring) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6136
  %2 = load i8*** %argv_addr, align 8, !dbg !6136
  %3 = load i8** %optstring_addr, align 8, !dbg !6136
  %4 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* null, i32* null, i32 0) nounwind, !dbg !6136
  store i32 %4, i32* %0, align 4, !dbg !6136
  %5 = load i32* %0, align 4, !dbg !6136
  store i32 %5, i32* %retval, align 4, !dbg !6136
  %retval1 = load i32* %retval, !dbg !6136
  ret i32 %retval1, !dbg !6136
}

define i32 @getopt_long(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6138
  %2 = load i8*** %argv_addr, align 8, !dbg !6138
  %3 = load i8** %options_addr, align 8, !dbg !6138
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !6138
  %5 = load i32** %opt_index_addr, align 8, !dbg !6138
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 0) nounwind, !dbg !6138
  store i32 %6, i32* %0, align 4, !dbg !6138
  %7 = load i32* %0, align 4, !dbg !6138
  store i32 %7, i32* %retval, align 4, !dbg !6138
  %retval1 = load i32* %retval, !dbg !6138
  ret i32 %retval1, !dbg !6138
}

define i32 @getopt_long_only(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !6140
  %2 = load i8*** %argv_addr, align 8, !dbg !6140
  %3 = load i8** %options_addr, align 8, !dbg !6140
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !6140
  %5 = load i32** %opt_index_addr, align 8, !dbg !6140
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 1) nounwind, !dbg !6140
  store i32 %6, i32* %0, align 4, !dbg !6140
  %7 = load i32* %0, align 4, !dbg !6140
  store i32 %7, i32* %retval, align 4, !dbg !6140
  %retval1 = load i32* %retval, !dbg !6140
  ret i32 %retval1, !dbg !6140
}

define internal void @__setutent() nounwind {
entry:
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @static_fd, align 4, !dbg !6142
  %1 = icmp eq i32 %0, -1, !dbg !6142
  br i1 %1, label %bb, label %bb5, !dbg !6142

bb:                                               ; preds = %entry
  %2 = load i8** @static_ut_name, align 8, !dbg !6144
  %3 = call i32 (i8*, i32, ...)* @open(i8* %2, i32 2) nounwind, !dbg !6144
  store i32 %3, i32* @static_fd, align 4, !dbg !6144
  %4 = load i32* @static_fd, align 4, !dbg !6144
  %5 = icmp slt i32 %4, 0, !dbg !6144
  br i1 %5, label %bb1, label %bb2, !dbg !6144

bb1:                                              ; preds = %bb
  %6 = load i8** @static_ut_name, align 8, !dbg !6145
  %7 = call i32 (i8*, i32, ...)* @open(i8* %6, i32 0) nounwind, !dbg !6145
  store i32 %7, i32* @static_fd, align 4, !dbg !6145
  %8 = load i32* @static_fd, align 4, !dbg !6145
  %9 = icmp slt i32 %8, 0, !dbg !6145
  br i1 %9, label %bummer, label %bb2, !dbg !6145

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* @static_fd, align 4, !dbg !6146
  %11 = call i32 (i32, i32, ...)* @fcntl(i32 %10, i32 1, i32 0) nounwind, !dbg !6146
  store i32 %11, i32* %ret, align 4, !dbg !6146
  %12 = load i32* %ret, align 4, !dbg !6147
  %13 = icmp sge i32 %12, 0, !dbg !6147
  br i1 %13, label %bb3, label %bb4, !dbg !6147

bb3:                                              ; preds = %bb2
  %14 = load i32* %ret, align 4, !dbg !6148
  %15 = or i32 %14, 1, !dbg !6148
  %16 = load i32* @static_fd, align 4, !dbg !6148
  %17 = call i32 (i32, i32, ...)* @fcntl(i32 %16, i32 2, i32 %15) nounwind, !dbg !6148
  store i32 %17, i32* %ret, align 4, !dbg !6148
  br label %bb4, !dbg !6148

bb4:                                              ; preds = %bb3, %bb2
  %18 = load i32* %ret, align 4, !dbg !6149
  %19 = icmp slt i32 %18, 0, !dbg !6149
  br i1 %19, label %bummer, label %bb5, !dbg !6149

bummer:                                           ; preds = %bb4, %bb1
  store i32 -1, i32* @static_fd, align 4, !dbg !6150
  %20 = load i32* @static_fd, align 4, !dbg !6151
  %21 = call i32 @close(i32 %20) nounwind, !dbg !6151
  br label %return, !dbg !6151

bb5:                                              ; preds = %bb4, %entry
  %22 = load i32* @static_fd, align 4, !dbg !6152
  %23 = call i64 @lseek(i32 %22, i64 0, i32 0) nounwind, !dbg !6152
  br label %return, !dbg !6152

return:                                           ; preds = %bummer, %bb5
  ret void, !dbg !6153
}

define void @setutent() nounwind {
entry:
  call void @__setutent() nounwind, !dbg !6154
  ret void, !dbg !6156
}

define internal %struct.utmp* @__getutent(i32 %utmp_fd) nounwind {
entry:
  %utmp_fd_addr = alloca i32, align 4
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %utmp_fd, i32* %utmp_fd_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6157
  %1 = load i32* %utmp_fd_addr, align 4, !dbg !6159
  %2 = icmp eq i32 %1, -1, !dbg !6159
  br i1 %2, label %bb, label %bb1, !dbg !6159

bb:                                               ; preds = %entry
  call void @__setutent() nounwind, !dbg !6160
  br label %bb1, !dbg !6160

bb1:                                              ; preds = %bb, %entry
  %3 = load i32* %utmp_fd_addr, align 4, !dbg !6161
  %4 = icmp eq i32 %3, -1, !dbg !6161
  br i1 %4, label %bb2, label %bb3, !dbg !6161

bb2:                                              ; preds = %bb1
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6162
  br label %bb6, !dbg !6162

bb3:                                              ; preds = %bb1
  %5 = load i32* %utmp_fd_addr, align 4, !dbg !6163
  %6 = call i64 @read(i32 %5, i8* bitcast (%struct.utmp* @static_utmp to i8*), i64 400) nounwind, !dbg !6163
  %7 = icmp eq i64 %6, 400, !dbg !6163
  br i1 %7, label %bb4, label %bb5, !dbg !6163

bb4:                                              ; preds = %bb3
  store %struct.utmp* @static_utmp, %struct.utmp** %ret, align 8, !dbg !6164
  br label %bb5, !dbg !6164

bb5:                                              ; preds = %bb4, %bb3
  %8 = load %struct.utmp** %ret, align 8, !dbg !6165
  store %struct.utmp* %8, %struct.utmp** %0, align 8, !dbg !6165
  br label %bb6, !dbg !6165

bb6:                                              ; preds = %bb5, %bb2
  %9 = load %struct.utmp** %0, align 8, !dbg !6162
  store %struct.utmp* %9, %struct.utmp** %retval, align 8, !dbg !6162
  %retval7 = load %struct.utmp** %retval, !dbg !6162
  ret %struct.utmp* %retval7, !dbg !6162
}

define void @endutent() nounwind {
entry:
  %0 = load i32* @static_fd, align 4, !dbg !6166
  %1 = icmp ne i32 %0, -1, !dbg !6166
  br i1 %1, label %bb, label %bb1, !dbg !6166

bb:                                               ; preds = %entry
  %2 = load i32* @static_fd, align 4, !dbg !6168
  %3 = call i32 @close(i32 %2) nounwind, !dbg !6168
  br label %bb1, !dbg !6168

bb1:                                              ; preds = %bb, %entry
  store i32 -1, i32* @static_fd, align 4, !dbg !6169
  ret void, !dbg !6170
}

define %struct.utmp* @getutent() nounwind {
entry:
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6171
  %1 = load i32* @static_fd, align 4, !dbg !6173
  %2 = call %struct.utmp* @__getutent(i32 %1) nounwind, !dbg !6173
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6173
  %3 = load %struct.utmp** %ret, align 8, !dbg !6174
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6174
  %4 = load %struct.utmp** %0, align 8, !dbg !6174
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6174
  %retval1 = load %struct.utmp** %retval, !dbg !6174
  ret %struct.utmp* %retval1, !dbg !6174
}

define internal %struct.utmp* @__getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  br label %bb12, !dbg !6175

bb:                                               ; preds = %bb12
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6177
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6177
  %3 = load i16* %2, align 8, !dbg !6177
  %4 = icmp eq i16 %3, 1, !dbg !6177
  br i1 %4, label %bb4, label %bb1, !dbg !6177

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6177
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6177
  %7 = load i16* %6, align 8, !dbg !6177
  %8 = icmp eq i16 %7, 2, !dbg !6177
  br i1 %8, label %bb4, label %bb2, !dbg !6177

bb2:                                              ; preds = %bb1
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6177
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 0, !dbg !6177
  %11 = load i16* %10, align 8, !dbg !6177
  %12 = icmp eq i16 %11, 3, !dbg !6177
  br i1 %12, label %bb4, label %bb3, !dbg !6177

bb3:                                              ; preds = %bb2
  %13 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6177
  %14 = getelementptr inbounds %struct.utmp* %13, i32 0, i32 0, !dbg !6177
  %15 = load i16* %14, align 8, !dbg !6177
  %16 = icmp eq i16 %15, 4, !dbg !6177
  br i1 %16, label %bb4, label %bb6, !dbg !6177

bb4:                                              ; preds = %bb3, %bb2, %bb1, %bb
  %17 = load %struct.utmp** %lutmp, align 8, !dbg !6177
  %18 = getelementptr inbounds %struct.utmp* %17, i32 0, i32 0, !dbg !6177
  %19 = load i16* %18, align 8, !dbg !6177
  %20 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6177
  %21 = getelementptr inbounds %struct.utmp* %20, i32 0, i32 0, !dbg !6177
  %22 = load i16* %21, align 8, !dbg !6177
  %23 = icmp eq i16 %19, %22, !dbg !6177
  br i1 %23, label %bb5, label %bb6, !dbg !6177

bb5:                                              ; preds = %bb4
  %24 = load %struct.utmp** %lutmp, align 8, !dbg !6178
  store %struct.utmp* %24, %struct.utmp** %0, align 8, !dbg !6178
  br label %bb14, !dbg !6178

bb6:                                              ; preds = %bb4, %bb3
  %25 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6179
  %26 = getelementptr inbounds %struct.utmp* %25, i32 0, i32 0, !dbg !6179
  %27 = load i16* %26, align 8, !dbg !6179
  %28 = icmp eq i16 %27, 5, !dbg !6179
  br i1 %28, label %bb10, label %bb7, !dbg !6179

bb7:                                              ; preds = %bb6
  %29 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6179
  %30 = getelementptr inbounds %struct.utmp* %29, i32 0, i32 0, !dbg !6179
  %31 = load i16* %30, align 8, !dbg !6179
  %32 = icmp eq i16 %31, 8, !dbg !6179
  br i1 %32, label %bb10, label %bb8, !dbg !6179

bb8:                                              ; preds = %bb7
  %33 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6179
  %34 = getelementptr inbounds %struct.utmp* %33, i32 0, i32 0, !dbg !6179
  %35 = load i16* %34, align 8, !dbg !6179
  %36 = icmp eq i16 %35, 6, !dbg !6179
  br i1 %36, label %bb10, label %bb9, !dbg !6179

bb9:                                              ; preds = %bb8
  %37 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6179
  %38 = getelementptr inbounds %struct.utmp* %37, i32 0, i32 0, !dbg !6179
  %39 = load i16* %38, align 8, !dbg !6179
  %40 = icmp eq i16 %39, 7, !dbg !6179
  br i1 %40, label %bb10, label %bb12, !dbg !6179

bb10:                                             ; preds = %bb9, %bb8, %bb7, %bb6
  %41 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6179
  %42 = getelementptr inbounds %struct.utmp* %41, i32 0, i32 3, !dbg !6179
  %43 = getelementptr inbounds [4 x i8]* %42, i64 0, i64 0, !dbg !6179
  %44 = load %struct.utmp** %lutmp, align 8, !dbg !6179
  %45 = getelementptr inbounds %struct.utmp* %44, i32 0, i32 3, !dbg !6179
  %46 = getelementptr inbounds [4 x i8]* %45, i64 0, i64 0, !dbg !6179
  %47 = call i32 @strncmp(i8* %46, i8* %43, i64 4) nounwind readonly, !dbg !6179
  %48 = icmp eq i32 %47, 0, !dbg !6179
  br i1 %48, label %bb11, label %bb12, !dbg !6179

bb11:                                             ; preds = %bb10
  %49 = load %struct.utmp** %lutmp, align 8, !dbg !6180
  store %struct.utmp* %49, %struct.utmp** %0, align 8, !dbg !6180
  br label %bb14, !dbg !6180

bb12:                                             ; preds = %bb10, %bb9, %entry
  %50 = load i32* @static_fd, align 4, !dbg !6175
  %51 = call %struct.utmp* @__getutent(i32 %50) nounwind, !dbg !6175
  store %struct.utmp* %51, %struct.utmp** %lutmp, align 8, !dbg !6175
  %52 = load %struct.utmp** %lutmp, align 8, !dbg !6175
  %53 = icmp ne %struct.utmp* %52, null, !dbg !6175
  br i1 %53, label %bb, label %bb13, !dbg !6175

bb13:                                             ; preds = %bb12
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6181
  br label %bb14, !dbg !6181

bb14:                                             ; preds = %bb13, %bb11, %bb5
  %54 = load %struct.utmp** %0, align 8, !dbg !6178
  store %struct.utmp* %54, %struct.utmp** %retval, align 8, !dbg !6178
  %retval15 = load %struct.utmp** %retval, !dbg !6178
  ret %struct.utmp* %retval15, !dbg !6178
}

define %struct.utmp* @getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6182
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6184
  %2 = call %struct.utmp* @__getutid(%struct.utmp* %1) nounwind, !dbg !6184
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6184
  %3 = load %struct.utmp** %ret, align 8, !dbg !6185
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6185
  %4 = load %struct.utmp** %0, align 8, !dbg !6185
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6185
  %retval1 = load %struct.utmp** %retval, !dbg !6185
  ret %struct.utmp* %retval1, !dbg !6185
}

define %struct.utmp* @getutline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %lutmp, align 8, !dbg !6186
  br label %bb3, !dbg !6186

bb:                                               ; preds = %bb3
  %1 = load %struct.utmp** %lutmp, align 8, !dbg !6188
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6188
  %3 = load i16* %2, align 8, !dbg !6188
  %4 = icmp eq i16 %3, 7, !dbg !6188
  br i1 %4, label %bb2, label %bb1, !dbg !6188

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %lutmp, align 8, !dbg !6188
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6188
  %7 = load i16* %6, align 8, !dbg !6188
  %8 = icmp eq i16 %7, 6, !dbg !6188
  br i1 %8, label %bb2, label %bb3, !dbg !6188

bb2:                                              ; preds = %bb1, %bb
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6188
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 2, !dbg !6188
  %11 = getelementptr inbounds [32 x i8]* %10, i64 0, i64 0, !dbg !6188
  %12 = load %struct.utmp** %lutmp, align 8, !dbg !6188
  %13 = getelementptr inbounds %struct.utmp* %12, i32 0, i32 2, !dbg !6188
  %14 = getelementptr inbounds [32 x i8]* %13, i64 0, i64 0, !dbg !6188
  %15 = call i32 @strcmp(i8* %14, i8* %11) nounwind readonly, !dbg !6188
  %16 = icmp eq i32 %15, 0, !dbg !6188
  br i1 %16, label %bb4, label %bb3, !dbg !6188

bb3:                                              ; preds = %bb2, %bb1, %entry
  %17 = load i32* @static_fd, align 4, !dbg !6189
  %18 = call %struct.utmp* @__getutent(i32 %17) nounwind, !dbg !6189
  store %struct.utmp* %18, %struct.utmp** %lutmp, align 8, !dbg !6189
  %19 = load %struct.utmp** %lutmp, align 8, !dbg !6189
  %20 = icmp ne %struct.utmp* %19, null, !dbg !6189
  br i1 %20, label %bb, label %bb4, !dbg !6189

bb4:                                              ; preds = %bb3, %bb2
  %21 = load %struct.utmp** %lutmp, align 8, !dbg !6190
  store %struct.utmp* %21, %struct.utmp** %0, align 8, !dbg !6190
  %22 = load %struct.utmp** %0, align 8, !dbg !6190
  store %struct.utmp* %22, %struct.utmp** %retval, align 8, !dbg !6190
  %retval5 = load %struct.utmp** %retval, !dbg !6190
  ret %struct.utmp* %retval5, !dbg !6190
}

define %struct.utmp* @pututline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  %1 = load i32* @static_fd, align 4, !dbg !6191
  %2 = call i64 @lseek(i32 %1, i64 -400, i32 1) nounwind, !dbg !6191
  %3 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6193
  %4 = call %struct.utmp* @__getutid(%struct.utmp* %3) nounwind, !dbg !6193
  %5 = icmp ne %struct.utmp* %4, null, !dbg !6193
  %6 = load i32* @static_fd, align 4, !dbg !6194
  br i1 %5, label %bb, label %bb1, !dbg !6193

bb:                                               ; preds = %entry
  %7 = call i64 @lseek(i32 %6, i64 -400, i32 1) nounwind, !dbg !6194
  br label %bb2, !dbg !6194

bb1:                                              ; preds = %entry
  %8 = call i64 @lseek(i32 %6, i64 0, i32 2) nounwind, !dbg !6195
  br label %bb2, !dbg !6195

bb2:                                              ; preds = %bb1, %bb
  %9 = load i32* @static_fd, align 4, !dbg !6196
  %10 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6196
  %11 = bitcast %struct.utmp* %10 to i8*, !dbg !6196
  %12 = call i64 @write(i32 %9, i8* %11, i64 400) nounwind, !dbg !6196
  %13 = icmp ne i64 %12, 400, !dbg !6196
  br i1 %13, label %bb3, label %bb4, !dbg !6196

bb3:                                              ; preds = %bb2
  store %struct.utmp* null, %struct.utmp** %utmp_entry_addr, align 8, !dbg !6197
  br label %bb4, !dbg !6197

bb4:                                              ; preds = %bb3, %bb2
  %14 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6198
  store %struct.utmp* %14, %struct.utmp** %0, align 8, !dbg !6198
  %15 = load %struct.utmp** %0, align 8, !dbg !6198
  store %struct.utmp* %15, %struct.utmp** %retval, align 8, !dbg !6198
  %retval5 = load %struct.utmp** %retval, !dbg !6198
  ret %struct.utmp* %retval5, !dbg !6198
}

define i32 @utmpname(i8* %new_ut_name) nounwind {
entry:
  %new_ut_name_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %new_ut_name, i8** %new_ut_name_addr
  %1 = load i8** %new_ut_name_addr, align 8, !dbg !6199
  %2 = icmp ne i8* %1, null, !dbg !6199
  br i1 %2, label %bb, label %bb4, !dbg !6199

bb:                                               ; preds = %entry
  %3 = load i8** @static_ut_name, align 8, !dbg !6201
  %4 = icmp ne i8* %3, getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), !dbg !6201
  br i1 %4, label %bb1, label %bb2, !dbg !6201

bb1:                                              ; preds = %bb
  %5 = load i8** @static_ut_name, align 8, !dbg !6202
  call void @free(i8* %5) nounwind, !dbg !6202
  br label %bb2, !dbg !6202

bb2:                                              ; preds = %bb1, %bb
  %6 = load i8** %new_ut_name_addr, align 8, !dbg !6203
  %7 = call noalias i8* @strdup(i8* %6) nounwind, !dbg !6203
  store i8* %7, i8** @static_ut_name, align 8, !dbg !6203
  %8 = load i8** @static_ut_name, align 8, !dbg !6204
  %9 = icmp eq i8* %8, null, !dbg !6204
  br i1 %9, label %bb3, label %bb4, !dbg !6204

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), i8** @static_ut_name, align 8, !dbg !6205
  br label %bb4, !dbg !6205

bb4:                                              ; preds = %bb3, %bb2, %entry
  %10 = load i32* @static_fd, align 4, !dbg !6206
  %11 = icmp ne i32 %10, -1, !dbg !6206
  br i1 %11, label %bb5, label %bb6, !dbg !6206

bb5:                                              ; preds = %bb4
  %12 = load i32* @static_fd, align 4, !dbg !6207
  %13 = call i32 @close(i32 %12) nounwind, !dbg !6207
  br label %bb6, !dbg !6207

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* @static_fd, align 4, !dbg !6208
  store i32 0, i32* %0, align 4, !dbg !6209
  %14 = load i32* %0, align 4, !dbg !6209
  store i32 %14, i32* %retval, align 4, !dbg !6209
  %retval7 = load i32* %retval, !dbg !6209
  ret i32 %retval7, !dbg !6209
}

define i32 @iswcntrl(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6210
  %2 = call i32 @iswctype(i32 %1, i32 4) nounwind, !dbg !6210
  store i32 %2, i32* %0, align 4, !dbg !6210
  %3 = load i32* %0, align 4, !dbg !6210
  store i32 %3, i32* %retval, align 4, !dbg !6210
  %retval1 = load i32* %retval, !dbg !6210
  ret i32 %retval1, !dbg !6211
}

define i32 @iswprint(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6213
  %2 = call i32 @iswctype(i32 %1, i32 8) nounwind, !dbg !6213
  store i32 %2, i32* %0, align 4, !dbg !6213
  %3 = load i32* %0, align 4, !dbg !6213
  store i32 %3, i32* %retval, align 4, !dbg !6213
  %retval1 = load i32* %retval, !dbg !6213
  ret i32 %retval1, !dbg !6214
}

define %struct.lconv* @localeconv() nounwind {
entry:
  %retval = alloca %struct.lconv*
  %0 = alloca %struct.lconv*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* bitcast (%struct.lconv* @the_lconv to i8*), i8** %p, align 8, !dbg !6216
  %1 = load i8** %p, align 8, !dbg !6218
  %2 = bitcast i8* %1 to i8**, !dbg !6218
  store i8* getelementptr inbounds ([2 x i8]* @decpt, i64 0, i64 0), i8** %2, align 8, !dbg !6218
  br label %bb, !dbg !6218

bb:                                               ; preds = %bb, %entry
  %3 = load i8** %p, align 8, !dbg !6219
  %4 = getelementptr inbounds i8* %3, i64 8, !dbg !6219
  store i8* %4, i8** %p, align 8, !dbg !6219
  %5 = load i8** %p, align 8, !dbg !6220
  %6 = bitcast i8* %5 to i8**, !dbg !6220
  store i8* getelementptr inbounds ([2 x i8]* @decpt, i64 0, i64 1), i8** %6, align 8, !dbg !6220
  %7 = load i8** %p, align 8, !dbg !6221
  %8 = icmp ult i8* %7, bitcast (i8** getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 9) to i8*), !dbg !6221
  br i1 %8, label %bb, label %bb1, !dbg !6221

bb1:                                              ; preds = %bb
  store i8* getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 10), i8** %p, align 8, !dbg !6222
  br label %bb2, !dbg !6222

bb2:                                              ; preds = %bb2, %bb1
  %9 = load i8** %p, align 8, !dbg !6223
  store i8 127, i8* %9, align 1, !dbg !6223
  %10 = load i8** %p, align 8, !dbg !6224
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6224
  store i8* %11, i8** %p, align 8, !dbg !6224
  %12 = load i8** %p, align 8, !dbg !6225
  %13 = icmp ule i8* %12, getelementptr inbounds (%struct.lconv* @the_lconv, i64 0, i32 23), !dbg !6225
  br i1 %13, label %bb2, label %bb3, !dbg !6225

bb3:                                              ; preds = %bb2
  store %struct.lconv* @the_lconv, %struct.lconv** %0, align 8, !dbg !6226
  %14 = load %struct.lconv** %0, align 8, !dbg !6226
  store %struct.lconv* %14, %struct.lconv** %retval, align 8, !dbg !6226
  %retval4 = load %struct.lconv** %retval, !dbg !6226
  ret %struct.lconv* %retval4, !dbg !6226
}

define i64 @mbrtowc(i32* noalias %pwc, i8* noalias %s, i64 %n, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %pwc_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %p = alloca i8*
  %r = alloca i64
  %empty_string = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwc, i32** %pwc_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6227
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6227
  br i1 %2, label %bb, label %bb1, !dbg !6227

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2221, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6229
  br label %bb1, !dbg !6229

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %s_addr, align 8, !dbg !6230
  %4 = icmp eq i8* %3, null, !dbg !6230
  br i1 %4, label %bb2, label %bb4, !dbg !6230

bb2:                                              ; preds = %bb1
  %5 = load i8** %s_addr, align 8, !dbg !6231
  %6 = bitcast i8* %5 to i32*, !dbg !6231
  store i32* %6, i32** %pwc_addr, align 8, !dbg !6231
  %7 = getelementptr inbounds [1 x i8]* %empty_string, i64 0, i64 0, !dbg !6232
  store i8 0, i8* %7, align 1, !dbg !6232
  %empty_string3 = bitcast [1 x i8]* %empty_string to i8*, !dbg !6233
  store i8* %empty_string3, i8** %s_addr, align 8, !dbg !6233
  store i64 1, i64* %n_addr, align 8, !dbg !6234
  br label %bb10, !dbg !6234

bb4:                                              ; preds = %bb1
  %8 = load i64* %n_addr, align 8, !dbg !6235
  %9 = icmp eq i64 %8, 0, !dbg !6235
  br i1 %9, label %bb5, label %bb10, !dbg !6235

bb5:                                              ; preds = %bb4
  %10 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6236
  %11 = getelementptr inbounds %struct.__mbstate_t* %10, i32 0, i32 0, !dbg !6236
  %12 = load i32* %11, align 4, !dbg !6236
  %13 = icmp eq i32 %12, 0, !dbg !6236
  br i1 %13, label %bb8, label %bb6, !dbg !6236

bb6:                                              ; preds = %bb5
  %14 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6236
  %15 = getelementptr inbounds %struct.__mbstate_t* %14, i32 0, i32 1, !dbg !6236
  %16 = load i32* %15, align 4, !dbg !6236
  %17 = icmp ne i32 %16, 65535, !dbg !6236
  br i1 %17, label %bb8, label %bb7, !dbg !6236

bb7:                                              ; preds = %bb6
  store i64 -1, i64* %iftmp.0, align 8, !dbg !6236
  br label %bb9, !dbg !6236

bb8:                                              ; preds = %bb6, %bb5
  store i64 -2, i64* %iftmp.0, align 8, !dbg !6236
  br label %bb9, !dbg !6236

bb9:                                              ; preds = %bb8, %bb7
  %18 = load i64* %iftmp.0, align 8, !dbg !6236
  store i64 %18, i64* %0, align 8, !dbg !6236
  br label %bb15, !dbg !6236

bb10:                                             ; preds = %bb4, %bb2
  %19 = load i8** %s_addr, align 8, !dbg !6237
  store i8* %19, i8** %p, align 8, !dbg !6237
  %wcbuf11 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6238
  %20 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6238
  %21 = call i64 @mbsnrtowcs(i32* noalias %wcbuf11, i8** noalias %p, i64 -1, i64 1, %struct.__mbstate_t* noalias %20) nounwind, !dbg !6238
  store i64 %21, i64* %r, align 8, !dbg !6238
  %22 = load i64* %r, align 8, !dbg !6239
  %23 = icmp sge i64 %22, 0, !dbg !6239
  br i1 %23, label %bb12, label %bb14, !dbg !6239

bb12:                                             ; preds = %bb10
  %24 = load i32** %pwc_addr, align 8, !dbg !6240
  %25 = icmp ne i32* %24, null, !dbg !6240
  br i1 %25, label %bb13, label %bb14, !dbg !6240

bb13:                                             ; preds = %bb12
  %26 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !6241
  %27 = load i32* %26, align 4, !dbg !6241
  %28 = load i32** %pwc_addr, align 8, !dbg !6241
  store i32 %27, i32* %28, align 4, !dbg !6241
  br label %bb14, !dbg !6241

bb14:                                             ; preds = %bb13, %bb12, %bb10
  %29 = load i64* %r, align 8, !dbg !6242
  store i64 %29, i64* %0, align 8, !dbg !6242
  br label %bb15, !dbg !6242

bb15:                                             ; preds = %bb14, %bb9
  %30 = load i64* %0, align 8, !dbg !6236
  store i64 %30, i64* %retval, align 8, !dbg !6236
  %retval16 = load i64* %retval, !dbg !6236
  ret i64 %retval16, !dbg !6236
}

define i32 @mbsinit(%struct.__mbstate_t* %ps) nounwind readonly {
entry:
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6243
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6243
  br i1 %2, label %bb1, label %bb, !dbg !6243

bb:                                               ; preds = %entry
  %3 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6243
  %4 = getelementptr inbounds %struct.__mbstate_t* %3, i32 0, i32 0, !dbg !6243
  %5 = load i32* %4, align 4, !dbg !6243
  %6 = icmp eq i32 %5, 0, !dbg !6243
  br i1 %6, label %bb1, label %bb2, !dbg !6243

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.0, align 4, !dbg !6243
  br label %bb3, !dbg !6243

bb2:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4, !dbg !6243
  br label %bb3, !dbg !6243

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4, !dbg !6243
  store i32 %7, i32* %0, align 4, !dbg !6243
  %8 = load i32* %0, align 4, !dbg !6243
  store i32 %8, i32* %retval, align 4, !dbg !6243
  %retval4 = load i32* %retval, !dbg !6243
  ret i32 %retval4, !dbg !6243
}

define i64 @mbstowcs(i32* noalias %pwcs, i8* noalias %s, i64 %n) nounwind {
entry:
  %pwcs_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %state = alloca %struct.__mbstate_t
  %e = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwcs, i32** %pwcs_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6245
  store i8* %1, i8** %e, align 8, !dbg !6245
  %2 = getelementptr inbounds %struct.__mbstate_t* %state, i32 0, i32 0, !dbg !6247
  store i32 0, i32* %2, align 4, !dbg !6247
  %3 = load i32** %pwcs_addr, align 8, !dbg !6248
  %4 = load i64* %n_addr, align 8, !dbg !6248
  %5 = call i64 @mbsrtowcs(i32* noalias %3, i8** noalias %e, i64 %4, %struct.__mbstate_t* noalias %state) nounwind, !dbg !6248
  store i64 %5, i64* %0, align 8, !dbg !6248
  %6 = load i64* %0, align 8, !dbg !6248
  store i64 %6, i64* %retval, align 8, !dbg !6248
  %retval1 = load i64* %retval, !dbg !6248
  ret i64 %retval1, !dbg !6248
}

define i8* @memchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6249
  store i8* %1, i8** %r, align 8, !dbg !6249
  br label %bb3, !dbg !6249

bb:                                               ; preds = %bb3
  %2 = load i8** %r, align 8, !dbg !6251
  %3 = load i8* %2, align 1, !dbg !6251
  %4 = load i32* %c_addr, align 4, !dbg !6251
  %5 = trunc i32 %4 to i8, !dbg !6251
  %6 = icmp eq i8 %3, %5, !dbg !6251
  %7 = load i8** %r, align 8, !dbg !6252
  br i1 %6, label %bb1, label %bb2, !dbg !6251

bb1:                                              ; preds = %bb
  store i8* %7, i8** %0, align 8, !dbg !6252
  br label %bb5, !dbg !6252

bb2:                                              ; preds = %bb
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !6253
  store i8* %8, i8** %r, align 8, !dbg !6253
  %9 = load i64* %n_addr, align 8, !dbg !6254
  %10 = sub i64 %9, 1, !dbg !6254
  store i64 %10, i64* %n_addr, align 8, !dbg !6254
  br label %bb3, !dbg !6254

bb3:                                              ; preds = %bb2, %entry
  %11 = load i64* %n_addr, align 8, !dbg !6255
  %12 = icmp ne i64 %11, 0, !dbg !6255
  br i1 %12, label %bb, label %bb4, !dbg !6255

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6256
  br label %bb5, !dbg !6256

bb5:                                              ; preds = %bb4, %bb1
  %13 = load i8** %0, align 8, !dbg !6252
  store i8* %13, i8** %retval, align 8, !dbg !6252
  %retval6 = load i8** %retval, !dbg !6252
  ret i8* %retval6, !dbg !6252
}

define i32 @memcmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r1 = alloca i8*
  %r2 = alloca i8*
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6257
  store i8* %1, i8** %r1, align 8, !dbg !6257
  %2 = load i8** %s2_addr, align 8, !dbg !6259
  store i8* %2, i8** %r2, align 8, !dbg !6259
  store i32 0, i32* %r, align 4, !dbg !6260
  br label %bb, !dbg !6260

bb:                                               ; preds = %bb1, %entry
  %3 = load i64* %n_addr, align 8, !dbg !6261
  %4 = sub i64 %3, 1, !dbg !6261
  store i64 %4, i64* %n_addr, align 8, !dbg !6261
  %5 = load i64* %n_addr, align 8, !dbg !6261
  %6 = icmp eq i64 %5, -1, !dbg !6261
  br i1 %6, label %bb2, label %bb1, !dbg !6261

bb1:                                              ; preds = %bb
  %7 = load i8** %r1, align 8, !dbg !6261
  %8 = load i8* %7, align 1, !dbg !6261
  %9 = zext i8 %8 to i32, !dbg !6261
  %10 = load i8** %r2, align 8, !dbg !6261
  %11 = load i8* %10, align 1, !dbg !6261
  %12 = zext i8 %11 to i32, !dbg !6261
  %13 = sub nsw i32 %9, %12, !dbg !6261
  store i32 %13, i32* %r, align 4, !dbg !6261
  %14 = load i32* %r, align 4, !dbg !6261
  %15 = icmp eq i32 %14, 0, !dbg !6261
  %16 = zext i1 %15 to i8, !dbg !6261
  %17 = load i8** %r1, align 8, !dbg !6261
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6261
  store i8* %18, i8** %r1, align 8, !dbg !6261
  %19 = load i8** %r2, align 8, !dbg !6261
  %20 = getelementptr inbounds i8* %19, i64 1, !dbg !6261
  store i8* %20, i8** %r2, align 8, !dbg !6261
  %toBool = icmp ne i8 %16, 0, !dbg !6261
  br i1 %toBool, label %bb, label %bb2, !dbg !6261

bb2:                                              ; preds = %bb1, %bb
  %21 = load i32* %r, align 4, !dbg !6262
  store i32 %21, i32* %0, align 4, !dbg !6262
  %22 = load i32* %0, align 4, !dbg !6262
  store i32 %22, i32* %retval, align 4, !dbg !6262
  %retval3 = load i32* %retval, !dbg !6262
  ret i32 %retval3, !dbg !6262
}

define i8* @mempcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6263
  store i8* %1, i8** %r1, align 8, !dbg !6263
  %2 = load i8** %s2_addr, align 8, !dbg !6265
  store i8* %2, i8** %r2, align 8, !dbg !6265
  br label %bb1, !dbg !6265

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6266
  %4 = load i8* %3, align 1, !dbg !6266
  %5 = load i8** %r1, align 8, !dbg !6266
  store i8 %4, i8* %5, align 1, !dbg !6266
  %6 = load i8** %r1, align 8, !dbg !6266
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6266
  store i8* %7, i8** %r1, align 8, !dbg !6266
  %8 = load i8** %r2, align 8, !dbg !6266
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6266
  store i8* %9, i8** %r2, align 8, !dbg !6266
  %10 = load i64* %n_addr, align 8, !dbg !6267
  %11 = sub i64 %10, 1, !dbg !6267
  store i64 %11, i64* %n_addr, align 8, !dbg !6267
  br label %bb1, !dbg !6267

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6268
  %13 = icmp ne i64 %12, 0, !dbg !6268
  br i1 %13, label %bb, label %bb2, !dbg !6268

bb2:                                              ; preds = %bb1
  %14 = load i8** %r1, align 8, !dbg !6269
  store i8* %14, i8** %0, align 8, !dbg !6269
  %15 = load i8** %0, align 8, !dbg !6269
  store i8* %15, i8** %retval, align 8, !dbg !6269
  %retval3 = load i8** %retval, !dbg !6269
  ret i8* %retval3, !dbg !6269
}

define i8* @memrchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6270
  %2 = load i64* %n_addr, align 8, !dbg !6270
  %3 = getelementptr inbounds i8* %1, i64 %2, !dbg !6270
  store i8* %3, i8** %r, align 8, !dbg !6270
  br label %bb3, !dbg !6270

bb:                                               ; preds = %bb3
  %4 = load i8** %r, align 8, !dbg !6272
  %5 = getelementptr inbounds i8* %4, i64 -1, !dbg !6272
  store i8* %5, i8** %r, align 8, !dbg !6272
  %6 = load i8** %r, align 8, !dbg !6272
  %7 = load i8* %6, align 1, !dbg !6272
  %8 = load i32* %c_addr, align 4, !dbg !6272
  %9 = trunc i32 %8 to i8, !dbg !6272
  %10 = icmp eq i8 %7, %9, !dbg !6272
  br i1 %10, label %bb1, label %bb2, !dbg !6272

bb1:                                              ; preds = %bb
  %11 = load i8** %r, align 8, !dbg !6273
  store i8* %11, i8** %0, align 8, !dbg !6273
  br label %bb5, !dbg !6273

bb2:                                              ; preds = %bb
  %12 = load i64* %n_addr, align 8, !dbg !6274
  %13 = sub i64 %12, 1, !dbg !6274
  store i64 %13, i64* %n_addr, align 8, !dbg !6274
  br label %bb3, !dbg !6274

bb3:                                              ; preds = %bb2, %entry
  %14 = load i64* %n_addr, align 8, !dbg !6275
  %15 = icmp ne i64 %14, 0, !dbg !6275
  br i1 %15, label %bb, label %bb4, !dbg !6275

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6276
  br label %bb5, !dbg !6276

bb5:                                              ; preds = %bb4, %bb1
  %16 = load i8** %0, align 8, !dbg !6273
  store i8* %16, i8** %retval, align 8, !dbg !6273
  %retval6 = load i8** %retval, !dbg !6273
  ret i8* %retval6, !dbg !6273
}

define i8* @nl_langinfo(i32 %item) nounwind {
entry:
  %item_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %c = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %item, i32* %item_addr
  %1 = load i32* %item_addr, align 4, !dbg !6277
  %int_cast_to_i64 = zext i32 8 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = ashr i32 %1, 8, !dbg !6277
  store i32 %3, i32* %c, align 4, !dbg !6277
  %4 = load i32* %c, align 4, !dbg !6277
  %5 = icmp ule i32 %4, 5, !dbg !6277
  br i1 %5, label %bb, label %bb2, !dbg !6277

bb:                                               ; preds = %klee_overshift_check.exit
  %6 = load i32* %c, align 4, !dbg !6279
  %7 = zext i32 %6 to i64, !dbg !6279
  %8 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %7, !dbg !6279
  %9 = load i8* %8, align 1, !dbg !6279
  %10 = zext i8 %9 to i32, !dbg !6279
  %11 = load i32* %item_addr, align 4, !dbg !6279
  %12 = and i32 %11, 255, !dbg !6279
  %13 = add nsw i32 %10, %12, !dbg !6279
  store i32 %13, i32* %i, align 4, !dbg !6279
  %14 = load i32* %c, align 4, !dbg !6279
  %15 = add i32 %14, 1, !dbg !6279
  %16 = zext i32 %15 to i64, !dbg !6279
  %17 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %16, !dbg !6279
  %18 = load i8* %17, align 1, !dbg !6279
  %19 = zext i8 %18 to i32, !dbg !6279
  %20 = load i32* %i, align 4, !dbg !6279
  %21 = icmp ult i32 %20, %19, !dbg !6279
  br i1 %21, label %bb1, label %bb2, !dbg !6279

bb1:                                              ; preds = %bb
  %22 = load i32* %i, align 4, !dbg !6280
  %23 = add i32 %22, 7, !dbg !6280
  %24 = zext i32 %23 to i64, !dbg !6280
  %25 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %24, !dbg !6280
  %26 = load i8* %25, align 1, !dbg !6280
  %27 = zext i8 %26 to i32, !dbg !6280
  %28 = sext i32 %27 to i64, !dbg !6280
  %29 = getelementptr inbounds i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 97), i64 %28, !dbg !6280
  %30 = load i32* %i, align 4, !dbg !6280
  %31 = and i32 %30, 64, !dbg !6280
  %32 = mul i32 %31, 2, !dbg !6280
  %33 = zext i32 %32 to i64, !dbg !6280
  %34 = getelementptr inbounds i8* %29, i64 %33, !dbg !6280
  store i8* %34, i8** %0, align 8, !dbg !6280
  br label %bb3, !dbg !6280

bb2:                                              ; preds = %bb, %klee_overshift_check.exit
  store i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 0), i8** %0, align 8, !dbg !6281
  br label %bb3, !dbg !6281

bb3:                                              ; preds = %bb2, %bb1
  %35 = load i8** %0, align 8, !dbg !6280
  store i8* %35, i8** %retval, align 8, !dbg !6280
  %retval4 = load i8** %retval, !dbg !6280
  ret i8* %retval4, !dbg !6280
}

define i32 @putchar_unlocked(i32 %c) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %stream = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load %4** @stdout, align 8, !dbg !6282
  store %4* %1, %4** %stream, align 8, !dbg !6282
  %2 = load %4** %stream, align 8, !dbg !6284
  %3 = getelementptr inbounds %4* %2, i32 0, i32 5, !dbg !6284
  %4 = load i8** %3, align 8, !dbg !6284
  %5 = load %4** %stream, align 8, !dbg !6284
  %6 = getelementptr inbounds %4* %5, i32 0, i32 8, !dbg !6284
  %7 = load i8** %6, align 8, !dbg !6284
  %8 = icmp ult i8* %4, %7, !dbg !6284
  br i1 %8, label %bb, label %bb1, !dbg !6284

bb:                                               ; preds = %entry
  %9 = load %4** %stream, align 8, !dbg !6284
  %10 = getelementptr inbounds %4* %9, i32 0, i32 5, !dbg !6284
  %11 = load i8** %10, align 8, !dbg !6284
  %12 = load i32* %c_addr, align 4, !dbg !6284
  %13 = trunc i32 %12 to i8, !dbg !6284
  store i8 %13, i8* %11, align 1, !dbg !6284
  %14 = load i8* %11, align 1, !dbg !6284
  %15 = zext i8 %14 to i32, !dbg !6284
  store i32 %15, i32* %iftmp.0, align 4, !dbg !6284
  %16 = getelementptr inbounds i8* %11, i64 1, !dbg !6284
  %17 = load %4** %stream, align 8, !dbg !6284
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !6284
  store i8* %16, i8** %18, align 8, !dbg !6284
  br label %bb2, !dbg !6284

bb1:                                              ; preds = %entry
  %19 = load i32* %c_addr, align 4, !dbg !6284
  %20 = load %4** %stream, align 8, !dbg !6284
  %21 = call i32 @__fputc_unlocked(i32 %19, %4* %20) nounwind, !dbg !6284
  store i32 %21, i32* %iftmp.0, align 4, !dbg !6284
  br label %bb2, !dbg !6284

bb2:                                              ; preds = %bb1, %bb
  %22 = load i32* %iftmp.0, align 4, !dbg !6284
  store i32 %22, i32* %0, align 4, !dbg !6284
  %23 = load i32* %0, align 4, !dbg !6284
  store i32 %23, i32* %retval, align 4, !dbg !6284
  %retval3 = load i32* %retval, !dbg !6284
  ret i32 %retval3, !dbg !6284
}

define i8* @realpath(i8* %path, i8* %got_path) nounwind {
entry:
  %path_addr = alloca i8*, align 8
  %got_path_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %copy_path = alloca [4096 x i8]
  %max_path = alloca i8*
  %new_path = alloca i8*
  %path_len = alloca i64
  %readlinks = alloca i32
  %link_len = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i8* %got_path, i8** %got_path_addr
  store i32 0, i32* %readlinks, align 4, !dbg !6285
  %1 = load i8** %path_addr, align 8, !dbg !6287
  %2 = icmp eq i8* %1, null, !dbg !6287
  br i1 %2, label %bb, label %bb1, !dbg !6287

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6288
  store i8* null, i8** %0, align 8, !dbg !6289
  br label %bb55, !dbg !6289

bb1:                                              ; preds = %entry
  %3 = load i8** %path_addr, align 8, !dbg !6290
  %4 = load i8* %3, align 1, !dbg !6290
  %5 = icmp eq i8 %4, 0, !dbg !6290
  br i1 %5, label %bb2, label %bb3, !dbg !6290

bb2:                                              ; preds = %bb1
  store i32 2, i32* @errno, align 4, !dbg !6291
  store i8* null, i8** %0, align 8, !dbg !6292
  br label %bb55, !dbg !6292

bb3:                                              ; preds = %bb1
  %6 = load i8** %path_addr, align 8, !dbg !6293
  %7 = call i64 @strlen(i8* %6) nounwind readonly, !dbg !6293
  store i64 %7, i64* %path_len, align 8, !dbg !6293
  %8 = load i64* %path_len, align 8, !dbg !6294
  %9 = icmp ugt i64 %8, 4093, !dbg !6294
  br i1 %9, label %bb4, label %bb5, !dbg !6294

bb4:                                              ; preds = %bb3
  store i32 36, i32* @errno, align 4, !dbg !6295
  store i8* null, i8** %0, align 8, !dbg !6296
  br label %bb55, !dbg !6296

bb5:                                              ; preds = %bb3
  %10 = load i64* %path_len, align 8, !dbg !6297
  %11 = sub nsw i64 0, %10, !dbg !6297
  %copy_path6 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6297
  %12 = getelementptr inbounds i8* %copy_path6, i64 4095, !dbg !6297
  %13 = getelementptr inbounds i8* %12, i64 %11, !dbg !6297
  %14 = load i8** %path_addr, align 8, !dbg !6297
  %15 = call i8* @strcpy(i8* noalias %13, i8* noalias %14) nounwind, !dbg !6297
  %16 = load i64* %path_len, align 8, !dbg !6298
  %17 = sub nsw i64 0, %16, !dbg !6298
  %copy_path7 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6298
  %18 = getelementptr inbounds i8* %copy_path7, i64 4095, !dbg !6298
  %19 = getelementptr inbounds i8* %18, i64 %17, !dbg !6298
  store i8* %19, i8** %path_addr, align 8, !dbg !6298
  %20 = load i8** %got_path_addr, align 8, !dbg !6299
  %21 = getelementptr inbounds i8* %20, i64 4096, !dbg !6299
  %22 = getelementptr inbounds i8* %21, i64 -2, !dbg !6299
  store i8* %22, i8** %max_path, align 8, !dbg !6299
  %23 = load i8** %got_path_addr, align 8, !dbg !6300
  store i8* %23, i8** %new_path, align 8, !dbg !6300
  %24 = load i8** %path_addr, align 8, !dbg !6301
  %25 = load i8* %24, align 1, !dbg !6301
  %26 = icmp ne i8 %25, 47, !dbg !6301
  %27 = load i8** %new_path, align 8, !dbg !6302
  br i1 %26, label %bb8, label %bb13, !dbg !6301

bb8:                                              ; preds = %bb5
  %28 = call i8* @getcwd(i8* %27, i64 4095) nounwind, !dbg !6302
  %29 = icmp eq i8* %28, null, !dbg !6302
  br i1 %29, label %bb9, label %bb10, !dbg !6302

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8, !dbg !6303
  br label %bb55, !dbg !6303

bb10:                                             ; preds = %bb8
  %30 = load i8** %new_path, align 8, !dbg !6304
  %31 = call i64 @strlen(i8* %30) nounwind readonly, !dbg !6304
  %32 = load i8** %new_path, align 8, !dbg !6304
  %33 = getelementptr inbounds i8* %32, i64 %31, !dbg !6304
  store i8* %33, i8** %new_path, align 8, !dbg !6304
  %34 = load i8** %new_path, align 8, !dbg !6305
  %35 = getelementptr inbounds i8* %34, i64 -1, !dbg !6305
  %36 = load i8* %35, align 1, !dbg !6305
  %37 = icmp ne i8 %36, 47, !dbg !6305
  br i1 %37, label %bb11, label %bb50, !dbg !6305

bb11:                                             ; preds = %bb10
  %38 = load i8** %new_path, align 8, !dbg !6306
  store i8 47, i8* %38, align 1, !dbg !6306
  %39 = load i8** %new_path, align 8, !dbg !6306
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !6306
  store i8* %40, i8** %new_path, align 8, !dbg !6306
  br label %bb50, !dbg !6306

bb13:                                             ; preds = %bb5
  store i8 47, i8* %27, align 1, !dbg !6307
  %41 = load i8** %new_path, align 8, !dbg !6307
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !6307
  store i8* %42, i8** %new_path, align 8, !dbg !6307
  %43 = load i8** %path_addr, align 8, !dbg !6308
  %44 = getelementptr inbounds i8* %43, i64 1, !dbg !6308
  store i8* %44, i8** %path_addr, align 8, !dbg !6308
  br label %bb50, !dbg !6308

bb15:                                             ; preds = %bb50
  %45 = load i8** %path_addr, align 8, !dbg !6309
  %46 = load i8* %45, align 1, !dbg !6309
  %47 = icmp eq i8 %46, 47, !dbg !6309
  %48 = load i8** %path_addr, align 8, !dbg !6310
  br i1 %47, label %bb16, label %bb17, !dbg !6309

bb16:                                             ; preds = %bb15
  %49 = getelementptr inbounds i8* %48, i64 1, !dbg !6310
  store i8* %49, i8** %path_addr, align 8, !dbg !6310
  br label %bb50, !dbg !6310

bb17:                                             ; preds = %bb15
  %50 = load i8* %48, align 1, !dbg !6311
  %51 = icmp eq i8 %50, 46, !dbg !6311
  br i1 %51, label %bb18, label %bb31, !dbg !6311

bb18:                                             ; preds = %bb17
  %52 = load i8** %path_addr, align 8, !dbg !6312
  %53 = getelementptr inbounds i8* %52, i64 1, !dbg !6312
  %54 = load i8* %53, align 1, !dbg !6312
  %55 = icmp eq i8 %54, 0, !dbg !6312
  br i1 %55, label %bb20, label %bb19, !dbg !6312

bb19:                                             ; preds = %bb18
  %56 = load i8** %path_addr, align 8, !dbg !6312
  %57 = getelementptr inbounds i8* %56, i64 1, !dbg !6312
  %58 = load i8* %57, align 1, !dbg !6312
  %59 = icmp eq i8 %58, 47, !dbg !6312
  br i1 %59, label %bb20, label %bb21, !dbg !6312

bb20:                                             ; preds = %bb19, %bb18
  %60 = load i8** %path_addr, align 8, !dbg !6313
  %61 = getelementptr inbounds i8* %60, i64 1, !dbg !6313
  store i8* %61, i8** %path_addr, align 8, !dbg !6313
  br label %bb50, !dbg !6313

bb21:                                             ; preds = %bb19
  %62 = load i8** %path_addr, align 8, !dbg !6314
  %63 = getelementptr inbounds i8* %62, i64 1, !dbg !6314
  %64 = load i8* %63, align 1, !dbg !6314
  %65 = icmp eq i8 %64, 46, !dbg !6314
  br i1 %65, label %bb22, label %bb31, !dbg !6314

bb22:                                             ; preds = %bb21
  %66 = load i8** %path_addr, align 8, !dbg !6315
  %67 = getelementptr inbounds i8* %66, i64 2, !dbg !6315
  %68 = load i8* %67, align 1, !dbg !6315
  %69 = icmp eq i8 %68, 0, !dbg !6315
  br i1 %69, label %bb24, label %bb23, !dbg !6315

bb23:                                             ; preds = %bb22
  %70 = load i8** %path_addr, align 8, !dbg !6315
  %71 = getelementptr inbounds i8* %70, i64 2, !dbg !6315
  %72 = load i8* %71, align 1, !dbg !6315
  %73 = icmp eq i8 %72, 47, !dbg !6315
  br i1 %73, label %bb24, label %bb31, !dbg !6315

bb24:                                             ; preds = %bb23, %bb22
  %74 = load i8** %path_addr, align 8, !dbg !6316
  %75 = getelementptr inbounds i8* %74, i64 2, !dbg !6316
  store i8* %75, i8** %path_addr, align 8, !dbg !6316
  %76 = load i8** %got_path_addr, align 8, !dbg !6317
  %77 = getelementptr inbounds i8* %76, i64 1, !dbg !6317
  %78 = load i8** %new_path, align 8, !dbg !6317
  %79 = icmp eq i8* %77, %78, !dbg !6317
  br i1 %79, label %bb50, label %bb25, !dbg !6317

bb25:                                             ; preds = %bb25, %bb24
  %80 = load i8** %new_path, align 8, !dbg !6318
  %81 = getelementptr inbounds i8* %80, i64 -1, !dbg !6318
  store i8* %81, i8** %new_path, align 8, !dbg !6318
  %82 = load i8** %new_path, align 8, !dbg !6318
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !6318
  %84 = load i8* %83, align 1, !dbg !6318
  %85 = icmp ne i8 %84, 47, !dbg !6318
  br i1 %85, label %bb25, label %bb50, !dbg !6318

bb28:                                             ; preds = %bb32
  %86 = load i8** %new_path, align 8, !dbg !6319
  %87 = load i8** %max_path, align 8, !dbg !6319
  %88 = icmp ugt i8* %86, %87, !dbg !6319
  br i1 %88, label %bb29, label %bb30, !dbg !6319

bb29:                                             ; preds = %bb28
  store i32 36, i32* @errno, align 4, !dbg !6320
  store i8* null, i8** %0, align 8, !dbg !6321
  br label %bb55, !dbg !6321

bb30:                                             ; preds = %bb28
  %89 = load i8** %path_addr, align 8, !dbg !6322
  %90 = load i8* %89, align 1, !dbg !6322
  %91 = load i8** %new_path, align 8, !dbg !6322
  store i8 %90, i8* %91, align 1, !dbg !6322
  %92 = load i8** %new_path, align 8, !dbg !6322
  %93 = getelementptr inbounds i8* %92, i64 1, !dbg !6322
  store i8* %93, i8** %new_path, align 8, !dbg !6322
  %94 = load i8** %path_addr, align 8, !dbg !6322
  %95 = getelementptr inbounds i8* %94, i64 1, !dbg !6322
  store i8* %95, i8** %path_addr, align 8, !dbg !6322
  br label %bb31, !dbg !6322

bb31:                                             ; preds = %bb17, %bb21, %bb23, %bb30
  %96 = load i8** %path_addr, align 8, !dbg !6323
  %97 = load i8* %96, align 1, !dbg !6323
  %98 = icmp eq i8 %97, 0, !dbg !6323
  br i1 %98, label %bb33, label %bb32, !dbg !6323

bb32:                                             ; preds = %bb31
  %99 = load i8** %path_addr, align 8, !dbg !6323
  %100 = load i8* %99, align 1, !dbg !6323
  %101 = icmp ne i8 %100, 47, !dbg !6323
  br i1 %101, label %bb28, label %bb33, !dbg !6323

bb33:                                             ; preds = %bb32, %bb31
  %102 = load i32* %readlinks, align 4, !dbg !6324
  %103 = icmp sgt i32 %102, 32, !dbg !6324
  %104 = zext i1 %103 to i8, !dbg !6324
  %105 = load i32* %readlinks, align 4, !dbg !6324
  %106 = add nsw i32 %105, 1, !dbg !6324
  store i32 %106, i32* %readlinks, align 4, !dbg !6324
  %toBool = icmp ne i8 %104, 0, !dbg !6324
  br i1 %toBool, label %bb34, label %bb35, !dbg !6324

bb34:                                             ; preds = %bb33
  store i32 40, i32* @errno, align 4, !dbg !6325
  store i8* null, i8** %0, align 8, !dbg !6326
  br label %bb55, !dbg !6326

bb35:                                             ; preds = %bb33
  %107 = load i8** %path_addr, align 8, !dbg !6327
  %108 = call i64 @strlen(i8* %107) nounwind readonly, !dbg !6327
  store i64 %108, i64* %path_len, align 8, !dbg !6327
  %109 = load i8** %new_path, align 8, !dbg !6328
  store i8 0, i8* %109, align 1, !dbg !6328
  %110 = load i8** %got_path_addr, align 8, !dbg !6329
  %copy_path36 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6329
  %111 = call i64 @readlink(i8* noalias %110, i8* noalias %copy_path36, i64 4095) nounwind, !dbg !6329
  %112 = trunc i64 %111 to i32, !dbg !6329
  store i32 %112, i32* %link_len, align 4, !dbg !6329
  %113 = load i32* %link_len, align 4, !dbg !6330
  %114 = icmp slt i32 %113, 0, !dbg !6330
  br i1 %114, label %bb37, label %bb40, !dbg !6330

bb37:                                             ; preds = %bb35
  %115 = load i32* @errno, align 4, !dbg !6331
  %116 = icmp ne i32 %115, 22, !dbg !6331
  br i1 %116, label %bb38, label %bb49, !dbg !6331

bb38:                                             ; preds = %bb37
  store i8* null, i8** %0, align 8, !dbg !6332
  br label %bb55, !dbg !6332

bb40:                                             ; preds = %bb35
  %117 = load i32* %link_len, align 4, !dbg !6333
  %118 = sext i32 %117 to i64, !dbg !6333
  %119 = load i64* %path_len, align 8, !dbg !6333
  %120 = add i64 %118, %119, !dbg !6333
  %121 = icmp ugt i64 %120, 4093, !dbg !6333
  br i1 %121, label %bb41, label %bb42, !dbg !6333

bb41:                                             ; preds = %bb40
  store i32 36, i32* @errno, align 4, !dbg !6334
  store i8* null, i8** %0, align 8, !dbg !6335
  br label %bb55, !dbg !6335

bb42:                                             ; preds = %bb40
  %122 = getelementptr inbounds [4096 x i8]* %copy_path, i64 0, i64 0, !dbg !6336
  %123 = load i8* %122, align 1, !dbg !6336
  %124 = icmp eq i8 %123, 47, !dbg !6336
  br i1 %124, label %bb43, label %bb44, !dbg !6336

bb43:                                             ; preds = %bb42
  %125 = load i8** %got_path_addr, align 8, !dbg !6337
  store i8* %125, i8** %new_path, align 8, !dbg !6337
  br label %bb45, !dbg !6337

bb44:                                             ; preds = %bb44, %bb42
  %126 = load i8** %new_path, align 8, !dbg !6338
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6338
  store i8* %127, i8** %new_path, align 8, !dbg !6338
  %128 = load i8** %new_path, align 8, !dbg !6338
  %129 = load i8* %128, align 1, !dbg !6338
  %130 = icmp ne i8 %129, 47, !dbg !6338
  br i1 %130, label %bb44, label %bb45, !dbg !6338

bb45:                                             ; preds = %bb44, %bb43
  %131 = load i32* %link_len, align 4, !dbg !6339
  %132 = sext i32 %131 to i64, !dbg !6339
  %133 = load i32* %link_len, align 4, !dbg !6339
  %134 = sext i32 %133 to i64, !dbg !6339
  %135 = sub nsw i64 0, %134, !dbg !6339
  %copy_path46 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6339
  %136 = getelementptr inbounds i8* %copy_path46, i64 4095, !dbg !6339
  %137 = getelementptr inbounds i8* %136, i64 %135, !dbg !6339
  %138 = load i64* %path_len, align 8, !dbg !6339
  %139 = sub nsw i64 0, %138, !dbg !6339
  %140 = getelementptr inbounds i8* %137, i64 %139, !dbg !6339
  %copy_path47 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6339
  %141 = call i8* @memmove(i8* %140, i8* %copy_path47, i64 %132) nounwind, !dbg !6339
  %142 = load i32* %link_len, align 4, !dbg !6340
  %143 = sext i32 %142 to i64, !dbg !6340
  %144 = sub nsw i64 0, %143, !dbg !6340
  %copy_path48 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6340
  %145 = getelementptr inbounds i8* %copy_path48, i64 4095, !dbg !6340
  %146 = getelementptr inbounds i8* %145, i64 %144, !dbg !6340
  %147 = load i64* %path_len, align 8, !dbg !6340
  %148 = sub nsw i64 0, %147, !dbg !6340
  %149 = getelementptr inbounds i8* %146, i64 %148, !dbg !6340
  store i8* %149, i8** %path_addr, align 8, !dbg !6340
  br label %bb49, !dbg !6340

bb49:                                             ; preds = %bb37, %bb45
  %150 = load i8** %new_path, align 8, !dbg !6341
  store i8 47, i8* %150, align 1, !dbg !6341
  %151 = load i8** %new_path, align 8, !dbg !6341
  %152 = getelementptr inbounds i8* %151, i64 1, !dbg !6341
  store i8* %152, i8** %new_path, align 8, !dbg !6341
  br label %bb50, !dbg !6341

bb50:                                             ; preds = %bb25, %bb13, %bb11, %bb10, %bb49, %bb24, %bb20, %bb16
  %153 = load i8** %path_addr, align 8, !dbg !6342
  %154 = load i8* %153, align 1, !dbg !6342
  %155 = icmp ne i8 %154, 0, !dbg !6342
  br i1 %155, label %bb15, label %bb51, !dbg !6342

bb51:                                             ; preds = %bb50
  %156 = load i8** %got_path_addr, align 8, !dbg !6343
  %157 = getelementptr inbounds i8* %156, i64 1, !dbg !6343
  %158 = load i8** %new_path, align 8, !dbg !6343
  %159 = icmp ne i8* %157, %158, !dbg !6343
  br i1 %159, label %bb52, label %bb54, !dbg !6343

bb52:                                             ; preds = %bb51
  %160 = load i8** %new_path, align 8, !dbg !6343
  %161 = getelementptr inbounds i8* %160, i64 -1, !dbg !6343
  %162 = load i8* %161, align 1, !dbg !6343
  %163 = icmp eq i8 %162, 47, !dbg !6343
  br i1 %163, label %bb53, label %bb54, !dbg !6343

bb53:                                             ; preds = %bb52
  %164 = load i8** %new_path, align 8, !dbg !6344
  %165 = getelementptr inbounds i8* %164, i64 -1, !dbg !6344
  store i8* %165, i8** %new_path, align 8, !dbg !6344
  br label %bb54, !dbg !6344

bb54:                                             ; preds = %bb53, %bb52, %bb51
  %166 = load i8** %new_path, align 8, !dbg !6345
  store i8 0, i8* %166, align 1, !dbg !6345
  %167 = load i8** %got_path_addr, align 8, !dbg !6346
  store i8* %167, i8** %0, align 8, !dbg !6346
  br label %bb55, !dbg !6346

bb55:                                             ; preds = %bb54, %bb41, %bb38, %bb34, %bb29, %bb9, %bb4, %bb2, %bb
  %168 = load i8** %0, align 8, !dbg !6289
  store i8* %168, i8** %retval, align 8, !dbg !6289
  %retval56 = load i8** %retval, !dbg !6289
  ret i8* %retval56, !dbg !6289
}

define i8* @setlocale(i32 %category, i8* %locale) nounwind {
entry:
  %category_addr = alloca i32, align 4
  %locale_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.0 = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %category, i32* %category_addr
  store i8* %locale, i8** %locale_addr
  %1 = load i32* %category_addr, align 4, !dbg !6347
  %2 = icmp ugt i32 %1, 6, !dbg !6347
  br i1 %2, label %bb6, label %bb, !dbg !6347

bb:                                               ; preds = %entry
  %3 = load i8** %locale_addr, align 8, !dbg !6347
  %4 = icmp eq i8* %3, null, !dbg !6347
  br i1 %4, label %bb5, label %bb1, !dbg !6347

bb1:                                              ; preds = %bb
  %5 = load i8** %locale_addr, align 8, !dbg !6347
  %6 = load i8* %5, align 1, !dbg !6347
  %7 = icmp eq i8 %6, 0, !dbg !6347
  br i1 %7, label %bb5, label %bb2, !dbg !6347

bb2:                                              ; preds = %bb1
  %8 = load i8** %locale_addr, align 8, !dbg !6347
  %9 = load i8* %8, align 1, !dbg !6347
  %10 = icmp ne i8 %9, 67, !dbg !6347
  br i1 %10, label %bb4, label %bb3, !dbg !6347

bb3:                                              ; preds = %bb2
  %11 = load i8** %locale_addr, align 8, !dbg !6347
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6347
  %13 = load i8* %12, align 1, !dbg !6347
  %14 = icmp eq i8 %13, 0, !dbg !6347
  br i1 %14, label %bb5, label %bb4, !dbg !6347

bb4:                                              ; preds = %bb3, %bb2
  %15 = load i8** %locale_addr, align 8, !dbg !6347
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8]* @.str177, i64 0, i64 0)) nounwind readonly, !dbg !6347
  %17 = icmp eq i32 %16, 0, !dbg !6347
  br i1 %17, label %bb5, label %bb6, !dbg !6347

bb5:                                              ; preds = %bb4, %bb3, %bb1, %bb
  store i8* getelementptr inbounds ([2 x i8]* @C_string, i64 0, i64 0), i8** %iftmp.0, align 8, !dbg !6347
  br label %bb7, !dbg !6347

bb6:                                              ; preds = %bb4, %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !6347
  br label %bb7, !dbg !6347

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i8** %iftmp.0, align 8, !dbg !6347
  store i8* %18, i8** %0, align 8, !dbg !6347
  %19 = load i8** %0, align 8, !dbg !6347
  store i8* %19, i8** %retval, align 8, !dbg !6347
  %retval8 = load i8** %retval, !dbg !6347
  ret i8* %retval8, !dbg !6347
}

define i32 @sprintf(i8* noalias %buf, i8* noalias %format, ...) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6349
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !6349
  call void @llvm.va_start(i8* %arg12), !dbg !6349
  %1 = load i8** %buf_addr, align 8, !dbg !6351
  %2 = load i8** %format_addr, align 8, !dbg !6351
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6351
  %3 = call i32 @vsnprintf(i8* noalias %1, i64 -1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !6351
  store i32 %3, i32* %rv, align 4, !dbg !6351
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6352
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !6352
  call void @llvm.va_end(i8* %arg45), !dbg !6352
  %4 = load i32* %rv, align 4, !dbg !6353
  store i32 %4, i32* %0, align 4, !dbg !6353
  %5 = load i32* %0, align 4, !dbg !6353
  store i32 %5, i32* %retval, align 4, !dbg !6353
  %retval6 = load i32* %retval, !dbg !6353
  ret i32 %retval6, !dbg !6353
}

define i32 @sscanf(i8* noalias %str, i8* noalias %format, ...) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6354
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !6354
  call void @llvm.va_start(i8* %arg12), !dbg !6354
  %1 = load i8** %str_addr, align 8, !dbg !6356
  %2 = load i8** %format_addr, align 8, !dbg !6356
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6356
  %3 = call i32 @vsscanf(i8* noalias %1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !6356
  store i32 %3, i32* %rv, align 4, !dbg !6356
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6357
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !6357
  call void @llvm.va_end(i8* %arg45), !dbg !6357
  %4 = load i32* %rv, align 4, !dbg !6358
  store i32 %4, i32* %0, align 4, !dbg !6358
  %5 = load i32* %0, align 4, !dbg !6358
  store i32 %5, i32* %retval, align 4, !dbg !6358
  %retval6 = load i32* %retval, !dbg !6358
  ret i32 %retval6, !dbg !6358
}

define i32 @statvfs(i8* %file, %struct.statvfs* %buf) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %buf_addr = alloca %struct.statvfs*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fsbuf = alloca %9
  %st = alloca %8
  %save_errno = alloca i32
  %mntbuf = alloca %struct.mntent
  %mtab = alloca %struct.FILE*
  %tmpbuf = alloca [1024 x i8]
  %fsst = alloca %8
  %cp = alloca i8*
  %opt = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.statvfs* %buf, %struct.statvfs** %buf_addr
  %1 = load i8** %file_addr, align 8, !dbg !6359
  %2 = call i32 bitcast (i32 (i8*, %struct.statfs*)* @statfs to i32 (i8*, %9*)*)(i8* %1, %9* %fsbuf) nounwind, !dbg !6359
  %3 = icmp slt i32 %2, 0, !dbg !6359
  br i1 %3, label %bb, label %bb1, !dbg !6359

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4, !dbg !6361
  br label %bb32, !dbg !6361

bb1:                                              ; preds = %entry
  %4 = getelementptr inbounds %9* %fsbuf, i32 0, i32 1, !dbg !6362
  %5 = load i64* %4, align 8, !dbg !6362
  %6 = load %struct.statvfs** %buf_addr, align 8, !dbg !6362
  %7 = getelementptr inbounds %struct.statvfs* %6, i32 0, i32 0, !dbg !6362
  store i64 %5, i64* %7, align 8, !dbg !6362
  %8 = getelementptr inbounds %9* %fsbuf, i32 0, i32 1, !dbg !6363
  %9 = load i64* %8, align 8, !dbg !6363
  %10 = load %struct.statvfs** %buf_addr, align 8, !dbg !6363
  %11 = getelementptr inbounds %struct.statvfs* %10, i32 0, i32 1, !dbg !6363
  store i64 %9, i64* %11, align 8, !dbg !6363
  %12 = getelementptr inbounds %9* %fsbuf, i32 0, i32 2, !dbg !6364
  %13 = load i64* %12, align 8, !dbg !6364
  %14 = load %struct.statvfs** %buf_addr, align 8, !dbg !6364
  %15 = getelementptr inbounds %struct.statvfs* %14, i32 0, i32 2, !dbg !6364
  store i64 %13, i64* %15, align 8, !dbg !6364
  %16 = getelementptr inbounds %9* %fsbuf, i32 0, i32 3, !dbg !6365
  %17 = load i64* %16, align 8, !dbg !6365
  %18 = load %struct.statvfs** %buf_addr, align 8, !dbg !6365
  %19 = getelementptr inbounds %struct.statvfs* %18, i32 0, i32 3, !dbg !6365
  store i64 %17, i64* %19, align 8, !dbg !6365
  %20 = getelementptr inbounds %9* %fsbuf, i32 0, i32 4, !dbg !6366
  %21 = load i64* %20, align 8, !dbg !6366
  %22 = load %struct.statvfs** %buf_addr, align 8, !dbg !6366
  %23 = getelementptr inbounds %struct.statvfs* %22, i32 0, i32 4, !dbg !6366
  store i64 %21, i64* %23, align 8, !dbg !6366
  %24 = getelementptr inbounds %9* %fsbuf, i32 0, i32 5, !dbg !6367
  %25 = load i64* %24, align 8, !dbg !6367
  %26 = load %struct.statvfs** %buf_addr, align 8, !dbg !6367
  %27 = getelementptr inbounds %struct.statvfs* %26, i32 0, i32 5, !dbg !6367
  store i64 %25, i64* %27, align 8, !dbg !6367
  %28 = getelementptr inbounds %9* %fsbuf, i32 0, i32 6, !dbg !6368
  %29 = load i64* %28, align 8, !dbg !6368
  %30 = load %struct.statvfs** %buf_addr, align 8, !dbg !6368
  %31 = getelementptr inbounds %struct.statvfs* %30, i32 0, i32 6, !dbg !6368
  store i64 %29, i64* %31, align 8, !dbg !6368
  %32 = getelementptr inbounds %9* %fsbuf, i32 0, i32 7, !dbg !6369
  %33 = getelementptr inbounds %struct.__fsid_t* %32, i32 0, i32 0, !dbg !6369
  %34 = getelementptr inbounds [2 x i32]* %33, i64 0, i64 0, !dbg !6369
  %35 = load i32* %34, align 4, !dbg !6369
  %36 = sext i32 %35 to i64, !dbg !6369
  %37 = getelementptr inbounds %9* %fsbuf, i32 0, i32 7, !dbg !6369
  %38 = getelementptr inbounds %struct.__fsid_t* %37, i32 0, i32 0, !dbg !6369
  %39 = getelementptr inbounds [2 x i32]* %38, i64 0, i64 1, !dbg !6369
  %40 = load i32* %39, align 4, !dbg !6369
  %41 = sext i32 %40 to i64, !dbg !6369
  %int_cast_to_i64 = bitcast i64 32 to i64
  %42 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %42, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb1
  %43 = shl i64 %41, 32, !dbg !6369
  %44 = or i64 %36, %43, !dbg !6369
  %45 = load %struct.statvfs** %buf_addr, align 8, !dbg !6369
  %46 = getelementptr inbounds %struct.statvfs* %45, i32 0, i32 8, !dbg !6369
  store i64 %44, i64* %46, align 8, !dbg !6369
  %47 = getelementptr inbounds %9* %fsbuf, i32 0, i32 8, !dbg !6370
  %48 = load i64* %47, align 8, !dbg !6370
  %49 = load %struct.statvfs** %buf_addr, align 8, !dbg !6370
  %50 = getelementptr inbounds %struct.statvfs* %49, i32 0, i32 10, !dbg !6370
  store i64 %48, i64* %50, align 8, !dbg !6370
  %51 = load %struct.statvfs** %buf_addr, align 8, !dbg !6371
  %52 = getelementptr inbounds %struct.statvfs* %51, i32 0, i32 11, !dbg !6371
  %53 = getelementptr inbounds [6 x i32]* %52, i64 0, i64 0, !dbg !6371
  %54 = bitcast i32* %53 to i8*, !dbg !6371
  %55 = call i8* @memset(i8* %54, i32 0, i64 24) nounwind, !dbg !6371
  %56 = load %struct.statvfs** %buf_addr, align 8, !dbg !6361
  %57 = getelementptr inbounds %struct.statvfs* %56, i32 0, i32 6, !dbg !6361
  %58 = load i64* %57, align 8, !dbg !6361
  %59 = load %struct.statvfs** %buf_addr, align 8, !dbg !6361
  %60 = getelementptr inbounds %struct.statvfs* %59, i32 0, i32 7, !dbg !6361
  store i64 %58, i64* %60, align 8, !dbg !6361
  %61 = load %struct.statvfs** %buf_addr, align 8, !dbg !6372
  %62 = getelementptr inbounds %struct.statvfs* %61, i32 0, i32 9, !dbg !6372
  store i64 0, i64* %62, align 8, !dbg !6372
  %63 = load i8** %file_addr, align 8, !dbg !6373
  %64 = call i32 bitcast (i32 (i8*, %struct.stat*)* @stat to i32 (i8*, %8*)*)(i8* noalias %63, %8* noalias %st) nounwind, !dbg !6373
  %65 = icmp sge i32 %64, 0, !dbg !6373
  br i1 %65, label %bb2, label %bb31, !dbg !6373

bb2:                                              ; preds = %klee_overshift_check.exit
  %66 = load i32* @errno, align 4, !dbg !6374
  store i32 %66, i32* %save_errno, align 4, !dbg !6374
  %67 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* getelementptr inbounds ([13 x i8]* @.str181, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str1182, i64 0, i64 0)) nounwind, !dbg !6377
  store %struct.FILE* %67, %struct.FILE** %mtab, align 8, !dbg !6377
  %68 = load %struct.FILE** %mtab, align 8, !dbg !6378
  %69 = icmp eq %struct.FILE* %68, null, !dbg !6378
  br i1 %69, label %bb3, label %bb4, !dbg !6378

bb3:                                              ; preds = %bb2
  %70 = call %struct.FILE* bitcast (%4* (i8*, i8*)* @setmntent to %struct.FILE* (i8*, i8*)*)(i8* getelementptr inbounds ([10 x i8]* @.str2183, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8]* @.str1182, i64 0, i64 0)) nounwind, !dbg !6379
  store %struct.FILE* %70, %struct.FILE** %mtab, align 8, !dbg !6379
  br label %bb4, !dbg !6379

bb4:                                              ; preds = %bb3, %bb2
  %71 = load %struct.FILE** %mtab, align 8, !dbg !6380
  %72 = icmp ne %struct.FILE* %71, null, !dbg !6380
  br i1 %72, label %bb27, label %bb30, !dbg !6380

bb6:                                              ; preds = %bb27
  %73 = getelementptr inbounds %struct.mntent* %mntbuf, i32 0, i32 1, !dbg !6381
  %74 = load i8** %73, align 8, !dbg !6381
  %75 = call i32 bitcast (i32 (i8*, %struct.stat*)* @stat to i32 (i8*, %8*)*)(i8* noalias %74, %8* noalias %fsst) nounwind, !dbg !6381
  %76 = icmp sge i32 %75, 0, !dbg !6381
  br i1 %76, label %bb7, label %bb27, !dbg !6381

bb7:                                              ; preds = %bb6
  %77 = getelementptr inbounds %8* %st, i32 0, i32 0, !dbg !6381
  %78 = load i64* %77, align 8, !dbg !6381
  %79 = getelementptr inbounds %8* %fsst, i32 0, i32 0, !dbg !6381
  %80 = load i64* %79, align 8, !dbg !6381
  %81 = icmp eq i64 %78, %80, !dbg !6381
  br i1 %81, label %bb8, label %bb27, !dbg !6381

bb8:                                              ; preds = %bb7
  %82 = getelementptr inbounds %struct.mntent* %mntbuf, i32 0, i32 3, !dbg !6384
  %83 = load i8** %82, align 8, !dbg !6384
  store i8* %83, i8** %cp, align 8, !dbg !6384
  br label %bb25, !dbg !6384

bb9:                                              ; preds = %bb25
  %84 = load i8** %opt, align 8, !dbg !6386
  %85 = call i32 @strcmp(i8* %84, i8* getelementptr inbounds ([3 x i8]* @.str3184, i64 0, i64 0)) nounwind readonly, !dbg !6386
  %86 = icmp eq i32 %85, 0, !dbg !6386
  br i1 %86, label %bb10, label %bb11, !dbg !6386

bb10:                                             ; preds = %bb9
  %87 = load %struct.statvfs** %buf_addr, align 8, !dbg !6387
  %88 = getelementptr inbounds %struct.statvfs* %87, i32 0, i32 9, !dbg !6387
  %89 = load i64* %88, align 8, !dbg !6387
  %90 = or i64 %89, 1, !dbg !6387
  %91 = load %struct.statvfs** %buf_addr, align 8, !dbg !6387
  %92 = getelementptr inbounds %struct.statvfs* %91, i32 0, i32 9, !dbg !6387
  store i64 %90, i64* %92, align 8, !dbg !6387
  br label %bb25, !dbg !6387

bb11:                                             ; preds = %bb9
  %93 = load i8** %opt, align 8, !dbg !6388
  %94 = call i32 @strcmp(i8* %93, i8* getelementptr inbounds ([7 x i8]* @.str4185, i64 0, i64 0)) nounwind readonly, !dbg !6388
  %95 = icmp eq i32 %94, 0, !dbg !6388
  br i1 %95, label %bb12, label %bb13, !dbg !6388

bb12:                                             ; preds = %bb11
  %96 = load %struct.statvfs** %buf_addr, align 8, !dbg !6389
  %97 = getelementptr inbounds %struct.statvfs* %96, i32 0, i32 9, !dbg !6389
  %98 = load i64* %97, align 8, !dbg !6389
  %99 = or i64 %98, 2, !dbg !6389
  %100 = load %struct.statvfs** %buf_addr, align 8, !dbg !6389
  %101 = getelementptr inbounds %struct.statvfs* %100, i32 0, i32 9, !dbg !6389
  store i64 %99, i64* %101, align 8, !dbg !6389
  br label %bb25, !dbg !6389

bb13:                                             ; preds = %bb11
  %102 = load i8** %opt, align 8, !dbg !6390
  %103 = call i32 @strcmp(i8* %102, i8* getelementptr inbounds ([7 x i8]* @.str5186, i64 0, i64 0)) nounwind readonly, !dbg !6390
  %104 = icmp eq i32 %103, 0, !dbg !6390
  br i1 %104, label %bb14, label %bb15, !dbg !6390

bb14:                                             ; preds = %bb13
  %105 = load %struct.statvfs** %buf_addr, align 8, !dbg !6391
  %106 = getelementptr inbounds %struct.statvfs* %105, i32 0, i32 9, !dbg !6391
  %107 = load i64* %106, align 8, !dbg !6391
  %108 = or i64 %107, 8, !dbg !6391
  %109 = load %struct.statvfs** %buf_addr, align 8, !dbg !6391
  %110 = getelementptr inbounds %struct.statvfs* %109, i32 0, i32 9, !dbg !6391
  store i64 %108, i64* %110, align 8, !dbg !6391
  br label %bb25, !dbg !6391

bb15:                                             ; preds = %bb13
  %111 = load i8** %opt, align 8, !dbg !6392
  %112 = call i32 @strcmp(i8* %111, i8* getelementptr inbounds ([6 x i8]* @.str6187, i64 0, i64 0)) nounwind readonly, !dbg !6392
  %113 = icmp eq i32 %112, 0, !dbg !6392
  br i1 %113, label %bb16, label %bb17, !dbg !6392

bb16:                                             ; preds = %bb15
  %114 = load %struct.statvfs** %buf_addr, align 8, !dbg !6393
  %115 = getelementptr inbounds %struct.statvfs* %114, i32 0, i32 9, !dbg !6393
  %116 = load i64* %115, align 8, !dbg !6393
  %117 = or i64 %116, 4, !dbg !6393
  %118 = load %struct.statvfs** %buf_addr, align 8, !dbg !6393
  %119 = getelementptr inbounds %struct.statvfs* %118, i32 0, i32 9, !dbg !6393
  store i64 %117, i64* %119, align 8, !dbg !6393
  br label %bb25, !dbg !6393

bb17:                                             ; preds = %bb15
  %120 = load i8** %opt, align 8, !dbg !6394
  %121 = call i32 @strcmp(i8* %120, i8* getelementptr inbounds ([5 x i8]* @.str7188, i64 0, i64 0)) nounwind readonly, !dbg !6394
  %122 = icmp eq i32 %121, 0, !dbg !6394
  br i1 %122, label %bb18, label %bb19, !dbg !6394

bb18:                                             ; preds = %bb17
  %123 = load %struct.statvfs** %buf_addr, align 8, !dbg !6395
  %124 = getelementptr inbounds %struct.statvfs* %123, i32 0, i32 9, !dbg !6395
  %125 = load i64* %124, align 8, !dbg !6395
  %126 = or i64 %125, 16, !dbg !6395
  %127 = load %struct.statvfs** %buf_addr, align 8, !dbg !6395
  %128 = getelementptr inbounds %struct.statvfs* %127, i32 0, i32 9, !dbg !6395
  store i64 %126, i64* %128, align 8, !dbg !6395
  br label %bb25, !dbg !6395

bb19:                                             ; preds = %bb17
  %129 = load i8** %opt, align 8, !dbg !6396
  %130 = call i32 @strcmp(i8* %129, i8* getelementptr inbounds ([5 x i8]* @.str8189, i64 0, i64 0)) nounwind readonly, !dbg !6396
  %131 = icmp eq i32 %130, 0, !dbg !6396
  br i1 %131, label %bb20, label %bb21, !dbg !6396

bb20:                                             ; preds = %bb19
  %132 = load %struct.statvfs** %buf_addr, align 8, !dbg !6397
  %133 = getelementptr inbounds %struct.statvfs* %132, i32 0, i32 9, !dbg !6397
  %134 = load i64* %133, align 8, !dbg !6397
  %135 = or i64 %134, 64, !dbg !6397
  %136 = load %struct.statvfs** %buf_addr, align 8, !dbg !6397
  %137 = getelementptr inbounds %struct.statvfs* %136, i32 0, i32 9, !dbg !6397
  store i64 %135, i64* %137, align 8, !dbg !6397
  br label %bb25, !dbg !6397

bb21:                                             ; preds = %bb19
  %138 = load i8** %opt, align 8, !dbg !6398
  %139 = call i32 @strcmp(i8* %138, i8* getelementptr inbounds ([8 x i8]* @.str9190, i64 0, i64 0)) nounwind readonly, !dbg !6398
  %140 = icmp eq i32 %139, 0, !dbg !6398
  br i1 %140, label %bb22, label %bb23, !dbg !6398

bb22:                                             ; preds = %bb21
  %141 = load %struct.statvfs** %buf_addr, align 8, !dbg !6399
  %142 = getelementptr inbounds %struct.statvfs* %141, i32 0, i32 9, !dbg !6399
  %143 = load i64* %142, align 8, !dbg !6399
  %144 = or i64 %143, 1024, !dbg !6399
  %145 = load %struct.statvfs** %buf_addr, align 8, !dbg !6399
  %146 = getelementptr inbounds %struct.statvfs* %145, i32 0, i32 9, !dbg !6399
  store i64 %144, i64* %146, align 8, !dbg !6399
  br label %bb25, !dbg !6399

bb23:                                             ; preds = %bb21
  %147 = load i8** %opt, align 8, !dbg !6400
  %148 = call i32 @strcmp(i8* %147, i8* getelementptr inbounds ([11 x i8]* @.str10191, i64 0, i64 0)) nounwind readonly, !dbg !6400
  %149 = icmp eq i32 %148, 0, !dbg !6400
  br i1 %149, label %bb24, label %bb25, !dbg !6400

bb24:                                             ; preds = %bb23
  %150 = load %struct.statvfs** %buf_addr, align 8, !dbg !6401
  %151 = getelementptr inbounds %struct.statvfs* %150, i32 0, i32 9, !dbg !6401
  %152 = load i64* %151, align 8, !dbg !6401
  %153 = or i64 %152, 2048, !dbg !6401
  %154 = load %struct.statvfs** %buf_addr, align 8, !dbg !6401
  %155 = getelementptr inbounds %struct.statvfs* %154, i32 0, i32 9, !dbg !6401
  store i64 %153, i64* %155, align 8, !dbg !6401
  br label %bb25, !dbg !6401

bb25:                                             ; preds = %bb24, %bb23, %bb22, %bb20, %bb18, %bb16, %bb14, %bb12, %bb10, %bb8
  %156 = call i8* @strsep(i8** noalias %cp, i8* noalias getelementptr inbounds ([2 x i8]* @.str11192, i64 0, i64 0)) nounwind, !dbg !6402
  store i8* %156, i8** %opt, align 8, !dbg !6402
  %157 = load i8** %opt, align 8, !dbg !6402
  %158 = icmp ne i8* %157, null, !dbg !6402
  br i1 %158, label %bb9, label %bb29, !dbg !6402

bb27:                                             ; preds = %bb4, %bb7, %bb6
  %159 = load %struct.FILE** %mtab, align 8, !dbg !6403
  %tmpbuf28 = bitcast [1024 x i8]* %tmpbuf to i8*, !dbg !6403
  %160 = call %struct.mntent* bitcast (%struct.mntent* (%4*, %struct.mntent*, i8*, i32)* @getmntent_r to %struct.mntent* (%struct.FILE*, %struct.mntent*, i8*, i32)*)(%struct.FILE* noalias %159, %struct.mntent* noalias %mntbuf, i8* noalias %tmpbuf28, i32 
  %161 = icmp ne %struct.mntent* %160, null, !dbg !6403
  br i1 %161, label %bb6, label %bb29, !dbg !6403

bb29:                                             ; preds = %bb25, %bb27
  %162 = load %struct.FILE** %mtab, align 8, !dbg !6404
  %163 = call i32 bitcast (i32 (%4*)* @endmntent to i32 (%struct.FILE*)*)(%struct.FILE* %162) nounwind, !dbg !6404
  br label %bb30, !dbg !6404

bb30:                                             ; preds = %bb29, %bb4
  %164 = load i32* %save_errno, align 4, !dbg !6405
  store i32 %164, i32* @errno, align 4, !dbg !6405
  br label %bb31, !dbg !6405

bb31:                                             ; preds = %bb30, %klee_overshift_check.exit
  store i32 0, i32* %0, align 4, !dbg !6372
  br label %bb32, !dbg !6372

bb32:                                             ; preds = %bb31, %bb
  %165 = load i32* %0, align 4, !dbg !6361
  store i32 %165, i32* %retval, align 4, !dbg !6361
  %retval33 = load i32* %retval, !dbg !6361
  ret i32 %retval33, !dbg !6361
}

define hidden void @_stdio_term() nounwind {
entry:
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %4** @_stdio_openlist, align 8, !dbg !6406
  store %4* %0, %4** %ptr, align 8, !dbg !6406
  br label %bb3, !dbg !6406

bb:                                               ; preds = %bb3
  %1 = load %4** %ptr, align 8, !dbg !6408
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6408
  %3 = load i16* %2, align 8, !dbg !6408
  %4 = zext i16 %3 to i32, !dbg !6408
  %5 = and i32 %4, 64, !dbg !6408
  %6 = icmp ne i32 %5, 0, !dbg !6408
  br i1 %6, label %bb1, label %bb2, !dbg !6408

bb1:                                              ; preds = %bb
  %7 = load %4** %ptr, align 8, !dbg !6409
  %8 = call i64 @__stdio_wcommit(%4* noalias %7) nounwind, !dbg !6409
  br label %bb2, !dbg !6409

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %ptr, align 8, !dbg !6406
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !6406
  %11 = load %4** %10, align 8, !dbg !6406
  store %4* %11, %4** %ptr, align 8, !dbg !6406
  br label %bb3, !dbg !6406

bb3:                                              ; preds = %bb2, %entry
  %12 = load %4** %ptr, align 8, !dbg !6406
  %13 = icmp ne %4* %12, null, !dbg !6406
  br i1 %13, label %bb, label %return, !dbg !6406

return:                                           ; preds = %bb3
  ret void, !dbg !6410
}

define hidden void @_stdio_init() nounwind {
entry:
  %old_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @errno, align 4, !dbg !6411
  store i32 %0, i32* %old_errno, align 4, !dbg !6411
  %1 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6413
  %2 = call i32 @isatty(i32 0) nounwind, !dbg !6413
  %3 = sub nsw i32 1, %2, !dbg !6413
  %4 = mul i32 %3, 256, !dbg !6413
  %5 = trunc i32 %4 to i16, !dbg !6413
  %6 = xor i16 %1, %5, !dbg !6413
  store i16 %6, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6413
  %7 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6414
  %8 = call i32 @isatty(i32 1) nounwind, !dbg !6414
  %9 = sub nsw i32 1, %8, !dbg !6414
  %10 = mul i32 %9, 256, !dbg !6414
  %11 = trunc i32 %10 to i16, !dbg !6414
  %12 = xor i16 %7, %11, !dbg !6414
  store i16 %12, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6414
  %13 = load i32* %old_errno, align 4, !dbg !6415
  store i32 %13, i32* @errno, align 4, !dbg !6415
  ret void, !dbg !6416
}

define i8* @strchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  br label %bb, !dbg !6417

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6418
  %2 = load i8* %1, align 1, !dbg !6418
  %3 = load i32* %c_addr, align 4, !dbg !6418
  %4 = trunc i32 %3 to i8, !dbg !6418
  %5 = icmp eq i8 %2, %4, !dbg !6418
  %6 = load i8** %s_addr, align 8, !dbg !6420
  br i1 %5, label %bb1, label %bb2, !dbg !6418

bb1:                                              ; preds = %bb
  store i8* %6, i8** %0, align 8, !dbg !6420
  br label %bb4, !dbg !6420

bb2:                                              ; preds = %bb
  %7 = load i8* %6, align 1, !dbg !6421
  %8 = icmp ne i8 %7, 0, !dbg !6421
  %9 = zext i1 %8 to i8, !dbg !6421
  %10 = load i8** %s_addr, align 8, !dbg !6421
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6421
  store i8* %11, i8** %s_addr, align 8, !dbg !6421
  %toBool = icmp ne i8 %9, 0, !dbg !6421
  br i1 %toBool, label %bb, label %bb3, !dbg !6421

bb3:                                              ; preds = %bb2
  store i8* null, i8** %0, align 8, !dbg !6422
  br label %bb4, !dbg !6422

bb4:                                              ; preds = %bb3, %bb1
  %12 = load i8** %0, align 8, !dbg !6420
  store i8* %12, i8** %retval, align 8, !dbg !6420
  %retval5 = load i8** %retval, !dbg !6420
  ret i8* %retval5, !dbg !6420
}

define i32 @strcmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  br label %bb, !dbg !6423

bb:                                               ; preds = %bb4, %entry
  %1 = load i8** %s1_addr, align 8, !dbg !6424
  %2 = load i8* %1, align 1, !dbg !6424
  %3 = zext i8 %2 to i32, !dbg !6424
  %4 = load i8** %s2_addr, align 8, !dbg !6424
  %5 = load i8* %4, align 1, !dbg !6424
  %6 = zext i8 %5 to i32, !dbg !6424
  %7 = sub nsw i32 %3, %6, !dbg !6424
  store i32 %7, i32* %r, align 4, !dbg !6424
  %8 = load i32* %r, align 4, !dbg !6424
  %9 = icmp eq i32 %8, 0, !dbg !6424
  %10 = zext i1 %9 to i8, !dbg !6424
  %11 = load i8** %s2_addr, align 8, !dbg !6424
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6424
  store i8* %12, i8** %s2_addr, align 8, !dbg !6424
  %toBool = icmp ne i8 %10, 0, !dbg !6424
  %toBoolnot = xor i1 %toBool, true, !dbg !6424
  %toBoolnot1 = zext i1 %toBoolnot to i8, !dbg !6424
  %toBool3 = icmp ne i8 %toBoolnot1, 0, !dbg !6424
  br i1 %toBool3, label %bb6, label %bb4, !dbg !6424

bb4:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6424
  %14 = load i8* %13, align 1, !dbg !6424
  %15 = icmp ne i8 %14, 0, !dbg !6424
  %16 = zext i1 %15 to i8, !dbg !6424
  %17 = load i8** %s1_addr, align 8, !dbg !6424
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6424
  store i8* %18, i8** %s1_addr, align 8, !dbg !6424
  %toBool5 = icmp ne i8 %16, 0, !dbg !6424
  br i1 %toBool5, label %bb, label %bb6, !dbg !6424

bb6:                                              ; preds = %bb4, %bb
  %19 = load i32* %r, align 4, !dbg !6426
  store i32 %19, i32* %0, align 4, !dbg !6426
  %20 = load i32* %0, align 4, !dbg !6426
  store i32 %20, i32* %retval, align 4, !dbg !6426
  %retval7 = load i32* %retval, !dbg !6426
  ret i32 %retval7, !dbg !6426
}

define noalias i8* @strdup(i8* %s1) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %l = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6427
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !6427
  %3 = add i64 %2, 1, !dbg !6427
  store i64 %3, i64* %l, align 8, !dbg !6427
  %4 = load i64* %l, align 8, !dbg !6429
  %5 = call noalias i8* @malloc(i64 %4) nounwind, !dbg !6429
  store i8* %5, i8** %s, align 8, !dbg !6429
  %6 = load i8** %s, align 8, !dbg !6429
  %7 = icmp ne i8* %6, null, !dbg !6429
  br i1 %7, label %bb, label %bb1, !dbg !6429

bb:                                               ; preds = %entry
  %8 = load i8** %s, align 8, !dbg !6430
  %9 = load i8** %s1_addr, align 8, !dbg !6430
  %10 = load i64* %l, align 8, !dbg !6430
  %11 = call i8* @memcpy(i8* noalias %8, i8* noalias %9, i64 %10) nounwind, !dbg !6430
  br label %bb1, !dbg !6430

bb1:                                              ; preds = %bb, %entry
  %12 = load i8** %s, align 8, !dbg !6431
  store i8* %12, i8** %0, align 8, !dbg !6431
  %13 = load i8** %0, align 8, !dbg !6431
  store i8* %13, i8** %retval, align 8, !dbg !6431
  %retval2 = load i8** %retval, !dbg !6431
  ret i8* %retval2, !dbg !6431
}

define i64 @strlen(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8, !dbg !6432
  store i8* %1, i8** %p, align 8, !dbg !6432
  br label %bb1, !dbg !6432

bb:                                               ; preds = %bb1
  %2 = getelementptr inbounds i8* %6, i64 1, !dbg !6432
  store i8* %2, i8** %p, align 8, !dbg !6432
  br label %bb1, !dbg !6432

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %p, align 8, !dbg !6432
  %4 = load i8* %3, align 1, !dbg !6432
  %5 = icmp ne i8 %4, 0, !dbg !6432
  %6 = load i8** %p, align 8, !dbg !6432
  br i1 %5, label %bb, label %bb2, !dbg !6432

bb2:                                              ; preds = %bb1
  %7 = ptrtoint i8* %6 to i64, !dbg !6434
  %8 = load i8** %s_addr, align 8, !dbg !6434
  %9 = ptrtoint i8* %8 to i64, !dbg !6434
  %10 = sub nsw i64 %7, %9, !dbg !6434
  store i64 %10, i64* %0, align 8, !dbg !6434
  %11 = load i64* %0, align 8, !dbg !6434
  store i64 %11, i64* %retval, align 8, !dbg !6434
  %retval3 = load i64* %retval, !dbg !6434
  ret i64 %retval3, !dbg !6434
}

define i32 @strncmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %r, align 4, !dbg !6435
  br label %bb, !dbg !6435

bb:                                               ; preds = %bb5, %entry
  %1 = load i64* %n_addr, align 8, !dbg !6437
  %2 = sub i64 %1, 1, !dbg !6437
  store i64 %2, i64* %n_addr, align 8, !dbg !6437
  %3 = load i64* %n_addr, align 8, !dbg !6437
  %4 = icmp eq i64 %3, -1, !dbg !6437
  br i1 %4, label %bb7, label %bb1, !dbg !6437

bb1:                                              ; preds = %bb
  %5 = load i8** %s1_addr, align 8, !dbg !6437
  %6 = load i8* %5, align 1, !dbg !6437
  %7 = zext i8 %6 to i32, !dbg !6437
  %8 = load i8** %s2_addr, align 8, !dbg !6437
  %9 = load i8* %8, align 1, !dbg !6437
  %10 = zext i8 %9 to i32, !dbg !6437
  %11 = sub nsw i32 %7, %10, !dbg !6437
  store i32 %11, i32* %r, align 4, !dbg !6437
  %12 = load i32* %r, align 4, !dbg !6437
  %13 = icmp eq i32 %12, 0, !dbg !6437
  %14 = zext i1 %13 to i8, !dbg !6437
  %15 = load i8** %s2_addr, align 8, !dbg !6437
  %16 = getelementptr inbounds i8* %15, i64 1, !dbg !6437
  store i8* %16, i8** %s2_addr, align 8, !dbg !6437
  %toBool = icmp ne i8 %14, 0, !dbg !6437
  %toBoolnot = xor i1 %toBool, true, !dbg !6437
  %toBoolnot2 = zext i1 %toBoolnot to i8, !dbg !6437
  %toBool4 = icmp ne i8 %toBoolnot2, 0, !dbg !6437
  br i1 %toBool4, label %bb7, label %bb5, !dbg !6437

bb5:                                              ; preds = %bb1
  %17 = load i8** %s1_addr, align 8, !dbg !6437
  %18 = load i8* %17, align 1, !dbg !6437
  %19 = icmp ne i8 %18, 0, !dbg !6437
  %20 = zext i1 %19 to i8, !dbg !6437
  %21 = load i8** %s1_addr, align 8, !dbg !6437
  %22 = getelementptr inbounds i8* %21, i64 1, !dbg !6437
  store i8* %22, i8** %s1_addr, align 8, !dbg !6437
  %toBool6 = icmp ne i8 %20, 0, !dbg !6437
  br i1 %toBool6, label %bb, label %bb7, !dbg !6437

bb7:                                              ; preds = %bb5, %bb1, %bb
  %23 = load i32* %r, align 4, !dbg !6438
  store i32 %23, i32* %0, align 4, !dbg !6438
  %24 = load i32* %0, align 4, !dbg !6438
  store i32 %24, i32* %retval, align 4, !dbg !6438
  %retval8 = load i32* %retval, !dbg !6438
  ret i32 %retval8, !dbg !6438
}

define i8* @strrchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i8* null, i8** %p, align 8, !dbg !6439
  br label %bb, !dbg !6439

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6441
  %2 = load i8* %1, align 1, !dbg !6441
  %3 = load i32* %c_addr, align 4, !dbg !6441
  %4 = trunc i32 %3 to i8, !dbg !6441
  %5 = icmp eq i8 %2, %4, !dbg !6441
  br i1 %5, label %bb1, label %bb2, !dbg !6441

bb1:                                              ; preds = %bb
  %6 = load i8** %s_addr, align 8, !dbg !6442
  store i8* %6, i8** %p, align 8, !dbg !6442
  br label %bb2, !dbg !6442

bb2:                                              ; preds = %bb1, %bb
  %7 = load i8** %s_addr, align 8, !dbg !6443
  %8 = load i8* %7, align 1, !dbg !6443
  %9 = icmp ne i8 %8, 0, !dbg !6443
  %10 = zext i1 %9 to i8, !dbg !6443
  %11 = load i8** %s_addr, align 8, !dbg !6443
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6443
  store i8* %12, i8** %s_addr, align 8, !dbg !6443
  %toBool = icmp ne i8 %10, 0, !dbg !6443
  br i1 %toBool, label %bb, label %bb3, !dbg !6443

bb3:                                              ; preds = %bb2
  %13 = load i8** %p, align 8, !dbg !6444
  store i8* %13, i8** %0, align 8, !dbg !6444
  %14 = load i8** %0, align 8, !dbg !6444
  store i8* %14, i8** %retval, align 8, !dbg !6444
  %retval4 = load i8** %retval, !dbg !6444
  ret i8* %retval4, !dbg !6444
}

define i64 @strspn(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6445
  store i8* %1, i8** %s, align 8, !dbg !6445
  %2 = load i8** %s2_addr, align 8, !dbg !6447
  store i8* %2, i8** %p, align 8, !dbg !6447
  br label %bb2, !dbg !6447

bb:                                               ; preds = %bb2
  %3 = load i8** %p, align 8, !dbg !6448
  %4 = load i8* %3, align 1, !dbg !6448
  %5 = load i8** %s, align 8, !dbg !6448
  %6 = load i8* %5, align 1, !dbg !6448
  %7 = icmp eq i8 %4, %6, !dbg !6448
  %8 = zext i1 %7 to i8, !dbg !6448
  %9 = load i8** %p, align 8, !dbg !6448
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6448
  store i8* %10, i8** %p, align 8, !dbg !6448
  %toBool = icmp ne i8 %8, 0, !dbg !6448
  br i1 %toBool, label %bb1, label %bb2, !dbg !6448

bb1:                                              ; preds = %bb
  %11 = load i8** %s, align 8, !dbg !6449
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6449
  store i8* %12, i8** %s, align 8, !dbg !6449
  %13 = load i8** %s2_addr, align 8, !dbg !6450
  store i8* %13, i8** %p, align 8, !dbg !6450
  br label %bb2, !dbg !6450

bb2:                                              ; preds = %bb1, %bb, %entry
  %14 = load i8** %p, align 8, !dbg !6451
  %15 = load i8* %14, align 1, !dbg !6451
  %16 = icmp ne i8 %15, 0, !dbg !6451
  br i1 %16, label %bb, label %bb3, !dbg !6451

bb3:                                              ; preds = %bb2
  %17 = load i8** %s, align 8, !dbg !6452
  %18 = ptrtoint i8* %17 to i64, !dbg !6452
  %19 = load i8** %s1_addr, align 8, !dbg !6452
  %20 = ptrtoint i8* %19 to i64, !dbg !6452
  %21 = sub nsw i64 %18, %20, !dbg !6452
  store i64 %21, i64* %0, align 8, !dbg !6452
  %22 = load i64* %0, align 8, !dbg !6452
  store i64 %22, i64* %retval, align 8, !dbg !6452
  %retval4 = load i64* %retval, !dbg !6452
  ret i64 %retval4, !dbg !6452
}

define i8* @strstr(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6453
  store i8* %1, i8** %s, align 8, !dbg !6453
  %2 = load i8** %s2_addr, align 8, !dbg !6455
  store i8* %2, i8** %p, align 8, !dbg !6455
  br label %bb, !dbg !6455

bb:                                               ; preds = %bb3, %bb6, %entry
  %3 = load i8** %p, align 8, !dbg !6456
  %4 = load i8* %3, align 1, !dbg !6456
  %5 = icmp eq i8 %4, 0, !dbg !6456
  br i1 %5, label %bb1, label %bb2, !dbg !6456

bb1:                                              ; preds = %bb
  %6 = load i8** %s1_addr, align 8, !dbg !6457
  store i8* %6, i8** %0, align 8, !dbg !6457
  br label %bb8, !dbg !6457

bb2:                                              ; preds = %bb
  %7 = load i8** %p, align 8, !dbg !6458
  %8 = load i8* %7, align 1, !dbg !6458
  %9 = load i8** %s, align 8, !dbg !6458
  %10 = load i8* %9, align 1, !dbg !6458
  %11 = icmp eq i8 %8, %10, !dbg !6458
  br i1 %11, label %bb3, label %bb4, !dbg !6458

bb3:                                              ; preds = %bb2
  %12 = load i8** %p, align 8, !dbg !6459
  %13 = getelementptr inbounds i8* %12, i64 1, !dbg !6459
  store i8* %13, i8** %p, align 8, !dbg !6459
  %14 = load i8** %s, align 8, !dbg !6460
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !6460
  store i8* %15, i8** %s, align 8, !dbg !6460
  br label %bb, !dbg !6460

bb4:                                              ; preds = %bb2
  %16 = load i8** %s2_addr, align 8, !dbg !6461
  store i8* %16, i8** %p, align 8, !dbg !6461
  %17 = load i8** %s, align 8, !dbg !6462
  %18 = load i8* %17, align 1, !dbg !6462
  %19 = icmp eq i8 %18, 0, !dbg !6462
  br i1 %19, label %bb5, label %bb6, !dbg !6462

bb5:                                              ; preds = %bb4
  store i8* null, i8** %0, align 8, !dbg !6463
  br label %bb8, !dbg !6463

bb6:                                              ; preds = %bb4
  %20 = load i8** %s1_addr, align 8, !dbg !6464
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6464
  store i8* %21, i8** %s1_addr, align 8, !dbg !6464
  %22 = load i8** %s1_addr, align 8, !dbg !6464
  store i8* %22, i8** %s, align 8, !dbg !6464
  br label %bb, !dbg !6464

bb8:                                              ; preds = %bb5, %bb1
  %23 = load i8** %0, align 8, !dbg !6457
  store i8* %23, i8** %retval, align 8, !dbg !6457
  %retval9 = load i8** %retval, !dbg !6457
  ret i8* %retval9, !dbg !6457
}

define i64 @strtoul(i8* noalias %str, i8** noalias %endptr, i32 %base) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  %1 = load i8** %str_addr, align 8, !dbg !6465
  %2 = load i8*** %endptr_addr, align 8, !dbg !6465
  %3 = load i32* %base_addr, align 4, !dbg !6465
  %4 = call i64 @_stdlib_strto_l(i8* noalias %1, i8** noalias %2, i32 %3, i32 0) nounwind, !dbg !6465
  store i64 %4, i64* %0, align 8, !dbg !6465
  %5 = load i64* %0, align 8, !dbg !6465
  store i64 %5, i64* %retval, align 8, !dbg !6465
  %retval1 = load i64* %retval, !dbg !6465
  ret i64 %retval1, !dbg !6465
}

define i64 @wcstombs(i8* noalias %s, i32* noalias %pwcs, i64 %n) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %pwcs_addr = alloca i32*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %e = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32* %pwcs, i32** %pwcs_addr
  store i64 %n, i64* %n_addr
  %1 = load i32** %pwcs_addr, align 8, !dbg !6467
  store i32* %1, i32** %e, align 8, !dbg !6467
  %2 = load i8** %s_addr, align 8, !dbg !6469
  %3 = load i64* %n_addr, align 8, !dbg !6469
  %4 = call i64 @wcsrtombs(i8* noalias %2, i32** noalias %e, i64 %3, %struct.__mbstate_t* noalias null) nounwind, !dbg !6469
  store i64 %4, i64* %0, align 8, !dbg !6469
  %5 = load i64* %0, align 8, !dbg !6469
  store i64 %5, i64* %retval, align 8, !dbg !6469
  %retval1 = load i64* %retval, !dbg !6469
  ret i64 %retval1, !dbg !6469
}

define i32 @wcwidth(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = call i32 @wcswidth(i32* %wc_addr, i64 1) nounwind, !dbg !6470
  store i32 %1, i32* %0, align 4, !dbg !6470
  %2 = load i32* %0, align 4, !dbg !6470
  store i32 %2, i32* %retval, align 4, !dbg !6470
  %retval1 = load i32* %retval, !dbg !6470
  ret i32 %retval1, !dbg !6470
}

define weak i32* @__h_errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @h_errno, i32** %0, align 8, !dbg !6472
  %1 = load i32** %0, align 8, !dbg !6472
  store i32* %1, i32** %retval, align 8, !dbg !6472
  %retval1 = load i32** %retval, !dbg !6472
  ret i32* %retval1, !dbg !6472
}

define i32 @__cxa_atexit(void (i8*)* %func, i8* %arg, i8* %dso_handle) nounwind {
entry:
  %func_addr = alloca void (i8*)*, align 8
  %arg_addr = alloca i8*, align 8
  %dso_handle_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store void (i8*)* %func, void (i8*)** %func_addr
  store i8* %arg, i8** %arg_addr
  store i8* %dso_handle, i8** %dso_handle_addr
  %1 = load void (i8*)** %func_addr, align 8, !dbg !6474
  %2 = icmp eq void (i8*)* %1, null, !dbg !6474
  br i1 %2, label %bb, label %bb1, !dbg !6474

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !6476
  br label %bb4, !dbg !6476

bb1:                                              ; preds = %entry
  %3 = call %struct.exit_function* @__new_exitfn() nounwind, !dbg !6477
  store %struct.exit_function* %3, %struct.exit_function** %efp, align 8, !dbg !6477
  %4 = load %struct.exit_function** %efp, align 8, !dbg !6478
  %5 = icmp eq %struct.exit_function* %4, null, !dbg !6478
  br i1 %5, label %bb2, label %bb3, !dbg !6478

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !6479
  br label %bb4, !dbg !6479

bb3:                                              ; preds = %bb1
  %6 = load %struct.exit_function** %efp, align 8, !dbg !6480
  %7 = getelementptr inbounds %struct.exit_function* %6, i32 0, i32 1, !dbg !6480
  %8 = getelementptr inbounds %1* %7, i32 0, i32 0, !dbg !6480
  %9 = getelementptr inbounds %2* %8, i32 0, i32 0, !dbg !6480
  %10 = load void (i8*)** %func_addr, align 8, !dbg !6480
  store void (i8*)* %10, void (i8*)** %9, align 8, !dbg !6480
  %11 = load %struct.exit_function** %efp, align 8, !dbg !6481
  %12 = getelementptr inbounds %struct.exit_function* %11, i32 0, i32 1, !dbg !6481
  %13 = getelementptr inbounds %1* %12, i32 0, i32 0, !dbg !6481
  %14 = getelementptr inbounds %2* %13, i32 0, i32 1, !dbg !6481
  %15 = load i8** %arg_addr, align 8, !dbg !6481
  store i8* %15, i8** %14, align 8, !dbg !6481
  %16 = load %struct.exit_function** %efp, align 8, !dbg !6482
  %17 = getelementptr inbounds %struct.exit_function* %16, i32 0, i32 1, !dbg !6482
  %18 = getelementptr inbounds %1* %17, i32 0, i32 0, !dbg !6482
  %19 = getelementptr inbounds %2* %18, i32 0, i32 2, !dbg !6482
  %20 = load i8** %dso_handle_addr, align 8, !dbg !6482
  store i8* %20, i8** %19, align 8, !dbg !6482
  %21 = load %struct.exit_function** %efp, align 8, !dbg !6483
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 0, !dbg !6483
  store i64 3, i64* %22, align 8, !dbg !6483
  store i32 0, i32* %0, align 4, !dbg !6484
  br label %bb4, !dbg !6484

bb4:                                              ; preds = %bb3, %bb2, %bb
  %23 = load i32* %0, align 4, !dbg !6476
  store i32 %23, i32* %retval, align 4, !dbg !6476
  %retval5 = load i32* %retval, !dbg !6476
  ret i32 %retval5, !dbg !6476
}

define i32 @__sigismember(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6485
  %2 = sub nsw i32 %1, 1, !dbg !6485
  %3 = and i32 %2, 63, !dbg !6485
  %.cast = zext i32 %3 to i64, !dbg !6485
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6485
  store i64 %5, i64* %__mask, align 8, !dbg !6485
  %6 = load i32* %__sig_addr, align 4, !dbg !6485
  %7 = sub nsw i32 %6, 1, !dbg !6485
  %8 = sext i32 %7 to i64, !dbg !6485
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6485
  store i64 %11, i64* %__word, align 8, !dbg !6485
  %12 = load i64* %__word, align 8, !dbg !6485
  %13 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6485
  %14 = getelementptr inbounds %struct.__sigset_t* %13, i32 0, i32 0, !dbg !6485
  %15 = getelementptr inbounds [16 x i64]* %14, i64 0, i64 %12, !dbg !6485
  %16 = load i64* %15, align 8, !dbg !6485
  %17 = load i64* %__mask, align 8, !dbg !6485
  %18 = and i64 %16, %17, !dbg !6485
  %19 = icmp ne i64 %18, 0, !dbg !6485
  %20 = zext i1 %19 to i32, !dbg !6485
  store i32 %20, i32* %0, align 4, !dbg !6485
  %21 = load i32* %0, align 4, !dbg !6485
  store i32 %21, i32* %retval, align 4, !dbg !6485
  %retval1 = load i32* %retval, !dbg !6485
  ret i32 %retval1, !dbg !6486
}

define i32 @__sigaddset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6488
  %2 = sub nsw i32 %1, 1, !dbg !6488
  %3 = and i32 %2, 63, !dbg !6488
  %.cast = zext i32 %3 to i64, !dbg !6488
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6488
  store i64 %5, i64* %__mask, align 8, !dbg !6488
  %6 = load i32* %__sig_addr, align 4, !dbg !6488
  %7 = sub nsw i32 %6, 1, !dbg !6488
  %8 = sext i32 %7 to i64, !dbg !6488
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6488
  store i64 %11, i64* %__word, align 8, !dbg !6488
  %12 = load i64* %__word, align 8, !dbg !6488
  %13 = load i64* %__word, align 8, !dbg !6488
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6488
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6488
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6488
  %17 = load i64* %16, align 8, !dbg !6488
  %18 = load i64* %__mask, align 8, !dbg !6488
  %19 = or i64 %17, %18, !dbg !6488
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6488
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6488
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6488
  store i64 %19, i64* %22, align 8, !dbg !6488
  store i32 0, i32* %0, align 4, !dbg !6488
  %23 = load i32* %0, align 4, !dbg !6488
  store i32 %23, i32* %retval, align 4, !dbg !6488
  %retval1 = load i32* %retval, !dbg !6488
  ret i32 %retval1, !dbg !6489
}

define i32 @__sigdelset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6491
  %2 = sub nsw i32 %1, 1, !dbg !6491
  %3 = and i32 %2, 63, !dbg !6491
  %.cast = zext i32 %3 to i64, !dbg !6491
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6491
  store i64 %5, i64* %__mask, align 8, !dbg !6491
  %6 = load i32* %__sig_addr, align 4, !dbg !6491
  %7 = sub nsw i32 %6, 1, !dbg !6491
  %8 = sext i32 %7 to i64, !dbg !6491
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6491
  store i64 %11, i64* %__word, align 8, !dbg !6491
  %12 = load i64* %__word, align 8, !dbg !6491
  %13 = load i64* %__word, align 8, !dbg !6491
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6491
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6491
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6491
  %17 = load i64* %16, align 8, !dbg !6491
  %18 = load i64* %__mask, align 8, !dbg !6491
  %not = xor i64 %18, -1, !dbg !6491
  %19 = and i64 %17, %not, !dbg !6491
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6491
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6491
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6491
  store i64 %19, i64* %22, align 8, !dbg !6491
  store i32 0, i32* %0, align 4, !dbg !6491
  %23 = load i32* %0, align 4, !dbg !6491
  store i32 %23, i32* %retval, align 4, !dbg !6491
  %retval2 = load i32* %retval, !dbg !6491
  ret i32 %retval2, !dbg !6492
}

define hidden i64 @__stdio_READ(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  store i64 0, i64* %rv, align 8, !dbg !6494
  %1 = load %4** %stream_addr, align 8, !dbg !6496
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6496
  %3 = load i16* %2, align 8, !dbg !6496
  %4 = zext i16 %3 to i32, !dbg !6496
  %5 = and i32 %4, 4, !dbg !6496
  %6 = icmp eq i32 %5, 0, !dbg !6496
  br i1 %6, label %bb, label %bb6, !dbg !6496

bb:                                               ; preds = %entry
  %7 = load i64* %bufsize_addr, align 8, !dbg !6497
  %8 = icmp slt i64 %7, 0, !dbg !6497
  br i1 %8, label %bb1, label %bb2, !dbg !6497

bb1:                                              ; preds = %bb
  store i64 9223372036854775807, i64* %bufsize_addr, align 8, !dbg !6498
  br label %bb2, !dbg !6498

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %stream_addr, align 8, !dbg !6499
  %10 = getelementptr inbounds %4* %9, i32 0, i32 2, !dbg !6499
  %11 = load i32* %10, align 4, !dbg !6499
  %12 = load i8** %buf_addr, align 8, !dbg !6499
  %13 = load i64* %bufsize_addr, align 8, !dbg !6499
  %14 = call i64 @read(i32 %11, i8* %12, i64 %13) nounwind, !dbg !6499
  store i64 %14, i64* %rv, align 8, !dbg !6499
  %15 = load i64* %rv, align 8, !dbg !6499
  %16 = icmp sle i64 %15, 0, !dbg !6499
  br i1 %16, label %bb3, label %bb6, !dbg !6499

bb3:                                              ; preds = %bb2
  %17 = load i64* %rv, align 8, !dbg !6500
  %18 = icmp eq i64 %17, 0, !dbg !6500
  %19 = load %4** %stream_addr, align 8, !dbg !6501
  %20 = getelementptr inbounds %4* %19, i32 0, i32 0, !dbg !6501
  %21 = load i16* %20, align 8, !dbg !6501
  br i1 %18, label %bb4, label %bb5, !dbg !6500

bb4:                                              ; preds = %bb3
  %22 = or i16 %21, 4, !dbg !6501
  %23 = load %4** %stream_addr, align 8, !dbg !6501
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6501
  store i16 %22, i16* %24, align 8, !dbg !6501
  br label %bb6, !dbg !6501

bb5:                                              ; preds = %bb3
  %25 = or i16 %21, 8, !dbg !6502
  %26 = load %4** %stream_addr, align 8, !dbg !6502
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6502
  store i16 %25, i16* %27, align 8, !dbg !6502
  store i64 0, i64* %rv, align 8, !dbg !6503
  br label %bb6, !dbg !6503

bb6:                                              ; preds = %bb5, %bb4, %bb2, %entry
  %28 = load i64* %rv, align 8, !dbg !6504
  store i64 %28, i64* %0, align 8, !dbg !6504
  %29 = load i64* %0, align 8, !dbg !6504
  store i64 %29, i64* %retval, align 8, !dbg !6504
  %retval7 = load i64* %retval, !dbg !6504
  ret i64 %retval7, !dbg !6504
}

define hidden i64 @__stdio_WRITE(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %rv = alloca i64
  %stodo = alloca i64
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  %1 = load i64* %bufsize_addr, align 8, !dbg !6505
  store i64 %1, i64* %todo, align 8, !dbg !6505
  br label %bb, !dbg !6505

bb:                                               ; preds = %bb6, %entry
  %2 = load i64* %todo, align 8, !dbg !6507
  %3 = icmp eq i64 %2, 0, !dbg !6507
  br i1 %3, label %bb1, label %bb2, !dbg !6507

bb1:                                              ; preds = %bb
  %4 = load i64* %bufsize_addr, align 8, !dbg !6508
  store i64 %4, i64* %0, align 8, !dbg !6508
  br label %bb16, !dbg !6508

bb2:                                              ; preds = %bb
  %5 = load i64* %todo, align 8, !dbg !6509
  %6 = icmp sge i64 %5, 0, !dbg !6509
  br i1 %6, label %bb3, label %bb4, !dbg !6509

bb3:                                              ; preds = %bb2
  %7 = load i64* %todo, align 8, !dbg !6509
  store i64 %7, i64* %iftmp.0, align 8, !dbg !6509
  br label %bb5, !dbg !6509

bb4:                                              ; preds = %bb2
  store i64 9223372036854775807, i64* %iftmp.0, align 8, !dbg !6509
  br label %bb5, !dbg !6509

bb5:                                              ; preds = %bb4, %bb3
  %8 = load i64* %iftmp.0, align 8, !dbg !6509
  store i64 %8, i64* %stodo, align 8, !dbg !6509
  %9 = load i64* %stodo, align 8, !dbg !6510
  %10 = load %4** %stream_addr, align 8, !dbg !6510
  %11 = getelementptr inbounds %4* %10, i32 0, i32 2, !dbg !6510
  %12 = load i32* %11, align 4, !dbg !6510
  %13 = load i8** %buf_addr, align 8, !dbg !6510
  %14 = call i64 @write(i32 %12, i8* %13, i64 %9) nounwind, !dbg !6510
  store i64 %14, i64* %rv, align 8, !dbg !6510
  %15 = load i64* %rv, align 8, !dbg !6510
  %16 = icmp sge i64 %15, 0, !dbg !6510
  br i1 %16, label %bb6, label %bb7, !dbg !6510

bb6:                                              ; preds = %bb5
  %17 = load i64* %rv, align 8, !dbg !6511
  %18 = load i64* %todo, align 8, !dbg !6511
  %19 = sub i64 %18, %17, !dbg !6511
  store i64 %19, i64* %todo, align 8, !dbg !6511
  %20 = load i8** %buf_addr, align 8, !dbg !6512
  %21 = load i64* %rv, align 8, !dbg !6512
  %22 = getelementptr inbounds i8* %20, i64 %21, !dbg !6512
  store i8* %22, i8** %buf_addr, align 8, !dbg !6512
  br label %bb, !dbg !6512

bb7:                                              ; preds = %bb5
  %23 = load %4** %stream_addr, align 8, !dbg !6513
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6513
  %25 = load i16* %24, align 8, !dbg !6513
  %26 = or i16 %25, 8, !dbg !6513
  %27 = load %4** %stream_addr, align 8, !dbg !6513
  %28 = getelementptr inbounds %4* %27, i32 0, i32 0, !dbg !6513
  store i16 %26, i16* %28, align 8, !dbg !6513
  %29 = load %4** %stream_addr, align 8, !dbg !6514
  %30 = getelementptr inbounds %4* %29, i32 0, i32 4, !dbg !6514
  %31 = load i8** %30, align 8, !dbg !6514
  %32 = ptrtoint i8* %31 to i64, !dbg !6514
  %33 = load %4** %stream_addr, align 8, !dbg !6514
  %34 = getelementptr inbounds %4* %33, i32 0, i32 3, !dbg !6514
  %35 = load i8** %34, align 8, !dbg !6514
  %36 = ptrtoint i8* %35 to i64, !dbg !6514
  %37 = sub nsw i64 %32, %36, !dbg !6514
  store i64 %37, i64* %stodo, align 8, !dbg !6514
  %38 = load i64* %stodo, align 8, !dbg !6514
  %39 = icmp ne i64 %38, 0, !dbg !6514
  br i1 %39, label %bb8, label %bb15, !dbg !6514

bb8:                                              ; preds = %bb7
  %40 = load i64* %stodo, align 8, !dbg !6515
  %41 = load i64* %todo, align 8, !dbg !6515
  %42 = icmp ugt i64 %40, %41, !dbg !6515
  br i1 %42, label %bb9, label %bb10, !dbg !6515

bb9:                                              ; preds = %bb8
  %43 = load i64* %todo, align 8, !dbg !6517
  store i64 %43, i64* %stodo, align 8, !dbg !6517
  br label %bb10, !dbg !6517

bb10:                                             ; preds = %bb9, %bb8
  %44 = load %4** %stream_addr, align 8, !dbg !6518
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6518
  %46 = load i8** %45, align 8, !dbg !6518
  store i8* %46, i8** %s, align 8, !dbg !6518
  br label %bb11, !dbg !6518

bb11:                                             ; preds = %bb13, %bb10
  %47 = load i8** %buf_addr, align 8, !dbg !6519
  %48 = load i8* %47, align 1, !dbg !6519
  %49 = load i8** %s, align 8, !dbg !6519
  store i8 %48, i8* %49, align 1, !dbg !6519
  %50 = load i8** %s, align 8, !dbg !6519
  %51 = load i8* %50, align 1, !dbg !6519
  %52 = icmp eq i8 %51, 10, !dbg !6519
  br i1 %52, label %bb12, label %bb13, !dbg !6519

bb12:                                             ; preds = %bb11
  %53 = load %4** %stream_addr, align 8, !dbg !6519
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6519
  %55 = load i16* %54, align 8, !dbg !6519
  %56 = zext i16 %55 to i32, !dbg !6519
  %57 = and i32 %56, 256, !dbg !6519
  %58 = icmp ne i32 %57, 0, !dbg !6519
  br i1 %58, label %bb14, label %bb13, !dbg !6519

bb13:                                             ; preds = %bb12, %bb11
  %59 = load i8** %s, align 8, !dbg !6520
  %60 = getelementptr inbounds i8* %59, i64 1, !dbg !6520
  store i8* %60, i8** %s, align 8, !dbg !6520
  %61 = load i8** %buf_addr, align 8, !dbg !6521
  %62 = getelementptr inbounds i8* %61, i64 1, !dbg !6521
  store i8* %62, i8** %buf_addr, align 8, !dbg !6521
  %63 = load i64* %stodo, align 8, !dbg !6522
  %64 = sub nsw i64 %63, 1, !dbg !6522
  store i64 %64, i64* %stodo, align 8, !dbg !6522
  %65 = load i64* %stodo, align 8, !dbg !6522
  %66 = icmp ne i64 %65, 0, !dbg !6522
  br i1 %66, label %bb11, label %bb14, !dbg !6522

bb14:                                             ; preds = %bb13, %bb12
  %67 = load %4** %stream_addr, align 8, !dbg !6523
  %68 = getelementptr inbounds %4* %67, i32 0, i32 5, !dbg !6523
  %69 = load i8** %s, align 8, !dbg !6523
  store i8* %69, i8** %68, align 8, !dbg !6523
  %70 = load i8** %s, align 8, !dbg !6524
  %71 = ptrtoint i8* %70 to i64, !dbg !6524
  %72 = load %4** %stream_addr, align 8, !dbg !6524
  %73 = getelementptr inbounds %4* %72, i32 0, i32 3, !dbg !6524
  %74 = load i8** %73, align 8, !dbg !6524
  %75 = ptrtoint i8* %74 to i64, !dbg !6524
  %76 = sub nsw i64 %71, %75, !dbg !6524
  %77 = load i64* %todo, align 8, !dbg !6524
  %78 = sub i64 %77, %76, !dbg !6524
  store i64 %78, i64* %todo, align 8, !dbg !6524
  br label %bb15, !dbg !6524

bb15:                                             ; preds = %bb14, %bb7
  %79 = load i64* %bufsize_addr, align 8, !dbg !6525
  %80 = load i64* %todo, align 8, !dbg !6525
  %81 = sub i64 %79, %80, !dbg !6525
  store i64 %81, i64* %0, align 8, !dbg !6525
  br label %bb16, !dbg !6525

bb16:                                             ; preds = %bb15, %bb1
  %82 = load i64* %0, align 8, !dbg !6508
  store i64 %82, i64* %retval, align 8, !dbg !6508
  %retval17 = load i64* %retval, !dbg !6508
  ret i64 %retval17, !dbg !6508
}

define hidden i64 @__stdio_fwrite(i8* noalias %buffer, i64 %bytes, %4* noalias %stream) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %bytes_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %pending = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %bytes, i64* %bytes_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6526
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6526
  %3 = load i16* %2, align 8, !dbg !6526
  %4 = zext i16 %3 to i32, !dbg !6526
  %5 = and i32 %4, 512, !dbg !6526
  %6 = icmp eq i32 %5, 0, !dbg !6526
  br i1 %6, label %bb, label %bb16, !dbg !6526

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !6528
  %8 = getelementptr inbounds %4* %7, i32 0, i32 2, !dbg !6528
  %9 = load i32* %8, align 4, !dbg !6528
  %10 = icmp eq i32 %9, -2, !dbg !6528
  %11 = load %4** %stream_addr, align 8, !dbg !6529
  %12 = getelementptr inbounds %4* %11, i32 0, i32 4, !dbg !6529
  %13 = load i8** %12, align 8, !dbg !6529
  %14 = ptrtoint i8* %13 to i64, !dbg !6529
  %15 = load %4** %stream_addr, align 8, !dbg !6529
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6529
  %17 = load i8** %16, align 8, !dbg !6529
  %18 = ptrtoint i8* %17 to i64, !dbg !6529
  %19 = sub nsw i64 %14, %18, !dbg !6529
  br i1 %10, label %bb1, label %bb4, !dbg !6528

bb1:                                              ; preds = %bb
  store i64 %19, i64* %pending, align 8, !dbg !6529
  %20 = load i64* %pending, align 8, !dbg !6530
  %21 = load i64* %bytes_addr, align 8, !dbg !6530
  %22 = icmp ugt i64 %20, %21, !dbg !6530
  br i1 %22, label %bb2, label %bb3, !dbg !6530

bb2:                                              ; preds = %bb1
  %23 = load i64* %bytes_addr, align 8, !dbg !6531
  store i64 %23, i64* %pending, align 8, !dbg !6531
  br label %bb3, !dbg !6531

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !6532
  %25 = getelementptr inbounds %4* %24, i32 0, i32 5, !dbg !6532
  %26 = load i8** %25, align 8, !dbg !6532
  %27 = load i8** %buffer_addr, align 8, !dbg !6532
  %28 = load i64* %pending, align 8, !dbg !6532
  %29 = call i8* @memcpy(i8* noalias %26, i8* noalias %27, i64 %28) nounwind, !dbg !6532
  %30 = load %4** %stream_addr, align 8, !dbg !6533
  %31 = getelementptr inbounds %4* %30, i32 0, i32 5, !dbg !6533
  %32 = load i8** %31, align 8, !dbg !6533
  %33 = load i64* %pending, align 8, !dbg !6533
  %34 = getelementptr inbounds i8* %32, i64 %33, !dbg !6533
  %35 = load %4** %stream_addr, align 8, !dbg !6533
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !6533
  store i8* %34, i8** %36, align 8, !dbg !6533
  %37 = load i64* %bytes_addr, align 8, !dbg !6534
  store i64 %37, i64* %0, align 8, !dbg !6534
  br label %bb17, !dbg !6534

bb4:                                              ; preds = %bb
  %38 = load i64* %bytes_addr, align 8, !dbg !6535
  %39 = icmp uge i64 %19, %38, !dbg !6535
  %40 = load %4** %stream_addr, align 8, !dbg !6536
  %41 = getelementptr inbounds %4* %40, i32 0, i32 5, !dbg !6536
  %42 = load i8** %41, align 8, !dbg !6536
  br i1 %39, label %bb5, label %bb13, !dbg !6535

bb5:                                              ; preds = %bb4
  %43 = load i8** %buffer_addr, align 8, !dbg !6536
  %44 = load i64* %bytes_addr, align 8, !dbg !6536
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %43, i64 %44) nounwind, !dbg !6536
  %46 = load %4** %stream_addr, align 8, !dbg !6537
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !6537
  %48 = load i8** %47, align 8, !dbg !6537
  %49 = load i64* %bytes_addr, align 8, !dbg !6537
  %50 = getelementptr inbounds i8* %48, i64 %49, !dbg !6537
  %51 = load %4** %stream_addr, align 8, !dbg !6537
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !6537
  store i8* %50, i8** %52, align 8, !dbg !6537
  %53 = load %4** %stream_addr, align 8, !dbg !6538
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6538
  %55 = load i16* %54, align 8, !dbg !6538
  %56 = zext i16 %55 to i32, !dbg !6538
  %57 = and i32 %56, 256, !dbg !6538
  %58 = icmp ne i32 %57, 0, !dbg !6538
  br i1 %58, label %bb6, label %bb12, !dbg !6538

bb6:                                              ; preds = %bb5
  %59 = load i8** %buffer_addr, align 8, !dbg !6538
  %60 = load i64* %bytes_addr, align 8, !dbg !6538
  %61 = call i8* @memrchr(i8* %59, i32 10, i64 %60) nounwind readonly, !dbg !6538
  %62 = icmp ne i8* %61, null, !dbg !6538
  br i1 %62, label %bb7, label %bb12, !dbg !6538

bb7:                                              ; preds = %bb6
  %63 = load %4** %stream_addr, align 8, !dbg !6539
  %64 = call i64 @__stdio_wcommit(%4* noalias %63) nounwind, !dbg !6539
  store i64 %64, i64* %pending, align 8, !dbg !6539
  %65 = load i64* %pending, align 8, !dbg !6539
  %66 = icmp ne i64 %65, 0, !dbg !6539
  br i1 %66, label %bb8, label %bb12, !dbg !6539

bb8:                                              ; preds = %bb7
  %67 = load i64* %pending, align 8, !dbg !6540
  %68 = load i64* %bytes_addr, align 8, !dbg !6540
  %69 = icmp ugt i64 %67, %68, !dbg !6540
  br i1 %69, label %bb9, label %bb10, !dbg !6540

bb9:                                              ; preds = %bb8
  %70 = load i64* %bytes_addr, align 8, !dbg !6541
  store i64 %70, i64* %pending, align 8, !dbg !6541
  br label %bb10, !dbg !6541

bb10:                                             ; preds = %bb9, %bb8
  %71 = load i64* %bytes_addr, align 8, !dbg !6542
  %72 = load i64* %pending, align 8, !dbg !6542
  %73 = sub i64 %71, %72, !dbg !6542
  %74 = load i8** %buffer_addr, align 8, !dbg !6542
  %75 = getelementptr inbounds i8* %74, i64 %73, !dbg !6542
  store i8* %75, i8** %buffer_addr, align 8, !dbg !6542
  %76 = load i8** %buffer_addr, align 8, !dbg !6543
  %77 = load i64* %pending, align 8, !dbg !6543
  %78 = call i8* @memchr(i8* %76, i32 10, i64 %77) nounwind readonly, !dbg !6543
  store i8* %78, i8** %p, align 8, !dbg !6543
  %79 = load i8** %p, align 8, !dbg !6543
  %80 = icmp ne i8* %79, null, !dbg !6543
  br i1 %80, label %bb11, label %bb12, !dbg !6543

bb11:                                             ; preds = %bb10
  %81 = load i8** %buffer_addr, align 8, !dbg !6544
  %82 = load i64* %pending, align 8, !dbg !6544
  %83 = getelementptr inbounds i8* %81, i64 %82, !dbg !6544
  %84 = ptrtoint i8* %83 to i64, !dbg !6544
  %85 = load i8** %p, align 8, !dbg !6544
  %86 = ptrtoint i8* %85 to i64, !dbg !6544
  %87 = sub nsw i64 %84, %86, !dbg !6544
  store i64 %87, i64* %pending, align 8, !dbg !6544
  %88 = load i64* %bytes_addr, align 8, !dbg !6545
  %89 = load i64* %pending, align 8, !dbg !6545
  %90 = sub i64 %88, %89, !dbg !6545
  store i64 %90, i64* %bytes_addr, align 8, !dbg !6545
  %91 = load %4** %stream_addr, align 8, !dbg !6546
  %92 = getelementptr inbounds %4* %91, i32 0, i32 5, !dbg !6546
  %93 = load i8** %92, align 8, !dbg !6546
  %94 = load i64* %pending, align 8, !dbg !6546
  %95 = sub nsw i64 0, %94, !dbg !6546
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !6546
  %97 = load %4** %stream_addr, align 8, !dbg !6546
  %98 = getelementptr inbounds %4* %97, i32 0, i32 5, !dbg !6546
  store i8* %96, i8** %98, align 8, !dbg !6546
  br label %bb12, !dbg !6546

bb12:                                             ; preds = %bb11, %bb10, %bb7, %bb6, %bb5
  %99 = load i64* %bytes_addr, align 8, !dbg !6547
  store i64 %99, i64* %0, align 8, !dbg !6547
  br label %bb17, !dbg !6547

bb13:                                             ; preds = %bb4
  %100 = load %4** %stream_addr, align 8, !dbg !6548
  %101 = getelementptr inbounds %4* %100, i32 0, i32 3, !dbg !6548
  %102 = load i8** %101, align 8, !dbg !6548
  %103 = icmp ne i8* %42, %102, !dbg !6548
  br i1 %103, label %bb14, label %bb16, !dbg !6548

bb14:                                             ; preds = %bb13
  %104 = load %4** %stream_addr, align 8, !dbg !6549
  %105 = call i64 @__stdio_wcommit(%4* noalias %104) nounwind, !dbg !6549
  %106 = icmp ne i64 %105, 0, !dbg !6549
  br i1 %106, label %bb15, label %bb16, !dbg !6549

bb15:                                             ; preds = %bb14
  store i64 0, i64* %0, align 8, !dbg !6550
  br label %bb17, !dbg !6550

bb16:                                             ; preds = %bb14, %bb13, %entry
  %107 = load %4** %stream_addr, align 8, !dbg !6551
  %108 = load i8** %buffer_addr, align 8, !dbg !6551
  %109 = load i64* %bytes_addr, align 8, !dbg !6551
  %110 = call i64 @__stdio_WRITE(%4* %107, i8* %108, i64 %109) nounwind, !dbg !6551
  store i64 %110, i64* %0, align 8, !dbg !6551
  br label %bb17, !dbg !6551

bb17:                                             ; preds = %bb16, %bb15, %bb12, %bb3
  %111 = load i64* %0, align 8, !dbg !6534
  store i64 %111, i64* %retval, align 8, !dbg !6534
  %retval18 = load i64* %retval, !dbg !6534
  ret i64 %retval18, !dbg !6534
}

define hidden i64 @__stdio_rfill(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6552
  %2 = getelementptr inbounds %4* %1, i32 0, i32 4, !dbg !6552
  %3 = load i8** %2, align 8, !dbg !6552
  %4 = ptrtoint i8* %3 to i64, !dbg !6552
  %5 = load %4** %stream_addr, align 8, !dbg !6552
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6552
  %7 = load i8** %6, align 8, !dbg !6552
  %8 = ptrtoint i8* %7 to i64, !dbg !6552
  %9 = sub nsw i64 %4, %8, !dbg !6552
  %10 = load %4** %stream_addr, align 8, !dbg !6552
  %11 = getelementptr inbounds %4* %10, i32 0, i32 3, !dbg !6552
  %12 = load i8** %11, align 8, !dbg !6552
  %13 = load %4** %stream_addr, align 8, !dbg !6552
  %14 = call i64 @__stdio_READ(%4* %13, i8* %12, i64 %9) nounwind, !dbg !6552
  store i64 %14, i64* %rv, align 8, !dbg !6552
  %15 = load %4** %stream_addr, align 8, !dbg !6554
  %16 = getelementptr inbounds %4* %15, i32 0, i32 3, !dbg !6554
  %17 = load i8** %16, align 8, !dbg !6554
  %18 = load %4** %stream_addr, align 8, !dbg !6554
  %19 = getelementptr inbounds %4* %18, i32 0, i32 5, !dbg !6554
  store i8* %17, i8** %19, align 8, !dbg !6554
  %20 = load %4** %stream_addr, align 8, !dbg !6555
  %21 = getelementptr inbounds %4* %20, i32 0, i32 3, !dbg !6555
  %22 = load i8** %21, align 8, !dbg !6555
  %23 = load i64* %rv, align 8, !dbg !6555
  %24 = getelementptr inbounds i8* %22, i64 %23, !dbg !6555
  %25 = load %4** %stream_addr, align 8, !dbg !6555
  %26 = getelementptr inbounds %4* %25, i32 0, i32 6, !dbg !6555
  store i8* %24, i8** %26, align 8, !dbg !6555
  %27 = load i64* %rv, align 8, !dbg !6556
  store i64 %27, i64* %0, align 8, !dbg !6556
  %28 = load i64* %0, align 8, !dbg !6556
  store i64 %28, i64* %retval, align 8, !dbg !6556
  %retval1 = load i64* %retval, !dbg !6556
  ret i64 %retval1, !dbg !6556
}

define hidden i32 @__stdio_trans2r_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6557
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6557
  %3 = load i16* %2, align 8, !dbg !6557
  %4 = zext i16 %3 to i32, !dbg !6557
  %5 = load i32* %oflag_addr, align 4, !dbg !6557
  %6 = and i32 %4, %5, !dbg !6557
  %7 = icmp eq i32 %6, 0, !dbg !6557
  br i1 %7, label %bb, label %bb2, !dbg !6557

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6559
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6559
  %10 = load i16* %9, align 8, !dbg !6559
  %11 = zext i16 %10 to i32, !dbg !6559
  %12 = and i32 %11, 2176, !dbg !6559
  %13 = icmp ne i32 %12, 0, !dbg !6559
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6559

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6560
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6560
  %16 = load i16* %15, align 8, !dbg !6560
  %17 = load i32* %oflag_addr, align 4, !dbg !6560
  %18 = trunc i32 %17 to i16, !dbg !6560
  %19 = or i16 %16, %18, !dbg !6560
  %20 = load %4** %stream_addr, align 8, !dbg !6560
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6560
  store i16 %19, i16* %21, align 8, !dbg !6560
  br label %bb2, !dbg !6560

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6561
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6561
  %24 = load i16* %23, align 8, !dbg !6561
  %25 = zext i16 %24 to i32, !dbg !6561
  %26 = and i32 %25, 16, !dbg !6561
  %27 = icmp ne i32 %26, 0, !dbg !6561
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6561

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6562
  br label %ERROR, !dbg !6563

ERROR:                                            ; preds = %bb4, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6564
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6564
  %30 = load i16* %29, align 8, !dbg !6564
  %31 = or i16 %30, 8, !dbg !6564
  %32 = load %4** %stream_addr, align 8, !dbg !6564
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6564
  store i16 %31, i16* %33, align 8, !dbg !6564
  store i32 -1, i32* %0, align 4, !dbg !6565
  br label %bb7, !dbg !6565

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6566
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6566
  %36 = load i16* %35, align 8, !dbg !6566
  %37 = zext i16 %36 to i32, !dbg !6566
  %38 = and i32 %37, 64, !dbg !6566
  %39 = icmp ne i32 %38, 0, !dbg !6566
  br i1 %39, label %bb4, label %bb6, !dbg !6566

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6567
  %41 = call i64 @__stdio_wcommit(%4* noalias %40) nounwind, !dbg !6567
  %42 = icmp ne i64 %41, 0, !dbg !6567
  br i1 %42, label %ERROR, label %bb5, !dbg !6567

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !6568
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6568
  %45 = load i8** %44, align 8, !dbg !6568
  %46 = load %4** %stream_addr, align 8, !dbg !6568
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6568
  store i8* %45, i8** %47, align 8, !dbg !6568
  %48 = load %4** %stream_addr, align 8, !dbg !6569
  %49 = getelementptr inbounds %4* %48, i32 0, i32 0, !dbg !6569
  %50 = load i16* %49, align 8, !dbg !6569
  %51 = and i16 %50, -65, !dbg !6569
  %52 = load %4** %stream_addr, align 8, !dbg !6569
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !6569
  store i16 %51, i16* %53, align 8, !dbg !6569
  br label %bb6, !dbg !6569

bb6:                                              ; preds = %bb5, %bb3
  %54 = load %4** %stream_addr, align 8, !dbg !6570
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !6570
  %56 = load i16* %55, align 8, !dbg !6570
  %57 = or i16 %56, 1, !dbg !6570
  %58 = load %4** %stream_addr, align 8, !dbg !6570
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !6570
  store i16 %57, i16* %59, align 8, !dbg !6570
  store i32 0, i32* %0, align 4, !dbg !6571
  br label %bb7, !dbg !6571

bb7:                                              ; preds = %bb6, %ERROR
  %60 = load i32* %0, align 4, !dbg !6565
  store i32 %60, i32* %retval, align 4, !dbg !6565
  %retval8 = load i32* %retval, !dbg !6565
  ret i32 %retval8, !dbg !6565
}

define hidden i32 @__stdio_trans2w_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6572
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6572
  %3 = load i16* %2, align 8, !dbg !6572
  %4 = zext i16 %3 to i32, !dbg !6572
  %5 = load i32* %oflag_addr, align 4, !dbg !6572
  %6 = and i32 %4, %5, !dbg !6572
  %7 = icmp eq i32 %6, 0, !dbg !6572
  br i1 %7, label %bb, label %bb2, !dbg !6572

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6574
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6574
  %10 = load i16* %9, align 8, !dbg !6574
  %11 = zext i16 %10 to i32, !dbg !6574
  %12 = and i32 %11, 2176, !dbg !6574
  %13 = icmp ne i32 %12, 0, !dbg !6574
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6574

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6575
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6575
  %16 = load i16* %15, align 8, !dbg !6575
  %17 = load i32* %oflag_addr, align 4, !dbg !6575
  %18 = trunc i32 %17 to i16, !dbg !6575
  %19 = or i16 %16, %18, !dbg !6575
  %20 = load %4** %stream_addr, align 8, !dbg !6575
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6575
  store i16 %19, i16* %21, align 8, !dbg !6575
  br label %bb2, !dbg !6575

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6576
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6576
  %24 = load i16* %23, align 8, !dbg !6576
  %25 = zext i16 %24 to i32, !dbg !6576
  %26 = and i32 %25, 32, !dbg !6576
  %27 = icmp ne i32 %26, 0, !dbg !6576
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6576

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6577
  br label %ERROR, !dbg !6578

ERROR:                                            ; preds = %bb10, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6579
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6579
  %30 = load i16* %29, align 8, !dbg !6579
  %31 = or i16 %30, 8, !dbg !6579
  %32 = load %4** %stream_addr, align 8, !dbg !6579
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6579
  store i16 %31, i16* %33, align 8, !dbg !6579
  store i32 -1, i32* %0, align 4, !dbg !6580
  br label %bb15, !dbg !6580

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6581
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6581
  %36 = load i16* %35, align 8, !dbg !6581
  %37 = zext i16 %36 to i32, !dbg !6581
  %38 = and i32 %37, 3, !dbg !6581
  %39 = icmp ne i32 %38, 0, !dbg !6581
  br i1 %39, label %bb4, label %bb12, !dbg !6581

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6582
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !6582
  %42 = load i16* %41, align 8, !dbg !6582
  %43 = zext i16 %42 to i32, !dbg !6582
  %44 = and i32 %43, 4, !dbg !6582
  %45 = icmp eq i32 %44, 0, !dbg !6582
  br i1 %45, label %bb5, label %bb11, !dbg !6582

bb5:                                              ; preds = %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !6583
  %47 = getelementptr inbounds %4* %46, i32 0, i32 6, !dbg !6583
  %48 = load i8** %47, align 8, !dbg !6583
  %49 = load %4** %stream_addr, align 8, !dbg !6583
  %50 = getelementptr inbounds %4* %49, i32 0, i32 5, !dbg !6583
  %51 = load i8** %50, align 8, !dbg !6583
  %52 = icmp ne i8* %48, %51, !dbg !6583
  br i1 %52, label %bb7, label %bb6, !dbg !6583

bb6:                                              ; preds = %bb5
  %53 = load %4** %stream_addr, align 8, !dbg !6583
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6583
  %55 = load i16* %54, align 8, !dbg !6583
  %56 = zext i16 %55 to i32, !dbg !6583
  %57 = and i32 %56, 2, !dbg !6583
  %58 = icmp ne i32 %57, 0, !dbg !6583
  br i1 %58, label %bb7, label %bb11, !dbg !6583

bb7:                                              ; preds = %bb6, %bb5
  %59 = load %4** %stream_addr, align 8, !dbg !6583
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !6583
  %61 = load i16* %60, align 8, !dbg !6583
  %62 = zext i16 %61 to i32, !dbg !6583
  %63 = and i32 %62, 1024, !dbg !6583
  %64 = icmp ne i32 %63, 0, !dbg !6583
  br i1 %64, label %bb8, label %bb9, !dbg !6583

bb8:                                              ; preds = %bb7
  store i32 2, i32* %iftmp.0, align 4, !dbg !6583
  br label %bb10, !dbg !6583

bb9:                                              ; preds = %bb7
  store i32 1, i32* %iftmp.0, align 4, !dbg !6583
  br label %bb10, !dbg !6583

bb10:                                             ; preds = %bb9, %bb8
  %65 = load %4** %stream_addr, align 8, !dbg !6583
  %66 = load i32* %iftmp.0, align 4, !dbg !6583
  %67 = call i32 @fseek(%4* %65, i64 0, i32 %66) nounwind, !dbg !6583
  %68 = icmp ne i32 %67, 0, !dbg !6583
  br i1 %68, label %ERROR, label %bb11, !dbg !6583

bb11:                                             ; preds = %bb10, %bb6, %bb4
  %69 = load %4** %stream_addr, align 8, !dbg !6584
  %70 = getelementptr inbounds %4* %69, i32 0, i32 0, !dbg !6584
  %71 = load i16* %70, align 8, !dbg !6584
  %72 = and i16 %71, -4, !dbg !6584
  %73 = load %4** %stream_addr, align 8, !dbg !6584
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !6584
  store i16 %72, i16* %74, align 8, !dbg !6584
  %75 = load %4** %stream_addr, align 8, !dbg !6585
  %76 = getelementptr inbounds %4* %75, i32 0, i32 3, !dbg !6585
  %77 = load i8** %76, align 8, !dbg !6585
  %78 = load %4** %stream_addr, align 8, !dbg !6585
  %79 = getelementptr inbounds %4* %78, i32 0, i32 7, !dbg !6585
  store i8* %77, i8** %79, align 8, !dbg !6585
  %80 = load %4** %stream_addr, align 8, !dbg !6586
  %81 = getelementptr inbounds %4* %80, i32 0, i32 3, !dbg !6586
  %82 = load i8** %81, align 8, !dbg !6586
  %83 = load %4** %stream_addr, align 8, !dbg !6586
  %84 = getelementptr inbounds %4* %83, i32 0, i32 5, !dbg !6586
  store i8* %82, i8** %84, align 8, !dbg !6586
  %85 = load %4** %stream_addr, align 8, !dbg !6586
  %86 = getelementptr inbounds %4* %85, i32 0, i32 5, !dbg !6586
  %87 = load i8** %86, align 8, !dbg !6586
  %88 = load %4** %stream_addr, align 8, !dbg !6586
  %89 = getelementptr inbounds %4* %88, i32 0, i32 6, !dbg !6586
  store i8* %87, i8** %89, align 8, !dbg !6586
  br label %bb12, !dbg !6586

bb12:                                             ; preds = %bb11, %bb3
  %90 = load %4** %stream_addr, align 8, !dbg !6587
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6587
  %92 = load i16* %91, align 8, !dbg !6587
  %93 = or i16 %92, 64, !dbg !6587
  %94 = load %4** %stream_addr, align 8, !dbg !6587
  %95 = getelementptr inbounds %4* %94, i32 0, i32 0, !dbg !6587
  store i16 %93, i16* %95, align 8, !dbg !6587
  %96 = load %4** %stream_addr, align 8, !dbg !6588
  %97 = getelementptr inbounds %4* %96, i32 0, i32 0, !dbg !6588
  %98 = load i16* %97, align 8, !dbg !6588
  %99 = zext i16 %98 to i32, !dbg !6588
  %100 = and i32 %99, 2816, !dbg !6588
  %101 = icmp eq i32 %100, 0, !dbg !6588
  br i1 %101, label %bb13, label %bb14, !dbg !6588

bb13:                                             ; preds = %bb12
  %102 = load %4** %stream_addr, align 8, !dbg !6589
  %103 = getelementptr inbounds %4* %102, i32 0, i32 4, !dbg !6589
  %104 = load i8** %103, align 8, !dbg !6589
  %105 = load %4** %stream_addr, align 8, !dbg !6589
  %106 = getelementptr inbounds %4* %105, i32 0, i32 8, !dbg !6589
  store i8* %104, i8** %106, align 8, !dbg !6589
  br label %bb14, !dbg !6589

bb14:                                             ; preds = %bb13, %bb12
  store i32 0, i32* %0, align 4, !dbg !6590
  br label %bb15, !dbg !6590

bb15:                                             ; preds = %bb14, %ERROR
  %107 = load i32* %0, align 4, !dbg !6580
  store i32 %107, i32* %retval, align 4, !dbg !6580
  %retval16 = load i32* %retval, !dbg !6580
  ret i32 %retval16, !dbg !6580
}

define hidden i64 @__stdio_wcommit(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bufsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6591
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !6591
  %3 = load i8** %2, align 8, !dbg !6591
  %4 = ptrtoint i8* %3 to i64, !dbg !6591
  %5 = load %4** %stream_addr, align 8, !dbg !6591
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6591
  %7 = load i8** %6, align 8, !dbg !6591
  %8 = ptrtoint i8* %7 to i64, !dbg !6591
  %9 = sub nsw i64 %4, %8, !dbg !6591
  store i64 %9, i64* %bufsize, align 8, !dbg !6591
  %10 = load i64* %bufsize, align 8, !dbg !6591
  %11 = icmp ne i64 %10, 0, !dbg !6591
  br i1 %11, label %bb, label %bb1, !dbg !6591

bb:                                               ; preds = %entry
  %12 = load %4** %stream_addr, align 8, !dbg !6593
  %13 = getelementptr inbounds %4* %12, i32 0, i32 3, !dbg !6593
  %14 = load i8** %13, align 8, !dbg !6593
  %15 = load %4** %stream_addr, align 8, !dbg !6593
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6593
  store i8* %14, i8** %16, align 8, !dbg !6593
  %17 = load %4** %stream_addr, align 8, !dbg !6594
  %18 = getelementptr inbounds %4* %17, i32 0, i32 3, !dbg !6594
  %19 = load i8** %18, align 8, !dbg !6594
  %20 = load %4** %stream_addr, align 8, !dbg !6594
  %21 = load i64* %bufsize, align 8, !dbg !6594
  %22 = call i64 @__stdio_WRITE(%4* %20, i8* %19, i64 %21) nounwind, !dbg !6594
  br label %bb1, !dbg !6594

bb1:                                              ; preds = %bb, %entry
  %23 = load %4** %stream_addr, align 8, !dbg !6595
  %24 = getelementptr inbounds %4* %23, i32 0, i32 5, !dbg !6595
  %25 = load i8** %24, align 8, !dbg !6595
  %26 = ptrtoint i8* %25 to i64, !dbg !6595
  %27 = load %4** %stream_addr, align 8, !dbg !6595
  %28 = getelementptr inbounds %4* %27, i32 0, i32 3, !dbg !6595
  %29 = load i8** %28, align 8, !dbg !6595
  %30 = ptrtoint i8* %29 to i64, !dbg !6595
  %31 = sub nsw i64 %26, %30, !dbg !6595
  store i64 %31, i64* %0, align 8, !dbg !6595
  %32 = load i64* %0, align 8, !dbg !6595
  store i64 %32, i64* %retval, align 8, !dbg !6595
  %retval2 = load i64* %retval, !dbg !6595
  ret i64 %retval2, !dbg !6595
}

define hidden %4* @_stdio_fopen(i64 %fname_or_mode, i8* noalias %mode, %4* noalias %stream, i32 %filedes) nounwind {
entry:
  %fname_or_mode_addr = alloca i64, align 8
  %mode_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %filedes_addr = alloca i32, align 4
  %retval = alloca %4*
  %0 = alloca %4*
  %open_mode = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64 %fname_or_mode, i64* %fname_or_mode_addr
  store i8* %mode, i8** %mode_addr
  store %4* %stream, %4** %stream_addr
  store i32 %filedes, i32* %filedes_addr
  store i32 0, i32* %open_mode, align 4, !dbg !6596
  %1 = load i8** %mode_addr, align 8, !dbg !6598
  %2 = load i8* %1, align 1, !dbg !6598
  %3 = icmp ne i8 %2, 114, !dbg !6598
  br i1 %3, label %bb, label %bb4, !dbg !6598

bb:                                               ; preds = %entry
  store i32 577, i32* %open_mode, align 4, !dbg !6599
  %4 = load i8** %mode_addr, align 8, !dbg !6600
  %5 = load i8* %4, align 1, !dbg !6600
  %6 = icmp ne i8 %5, 119, !dbg !6600
  br i1 %6, label %bb1, label %bb4, !dbg !6600

bb1:                                              ; preds = %bb
  store i32 1089, i32* %open_mode, align 4, !dbg !6601
  %7 = load i8** %mode_addr, align 8, !dbg !6602
  %8 = load i8* %7, align 1, !dbg !6602
  %9 = icmp ne i8 %8, 97, !dbg !6602
  br i1 %9, label %DO_EINVAL, label %bb4, !dbg !6602

DO_EINVAL:                                        ; preds = %bb16, %bb13, %bb1
  store i32 22, i32* @errno, align 4, !dbg !6603
  %10 = load %4** %stream_addr, align 8, !dbg !6604
  %11 = icmp ne %4* %10, null, !dbg !6604
  br i1 %11, label %FREE_STREAM, label %bb3, !dbg !6604

FREE_STREAM:                                      ; preds = %bb20, %DO_EINVAL
  %12 = load %4** %stream_addr, align 8, !dbg !6605
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !6605
  %14 = load i16* %13, align 8, !dbg !6605
  %15 = zext i16 %14 to i32, !dbg !6605
  %16 = and i32 %15, 8192, !dbg !6605
  %17 = icmp ne i32 %16, 0, !dbg !6605
  br i1 %17, label %bb2, label %bb3, !dbg !6605

bb2:                                              ; preds = %FREE_STREAM
  %18 = load %4** %stream_addr, align 8, !dbg !6605
  %19 = bitcast %4* %18 to i8*, !dbg !6605
  call void @free(i8* %19) nounwind, !dbg !6605
  br label %bb3, !dbg !6605

bb3:                                              ; preds = %bb2, %FREE_STREAM, %DO_EINVAL
  store %4* null, %4** %0, align 8, !dbg !6606
  br label %bb26, !dbg !6606

bb4:                                              ; preds = %bb1, %bb, %entry
  %20 = load i8** %mode_addr, align 8, !dbg !6607
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6607
  %22 = load i8* %21, align 1, !dbg !6607
  %23 = icmp eq i8 %22, 98, !dbg !6607
  br i1 %23, label %bb5, label %bb6, !dbg !6607

bb5:                                              ; preds = %bb4
  %24 = load i8** %mode_addr, align 8, !dbg !6608
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !6608
  store i8* %25, i8** %mode_addr, align 8, !dbg !6608
  br label %bb6, !dbg !6608

bb6:                                              ; preds = %bb5, %bb4
  %26 = load i8** %mode_addr, align 8, !dbg !6609
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6609
  %28 = load i8* %27, align 1, !dbg !6609
  %29 = icmp eq i8 %28, 43, !dbg !6609
  br i1 %29, label %bb7, label %bb8, !dbg !6609

bb7:                                              ; preds = %bb6
  %30 = load i8** %mode_addr, align 8, !dbg !6610
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !6610
  store i8* %31, i8** %mode_addr, align 8, !dbg !6610
  %32 = load i32* %open_mode, align 4, !dbg !6611
  %33 = or i32 %32, 1, !dbg !6611
  store i32 %33, i32* %open_mode, align 4, !dbg !6611
  %34 = load i32* %open_mode, align 4, !dbg !6612
  %35 = add i32 %34, 1, !dbg !6612
  store i32 %35, i32* %open_mode, align 4, !dbg !6612
  br label %bb8, !dbg !6612

bb8:                                              ; preds = %bb7, %bb6
  %36 = load %4** %stream_addr, align 8, !dbg !6613
  %37 = icmp eq %4* %36, null, !dbg !6613
  br i1 %37, label %bb9, label %bb12, !dbg !6613

bb9:                                              ; preds = %bb8
  %38 = call noalias i8* @malloc(i64 80) nounwind, !dbg !6614
  %39 = bitcast i8* %38 to %4*, !dbg !6614
  store %4* %39, %4** %stream_addr, align 8, !dbg !6614
  %40 = load %4** %stream_addr, align 8, !dbg !6614
  %41 = icmp eq %4* %40, null, !dbg !6614
  %42 = load %4** %stream_addr, align 8, !dbg !6615
  br i1 %41, label %bb10, label %bb11, !dbg !6614

bb10:                                             ; preds = %bb9
  store %4* %42, %4** %0, align 8, !dbg !6615
  br label %bb26, !dbg !6615

bb11:                                             ; preds = %bb9
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !6616
  store i16 8192, i16* %43, align 8, !dbg !6616
  %44 = load %4** %stream_addr, align 8, !dbg !6617
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6617
  store i8* null, i8** %45, align 8, !dbg !6617
  br label %bb12, !dbg !6617

bb12:                                             ; preds = %bb11, %bb8
  %46 = load i32* %filedes_addr, align 4, !dbg !6618
  %47 = icmp sge i32 %46, 0, !dbg !6618
  br i1 %47, label %bb13, label %bb18, !dbg !6618

bb13:                                             ; preds = %bb12
  %48 = load %4** %stream_addr, align 8, !dbg !6619
  %49 = getelementptr inbounds %4* %48, i32 0, i32 2, !dbg !6619
  %50 = load i32* %filedes_addr, align 4, !dbg !6619
  store i32 %50, i32* %49, align 4, !dbg !6619
  %51 = load i32* %open_mode, align 4, !dbg !6620
  %52 = and i32 %51, 3, !dbg !6620
  %53 = add i32 %52, 1, !dbg !6620
  store i32 %53, i32* %i, align 4, !dbg !6620
  %54 = load i64* %fname_or_mode_addr, align 8, !dbg !6621
  %55 = trunc i64 %54 to i32, !dbg !6621
  %56 = add nsw i32 %55, 1, !dbg !6621
  %57 = load i32* %i, align 4, !dbg !6621
  %58 = and i32 %56, %57, !dbg !6621
  %59 = load i32* %i, align 4, !dbg !6621
  %60 = icmp ne i32 %58, %59, !dbg !6621
  br i1 %60, label %DO_EINVAL, label %bb14, !dbg !6621

bb14:                                             ; preds = %bb13
  %61 = load i64* %fname_or_mode_addr, align 8, !dbg !6621
  %62 = trunc i64 %61 to i32, !dbg !6621
  %not = xor i32 %62, -1, !dbg !6621
  %63 = load i32* %open_mode, align 4, !dbg !6621
  %64 = and i32 %not, %63, !dbg !6621
  %65 = and i32 %64, 1024, !dbg !6621
  %66 = icmp eq i32 %65, 0, !dbg !6621
  br i1 %66, label %bb17, label %bb16, !dbg !6621

bb16:                                             ; preds = %bb14
  %67 = load i32* %filedes_addr, align 4, !dbg !6621
  %68 = call i32 (i32, i32, ...)* @fcntl(i32 %67, i32 4, i32 1024) nounwind, !dbg !6621
  %69 = icmp ne i32 %68, 0, !dbg !6621
  br i1 %69, label %DO_EINVAL, label %bb17, !dbg !6621

bb17:                                             ; preds = %bb16, %bb14
  %70 = load i32* %open_mode, align 4, !dbg !6622
  store i32 %70, i32* %open_mode, align 4, !dbg !6622
  br label %bb21, !dbg !6622

bb18:                                             ; preds = %bb12
  %71 = load i32* %filedes_addr, align 4, !dbg !6623
  %72 = icmp slt i32 %71, -1, !dbg !6623
  br i1 %72, label %bb19, label %bb20, !dbg !6623

bb19:                                             ; preds = %bb18
  %73 = load i32* %open_mode, align 4, !dbg !6623
  store i32 %73, i32* %open_mode, align 4, !dbg !6623
  br label %bb20, !dbg !6623

bb20:                                             ; preds = %bb19, %bb18
  %74 = load i32* %open_mode, align 4, !dbg !6624
  %75 = load i64* %fname_or_mode_addr, align 8, !dbg !6624
  %76 = inttoptr i64 %75 to i8*, !dbg !6624
  %77 = call i32 (i8*, i32, ...)* @open(i8* %76, i32 %74, i32 438) nounwind, !dbg !6624
  %78 = load %4** %stream_addr, align 8, !dbg !6624
  %79 = getelementptr inbounds %4* %78, i32 0, i32 2, !dbg !6624
  store i32 %77, i32* %79, align 4, !dbg !6624
  %80 = load %4** %stream_addr, align 8, !dbg !6624
  %81 = getelementptr inbounds %4* %80, i32 0, i32 2, !dbg !6624
  %82 = load i32* %81, align 4, !dbg !6624
  %83 = icmp slt i32 %82, 0, !dbg !6624
  br i1 %83, label %FREE_STREAM, label %bb21, !dbg !6624

bb21:                                             ; preds = %bb20, %bb17
  %84 = load %4** %stream_addr, align 8, !dbg !6625
  %85 = getelementptr inbounds %4* %84, i32 0, i32 0, !dbg !6625
  %86 = load i16* %85, align 8, !dbg !6625
  %87 = and i16 %86, 8192, !dbg !6625
  %88 = load %4** %stream_addr, align 8, !dbg !6625
  %89 = getelementptr inbounds %4* %88, i32 0, i32 0, !dbg !6625
  store i16 %87, i16* %89, align 8, !dbg !6625
  %90 = load %4** %stream_addr, align 8, !dbg !6626
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6626
  %92 = load i16* %91, align 8, !dbg !6626
  %93 = load i32* %open_mode, align 4, !dbg !6626
  %94 = trunc i32 %93 to i16, !dbg !6626
  %95 = and i16 %94, 1024, !dbg !6626
  %96 = load i32* %open_mode, align 4, !dbg !6626
  %97 = and i32 %96, 3, !dbg !6626
  %98 = add i32 %97, 1, !dbg !6626
  %99 = xor i32 %98, 3, !dbg !6626
  %100 = mul i32 %99, 16, !dbg !6626
  %101 = trunc i32 %100 to i16, !dbg !6626
  %102 = or i16 %95, %101, !dbg !6626
  %103 = or i16 %92, %102, !dbg !6626
  %104 = load %4** %stream_addr, align 8, !dbg !6626
  %105 = getelementptr inbounds %4* %104, i32 0, i32 0, !dbg !6626
  store i16 %103, i16* %105, align 8, !dbg !6626
  %106 = load i32* @errno, align 4, !dbg !6627
  store i32 %106, i32* %i, align 4, !dbg !6627
  %107 = load %4** %stream_addr, align 8, !dbg !6628
  %108 = getelementptr inbounds %4* %107, i32 0, i32 0, !dbg !6628
  %109 = load i16* %108, align 8, !dbg !6628
  %110 = load %4** %stream_addr, align 8, !dbg !6628
  %111 = getelementptr inbounds %4* %110, i32 0, i32 2, !dbg !6628
  %112 = load i32* %111, align 4, !dbg !6628
  %113 = call i32 @isatty(i32 %112) nounwind, !dbg !6628
  %114 = mul i32 %113, 256, !dbg !6628
  %115 = trunc i32 %114 to i16, !dbg !6628
  %116 = or i16 %109, %115, !dbg !6628
  %117 = load %4** %stream_addr, align 8, !dbg !6628
  %118 = getelementptr inbounds %4* %117, i32 0, i32 0, !dbg !6628
  store i16 %116, i16* %118, align 8, !dbg !6628
  %119 = load i32* %i, align 4, !dbg !6629
  store i32 %119, i32* @errno, align 4, !dbg !6629
  %120 = load %4** %stream_addr, align 8, !dbg !6630
  %121 = getelementptr inbounds %4* %120, i32 0, i32 3, !dbg !6630
  %122 = load i8** %121, align 8, !dbg !6630
  %123 = icmp eq i8* %122, null, !dbg !6630
  br i1 %123, label %bb22, label %bb25, !dbg !6630

bb22:                                             ; preds = %bb21
  %124 = call noalias i8* @malloc(i64 4096) nounwind, !dbg !6631
  %125 = load %4** %stream_addr, align 8, !dbg !6631
  %126 = getelementptr inbounds %4* %125, i32 0, i32 3, !dbg !6631
  store i8* %124, i8** %126, align 8, !dbg !6631
  %127 = load %4** %stream_addr, align 8, !dbg !6631
  %128 = getelementptr inbounds %4* %127, i32 0, i32 3, !dbg !6631
  %129 = load i8** %128, align 8, !dbg !6631
  %130 = icmp ne i8* %129, null, !dbg !6631
  %131 = load %4** %stream_addr, align 8, !dbg !6632
  %132 = getelementptr inbounds %4* %131, i32 0, i32 3, !dbg !6632
  %133 = load i8** %132, align 8, !dbg !6632
  br i1 %130, label %bb23, label %bb24, !dbg !6631

bb23:                                             ; preds = %bb22
  %134 = getelementptr inbounds i8* %133, i64 4096, !dbg !6632
  %135 = load %4** %stream_addr, align 8, !dbg !6632
  %136 = getelementptr inbounds %4* %135, i32 0, i32 4, !dbg !6632
  store i8* %134, i8** %136, align 8, !dbg !6632
  %137 = load %4** %stream_addr, align 8, !dbg !6633
  %138 = getelementptr inbounds %4* %137, i32 0, i32 0, !dbg !6633
  %139 = load i16* %138, align 8, !dbg !6633
  %140 = or i16 %139, 16384, !dbg !6633
  %141 = load %4** %stream_addr, align 8, !dbg !6633
  %142 = getelementptr inbounds %4* %141, i32 0, i32 0, !dbg !6633
  store i16 %140, i16* %142, align 8, !dbg !6633
  br label %bb25, !dbg !6633

bb24:                                             ; preds = %bb22
  %143 = load %4** %stream_addr, align 8, !dbg !6634
  %144 = getelementptr inbounds %4* %143, i32 0, i32 4, !dbg !6634
  store i8* %133, i8** %144, align 8, !dbg !6634
  br label %bb25, !dbg !6634

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %145 = load %4** %stream_addr, align 8, !dbg !6635
  %146 = getelementptr inbounds %4* %145, i32 0, i32 3, !dbg !6635
  %147 = load i8** %146, align 8, !dbg !6635
  %148 = load %4** %stream_addr, align 8, !dbg !6635
  %149 = getelementptr inbounds %4* %148, i32 0, i32 7, !dbg !6635
  store i8* %147, i8** %149, align 8, !dbg !6635
  %150 = load %4** %stream_addr, align 8, !dbg !6636
  %151 = getelementptr inbounds %4* %150, i32 0, i32 3, !dbg !6636
  %152 = load i8** %151, align 8, !dbg !6636
  %153 = load %4** %stream_addr, align 8, !dbg !6636
  %154 = getelementptr inbounds %4* %153, i32 0, i32 8, !dbg !6636
  store i8* %152, i8** %154, align 8, !dbg !6636
  %155 = load %4** %stream_addr, align 8, !dbg !6637
  %156 = getelementptr inbounds %4* %155, i32 0, i32 3, !dbg !6637
  %157 = load i8** %156, align 8, !dbg !6637
  %158 = load %4** %stream_addr, align 8, !dbg !6637
  %159 = getelementptr inbounds %4* %158, i32 0, i32 5, !dbg !6637
  store i8* %157, i8** %159, align 8, !dbg !6637
  %160 = load %4** %stream_addr, align 8, !dbg !6637
  %161 = getelementptr inbounds %4* %160, i32 0, i32 5, !dbg !6637
  %162 = load i8** %161, align 8, !dbg !6637
  %163 = load %4** %stream_addr, align 8, !dbg !6637
  %164 = getelementptr inbounds %4* %163, i32 0, i32 6, !dbg !6637
  store i8* %162, i8** %164, align 8, !dbg !6637
  %165 = load %4** %stream_addr, align 8, !dbg !6638
  %166 = getelementptr inbounds %4* %165, i32 0, i32 1, !dbg !6638
  %167 = getelementptr inbounds [2 x i8]* %166, i64 0, i64 0, !dbg !6638
  store i8 0, i8* %167, align 1, !dbg !6638
  %168 = load %4** %stream_addr, align 8, !dbg !6639
  %169 = getelementptr inbounds %4* %168, i32 0, i32 11, !dbg !6639
  %170 = getelementptr inbounds %struct.__mbstate_t* %169, i32 0, i32 0, !dbg !6639
  store i32 0, i32* %170, align 8, !dbg !6639
  %171 = load %4** @_stdio_openlist, align 8, !dbg !6640
  %172 = load %4** %stream_addr, align 8, !dbg !6640
  %173 = getelementptr inbounds %4* %172, i32 0, i32 9, !dbg !6640
  store %4* %171, %4** %173, align 8, !dbg !6640
  %174 = load %4** %stream_addr, align 8, !dbg !6641
  store %4* %174, %4** @_stdio_openlist, align 8, !dbg !6641
  %175 = load %4** %stream_addr, align 8, !dbg !6642
  store %4* %175, %4** %0, align 8, !dbg !6642
  br label %bb26, !dbg !6642

bb26:                                             ; preds = %bb25, %bb10, %bb3
  %176 = load %4** %0, align 8, !dbg !6606
  store %4* %176, %4** %retval, align 8, !dbg !6606
  %retval27 = load %4** %retval, !dbg !6606
  ret %4* %retval27, !dbg !6606
}

define hidden i64 @_stdlib_strto_l(i8* noalias %str, i8** noalias %endptr, i32 %base, i32 %sflag) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %sflag_addr = alloca i32, align 4
  %retval = alloca i64
  %iftmp.6 = alloca i64
  %0 = alloca i64
  %iftmp.5 = alloca i64
  %iftmp.2 = alloca i8
  %iftmp.1 = alloca i8
  %number = alloca i64
  %cutoff = alloca i64
  %fail_char = alloca i8*
  %negative = alloca i8
  %digit = alloca i8
  %cutoff_digit = alloca i8
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  store i32 %sflag, i32* %sflag_addr
  %1 = load i8** %str_addr, align 8, !dbg !6643
  store i8* %1, i8** %fail_char, align 8, !dbg !6643
  br label %bb1, !dbg !6643

bb:                                               ; preds = %bb1
  %2 = load i8** %str_addr, align 8, !dbg !6645
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !6645
  store i8* %3, i8** %str_addr, align 8, !dbg !6645
  br label %bb1, !dbg !6645

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !6646
  %5 = load i8** %str_addr, align 8, !dbg !6646
  %6 = load i8* %5, align 1, !dbg !6646
  %7 = sext i8 %6 to i32, !dbg !6646
  %8 = sext i32 %7 to i64, !dbg !6646
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !6646
  %10 = load i16* %9, align 1, !dbg !6646
  %11 = zext i16 %10 to i32, !dbg !6646
  %12 = and i32 %11, 8192, !dbg !6646
  %13 = icmp ne i32 %12, 0, !dbg !6646
  br i1 %13, label %bb, label %bb2, !dbg !6646

bb2:                                              ; preds = %bb1
  store i8 0, i8* %negative, align 1, !dbg !6647
  %14 = load i8** %str_addr, align 8, !dbg !6648
  %15 = load i8* %14, align 1, !dbg !6648
  %16 = sext i8 %15 to i32, !dbg !6648
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !6648

bb3:                                              ; preds = %bb2
  store i8 1, i8* %negative, align 1, !dbg !6649
  br label %bb4, !dbg !6649

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %str_addr, align 8, !dbg !6650
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6650
  store i8* %18, i8** %str_addr, align 8, !dbg !6650
  br label %bb5, !dbg !6650

bb5:                                              ; preds = %bb4, %bb2
  %19 = load i32* %base_addr, align 4, !dbg !6651
  %20 = and i32 %19, -17, !dbg !6651
  %21 = icmp eq i32 %20, 0, !dbg !6651
  br i1 %21, label %bb6, label %bb11, !dbg !6651

bb6:                                              ; preds = %bb5
  %22 = load i32* %base_addr, align 4, !dbg !6652
  %23 = add nsw i32 %22, 10, !dbg !6652
  store i32 %23, i32* %base_addr, align 4, !dbg !6652
  %24 = load i8** %str_addr, align 8, !dbg !6653
  %25 = load i8* %24, align 1, !dbg !6653
  %26 = icmp eq i8 %25, 48, !dbg !6653
  br i1 %26, label %bb7, label %bb9, !dbg !6653

bb7:                                              ; preds = %bb6
  %27 = load i8** %str_addr, align 8, !dbg !6654
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !6654
  store i8* %28, i8** %str_addr, align 8, !dbg !6654
  %29 = load i8** %str_addr, align 8, !dbg !6654
  store i8* %29, i8** %fail_char, align 8, !dbg !6654
  %30 = load i32* %base_addr, align 4, !dbg !6655
  %31 = sub nsw i32 %30, 2, !dbg !6655
  store i32 %31, i32* %base_addr, align 4, !dbg !6655
  %32 = load i8** %str_addr, align 8, !dbg !6656
  %33 = load i8* %32, align 1, !dbg !6656
  %34 = or i8 %33, 32, !dbg !6656
  %35 = icmp eq i8 %34, 120, !dbg !6656
  br i1 %35, label %bb8, label %bb9, !dbg !6656

bb8:                                              ; preds = %bb7
  %36 = load i8** %str_addr, align 8, !dbg !6657
  %37 = getelementptr inbounds i8* %36, i64 1, !dbg !6657
  store i8* %37, i8** %str_addr, align 8, !dbg !6657
  %38 = load i32* %base_addr, align 4, !dbg !6658
  %39 = load i32* %base_addr, align 4, !dbg !6658
  %40 = add nsw i32 %38, %39, !dbg !6658
  store i32 %40, i32* %base_addr, align 4, !dbg !6658
  br label %bb9, !dbg !6658

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %41 = load i32* %base_addr, align 4, !dbg !6659
  %42 = icmp sgt i32 %41, 16, !dbg !6659
  br i1 %42, label %bb10, label %bb11, !dbg !6659

bb10:                                             ; preds = %bb9
  store i32 16, i32* %base_addr, align 4, !dbg !6660
  br label %bb11, !dbg !6660

bb11:                                             ; preds = %bb10, %bb9, %bb5
  store i64 0, i64* %number, align 8, !dbg !6661
  %43 = load i32* %base_addr, align 4, !dbg !6662
  %44 = sub nsw i32 %43, 2, !dbg !6662
  %45 = icmp ule i32 %44, 34, !dbg !6662
  br i1 %45, label %bb12, label %bb26, !dbg !6662

bb12:                                             ; preds = %bb11
  %46 = load i32* %base_addr, align 4, !dbg !6663
  %47 = sext i32 %46 to i64, !dbg !6663
  %int_cast_to_i64 = bitcast i64 %47 to i64
  %48 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %49 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %49, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb12
  call void @klee_disable_symbex() nounwind
  %50 = urem i64 -1, %47, !dbg !6663
  %51 = trunc i64 %50 to i8, !dbg !6663
  store i8 %51, i8* %cutoff_digit, align 1, !dbg !6663
  %52 = load i32* %base_addr, align 4, !dbg !6664
  %53 = sext i32 %52 to i64, !dbg !6664
  %int_cast_to_i641 = bitcast i64 %53 to i64
  %54 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %55 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %55, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %56 = udiv i64 -1, %53, !dbg !6664
  store i64 %56, i64* %cutoff, align 8, !dbg !6664
  br label %bb13, !dbg !6664

bb13:                                             ; preds = %bb23, %bb24, %klee_div_zero_check.exit3
  %57 = load i8** %str_addr, align 8, !dbg !6665
  %58 = load i8* %57, align 1, !dbg !6665
  %59 = sub i8 %58, 48, !dbg !6665
  %60 = icmp ule i8 %59, 9, !dbg !6665
  %61 = load i8** %str_addr, align 8, !dbg !6665
  %62 = load i8* %61, align 1, !dbg !6665
  br i1 %60, label %bb14, label %bb15, !dbg !6665

bb14:                                             ; preds = %bb13
  %63 = sub i8 %62, 48, !dbg !6665
  store i8 %63, i8* %iftmp.1, align 1, !dbg !6665
  br label %bb19, !dbg !6665

bb15:                                             ; preds = %bb13
  %64 = icmp sgt i8 %62, 64, !dbg !6665
  br i1 %64, label %bb16, label %bb17, !dbg !6665

bb16:                                             ; preds = %bb15
  %65 = load i8** %str_addr, align 8, !dbg !6665
  %66 = load i8* %65, align 1, !dbg !6665
  %67 = or i8 %66, 32, !dbg !6665
  %68 = sub i8 %67, 87, !dbg !6665
  store i8 %68, i8* %iftmp.2, align 1, !dbg !6665
  br label %bb18, !dbg !6665

bb17:                                             ; preds = %bb15
  store i8 40, i8* %iftmp.2, align 1, !dbg !6665
  br label %bb18, !dbg !6665

bb18:                                             ; preds = %bb17, %bb16
  %69 = load i8* %iftmp.2, align 1, !dbg !6665
  store i8 %69, i8* %iftmp.1, align 1, !dbg !6665
  br label %bb19, !dbg !6665

bb19:                                             ; preds = %bb18, %bb14
  %70 = load i8* %iftmp.1, align 1, !dbg !6665
  store i8 %70, i8* %digit, align 1, !dbg !6665
  %71 = load i8* %digit, align 1, !dbg !6666
  %72 = zext i8 %71 to i32, !dbg !6666
  %73 = load i32* %base_addr, align 4, !dbg !6666
  %74 = icmp sge i32 %72, %73, !dbg !6666
  br i1 %74, label %bb26, label %bb20, !dbg !6666

bb20:                                             ; preds = %bb19
  %75 = load i8** %str_addr, align 8, !dbg !6667
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !6667
  store i8* %76, i8** %str_addr, align 8, !dbg !6667
  %77 = load i8** %str_addr, align 8, !dbg !6667
  store i8* %77, i8** %fail_char, align 8, !dbg !6667
  %78 = load i64* %number, align 8, !dbg !6668
  %79 = load i64* %cutoff, align 8, !dbg !6668
  %80 = icmp ugt i64 %78, %79, !dbg !6668
  br i1 %80, label %bb23, label %bb21, !dbg !6668

bb21:                                             ; preds = %bb20
  %81 = load i64* %number, align 8, !dbg !6668
  %82 = load i64* %cutoff, align 8, !dbg !6668
  %83 = icmp ne i64 %81, %82, !dbg !6668
  br i1 %83, label %bb24, label %bb22, !dbg !6668

bb22:                                             ; preds = %bb21
  %84 = load i8* %digit, align 1, !dbg !6668
  %85 = load i8* %cutoff_digit, align 1, !dbg !6668
  %86 = icmp ugt i8 %84, %85, !dbg !6668
  br i1 %86, label %bb23, label %bb24, !dbg !6668

bb23:                                             ; preds = %bb22, %bb20
  store i64 -1, i64* %number, align 8, !dbg !6669
  %87 = load i32* %sflag_addr, align 4, !dbg !6670
  %88 = trunc i32 %87 to i8, !dbg !6670
  %89 = load i8* %negative, align 1, !dbg !6670
  %90 = and i8 %88, %89, !dbg !6670
  store i8 %90, i8* %negative, align 1, !dbg !6670
  store i32 34, i32* @errno, align 4, !dbg !6671
  br label %bb13, !dbg !6671

bb24:                                             ; preds = %bb22, %bb21
  %91 = load i32* %base_addr, align 4, !dbg !6672
  %92 = sext i32 %91 to i64, !dbg !6672
  %93 = load i64* %number, align 8, !dbg !6672
  %94 = mul i64 %92, %93, !dbg !6672
  %95 = load i8* %digit, align 1, !dbg !6672
  %96 = zext i8 %95 to i64, !dbg !6672
  %97 = add i64 %94, %96, !dbg !6672
  store i64 %97, i64* %number, align 8, !dbg !6672
  br label %bb13, !dbg !6672

bb26:                                             ; preds = %bb19, %bb11
  %98 = load i8*** %endptr_addr, align 8, !dbg !6673
  %99 = icmp ne i8** %98, null, !dbg !6673
  br i1 %99, label %bb27, label %bb28, !dbg !6673

bb27:                                             ; preds = %bb26
  %100 = load i8** %fail_char, align 8, !dbg !6674
  %101 = load i8*** %endptr_addr, align 8, !dbg !6674
  store i8* %100, i8** %101, align 8, !dbg !6674
  br label %bb28, !dbg !6674

bb28:                                             ; preds = %bb27, %bb26
  %102 = load i8* %negative, align 1, !dbg !6675
  %103 = icmp ne i8 %102, 0, !dbg !6675
  br i1 %103, label %bb29, label %bb30, !dbg !6675

bb29:                                             ; preds = %bb28
  store i64 -9223372036854775808, i64* %iftmp.5, align 8, !dbg !6675
  br label %bb31, !dbg !6675

bb30:                                             ; preds = %bb28
  store i64 9223372036854775807, i64* %iftmp.5, align 8, !dbg !6675
  br label %bb31, !dbg !6675

bb31:                                             ; preds = %bb30, %bb29
  %104 = load i64* %iftmp.5, align 8, !dbg !6675
  store i64 %104, i64* %tmp, align 8, !dbg !6675
  %105 = load i32* %sflag_addr, align 4, !dbg !6677
  %106 = icmp ne i32 %105, 0, !dbg !6677
  br i1 %106, label %bb32, label %bb34, !dbg !6677

bb32:                                             ; preds = %bb31
  %107 = load i64* %number, align 8, !dbg !6677
  %108 = load i64* %tmp, align 8, !dbg !6677
  %109 = icmp ugt i64 %107, %108, !dbg !6677
  br i1 %109, label %bb33, label %bb34, !dbg !6677

bb33:                                             ; preds = %bb32
  %110 = load i64* %tmp, align 8, !dbg !6678
  store i64 %110, i64* %number, align 8, !dbg !6678
  store i32 34, i32* @errno, align 4, !dbg !6679
  br label %bb34, !dbg !6679

bb34:                                             ; preds = %bb33, %bb32, %bb31
  %111 = load i8* %negative, align 1, !dbg !6680
  %112 = icmp ne i8 %111, 0, !dbg !6680
  %113 = load i64* %number, align 8, !dbg !6680
  br i1 %112, label %bb35, label %bb36, !dbg !6680

bb35:                                             ; preds = %bb34
  %114 = sub nsw i64 0, %113, !dbg !6680
  store i64 %114, i64* %iftmp.6, align 8, !dbg !6680
  br label %bb37, !dbg !6680

bb36:                                             ; preds = %bb34
  store i64 %113, i64* %iftmp.6, align 8, !dbg !6680
  br label %bb37, !dbg !6680

bb37:                                             ; preds = %bb36, %bb35
  %115 = load i64* %iftmp.6, align 8, !dbg !6680
  store i64 %115, i64* %0, align 8, !dbg !6680
  %116 = load i64* %0, align 8, !dbg !6680
  store i64 %116, i64* %retval, align 8, !dbg !6680
  %retval38 = load i64* %retval, !dbg !6680
  ret i64 %retval38, !dbg !6680
}

define i32 @atoi(i8* %nptr) nounwind readonly {
entry:
  %nptr_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %nptr, i8** %nptr_addr
  %1 = load i8** %nptr_addr, align 8, !dbg !6681
  %2 = call i64 @strtol(i8* noalias %1, i8** noalias null, i32 10) nounwind, !dbg !6681
  %3 = trunc i64 %2 to i32, !dbg !6681
  store i32 %3, i32* %0, align 4, !dbg !6681
  %4 = load i32* %0, align 4, !dbg !6681
  store i32 %4, i32* %retval, align 4, !dbg !6681
  %retval1 = load i32* %retval, !dbg !6681
  ret i32 %retval1, !dbg !6681
}

define i8* @fgets_unlocked(i8* noalias %s, i32 %n, %4* noalias %stream) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %c = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %n, i32* %n_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i32* %n_addr, align 4, !dbg !6683
  %2 = icmp sle i32 %1, 0, !dbg !6683
  br i1 %2, label %ERROR, label %bb, !dbg !6683

bb:                                               ; preds = %entry
  %3 = load i8** %s_addr, align 8, !dbg !6685
  store i8* %3, i8** %p, align 8, !dbg !6685
  br label %bb9, !dbg !6685

bb1:                                              ; preds = %bb9
  %4 = load %4** %stream_addr, align 8, !dbg !6686
  %5 = getelementptr inbounds %4* %4, i32 0, i32 5, !dbg !6686
  %6 = load i8** %5, align 8, !dbg !6686
  %7 = load %4** %stream_addr, align 8, !dbg !6686
  %8 = getelementptr inbounds %4* %7, i32 0, i32 7, !dbg !6686
  %9 = load i8** %8, align 8, !dbg !6686
  %10 = icmp ult i8* %6, %9, !dbg !6686
  %11 = load %4** %stream_addr, align 8, !dbg !6687
  br i1 %10, label %bb2, label %bb4, !dbg !6686

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %4* %11, i32 0, i32 5, !dbg !6687
  %13 = load i8** %12, align 8, !dbg !6687
  %14 = load i8* %13, align 1, !dbg !6687
  %15 = load i8** %p, align 8, !dbg !6687
  store i8 %14, i8* %15, align 1, !dbg !6687
  %16 = load i8** %p, align 8, !dbg !6687
  %17 = load i8* %16, align 1, !dbg !6687
  %18 = icmp eq i8 %17, 10, !dbg !6687
  %19 = zext i1 %18 to i8, !dbg !6687
  %20 = load i8** %p, align 8, !dbg !6687
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6687
  store i8* %21, i8** %p, align 8, !dbg !6687
  %22 = getelementptr inbounds i8* %13, i64 1, !dbg !6687
  %23 = load %4** %stream_addr, align 8, !dbg !6687
  %24 = getelementptr inbounds %4* %23, i32 0, i32 5, !dbg !6687
  store i8* %22, i8** %24, align 8, !dbg !6687
  %toBool = icmp ne i8 %19, 0, !dbg !6687
  br i1 %toBool, label %bb10, label %bb9, !dbg !6687

bb4:                                              ; preds = %bb1
  %25 = call i32 @__fgetc_unlocked(%4* %11) nounwind, !dbg !6688
  store i32 %25, i32* %c, align 4, !dbg !6688
  %26 = load i32* %c, align 4, !dbg !6688
  %27 = icmp eq i32 %26, -1, !dbg !6688
  br i1 %27, label %bb5, label %bb7, !dbg !6688

bb5:                                              ; preds = %bb4
  %28 = load %4** %stream_addr, align 8, !dbg !6689
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6689
  %30 = load i16* %29, align 8, !dbg !6689
  %31 = zext i16 %30 to i32, !dbg !6689
  %32 = and i32 %31, 8, !dbg !6689
  %33 = icmp ne i32 %32, 0, !dbg !6689
  br i1 %33, label %ERROR, label %bb10, !dbg !6689

bb7:                                              ; preds = %bb4
  %34 = load i32* %c, align 4, !dbg !6690
  %35 = trunc i32 %34 to i8, !dbg !6690
  %36 = load i8** %p, align 8, !dbg !6690
  store i8 %35, i8* %36, align 1, !dbg !6690
  %37 = load i8** %p, align 8, !dbg !6690
  %38 = load i8* %37, align 1, !dbg !6690
  %39 = icmp eq i8 %38, 10, !dbg !6690
  %40 = zext i1 %39 to i8, !dbg !6690
  %41 = load i8** %p, align 8, !dbg !6690
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !6690
  store i8* %42, i8** %p, align 8, !dbg !6690
  %toBool8 = icmp ne i8 %40, 0, !dbg !6690
  br i1 %toBool8, label %bb10, label %bb9, !dbg !6690

bb9:                                              ; preds = %bb2, %bb7, %bb
  %43 = load i32* %n_addr, align 4, !dbg !6691
  %44 = sub nsw i32 %43, 1, !dbg !6691
  store i32 %44, i32* %n_addr, align 4, !dbg !6691
  %45 = load i32* %n_addr, align 4, !dbg !6691
  %46 = icmp ne i32 %45, 0, !dbg !6691
  br i1 %46, label %bb1, label %bb10, !dbg !6691

bb10:                                             ; preds = %bb5, %bb9, %bb7, %bb2
  %47 = load i8** %p, align 8, !dbg !6692
  %48 = load i8** %s_addr, align 8, !dbg !6692
  %49 = icmp ugt i8* %47, %48, !dbg !6692
  br i1 %49, label %bb11, label %ERROR, !dbg !6692

bb11:                                             ; preds = %bb10
  %50 = load i8** %p, align 8, !dbg !6693
  store i8 0, i8* %50, align 1, !dbg !6693
  %51 = load i8** %s_addr, align 8, !dbg !6694
  store i8* %51, i8** %0, align 8, !dbg !6694
  br label %bb12, !dbg !6694

ERROR:                                            ; preds = %bb10, %bb5, %entry
  store i8* null, i8** %0, align 8, !dbg !6695
  br label %bb12, !dbg !6695

bb12:                                             ; preds = %ERROR, %bb11
  %52 = load i8** %0, align 8, !dbg !6694
  store i8* %52, i8** %retval, align 8, !dbg !6694
  %retval13 = load i8** %retval, !dbg !6694
  ret i8* %retval13, !dbg !6694
}

define i32 @fseeko64(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64* %offset_addr, align 8, !dbg !6696
  store i64 %1, i64* %pos, align 8, !dbg !6696
  store i32 -1, i32* %retval1, align 4, !dbg !6698
  %2 = load i32* %whence_addr, align 4, !dbg !6699
  %3 = icmp ugt i32 %2, 2, !dbg !6699
  br i1 %3, label %bb, label %bb2, !dbg !6699

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6700
  br label %bb8, !dbg !6700

bb2:                                              ; preds = %entry
  %4 = load %4** %stream_addr, align 8, !dbg !6701
  %5 = getelementptr inbounds %4* %4, i32 0, i32 0, !dbg !6701
  %6 = load i16* %5, align 8, !dbg !6701
  %7 = zext i16 %6 to i32, !dbg !6701
  %8 = and i32 %7, 64, !dbg !6701
  %9 = icmp eq i32 %8, 0, !dbg !6701
  br i1 %9, label %bb4, label %bb3, !dbg !6701

bb3:                                              ; preds = %bb2
  %10 = load %4** %stream_addr, align 8, !dbg !6701
  %11 = call i64 @__stdio_wcommit(%4* noalias %10) nounwind, !dbg !6701
  %12 = icmp eq i64 %11, 0, !dbg !6701
  br i1 %12, label %bb4, label %bb8, !dbg !6701

bb4:                                              ; preds = %bb3, %bb2
  %13 = load i32* %whence_addr, align 4, !dbg !6701
  %14 = icmp ne i32 %13, 1, !dbg !6701
  br i1 %14, label %bb6, label %bb5, !dbg !6701

bb5:                                              ; preds = %bb4
  %15 = load %4** %stream_addr, align 8, !dbg !6701
  %16 = call i32 @__stdio_adjust_position(%4* noalias %15, i64* %pos) nounwind, !dbg !6701
  %17 = icmp sge i32 %16, 0, !dbg !6701
  br i1 %17, label %bb6, label %bb8, !dbg !6701

bb6:                                              ; preds = %bb5, %bb4
  %18 = load %4** %stream_addr, align 8, !dbg !6701
  %19 = load i32* %whence_addr, align 4, !dbg !6701
  %20 = call i32 @__stdio_seek(%4* %18, i64* %pos, i32 %19) nounwind, !dbg !6701
  %21 = icmp sge i32 %20, 0, !dbg !6701
  br i1 %21, label %bb7, label %bb8, !dbg !6701

bb7:                                              ; preds = %bb6
  %22 = load %4** %stream_addr, align 8, !dbg !6702
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6702
  %24 = load i16* %23, align 8, !dbg !6702
  %25 = and i16 %24, -72, !dbg !6702
  %26 = load %4** %stream_addr, align 8, !dbg !6702
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6702
  store i16 %25, i16* %27, align 8, !dbg !6702
  %28 = load %4** %stream_addr, align 8, !dbg !6703
  %29 = getelementptr inbounds %4* %28, i32 0, i32 3, !dbg !6703
  %30 = load i8** %29, align 8, !dbg !6703
  %31 = load %4** %stream_addr, align 8, !dbg !6703
  %32 = getelementptr inbounds %4* %31, i32 0, i32 5, !dbg !6703
  store i8* %30, i8** %32, align 8, !dbg !6703
  %33 = load %4** %stream_addr, align 8, !dbg !6703
  %34 = getelementptr inbounds %4* %33, i32 0, i32 5, !dbg !6703
  %35 = load i8** %34, align 8, !dbg !6703
  %36 = load %4** %stream_addr, align 8, !dbg !6703
  %37 = getelementptr inbounds %4* %36, i32 0, i32 6, !dbg !6703
  store i8* %35, i8** %37, align 8, !dbg !6703
  %38 = load %4** %stream_addr, align 8, !dbg !6704
  %39 = getelementptr inbounds %4* %38, i32 0, i32 3, !dbg !6704
  %40 = load i8** %39, align 8, !dbg !6704
  %41 = load %4** %stream_addr, align 8, !dbg !6704
  %42 = getelementptr inbounds %4* %41, i32 0, i32 7, !dbg !6704
  store i8* %40, i8** %42, align 8, !dbg !6704
  %43 = load %4** %stream_addr, align 8, !dbg !6705
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6705
  %45 = load i8** %44, align 8, !dbg !6705
  %46 = load %4** %stream_addr, align 8, !dbg !6705
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6705
  store i8* %45, i8** %47, align 8, !dbg !6705
  %48 = load %4** %stream_addr, align 8, !dbg !6706
  %49 = getelementptr inbounds %4* %48, i32 0, i32 11, !dbg !6706
  %50 = getelementptr inbounds %struct.__mbstate_t* %49, i32 0, i32 0, !dbg !6706
  store i32 0, i32* %50, align 8, !dbg !6706
  %51 = load %4** %stream_addr, align 8, !dbg !6707
  %52 = getelementptr inbounds %4* %51, i32 0, i32 1, !dbg !6707
  %53 = getelementptr inbounds [2 x i8]* %52, i64 0, i64 0, !dbg !6707
  store i8 0, i8* %53, align 1, !dbg !6707
  store i32 0, i32* %retval1, align 4, !dbg !6708
  br label %bb8, !dbg !6708

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %54 = load i32* %retval1, align 4, !dbg !6709
  store i32 %54, i32* %0, align 4, !dbg !6709
  %55 = load i32* %0, align 4, !dbg !6709
  store i32 %55, i32* %retval, align 4, !dbg !6709
  %retval9 = load i32* %retval, !dbg !6709
  ret i32 %retval9, !dbg !6709
}

define i64 @getdelim(i8** noalias %lineptr, i64* noalias %n, i32 %delimiter, %4* noalias %stream) nounwind {
entry:
  %lineptr_addr = alloca i8**, align 8
  %n_addr = alloca i64*, align 8
  %delimiter_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.1 = alloca i32
  %1 = alloca i32
  %buf = alloca i8*
  %pos = alloca i64
  %c = alloca i32
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %lineptr, i8*** %lineptr_addr
  store i64* %n, i64** %n_addr
  store i32 %delimiter, i32* %delimiter_addr
  store %4* %stream, %4** %stream_addr
  store i64 -1, i64* %pos, align 8, !dbg !6710
  %2 = load i8*** %lineptr_addr, align 8, !dbg !6712
  %3 = icmp eq i8** %2, null, !dbg !6712
  br i1 %3, label %bb2, label %bb, !dbg !6712

bb:                                               ; preds = %entry
  %4 = load i64** %n_addr, align 8, !dbg !6712
  %5 = icmp eq i64* %4, null, !dbg !6712
  br i1 %5, label %bb2, label %bb1, !dbg !6712

bb1:                                              ; preds = %bb
  %6 = load %4** %stream_addr, align 8, !dbg !6712
  %7 = icmp eq %4* %6, null, !dbg !6712
  br i1 %7, label %bb2, label %bb3, !dbg !6712

bb2:                                              ; preds = %bb1, %bb, %entry
  store i32 22, i32* @errno, align 4, !dbg !6713
  br label %bb19, !dbg !6713

bb3:                                              ; preds = %bb1
  %8 = load i8*** %lineptr_addr, align 8, !dbg !6714
  %9 = load i8** %8, align 8, !dbg !6714
  store i8* %9, i8** %buf, align 8, !dbg !6714
  %10 = load i8** %buf, align 8, !dbg !6714
  %11 = icmp eq i8* %10, null, !dbg !6714
  br i1 %11, label %bb4, label %bb5, !dbg !6714

bb4:                                              ; preds = %bb3
  %12 = load i64** %n_addr, align 8, !dbg !6715
  store i64 0, i64* %12, align 8, !dbg !6715
  br label %bb5, !dbg !6715

bb5:                                              ; preds = %bb4, %bb3
  store i64 1, i64* %pos, align 8, !dbg !6716
  br label %bb6, !dbg !6716

bb6:                                              ; preds = %bb14, %bb5
  %13 = load i64* %pos, align 8, !dbg !6717
  %14 = load i64** %n_addr, align 8, !dbg !6717
  %15 = load i64* %14, align 8, !dbg !6717
  %16 = icmp uge i64 %13, %15, !dbg !6717
  br i1 %16, label %bb7, label %bb10, !dbg !6717

bb7:                                              ; preds = %bb6
  %17 = load i64** %n_addr, align 8, !dbg !6718
  %18 = load i64* %17, align 8, !dbg !6718
  %19 = add i64 %18, 64, !dbg !6718
  %20 = load i8** %buf, align 8, !dbg !6718
  %21 = call noalias i8* @realloc(i8* %20, i64 %19) nounwind, !dbg !6718
  store i8* %21, i8** %buf, align 8, !dbg !6718
  %22 = load i8** %buf, align 8, !dbg !6718
  %23 = icmp eq i8* %22, null, !dbg !6718
  br i1 %23, label %bb8, label %bb9, !dbg !6718

bb8:                                              ; preds = %bb7
  store i64 -1, i64* %pos, align 8, !dbg !6719
  br label %bb19, !dbg !6719

bb9:                                              ; preds = %bb7
  %24 = load i64** %n_addr, align 8, !dbg !6720
  %25 = load i64* %24, align 8, !dbg !6720
  %26 = add i64 %25, 64, !dbg !6720
  %27 = load i64** %n_addr, align 8, !dbg !6720
  store i64 %26, i64* %27, align 8, !dbg !6720
  %28 = load i8*** %lineptr_addr, align 8, !dbg !6721
  %29 = load i8** %buf, align 8, !dbg !6721
  store i8* %29, i8** %28, align 8, !dbg !6721
  br label %bb10, !dbg !6721

bb10:                                             ; preds = %bb9, %bb6
  %30 = load %4** %stream_addr, align 8, !dbg !6722
  store %4* %30, %4** %__S, align 8, !dbg !6722
  %31 = load %4** %__S, align 8, !dbg !6722
  %32 = getelementptr inbounds %4* %31, i32 0, i32 5, !dbg !6722
  %33 = load i8** %32, align 8, !dbg !6722
  %34 = load %4** %__S, align 8, !dbg !6722
  %35 = getelementptr inbounds %4* %34, i32 0, i32 7, !dbg !6722
  %36 = load i8** %35, align 8, !dbg !6722
  %37 = icmp ult i8* %33, %36, !dbg !6722
  %38 = load %4** %__S, align 8, !dbg !6722
  br i1 %37, label %bb11, label %bb12, !dbg !6722

bb11:                                             ; preds = %bb10
  %39 = getelementptr inbounds %4* %38, i32 0, i32 5, !dbg !6722
  %40 = load i8** %39, align 8, !dbg !6722
  %41 = load i8* %40, align 1, !dbg !6722
  %42 = zext i8 %41 to i32, !dbg !6722
  store i32 %42, i32* %iftmp.1, align 4, !dbg !6722
  %43 = getelementptr inbounds i8* %40, i64 1, !dbg !6722
  %44 = load %4** %__S, align 8, !dbg !6722
  %45 = getelementptr inbounds %4* %44, i32 0, i32 5, !dbg !6722
  store i8* %43, i8** %45, align 8, !dbg !6722
  br label %bb13, !dbg !6722

bb12:                                             ; preds = %bb10
  %46 = call i32 @__fgetc_unlocked(%4* %38) nounwind, !dbg !6722
  store i32 %46, i32* %iftmp.1, align 4, !dbg !6722
  br label %bb13, !dbg !6722

bb13:                                             ; preds = %bb12, %bb11
  %47 = load i32* %iftmp.1, align 4, !dbg !6722
  store i32 %47, i32* %1, align 4, !dbg !6722
  %48 = load i32* %1, align 4, !dbg !6722
  store i32 %48, i32* %c, align 4, !dbg !6722
  %49 = load i32* %c, align 4, !dbg !6722
  %50 = icmp ne i32 %49, -1, !dbg !6722
  br i1 %50, label %bb14, label %bb15, !dbg !6722

bb14:                                             ; preds = %bb13
  %51 = load i64* %pos, align 8, !dbg !6724
  %52 = add nsw i64 %51, 1, !dbg !6724
  store i64 %52, i64* %pos, align 8, !dbg !6724
  %53 = load i64* %pos, align 8, !dbg !6724
  %54 = sub nsw i64 %53, 2, !dbg !6724
  %55 = load i32* %c, align 4, !dbg !6724
  %56 = trunc i32 %55 to i8, !dbg !6724
  %57 = load i8** %buf, align 8, !dbg !6724
  %58 = getelementptr inbounds i8* %57, i64 %54, !dbg !6724
  store i8 %56, i8* %58, align 1, !dbg !6724
  %59 = load i32* %c, align 4, !dbg !6725
  %60 = load i32* %delimiter_addr, align 4, !dbg !6725
  %61 = icmp ne i32 %59, %60, !dbg !6725
  br i1 %61, label %bb6, label %bb15, !dbg !6725

bb15:                                             ; preds = %bb14, %bb13
  %62 = load i64* %pos, align 8, !dbg !6726
  %63 = sub nsw i64 %62, 2, !dbg !6726
  store i64 %63, i64* %pos, align 8, !dbg !6726
  %64 = load i64* %pos, align 8, !dbg !6726
  %65 = icmp sge i64 %64, 0, !dbg !6726
  br i1 %65, label %bb16, label %bb19, !dbg !6726

bb16:                                             ; preds = %bb15
  %66 = load i64* %pos, align 8, !dbg !6727
  %67 = add nsw i64 %66, 1, !dbg !6727
  store i64 %67, i64* %pos, align 8, !dbg !6727
  %68 = load i8** %buf, align 8, !dbg !6727
  %69 = load i64* %pos, align 8, !dbg !6727
  %70 = getelementptr inbounds i8* %68, i64 %69, !dbg !6727
  store i8 0, i8* %70, align 1, !dbg !6727
  br label %bb19, !dbg !6727

bb19:                                             ; preds = %bb15, %bb16, %bb8, %bb2
  %71 = load i64* %pos, align 8, !dbg !6728
  store i64 %71, i64* %0, align 8, !dbg !6728
  %72 = load i64* %0, align 8, !dbg !6728
  store i64 %72, i64* %retval, align 8, !dbg !6728
  %retval20 = load i64* %retval, !dbg !6728
  ret i64 %retval20, !dbg !6728
}

define i32 @isatty(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %term = alloca %struct.termios
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4, !dbg !6729
  %2 = call i32 @tcgetattr(i32 %1, %struct.termios* %term) nounwind, !dbg !6729
  %3 = icmp eq i32 %2, 0, !dbg !6729
  %4 = zext i1 %3 to i32, !dbg !6729
  store i32 %4, i32* %0, align 4, !dbg !6729
  %5 = load i32* %0, align 4, !dbg !6729
  store i32 %5, i32* %retval, align 4, !dbg !6729
  %retval1 = load i32* %retval, !dbg !6729
  ret i32 %retval1, !dbg !6729
}

define i32 @iswctype(i32 %wc, i32 %desc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %desc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  store i32 %desc, i32* %desc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6731
  %2 = icmp ule i32 %1, 127, !dbg !6731
  br i1 %2, label %bb, label %bb2, !dbg !6731

bb:                                               ; preds = %entry
  %3 = load i32* %desc_addr, align 4, !dbg !6731
  %4 = icmp ule i32 %3, 12, !dbg !6731
  br i1 %4, label %bb1, label %bb2, !dbg !6731

bb1:                                              ; preds = %bb
  %5 = load i16** @__ctype_b, align 8, !dbg !6733
  %6 = load i32* %wc_addr, align 4, !dbg !6733
  %7 = sext i32 %6 to i64, !dbg !6733
  %8 = getelementptr inbounds i16* %5, i64 %7, !dbg !6733
  %9 = load i16* %8, align 1, !dbg !6733
  %10 = load i32* %desc_addr, align 4, !dbg !6733
  %11 = zext i32 %10 to i64, !dbg !6733
  %12 = getelementptr inbounds [13 x i16]* @desc2flag, i64 0, i64 %11, !dbg !6733
  %13 = load i16* %12, align 2, !dbg !6733
  %14 = and i16 %9, %13, !dbg !6733
  %15 = zext i16 %14 to i32, !dbg !6733
  store i32 %15, i32* %0, align 4, !dbg !6733
  br label %bb3, !dbg !6733

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %0, align 4, !dbg !6734
  br label %bb3, !dbg !6734

bb3:                                              ; preds = %bb2, %bb1
  %16 = load i32* %0, align 4, !dbg !6733
  store i32 %16, i32* %retval, align 4, !dbg !6733
  %retval4 = load i32* %retval, !dbg !6733
  ret i32 %retval4, !dbg !6733
}

define i64 @mbsnrtowcs(i32* noalias %dst, i8** noalias %src, i64 %NMC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i32*, align 8
  %src_addr = alloca i8**, align 8
  %NMC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %s = alloca i8*
  %count = alloca i64
  %incr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %dst, i32** %dst_addr
  store i8** %src, i8*** %src_addr
  store i64 %NMC, i64* %NMC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6735
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6735
  br i1 %2, label %bb, label %bb1, !dbg !6735

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2222, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6737
  br label %bb1, !dbg !6737

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %incr, align 4, !dbg !6738
  %3 = load i32** %dst_addr, align 8, !dbg !6739
  %4 = icmp eq i32* %3, null, !dbg !6739
  br i1 %4, label %bb3, label %bb2, !dbg !6739

bb2:                                              ; preds = %bb1
  %5 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6739
  %6 = bitcast %struct.__mbstate_t* %5 to i32*, !dbg !6739
  %7 = load i32** %dst_addr, align 8, !dbg !6739
  %8 = icmp eq i32* %7, %6, !dbg !6739
  br i1 %8, label %bb3, label %bb7, !dbg !6739

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i32** %dst_addr, align 8, !dbg !6740
  %10 = icmp eq i32* %9, null, !dbg !6740
  br i1 %10, label %bb4, label %bb5, !dbg !6740

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %len_addr, align 8, !dbg !6741
  br label %bb5, !dbg !6741

bb5:                                              ; preds = %bb4, %bb3
  %wcbuf6 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6742
  store i32* %wcbuf6, i32** %dst_addr, align 8, !dbg !6742
  store i32 0, i32* %incr, align 4, !dbg !6743
  br label %bb7, !dbg !6743

bb7:                                              ; preds = %bb5, %bb2
  %11 = load i64* %len_addr, align 8, !dbg !6744
  %12 = load i64* %NMC_addr, align 8, !dbg !6744
  %13 = icmp ugt i64 %11, %12, !dbg !6744
  br i1 %13, label %bb8, label %bb9, !dbg !6744

bb8:                                              ; preds = %bb7
  %14 = load i64* %NMC_addr, align 8, !dbg !6745
  store i64 %14, i64* %len_addr, align 8, !dbg !6745
  br label %bb9, !dbg !6745

bb9:                                              ; preds = %bb8, %bb7
  %15 = load i64* %len_addr, align 8, !dbg !6746
  store i64 %15, i64* %count, align 8, !dbg !6746
  %16 = load i8*** %src_addr, align 8, !dbg !6747
  %17 = load i8** %16, align 8, !dbg !6747
  store i8* %17, i8** %s, align 8, !dbg !6747
  br label %bb15, !dbg !6747

bb10:                                             ; preds = %bb15
  %18 = load i8** %s, align 8, !dbg !6748
  %19 = load i8* %18, align 1, !dbg !6748
  %20 = zext i8 %19 to i32, !dbg !6748
  %21 = load i32** %dst_addr, align 8, !dbg !6748
  store i32 %20, i32* %21, align 4, !dbg !6748
  %22 = load i32** %dst_addr, align 8, !dbg !6748
  %23 = load i32* %22, align 4, !dbg !6748
  %24 = icmp eq i32 %23, 0, !dbg !6748
  br i1 %24, label %bb11, label %bb12, !dbg !6748

bb11:                                             ; preds = %bb10
  store i8* null, i8** %s, align 8, !dbg !6749
  br label %bb16, !dbg !6749

bb12:                                             ; preds = %bb10
  %25 = load i32** %dst_addr, align 8, !dbg !6750
  %26 = load i32* %25, align 4, !dbg !6750
  %27 = icmp sgt i32 %26, 127, !dbg !6750
  br i1 %27, label %bb13, label %bb14, !dbg !6750

bb13:                                             ; preds = %bb12
  store i32 84, i32* @errno, align 4, !dbg !6751
  store i64 -1, i64* %0, align 8, !dbg !6752
  br label %bb20, !dbg !6752

bb14:                                             ; preds = %bb12
  %28 = load i8** %s, align 8, !dbg !6753
  %29 = getelementptr inbounds i8* %28, i64 1, !dbg !6753
  store i8* %29, i8** %s, align 8, !dbg !6753
  %30 = load i32** %dst_addr, align 8, !dbg !6754
  %31 = load i32* %incr, align 4, !dbg !6754
  %32 = sext i32 %31 to i64, !dbg !6754
  %33 = getelementptr inbounds i32* %30, i64 %32, !dbg !6754
  store i32* %33, i32** %dst_addr, align 8, !dbg !6754
  %34 = load i64* %count, align 8, !dbg !6755
  %35 = sub i64 %34, 1, !dbg !6755
  store i64 %35, i64* %count, align 8, !dbg !6755
  br label %bb15, !dbg !6755

bb15:                                             ; preds = %bb14, %bb9
  %36 = load i64* %count, align 8, !dbg !6756
  %37 = icmp ne i64 %36, 0, !dbg !6756
  br i1 %37, label %bb10, label %bb16, !dbg !6756

bb16:                                             ; preds = %bb15, %bb11
  %wcbuf17 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6757
  %38 = load i32** %dst_addr, align 8, !dbg !6757
  %39 = icmp ne i32* %wcbuf17, %38, !dbg !6757
  br i1 %39, label %bb18, label %bb19, !dbg !6757

bb18:                                             ; preds = %bb16
  %40 = load i8*** %src_addr, align 8, !dbg !6758
  %41 = load i8** %s, align 8, !dbg !6758
  store i8* %41, i8** %40, align 8, !dbg !6758
  br label %bb19, !dbg !6758

bb19:                                             ; preds = %bb18, %bb16
  %42 = load i64* %len_addr, align 8, !dbg !6759
  %43 = load i64* %count, align 8, !dbg !6759
  %44 = sub i64 %42, %43, !dbg !6759
  store i64 %44, i64* %0, align 8, !dbg !6759
  br label %bb20, !dbg !6759

bb20:                                             ; preds = %bb19, %bb13
  %45 = load i64* %0, align 8, !dbg !6752
  store i64 %45, i64* %retval, align 8, !dbg !6752
  %retval21 = load i64* %retval, !dbg !6752
  ret i64 %retval21, !dbg !6752
}

define i64 @mbsrtowcs(i32* noalias %dst, i8** noalias %src, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i32*, align 8
  %src_addr = alloca i8**, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca %struct.__mbstate_t*
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32* %dst, i32** %dst_addr
  store i8** %src, i8*** %src_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6760
  %2 = icmp ne %struct.__mbstate_t* %1, null, !dbg !6760
  br i1 %2, label %bb, label %bb1, !dbg !6760

bb:                                               ; preds = %entry
  %3 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6760
  store %struct.__mbstate_t* %3, %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6760
  br label %bb2, !dbg !6760

bb1:                                              ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2221231, %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6760
  br label %bb2, !dbg !6760

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32** %dst_addr, align 8, !dbg !6760
  %5 = load i8*** %src_addr, align 8, !dbg !6760
  %6 = load i64* %len_addr, align 8, !dbg !6760
  %7 = load %struct.__mbstate_t** %iftmp.0, align 8, !dbg !6760
  %8 = call i64 @mbsnrtowcs(i32* noalias %4, i8** noalias %5, i64 -1, i64 %6, %struct.__mbstate_t* noalias %7) nounwind, !dbg !6760
  store i64 %8, i64* %0, align 8, !dbg !6760
  %9 = load i64* %0, align 8, !dbg !6760
  store i64 %9, i64* %retval, align 8, !dbg !6760
  %retval3 = load i64* %retval, !dbg !6760
  ret i64 %retval3, !dbg !6760
}

define i8* @memcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6762
  store i8* %1, i8** %r1, align 8, !dbg !6762
  %2 = load i8** %s2_addr, align 8, !dbg !6764
  store i8* %2, i8** %r2, align 8, !dbg !6764
  br label %bb1, !dbg !6764

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6765
  %4 = load i8* %3, align 1, !dbg !6765
  %5 = load i8** %r1, align 8, !dbg !6765
  store i8 %4, i8* %5, align 1, !dbg !6765
  %6 = load i8** %r1, align 8, !dbg !6765
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6765
  store i8* %7, i8** %r1, align 8, !dbg !6765
  %8 = load i8** %r2, align 8, !dbg !6765
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6765
  store i8* %9, i8** %r2, align 8, !dbg !6765
  %10 = load i64* %n_addr, align 8, !dbg !6766
  %11 = sub i64 %10, 1, !dbg !6766
  store i64 %11, i64* %n_addr, align 8, !dbg !6766
  br label %bb1, !dbg !6766

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6767
  %13 = icmp ne i64 %12, 0, !dbg !6767
  br i1 %13, label %bb, label %bb2, !dbg !6767

bb2:                                              ; preds = %bb1
  %14 = load i8** %s1_addr, align 8, !dbg !6768
  store i8* %14, i8** %0, align 8, !dbg !6768
  %15 = load i8** %0, align 8, !dbg !6768
  store i8* %15, i8** %retval, align 8, !dbg !6768
  %retval3 = load i8** %retval, !dbg !6768
  ret i8* %retval3, !dbg !6768
}

define i8* @memmove(i8* %s1, i8* %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6769
  store i8* %1, i8** %s, align 8, !dbg !6769
  %2 = load i8** %s2_addr, align 8, !dbg !6771
  store i8* %2, i8** %p, align 8, !dbg !6771
  %3 = load i8** %p, align 8, !dbg !6772
  %4 = load i8** %s, align 8, !dbg !6772
  %5 = icmp uge i8* %3, %4, !dbg !6772
  br i1 %5, label %bb2, label %bb6, !dbg !6772

bb1:                                              ; preds = %bb2
  %6 = load i8** %p, align 8, !dbg !6773
  %7 = load i8* %6, align 1, !dbg !6773
  %8 = load i8** %s, align 8, !dbg !6773
  store i8 %7, i8* %8, align 1, !dbg !6773
  %9 = load i8** %s, align 8, !dbg !6773
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6773
  store i8* %10, i8** %s, align 8, !dbg !6773
  %11 = load i8** %p, align 8, !dbg !6773
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6773
  store i8* %12, i8** %p, align 8, !dbg !6773
  %13 = load i64* %n_addr, align 8, !dbg !6774
  %14 = sub i64 %13, 1, !dbg !6774
  store i64 %14, i64* %n_addr, align 8, !dbg !6774
  br label %bb2, !dbg !6774

bb2:                                              ; preds = %entry, %bb1
  %15 = load i64* %n_addr, align 8, !dbg !6775
  %16 = icmp ne i64 %15, 0, !dbg !6775
  br i1 %16, label %bb1, label %bb7, !dbg !6775

bb5:                                              ; preds = %bb6
  %17 = load i64* %n_addr, align 8, !dbg !6776
  %18 = sub i64 %17, 1, !dbg !6776
  store i64 %18, i64* %n_addr, align 8, !dbg !6776
  %19 = load i8** %p, align 8, !dbg !6777
  %20 = load i64* %n_addr, align 8, !dbg !6777
  %21 = getelementptr inbounds i8* %19, i64 %20, !dbg !6777
  %22 = load i8* %21, align 1, !dbg !6777
  %23 = load i8** %s, align 8, !dbg !6777
  %24 = load i64* %n_addr, align 8, !dbg !6777
  %25 = getelementptr inbounds i8* %23, i64 %24, !dbg !6777
  store i8 %22, i8* %25, align 1, !dbg !6777
  br label %bb6, !dbg !6777

bb6:                                              ; preds = %entry, %bb5
  %26 = load i64* %n_addr, align 8, !dbg !6778
  %27 = icmp ne i64 %26, 0, !dbg !6778
  br i1 %27, label %bb5, label %bb7, !dbg !6778

bb7:                                              ; preds = %bb2, %bb6
  %28 = load i8** %s1_addr, align 8, !dbg !6779
  store i8* %28, i8** %0, align 8, !dbg !6779
  %29 = load i8** %0, align 8, !dbg !6779
  store i8* %29, i8** %retval, align 8, !dbg !6779
  %retval8 = load i8** %retval, !dbg !6779
  ret i8* %retval8, !dbg !6779
}

define i8* @memset(i8* %s, i32 %c, i64 %n) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6780
  store i8* %1, i8** %p, align 8, !dbg !6780
  br label %bb1, !dbg !6780

bb:                                               ; preds = %bb1
  %2 = load i32* %c_addr, align 4, !dbg !6782
  %3 = trunc i32 %2 to i8, !dbg !6782
  %4 = load i8** %p, align 8, !dbg !6782
  store i8 %3, i8* %4, align 1, !dbg !6782
  %5 = load i8** %p, align 8, !dbg !6782
  %6 = getelementptr inbounds i8* %5, i64 1, !dbg !6782
  store i8* %6, i8** %p, align 8, !dbg !6782
  %7 = load i64* %n_addr, align 8, !dbg !6783
  %8 = sub i64 %7, 1, !dbg !6783
  store i64 %8, i64* %n_addr, align 8, !dbg !6783
  br label %bb1, !dbg !6783

bb1:                                              ; preds = %bb, %entry
  %9 = load i64* %n_addr, align 8, !dbg !6784
  %10 = icmp ne i64 %9, 0, !dbg !6784
  br i1 %10, label %bb, label %bb2, !dbg !6784

bb2:                                              ; preds = %bb1
  %11 = load i8** %s_addr, align 8, !dbg !6785
  store i8* %11, i8** %0, align 8, !dbg !6785
  %12 = load i8** %0, align 8, !dbg !6785
  store i8* %12, i8** %retval, align 8, !dbg !6785
  %retval3 = load i8** %retval, !dbg !6785
  ret i8* %retval3, !dbg !6785
}

define hidden i32 @__raise(i32 %signo) nounwind {
entry:
  %signo_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %signo, i32* %signo_addr
  %1 = call i32 @getpid() nounwind, !dbg !6786
  %2 = load i32* %signo_addr, align 4, !dbg !6786
  %3 = call i32 @kill(i32 %1, i32 %2) nounwind, !dbg !6786
  store i32 %3, i32* %0, align 4, !dbg !6786
  %4 = load i32* %0, align 4, !dbg !6786
  store i32 %4, i32* %retval, align 4, !dbg !6786
  %retval1 = load i32* %retval, !dbg !6786
  ret i32 %retval1, !dbg !6786
}

declare i32 @getpid() nounwind

define i32 @__libc_sigaction(i32 %sig, %struct.sigaction* %act, %struct.sigaction* %oact) nounwind {
entry:
  %sig_addr = alloca i32, align 4
  %act_addr = alloca %struct.sigaction*, align 8
  %oact_addr = alloca %struct.sigaction*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca %struct.kernel_sigaction*
  %iftmp.0 = alloca %struct.kernel_sigaction*
  %result = alloca i32
  %kact = alloca %struct.kernel_sigaction
  %koact = alloca %struct.kernel_sigaction
  %"alloca point" = bitcast i32 0 to i32
  store i32 %sig, i32* %sig_addr
  store %struct.sigaction* %act, %struct.sigaction** %act_addr
  store %struct.sigaction* %oact, %struct.sigaction** %oact_addr
  %1 = load %struct.sigaction** %act_addr, align 8, !dbg !6788
  %2 = icmp ne %struct.sigaction* %1, null, !dbg !6788
  br i1 %2, label %bb, label %bb1, !dbg !6788

bb:                                               ; preds = %entry
  %3 = load %struct.sigaction** %act_addr, align 8, !dbg !6790
  %4 = getelementptr inbounds %struct.sigaction* %3, i32 0, i32 0, !dbg !6790
  %5 = getelementptr inbounds %5* %4, i32 0, i32 0, !dbg !6790
  %6 = load void (i32)** %5, align 8, !dbg !6790
  %7 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 0, !dbg !6790
  store void (i32)* %6, void (i32)** %7, align 8, !dbg !6790
  %8 = load %struct.sigaction** %act_addr, align 8, !dbg !6791
  %9 = getelementptr inbounds %struct.sigaction* %8, i32 0, i32 1, !dbg !6791
  %10 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 3, !dbg !6791
  %11 = bitcast %struct.__sigset_t* %10 to i8*, !dbg !6791
  %12 = bitcast %struct.__sigset_t* %9 to i8*, !dbg !6791
  %13 = call i8* @memcpy(i8* noalias %11, i8* noalias %12, i64 128) nounwind, !dbg !6791
  %14 = load %struct.sigaction** %act_addr, align 8, !dbg !6792
  %15 = getelementptr inbounds %struct.sigaction* %14, i32 0, i32 2, !dbg !6792
  %16 = load i32* %15, align 8, !dbg !6792
  %17 = sext i32 %16 to i64, !dbg !6792
  %18 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 1, !dbg !6792
  store i64 %17, i64* %18, align 8, !dbg !6792
  %19 = load %struct.sigaction** %act_addr, align 8, !dbg !6793
  %20 = getelementptr inbounds %struct.sigaction* %19, i32 0, i32 3, !dbg !6793
  %21 = load void ()** %20, align 8, !dbg !6793
  %22 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 2, !dbg !6793
  store void ()* %21, void ()** %22, align 8, !dbg !6793
  br label %bb1, !dbg !6793

bb1:                                              ; preds = %bb, %entry
  %23 = load %struct.sigaction** %oact_addr, align 8, !dbg !6794
  %24 = icmp ne %struct.sigaction* %23, null, !dbg !6794
  br i1 %24, label %bb2, label %bb3, !dbg !6794

bb2:                                              ; preds = %bb1
  store %struct.kernel_sigaction* %koact, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6794
  br label %bb4, !dbg !6794

bb3:                                              ; preds = %bb1
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6794
  br label %bb4, !dbg !6794

bb4:                                              ; preds = %bb3, %bb2
  %25 = load %struct.sigaction** %act_addr, align 8, !dbg !6794
  %26 = icmp ne %struct.sigaction* %25, null, !dbg !6794
  br i1 %26, label %bb5, label %bb6, !dbg !6794

bb5:                                              ; preds = %bb4
  store %struct.kernel_sigaction* %kact, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6794
  br label %bb7, !dbg !6794

bb6:                                              ; preds = %bb4
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6794
  br label %bb7, !dbg !6794

bb7:                                              ; preds = %bb6, %bb5
  %27 = load i32* %sig_addr, align 4, !dbg !6794
  %28 = load %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6794
  %29 = load %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6794
  %30 = call i32 bitcast (i32 (i32, %struct.sigaction*, %struct.sigaction*, i64)* @__syscall_rt_sigaction to i32 (i32, %struct.kernel_sigaction*, %struct.kernel_sigaction*, i64)*)(i32 %27, %struct.kernel_sigaction* %28, %struct.kernel_sigaction* %29, i64
  store i32 %30, i32* %result, align 4, !dbg !6794
  %31 = load %struct.sigaction** %oact_addr, align 8, !dbg !6795
  %32 = icmp ne %struct.sigaction* %31, null, !dbg !6795
  br i1 %32, label %bb8, label %bb10, !dbg !6795

bb8:                                              ; preds = %bb7
  %33 = load i32* %result, align 4, !dbg !6795
  %34 = icmp sge i32 %33, 0, !dbg !6795
  br i1 %34, label %bb9, label %bb10, !dbg !6795

bb9:                                              ; preds = %bb8
  %35 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 0, !dbg !6796
  %36 = load void (i32)** %35, align 8, !dbg !6796
  %37 = load %struct.sigaction** %oact_addr, align 8, !dbg !6796
  %38 = getelementptr inbounds %struct.sigaction* %37, i32 0, i32 0, !dbg !6796
  %39 = getelementptr inbounds %5* %38, i32 0, i32 0, !dbg !6796
  store void (i32)* %36, void (i32)** %39, align 8, !dbg !6796
  %40 = load %struct.sigaction** %oact_addr, align 8, !dbg !6797
  %41 = getelementptr inbounds %struct.sigaction* %40, i32 0, i32 1, !dbg !6797
  %42 = bitcast %struct.__sigset_t* %41 to i8*, !dbg !6797
  %43 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 3, !dbg !6797
  %44 = bitcast %struct.__sigset_t* %43 to i8*, !dbg !6797
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %44, i64 128) nounwind, !dbg !6797
  %46 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 1, !dbg !6798
  %47 = load i64* %46, align 8, !dbg !6798
  %48 = trunc i64 %47 to i32, !dbg !6798
  %49 = load %struct.sigaction** %oact_addr, align 8, !dbg !6798
  %50 = getelementptr inbounds %struct.sigaction* %49, i32 0, i32 2, !dbg !6798
  store i32 %48, i32* %50, align 8, !dbg !6798
  %51 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 2, !dbg !6799
  %52 = load void ()** %51, align 8, !dbg !6799
  %53 = load %struct.sigaction** %oact_addr, align 8, !dbg !6799
  %54 = getelementptr inbounds %struct.sigaction* %53, i32 0, i32 3, !dbg !6799
  store void ()* %52, void ()** %54, align 8, !dbg !6799
  br label %bb10, !dbg !6799

bb10:                                             ; preds = %bb9, %bb8, %bb7
  %55 = load i32* %result, align 4, !dbg !6800
  store i32 %55, i32* %0, align 4, !dbg !6800
  %56 = load i32* %0, align 4, !dbg !6800
  store i32 %56, i32* %retval, align 4, !dbg !6800
  %retval11 = load i32* %retval, !dbg !6800
  ret i32 %retval11, !dbg !6800
}

define i8* @strcpy(i8* noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6801
  store i8* %1, i8** %s, align 8, !dbg !6801
  br label %bb, !dbg !6801

bb:                                               ; preds = %bb, %entry
  %2 = load i8** %s2_addr, align 8, !dbg !6803
  %3 = load i8* %2, align 1, !dbg !6803
  %4 = load i8** %s, align 8, !dbg !6803
  store i8 %3, i8* %4, align 1, !dbg !6803
  %5 = load i8** %s, align 8, !dbg !6803
  %6 = load i8* %5, align 1, !dbg !6803
  %7 = icmp ne i8 %6, 0, !dbg !6803
  %8 = zext i1 %7 to i8, !dbg !6803
  %9 = load i8** %s, align 8, !dbg !6803
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6803
  store i8* %10, i8** %s, align 8, !dbg !6803
  %11 = load i8** %s2_addr, align 8, !dbg !6803
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6803
  store i8* %12, i8** %s2_addr, align 8, !dbg !6803
  %toBool = icmp ne i8 %8, 0, !dbg !6803
  br i1 %toBool, label %bb, label %bb1, !dbg !6803

bb1:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6804
  store i8* %13, i8** %0, align 8, !dbg !6804
  %14 = load i8** %0, align 8, !dbg !6804
  store i8* %14, i8** %retval, align 8, !dbg !6804
  %retval2 = load i8** %retval, !dbg !6804
  ret i8* %retval2, !dbg !6804
}

define i8* @strerror(i32 %errnum) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  %1 = load i32* %errnum_addr, align 4, !dbg !6805
  %2 = call i32 @__xpg_strerror_r(i32 %1, i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i64 50) nounwind, !dbg !6805
  store i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i8** %0, align 8, !dbg !6807
  %3 = load i8** %0, align 8, !dbg !6807
  store i8* %3, i8** %retval, align 8, !dbg !6807
  %retval1 = load i8** %retval, !dbg !6807
  ret i8* %retval1, !dbg !6807
}

define i8* @strsep(i8** noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8**, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %s1, i8*** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8*** %s1_addr, align 8, !dbg !6808
  %2 = load i8** %1, align 8, !dbg !6808
  store i8* %2, i8** %s, align 8, !dbg !6808
  store i8* null, i8** %p, align 8, !dbg !6810
  %3 = load i8** %s, align 8, !dbg !6811
  %4 = icmp ne i8* %3, null, !dbg !6811
  br i1 %4, label %bb, label %bb3, !dbg !6811

bb:                                               ; preds = %entry
  %5 = load i8** %s, align 8, !dbg !6811
  %6 = load i8* %5, align 1, !dbg !6811
  %7 = icmp ne i8 %6, 0, !dbg !6811
  br i1 %7, label %bb1, label %bb3, !dbg !6811

bb1:                                              ; preds = %bb
  %8 = load i8** %s, align 8, !dbg !6811
  %9 = load i8** %s2_addr, align 8, !dbg !6811
  %10 = call i8* @strpbrk(i8* %8, i8* %9) nounwind readonly, !dbg !6811
  store i8* %10, i8** %p, align 8, !dbg !6811
  %11 = load i8** %p, align 8, !dbg !6811
  %12 = icmp ne i8* %11, null, !dbg !6811
  br i1 %12, label %bb2, label %bb3, !dbg !6811

bb2:                                              ; preds = %bb1
  %13 = load i8** %p, align 8, !dbg !6812
  store i8 0, i8* %13, align 1, !dbg !6812
  %14 = load i8** %p, align 8, !dbg !6812
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !6812
  store i8* %15, i8** %p, align 8, !dbg !6812
  br label %bb3, !dbg !6812

bb3:                                              ; preds = %bb2, %bb1, %bb, %entry
  %16 = load i8*** %s1_addr, align 8, !dbg !6813
  %17 = load i8** %p, align 8, !dbg !6813
  store i8* %17, i8** %16, align 8, !dbg !6813
  %18 = load i8** %s, align 8, !dbg !6814
  store i8* %18, i8** %0, align 8, !dbg !6814
  %19 = load i8** %0, align 8, !dbg !6814
  store i8* %19, i8** %retval, align 8, !dbg !6814
  %retval4 = load i8** %retval, !dbg !6814
  ret i8* %retval4, !dbg !6814
}

define i8* @strtok_r(i8* noalias %s1, i8* noalias %s2, i8** noalias %next_start) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %next_start_addr = alloca i8**, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i8** %next_start, i8*** %next_start_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6815
  store i8* %1, i8** %s, align 8, !dbg !6815
  %2 = load i8** %s, align 8, !dbg !6815
  %3 = icmp ne i8* %2, null, !dbg !6815
  br i1 %3, label %bb1, label %bb, !dbg !6815

bb:                                               ; preds = %entry
  %4 = load i8*** %next_start_addr, align 8, !dbg !6815
  %5 = load i8** %4, align 8, !dbg !6815
  store i8* %5, i8** %s, align 8, !dbg !6815
  %6 = load i8** %s, align 8, !dbg !6815
  %7 = icmp ne i8* %6, null, !dbg !6815
  br i1 %7, label %bb1, label %bb7, !dbg !6815

bb1:                                              ; preds = %bb, %entry
  %8 = load i8** %s, align 8, !dbg !6817
  %9 = load i8** %s2_addr, align 8, !dbg !6817
  %10 = call i64 @strspn(i8* %8, i8* %9) nounwind readonly, !dbg !6817
  %11 = load i8** %s, align 8, !dbg !6817
  %12 = getelementptr inbounds i8* %11, i64 %10, !dbg !6817
  store i8* %12, i8** %s, align 8, !dbg !6817
  %13 = load i8** %s, align 8, !dbg !6817
  %14 = load i8* %13, align 1, !dbg !6817
  %15 = icmp ne i8 %14, 0, !dbg !6817
  br i1 %15, label %bb2, label %bb5, !dbg !6817

bb2:                                              ; preds = %bb1
  %16 = load i8** %s, align 8, !dbg !6818
  %17 = load i8** %s2_addr, align 8, !dbg !6818
  %18 = call i8* @strpbrk(i8* %16, i8* %17) nounwind readonly, !dbg !6818
  store i8* %18, i8** %p, align 8, !dbg !6818
  %19 = load i8** %p, align 8, !dbg !6818
  %20 = icmp ne i8* %19, null, !dbg !6818
  br i1 %20, label %bb3, label %bb6, !dbg !6818

bb3:                                              ; preds = %bb2
  %21 = load i8** %p, align 8, !dbg !6819
  store i8 0, i8* %21, align 1, !dbg !6819
  %22 = load i8** %p, align 8, !dbg !6819
  %23 = getelementptr inbounds i8* %22, i64 1, !dbg !6819
  store i8* %23, i8** %p, align 8, !dbg !6819
  br label %bb6, !dbg !6819

bb5:                                              ; preds = %bb1
  store i8* null, i8** %s, align 8, !dbg !6820
  %24 = load i8** %s, align 8, !dbg !6820
  store i8* %24, i8** %p, align 8, !dbg !6820
  br label %bb6, !dbg !6820

bb6:                                              ; preds = %bb2, %bb3, %bb5
  %25 = load i8*** %next_start_addr, align 8, !dbg !6821
  %26 = load i8** %p, align 8, !dbg !6821
  store i8* %26, i8** %25, align 8, !dbg !6821
  br label %bb7, !dbg !6821

bb7:                                              ; preds = %bb6, %bb
  %27 = load i8** %s, align 8, !dbg !6822
  store i8* %27, i8** %0, align 8, !dbg !6822
  %28 = load i8** %0, align 8, !dbg !6822
  store i8* %28, i8** %retval, align 8, !dbg !6822
  %retval8 = load i8** %retval, !dbg !6822
  ret i8* %retval8, !dbg !6822
}

define i32 @vasprintf(i8** noalias %buf, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %buf_addr = alloca i8**, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg2 = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %buf, i8*** %buf_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %arg21 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6823
  %1 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6823
  %arg212 = bitcast %struct.__va_list_tag* %arg21 to i8*, !dbg !6823
  %2 = bitcast %struct.__va_list_tag* %1 to i8*, !dbg !6823
  %vacopy.cast.dst = bitcast i8* %arg212 to i64*
  %vacopy.cast.src = bitcast i8* %2 to i64*
  %3 = load i64* %vacopy.cast.src
  store i64 %3, i64* %vacopy.cast.dst
  %4 = getelementptr i64* %vacopy.cast.dst, i64 1
  %5 = getelementptr i64* %vacopy.cast.src, i64 1
  %6 = load i64* %5
  store i64 %6, i64* %4
  %7 = getelementptr i64* %4, i64 1
  %8 = getelementptr i64* %5, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = load i8** %format_addr, align 8, !dbg !6825
  %arg23 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6825
  %11 = call i32 @vsnprintf(i8* noalias null, i64 0, i8* noalias %10, %struct.__va_list_tag* %arg23) nounwind, !dbg !6825
  store i32 %11, i32* %rv, align 4, !dbg !6825
  %arg24 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6826
  %arg245 = bitcast %struct.__va_list_tag* %arg24 to i8*, !dbg !6826
  call void @llvm.va_end(i8* %arg245), !dbg !6826
  %12 = load i8*** %buf_addr, align 8, !dbg !6827
  store i8* null, i8** %12, align 8, !dbg !6827
  %13 = load i32* %rv, align 4, !dbg !6828
  %14 = icmp sge i32 %13, 0, !dbg !6828
  br i1 %14, label %bb, label %bb8, !dbg !6828

bb:                                               ; preds = %entry
  %15 = load i32* %rv, align 4, !dbg !6829
  %16 = add nsw i32 %15, 1, !dbg !6829
  store i32 %16, i32* %rv, align 4, !dbg !6829
  %17 = load i32* %rv, align 4, !dbg !6829
  %18 = sext i32 %17 to i64, !dbg !6829
  %19 = call noalias i8* @malloc(i64 %18) nounwind, !dbg !6829
  %20 = load i8*** %buf_addr, align 8, !dbg !6829
  store i8* %19, i8** %20, align 8, !dbg !6829
  %21 = load i8*** %buf_addr, align 8, !dbg !6829
  %22 = load i8** %21, align 8, !dbg !6829
  %23 = icmp ne i8* %22, null, !dbg !6829
  br i1 %23, label %bb6, label %bb8, !dbg !6829

bb6:                                              ; preds = %bb
  %24 = load i32* %rv, align 4, !dbg !6830
  %25 = sext i32 %24 to i64, !dbg !6830
  %26 = load i8*** %buf_addr, align 8, !dbg !6830
  %27 = load i8** %26, align 8, !dbg !6830
  %28 = load i8** %format_addr, align 8, !dbg !6830
  %29 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6830
  %30 = call i32 @vsnprintf(i8* noalias %27, i64 %25, i8* noalias %28, %struct.__va_list_tag* %29) nounwind, !dbg !6830
  store i32 %30, i32* %rv, align 4, !dbg !6830
  %31 = load i32* %rv, align 4, !dbg !6830
  %32 = icmp slt i32 %31, 0, !dbg !6830
  br i1 %32, label %bb7, label %bb8, !dbg !6830

bb7:                                              ; preds = %bb6
  %33 = load i8*** %buf_addr, align 8, !dbg !6831
  %34 = load i8** %33, align 8, !dbg !6831
  call void @free(i8* %34) nounwind, !dbg !6831
  %35 = load i8*** %buf_addr, align 8, !dbg !6832
  store i8* null, i8** %35, align 8, !dbg !6832
  br label %bb8, !dbg !6832

bb8:                                              ; preds = %bb7, %bb6, %bb, %entry
  %36 = load i32* %rv, align 4, !dbg !6833
  store i32 %36, i32* %0, align 4, !dbg !6833
  %37 = load i32* %0, align 4, !dbg !6833
  store i32 %37, i32* %retval, align 4, !dbg !6833
  %retval9 = load i32* %retval, !dbg !6833
  ret i32 %retval9, !dbg !6833
}

declare void @llvm.va_copy(i8*, i8*) nounwind

define internal i64 @_fp_out_narrow(%4* %fp, i64 %type, i64 %len, i64 %buf) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %type_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %buf_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.3 = alloca i64
  %0 = alloca i64
  %r = alloca i64
  %buflen = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i64 %type, i64* %type_addr
  store i64 %len, i64* %len_addr
  store i64 %buf, i64* %buf_addr
  store i64 0, i64* %r, align 8, !dbg !6834
  %1 = load i64* %type_addr, align 8, !dbg !6836
  %2 = and i64 %1, 128, !dbg !6836
  %3 = icmp ne i64 %2, 0, !dbg !6836
  br i1 %3, label %bb, label %bb4, !dbg !6836

bb:                                               ; preds = %entry
  %4 = load i64* %buf_addr, align 8, !dbg !6837
  %5 = inttoptr i64 %4 to i8*, !dbg !6837
  %6 = call i64 @strlen(i8* %5) nounwind readonly, !dbg !6837
  %7 = trunc i64 %6 to i32, !dbg !6837
  store i32 %7, i32* %buflen, align 4, !dbg !6837
  %8 = load i32* %buflen, align 4, !dbg !6839
  %9 = sext i32 %8 to i64, !dbg !6839
  %10 = load i64* %len_addr, align 8, !dbg !6839
  %11 = sub nsw i64 %10, %9, !dbg !6839
  store i64 %11, i64* %len_addr, align 8, !dbg !6839
  %12 = load i64* %len_addr, align 8, !dbg !6839
  %13 = icmp sgt i64 %12, 0, !dbg !6839
  br i1 %13, label %bb1, label %bb3, !dbg !6839

bb1:                                              ; preds = %bb
  %14 = load i64* %len_addr, align 8, !dbg !6840
  %15 = load i64* %type_addr, align 8, !dbg !6840
  %16 = trunc i64 %15 to i32, !dbg !6840
  %17 = and i32 %16, 127, !dbg !6840
  %18 = load %4** %fp_addr, align 8, !dbg !6840
  %19 = call i64 @_charpad(%4* noalias %18, i32 %17, i64 %14) nounwind, !dbg !6840
  store i64 %19, i64* %r, align 8, !dbg !6840
  %20 = load i64* %len_addr, align 8, !dbg !6840
  %21 = load i64* %r, align 8, !dbg !6840
  %22 = icmp ne i64 %21, %20, !dbg !6840
  br i1 %22, label %bb2, label %bb3, !dbg !6840

bb2:                                              ; preds = %bb1
  %23 = load i64* %r, align 8, !dbg !6841
  store i64 %23, i64* %0, align 8, !dbg !6841
  br label %bb8, !dbg !6841

bb3:                                              ; preds = %bb1, %bb
  %24 = load i32* %buflen, align 4, !dbg !6842
  %25 = sext i32 %24 to i64, !dbg !6842
  store i64 %25, i64* %len_addr, align 8, !dbg !6842
  br label %bb4, !dbg !6842

bb4:                                              ; preds = %bb3, %entry
  %26 = load i64* %len_addr, align 8, !dbg !6843
  %27 = icmp sgt i64 %26, 0, !dbg !6843
  br i1 %27, label %bb5, label %bb6, !dbg !6843

bb5:                                              ; preds = %bb4
  %28 = load i64* %len_addr, align 8, !dbg !6843
  %29 = load i64* %buf_addr, align 8, !dbg !6843
  %30 = inttoptr i64 %29 to i8*, !dbg !6843
  %31 = load %4** %fp_addr, align 8, !dbg !6843
  %32 = call i64 @__stdio_fwrite(i8* noalias %30, i64 %28, %4* noalias %31) nounwind, !dbg !6843
  store i64 %32, i64* %iftmp.3, align 8, !dbg !6843
  br label %bb7, !dbg !6843

bb6:                                              ; preds = %bb4
  store i64 0, i64* %iftmp.3, align 8, !dbg !6843
  br label %bb7, !dbg !6843

bb7:                                              ; preds = %bb6, %bb5
  %33 = load i64* %iftmp.3, align 8, !dbg !6843
  %34 = load i64* %r, align 8, !dbg !6843
  %35 = add i64 %33, %34, !dbg !6843
  store i64 %35, i64* %0, align 8, !dbg !6843
  br label %bb8, !dbg !6843

bb8:                                              ; preds = %bb7, %bb2
  %36 = load i64* %0, align 8, !dbg !6841
  store i64 %36, i64* %retval, align 8, !dbg !6841
  %retval9 = load i64* %retval, !dbg !6841
  ret i64 %retval9, !dbg !6841
}

define internal i64 @_charpad(%4* noalias %stream, i32 %padchar, i64 %numpad) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %padchar_addr = alloca i32, align 4
  %numpad_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %pad = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %padchar, i32* %padchar_addr
  store i64 %numpad, i64* %numpad_addr
  %1 = load i64* %numpad_addr, align 8, !dbg !6844
  store i64 %1, i64* %todo, align 8, !dbg !6844
  %2 = load i32* %padchar_addr, align 4, !dbg !6846
  %3 = trunc i32 %2 to i8, !dbg !6846
  %4 = getelementptr inbounds [1 x i8]* %pad, i64 0, i64 0, !dbg !6846
  store i8 %3, i8* %4, align 1, !dbg !6846
  br label %bb1, !dbg !6846

bb:                                               ; preds = %bb2
  %5 = load i64* %todo, align 8, !dbg !6847
  %6 = sub i64 %5, 1, !dbg !6847
  store i64 %6, i64* %todo, align 8, !dbg !6847
  br label %bb1, !dbg !6847

bb1:                                              ; preds = %bb, %entry
  %7 = load i64* %todo, align 8, !dbg !6848
  %8 = icmp eq i64 %7, 0, !dbg !6848
  br i1 %8, label %bb5, label %bb2, !dbg !6848

bb2:                                              ; preds = %bb1
  %pad3 = bitcast [1 x i8]* %pad to i8*, !dbg !6848
  %9 = load %4** %stream_addr, align 8, !dbg !6848
  %10 = call i64 @__stdio_fwrite(i8* noalias %pad3, i64 1, %4* noalias %9) nounwind, !dbg !6848
  %11 = icmp eq i64 %10, 1, !dbg !6848
  br i1 %11, label %bb, label %bb5, !dbg !6848

bb5:                                              ; preds = %bb2, %bb1
  %12 = load i64* %numpad_addr, align 8, !dbg !6849
  %13 = load i64* %todo, align 8, !dbg !6849
  %14 = sub i64 %12, %13, !dbg !6849
  store i64 %14, i64* %0, align 8, !dbg !6849
  %15 = load i64* %0, align 8, !dbg !6849
  store i64 %15, i64* %retval, align 8, !dbg !6849
  %retval6 = load i64* %retval, !dbg !6849
  ret i64 %retval6, !dbg !6849
}

define internal i32 @_do_one_spec(%4* noalias %stream, %struct.ppfs_t* %ppfs, i32* %count) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %count_addr = alloca i32*, align 8
  %retval = alloca i32
  %iftmp.26 = alloca i64
  %iftmp.24 = alloca i64
  %iftmp.21 = alloca i32
  %iftmp.20 = alloca i64
  %iftmp.19 = alloca i64
  %iftmp.17 = alloca i64
  %iftmp.15 = alloca x86_fp80
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i32
  %iftmp.11 = alloca i32
  %iftmp.9 = alloca i32
  %0 = alloca i32
  %argptr = alloca [1 x i8*]
  %argtype = alloca i32*
  %ws = alloca i32*
  %mbstate = alloca %struct.__mbstate_t
  %slen = alloca i64
  %base = alloca i32
  %numpad = alloca i32
  %alphacase = alloca i32
  %numfill = alloca i32
  %prefix_num = alloca i32
  %padchar = alloca i8
  %buf = alloca [128 x i8]
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %s = alloca i8*
  %nf = alloca i64
  %t = alloca i64
  %t117 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32* %count, i32** %count_addr
  store i32* null, i32** %ws, align 8, !dbg !6850
  store i32 0, i32* %numfill, align 4, !dbg !6852
  store i32 11, i32* %prefix_num, align 4, !dbg !6853
  store i8 32, i8* %padchar, align 1, !dbg !6854
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6855
  %2 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %1) nounwind, !dbg !6855
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6856
  call void @_ppfs_setargs(%struct.ppfs_t* %3) nounwind, !dbg !6856
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6857
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 6, !dbg !6857
  %6 = getelementptr inbounds [9 x i32]* %5, i64 0, i64 0, !dbg !6857
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6857
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 5, !dbg !6857
  %9 = getelementptr inbounds [4 x i8]* %8, i64 0, i64 2, !dbg !6857
  %10 = load i8* %9, align 1, !dbg !6857
  %11 = zext i8 %10 to i32, !dbg !6857
  %12 = sext i32 %11 to i64, !dbg !6857
  %13 = getelementptr inbounds i32* %6, i64 %12, !dbg !6857
  %14 = getelementptr inbounds i32* %13, i64 -1, !dbg !6857
  store i32* %14, i32** %argtype, align 8, !dbg !6857
  %15 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6858
  %16 = getelementptr inbounds %struct.ppfs_t* %15, i32 0, i32 8, !dbg !6858
  %17 = getelementptr inbounds [9 x %union.argvalue_t]* %16, i64 0, i64 0, !dbg !6858
  store %union.argvalue_t* %17, %union.argvalue_t** %p, align 8, !dbg !6858
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6860
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 2, !dbg !6860
  %20 = load i32* %19, align 4, !dbg !6860
  %21 = icmp sgt i32 %20, 0, !dbg !6860
  br i1 %21, label %bb, label %bb1, !dbg !6860

bb:                                               ; preds = %entry
  %22 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6861
  %23 = getelementptr inbounds %struct.ppfs_t* %22, i32 0, i32 5, !dbg !6861
  %24 = getelementptr inbounds [4 x i8]* %23, i64 0, i64 2, !dbg !6861
  %25 = load i8* %24, align 1, !dbg !6861
  %26 = zext i8 %25 to i32, !dbg !6861
  %27 = sub nsw i32 %26, 1, !dbg !6861
  %28 = load %union.argvalue_t** %p, align 8, !dbg !6861
  %29 = sext i32 %27 to i64, !dbg !6861
  %30 = getelementptr inbounds %union.argvalue_t* %28, i64 %29, !dbg !6861
  store %union.argvalue_t* %30, %union.argvalue_t** %p, align 8, !dbg !6861
  br label %bb1, !dbg !6861

bb1:                                              ; preds = %bb, %entry
  store i32 0, i32* %i, align 4, !dbg !6862
  br label %bb3, !dbg !6862

bb2:                                              ; preds = %bb3
  %31 = load i32* %i, align 4, !dbg !6863
  %32 = sext i32 %31 to i64, !dbg !6863
  %33 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 %32, !dbg !6863
  %34 = load %union.argvalue_t** %p, align 8, !dbg !6863
  %35 = bitcast %union.argvalue_t* %34 to i8*, !dbg !6863
  store i8* %35, i8** %33, align 8, !dbg !6863
  %36 = load %union.argvalue_t** %p, align 8, !dbg !6863
  %37 = getelementptr inbounds %union.argvalue_t* %36, i64 1, !dbg !6863
  store %union.argvalue_t* %37, %union.argvalue_t** %p, align 8, !dbg !6863
  %38 = load i32* %i, align 4, !dbg !6862
  %39 = add nsw i32 %38, 1, !dbg !6862
  store i32 %39, i32* %i, align 4, !dbg !6862
  br label %bb3, !dbg !6862

bb3:                                              ; preds = %bb2, %bb1
  %40 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6862
  %41 = getelementptr inbounds %struct.ppfs_t* %40, i32 0, i32 3, !dbg !6862
  %42 = load i32* %41, align 16, !dbg !6862
  %43 = load i32* %i, align 4, !dbg !6862
  %44 = icmp sgt i32 %42, %43, !dbg !6862
  br i1 %44, label %bb2, label %bb4, !dbg !6862

bb4:                                              ; preds = %bb3
  store i8* null, i8** %s, align 8, !dbg !6864
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6866
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 4, !dbg !6866
  %47 = load i32* %46, align 4, !dbg !6866
  %48 = icmp eq i32 %47, 0, !dbg !6866
  br i1 %48, label %bb5, label %bb6, !dbg !6866

bb5:                                              ; preds = %bb4
  %49 = load i32** %count_addr, align 8, !dbg !6867
  %50 = load i32* %49, align 4, !dbg !6867
  %51 = sext i32 %50 to i64, !dbg !6867
  %52 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6867
  %53 = getelementptr inbounds %struct.ppfs_t* %52, i32 0, i32 1, !dbg !6867
  %54 = getelementptr inbounds %struct.printf_info* %53, i32 0, i32 3, !dbg !6867
  %55 = load i32* %54, align 4, !dbg !6867
  %56 = and i32 %55, 3840, !dbg !6867
  %57 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6867
  %58 = load i8** %57, align 8, !dbg !6867
  %59 = bitcast i8* %58 to i8**, !dbg !6867
  %60 = load i8** %59, align 8, !dbg !6867
  call void @_store_inttype(i8* %60, i32 %56, i64 %51) nounwind, !dbg !6867
  store i32 0, i32* %0, align 4, !dbg !6868
  br label %bb131, !dbg !6868

bb6:                                              ; preds = %bb4
  %61 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6869
  %62 = getelementptr inbounds %struct.ppfs_t* %61, i32 0, i32 4, !dbg !6869
  %63 = load i32* %62, align 4, !dbg !6869
  %64 = icmp ule i32 %63, 7, !dbg !6869
  br i1 %64, label %bb7, label %bb58, !dbg !6869

bb7:                                              ; preds = %bb6
  store i32 87, i32* %alphacase, align 4, !dbg !6870
  %65 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6871
  %66 = getelementptr inbounds %struct.ppfs_t* %65, i32 0, i32 4, !dbg !6871
  %67 = load i32* %66, align 4, !dbg !6871
  %68 = sub i32 %67, 1, !dbg !6871
  %69 = sext i32 %68 to i64, !dbg !6871
  %70 = getelementptr inbounds [7 x i8]* @spec_base.3674, i64 0, i64 %69, !dbg !6871
  %71 = load i8* %70, align 1, !dbg !6871
  %72 = sext i8 %71 to i32, !dbg !6871
  store i32 %72, i32* %base, align 4, !dbg !6871
  %73 = load i32* %base, align 4, !dbg !6871
  %74 = icmp eq i32 %73, 10, !dbg !6871
  br i1 %74, label %bb8, label %bb12, !dbg !6871

bb8:                                              ; preds = %bb7
  %75 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6872
  %76 = getelementptr inbounds %struct.ppfs_t* %75, i32 0, i32 1, !dbg !6872
  %77 = getelementptr inbounds %struct.printf_info* %76, i32 0, i32 3, !dbg !6872
  %78 = load i32* %77, align 4, !dbg !6872
  %79 = and i32 %78, 32, !dbg !6872
  %80 = icmp ne i32 %79, 0, !dbg !6872
  br i1 %80, label %bb9, label %bb10, !dbg !6872

bb9:                                              ; preds = %bb8
  store i32 44, i32* %alphacase, align 4, !dbg !6873
  br label %bb10, !dbg !6873

bb10:                                             ; preds = %bb9, %bb8
  %81 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6874
  %82 = getelementptr inbounds %struct.ppfs_t* %81, i32 0, i32 1, !dbg !6874
  %83 = getelementptr inbounds %struct.printf_info* %82, i32 0, i32 3, !dbg !6874
  %84 = load i32* %83, align 4, !dbg !6874
  %85 = and i32 %84, 64, !dbg !6874
  %86 = icmp ne i32 %85, 0, !dbg !6874
  br i1 %86, label %bb11, label %bb12, !dbg !6874

bb11:                                             ; preds = %bb10
  %87 = load i32* %alphacase, align 4, !dbg !6875
  %88 = or i32 %87, 128, !dbg !6875
  store i32 %88, i32* %alphacase, align 4, !dbg !6875
  br label %bb12, !dbg !6875

bb12:                                             ; preds = %bb11, %bb10, %bb7
  %89 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6876
  %90 = getelementptr inbounds %struct.ppfs_t* %89, i32 0, i32 4, !dbg !6876
  %91 = load i32* %90, align 4, !dbg !6876
  %92 = icmp ule i32 %91, 5, !dbg !6876
  br i1 %92, label %bb13, label %bb18, !dbg !6876

bb13:                                             ; preds = %bb12
  %93 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6877
  %94 = getelementptr inbounds %struct.ppfs_t* %93, i32 0, i32 4, !dbg !6877
  %95 = load i32* %94, align 4, !dbg !6877
  %96 = icmp eq i32 %95, 3, !dbg !6877
  br i1 %96, label %bb14, label %bb15, !dbg !6877

bb14:                                             ; preds = %bb13
  store i32 55, i32* %alphacase, align 4, !dbg !6878
  br label %bb15, !dbg !6878

bb15:                                             ; preds = %bb14, %bb13
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6879
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 4, !dbg !6879
  %99 = load i32* %98, align 4, !dbg !6879
  %100 = icmp eq i32 %99, 1, !dbg !6879
  br i1 %100, label %bb16, label %bb19, !dbg !6879

bb16:                                             ; preds = %bb15
  store i32 6, i32* %prefix_num, align 4, !dbg !6880
  br label %bb19, !dbg !6880

bb18:                                             ; preds = %bb12
  %101 = load i32* %base, align 4, !dbg !6881
  %102 = sub nsw i32 0, %101, !dbg !6881
  store i32 %102, i32* %base, align 4, !dbg !6881
  br label %bb19, !dbg !6881

bb19:                                             ; preds = %bb15, %bb16, %bb18
  %103 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6882
  %104 = getelementptr inbounds %struct.ppfs_t* %103, i32 0, i32 1, !dbg !6882
  %105 = getelementptr inbounds %struct.printf_info* %104, i32 0, i32 0, !dbg !6882
  %106 = load i32* %105, align 8, !dbg !6882
  %107 = icmp slt i32 %106, 0, !dbg !6882
  br i1 %107, label %bb20, label %bb21, !dbg !6882

bb20:                                             ; preds = %bb19
  %108 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6883
  %109 = getelementptr inbounds %struct.ppfs_t* %108, i32 0, i32 1, !dbg !6883
  %110 = getelementptr inbounds %struct.printf_info* %109, i32 0, i32 4, !dbg !6883
  %111 = load i32* %110, align 8, !dbg !6883
  %112 = trunc i32 %111 to i8, !dbg !6883
  store i8 %112, i8* %padchar, align 1, !dbg !6883
  br label %bb21, !dbg !6883

bb21:                                             ; preds = %bb20, %bb19
  %113 = load i32* %alphacase, align 4, !dbg !6884
  %114 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6884
  %115 = load i8** %114, align 8, !dbg !6884
  %116 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6884
  %117 = getelementptr inbounds %struct.ppfs_t* %116, i32 0, i32 4, !dbg !6884
  %118 = load i32* %117, align 4, !dbg !6884
  %119 = icmp ne i32 %118, 1, !dbg !6884
  br i1 %119, label %bb22, label %bb23, !dbg !6884

bb22:                                             ; preds = %bb21
  %120 = load i32** %argtype, align 8, !dbg !6884
  %121 = load i32* %120, align 4, !dbg !6884
  %122 = and i32 %121, 3840, !dbg !6884
  store i32 %122, i32* %iftmp.9, align 4, !dbg !6884
  br label %bb24, !dbg !6884

bb23:                                             ; preds = %bb21
  store i32 1024, i32* %iftmp.9, align 4, !dbg !6884
  br label %bb24, !dbg !6884

bb24:                                             ; preds = %bb23, %bb22
  %123 = load i32* %iftmp.9, align 4, !dbg !6884
  %124 = load i32* %base, align 4, !dbg !6884
  %125 = call i64 @_load_inttype(i32 %123, i8* %115, i32 %124) nounwind, !dbg !6884
  %buf25 = bitcast [128 x i8]* %buf to i8*, !dbg !6884
  %126 = getelementptr inbounds i8* %buf25, i64 128, !dbg !6884
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6884
  %128 = load i32* %base, align 4, !dbg !6884
  %129 = call i8* @_uintmaxtostr(i8* noalias %127, i64 %125, i32 %128, i32 %113) nounwind, !dbg !6884
  store i8* %129, i8** %s, align 8, !dbg !6884
  %130 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6885
  %131 = getelementptr inbounds %struct.ppfs_t* %130, i32 0, i32 4, !dbg !6885
  %132 = load i32* %131, align 4, !dbg !6885
  %133 = icmp ugt i32 %132, 5, !dbg !6885
  br i1 %133, label %bb26, label %bb32, !dbg !6885

bb26:                                             ; preds = %bb24
  %134 = load i8** %s, align 8, !dbg !6886
  %135 = load i8* %134, align 1, !dbg !6886
  %136 = icmp eq i8 %135, 45, !dbg !6886
  %137 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6887
  %138 = getelementptr inbounds %struct.ppfs_t* %137, i32 0, i32 1, !dbg !6887
  %139 = getelementptr inbounds %struct.printf_info* %138, i32 0, i32 3, !dbg !6887
  %140 = load i32* %139, align 4, !dbg !6887
  br i1 %136, label %bb27, label %bb28, !dbg !6886

bb27:                                             ; preds = %bb26
  %141 = or i32 %140, 2, !dbg !6887
  %142 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6887
  %143 = getelementptr inbounds %struct.ppfs_t* %142, i32 0, i32 1, !dbg !6887
  %144 = getelementptr inbounds %struct.printf_info* %143, i32 0, i32 3, !dbg !6887
  store i32 %141, i32* %144, align 4, !dbg !6887
  %145 = load i8** %s, align 8, !dbg !6888
  %146 = getelementptr inbounds i8* %145, i64 1, !dbg !6888
  store i8* %146, i8** %s, align 8, !dbg !6888
  store i32 2, i32* %prefix_num, align 4, !dbg !6889
  br label %bb32, !dbg !6889

bb28:                                             ; preds = %bb26
  %147 = and i32 %140, 2, !dbg !6890
  %148 = icmp ne i32 %147, 0, !dbg !6890
  br i1 %148, label %bb29, label %bb30, !dbg !6890

bb29:                                             ; preds = %bb28
  store i32 0, i32* %prefix_num, align 4, !dbg !6891
  br label %bb32, !dbg !6891

bb30:                                             ; preds = %bb28
  %149 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6892
  %150 = getelementptr inbounds %struct.ppfs_t* %149, i32 0, i32 1, !dbg !6892
  %151 = getelementptr inbounds %struct.printf_info* %150, i32 0, i32 3, !dbg !6892
  %152 = load i32* %151, align 4, !dbg !6892
  %153 = and i32 %152, 1, !dbg !6892
  %154 = trunc i32 %153 to i8, !dbg !6892
  %toBool = icmp ne i8 %154, 0, !dbg !6892
  br i1 %toBool, label %bb31, label %bb32, !dbg !6892

bb31:                                             ; preds = %bb30
  store i32 4, i32* %prefix_num, align 4, !dbg !6893
  br label %bb32, !dbg !6893

bb32:                                             ; preds = %bb31, %bb30, %bb29, %bb27, %bb24
  %buf33 = bitcast [128 x i8]* %buf to i8*, !dbg !6894
  %155 = getelementptr inbounds i8* %buf33, i64 128, !dbg !6894
  %156 = getelementptr inbounds i8* %155, i64 -1, !dbg !6894
  %157 = ptrtoint i8* %156 to i64, !dbg !6894
  %158 = load i8** %s, align 8, !dbg !6894
  %159 = ptrtoint i8* %158 to i64, !dbg !6894
  %160 = sub nsw i64 %157, %159, !dbg !6894
  store i64 %160, i64* %slen, align 8, !dbg !6894
  %161 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6895
  %162 = getelementptr inbounds %struct.ppfs_t* %161, i32 0, i32 1, !dbg !6895
  %163 = getelementptr inbounds %struct.printf_info* %162, i32 0, i32 0, !dbg !6895
  %164 = load i32* %163, align 8, !dbg !6895
  %165 = icmp sge i32 %164, 0, !dbg !6895
  br i1 %165, label %bb34, label %bb35, !dbg !6895

bb34:                                             ; preds = %bb32
  %166 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6895
  %167 = getelementptr inbounds %struct.ppfs_t* %166, i32 0, i32 1, !dbg !6895
  %168 = getelementptr inbounds %struct.printf_info* %167, i32 0, i32 0, !dbg !6895
  %169 = load i32* %168, align 8, !dbg !6895
  store i32 %169, i32* %iftmp.11, align 4, !dbg !6895
  br label %bb36, !dbg !6895

bb35:                                             ; preds = %bb32
  store i32 1, i32* %iftmp.11, align 4, !dbg !6895
  br label %bb36, !dbg !6895

bb36:                                             ; preds = %bb35, %bb34
  %170 = load i32* %iftmp.11, align 4, !dbg !6895
  store i32 %170, i32* %numfill, align 4, !dbg !6895
  %171 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6896
  %172 = getelementptr inbounds %struct.ppfs_t* %171, i32 0, i32 1, !dbg !6896
  %173 = getelementptr inbounds %struct.printf_info* %172, i32 0, i32 3, !dbg !6896
  %174 = load i32* %173, align 4, !dbg !6896
  %175 = and i32 %174, 16, !dbg !6896
  %176 = icmp ne i32 %175, 0, !dbg !6896
  br i1 %176, label %bb37, label %bb47, !dbg !6896

bb37:                                             ; preds = %bb36
  %177 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6897
  %178 = getelementptr inbounds %struct.ppfs_t* %177, i32 0, i32 4, !dbg !6897
  %179 = load i32* %178, align 4, !dbg !6897
  %180 = icmp ule i32 %179, 2, !dbg !6897
  br i1 %180, label %bb38, label %bb39, !dbg !6897

bb38:                                             ; preds = %bb37
  store i32 6, i32* %prefix_num, align 4, !dbg !6898
  br label %bb39, !dbg !6898

bb39:                                             ; preds = %bb38, %bb37
  %181 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6899
  %182 = getelementptr inbounds %struct.ppfs_t* %181, i32 0, i32 4, !dbg !6899
  %183 = load i32* %182, align 4, !dbg !6899
  %184 = icmp eq i32 %183, 3, !dbg !6899
  br i1 %184, label %bb40, label %bb41, !dbg !6899

bb40:                                             ; preds = %bb39
  store i32 9, i32* %prefix_num, align 4, !dbg !6900
  br label %bb41, !dbg !6900

bb41:                                             ; preds = %bb40, %bb39
  %185 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6901
  %186 = getelementptr inbounds %struct.ppfs_t* %185, i32 0, i32 4, !dbg !6901
  %187 = load i32* %186, align 4, !dbg !6901
  %188 = icmp eq i32 %187, 4, !dbg !6901
  br i1 %188, label %bb42, label %bb47, !dbg !6901

bb42:                                             ; preds = %bb41
  %189 = load i32* %numfill, align 4, !dbg !6901
  %190 = sext i32 %189 to i64, !dbg !6901
  %191 = load i64* %slen, align 8, !dbg !6901
  %192 = icmp ule i64 %190, %191, !dbg !6901
  br i1 %192, label %bb43, label %bb47, !dbg !6901

bb43:                                             ; preds = %bb42
  %193 = load i8** %s, align 8, !dbg !6902
  %194 = load i8* %193, align 1, !dbg !6902
  %195 = icmp ne i8 %194, 48, !dbg !6902
  br i1 %195, label %bb44, label %bb45, !dbg !6902

bb44:                                             ; preds = %bb43
  %196 = load i64* %slen, align 8, !dbg !6902
  %197 = trunc i64 %196 to i32, !dbg !6902
  %198 = add i32 %197, 1, !dbg !6902
  store i32 %198, i32* %iftmp.12, align 4, !dbg !6902
  br label %bb46, !dbg !6902

bb45:                                             ; preds = %bb43
  store i32 1, i32* %iftmp.12, align 4, !dbg !6902
  br label %bb46, !dbg !6902

bb46:                                             ; preds = %bb45, %bb44
  %199 = load i32* %iftmp.12, align 4, !dbg !6902
  store i32 %199, i32* %numfill, align 4, !dbg !6902
  br label %bb47, !dbg !6902

bb47:                                             ; preds = %bb46, %bb42, %bb41, %bb36
  %200 = load i8** %s, align 8, !dbg !6903
  %201 = load i8* %200, align 1, !dbg !6903
  %202 = icmp eq i8 %201, 48, !dbg !6903
  br i1 %202, label %bb48, label %bb54, !dbg !6903

bb48:                                             ; preds = %bb47
  %203 = load i32* %prefix_num, align 4, !dbg !6904
  %204 = icmp sgt i32 %203, 5, !dbg !6904
  br i1 %204, label %bb49, label %bb50, !dbg !6904

bb49:                                             ; preds = %bb48
  store i32 11, i32* %prefix_num, align 4, !dbg !6905
  br label %bb50, !dbg !6905

bb50:                                             ; preds = %bb49, %bb48
  %205 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6906
  %206 = getelementptr inbounds %struct.ppfs_t* %205, i32 0, i32 4, !dbg !6906
  %207 = load i32* %206, align 4, !dbg !6906
  %208 = icmp eq i32 %207, 1, !dbg !6906
  br i1 %208, label %bb51, label %bb52, !dbg !6906

bb51:                                             ; preds = %bb50
  store i8* getelementptr inbounds ([6 x i8]* @.str243, i64 0, i64 0), i8** %s, align 8, !dbg !6907
  store i64 5, i64* %slen, align 8, !dbg !6908
  store i32 0, i32* %numfill, align 4, !dbg !6909
  br label %bb54, !dbg !6909

bb52:                                             ; preds = %bb50
  %209 = load i32* %numfill, align 4, !dbg !6910
  %210 = icmp eq i32 %209, 0, !dbg !6910
  br i1 %210, label %bb53, label %bb54, !dbg !6910

bb53:                                             ; preds = %bb52
  store i64 0, i64* %slen, align 8, !dbg !6911
  br label %bb54, !dbg !6911

bb54:                                             ; preds = %bb53, %bb52, %bb51, %bb47
  %211 = load i32* %numfill, align 4, !dbg !6912
  %212 = sext i32 %211 to i64, !dbg !6912
  %213 = load i64* %slen, align 8, !dbg !6912
  %214 = icmp ugt i64 %212, %213, !dbg !6912
  br i1 %214, label %bb55, label %bb56, !dbg !6912

bb55:                                             ; preds = %bb54
  %215 = load i32* %numfill, align 4, !dbg !6912
  %216 = load i64* %slen, align 8, !dbg !6912
  %217 = trunc i64 %216 to i32, !dbg !6912
  %218 = sub i32 %215, %217, !dbg !6912
  store i32 %218, i32* %iftmp.13, align 4, !dbg !6912
  br label %bb57, !dbg !6912

bb56:                                             ; preds = %bb54
  store i32 0, i32* %iftmp.13, align 4, !dbg !6912
  br label %bb57, !dbg !6912

bb57:                                             ; preds = %bb56, %bb55
  %219 = load i32* %iftmp.13, align 4, !dbg !6912
  store i32 %219, i32* %numfill, align 4, !dbg !6912
  br label %bb93, !dbg !6912

bb58:                                             ; preds = %bb6
  %220 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6913
  %221 = getelementptr inbounds %struct.ppfs_t* %220, i32 0, i32 4, !dbg !6913
  %222 = load i32* %221, align 4, !dbg !6913
  %223 = icmp ule i32 %222, 15, !dbg !6913
  %224 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6914
  br i1 %223, label %bb59, label %bb65, !dbg !6913

bb59:                                             ; preds = %bb58
  %225 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 1, !dbg !6914
  %226 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6914
  %227 = getelementptr inbounds %struct.ppfs_t* %226, i32 0, i32 1, !dbg !6914
  %228 = getelementptr inbounds %struct.printf_info* %227, i32 0, i32 3, !dbg !6914
  %229 = load i32* %228, align 4, !dbg !6914
  %230 = and i32 %229, 2048, !dbg !6914
  %231 = icmp ne i32 %230, 0, !dbg !6914
  %232 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6914
  %233 = load i8** %232, align 8, !dbg !6914
  br i1 %231, label %bb60, label %bb61, !dbg !6914

bb60:                                             ; preds = %bb59
  %234 = bitcast i8* %233 to x86_fp80*, !dbg !6914
  %235 = load x86_fp80* %234, align 16, !dbg !6914
  store x86_fp80 %235, x86_fp80* %iftmp.15, align 16, !dbg !6914
  br label %bb62, !dbg !6914

bb61:                                             ; preds = %bb59
  %236 = bitcast i8* %233 to double*, !dbg !6914
  %237 = load double* %236, align 8, !dbg !6914
  %238 = fpext double %237 to x86_fp80, !dbg !6914
  store x86_fp80 %238, x86_fp80* %iftmp.15, align 16, !dbg !6914
  br label %bb62, !dbg !6914

bb62:                                             ; preds = %bb61, %bb60
  %239 = load %4** %stream_addr, align 8, !dbg !6914
  %240 = load x86_fp80* %iftmp.15, align 16, !dbg !6914
  %241 = call i64 @_fpmaxtostr(%4* %239, x86_fp80 %240, %struct.printf_info* %225, i64 (%4*, i64, i64, i64)* @_fp_out_narrow) nounwind, !dbg !6914
  store i64 %241, i64* %nf, align 8, !dbg !6914
  %242 = load i64* %nf, align 8, !dbg !6916
  %243 = icmp slt i64 %242, 0, !dbg !6916
  br i1 %243, label %bb63, label %bb64, !dbg !6916

bb63:                                             ; preds = %bb62
  store i32 -1, i32* %0, align 4, !dbg !6917
  br label %bb131, !dbg !6917

bb64:                                             ; preds = %bb62
  %244 = load i32** %count_addr, align 8, !dbg !6918
  %245 = load i32* %244, align 4, !dbg !6918
  %246 = load i64* %nf, align 8, !dbg !6918
  %247 = trunc i64 %246 to i32, !dbg !6918
  %248 = add i32 %245, %247, !dbg !6918
  %249 = load i32** %count_addr, align 8, !dbg !6918
  store i32 %248, i32* %249, align 4, !dbg !6918
  store i32 0, i32* %0, align 4, !dbg !6919
  br label %bb131, !dbg !6919

bb65:                                             ; preds = %bb58
  %250 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 4, !dbg !6920
  %251 = load i32* %250, align 4, !dbg !6920
  %252 = icmp ule i32 %251, 17, !dbg !6920
  br i1 %252, label %bb66, label %bb81, !dbg !6920

bb66:                                             ; preds = %bb65
  %253 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6921
  store i32 0, i32* %253, align 4, !dbg !6921
  %254 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6922
  %255 = getelementptr inbounds %struct.ppfs_t* %254, i32 0, i32 4, !dbg !6922
  %256 = load i32* %255, align 4, !dbg !6922
  %257 = icmp eq i32 %256, 17, !dbg !6922
  br i1 %257, label %bb67, label %bb76, !dbg !6922

bb67:                                             ; preds = %bb66
  %258 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6923
  %259 = load i8** %258, align 8, !dbg !6923
  %260 = bitcast i8* %259 to i32**, !dbg !6923
  %261 = load i32** %260, align 8, !dbg !6923
  store i32* %261, i32** %ws, align 8, !dbg !6923
  %262 = load i32** %ws, align 8, !dbg !6923
  %263 = icmp eq i32* %262, null, !dbg !6923
  br i1 %263, label %NULL_STRING, label %bb68, !dbg !6923

bb68:                                             ; preds = %bb67
  %264 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6924
  %265 = getelementptr inbounds %struct.ppfs_t* %264, i32 0, i32 1, !dbg !6924
  %266 = getelementptr inbounds %struct.printf_info* %265, i32 0, i32 0, !dbg !6924
  %267 = load i32* %266, align 8, !dbg !6924
  %268 = icmp sge i32 %267, 0, !dbg !6924
  br i1 %268, label %bb69, label %bb70, !dbg !6924

bb69:                                             ; preds = %bb68
  %269 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6924
  %270 = getelementptr inbounds %struct.ppfs_t* %269, i32 0, i32 1, !dbg !6924
  %271 = getelementptr inbounds %struct.printf_info* %270, i32 0, i32 0, !dbg !6924
  %272 = load i32* %271, align 8, !dbg !6924
  %273 = sext i32 %272 to i64, !dbg !6924
  store i64 %273, i64* %iftmp.17, align 8, !dbg !6924
  br label %bb71, !dbg !6924

bb70:                                             ; preds = %bb68
  store i64 -1, i64* %iftmp.17, align 8, !dbg !6924
  br label %bb71, !dbg !6924

bb71:                                             ; preds = %bb70, %bb69
  %ws72 = bitcast i32** %ws to i8*, !dbg !6924
  %274 = load i64* %iftmp.17, align 8, !dbg !6924
  %275 = call i64 @wcsrtombs(i8* noalias %ws72, i32** noalias %ws, i64 %274, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6924
  store i64 %275, i64* %slen, align 8, !dbg !6924
  %276 = load i64* %slen, align 8, !dbg !6924
  %277 = icmp eq i64 %276, -1, !dbg !6924
  br i1 %277, label %bb74, label %bb93, !dbg !6924

bb74:                                             ; preds = %bb71
  store i32 -1, i32* %0, align 4, !dbg !6925
  br label %bb131, !dbg !6925

bb76:                                             ; preds = %bb66
  %buf77 = bitcast [128 x i8]* %buf to i8*, !dbg !6926
  store i8* %buf77, i8** %s, align 8, !dbg !6926
  %278 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6927
  %279 = load i8** %278, align 8, !dbg !6927
  %280 = bitcast i8* %279 to i32*, !dbg !6927
  %281 = load i32* %280, align 4, !dbg !6927
  %282 = load i8** %s, align 8, !dbg !6927
  %283 = call i64 @wcrtomb(i8* noalias %282, i32 %281, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6927
  store i64 %283, i64* %slen, align 8, !dbg !6927
  %284 = load i64* %slen, align 8, !dbg !6928
  %285 = icmp eq i64 %284, -1, !dbg !6928
  br i1 %285, label %bb78, label %bb79, !dbg !6928

bb78:                                             ; preds = %bb76
  store i32 -1, i32* %0, align 4, !dbg !6929
  br label %bb131, !dbg !6929

bb79:                                             ; preds = %bb76
  %286 = load i8** %s, align 8, !dbg !6930
  %287 = load i64* %slen, align 8, !dbg !6930
  %288 = getelementptr inbounds i8* %286, i64 %287, !dbg !6930
  store i8 0, i8* %288, align 1, !dbg !6930
  br label %bb93, !dbg !6930

bb81:                                             ; preds = %bb65
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6931
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 4, !dbg !6931
  %291 = load i32* %290, align 4, !dbg !6931
  %292 = icmp ule i32 %291, 19, !dbg !6931
  br i1 %292, label %bb82, label %bb92, !dbg !6931

bb82:                                             ; preds = %bb81
  %293 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6932
  %294 = getelementptr inbounds %struct.ppfs_t* %293, i32 0, i32 4, !dbg !6932
  %295 = load i32* %294, align 4, !dbg !6932
  %296 = icmp eq i32 %295, 19, !dbg !6932
  br i1 %296, label %bb83, label %bb89, !dbg !6932

bb83:                                             ; preds = %bb82
  %297 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6933
  %298 = load i8** %297, align 8, !dbg !6933
  %299 = bitcast i8* %298 to i8**, !dbg !6933
  %300 = load i8** %299, align 8, !dbg !6933
  store i8* %300, i8** %s, align 8, !dbg !6933
  %301 = load i8** %s, align 8, !dbg !6934
  %302 = icmp ne i8* %301, null, !dbg !6934
  br i1 %302, label %bb84, label %NULL_STRING, !dbg !6934

bb84:                                             ; preds = %bb83
  %303 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6935
  %304 = getelementptr inbounds %struct.ppfs_t* %303, i32 0, i32 1, !dbg !6935
  %305 = getelementptr inbounds %struct.printf_info* %304, i32 0, i32 0, !dbg !6935
  %306 = load i32* %305, align 8, !dbg !6935
  %307 = icmp sge i32 %306, 0, !dbg !6935
  br i1 %307, label %bb85, label %bb86, !dbg !6935

bb85:                                             ; preds = %bb84
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6935
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 1, !dbg !6935
  %310 = getelementptr inbounds %struct.printf_info* %309, i32 0, i32 0, !dbg !6935
  %311 = load i32* %310, align 8, !dbg !6935
  %312 = sext i32 %311 to i64, !dbg !6935
  store i64 %312, i64* %iftmp.19, align 8, !dbg !6935
  br label %bb87, !dbg !6935

bb86:                                             ; preds = %bb84
  store i64 -1, i64* %iftmp.19, align 8, !dbg !6935
  br label %bb87, !dbg !6935

bb87:                                             ; preds = %bb86, %bb85
  %313 = load i8** %s, align 8, !dbg !6935
  %314 = load i64* %iftmp.19, align 8, !dbg !6935
  %315 = call i64 @strnlen(i8* %313, i64 %314) nounwind readonly, !dbg !6935
  store i64 %315, i64* %slen, align 8, !dbg !6935
  br label %bb93, !dbg !6935

NULL_STRING:                                      ; preds = %bb83, %bb67
  store i8* getelementptr inbounds ([7 x i8]* @.str1244, i64 0, i64 0), i8** %s, align 8, !dbg !6936
  store i64 6, i64* %slen, align 8, !dbg !6937
  br label %bb93, !dbg !6937

bb89:                                             ; preds = %bb82
  %buf90 = bitcast [128 x i8]* %buf to i8*, !dbg !6938
  store i8* %buf90, i8** %s, align 8, !dbg !6938
  %316 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6939
  %317 = load i8** %316, align 8, !dbg !6939
  %318 = bitcast i8* %317 to i32*, !dbg !6939
  %319 = load i32* %318, align 4, !dbg !6939
  %320 = trunc i32 %319 to i8, !dbg !6939
  %321 = load i8** %s, align 8, !dbg !6939
  store i8 %320, i8* %321, align 1, !dbg !6939
  %322 = load i8** %s, align 8, !dbg !6940
  %323 = getelementptr inbounds i8* %322, i64 1, !dbg !6940
  store i8 0, i8* %323, align 1, !dbg !6940
  store i64 1, i64* %slen, align 8, !dbg !6941
  br label %bb93, !dbg !6941

bb92:                                             ; preds = %bb81
  store i32 -1, i32* %0, align 4, !dbg !6942
  br label %bb131, !dbg !6942

bb93:                                             ; preds = %bb89, %NULL_STRING, %bb87, %bb79, %bb71, %bb57
  %324 = load i32* %numfill, align 4, !dbg !6943
  %325 = sext i32 %324 to i64, !dbg !6943
  %326 = load i64* %slen, align 8, !dbg !6943
  %327 = add i64 %325, %326, !dbg !6943
  store i64 %327, i64* %t, align 8, !dbg !6943
  %328 = load i32* %prefix_num, align 4, !dbg !6945
  %329 = icmp ne i32 %328, 11, !dbg !6945
  br i1 %329, label %bb94, label %bb98, !dbg !6945

bb94:                                             ; preds = %bb93
  %330 = load i32* %prefix_num, align 4, !dbg !6946
  %331 = icmp sle i32 %330, 5, !dbg !6946
  br i1 %331, label %bb95, label %bb96, !dbg !6946

bb95:                                             ; preds = %bb94
  store i64 1, i64* %iftmp.20, align 8, !dbg !6946
  br label %bb97, !dbg !6946

bb96:                                             ; preds = %bb94
  store i64 2, i64* %iftmp.20, align 8, !dbg !6946
  br label %bb97, !dbg !6946

bb97:                                             ; preds = %bb96, %bb95
  %332 = load i64* %iftmp.20, align 8, !dbg !6946
  %333 = load i64* %t, align 8, !dbg !6946
  %334 = add i64 %332, %333, !dbg !6946
  store i64 %334, i64* %t, align 8, !dbg !6946
  br label %bb98, !dbg !6946

bb98:                                             ; preds = %bb97, %bb93
  %335 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6947
  %336 = getelementptr inbounds %struct.ppfs_t* %335, i32 0, i32 1, !dbg !6947
  %337 = getelementptr inbounds %struct.printf_info* %336, i32 0, i32 1, !dbg !6947
  %338 = load i32* %337, align 4, !dbg !6947
  %339 = sext i32 %338 to i64, !dbg !6947
  %340 = load i64* %t, align 8, !dbg !6947
  %341 = icmp ugt i64 %339, %340, !dbg !6947
  br i1 %341, label %bb99, label %bb100, !dbg !6947

bb99:                                             ; preds = %bb98
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6947
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !6947
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 1, !dbg !6947
  %345 = load i32* %344, align 4, !dbg !6947
  %346 = load i64* %t, align 8, !dbg !6947
  %347 = trunc i64 %346 to i32, !dbg !6947
  %348 = sub i32 %345, %347, !dbg !6947
  store i32 %348, i32* %iftmp.21, align 4, !dbg !6947
  br label %bb101, !dbg !6947

bb100:                                            ; preds = %bb98
  store i32 0, i32* %iftmp.21, align 4, !dbg !6947
  br label %bb101, !dbg !6947

bb101:                                            ; preds = %bb100, %bb99
  %349 = load i32* %iftmp.21, align 4, !dbg !6947
  store i32 %349, i32* %numpad, align 4, !dbg !6947
  %350 = load i32** %count_addr, align 8, !dbg !6948
  %351 = load i32* %350, align 4, !dbg !6948
  %352 = load i64* %t, align 8, !dbg !6948
  %353 = trunc i64 %352 to i32, !dbg !6948
  %354 = load i32* %numpad, align 4, !dbg !6948
  %355 = add i32 %353, %354, !dbg !6948
  %356 = add i32 %351, %355, !dbg !6948
  %357 = load i32** %count_addr, align 8, !dbg !6948
  store i32 %356, i32* %357, align 4, !dbg !6948
  %358 = load i8* %padchar, align 1, !dbg !6949
  %359 = icmp eq i8 %358, 48, !dbg !6949
  br i1 %359, label %bb102, label %bb103, !dbg !6949

bb102:                                            ; preds = %bb101
  %360 = load i32* %numfill, align 4, !dbg !6950
  %361 = load i32* %numpad, align 4, !dbg !6950
  %362 = add nsw i32 %360, %361, !dbg !6950
  store i32 %362, i32* %numfill, align 4, !dbg !6950
  store i32 0, i32* %numpad, align 4, !dbg !6951
  br label %bb103, !dbg !6951

bb103:                                            ; preds = %bb102, %bb101
  %363 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6952
  %364 = getelementptr inbounds %struct.ppfs_t* %363, i32 0, i32 1, !dbg !6952
  %365 = getelementptr inbounds %struct.printf_info* %364, i32 0, i32 3, !dbg !6952
  %366 = load i32* %365, align 4, !dbg !6952
  %367 = and i32 %366, 8, !dbg !6952
  %368 = icmp eq i32 %367, 0, !dbg !6952
  br i1 %368, label %bb104, label %bb107, !dbg !6952

bb104:                                            ; preds = %bb103
  %369 = load i32* %numpad, align 4, !dbg !6953
  %370 = sext i32 %369 to i64, !dbg !6953
  %371 = load %4** %stream_addr, align 8, !dbg !6953
  %372 = call i64 @_charpad(%4* noalias %371, i32 32, i64 %370) nounwind, !dbg !6953
  %373 = load i32* %numpad, align 4, !dbg !6953
  %374 = sext i32 %373 to i64, !dbg !6953
  %375 = icmp ne i64 %372, %374, !dbg !6953
  br i1 %375, label %bb105, label %bb106, !dbg !6953

bb105:                                            ; preds = %bb104
  store i32 -1, i32* %0, align 4, !dbg !6954
  br label %bb131, !dbg !6954

bb106:                                            ; preds = %bb104
  store i32 0, i32* %numpad, align 4, !dbg !6955
  br label %bb107, !dbg !6955

bb107:                                            ; preds = %bb106, %bb103
  %376 = load i32* %prefix_num, align 4, !dbg !6956
  %377 = sext i32 %376 to i64, !dbg !6956
  %378 = getelementptr inbounds i8* getelementptr inbounds ([12 x i8]* @prefix.3675, i64 0, i64 0), i64 %377, !dbg !6956
  %379 = load %4** %stream_addr, align 8, !dbg !6956
  %380 = call i32 @fputs_unlocked(i8* noalias %378, %4* noalias %379) nounwind, !dbg !6956
  %381 = load i32* %numfill, align 4, !dbg !6957
  %382 = sext i32 %381 to i64, !dbg !6957
  %383 = load %4** %stream_addr, align 8, !dbg !6957
  %384 = call i64 @_charpad(%4* noalias %383, i32 48, i64 %382) nounwind, !dbg !6957
  %385 = load i32* %numfill, align 4, !dbg !6957
  %386 = sext i32 %385 to i64, !dbg !6957
  %387 = icmp ne i64 %384, %386, !dbg !6957
  br i1 %387, label %bb108, label %bb109, !dbg !6957

bb108:                                            ; preds = %bb107
  store i32 -1, i32* %0, align 4, !dbg !6958
  br label %bb131, !dbg !6958

bb109:                                            ; preds = %bb107
  %388 = load i32** %ws, align 8, !dbg !6959
  %389 = icmp eq i32* %388, null, !dbg !6959
  br i1 %389, label %bb110, label %bb116, !dbg !6959

bb110:                                            ; preds = %bb109
  %390 = load i64* %slen, align 8, !dbg !6960
  %391 = icmp ne i64 %390, 0, !dbg !6960
  br i1 %391, label %bb111, label %bb112, !dbg !6960

bb111:                                            ; preds = %bb110
  %392 = load i8** %s, align 8, !dbg !6960
  %393 = load i64* %slen, align 8, !dbg !6960
  %394 = load %4** %stream_addr, align 8, !dbg !6960
  %395 = call i64 @__stdio_fwrite(i8* noalias %392, i64 %393, %4* noalias %394) nounwind, !dbg !6960
  store i64 %395, i64* %iftmp.24, align 8, !dbg !6960
  br label %bb113, !dbg !6960

bb112:                                            ; preds = %bb110
  store i64 0, i64* %iftmp.24, align 8, !dbg !6960
  br label %bb113, !dbg !6960

bb113:                                            ; preds = %bb112, %bb111
  %396 = load i64* %iftmp.24, align 8, !dbg !6960
  %397 = load i64* %slen, align 8, !dbg !6960
  %398 = icmp ne i64 %396, %397, !dbg !6960
  br i1 %398, label %bb114, label %bb128, !dbg !6960

bb114:                                            ; preds = %bb113
  store i32 -1, i32* %0, align 4, !dbg !6961
  br label %bb131, !dbg !6961

bb116:                                            ; preds = %bb109
  %399 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6962
  store i32 0, i32* %399, align 4, !dbg !6962
  br label %bb127, !dbg !6962

bb118:                                            ; preds = %bb127
  %400 = load i64* %slen, align 8, !dbg !6964
  %401 = icmp ule i64 %400, 128, !dbg !6964
  %min = select i1 %401, i64 %400, i64 128, !dbg !6964
  store i64 %min, i64* %t117, align 8, !dbg !6964
  %buf119 = bitcast [128 x i8]* %buf to i8*, !dbg !6965
  %402 = load i64* %t117, align 8, !dbg !6965
  %403 = call i64 @wcsrtombs(i8* noalias %buf119, i32** noalias %ws, i64 %402, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6965
  store i64 %403, i64* %t117, align 8, !dbg !6965
  %404 = load i64* %t117, align 8, !dbg !6966
  %405 = icmp ne i64 %404, 0, !dbg !6966
  br i1 %405, label %bb120, label %bb123, !dbg !6966

bb120:                                            ; preds = %bb118
  %buf121 = bitcast [128 x i8]* %buf to i8*, !dbg !6966
  %406 = load i64* %t117, align 8, !dbg !6966
  %407 = load %4** %stream_addr, align 8, !dbg !6966
  %408 = call i64 @__stdio_fwrite(i8* noalias %buf121, i64 %406, %4* noalias %407) nounwind, !dbg !6966
  store i64 %408, i64* %iftmp.26, align 8, !dbg !6966
  br label %bb124, !dbg !6966

bb123:                                            ; preds = %bb118
  store i64 0, i64* %iftmp.26, align 8, !dbg !6966
  br label %bb124, !dbg !6966

bb124:                                            ; preds = %bb123, %bb120
  %409 = load i64* %iftmp.26, align 8, !dbg !6966
  %410 = load i64* %t117, align 8, !dbg !6966
  %411 = icmp ne i64 %409, %410, !dbg !6966
  br i1 %411, label %bb125, label %bb126, !dbg !6966

bb125:                                            ; preds = %bb124
  store i32 -1, i32* %0, align 4, !dbg !6967
  br label %bb131, !dbg !6967

bb126:                                            ; preds = %bb124
  %412 = load i64* %slen, align 8, !dbg !6968
  %413 = load i64* %t117, align 8, !dbg !6968
  %414 = sub i64 %412, %413, !dbg !6968
  store i64 %414, i64* %slen, align 8, !dbg !6968
  br label %bb127, !dbg !6968

bb127:                                            ; preds = %bb126, %bb116
  %415 = load i64* %slen, align 8, !dbg !6969
  %416 = icmp ne i64 %415, 0, !dbg !6969
  br i1 %416, label %bb118, label %bb128, !dbg !6969

bb128:                                            ; preds = %bb113, %bb127
  %417 = load i32* %numpad, align 4, !dbg !6970
  %418 = sext i32 %417 to i64, !dbg !6970
  %419 = load %4** %stream_addr, align 8, !dbg !6970
  %420 = call i64 @_charpad(%4* noalias %419, i32 32, i64 %418) nounwind, !dbg !6970
  %421 = load i32* %numpad, align 4, !dbg !6970
  %422 = sext i32 %421 to i64, !dbg !6970
  %423 = icmp ne i64 %420, %422, !dbg !6970
  br i1 %423, label %bb129, label %bb130, !dbg !6970

bb129:                                            ; preds = %bb128
  store i32 -1, i32* %0, align 4, !dbg !6971
  br label %bb131, !dbg !6971

bb130:                                            ; preds = %bb128
  store i32 0, i32* %0, align 4, !dbg !6972
  br label %bb131, !dbg !6972

bb131:                                            ; preds = %bb130, %bb129, %bb125, %bb114, %bb108, %bb105, %bb92, %bb78, %bb74, %bb64, %bb63, %bb5
  %424 = load i32* %0, align 4, !dbg !6868
  store i32 %424, i32* %retval, align 4, !dbg !6868
  %retval132 = load i32* %retval, !dbg !6868
  ret i32 %retval132, !dbg !6868
}

define i32 @vfprintf(%4* noalias %stream, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.31 = alloca i32
  %iftmp.28 = alloca i64
  %ppfs = alloca %struct.ppfs_t
  %count = alloca i32
  %r = alloca i32
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i32 0, i32* %count, align 4, !dbg !6973
  %1 = load i8** %format_addr, align 8, !dbg !6975
  store i8* %1, i8** %s, align 8, !dbg !6975
  %2 = load %4** %stream_addr, align 8, !dbg !6976
  %3 = getelementptr inbounds %4* %2, i32 0, i32 0, !dbg !6976
  %4 = load i16* %3, align 8, !dbg !6976
  %5 = zext i16 %4 to i32, !dbg !6976
  %6 = and i32 %5, 192, !dbg !6976
  %7 = icmp eq i32 %6, 192, !dbg !6976
  br i1 %7, label %bb2, label %bb, !dbg !6976

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6976
  %9 = call i32 @__stdio_trans2w_o(%4* noalias %8, i32 128) nounwind, !dbg !6976
  %10 = icmp eq i32 %9, 0, !dbg !6976
  br i1 %10, label %bb2, label %bb1, !dbg !6976

bb1:                                              ; preds = %bb
  store i32 -1, i32* %count, align 4, !dbg !6977
  br label %bb27, !dbg !6977

bb2:                                              ; preds = %bb, %entry
  %11 = load i8** %format_addr, align 8, !dbg !6978
  %12 = call i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %11) nounwind, !dbg !6978
  %13 = icmp slt i32 %12, 0, !dbg !6978
  br i1 %13, label %bb3, label %bb7, !dbg !6978

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6979
  %15 = load i8** %14, align 16, !dbg !6979
  %16 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !6979
  %17 = icmp ne i64 %16, 0, !dbg !6979
  br i1 %17, label %bb4, label %bb5, !dbg !6979

bb4:                                              ; preds = %bb3
  %18 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6979
  %19 = load i8** %18, align 16, !dbg !6979
  %20 = call i64 @strlen(i8* %19) nounwind readonly, !dbg !6979
  %21 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6979
  %22 = load i8** %21, align 16, !dbg !6979
  %23 = load %4** %stream_addr, align 8, !dbg !6979
  %24 = call i64 @__stdio_fwrite(i8* noalias %22, i64 %20, %4* noalias %23) nounwind, !dbg !6979
  store i64 %24, i64* %iftmp.28, align 8, !dbg !6979
  br label %bb6, !dbg !6979

bb5:                                              ; preds = %bb3
  store i64 0, i64* %iftmp.28, align 8, !dbg !6979
  br label %bb6, !dbg !6979

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* %count, align 4, !dbg !6980
  br label %bb27, !dbg !6980

bb7:                                              ; preds = %bb2
  %25 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6981
  call void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %25) nounwind, !dbg !6981
  br label %bb10, !dbg !6981

bb9:                                              ; preds = %bb11
  %26 = load i8** %format_addr, align 8, !dbg !6982
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6982
  store i8* %27, i8** %format_addr, align 8, !dbg !6982
  br label %bb10, !dbg !6982

bb10:                                             ; preds = %bb23, %bb24, %bb7, %bb9
  %28 = load i8** %format_addr, align 8, !dbg !6983
  %29 = load i8* %28, align 1, !dbg !6983
  %30 = icmp eq i8 %29, 0, !dbg !6983
  br i1 %30, label %bb12, label %bb11, !dbg !6983

bb11:                                             ; preds = %bb10
  %31 = load i8** %format_addr, align 8, !dbg !6983
  %32 = load i8* %31, align 1, !dbg !6983
  %33 = icmp ne i8 %32, 37, !dbg !6983
  br i1 %33, label %bb9, label %bb12, !dbg !6983

bb12:                                             ; preds = %bb11, %bb10
  %34 = load i8** %format_addr, align 8, !dbg !6984
  %35 = ptrtoint i8* %34 to i64, !dbg !6984
  %36 = load i8** %s, align 8, !dbg !6984
  %37 = ptrtoint i8* %36 to i64, !dbg !6984
  %38 = icmp ne i64 %35, %37, !dbg !6984
  br i1 %38, label %bb13, label %bb19, !dbg !6984

bb13:                                             ; preds = %bb12
  %39 = load i8** %format_addr, align 8, !dbg !6985
  %40 = ptrtoint i8* %39 to i64, !dbg !6985
  %41 = load i8** %s, align 8, !dbg !6985
  %42 = ptrtoint i8* %41 to i64, !dbg !6985
  %43 = sub nsw i64 %40, %42, !dbg !6985
  %44 = icmp sgt i64 %43, 0, !dbg !6985
  br i1 %44, label %bb14, label %bb15, !dbg !6985

bb14:                                             ; preds = %bb13
  %45 = load i8** %format_addr, align 8, !dbg !6985
  %46 = ptrtoint i8* %45 to i64, !dbg !6985
  %47 = load i8** %s, align 8, !dbg !6985
  %48 = ptrtoint i8* %47 to i64, !dbg !6985
  %49 = sub nsw i64 %46, %48, !dbg !6985
  %50 = load i8** %s, align 8, !dbg !6985
  %51 = load %4** %stream_addr, align 8, !dbg !6985
  %52 = call i64 @__stdio_fwrite(i8* noalias %50, i64 %49, %4* noalias %51) nounwind, !dbg !6985
  %53 = trunc i64 %52 to i32, !dbg !6985
  store i32 %53, i32* %iftmp.31, align 4, !dbg !6985
  br label %bb16, !dbg !6985

bb15:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.31, align 4, !dbg !6985
  br label %bb16, !dbg !6985

bb16:                                             ; preds = %bb15, %bb14
  %54 = load i32* %iftmp.31, align 4, !dbg !6985
  store i32 %54, i32* %r, align 4, !dbg !6985
  %55 = load i32* %r, align 4, !dbg !6985
  %56 = sext i32 %55 to i64, !dbg !6985
  %57 = load i8** %format_addr, align 8, !dbg !6985
  %58 = ptrtoint i8* %57 to i64, !dbg !6985
  %59 = load i8** %s, align 8, !dbg !6985
  %60 = ptrtoint i8* %59 to i64, !dbg !6985
  %61 = sub nsw i64 %58, %60, !dbg !6985
  %62 = icmp ne i64 %56, %61, !dbg !6985
  br i1 %62, label %bb17, label %bb18, !dbg !6985

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %count, align 4, !dbg !6986
  br label %bb26, !dbg !6986

bb18:                                             ; preds = %bb16
  %63 = load i32* %count, align 4, !dbg !6987
  %64 = load i32* %r, align 4, !dbg !6987
  %65 = add nsw i32 %63, %64, !dbg !6987
  store i32 %65, i32* %count, align 4, !dbg !6987
  br label %bb19, !dbg !6987

bb19:                                             ; preds = %bb18, %bb12
  %66 = load i8** %format_addr, align 8, !dbg !6988
  %67 = load i8* %66, align 1, !dbg !6988
  %68 = icmp eq i8 %67, 0, !dbg !6988
  br i1 %68, label %bb26, label %bb20, !dbg !6988

bb20:                                             ; preds = %bb19
  %69 = load i8** %format_addr, align 8, !dbg !6989
  %70 = getelementptr inbounds i8* %69, i64 1, !dbg !6989
  %71 = load i8* %70, align 1, !dbg !6989
  %72 = icmp ne i8 %71, 37, !dbg !6989
  %73 = load i8** %format_addr, align 8, !dbg !6990
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !6990
  store i8* %74, i8** %format_addr, align 8, !dbg !6990
  br i1 %72, label %bb21, label %bb24, !dbg !6989

bb21:                                             ; preds = %bb20
  %75 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6990
  %76 = load i8** %format_addr, align 8, !dbg !6990
  store i8* %76, i8** %75, align 16, !dbg !6990
  %77 = load %4** %stream_addr, align 8, !dbg !6991
  %78 = call i32 @_do_one_spec(%4* noalias %77, %struct.ppfs_t* %ppfs, i32* %count) nounwind, !dbg !6991
  store i32 %78, i32* %r, align 4, !dbg !6991
  %79 = load i32* %r, align 4, !dbg !6991
  %80 = icmp slt i32 %79, 0, !dbg !6991
  br i1 %80, label %bb22, label %bb23, !dbg !6991

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %count, align 4, !dbg !6992
  br label %bb26, !dbg !6992

bb23:                                             ; preds = %bb21
  %81 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6993
  %82 = load i8** %81, align 16, !dbg !6993
  store i8* %82, i8** %format_addr, align 8, !dbg !6993
  %83 = load i8** %format_addr, align 8, !dbg !6993
  store i8* %83, i8** %s, align 8, !dbg !6993
  br label %bb10, !dbg !6993

bb24:                                             ; preds = %bb20
  %84 = load i8** %format_addr, align 8, !dbg !6994
  store i8* %84, i8** %s, align 8, !dbg !6994
  %85 = load i8** %format_addr, align 8, !dbg !6995
  %86 = getelementptr inbounds i8* %85, i64 1, !dbg !6995
  store i8* %86, i8** %format_addr, align 8, !dbg !6995
  br label %bb10, !dbg !6995

bb26:                                             ; preds = %bb22, %bb19, %bb17
  %87 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 7, !dbg !6996
  %88 = getelementptr inbounds [1 x %struct.__va_list_tag]* %87, i64 0, i64 0, !dbg !6996
  %89 = bitcast %struct.__va_list_tag* %88 to i8*, !dbg !6996
  call void @llvm.va_end(i8* %89), !dbg !6996
  br label %bb27, !dbg !6996

bb27:                                             ; preds = %bb26, %bb6, %bb1
  %90 = load i32* %count, align 4, !dbg !6997
  store i32 %90, i32* %0, align 4, !dbg !6997
  %91 = load i32* %0, align 4, !dbg !6997
  store i32 %91, i32* %retval, align 4, !dbg !6997
  %retval28 = load i32* %retval, !dbg !6997
  ret i32 %retval28, !dbg !6997
}

define i32 @vsnprintf(i8* noalias %buf, i64 %size, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca %4
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i64 %size, i64* %size_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %1 = getelementptr inbounds %4* %f, i32 0, i32 2, !dbg !6998
  store i32 -2, i32* %1, align 4, !dbg !6998
  %2 = getelementptr inbounds %4* %f, i32 0, i32 0, !dbg !7000
  store i16 208, i16* %2, align 8, !dbg !7000
  %3 = getelementptr inbounds %4* %f, i32 0, i32 1, !dbg !7001
  %4 = getelementptr inbounds [2 x i8]* %3, i64 0, i64 0, !dbg !7001
  store i8 0, i8* %4, align 1, !dbg !7001
  %5 = getelementptr inbounds %4* %f, i32 0, i32 11, !dbg !7002
  %6 = getelementptr inbounds %struct.__mbstate_t* %5, i32 0, i32 0, !dbg !7002
  store i32 0, i32* %6, align 8, !dbg !7002
  %7 = getelementptr inbounds %4* %f, i32 0, i32 9, !dbg !7003
  store %4* null, %4** %7, align 8, !dbg !7003
  %8 = load i8** %buf_addr, align 8, !dbg !7004
  %9 = ptrtoint i8* %8 to i64, !dbg !7004
  %not = xor i64 %9, -1, !dbg !7004
  %10 = load i64* %size_addr, align 8, !dbg !7004
  %11 = icmp ult i64 %not, %10, !dbg !7004
  br i1 %11, label %bb, label %bb3, !dbg !7004

bb:                                               ; preds = %entry
  %12 = load i8** %buf_addr, align 8, !dbg !7005
  %13 = ptrtoint i8* %12 to i64, !dbg !7005
  %not2 = xor i64 %13, -1, !dbg !7005
  store i64 %not2, i64* %size_addr, align 8, !dbg !7005
  br label %bb3, !dbg !7005

bb3:                                              ; preds = %bb, %entry
  %14 = load i8** %buf_addr, align 8, !dbg !7006
  %15 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7006
  store i8* %14, i8** %15, align 8, !dbg !7006
  %16 = load i8** %buf_addr, align 8, !dbg !7007
  %17 = load i64* %size_addr, align 8, !dbg !7007
  %18 = getelementptr inbounds i8* %16, i64 %17, !dbg !7007
  %19 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7007
  store i8* %18, i8** %19, align 8, !dbg !7007
  %20 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7008
  %21 = load i8** %20, align 8, !dbg !7008
  %22 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7008
  store i8* %21, i8** %22, align 8, !dbg !7008
  %23 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7008
  %24 = load i8** %23, align 8, !dbg !7008
  %25 = getelementptr inbounds %4* %f, i32 0, i32 6, !dbg !7008
  store i8* %24, i8** %25, align 8, !dbg !7008
  %26 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7009
  %27 = load i8** %26, align 8, !dbg !7009
  %28 = getelementptr inbounds %4* %f, i32 0, i32 7, !dbg !7009
  store i8* %27, i8** %28, align 8, !dbg !7009
  %29 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7010
  %30 = load i8** %29, align 8, !dbg !7010
  %31 = getelementptr inbounds %4* %f, i32 0, i32 8, !dbg !7010
  store i8* %30, i8** %31, align 8, !dbg !7010
  %32 = load i8** %format_addr, align 8, !dbg !7011
  %33 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7011
  %34 = call i32 @vfprintf(%4* noalias %f, i8* noalias %32, %struct.__va_list_tag* %33) nounwind, !dbg !7011
  store i32 %34, i32* %rv, align 4, !dbg !7011
  %35 = load i64* %size_addr, align 8, !dbg !7012
  %36 = icmp ne i64 %35, 0, !dbg !7012
  br i1 %36, label %bb4, label %bb7, !dbg !7012

bb4:                                              ; preds = %bb3
  %37 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7013
  %38 = load i8** %37, align 8, !dbg !7013
  %39 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7013
  %40 = load i8** %39, align 8, !dbg !7013
  %41 = icmp eq i8* %38, %40, !dbg !7013
  br i1 %41, label %bb5, label %bb6, !dbg !7013

bb5:                                              ; preds = %bb4
  %42 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7014
  %43 = load i8** %42, align 8, !dbg !7014
  %44 = getelementptr inbounds i8* %43, i64 -1, !dbg !7014
  %45 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7014
  store i8* %44, i8** %45, align 8, !dbg !7014
  br label %bb6, !dbg !7014

bb6:                                              ; preds = %bb5, %bb4
  %46 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7015
  %47 = load i8** %46, align 8, !dbg !7015
  store i8 0, i8* %47, align 1, !dbg !7015
  br label %bb7, !dbg !7015

bb7:                                              ; preds = %bb6, %bb3
  %48 = load i32* %rv, align 4, !dbg !7016
  store i32 %48, i32* %0, align 4, !dbg !7016
  %49 = load i32* %0, align 4, !dbg !7016
  store i32 %49, i32* %retval, align 4, !dbg !7016
  %retval8 = load i32* %retval, !dbg !7016
  ret i32 %retval8, !dbg !7016
}

define i32 @vsscanf(i8* %sp, i8* %fmt, %struct.__va_list_tag* %ap) nounwind {
entry:
  %sp_addr = alloca i8*, align 8
  %fmt_addr = alloca i8*, align 8
  %ap_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca %4
  %"alloca point" = bitcast i32 0 to i32
  store i8* %sp, i8** %sp_addr
  store i8* %fmt, i8** %fmt_addr
  store %struct.__va_list_tag* %ap, %struct.__va_list_tag** %ap_addr
  %1 = getelementptr inbounds %4* %f, i32 0, i32 2, !dbg !7017
  store i32 -2, i32* %1, align 4, !dbg !7017
  %2 = getelementptr inbounds %4* %f, i32 0, i32 0, !dbg !7019
  store i16 161, i16* %2, align 8, !dbg !7019
  %3 = getelementptr inbounds %4* %f, i32 0, i32 1, !dbg !7020
  %4 = getelementptr inbounds [2 x i8]* %3, i64 0, i64 0, !dbg !7020
  store i8 0, i8* %4, align 1, !dbg !7020
  %5 = getelementptr inbounds %4* %f, i32 0, i32 11, !dbg !7021
  %6 = getelementptr inbounds %struct.__mbstate_t* %5, i32 0, i32 0, !dbg !7021
  store i32 0, i32* %6, align 8, !dbg !7021
  %7 = getelementptr inbounds %4* %f, i32 0, i32 9, !dbg !7022
  store %4* null, %4** %7, align 8, !dbg !7022
  %8 = load i8** %sp_addr, align 8, !dbg !7023
  %9 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7023
  store i8* %8, i8** %9, align 8, !dbg !7023
  %10 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !7023
  %11 = load i8** %10, align 8, !dbg !7023
  %12 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7023
  store i8* %11, i8** %12, align 8, !dbg !7023
  %13 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7024
  %14 = load i8** %13, align 8, !dbg !7024
  %15 = load i8** %sp_addr, align 8, !dbg !7024
  %16 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !7024
  %17 = getelementptr inbounds i8* %14, i64 %16, !dbg !7024
  %18 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7024
  store i8* %17, i8** %18, align 8, !dbg !7024
  %19 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !7024
  %20 = load i8** %19, align 8, !dbg !7024
  %21 = getelementptr inbounds %4* %f, i32 0, i32 6, !dbg !7024
  store i8* %20, i8** %21, align 8, !dbg !7024
  %22 = getelementptr inbounds %4* %f, i32 0, i32 6, !dbg !7025
  %23 = load i8** %22, align 8, !dbg !7025
  %24 = getelementptr inbounds %4* %f, i32 0, i32 7, !dbg !7025
  store i8* %23, i8** %24, align 8, !dbg !7025
  %25 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !7026
  %26 = load i8** %25, align 8, !dbg !7026
  %27 = getelementptr inbounds %4* %f, i32 0, i32 8, !dbg !7026
  store i8* %26, i8** %27, align 8, !dbg !7026
  %28 = load i8** %fmt_addr, align 8, !dbg !7027
  %29 = load %struct.__va_list_tag** %ap_addr, align 8, !dbg !7027
  %30 = call i32 @vfscanf(%4* noalias %f, i8* noalias %28, %struct.__va_list_tag* %29) nounwind, !dbg !7027
  store i32 %30, i32* %0, align 4, !dbg !7027
  %31 = load i32* %0, align 4, !dbg !7027
  store i32 %31, i32* %retval, align 4, !dbg !7027
  %retval1 = load i32* %retval, !dbg !7027
  ret i32 %retval1, !dbg !7027
}

define i64 @wcsrtombs(i8* noalias %dst, i32** noalias %src, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %dst_addr, align 8, !dbg !7028
  %2 = load i32*** %src_addr, align 8, !dbg !7028
  %3 = load i64* %len_addr, align 8, !dbg !7028
  %4 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7028
  %5 = call i64 @wcsnrtombs(i8* noalias %1, i32** noalias %2, i64 -1, i64 %3, %struct.__mbstate_t* noalias %4) nounwind, !dbg !7028
  store i64 %5, i64* %0, align 8, !dbg !7028
  %6 = load i64* %0, align 8, !dbg !7028
  store i64 %6, i64* %retval, align 8, !dbg !7028
  %retval1 = load i64* %retval, !dbg !7028
  ret i64 %retval1, !dbg !7028
}

define hidden void @_store_inttype(i8* %dest, i32 %desttype, i64 %val) nounwind {
entry:
  %dest_addr = alloca i8*, align 8
  %desttype_addr = alloca i32, align 4
  %val_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dest, i8** %dest_addr
  store i32 %desttype, i32* %desttype_addr
  store i64 %val, i64* %val_addr
  %0 = load i32* %desttype_addr, align 4, !dbg !7030
  %1 = icmp eq i32 %0, 256, !dbg !7030
  br i1 %1, label %bb, label %bb1, !dbg !7030

bb:                                               ; preds = %entry
  %2 = load i8** %dest_addr, align 8, !dbg !7032
  %3 = load i64* %val_addr, align 8, !dbg !7032
  %4 = trunc i64 %3 to i8, !dbg !7032
  store i8 %4, i8* %2, align 1, !dbg !7032
  br label %return, !dbg !7032

bb1:                                              ; preds = %entry
  %5 = load i32* %desttype_addr, align 4, !dbg !7033
  %6 = icmp eq i32 %5, 2048, !dbg !7033
  br i1 %6, label %bb2, label %bb3, !dbg !7033

bb2:                                              ; preds = %bb1
  %7 = load i8** %dest_addr, align 8, !dbg !7034
  %8 = bitcast i8* %7 to i64*, !dbg !7034
  %9 = load i64* %val_addr, align 8, !dbg !7034
  store i64 %9, i64* %8, align 8, !dbg !7034
  br label %return, !dbg !7034

bb3:                                              ; preds = %bb1
  %10 = load i32* %desttype_addr, align 4, !dbg !7035
  %11 = icmp eq i32 %10, 512, !dbg !7035
  br i1 %11, label %bb4, label %bb5, !dbg !7035

bb4:                                              ; preds = %bb3
  %12 = load i8** %dest_addr, align 8, !dbg !7036
  %13 = bitcast i8* %12 to i16*, !dbg !7036
  %14 = load i64* %val_addr, align 8, !dbg !7036
  %15 = trunc i64 %14 to i16, !dbg !7036
  store i16 %15, i16* %13, align 2, !dbg !7036
  br label %return, !dbg !7036

bb5:                                              ; preds = %bb3
  %16 = load i32* %desttype_addr, align 4, !dbg !7037
  %17 = icmp eq i32 %16, 1024, !dbg !7037
  %18 = load i8** %dest_addr, align 8, !dbg !7038
  br i1 %17, label %bb6, label %bb7, !dbg !7037

bb6:                                              ; preds = %bb5
  %19 = bitcast i8* %18 to i64*, !dbg !7038
  %20 = load i64* %val_addr, align 8, !dbg !7038
  store i64 %20, i64* %19, align 8, !dbg !7038
  br label %return, !dbg !7038

bb7:                                              ; preds = %bb5
  %21 = bitcast i8* %18 to i32*, !dbg !7039
  %22 = load i64* %val_addr, align 8, !dbg !7039
  %23 = trunc i64 %22 to i32, !dbg !7039
  store i32 %23, i32* %21, align 4, !dbg !7039
  br label %return, !dbg !7039

return:                                           ; preds = %bb, %bb2, %bb4, %bb6, %bb7
  ret void, !dbg !7040
}

define i32 @__xpg_strerror_r(i32 %errnum, i8* %strerrbuf, i64 %buflen) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %strerrbuf_addr = alloca i8*, align 8
  %buflen_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %s = alloca i8*
  %i = alloca i32
  %retval1 = alloca i32
  %buf = alloca [50 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  store i8* %strerrbuf, i8** %strerrbuf_addr
  store i64 %buflen, i64* %buflen_addr
  store i32 22, i32* %retval1, align 4, !dbg !7041
  %1 = load i32* %errnum_addr, align 4, !dbg !7043
  store i32 %1, i32* %i, align 4, !dbg !7043
  %2 = load i32* %i, align 4, !dbg !7044
  %3 = icmp ule i32 %2, 124, !dbg !7044
  br i1 %3, label %bb, label %bb8, !dbg !7044

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([2906 x i8]* @_string_syserrmsgs, i64 0, i64 0), i8** %s, align 8, !dbg !7045
  br label %bb5, !dbg !7045

bb2:                                              ; preds = %bb5
  %4 = icmp eq i8 %12, 0, !dbg !7046
  br i1 %4, label %bb3, label %bb4, !dbg !7046

bb3:                                              ; preds = %bb2
  %5 = load i32* %i, align 4, !dbg !7047
  %6 = sub nsw i32 %5, 1, !dbg !7047
  store i32 %6, i32* %i, align 4, !dbg !7047
  br label %bb4, !dbg !7047

bb4:                                              ; preds = %bb3, %bb2
  %7 = load i8** %s, align 8, !dbg !7045
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !7045
  store i8* %8, i8** %s, align 8, !dbg !7045
  br label %bb5, !dbg !7045

bb5:                                              ; preds = %bb4, %bb
  %9 = load i32* %i, align 4, !dbg !7045
  %10 = icmp ne i32 %9, 0, !dbg !7045
  %11 = load i8** %s, align 8, !dbg !7046
  %12 = load i8* %11, align 1, !dbg !7046
  br i1 %10, label %bb2, label %bb6, !dbg !7045

bb6:                                              ; preds = %bb5
  %13 = icmp ne i8 %12, 0, !dbg !7048
  br i1 %13, label %bb7, label %bb8, !dbg !7048

bb7:                                              ; preds = %bb6
  store i32 0, i32* %retval1, align 4, !dbg !7049
  br label %GOT_MESG, !dbg !7049

bb8:                                              ; preds = %bb6, %entry
  %14 = load i32* %errnum_addr, align 4, !dbg !7050
  %15 = sext i32 %14 to i64, !dbg !7050
  %buf9 = bitcast [50 x i8]* %buf to i8*, !dbg !7050
  %16 = getelementptr inbounds i8* %buf9, i64 50, !dbg !7050
  %17 = getelementptr inbounds i8* %16, i64 -1, !dbg !7050
  %18 = call i8* @_uintmaxtostr(i8* noalias %17, i64 %15, i32 -10, i32 0) nounwind, !dbg !7050
  %19 = getelementptr inbounds i8* %18, i64 -14, !dbg !7050
  store i8* %19, i8** %s, align 8, !dbg !7050
  %20 = load i8** %s, align 8, !dbg !7051
  %21 = call i8* @memcpy(i8* noalias %20, i8* noalias getelementptr inbounds ([14 x i8]* @unknown.1225, i64 0, i64 0), i64 14) nounwind, !dbg !7051
  br label %GOT_MESG, !dbg !7052

GOT_MESG:                                         ; preds = %bb8, %bb7
  %22 = load i8** %strerrbuf_addr, align 8, !dbg !7053
  %23 = icmp eq i8* %22, null, !dbg !7053
  br i1 %23, label %bb10, label %bb11, !dbg !7053

bb10:                                             ; preds = %GOT_MESG
  store i64 0, i64* %buflen_addr, align 8, !dbg !7054
  br label %bb11, !dbg !7054

bb11:                                             ; preds = %bb10, %GOT_MESG
  %24 = load i8** %s, align 8, !dbg !7055
  %25 = call i64 @strlen(i8* %24) nounwind readonly, !dbg !7055
  %26 = trunc i64 %25 to i32, !dbg !7055
  %27 = add i32 %26, 1, !dbg !7055
  store i32 %27, i32* %i, align 4, !dbg !7055
  %28 = load i32* %i, align 4, !dbg !7056
  %29 = sext i32 %28 to i64, !dbg !7056
  %30 = load i64* %buflen_addr, align 8, !dbg !7056
  %31 = icmp ugt i64 %29, %30, !dbg !7056
  br i1 %31, label %bb12, label %bb13, !dbg !7056

bb12:                                             ; preds = %bb11
  %32 = load i64* %buflen_addr, align 8, !dbg !7057
  %33 = trunc i64 %32 to i32, !dbg !7057
  store i32 %33, i32* %i, align 4, !dbg !7057
  store i32 34, i32* %retval1, align 4, !dbg !7058
  br label %bb13, !dbg !7058

bb13:                                             ; preds = %bb12, %bb11
  %34 = load i32* %i, align 4, !dbg !7059
  %35 = icmp ne i32 %34, 0, !dbg !7059
  br i1 %35, label %bb14, label %bb15, !dbg !7059

bb14:                                             ; preds = %bb13
  %36 = load i32* %i, align 4, !dbg !7060
  %37 = sext i32 %36 to i64, !dbg !7060
  %38 = load i8** %strerrbuf_addr, align 8, !dbg !7060
  %39 = load i8** %s, align 8, !dbg !7060
  %40 = call i8* @memcpy(i8* noalias %38, i8* noalias %39, i64 %37) nounwind, !dbg !7060
  %41 = load i32* %i, align 4, !dbg !7061
  %42 = sub nsw i32 %41, 1, !dbg !7061
  %43 = load i8** %strerrbuf_addr, align 8, !dbg !7061
  %44 = sext i32 %42 to i64, !dbg !7061
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !7061
  store i8 0, i8* %45, align 1, !dbg !7061
  br label %bb15, !dbg !7061

bb15:                                             ; preds = %bb14, %bb13
  %46 = load i32* %retval1, align 4, !dbg !7062
  %47 = icmp ne i32 %46, 0, !dbg !7062
  br i1 %47, label %bb16, label %bb17, !dbg !7062

bb16:                                             ; preds = %bb15
  %48 = load i32* %retval1, align 4, !dbg !7063
  store i32 %48, i32* @errno, align 4, !dbg !7063
  br label %bb17, !dbg !7063

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %retval1, align 4, !dbg !7064
  store i32 %49, i32* %0, align 4, !dbg !7064
  %50 = load i32* %0, align 4, !dbg !7064
  store i32 %50, i32* %retval, align 4, !dbg !7064
  %retval18 = load i32* %retval, !dbg !7064
  ret i32 %retval18, !dbg !7064
}

define hidden i32 @__stdio_adjust_position(%4* noalias %stream, i64* %pos) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %oldpos = alloca i64
  %corr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  %1 = load %4** %stream_addr, align 8, !dbg !7065
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !7065
  %3 = load i16* %2, align 8, !dbg !7065
  %4 = zext i16 %3 to i32, !dbg !7065
  %5 = and i32 %4, 3, !dbg !7065
  store i32 %5, i32* %corr, align 4, !dbg !7065
  %6 = load i32* %corr, align 4, !dbg !7065
  %7 = icmp ne i32 %6, 0, !dbg !7065
  br i1 %7, label %bb, label %bb1, !dbg !7065

bb:                                               ; preds = %entry
  %8 = load i32* %corr, align 4, !dbg !7067
  %9 = sub nsw i32 %8, 1, !dbg !7067
  store i32 %9, i32* %corr, align 4, !dbg !7067
  br label %bb1, !dbg !7067

bb1:                                              ; preds = %bb, %entry
  %10 = load i32* %corr, align 4, !dbg !7068
  %11 = icmp ne i32 %10, 0, !dbg !7068
  br i1 %11, label %bb2, label %bb8, !dbg !7068

bb2:                                              ; preds = %bb1
  %12 = load %4** %stream_addr, align 8, !dbg !7068
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !7068
  %14 = load i16* %13, align 8, !dbg !7068
  %15 = zext i16 %14 to i32, !dbg !7068
  %16 = and i32 %15, 2048, !dbg !7068
  %17 = icmp ne i32 %16, 0, !dbg !7068
  br i1 %17, label %bb3, label %bb8, !dbg !7068

bb3:                                              ; preds = %bb2
  %18 = load i32* %corr, align 4, !dbg !7069
  %19 = icmp sgt i32 %18, 1, !dbg !7069
  br i1 %19, label %bb5, label %bb4, !dbg !7069

bb4:                                              ; preds = %bb3
  %20 = load %4** %stream_addr, align 8, !dbg !7069
  %21 = getelementptr inbounds %4* %20, i32 0, i32 10, !dbg !7069
  %22 = getelementptr inbounds [2 x i32]* %21, i64 0, i64 1, !dbg !7069
  %23 = load i32* %22, align 4, !dbg !7069
  %24 = icmp ne i32 %23, 0, !dbg !7069
  br i1 %24, label %bb5, label %bb6, !dbg !7069

bb5:                                              ; preds = %bb4, %bb3
  store i32 -1, i32* %0, align 4, !dbg !7070
  br label %bb16, !dbg !7070

bb6:                                              ; preds = %bb4
  %25 = load %4** %stream_addr, align 8, !dbg !7071
  %26 = getelementptr inbounds %4* %25, i32 0, i32 1, !dbg !7071
  %27 = getelementptr inbounds [2 x i8]* %26, i64 0, i64 1, !dbg !7071
  %28 = load i8* %27, align 1, !dbg !7071
  %29 = zext i8 %28 to i32, !dbg !7071
  %30 = add nsw i32 %29, 1, !dbg !7071
  %31 = load i32* %corr, align 4, !dbg !7071
  %32 = sub nsw i32 %31, %30, !dbg !7071
  store i32 %32, i32* %corr, align 4, !dbg !7071
  %33 = load %4** %stream_addr, align 8, !dbg !7072
  %34 = getelementptr inbounds %4* %33, i32 0, i32 11, !dbg !7072
  %35 = getelementptr inbounds %struct.__mbstate_t* %34, i32 0, i32 0, !dbg !7072
  %36 = load i32* %35, align 8, !dbg !7072
  %37 = icmp sgt i32 %36, 0, !dbg !7072
  br i1 %37, label %bb7, label %bb8, !dbg !7072

bb7:                                              ; preds = %bb6
  %38 = load %4** %stream_addr, align 8, !dbg !7073
  %39 = getelementptr inbounds %4* %38, i32 0, i32 1, !dbg !7073
  %40 = getelementptr inbounds [2 x i8]* %39, i64 0, i64 0, !dbg !7073
  %41 = load i8* %40, align 1, !dbg !7073
  %42 = zext i8 %41 to i32, !dbg !7073
  %43 = load i32* %corr, align 4, !dbg !7073
  %44 = sub nsw i32 %43, %42, !dbg !7073
  store i32 %44, i32* %corr, align 4, !dbg !7073
  br label %bb8, !dbg !7073

bb8:                                              ; preds = %bb7, %bb6, %bb2, %bb1
  %45 = load %4** %stream_addr, align 8, !dbg !7074
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !7074
  %47 = load i16* %46, align 8, !dbg !7074
  %48 = zext i16 %47 to i32, !dbg !7074
  %49 = and i32 %48, 64, !dbg !7074
  %50 = icmp ne i32 %49, 0, !dbg !7074
  %51 = load %4** %stream_addr, align 8, !dbg !7074
  br i1 %50, label %bb9, label %bb10, !dbg !7074

bb9:                                              ; preds = %bb8
  %52 = getelementptr inbounds %4* %51, i32 0, i32 3, !dbg !7074
  %53 = load i8** %52, align 8, !dbg !7074
  store i8* %53, i8** %iftmp.0, align 8, !dbg !7074
  br label %bb11, !dbg !7074

bb10:                                             ; preds = %bb8
  %54 = getelementptr inbounds %4* %51, i32 0, i32 6, !dbg !7074
  %55 = load i8** %54, align 8, !dbg !7074
  store i8* %55, i8** %iftmp.0, align 8, !dbg !7074
  br label %bb11, !dbg !7074

bb11:                                             ; preds = %bb10, %bb9
  %56 = load i8** %iftmp.0, align 8, !dbg !7074
  %57 = ptrtoint i8* %56 to i64, !dbg !7074
  %58 = trunc i64 %57 to i32, !dbg !7074
  %59 = load %4** %stream_addr, align 8, !dbg !7074
  %60 = getelementptr inbounds %4* %59, i32 0, i32 5, !dbg !7074
  %61 = load i8** %60, align 8, !dbg !7074
  %62 = ptrtoint i8* %61 to i64, !dbg !7074
  %63 = trunc i64 %62 to i32, !dbg !7074
  %64 = sub i32 %58, %63, !dbg !7074
  %65 = load i32* %corr, align 4, !dbg !7074
  %66 = add i32 %64, %65, !dbg !7074
  store i32 %66, i32* %corr, align 4, !dbg !7074
  %67 = load i64** %pos_addr, align 8, !dbg !7075
  %68 = load i64* %67, align 8, !dbg !7075
  store i64 %68, i64* %oldpos, align 8, !dbg !7075
  %69 = load i64** %pos_addr, align 8, !dbg !7076
  %70 = load i64* %69, align 8, !dbg !7076
  %71 = load i32* %corr, align 4, !dbg !7076
  %72 = sext i32 %71 to i64, !dbg !7076
  %73 = sub nsw i64 %70, %72, !dbg !7076
  %74 = load i64** %pos_addr, align 8, !dbg !7076
  store i64 %73, i64* %74, align 8, !dbg !7076
  %75 = load i64** %pos_addr, align 8, !dbg !7076
  %76 = load i64* %75, align 8, !dbg !7076
  %77 = load i64* %oldpos, align 8, !dbg !7076
  %78 = icmp sgt i64 %76, %77, !dbg !7076
  br i1 %78, label %bb12, label %bb13, !dbg !7076

bb12:                                             ; preds = %bb11
  %79 = load i32* %corr, align 4, !dbg !7077
  %80 = sub nsw i32 0, %79, !dbg !7077
  store i32 %80, i32* %corr, align 4, !dbg !7077
  br label %bb13, !dbg !7077

bb13:                                             ; preds = %bb12, %bb11
  %81 = load i32* %corr, align 4, !dbg !7078
  %82 = icmp slt i32 %81, 0, !dbg !7078
  br i1 %82, label %bb14, label %bb15, !dbg !7078

bb14:                                             ; preds = %bb13
  store i32 75, i32* @errno, align 4, !dbg !7079
  br label %bb15, !dbg !7079

bb15:                                             ; preds = %bb14, %bb13
  %83 = load i32* %corr, align 4, !dbg !7080
  store i32 %83, i32* %0, align 4, !dbg !7080
  br label %bb16, !dbg !7080

bb16:                                             ; preds = %bb15, %bb5
  %84 = load i32* %0, align 4, !dbg !7070
  store i32 %84, i32* %retval, align 4, !dbg !7070
  %retval17 = load i32* %retval, !dbg !7070
  ret i32 %retval17, !dbg !7070
}

define hidden %struct.exit_function* @__new_exitfn() nounwind {
entry:
  %retval = alloca %struct.exit_function*
  %0 = alloca %struct.exit_function*
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @__exit_count, align 4, !dbg !7081
  %2 = add nsw i32 %1, 1, !dbg !7081
  %3 = load i32* @__exit_slots, align 4, !dbg !7081
  %4 = icmp sgt i32 %2, %3, !dbg !7081
  br i1 %4, label %bb, label %bb3, !dbg !7081

bb:                                               ; preds = %entry
  %5 = load i32* @__exit_slots, align 4, !dbg !7083
  %6 = add nsw i32 %5, 20, !dbg !7083
  %7 = sext i32 %6 to i64, !dbg !7083
  %8 = mul i64 %7, 32, !dbg !7083
  %9 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7083
  %10 = bitcast %struct.exit_function* %9 to i8*, !dbg !7083
  %11 = call noalias i8* @realloc(i8* %10, i64 %8) nounwind, !dbg !7083
  %12 = bitcast i8* %11 to %struct.exit_function*, !dbg !7083
  store %struct.exit_function* %12, %struct.exit_function** %efp, align 8, !dbg !7083
  %13 = load %struct.exit_function** %efp, align 8, !dbg !7084
  %14 = icmp eq %struct.exit_function* %13, null, !dbg !7084
  br i1 %14, label %bb1, label %bb2, !dbg !7084

bb1:                                              ; preds = %bb
  store i32 12, i32* @errno, align 4, !dbg !7085
  br label %DONE, !dbg !7085

bb2:                                              ; preds = %bb
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7086
  store %struct.exit_function* %15, %struct.exit_function** @__exit_function_table, align 8, !dbg !7086
  %16 = load i32* @__exit_slots, align 4, !dbg !7087
  %17 = add nsw i32 %16, 20, !dbg !7087
  store i32 %17, i32* @__exit_slots, align 4, !dbg !7087
  br label %bb3, !dbg !7087

bb3:                                              ; preds = %bb2, %entry
  store void (i32)* @__exit_handler, void (i32)** @__exit_cleanup, align 8, !dbg !7088
  %18 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7089
  %19 = load i32* @__exit_count, align 4, !dbg !7089
  %20 = sext i32 %19 to i64, !dbg !7089
  %21 = getelementptr inbounds %struct.exit_function* %18, i64 %20, !dbg !7089
  store %struct.exit_function* %21, %struct.exit_function** %efp, align 8, !dbg !7089
  %22 = add nsw i32 %19, 1, !dbg !7089
  store i32 %22, i32* @__exit_count, align 4, !dbg !7089
  %23 = load %struct.exit_function** %efp, align 8, !dbg !7090
  %24 = getelementptr inbounds %struct.exit_function* %23, i32 0, i32 0, !dbg !7090
  store i64 1, i64* %24, align 8, !dbg !7090
  br label %DONE, !dbg !7091

DONE:                                             ; preds = %bb3, %bb1
  %25 = load %struct.exit_function** %efp, align 8, !dbg !7092
  store %struct.exit_function* %25, %struct.exit_function** %0, align 8, !dbg !7092
  %26 = load %struct.exit_function** %0, align 8, !dbg !7092
  store %struct.exit_function* %26, %struct.exit_function** %retval, align 8, !dbg !7092
  %retval4 = load %struct.exit_function** %retval, !dbg !7092
  ret %struct.exit_function* %retval4, !dbg !7092
}

define hidden void @__exit_handler(i32 %status) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  br label %bb6, !dbg !7093

bb:                                               ; preds = %bb6
  %0 = load i32* @__exit_count, align 4, !dbg !7095
  %1 = sub nsw i32 %0, 1, !dbg !7095
  store i32 %1, i32* @__exit_count, align 4, !dbg !7095
  %2 = load i32* @__exit_count, align 4, !dbg !7095
  %3 = sext i32 %2 to i64, !dbg !7095
  %4 = getelementptr inbounds %struct.exit_function* %46, i64 %3, !dbg !7095
  store %struct.exit_function* %4, %struct.exit_function** %efp, align 8, !dbg !7095
  %5 = load %struct.exit_function** %efp, align 8, !dbg !7096
  %6 = getelementptr inbounds %struct.exit_function* %5, i32 0, i32 0, !dbg !7096
  %7 = load i64* %6, align 8, !dbg !7096
  switch i64 %7, label %bb6 [
    i64 2, label %bb1
    i64 3, label %bb4
  ], !dbg !7096

bb1:                                              ; preds = %bb
  %8 = load %struct.exit_function** %efp, align 8, !dbg !7097
  %9 = getelementptr inbounds %struct.exit_function* %8, i32 0, i32 1, !dbg !7097
  %10 = getelementptr inbounds %1* %9, i32 0, i32 0, !dbg !7097
  %11 = bitcast %2* %10 to %10*, !dbg !7097
  %12 = getelementptr inbounds %10* %11, i32 0, i32 0, !dbg !7097
  %13 = load void (i32, i8*)** %12, align 8, !dbg !7097
  %14 = icmp ne void (i32, i8*)* %13, null, !dbg !7097
  br i1 %14, label %bb2, label %bb6, !dbg !7097

bb2:                                              ; preds = %bb1
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7098
  %16 = getelementptr inbounds %struct.exit_function* %15, i32 0, i32 1, !dbg !7098
  %17 = getelementptr inbounds %1* %16, i32 0, i32 0, !dbg !7098
  %18 = bitcast %2* %17 to %10*, !dbg !7098
  %19 = getelementptr inbounds %10* %18, i32 0, i32 0, !dbg !7098
  %20 = load void (i32, i8*)** %19, align 8, !dbg !7098
  %21 = load %struct.exit_function** %efp, align 8, !dbg !7098
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 1, !dbg !7098
  %23 = getelementptr inbounds %1* %22, i32 0, i32 0, !dbg !7098
  %24 = bitcast %2* %23 to %10*, !dbg !7098
  %25 = getelementptr inbounds %10* %24, i32 0, i32 1, !dbg !7098
  %26 = load i8** %25, align 8, !dbg !7098
  %27 = load i32* %status_addr, align 4, !dbg !7098
  call void %20(i32 %27, i8* %26) nounwind, !dbg !7098
  br label %bb6, !dbg !7098

bb4:                                              ; preds = %bb
  %28 = load %struct.exit_function** %efp, align 8, !dbg !7099
  %29 = getelementptr inbounds %struct.exit_function* %28, i32 0, i32 1, !dbg !7099
  %30 = getelementptr inbounds %1* %29, i32 0, i32 0, !dbg !7099
  %31 = getelementptr inbounds %2* %30, i32 0, i32 0, !dbg !7099
  %32 = load void (i8*)** %31, align 8, !dbg !7099
  %33 = icmp ne void (i8*)* %32, null, !dbg !7099
  br i1 %33, label %bb5, label %bb6, !dbg !7099

bb5:                                              ; preds = %bb4
  %34 = load %struct.exit_function** %efp, align 8, !dbg !7100
  %35 = getelementptr inbounds %struct.exit_function* %34, i32 0, i32 1, !dbg !7100
  %36 = getelementptr inbounds %1* %35, i32 0, i32 0, !dbg !7100
  %37 = getelementptr inbounds %2* %36, i32 0, i32 0, !dbg !7100
  %38 = load void (i8*)** %37, align 8, !dbg !7100
  %39 = load %struct.exit_function** %efp, align 8, !dbg !7100
  %40 = getelementptr inbounds %struct.exit_function* %39, i32 0, i32 1, !dbg !7100
  %41 = getelementptr inbounds %1* %40, i32 0, i32 0, !dbg !7100
  %42 = getelementptr inbounds %2* %41, i32 0, i32 1, !dbg !7100
  %43 = load i8** %42, align 8, !dbg !7100
  call void %38(i8* %43) nounwind, !dbg !7100
  br label %bb6, !dbg !7100

bb6:                                              ; preds = %bb1, %bb2, %bb5, %bb4, %bb, %entry
  %44 = load i32* @__exit_count, align 4, !dbg !7093
  %45 = icmp ne i32 %44, 0, !dbg !7093
  %46 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7095
  br i1 %45, label %bb, label %bb7, !dbg !7093

bb7:                                              ; preds = %bb6
  %47 = icmp ne %struct.exit_function* %46, null, !dbg !7101
  br i1 %47, label %bb8, label %return, !dbg !7101

bb8:                                              ; preds = %bb7
  %48 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7102
  %49 = bitcast %struct.exit_function* %48 to i8*, !dbg !7102
  call void @free(i8* %49) nounwind, !dbg !7102
  br label %return, !dbg !7102

return:                                           ; preds = %bb7, %bb8
  ret void, !dbg !7103
}

define hidden i32 @__stdio_seek(%4* %stream, i64* %pos, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64** %pos_addr, align 8, !dbg !7104
  %2 = load i64* %1, align 8, !dbg !7104
  %3 = load %4** %stream_addr, align 8, !dbg !7104
  %4 = getelementptr inbounds %4* %3, i32 0, i32 2, !dbg !7104
  %5 = load i32* %4, align 4, !dbg !7104
  %6 = load i32* %whence_addr, align 4, !dbg !7104
  %7 = call i64 @lseek64(i32 %5, i64 %2, i32 %6) nounwind, !dbg !7104
  store i64 %7, i64* %res, align 8, !dbg !7104
  %8 = load i64* %res, align 8, !dbg !7106
  %9 = icmp sge i64 %8, 0, !dbg !7106
  br i1 %9, label %bb, label %bb1, !dbg !7106

bb:                                               ; preds = %entry
  %10 = load i64** %pos_addr, align 8, !dbg !7106
  %11 = load i64* %res, align 8, !dbg !7106
  store i64 %11, i64* %10, align 8, !dbg !7106
  store i32 0, i32* %iftmp.0, align 4, !dbg !7106
  br label %bb2, !dbg !7106

bb1:                                              ; preds = %entry
  %12 = load i64* %res, align 8, !dbg !7106
  %13 = trunc i64 %12 to i32, !dbg !7106
  store i32 %13, i32* %iftmp.0, align 4, !dbg !7106
  br label %bb2, !dbg !7106

bb2:                                              ; preds = %bb1, %bb
  %14 = load i32* %iftmp.0, align 4, !dbg !7106
  store i32 %14, i32* %0, align 4, !dbg !7106
  %15 = load i32* %0, align 4, !dbg !7106
  store i32 %15, i32* %retval, align 4, !dbg !7106
  %retval3 = load i32* %retval, !dbg !7106
  ret i32 %retval3, !dbg !7106
}

define hidden i64 @_fpmaxtostr(%4* %fp, x86_fp80 %x, %struct.printf_info* %info, i64 (%4*, i64, i64, i64)* %fp_outfunc) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %x_addr = alloca x86_fp80, align 16
  %info_addr = alloca %struct.printf_info*, align 8
  %fp_outfunc_addr = alloca i64 (%4*, i64, i64, i64)*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %e.6 = alloca i8*
  %round = alloca i32
  %o_exp = alloca i32
  %exp = alloca i32
  %width = alloca i32
  %preci = alloca i32
  %cnt = alloca i32
  %s = alloca i8*
  %e = alloca i8*
  %pc_fwi = alloca [24 x i64]
  %ppc = alloca i64*
  %ppc_last = alloca i64*
  %exp_buf = alloca [16 x i8]
  %buf = alloca [30 x i8]
  %sign_str = alloca [6 x i8]
  %o_mode = alloca i8
  %mode = alloca i8
  %i = alloca i32
  %j = alloca i32
  %exp_neg = alloca i32
  %i31 = alloca i32
  %j32 = alloca i32
  %digit_block = alloca i64
  %i48 = alloca i32
  %i67 = alloca i32
  %p = alloca i8*
  %j90 = alloca i32
  %exp_char = alloca i8
  %exp_sign = alloca i8
  %i97 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store x86_fp80 %x, x86_fp80* %x_addr
  store %struct.printf_info* %info, %struct.printf_info** %info_addr
  store i64 (%4*, i64, i64, i64)* %fp_outfunc, i64 (%4*, i64, i64, i64)** %fp_outfunc_addr
  %1 = load %struct.printf_info** %info_addr, align 8, !dbg !7107
  %2 = getelementptr inbounds %struct.printf_info* %1, i32 0, i32 1, !dbg !7107
  %3 = load i32* %2, align 4, !dbg !7107
  store i32 %3, i32* %width, align 4, !dbg !7107
  %4 = load %struct.printf_info** %info_addr, align 8, !dbg !7109
  %5 = getelementptr inbounds %struct.printf_info* %4, i32 0, i32 0, !dbg !7109
  %6 = load i32* %5, align 4, !dbg !7109
  store i32 %6, i32* %preci, align 4, !dbg !7109
  %7 = load %struct.printf_info** %info_addr, align 8, !dbg !7110
  %8 = getelementptr inbounds %struct.printf_info* %7, i32 0, i32 2, !dbg !7110
  %9 = load i32* %8, align 4, !dbg !7110
  %10 = trunc i32 %9 to i8, !dbg !7110
  store i8 %10, i8* %mode, align 1, !dbg !7110
  %11 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7111
  store i8 101, i8* %11, align 1, !dbg !7111
  %12 = load i8* %mode, align 1, !dbg !7112
  %13 = or i8 %12, 32, !dbg !7112
  %14 = icmp eq i8 %13, 97, !dbg !7112
  br i1 %14, label %bb, label %bb1, !dbg !7112

bb:                                               ; preds = %entry
  %15 = load i8* %mode, align 1, !dbg !7113
  %16 = add i8 %15, 6, !dbg !7113
  store i8 %16, i8* %mode, align 1, !dbg !7113
  br label %bb1, !dbg !7113

bb1:                                              ; preds = %bb, %entry
  %17 = load i32* %preci, align 4, !dbg !7114
  %18 = icmp slt i32 %17, 0, !dbg !7114
  br i1 %18, label %bb2, label %bb3, !dbg !7114

bb2:                                              ; preds = %bb1
  store i32 6, i32* %preci, align 4, !dbg !7115
  br label %bb3, !dbg !7115

bb3:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7116
  store i8 0, i8* %19, align 1, !dbg !7116
  %20 = load %struct.printf_info** %info_addr, align 8, !dbg !7117
  %21 = getelementptr inbounds %struct.printf_info* %20, i32 0, i32 3, !dbg !7117
  %22 = load i32* %21, align 4, !dbg !7117
  %int_cast_to_i644 = zext i32 30 to i64
  %23 = icmp ult i64 %int_cast_to_i644, 32
  br i1 %23, label %klee_overshift_check.exit, label %bb.i21

bb.i21:                                           ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb3
  %24 = shl i32 %22, 30, !dbg !7117
  %int_cast_to_i645 = zext i32 31 to i64
  %25 = icmp ult i64 %int_cast_to_i645, 32
  br i1 %25, label %klee_overshift_check.exit23, label %bb.i22

bb.i22:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit23:                      ; preds = %klee_overshift_check.exit
  %26 = lshr i32 %24, 31, !dbg !7117
  %27 = trunc i32 %26 to i1, !dbg !7117
  %28 = icmp ne i1 %27, false, !dbg !7117
  br i1 %28, label %bb4, label %bb5, !dbg !7117

bb4:                                              ; preds = %klee_overshift_check.exit23
  %29 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7118
  store i8 43, i8* %29, align 1, !dbg !7118
  br label %bb7, !dbg !7118

bb5:                                              ; preds = %klee_overshift_check.exit23
  %30 = load %struct.printf_info** %info_addr, align 8, !dbg !7119
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 3, !dbg !7119
  %32 = load i32* %31, align 4, !dbg !7119
  %int_cast_to_i646 = zext i32 31 to i64
  %33 = icmp ult i64 %int_cast_to_i646, 32
  br i1 %33, label %klee_overshift_check.exit25, label %bb.i24

bb.i24:                                           ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit25:                      ; preds = %bb5
  %34 = shl i32 %32, 31, !dbg !7119
  %int_cast_to_i647 = zext i32 31 to i64
  %35 = icmp ult i64 %int_cast_to_i647, 32
  br i1 %35, label %klee_overshift_check.exit27, label %bb.i26

bb.i26:                                           ; preds = %klee_overshift_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit27:                      ; preds = %klee_overshift_check.exit25
  %36 = lshr i32 %34, 31, !dbg !7119
  %37 = trunc i32 %36 to i1, !dbg !7119
  %38 = icmp ne i1 %37, false, !dbg !7119
  br i1 %38, label %bb6, label %bb7, !dbg !7119

bb6:                                              ; preds = %klee_overshift_check.exit27
  %39 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7120
  store i8 32, i8* %39, align 1, !dbg !7120
  br label %bb7, !dbg !7120

bb7:                                              ; preds = %bb6, %klee_overshift_check.exit27, %bb4
  %sign_str8 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7121
  %40 = getelementptr inbounds i8* %sign_str8, i64 1, !dbg !7121
  store i8 0, i8* %40, align 1, !dbg !7121
  %41 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7122
  store i64 0, i64* %41, align 8, !dbg !7122
  %42 = load x86_fp80* %x_addr, align 16, !dbg !7123
  %43 = load x86_fp80* %x_addr, align 16, !dbg !7123
  %44 = fcmp une x86_fp80 %42, %43, !dbg !7123
  br i1 %44, label %bb9, label %bb10, !dbg !7123

bb9:                                              ; preds = %bb7
  %45 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7124
  store i64 8, i64* %45, align 8, !dbg !7124
  br label %INF_NAN, !dbg !7124

bb10:                                             ; preds = %bb7
  %46 = load x86_fp80* %x_addr, align 16, !dbg !7125
  %47 = fcmp oeq x86_fp80 %46, 0xK00000000000000000000, !dbg !7125
  %48 = load x86_fp80* %x_addr, align 16, !dbg !7126
  br i1 %47, label %bb11, label %bb14, !dbg !7125

bb11:                                             ; preds = %bb10
  %49 = fdiv x86_fp80 0xK3FFF8000000000000000, %48, !dbg !7126
  %50 = fcmp olt x86_fp80 %49, 0xK00000000000000000000, !dbg !7126
  br i1 %50, label %bb12, label %bb13, !dbg !7126

bb12:                                             ; preds = %bb11
  %51 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7127
  store i8 45, i8* %51, align 1, !dbg !7127
  br label %bb13, !dbg !7127

bb13:                                             ; preds = %bb12, %bb11
  store i32 -1, i32* %exp, align 4, !dbg !7128
  br label %GENERATE_DIGITS, !dbg !7128

bb14:                                             ; preds = %bb10
  %52 = fcmp olt x86_fp80 %48, 0xK00000000000000000000, !dbg !7129
  br i1 %52, label %bb15, label %bb16, !dbg !7129

bb15:                                             ; preds = %bb14
  %53 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7130
  store i8 45, i8* %53, align 1, !dbg !7130
  %54 = load x86_fp80* %x_addr, align 16, !dbg !7131
  %55 = fsub x86_fp80 0xK80000000000000000000, %54, !dbg !7131
  store x86_fp80 %55, x86_fp80* %x_addr, align 16, !dbg !7131
  br label %bb16, !dbg !7131

bb16:                                             ; preds = %bb15, %bb14
  %56 = load x86_fp80* %x_addr, align 16, !dbg !7132
  %57 = fdiv x86_fp80 %56, 0xK40018000000000000000, !dbg !7132
  %58 = load x86_fp80* %x_addr, align 16, !dbg !7132
  %59 = fcmp oeq x86_fp80 %57, %58, !dbg !7132
  br i1 %59, label %INF_NAN, label %bb20, !dbg !7132

INF_NAN:                                          ; preds = %bb16, %bb9
  %60 = load %struct.printf_info** %info_addr, align 8, !dbg !7133
  %61 = getelementptr inbounds %struct.printf_info* %60, i32 0, i32 4, !dbg !7133
  store i32 32, i32* %61, align 4, !dbg !7133
  %pc_fwi17 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7134
  %62 = getelementptr inbounds i64* %pc_fwi17, i64 6, !dbg !7134
  store i64* %62, i64** %ppc, align 8, !dbg !7134
  %63 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7135
  store i64 112, i64* %63, align 8, !dbg !7135
  %64 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7136
  store i64 3, i64* %64, align 8, !dbg !7136
  %65 = load i8* %mode, align 1, !dbg !7137
  %66 = icmp sle i8 %65, 96, !dbg !7137
  br i1 %66, label %bb18, label %bb19, !dbg !7137

bb18:                                             ; preds = %INF_NAN
  %67 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7138
  %68 = load i64* %67, align 8, !dbg !7138
  %69 = add nsw i64 %68, 4, !dbg !7138
  %70 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7138
  store i64 %69, i64* %70, align 8, !dbg !7138
  br label %bb19, !dbg !7138

bb19:                                             ; preds = %bb18, %INF_NAN
  %71 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7139
  %72 = load i64* %71, align 8, !dbg !7139
  %73 = getelementptr inbounds i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 0), i64 %72, !dbg !7139
  %74 = ptrtoint i8* %73 to i64, !dbg !7139
  %75 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7139
  store i64 %74, i64* %75, align 8, !dbg !7139
  br label %EXIT_SPECIAL, !dbg !7139

bb20:                                             ; preds = %bb16
  store i32 8, i32* %exp, align 4, !dbg !7140
  store i32 13, i32* %i, align 4, !dbg !7142
  store i32 4096, i32* %j, align 4, !dbg !7143
  store i32 0, i32* %exp_neg, align 4, !dbg !7144
  %76 = load x86_fp80* %x_addr, align 16, !dbg !7146
  %77 = fcmp olt x86_fp80 %76, 0xK4019BEBC200000000000, !dbg !7146
  br i1 %77, label %bb21, label %bb22, !dbg !7146

bb21:                                             ; preds = %bb20
  store i32 1, i32* %exp_neg, align 4, !dbg !7147
  br label %bb22, !dbg !7147

bb22:                                             ; preds = %klee_overshift_check.exit29, %bb21, %bb20
  %78 = load i32* %i, align 4, !dbg !7148
  %79 = sub nsw i32 %78, 1, !dbg !7148
  store i32 %79, i32* %i, align 4, !dbg !7148
  %80 = load i32* %exp_neg, align 4, !dbg !7149
  %81 = icmp ne i32 %80, 0, !dbg !7149
  %82 = load i32* %i, align 4, !dbg !7150
  %83 = sext i32 %82 to i64, !dbg !7150
  %84 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %83, !dbg !7150
  %85 = load x86_fp80* %84, align 16, !dbg !7150
  %86 = load x86_fp80* %x_addr, align 16, !dbg !7150
  br i1 %81, label %bb23, label %bb26, !dbg !7149

bb23:                                             ; preds = %bb22
  %87 = fmul x86_fp80 %85, %86, !dbg !7150
  %88 = fcmp olt x86_fp80 %87, 0xK401CEE6B280000000000, !dbg !7150
  br i1 %88, label %bb24, label %bb28, !dbg !7150

bb24:                                             ; preds = %bb23
  %89 = load i32* %i, align 4, !dbg !7151
  %90 = sext i32 %89 to i64, !dbg !7151
  %91 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %90, !dbg !7151
  %92 = load x86_fp80* %91, align 16, !dbg !7151
  %93 = load x86_fp80* %x_addr, align 16, !dbg !7151
  %94 = fmul x86_fp80 %92, %93, !dbg !7151
  store x86_fp80 %94, x86_fp80* %x_addr, align 16, !dbg !7151
  %95 = load i32* %exp, align 4, !dbg !7152
  %96 = load i32* %j, align 4, !dbg !7152
  %97 = sub nsw i32 %95, %96, !dbg !7152
  store i32 %97, i32* %exp, align 4, !dbg !7152
  br label %bb28, !dbg !7152

bb26:                                             ; preds = %bb22
  %98 = fdiv x86_fp80 %86, %85, !dbg !7153
  %99 = fcmp oge x86_fp80 %98, 0xK4019BEBC200000000000, !dbg !7153
  br i1 %99, label %bb27, label %bb28, !dbg !7153

bb27:                                             ; preds = %bb26
  %100 = load i32* %i, align 4, !dbg !7154
  %101 = sext i32 %100 to i64, !dbg !7154
  %102 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %101, !dbg !7154
  %103 = load x86_fp80* %102, align 16, !dbg !7154
  %104 = load x86_fp80* %x_addr, align 16, !dbg !7154
  %105 = fdiv x86_fp80 %104, %103, !dbg !7154
  store x86_fp80 %105, x86_fp80* %x_addr, align 16, !dbg !7154
  %106 = load i32* %exp, align 4, !dbg !7155
  %107 = load i32* %j, align 4, !dbg !7155
  %108 = add nsw i32 %106, %107, !dbg !7155
  store i32 %108, i32* %exp, align 4, !dbg !7155
  br label %bb28, !dbg !7155

bb28:                                             ; preds = %bb23, %bb24, %bb27, %bb26
  %109 = load i32* %j, align 4, !dbg !7156
  %int_cast_to_i648 = zext i32 1 to i64
  %110 = icmp ult i64 %int_cast_to_i648, 32
  br i1 %110, label %klee_overshift_check.exit29, label %bb.i28

bb.i28:                                           ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit29:                      ; preds = %bb28
  %111 = ashr i32 %109, 1, !dbg !7156
  store i32 %111, i32* %j, align 4, !dbg !7156
  %112 = load i32* %i, align 4, !dbg !7157
  %113 = icmp ne i32 %112, 0, !dbg !7157
  br i1 %113, label %bb22, label %bb29, !dbg !7157

bb29:                                             ; preds = %klee_overshift_check.exit29
  %114 = load x86_fp80* %x_addr, align 16, !dbg !7158
  %115 = fcmp oge x86_fp80 %114, 0xK401CEE6B280000000000, !dbg !7158
  br i1 %115, label %bb30, label %GENERATE_DIGITS, !dbg !7158

bb30:                                             ; preds = %bb29
  %116 = load x86_fp80* getelementptr inbounds ([13 x x86_fp80]* @exp10_table, i64 0, i64 0), align 16, !dbg !7159
  %117 = load x86_fp80* %x_addr, align 16, !dbg !7159
  %118 = fdiv x86_fp80 %117, %116, !dbg !7159
  store x86_fp80 %118, x86_fp80* %x_addr, align 16, !dbg !7159
  %119 = load i32* %exp, align 4, !dbg !7160
  %120 = add nsw i32 %119, 1, !dbg !7160
  store i32 %120, i32* %exp, align 4, !dbg !7160
  br label %GENERATE_DIGITS, !dbg !7161

GENERATE_DIGITS:                                  ; preds = %bb30, %bb29, %bb13
  %buf33 = bitcast [30 x i8]* %buf to i8*, !dbg !7162
  %121 = getelementptr inbounds i8* %buf33, i64 2, !dbg !7162
  store i8* %121, i8** %s, align 8, !dbg !7162
  store i32 0, i32* %i31, align 4, !dbg !7164
  br label %bb34, !dbg !7164

bb34:                                             ; preds = %bb36, %GENERATE_DIGITS
  %122 = load x86_fp80* %x_addr, align 16, !dbg !7165
  %123 = fptoui x86_fp80 %122 to i64, !dbg !7165
  store i64 %123, i64* %digit_block, align 8, !dbg !7165
  %124 = load i64* %digit_block, align 8, !dbg !7167
  %125 = uitofp i64 %124 to x86_fp80, !dbg !7167
  %126 = load x86_fp80* %x_addr, align 16, !dbg !7167
  %127 = fsub x86_fp80 %126, %125, !dbg !7167
  %128 = fmul x86_fp80 %127, 0xK401CEE6B280000000000, !dbg !7167
  store x86_fp80 %128, x86_fp80* %x_addr, align 16, !dbg !7167
  %129 = load i8** %s, align 8, !dbg !7168
  %130 = getelementptr inbounds i8* %129, i64 9, !dbg !7168
  store i8* %130, i8** %s, align 8, !dbg !7168
  store i32 0, i32* %j32, align 4, !dbg !7169
  br label %bb35, !dbg !7169

bb35:                                             ; preds = %klee_div_zero_check.exit16, %bb34
  %131 = load i32* %j32, align 4, !dbg !7170
  %132 = add nsw i32 %131, 1, !dbg !7170
  store i32 %132, i32* %j32, align 4, !dbg !7170
  %133 = load i32* %j32, align 4, !dbg !7170
  %134 = sub nsw i32 0, %133, !dbg !7170
  %135 = load i64* %digit_block, align 8, !dbg !7170
  %int_cast_to_i64 = bitcast i64 10 to i64
  %136 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %137 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %137, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb35
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb35
  call void @klee_disable_symbex() nounwind
  %138 = urem i64 %135, 10, !dbg !7170
  %139 = trunc i64 %138 to i8, !dbg !7170
  %140 = add i8 %139, 48, !dbg !7170
  %141 = load i8** %s, align 8, !dbg !7170
  %142 = sext i32 %134 to i64, !dbg !7170
  %143 = getelementptr inbounds i8* %141, i64 %142, !dbg !7170
  store i8 %140, i8* %143, align 1, !dbg !7170
  %144 = load i64* %digit_block, align 8, !dbg !7171
  %int_cast_to_i641 = bitcast i64 10 to i64
  %145 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %146 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %146, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %147 = udiv i64 %144, 10, !dbg !7171
  store i64 %147, i64* %digit_block, align 8, !dbg !7171
  %148 = load i32* %j32, align 4, !dbg !7172
  %149 = icmp sle i32 %148, 8, !dbg !7172
  br i1 %149, label %bb35, label %bb36, !dbg !7172

bb36:                                             ; preds = %klee_div_zero_check.exit16
  %150 = load i32* %i31, align 4, !dbg !7173
  %151 = add nsw i32 %150, 1, !dbg !7173
  store i32 %151, i32* %i31, align 4, !dbg !7173
  %152 = load i32* %i31, align 4, !dbg !7173
  %153 = icmp sle i32 %152, 2, !dbg !7173
  br i1 %153, label %bb34, label %bb37, !dbg !7173

bb37:                                             ; preds = %bb36
  %154 = load i8* %mode, align 1, !dbg !7174
  %155 = icmp sle i8 %154, 96, !dbg !7174
  br i1 %155, label %bb38, label %bb39, !dbg !7174

bb38:                                             ; preds = %bb37
  %156 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7175
  %157 = load i8* %156, align 1, !dbg !7175
  %158 = sub i8 %157, 32, !dbg !7175
  %159 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7175
  store i8 %158, i8* %159, align 1, !dbg !7175
  %160 = load i8* %mode, align 1, !dbg !7176
  %161 = add i8 %160, 32, !dbg !7176
  store i8 %161, i8* %mode, align 1, !dbg !7176
  br label %bb39, !dbg !7176

bb39:                                             ; preds = %bb38, %bb37
  %162 = load i8* %mode, align 1, !dbg !7177
  store i8 %162, i8* %o_mode, align 1, !dbg !7177
  %163 = load i8* %mode, align 1, !dbg !7178
  %164 = icmp eq i8 %163, 103, !dbg !7178
  br i1 %164, label %bb40, label %bb42, !dbg !7178

bb40:                                             ; preds = %bb39
  %165 = load i32* %preci, align 4, !dbg !7178
  %166 = icmp sgt i32 %165, 0, !dbg !7178
  br i1 %166, label %bb41, label %bb42, !dbg !7178

bb41:                                             ; preds = %bb40
  %167 = load i32* %preci, align 4, !dbg !7179
  %168 = sub nsw i32 %167, 1, !dbg !7179
  store i32 %168, i32* %preci, align 4, !dbg !7179
  br label %bb42, !dbg !7179

bb42:                                             ; preds = %bb41, %bb40, %bb39
  %169 = load i32* %preci, align 4, !dbg !7180
  store i32 %169, i32* %round, align 4, !dbg !7180
  %170 = load i8* %mode, align 1, !dbg !7181
  %171 = icmp eq i8 %170, 102, !dbg !7181
  br i1 %171, label %bb43, label %bb46, !dbg !7181

bb43:                                             ; preds = %bb42
  %172 = load i32* %round, align 4, !dbg !7182
  %173 = load i32* %exp, align 4, !dbg !7182
  %174 = add nsw i32 %172, %173, !dbg !7182
  store i32 %174, i32* %round, align 4, !dbg !7182
  %175 = load i32* %round, align 4, !dbg !7183
  %176 = icmp slt i32 %175, -1, !dbg !7183
  br i1 %176, label %bb44, label %bb46, !dbg !7183

bb44:                                             ; preds = %bb43
  %buf45 = bitcast [30 x i8]* %buf to i8*, !dbg !7184
  %177 = call i8* @memset(i8* %buf45, i32 48, i64 21) nounwind, !dbg !7184
  store i32 -1, i32* %exp, align 4, !dbg !7185
  store i32 -1, i32* %round, align 4, !dbg !7186
  br label %bb46, !dbg !7186

bb46:                                             ; preds = %bb44, %bb43, %bb42
  %buf47 = bitcast [30 x i8]* %buf to i8*, !dbg !7187
  store i8* %buf47, i8** %s, align 8, !dbg !7187
  %178 = load i8** %s, align 8, !dbg !7188
  store i8 0, i8* %178, align 1, !dbg !7188
  %179 = load i8** %s, align 8, !dbg !7188
  %180 = getelementptr inbounds i8* %179, i64 1, !dbg !7188
  store i8* %180, i8** %s, align 8, !dbg !7188
  %181 = load i8** %s, align 8, !dbg !7189
  store i8 48, i8* %181, align 1, !dbg !7189
  store i32 0, i32* %i48, align 4, !dbg !7190
  %182 = load i8** %s, align 8, !dbg !7192
  %183 = getelementptr inbounds i8* %182, i64 21, !dbg !7192
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7192
  store i8* %184, i8** %e, align 8, !dbg !7192
  %185 = load i32* %round, align 4, !dbg !7193
  %186 = icmp sle i32 %185, 20, !dbg !7193
  br i1 %186, label %bb49, label %bb51, !dbg !7193

bb49:                                             ; preds = %bb46
  %187 = load i8** %s, align 8, !dbg !7194
  %188 = load i32* %round, align 4, !dbg !7194
  %189 = sext i32 %188 to i64, !dbg !7194
  %190 = getelementptr inbounds i8* %187, i64 %189, !dbg !7194
  %191 = getelementptr inbounds i8* %190, i64 2, !dbg !7194
  store i8* %191, i8** %e, align 8, !dbg !7194
  %192 = load i8** %e, align 8, !dbg !7195
  %193 = load i8* %192, align 1, !dbg !7195
  %194 = icmp sgt i8 %193, 52, !dbg !7195
  br i1 %194, label %bb50, label %bb51, !dbg !7195

bb50:                                             ; preds = %bb49
  store i32 1, i32* %i48, align 4, !dbg !7196
  br label %bb51, !dbg !7196

bb51:                                             ; preds = %bb52, %bb51, %bb50, %bb49, %bb46
  %195 = load i8** %e, align 8, !dbg !7197
  %196 = getelementptr inbounds i8* %195, i64 -1, !dbg !7197
  store i8* %196, i8** %e, align 8, !dbg !7197
  %197 = load i8** %e, align 8, !dbg !7197
  store i8* %197, i8** %e.6, align 8, !dbg !7197
  %198 = load i8** %e.6, align 8, !dbg !7197
  %199 = load i8* %198, align 1, !dbg !7197
  %200 = load i32* %i48, align 4, !dbg !7197
  %201 = trunc i32 %200 to i8, !dbg !7197
  %202 = add i8 %199, %201, !dbg !7197
  %203 = load i8** %e.6, align 8, !dbg !7197
  store i8 %202, i8* %203, align 1, !dbg !7197
  %204 = load i8** %e, align 8, !dbg !7198
  %205 = load i8* %204, align 1, !dbg !7198
  %206 = icmp eq i8 %205, 48, !dbg !7198
  br i1 %206, label %bb51, label %bb52, !dbg !7198

bb52:                                             ; preds = %bb51
  %207 = load i8** %e, align 8, !dbg !7198
  %208 = load i8* %207, align 1, !dbg !7198
  %209 = icmp sgt i8 %208, 57, !dbg !7198
  br i1 %209, label %bb51, label %bb53, !dbg !7198

bb53:                                             ; preds = %bb52
  %210 = load i32* %exp, align 4, !dbg !7199
  store i32 %210, i32* %o_exp, align 4, !dbg !7199
  %211 = load i8** %e, align 8, !dbg !7200
  %212 = load i8** %s, align 8, !dbg !7200
  %213 = icmp ule i8* %211, %212, !dbg !7200
  br i1 %213, label %bb54, label %bb55, !dbg !7200

bb54:                                             ; preds = %bb53
  %214 = load i32* %o_exp, align 4, !dbg !7201
  %215 = add nsw i32 %214, 1, !dbg !7201
  store i32 %215, i32* %o_exp, align 4, !dbg !7201
  %216 = load i8** %s, align 8, !dbg !7202
  store i8* %216, i8** %e, align 8, !dbg !7202
  br label %bb56, !dbg !7202

bb55:                                             ; preds = %bb53
  %217 = load i8** %s, align 8, !dbg !7203
  %218 = getelementptr inbounds i8* %217, i64 1, !dbg !7203
  store i8* %218, i8** %s, align 8, !dbg !7203
  br label %bb56, !dbg !7203

bb56:                                             ; preds = %bb55, %bb54
  %219 = load i8** %e, align 8, !dbg !7204
  %220 = getelementptr inbounds i8* %219, i64 1, !dbg !7204
  store i8* %220, i8** %e, align 8, !dbg !7204
  %221 = load i8** %e, align 8, !dbg !7204
  store i8 0, i8* %221, align 1, !dbg !7204
  %222 = load i8* %mode, align 1, !dbg !7205
  %223 = icmp eq i8 %222, 103, !dbg !7205
  br i1 %223, label %bb57, label %bb60, !dbg !7205

bb57:                                             ; preds = %bb56
  %224 = load i32* %o_exp, align 4, !dbg !7205
  %225 = icmp sge i32 %224, -4, !dbg !7205
  br i1 %225, label %bb58, label %bb60, !dbg !7205

bb58:                                             ; preds = %bb57
  %226 = load i32* %o_exp, align 4, !dbg !7205
  %227 = load i32* %round, align 4, !dbg !7205
  %228 = icmp sle i32 %226, %227, !dbg !7205
  br i1 %228, label %bb59, label %bb60, !dbg !7205

bb59:                                             ; preds = %bb58
  store i8 102, i8* %mode, align 1, !dbg !7206
  %229 = load i32* %round, align 4, !dbg !7207
  %230 = load i32* %o_exp, align 4, !dbg !7207
  %231 = sub nsw i32 %229, %230, !dbg !7207
  store i32 %231, i32* %preci, align 4, !dbg !7207
  br label %bb60, !dbg !7207

bb60:                                             ; preds = %bb59, %bb58, %bb57, %bb56
  %232 = load i32* %o_exp, align 4, !dbg !7208
  store i32 %232, i32* %exp, align 4, !dbg !7208
  %233 = load i8* %mode, align 1, !dbg !7209
  %234 = icmp ne i8 %233, 102, !dbg !7209
  br i1 %234, label %bb61, label %bb62, !dbg !7209

bb61:                                             ; preds = %bb60
  store i32 0, i32* %o_exp, align 4, !dbg !7210
  br label %bb62, !dbg !7210

bb62:                                             ; preds = %bb61, %bb60
  %235 = load i32* %o_exp, align 4, !dbg !7211
  %236 = icmp slt i32 %235, 0, !dbg !7211
  br i1 %236, label %bb63, label %bb64, !dbg !7211

bb63:                                             ; preds = %bb62
  %237 = load i8** %s, align 8, !dbg !7212
  %238 = getelementptr inbounds i8* %237, i64 -1, !dbg !7212
  store i8* %238, i8** %s, align 8, !dbg !7212
  %239 = load i8** %s, align 8, !dbg !7212
  store i8 48, i8* %239, align 1, !dbg !7212
  br label %bb64, !dbg !7212

bb64:                                             ; preds = %bb63, %bb62
  %240 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7213
  store i64 176, i64* %240, align 8, !dbg !7213
  %241 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7214
  store i64 1, i64* %241, align 8, !dbg !7214
  %sign_str65 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7215
  %242 = getelementptr inbounds i8* %sign_str65, i64 4, !dbg !7215
  %243 = ptrtoint i8* %242 to i64, !dbg !7215
  %244 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7215
  store i64 %243, i64* %244, align 8, !dbg !7215
  %245 = load i8** %s, align 8, !dbg !7216
  %246 = load i8* %245, align 1, !dbg !7216
  %247 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 4, !dbg !7216
  store i8 %246, i8* %247, align 1, !dbg !7216
  %248 = load i8** %s, align 8, !dbg !7216
  %249 = getelementptr inbounds i8* %248, i64 1, !dbg !7216
  store i8* %249, i8** %s, align 8, !dbg !7216
  %250 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 5, !dbg !7217
  store i8 0, i8* %250, align 1, !dbg !7217
  %pc_fwi66 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7218
  %251 = getelementptr inbounds i64* %pc_fwi66, i64 6, !dbg !7218
  store i64* %251, i64** %ppc, align 8, !dbg !7218
  %252 = load i8** %e, align 8, !dbg !7219
  %253 = ptrtoint i8* %252 to i64, !dbg !7219
  %254 = trunc i64 %253 to i32, !dbg !7219
  %255 = load i8** %s, align 8, !dbg !7219
  %256 = ptrtoint i8* %255 to i64, !dbg !7219
  %257 = trunc i64 %256 to i32, !dbg !7219
  %258 = sub i32 %254, %257, !dbg !7219
  store i32 %258, i32* %i67, align 4, !dbg !7219
  %259 = load i32* %o_exp, align 4, !dbg !7221
  %260 = icmp sge i32 %259, 0, !dbg !7221
  br i1 %260, label %bb68, label %bb75, !dbg !7221

bb68:                                             ; preds = %bb64
  %261 = load i64** %ppc, align 8, !dbg !7222
  %262 = getelementptr inbounds i64* %261, i64 0, !dbg !7222
  store i64 112, i64* %262, align 1, !dbg !7222
  %263 = load i8** %s, align 8, !dbg !7223
  %264 = ptrtoint i8* %263 to i64, !dbg !7223
  %265 = load i64** %ppc, align 8, !dbg !7223
  %266 = getelementptr inbounds i64* %265, i64 2, !dbg !7223
  store i64 %264, i64* %266, align 1, !dbg !7223
  %267 = load i32* %o_exp, align 4, !dbg !7224
  %268 = load i32* %i67, align 4, !dbg !7224
  %269 = icmp sge i32 %267, %268, !dbg !7224
  br i1 %269, label %bb69, label %bb72, !dbg !7224

bb69:                                             ; preds = %bb68
  %270 = load i32* %i67, align 4, !dbg !7225
  %271 = sext i32 %270 to i64, !dbg !7225
  %272 = load i64** %ppc, align 8, !dbg !7225
  %273 = getelementptr inbounds i64* %272, i64 1, !dbg !7225
  store i64 %271, i64* %273, align 1, !dbg !7225
  %274 = load i64** %ppc, align 8, !dbg !7226
  %275 = getelementptr inbounds i64* %274, i64 3, !dbg !7226
  store i64* %275, i64** %ppc, align 8, !dbg !7226
  %276 = load i32* %o_exp, align 4, !dbg !7227
  %277 = load i32* %i67, align 4, !dbg !7227
  %278 = sub nsw i32 %276, %277, !dbg !7227
  store i32 %278, i32* %o_exp, align 4, !dbg !7227
  store i32 0, i32* %i67, align 4, !dbg !7228
  %279 = load i32* %o_exp, align 4, !dbg !7229
  %280 = icmp sgt i32 %279, 0, !dbg !7229
  br i1 %280, label %bb70, label %bb74, !dbg !7229

bb70:                                             ; preds = %bb69
  %281 = load i64** %ppc, align 8, !dbg !7230
  %282 = getelementptr inbounds i64* %281, i64 0, !dbg !7230
  store i64 176, i64* %282, align 1, !dbg !7230
  %283 = load i32* %o_exp, align 4, !dbg !7231
  %284 = sext i32 %283 to i64, !dbg !7231
  %285 = load i64** %ppc, align 8, !dbg !7231
  %286 = getelementptr inbounds i64* %285, i64 1, !dbg !7231
  store i64 %284, i64* %286, align 1, !dbg !7231
  %287 = load i64** %ppc, align 8, !dbg !7232
  %288 = getelementptr inbounds i64* %287, i64 2, !dbg !7232
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %288, align 1, !dbg !7232
  %289 = load i64** %ppc, align 8, !dbg !7233
  %290 = getelementptr inbounds i64* %289, i64 3, !dbg !7233
  store i64* %290, i64** %ppc, align 8, !dbg !7233
  br label %bb74, !dbg !7233

bb72:                                             ; preds = %bb68
  %291 = load i32* %o_exp, align 4, !dbg !7234
  %292 = icmp sgt i32 %291, 0, !dbg !7234
  br i1 %292, label %bb73, label %bb74, !dbg !7234

bb73:                                             ; preds = %bb72
  %293 = load i32* %o_exp, align 4, !dbg !7235
  %294 = sext i32 %293 to i64, !dbg !7235
  %295 = load i64** %ppc, align 8, !dbg !7235
  %296 = getelementptr inbounds i64* %295, i64 1, !dbg !7235
  store i64 %294, i64* %296, align 1, !dbg !7235
  %297 = load i64** %ppc, align 8, !dbg !7236
  %298 = getelementptr inbounds i64* %297, i64 3, !dbg !7236
  store i64* %298, i64** %ppc, align 8, !dbg !7236
  %299 = load i8** %s, align 8, !dbg !7237
  %300 = load i32* %o_exp, align 4, !dbg !7237
  %301 = sext i32 %300 to i64, !dbg !7237
  %302 = getelementptr inbounds i8* %299, i64 %301, !dbg !7237
  store i8* %302, i8** %s, align 8, !dbg !7237
  %303 = load i32* %i67, align 4, !dbg !7238
  %304 = load i32* %o_exp, align 4, !dbg !7238
  %305 = sub nsw i32 %303, %304, !dbg !7238
  store i32 %305, i32* %i67, align 4, !dbg !7238
  br label %bb74, !dbg !7238

bb74:                                             ; preds = %bb69, %bb70, %bb73, %bb72
  store i32 -1, i32* %o_exp, align 4, !dbg !7239
  br label %bb75, !dbg !7239

bb75:                                             ; preds = %bb74, %bb64
  %306 = load %struct.printf_info** %info_addr, align 8, !dbg !7240
  %307 = getelementptr inbounds %struct.printf_info* %306, i32 0, i32 3, !dbg !7240
  %308 = load i32* %307, align 4, !dbg !7240
  %int_cast_to_i649 = zext i32 27 to i64
  %309 = icmp ult i64 %int_cast_to_i649, 32
  br i1 %309, label %klee_overshift_check.exit31, label %bb.i30

bb.i30:                                           ; preds = %bb75
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit31:                      ; preds = %bb75
  %310 = shl i32 %308, 27, !dbg !7240
  %int_cast_to_i6410 = zext i32 31 to i64
  %311 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %311, label %klee_overshift_check.exit33, label %bb.i32

bb.i32:                                           ; preds = %klee_overshift_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit33:                      ; preds = %klee_overshift_check.exit31
  %312 = lshr i32 %310, 31, !dbg !7240
  %313 = trunc i32 %312 to i1, !dbg !7240
  %314 = icmp ne i1 %313, false, !dbg !7240
  br i1 %314, label %bb79, label %bb76, !dbg !7240

bb76:                                             ; preds = %klee_overshift_check.exit33
  %315 = load i32* %i67, align 4, !dbg !7240
  %316 = icmp ne i32 %315, 0, !dbg !7240
  br i1 %316, label %bb79, label %bb77, !dbg !7240

bb77:                                             ; preds = %bb76
  %317 = load i8* %o_mode, align 1, !dbg !7240
  %318 = icmp eq i8 %317, 103, !dbg !7240
  br i1 %318, label %bb80, label %bb78, !dbg !7240

bb78:                                             ; preds = %bb77
  %319 = load i32* %preci, align 4, !dbg !7240
  %320 = icmp sgt i32 %319, 0, !dbg !7240
  br i1 %320, label %bb79, label %bb80, !dbg !7240

bb79:                                             ; preds = %bb78, %bb76, %klee_overshift_check.exit33
  %321 = load i64** %ppc, align 8, !dbg !7241
  %322 = getelementptr inbounds i64* %321, i64 0, !dbg !7241
  store i64 112, i64* %322, align 1, !dbg !7241
  %323 = load i64** %ppc, align 8, !dbg !7242
  %324 = getelementptr inbounds i64* %323, i64 1, !dbg !7242
  store i64 1, i64* %324, align 1, !dbg !7242
  %325 = load i64** %ppc, align 8, !dbg !7243
  %326 = getelementptr inbounds i64* %325, i64 2, !dbg !7243
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 16) to i64), i64* %326, align 1, !dbg !7243
  %327 = load i64** %ppc, align 8, !dbg !7244
  %328 = getelementptr inbounds i64* %327, i64 3, !dbg !7244
  store i64* %328, i64** %ppc, align 8, !dbg !7244
  br label %bb80, !dbg !7244

bb80:                                             ; preds = %bb79, %bb78, %bb77
  %329 = load i32* %o_exp, align 4, !dbg !7245
  %330 = add nsw i32 %329, 1, !dbg !7245
  store i32 %330, i32* %o_exp, align 4, !dbg !7245
  %331 = load i32* %o_exp, align 4, !dbg !7245
  %332 = icmp slt i32 %331, 0, !dbg !7245
  br i1 %332, label %bb81, label %bb82, !dbg !7245

bb81:                                             ; preds = %bb80
  %333 = load i64** %ppc, align 8, !dbg !7246
  %334 = getelementptr inbounds i64* %333, i64 0, !dbg !7246
  store i64 176, i64* %334, align 1, !dbg !7246
  %335 = load i32* %o_exp, align 4, !dbg !7247
  %336 = sub nsw i32 0, %335, !dbg !7247
  %337 = sext i32 %336 to i64, !dbg !7247
  %338 = load i64** %ppc, align 8, !dbg !7247
  %339 = getelementptr inbounds i64* %338, i64 1, !dbg !7247
  store i64 %337, i64* %339, align 1, !dbg !7247
  %340 = load i64** %ppc, align 8, !dbg !7248
  %341 = getelementptr inbounds i64* %340, i64 2, !dbg !7248
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %341, align 1, !dbg !7248
  %342 = load i64** %ppc, align 8, !dbg !7249
  %343 = getelementptr inbounds i64* %342, i64 3, !dbg !7249
  store i64* %343, i64** %ppc, align 8, !dbg !7249
  br label %bb82, !dbg !7249

bb82:                                             ; preds = %bb81, %bb80
  %344 = load i32* %i67, align 4, !dbg !7250
  %345 = icmp ne i32 %344, 0, !dbg !7250
  br i1 %345, label %bb83, label %bb84, !dbg !7250

bb83:                                             ; preds = %bb82
  %346 = load i64** %ppc, align 8, !dbg !7251
  %347 = getelementptr inbounds i64* %346, i64 0, !dbg !7251
  store i64 112, i64* %347, align 1, !dbg !7251
  %348 = load i32* %i67, align 4, !dbg !7252
  %349 = sext i32 %348 to i64, !dbg !7252
  %350 = load i64** %ppc, align 8, !dbg !7252
  %351 = getelementptr inbounds i64* %350, i64 1, !dbg !7252
  store i64 %349, i64* %351, align 1, !dbg !7252
  %352 = load i8** %s, align 8, !dbg !7253
  %353 = ptrtoint i8* %352 to i64, !dbg !7253
  %354 = load i64** %ppc, align 8, !dbg !7253
  %355 = getelementptr inbounds i64* %354, i64 2, !dbg !7253
  store i64 %353, i64* %355, align 1, !dbg !7253
  %356 = load i64** %ppc, align 8, !dbg !7254
  %357 = getelementptr inbounds i64* %356, i64 3, !dbg !7254
  store i64* %357, i64** %ppc, align 8, !dbg !7254
  br label %bb84, !dbg !7254

bb84:                                             ; preds = %bb83, %bb82
  %358 = load i8* %o_mode, align 1, !dbg !7255
  %359 = icmp ne i8 %358, 103, !dbg !7255
  br i1 %359, label %bb86, label %bb85, !dbg !7255

bb85:                                             ; preds = %bb84
  %360 = load %struct.printf_info** %info_addr, align 8, !dbg !7255
  %361 = getelementptr inbounds %struct.printf_info* %360, i32 0, i32 3, !dbg !7255
  %362 = load i32* %361, align 4, !dbg !7255
  %int_cast_to_i6411 = zext i32 27 to i64
  %363 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %363, label %klee_overshift_check.exit35, label %bb.i34

bb.i34:                                           ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit35:                      ; preds = %bb85
  %364 = shl i32 %362, 27, !dbg !7255
  %int_cast_to_i6412 = zext i32 31 to i64
  %365 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %365, label %klee_overshift_check.exit37, label %bb.i36

bb.i36:                                           ; preds = %klee_overshift_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit37:                      ; preds = %klee_overshift_check.exit35
  %366 = lshr i32 %364, 31, !dbg !7255
  %367 = trunc i32 %366 to i1, !dbg !7255
  %368 = icmp ne i1 %367, false, !dbg !7255
  br i1 %368, label %bb86, label %bb88, !dbg !7255

bb86:                                             ; preds = %klee_overshift_check.exit37, %bb84
  %369 = load i32* %i67, align 4, !dbg !7256
  %370 = load i32* %o_exp, align 4, !dbg !7256
  %371 = sub nsw i32 %369, %370, !dbg !7256
  store i32 %371, i32* %i67, align 4, !dbg !7256
  %372 = load i32* %i67, align 4, !dbg !7257
  %373 = load i32* %preci, align 4, !dbg !7257
  %374 = icmp slt i32 %372, %373, !dbg !7257
  br i1 %374, label %bb87, label %bb88, !dbg !7257

bb87:                                             ; preds = %bb86
  %375 = load i32* %preci, align 4, !dbg !7258
  %376 = load i32* %i67, align 4, !dbg !7258
  %377 = sub nsw i32 %375, %376, !dbg !7258
  store i32 %377, i32* %i67, align 4, !dbg !7258
  %378 = load i64** %ppc, align 8, !dbg !7259
  %379 = getelementptr inbounds i64* %378, i64 0, !dbg !7259
  store i64 176, i64* %379, align 1, !dbg !7259
  %380 = load i32* %i67, align 4, !dbg !7260
  %381 = sext i32 %380 to i64, !dbg !7260
  %382 = load i64** %ppc, align 8, !dbg !7260
  %383 = getelementptr inbounds i64* %382, i64 1, !dbg !7260
  store i64 %381, i64* %383, align 1, !dbg !7260
  %384 = load i64** %ppc, align 8, !dbg !7261
  %385 = getelementptr inbounds i64* %384, i64 2, !dbg !7261
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %385, align 1, !dbg !7261
  %386 = load i64** %ppc, align 8, !dbg !7262
  %387 = getelementptr inbounds i64* %386, i64 3, !dbg !7262
  store i64* %387, i64** %ppc, align 8, !dbg !7262
  br label %bb88, !dbg !7262

bb88:                                             ; preds = %bb87, %bb86, %klee_overshift_check.exit37
  %388 = load i8* %mode, align 1, !dbg !7263
  %389 = icmp ne i8 %388, 102, !dbg !7263
  br i1 %389, label %bb89, label %EXIT_SPECIAL, !dbg !7263

bb89:                                             ; preds = %bb88
  %exp_buf91 = bitcast [16 x i8]* %exp_buf to i8*, !dbg !7264
  %390 = getelementptr inbounds i8* %exp_buf91, i64 16, !dbg !7264
  store i8* %390, i8** %p, align 8, !dbg !7264
  %391 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7266
  %392 = load i8* %391, align 1, !dbg !7266
  store i8 %392, i8* %exp_char, align 1, !dbg !7266
  store i8 43, i8* %exp_sign, align 1, !dbg !7267
  %393 = load i32* %exp, align 4, !dbg !7268
  %394 = icmp slt i32 %393, 0, !dbg !7268
  br i1 %394, label %bb92, label %bb93, !dbg !7268

bb92:                                             ; preds = %bb89
  store i8 45, i8* %exp_sign, align 1, !dbg !7269
  %395 = load i32* %exp, align 4, !dbg !7270
  %396 = sub nsw i32 0, %395, !dbg !7270
  store i32 %396, i32* %exp, align 4, !dbg !7270
  br label %bb93, !dbg !7270

bb93:                                             ; preds = %bb92, %bb89
  %397 = load i8** %p, align 8, !dbg !7271
  %398 = getelementptr inbounds i8* %397, i64 -1, !dbg !7271
  store i8* %398, i8** %p, align 8, !dbg !7271
  %399 = load i8** %p, align 8, !dbg !7271
  store i8 0, i8* %399, align 1, !dbg !7271
  store i32 2, i32* %j90, align 4, !dbg !7272
  br label %bb94, !dbg !7272

bb94:                                             ; preds = %bb95, %klee_div_zero_check.exit20, %bb93
  %400 = load i8** %p, align 8, !dbg !7273
  %401 = getelementptr inbounds i8* %400, i64 -1, !dbg !7273
  store i8* %401, i8** %p, align 8, !dbg !7273
  %402 = load i32* %exp, align 4, !dbg !7273
  %int_cast_to_i642 = zext i32 10 to i64
  %403 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %404 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %404, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %bb94
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %bb94
  call void @klee_disable_symbex() nounwind
  %405 = srem i32 %402, 10, !dbg !7273
  %406 = trunc i32 %405 to i8, !dbg !7273
  %407 = add i8 %406, 48, !dbg !7273
  %408 = load i8** %p, align 8, !dbg !7273
  store i8 %407, i8* %408, align 1, !dbg !7273
  %409 = load i32* %exp, align 4, !dbg !7274
  %int_cast_to_i643 = zext i32 10 to i64
  %410 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %411 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %411, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %412 = sdiv i32 %409, 10, !dbg !7274
  store i32 %412, i32* %exp, align 4, !dbg !7274
  %413 = load i32* %j90, align 4, !dbg !7275
  %414 = add nsw i32 %413, 1, !dbg !7275
  store i32 %414, i32* %j90, align 4, !dbg !7275
  %415 = load i32* %j90, align 4, !dbg !7275
  %416 = icmp sle i32 %415, 3, !dbg !7275
  br i1 %416, label %bb94, label %bb95, !dbg !7275

bb95:                                             ; preds = %klee_div_zero_check.exit20
  %417 = load i32* %exp, align 4, !dbg !7275
  %418 = icmp ne i32 %417, 0, !dbg !7275
  br i1 %418, label %bb94, label %bb96, !dbg !7275

bb96:                                             ; preds = %bb95
  %419 = load i8** %p, align 8, !dbg !7276
  %420 = getelementptr inbounds i8* %419, i64 -1, !dbg !7276
  store i8* %420, i8** %p, align 8, !dbg !7276
  %421 = load i8** %p, align 8, !dbg !7276
  %422 = load i8* %exp_sign, align 1, !dbg !7276
  store i8 %422, i8* %421, align 1, !dbg !7276
  %423 = load i8** %p, align 8, !dbg !7277
  %424 = getelementptr inbounds i8* %423, i64 -1, !dbg !7277
  store i8* %424, i8** %p, align 8, !dbg !7277
  %425 = load i8** %p, align 8, !dbg !7277
  %426 = load i8* %exp_char, align 1, !dbg !7277
  store i8 %426, i8* %425, align 1, !dbg !7277
  %427 = load i64** %ppc, align 8, !dbg !7278
  %428 = getelementptr inbounds i64* %427, i64 0, !dbg !7278
  store i64 112, i64* %428, align 1, !dbg !7278
  %429 = load i32* %j90, align 4, !dbg !7279
  %430 = sext i32 %429 to i64, !dbg !7279
  %431 = load i64** %ppc, align 8, !dbg !7279
  %432 = getelementptr inbounds i64* %431, i64 1, !dbg !7279
  store i64 %430, i64* %432, align 1, !dbg !7279
  %433 = load i8** %p, align 8, !dbg !7280
  %434 = ptrtoint i8* %433 to i64, !dbg !7280
  %435 = load i64** %ppc, align 8, !dbg !7280
  %436 = getelementptr inbounds i64* %435, i64 2, !dbg !7280
  store i64 %434, i64* %436, align 1, !dbg !7280
  %437 = load i64** %ppc, align 8, !dbg !7281
  %438 = getelementptr inbounds i64* %437, i64 3, !dbg !7281
  store i64* %438, i64** %ppc, align 8, !dbg !7281
  br label %EXIT_SPECIAL, !dbg !7282

EXIT_SPECIAL:                                     ; preds = %bb96, %bb88, %bb19
  %439 = load i64** %ppc, align 8, !dbg !7283
  store i64* %439, i64** %ppc_last, align 8, !dbg !7283
  %pc_fwi98 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7285
  %440 = getelementptr inbounds i64* %pc_fwi98, i64 4, !dbg !7285
  store i64* %440, i64** %ppc, align 8, !dbg !7285
  br label %bb99, !dbg !7285

bb99:                                             ; preds = %bb99, %EXIT_SPECIAL
  %441 = load i32* %width, align 4, !dbg !7286
  %442 = load i64** %ppc, align 8, !dbg !7286
  %443 = load i64* %442, align 8, !dbg !7286
  %444 = trunc i64 %443 to i32, !dbg !7286
  %445 = sub i32 %441, %444, !dbg !7286
  store i32 %445, i32* %width, align 4, !dbg !7286
  %446 = load i64** %ppc, align 8, !dbg !7287
  %447 = getelementptr inbounds i64* %446, i64 3, !dbg !7287
  store i64* %447, i64** %ppc, align 8, !dbg !7287
  %448 = load i64** %ppc, align 8, !dbg !7288
  %449 = load i64** %ppc_last, align 8, !dbg !7288
  %450 = icmp ult i64* %448, %449, !dbg !7288
  br i1 %450, label %bb99, label %bb100, !dbg !7288

bb100:                                            ; preds = %bb99
  %pc_fwi101 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7289
  store i64* %pc_fwi101, i64** %ppc, align 8, !dbg !7289
  %451 = load i64** %ppc, align 8, !dbg !7290
  %452 = getelementptr inbounds i64* %451, i64 0, !dbg !7290
  store i64 160, i64* %452, align 1, !dbg !7290
  %453 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7291
  %454 = load i8* %453, align 1, !dbg !7291
  %455 = icmp ne i8 %454, 0, !dbg !7291
  %456 = zext i1 %455 to i32, !dbg !7291
  store i32 %456, i32* %i97, align 4, !dbg !7291
  %457 = load i32* %i97, align 4, !dbg !7291
  %458 = sext i32 %457 to i64, !dbg !7291
  %459 = load i64** %ppc, align 8, !dbg !7291
  %460 = getelementptr inbounds i64* %459, i64 1, !dbg !7291
  store i64 %458, i64* %460, align 1, !dbg !7291
  %sign_str102 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7292
  %sign_str102103 = ptrtoint i8* %sign_str102 to i64, !dbg !7292
  %461 = load i64** %ppc, align 8, !dbg !7292
  %462 = getelementptr inbounds i64* %461, i64 2, !dbg !7292
  store i64 %sign_str102103, i64* %462, align 1, !dbg !7292
  %463 = load i32* %width, align 4, !dbg !7293
  %464 = load i32* %i97, align 4, !dbg !7293
  %465 = sub nsw i32 %463, %464, !dbg !7293
  store i32 %465, i32* %width, align 4, !dbg !7293
  %466 = load i32* %width, align 4, !dbg !7293
  %467 = icmp sgt i32 %466, 0, !dbg !7293
  br i1 %467, label %bb105, label %bb110, !dbg !7293

bb105:                                            ; preds = %bb100
  %468 = load %struct.printf_info** %info_addr, align 8, !dbg !7294
  %469 = getelementptr inbounds %struct.printf_info* %468, i32 0, i32 3, !dbg !7294
  %470 = load i32* %469, align 4, !dbg !7294
  %int_cast_to_i6413 = zext i32 28 to i64
  %471 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %471, label %klee_overshift_check.exit39, label %bb.i38

bb.i38:                                           ; preds = %bb105
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit39:                      ; preds = %bb105
  %472 = shl i32 %470, 28, !dbg !7294
  %int_cast_to_i6414 = zext i32 31 to i64
  %473 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %473, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_overshift_check.exit39
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_overshift_check.exit39
  %474 = lshr i32 %472, 31, !dbg !7294
  %475 = trunc i32 %474 to i1, !dbg !7294
  %476 = icmp ne i1 %475, false, !dbg !7294
  br i1 %476, label %bb106, label %bb107, !dbg !7294

bb106:                                            ; preds = %klee_overshift_check.exit41
  %477 = load i64** %ppc_last, align 8, !dbg !7295
  %478 = getelementptr inbounds i64* %477, i64 0, !dbg !7295
  store i64 160, i64* %478, align 1, !dbg !7295
  %479 = load i32* %width, align 4, !dbg !7296
  %480 = sext i32 %479 to i64, !dbg !7296
  %481 = load i64** %ppc_last, align 8, !dbg !7296
  %482 = getelementptr inbounds i64* %481, i64 1, !dbg !7296
  store i64 %480, i64* %482, align 1, !dbg !7296
  %483 = load i64** %ppc_last, align 8, !dbg !7297
  %484 = getelementptr inbounds i64* %483, i64 2, !dbg !7297
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %484, align 1, !dbg !7297
  %485 = load i64** %ppc_last, align 8, !dbg !7298
  %486 = getelementptr inbounds i64* %485, i64 3, !dbg !7298
  store i64* %486, i64** %ppc_last, align 8, !dbg !7298
  br label %bb110, !dbg !7298

bb107:                                            ; preds = %klee_overshift_check.exit41
  %487 = load %struct.printf_info** %info_addr, align 8, !dbg !7299
  %488 = getelementptr inbounds %struct.printf_info* %487, i32 0, i32 4, !dbg !7299
  %489 = load i32* %488, align 4, !dbg !7299
  %490 = icmp eq i32 %489, 48, !dbg !7299
  %491 = load i64** %ppc, align 8, !dbg !7300
  br i1 %490, label %bb108, label %bb109, !dbg !7299

bb108:                                            ; preds = %bb107
  %492 = getelementptr inbounds i64* %491, i64 4, !dbg !7300
  %493 = load i64* %492, align 1, !dbg !7300
  %494 = load i32* %width, align 4, !dbg !7300
  %495 = sext i32 %494 to i64, !dbg !7300
  %496 = add nsw i64 %493, %495, !dbg !7300
  %497 = load i64** %ppc, align 8, !dbg !7300
  %498 = getelementptr inbounds i64* %497, i64 4, !dbg !7300
  store i64 %496, i64* %498, align 1, !dbg !7300
  br label %bb110, !dbg !7300

bb109:                                            ; preds = %bb107
  %499 = getelementptr inbounds i64* %491, i64 1, !dbg !7301
  %500 = load i64* %499, align 1, !dbg !7301
  %501 = load i32* %width, align 4, !dbg !7301
  %502 = sext i32 %501 to i64, !dbg !7301
  %503 = add nsw i64 %500, %502, !dbg !7301
  %504 = load i64** %ppc, align 8, !dbg !7301
  %505 = getelementptr inbounds i64* %504, i64 1, !dbg !7301
  store i64 %503, i64* %505, align 1, !dbg !7301
  br label %bb110, !dbg !7301

bb110:                                            ; preds = %bb109, %bb108, %bb106, %bb100
  store i32 0, i32* %cnt, align 4, !dbg !7302
  br label %bb111, !dbg !7302

bb111:                                            ; preds = %bb113, %bb110
  %506 = load i64** %ppc, align 8, !dbg !7303
  %507 = getelementptr inbounds i64* %506, i64 2, !dbg !7303
  %508 = load i64* %507, align 1, !dbg !7303
  %509 = load i64** %ppc, align 8, !dbg !7303
  %510 = getelementptr inbounds i64* %509, i64 1, !dbg !7303
  %511 = load i64* %510, align 1, !dbg !7303
  %512 = load i64** %ppc, align 8, !dbg !7303
  %513 = load i64* %512, align 8, !dbg !7303
  %514 = load i64 (%4*, i64, i64, i64)** %fp_outfunc_addr, align 8, !dbg !7303
  %515 = load %4** %fp_addr, align 8, !dbg !7303
  %516 = call i64 %514(%4* %515, i64 %513, i64 %511, i64 %508) nounwind, !dbg !7303
  %517 = load i64** %ppc, align 8, !dbg !7303
  %518 = getelementptr inbounds i64* %517, i64 1, !dbg !7303
  %519 = load i64* %518, align 1, !dbg !7303
  %520 = icmp ne i64 %516, %519, !dbg !7303
  br i1 %520, label %bb112, label %bb113, !dbg !7303

bb112:                                            ; preds = %bb111
  store i64 -1, i64* %0, align 8, !dbg !7304
  br label %bb115, !dbg !7304

bb113:                                            ; preds = %bb111
  %521 = load i64** %ppc, align 8, !dbg !7305
  %522 = getelementptr inbounds i64* %521, i64 1, !dbg !7305
  %523 = load i64* %522, align 1, !dbg !7305
  %524 = trunc i64 %523 to i32, !dbg !7305
  %525 = load i32* %cnt, align 4, !dbg !7305
  %526 = add i32 %524, %525, !dbg !7305
  store i32 %526, i32* %cnt, align 4, !dbg !7305
  %527 = load i64** %ppc, align 8, !dbg !7306
  %528 = getelementptr inbounds i64* %527, i64 3, !dbg !7306
  store i64* %528, i64** %ppc, align 8, !dbg !7306
  %529 = load i64** %ppc, align 8, !dbg !7307
  %530 = load i64** %ppc_last, align 8, !dbg !7307
  %531 = icmp ult i64* %529, %530, !dbg !7307
  br i1 %531, label %bb111, label %bb114, !dbg !7307

bb114:                                            ; preds = %bb113
  %532 = load i32* %cnt, align 4, !dbg !7308
  %533 = sext i32 %532 to i64, !dbg !7308
  store i64 %533, i64* %0, align 8, !dbg !7308
  br label %bb115, !dbg !7308

bb115:                                            ; preds = %bb114, %bb112
  %534 = load i64* %0, align 8, !dbg !7304
  store i64 %534, i64* %retval, align 8, !dbg !7304
  %retval116 = load i64* %retval, !dbg !7304
  ret i64 %retval116, !dbg !7304
}

define hidden i64 @_load_inttype(i32 %desttype, i8* %src, i32 %uflag) nounwind {
entry:
  %desttype_addr = alloca i32, align 4
  %src_addr = alloca i8*, align 8
  %uflag_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %x = alloca i32
  %x14 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desttype, i32* %desttype_addr
  store i8* %src, i8** %src_addr
  store i32 %uflag, i32* %uflag_addr
  %1 = load i32* %uflag_addr, align 4, !dbg !7309
  %2 = icmp sge i32 %1, 0, !dbg !7309
  %3 = load i32* %desttype_addr, align 4, !dbg !7311
  %4 = and i32 %3, 3072, !dbg !7311
  %5 = icmp ne i32 %4, 0, !dbg !7311
  %6 = load i8** %src_addr, align 8, !dbg !7312
  br i1 %2, label %bb, label %bb9, !dbg !7309

bb:                                               ; preds = %entry
  br i1 %5, label %bb1, label %bb4, !dbg !7311

bb1:                                              ; preds = %bb
  %7 = bitcast i8* %6 to i64*, !dbg !7312
  %8 = load i64* %7, align 8, !dbg !7312
  store i64 %8, i64* %0, align 8, !dbg !7312
  br label %bb19, !dbg !7312

bb4:                                              ; preds = %bb
  %9 = bitcast i8* %6 to i32*, !dbg !7313
  %10 = load i32* %9, align 4, !dbg !7313
  store i32 %10, i32* %x, align 4, !dbg !7313
  %11 = load i32* %desttype_addr, align 4, !dbg !7315
  %12 = icmp eq i32 %11, 256, !dbg !7315
  br i1 %12, label %bb5, label %bb6, !dbg !7315

bb5:                                              ; preds = %bb4
  %13 = load i32* %x, align 4, !dbg !7315
  %14 = trunc i32 %13 to i8, !dbg !7315
  %15 = zext i8 %14 to i32, !dbg !7315
  store i32 %15, i32* %x, align 4, !dbg !7315
  br label %bb6, !dbg !7315

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i32* %desttype_addr, align 4, !dbg !7316
  %17 = icmp eq i32 %16, 512, !dbg !7316
  br i1 %17, label %bb7, label %bb8, !dbg !7316

bb7:                                              ; preds = %bb6
  %18 = load i32* %x, align 4, !dbg !7316
  %19 = trunc i32 %18 to i16, !dbg !7316
  %20 = zext i16 %19 to i32, !dbg !7316
  store i32 %20, i32* %x, align 4, !dbg !7316
  br label %bb8, !dbg !7316

bb8:                                              ; preds = %bb7, %bb6
  %21 = load i32* %x, align 4, !dbg !7317
  %22 = zext i32 %21 to i64, !dbg !7317
  store i64 %22, i64* %0, align 8, !dbg !7317
  br label %bb19, !dbg !7317

bb9:                                              ; preds = %entry
  br i1 %5, label %bb10, label %bb13, !dbg !7318

bb10:                                             ; preds = %bb9
  %23 = bitcast i8* %6 to i64*, !dbg !7319
  %24 = load i64* %23, align 8, !dbg !7319
  store i64 %24, i64* %0, align 8, !dbg !7319
  br label %bb19, !dbg !7319

bb13:                                             ; preds = %bb9
  %25 = bitcast i8* %6 to i32*, !dbg !7320
  %26 = load i32* %25, align 4, !dbg !7320
  store i32 %26, i32* %x14, align 4, !dbg !7320
  %27 = load i32* %desttype_addr, align 4, !dbg !7322
  %28 = icmp eq i32 %27, 256, !dbg !7322
  br i1 %28, label %bb15, label %bb16, !dbg !7322

bb15:                                             ; preds = %bb13
  %29 = load i32* %x14, align 4, !dbg !7322
  %30 = trunc i32 %29 to i8, !dbg !7322
  %31 = sext i8 %30 to i32, !dbg !7322
  store i32 %31, i32* %x14, align 4, !dbg !7322
  br label %bb16, !dbg !7322

bb16:                                             ; preds = %bb15, %bb13
  %32 = load i32* %desttype_addr, align 4, !dbg !7323
  %33 = icmp eq i32 %32, 512, !dbg !7323
  br i1 %33, label %bb17, label %bb18, !dbg !7323

bb17:                                             ; preds = %bb16
  %34 = load i32* %x14, align 4, !dbg !7323
  %35 = trunc i32 %34 to i16, !dbg !7323
  %36 = sext i16 %35 to i32, !dbg !7323
  store i32 %36, i32* %x14, align 4, !dbg !7323
  br label %bb18, !dbg !7323

bb18:                                             ; preds = %bb17, %bb16
  %37 = load i32* %x14, align 4, !dbg !7324
  %38 = sext i32 %37 to i64, !dbg !7324
  store i64 %38, i64* %0, align 8, !dbg !7324
  br label %bb19, !dbg !7324

bb19:                                             ; preds = %bb10, %bb1, %bb18, %bb8
  %39 = load i64* %0, align 8, !dbg !7312
  store i64 %39, i64* %retval, align 8, !dbg !7312
  %retval20 = load i64* %retval, !dbg !7312
  ret i64 %retval20, !dbg !7312
}

define hidden i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %fmt0) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %fmt0_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %p = alloca i32*
  %fmt = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i8* %fmt0, i8** %fmt0_addr
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7325
  %2 = bitcast %struct.ppfs_t* %1 to i8*, !dbg !7325
  %3 = call i8* @memset(i8* %2, i32 0, i64 256) nounwind, !dbg !7325
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7327
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 2, !dbg !7327
  %6 = load i32* %5, align 4, !dbg !7327
  %7 = sub nsw i32 %6, 1, !dbg !7327
  %8 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7327
  %9 = getelementptr inbounds %struct.ppfs_t* %8, i32 0, i32 2, !dbg !7327
  store i32 %7, i32* %9, align 4, !dbg !7327
  %10 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7328
  %11 = getelementptr inbounds %struct.ppfs_t* %10, i32 0, i32 0, !dbg !7328
  %12 = load i8** %fmt0_addr, align 8, !dbg !7328
  store i8* %12, i8** %11, align 16, !dbg !7328
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7329
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 6, !dbg !7329
  %15 = getelementptr inbounds [9 x i32]* %14, i64 0, i64 0, !dbg !7329
  store i32* %15, i32** %p, align 8, !dbg !7329
  store i32 9, i32* %r, align 4, !dbg !7331
  br label %bb, !dbg !7331

bb:                                               ; preds = %bb, %entry
  %16 = load i32** %p, align 8, !dbg !7332
  store i32 8, i32* %16, align 4, !dbg !7332
  %17 = load i32** %p, align 8, !dbg !7332
  %18 = getelementptr inbounds i32* %17, i64 1, !dbg !7332
  store i32* %18, i32** %p, align 8, !dbg !7332
  %19 = load i32* %r, align 4, !dbg !7333
  %20 = sub nsw i32 %19, 1, !dbg !7333
  store i32 %20, i32* %r, align 4, !dbg !7333
  %21 = load i32* %r, align 4, !dbg !7333
  %22 = icmp ne i32 %21, 0, !dbg !7333
  br i1 %22, label %bb, label %bb1, !dbg !7333

bb1:                                              ; preds = %bb
  %23 = load i8** %fmt0_addr, align 8, !dbg !7334
  store i8* %23, i8** %fmt, align 8, !dbg !7334
  br label %bb8, !dbg !7334

bb2:                                              ; preds = %bb8
  %24 = load i8** %fmt, align 8, !dbg !7336
  %25 = load i8* %24, align 1, !dbg !7336
  %26 = icmp ne i8 %25, 37, !dbg !7336
  br i1 %26, label %bb7, label %bb3, !dbg !7336

bb3:                                              ; preds = %bb2
  %27 = load i8** %fmt, align 8, !dbg !7336
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !7336
  store i8* %28, i8** %fmt, align 8, !dbg !7336
  %29 = load i8** %fmt, align 8, !dbg !7336
  %30 = load i8* %29, align 1, !dbg !7336
  %31 = icmp eq i8 %30, 37, !dbg !7336
  br i1 %31, label %bb7, label %bb4, !dbg !7336

bb4:                                              ; preds = %bb3
  %32 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7337
  %33 = getelementptr inbounds %struct.ppfs_t* %32, i32 0, i32 0, !dbg !7337
  %34 = load i8** %fmt, align 8, !dbg !7337
  store i8* %34, i8** %33, align 16, !dbg !7337
  %35 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7338
  %36 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %35) nounwind, !dbg !7338
  store i32 %36, i32* %r, align 4, !dbg !7338
  %37 = load i32* %r, align 4, !dbg !7338
  %38 = icmp slt i32 %37, 0, !dbg !7338
  br i1 %38, label %bb5, label %bb6, !dbg !7338

bb5:                                              ; preds = %bb4
  store i32 -1, i32* %0, align 4, !dbg !7339
  br label %bb10, !dbg !7339

bb6:                                              ; preds = %bb4
  %39 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7340
  %40 = getelementptr inbounds %struct.ppfs_t* %39, i32 0, i32 0, !dbg !7340
  %41 = load i8** %40, align 16, !dbg !7340
  store i8* %41, i8** %fmt, align 8, !dbg !7340
  br label %bb8, !dbg !7340

bb7:                                              ; preds = %bb3, %bb2
  %42 = load i8** %fmt, align 8, !dbg !7341
  %43 = getelementptr inbounds i8* %42, i64 1, !dbg !7341
  store i8* %43, i8** %fmt, align 8, !dbg !7341
  br label %bb8, !dbg !7341

bb8:                                              ; preds = %bb7, %bb6, %bb1
  %44 = load i8** %fmt, align 8, !dbg !7342
  %45 = load i8* %44, align 1, !dbg !7342
  %46 = icmp ne i8 %45, 0, !dbg !7342
  br i1 %46, label %bb2, label %bb9, !dbg !7342

bb9:                                              ; preds = %bb8
  %47 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7343
  %48 = getelementptr inbounds %struct.ppfs_t* %47, i32 0, i32 0, !dbg !7343
  %49 = load i8** %fmt0_addr, align 8, !dbg !7343
  store i8* %49, i8** %48, align 16, !dbg !7343
  store i32 0, i32* %0, align 4, !dbg !7344
  br label %bb10, !dbg !7344

bb10:                                             ; preds = %bb9, %bb5
  %50 = load i32* %0, align 4, !dbg !7339
  store i32 %50, i32* %retval, align 4, !dbg !7339
  %retval11 = load i32* %retval, !dbg !7339
  ret i32 %retval11, !dbg !7339
}

define internal i32 @_promoted_size(i32 %argtype) nounwind {
entry:
  %argtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i16*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argtype, i32* %argtype_addr
  store i16* getelementptr inbounds ([12 x i16]* @type_codes, i64 1, i64 0), i16** %p, align 8, !dbg !7345
  br label %bb, !dbg !7345

bb:                                               ; preds = %bb1, %entry
  %1 = load i16** %p, align 8, !dbg !7347
  %2 = getelementptr inbounds i16* %1, i64 -1, !dbg !7347
  store i16* %2, i16** %p, align 8, !dbg !7347
  %3 = load i16** %p, align 8, !dbg !7347
  %4 = load i16* %3, align 2, !dbg !7347
  %5 = sext i16 %4 to i32, !dbg !7347
  %6 = load i32* %argtype_addr, align 4, !dbg !7347
  %7 = icmp eq i32 %5, %6, !dbg !7347
  br i1 %7, label %bb2, label %bb1, !dbg !7347

bb1:                                              ; preds = %bb
  %8 = load i16** %p, align 8, !dbg !7348
  %9 = icmp ugt i16* %8, getelementptr inbounds ([12 x i16]* @type_codes, i64 0, i64 0), !dbg !7348
  br i1 %9, label %bb, label %bb2, !dbg !7348

bb2:                                              ; preds = %bb1, %bb
  %10 = load i16** %p, align 8, !dbg !7349
  %11 = ptrtoint i16* %10 to i64, !dbg !7349
  %12 = sub nsw i64 %11, ptrtoint ([12 x i16]* @type_codes to i64), !dbg !7349
  %int_cast_to_i64 = bitcast i64 2 to i64
  %13 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %14 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %14, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %15 = sdiv exact i64 %12, 2, !dbg !7349
  %16 = trunc i64 %15 to i32, !dbg !7349
  %17 = sext i32 %16 to i64, !dbg !7349
  %18 = getelementptr inbounds [12 x i8]* @type_sizes, i64 0, i64 %17, !dbg !7349
  %19 = load i8* %18, align 1, !dbg !7349
  %20 = zext i8 %19 to i32, !dbg !7349
  store i32 %20, i32* %0, align 4, !dbg !7349
  %21 = load i32* %0, align 4, !dbg !7349
  store i32 %21, i32* %retval, align 4, !dbg !7349
  %retval3 = load i32* %retval, !dbg !7349
  ret i32 %retval3, !dbg !7349
}

define internal i32 @_is_equal_or_bigger_arg(i32 %curtype, i32 %newtype) nounwind {
entry:
  %curtype_addr = alloca i32, align 4
  %newtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %curtype, i32* %curtype_addr
  store i32 %newtype, i32* %newtype_addr
  %1 = load i32* %newtype_addr, align 4, !dbg !7350
  %2 = icmp eq i32 %1, 8, !dbg !7350
  br i1 %2, label %bb, label %bb1, !dbg !7350

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !7352
  br label %bb5, !dbg !7352

bb1:                                              ; preds = %entry
  %3 = load i32* %curtype_addr, align 4, !dbg !7353
  %4 = icmp eq i32 %3, 8, !dbg !7353
  br i1 %4, label %bb3, label %bb2, !dbg !7353

bb2:                                              ; preds = %bb1
  %5 = load i32* %curtype_addr, align 4, !dbg !7353
  %6 = load i32* %newtype_addr, align 4, !dbg !7353
  %7 = icmp eq i32 %5, %6, !dbg !7353
  br i1 %7, label %bb3, label %bb4, !dbg !7353

bb3:                                              ; preds = %bb2, %bb1
  store i32 1, i32* %0, align 4, !dbg !7354
  br label %bb5, !dbg !7354

bb4:                                              ; preds = %bb2
  %8 = load i32* %curtype_addr, align 4, !dbg !7355
  %9 = call i32 @_promoted_size(i32 %8) nounwind, !dbg !7355
  %10 = load i32* %newtype_addr, align 4, !dbg !7355
  %11 = call i32 @_promoted_size(i32 %10) nounwind, !dbg !7355
  %12 = icmp sle i32 %9, %11, !dbg !7355
  %13 = zext i1 %12 to i32, !dbg !7355
  store i32 %13, i32* %0, align 4, !dbg !7355
  br label %bb5, !dbg !7355

bb5:                                              ; preds = %bb4, %bb3, %bb
  %14 = load i32* %0, align 4, !dbg !7352
  store i32 %14, i32* %retval, align 4, !dbg !7352
  %retval6 = load i32* %retval, !dbg !7352
  ret i32 %retval6, !dbg !7352
}

define hidden i32 @_ppfs_parsespec(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %0 = alloca i32
  %fmt = alloca i8*
  %p = alloca i8*
  %preci = alloca i32
  %width = alloca i32
  %flags = alloca i32
  %dataargtype = alloca i32
  %i = alloca i32
  %dpoint = alloca i32
  %maxposarg = alloca i32
  %p_m_spec_chars = alloca i32
  %n = alloca i32
  %argtype = alloca [3 x i32]
  %argnumber = alloca [3 x i32]
  %buf = alloca [32 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32 -1, i32* %preci, align 4, !dbg !7356
  %1 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 0, !dbg !7358
  store i32 0, i32* %1, align 4, !dbg !7358
  %2 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 1, !dbg !7359
  store i32 0, i32* %2, align 4, !dbg !7359
  %3 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 0, !dbg !7360
  store i32 8, i32* %3, align 4, !dbg !7360
  %4 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 1, !dbg !7361
  store i32 8, i32* %4, align 4, !dbg !7361
  %5 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7362
  %6 = getelementptr inbounds %struct.ppfs_t* %5, i32 0, i32 2, !dbg !7362
  %7 = load i32* %6, align 4, !dbg !7362
  store i32 %7, i32* %maxposarg, align 4, !dbg !7362
  store i32 0, i32* %dpoint, align 4, !dbg !7363
  %8 = load i32* %dpoint, align 4, !dbg !7363
  store i32 %8, i32* %width, align 4, !dbg !7363
  %9 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7364
  %10 = getelementptr inbounds %struct.ppfs_t* %9, i32 0, i32 1, !dbg !7364
  %11 = getelementptr inbounds %struct.printf_info* %10, i32 0, i32 3, !dbg !7364
  %12 = load i32* %11, align 4, !dbg !7364
  %13 = and i32 %12, 128, !dbg !7364
  store i32 %13, i32* %flags, align 4, !dbg !7364
  %14 = load i32* %flags, align 4, !dbg !7364
  %15 = icmp eq i32 %14, 0, !dbg !7364
  br i1 %15, label %bb, label %bb1, !dbg !7364

bb:                                               ; preds = %entry
  %16 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7365
  %17 = getelementptr inbounds %struct.ppfs_t* %16, i32 0, i32 0, !dbg !7365
  %18 = load i8** %17, align 16, !dbg !7365
  store i8* %18, i8** %fmt, align 8, !dbg !7365
  br label %width_precision, !dbg !7365

bb1:                                              ; preds = %entry
  %buf2 = bitcast [32 x i8]* %buf to i8*, !dbg !7366
  %19 = getelementptr inbounds i8* %buf2, i64 1, !dbg !7366
  store i8* %19, i8** %fmt, align 8, !dbg !7366
  store i32 0, i32* %i, align 4, !dbg !7367
  br label %bb3, !dbg !7367

bb3:                                              ; preds = %bb5, %bb1
  %20 = load i32* %i, align 4, !dbg !7368
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7368
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 0, !dbg !7368
  %23 = load i8** %22, align 16, !dbg !7368
  %24 = bitcast i8* %23 to i32*, !dbg !7368
  %25 = load i32* %i, align 4, !dbg !7368
  %26 = sub nsw i32 %25, 1, !dbg !7368
  %27 = sext i32 %26 to i64, !dbg !7368
  %28 = getelementptr inbounds i32* %24, i64 %27, !dbg !7368
  %29 = load i32* %28, align 1, !dbg !7368
  %30 = trunc i32 %29 to i8, !dbg !7368
  %31 = sext i32 %20 to i64, !dbg !7368
  %32 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %31, !dbg !7368
  store i8 %30, i8* %32, align 1, !dbg !7368
  %33 = sext i32 %20 to i64, !dbg !7368
  %34 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %33, !dbg !7368
  %35 = load i8* %34, align 1, !dbg !7368
  %36 = sext i8 %35 to i32, !dbg !7368
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7368
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 0, !dbg !7368
  %39 = load i8** %38, align 16, !dbg !7368
  %40 = bitcast i8* %39 to i32*, !dbg !7368
  %41 = load i32* %i, align 4, !dbg !7368
  %42 = sub nsw i32 %41, 1, !dbg !7368
  %43 = sext i32 %42 to i64, !dbg !7368
  %44 = getelementptr inbounds i32* %40, i64 %43, !dbg !7368
  %45 = load i32* %44, align 1, !dbg !7368
  %46 = icmp ne i32 %36, %45, !dbg !7368
  br i1 %46, label %bb4, label %bb5, !dbg !7368

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4, !dbg !7369
  br label %bb90, !dbg !7369

bb5:                                              ; preds = %bb3
  %47 = load i32* %i, align 4, !dbg !7370
  %48 = sext i32 %47 to i64, !dbg !7370
  %49 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %48, !dbg !7370
  %50 = load i8* %49, align 1, !dbg !7370
  %51 = icmp ne i8 %50, 0, !dbg !7370
  %52 = zext i1 %51 to i8, !dbg !7370
  %53 = load i32* %i, align 4, !dbg !7370
  %54 = add nsw i32 %53, 1, !dbg !7370
  store i32 %54, i32* %i, align 4, !dbg !7370
  %toBool = icmp ne i8 %52, 0, !dbg !7370
  br i1 %toBool, label %bb3, label %bb6, !dbg !7370

bb6:                                              ; preds = %bb5
  %55 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 31, !dbg !7371
  store i8 0, i8* %55, align 1, !dbg !7371
  br label %width_precision, !dbg !7372

width_precision:                                  ; preds = %bb43, %klee_overshift_check.exit, %bb6, %bb
  %56 = load i8** %fmt, align 8, !dbg !7373
  store i8* %56, i8** %p, align 8, !dbg !7373
  %57 = load i8** %fmt, align 8, !dbg !7374
  %58 = load i8* %57, align 1, !dbg !7374
  %59 = icmp eq i8 %58, 42, !dbg !7374
  br i1 %59, label %bb7, label %bb8, !dbg !7374

bb7:                                              ; preds = %width_precision
  %60 = load i32* %dpoint, align 4, !dbg !7375
  %61 = sub nsw i32 0, %60, !dbg !7375
  %62 = sext i32 %61 to i64, !dbg !7375
  %63 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %62, !dbg !7375
  store i32 0, i32* %63, align 4, !dbg !7375
  %64 = load i8** %fmt, align 8, !dbg !7376
  %65 = getelementptr inbounds i8* %64, i64 1, !dbg !7376
  store i8* %65, i8** %fmt, align 8, !dbg !7376
  br label %bb8, !dbg !7376

bb8:                                              ; preds = %bb7, %width_precision
  store i32 0, i32* %i, align 4, !dbg !7377
  br label %bb12, !dbg !7377

bb9:                                              ; preds = %bb12
  %66 = load i32* %i, align 4, !dbg !7378
  %67 = icmp sle i32 %66, 4094, !dbg !7378
  br i1 %67, label %bb10, label %bb11, !dbg !7378

bb10:                                             ; preds = %bb9
  %68 = load i32* %i, align 4, !dbg !7379
  %69 = mul nsw i32 %68, 10, !dbg !7379
  %70 = load i8** %fmt, align 8, !dbg !7379
  %71 = load i8* %70, align 1, !dbg !7379
  %72 = sext i8 %71 to i32, !dbg !7379
  %73 = sub nsw i32 %72, 48, !dbg !7379
  %74 = add nsw i32 %69, %73, !dbg !7379
  store i32 %74, i32* %i, align 4, !dbg !7379
  br label %bb11, !dbg !7379

bb11:                                             ; preds = %bb10, %bb9
  %75 = load i8** %fmt, align 8, !dbg !7380
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !7380
  store i8* %76, i8** %fmt, align 8, !dbg !7380
  br label %bb12, !dbg !7380

bb12:                                             ; preds = %bb11, %bb8
  %77 = load i16** @__ctype_b, align 8, !dbg !7381
  %78 = load i8** %fmt, align 8, !dbg !7381
  %79 = load i8* %78, align 1, !dbg !7381
  %80 = sext i8 %79 to i32, !dbg !7381
  %81 = sext i32 %80 to i64, !dbg !7381
  %82 = getelementptr inbounds i16* %77, i64 %81, !dbg !7381
  %83 = load i16* %82, align 1, !dbg !7381
  %84 = zext i16 %83 to i32, !dbg !7381
  %85 = and i32 %84, 2048, !dbg !7381
  %86 = icmp ne i32 %85, 0, !dbg !7381
  br i1 %86, label %bb9, label %bb13, !dbg !7381

bb13:                                             ; preds = %bb12
  %87 = load i8** %p, align 8, !dbg !7382
  %88 = getelementptr inbounds i8* %87, i64 -1, !dbg !7382
  %89 = load i8* %88, align 1, !dbg !7382
  %90 = icmp eq i8 %89, 37, !dbg !7382
  br i1 %90, label %bb14, label %PREC_WIDTH, !dbg !7382

bb14:                                             ; preds = %bb13
  %91 = load i8** %fmt, align 8, !dbg !7383
  %92 = load i8* %91, align 1, !dbg !7383
  %93 = icmp ne i8 %92, 36, !dbg !7383
  br i1 %93, label %bb21, label %bb15, !dbg !7383

bb15:                                             ; preds = %bb14
  %94 = load i32* %i, align 4, !dbg !7383
  %95 = icmp sle i32 %94, 0, !dbg !7383
  br i1 %95, label %bb21, label %bb16, !dbg !7383

bb16:                                             ; preds = %bb15
  %96 = load i8** %fmt, align 8, !dbg !7384
  %97 = getelementptr inbounds i8* %96, i64 1, !dbg !7384
  store i8* %97, i8** %fmt, align 8, !dbg !7384
  %98 = load i32* %maxposarg, align 4, !dbg !7385
  %99 = icmp eq i32 %98, 0, !dbg !7385
  br i1 %99, label %bb17, label %bb18, !dbg !7385

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %0, align 4, !dbg !7386
  br label %bb90, !dbg !7386

bb18:                                             ; preds = %bb16
  %100 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7387
  %101 = load i32* %i, align 4, !dbg !7387
  store i32 %101, i32* %100, align 4, !dbg !7387
  %102 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7387
  %103 = load i32* %102, align 4, !dbg !7387
  %104 = load i32* %maxposarg, align 4, !dbg !7387
  %105 = icmp sgt i32 %103, %104, !dbg !7387
  br i1 %105, label %bb19, label %restart_flags, !dbg !7387

bb19:                                             ; preds = %bb18
  %106 = load i32* %i, align 4, !dbg !7388
  store i32 %106, i32* %maxposarg, align 4, !dbg !7388
  br label %restart_flags, !dbg !7388

bb21:                                             ; preds = %bb15, %bb14
  %107 = load i32* %maxposarg, align 4, !dbg !7389
  %108 = icmp sgt i32 %107, 0, !dbg !7389
  br i1 %108, label %bb22, label %bb23, !dbg !7389

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %0, align 4, !dbg !7390
  br label %bb90, !dbg !7390

bb23:                                             ; preds = %bb21
  store i32 0, i32* %maxposarg, align 4, !dbg !7391
  %109 = load i8** %fmt, align 8, !dbg !7392
  %110 = load i8** %p, align 8, !dbg !7392
  %111 = icmp ugt i8* %109, %110, !dbg !7392
  br i1 %111, label %bb24, label %bb25, !dbg !7392

bb24:                                             ; preds = %bb23
  %112 = load i8** %p, align 8, !dbg !7392
  %113 = load i8* %112, align 1, !dbg !7392
  %114 = icmp ne i8 %113, 48, !dbg !7392
  br i1 %114, label %PREC_WIDTH, label %bb25, !dbg !7392

bb25:                                             ; preds = %bb24, %bb23
  %115 = load i8** %p, align 8, !dbg !7393
  store i8* %115, i8** %fmt, align 8, !dbg !7393
  br label %restart_flags, !dbg !7394

restart_flags:                                    ; preds = %bb18, %bb19, %bb28, %bb25
  store i32 1, i32* %i, align 4, !dbg !7395
  store i8* getelementptr inbounds ([8 x i8]* @spec_flags.3665, i64 0, i64 0), i8** %p, align 8, !dbg !7396
  br label %bb26, !dbg !7396

bb26:                                             ; preds = %bb29, %restart_flags
  %116 = load i8** %fmt, align 8, !dbg !7397
  %117 = load i8* %116, align 1, !dbg !7397
  %118 = load i8** %p, align 8, !dbg !7397
  %119 = load i8* %118, align 1, !dbg !7397
  %120 = icmp eq i8 %117, %119, !dbg !7397
  %121 = zext i1 %120 to i8, !dbg !7397
  %122 = load i8** %p, align 8, !dbg !7397
  %123 = getelementptr inbounds i8* %122, i64 1, !dbg !7397
  store i8* %123, i8** %p, align 8, !dbg !7397
  %toBool27 = icmp ne i8 %121, 0, !dbg !7397
  br i1 %toBool27, label %bb28, label %bb29, !dbg !7397

bb28:                                             ; preds = %bb26
  %124 = load i8** %fmt, align 8, !dbg !7398
  %125 = getelementptr inbounds i8* %124, i64 1, !dbg !7398
  store i8* %125, i8** %fmt, align 8, !dbg !7398
  %126 = load i32* %flags, align 4, !dbg !7399
  %127 = load i32* %i, align 4, !dbg !7399
  %128 = or i32 %126, %127, !dbg !7399
  store i32 %128, i32* %flags, align 4, !dbg !7399
  br label %restart_flags, !dbg !7399

bb29:                                             ; preds = %bb26
  %129 = load i32* %i, align 4, !dbg !7400
  %130 = load i32* %i, align 4, !dbg !7400
  %131 = add nsw i32 %129, %130, !dbg !7400
  store i32 %131, i32* %i, align 4, !dbg !7400
  %132 = load i8** %p, align 8, !dbg !7401
  %133 = load i8* %132, align 1, !dbg !7401
  %134 = icmp ne i8 %133, 0, !dbg !7401
  br i1 %134, label %bb26, label %bb30, !dbg !7401

bb30:                                             ; preds = %bb29
  store i32 0, i32* %i, align 4, !dbg !7402
  %135 = load i32* %flags, align 4, !dbg !7403
  %136 = and i32 %135, 10, !dbg !7403
  %int_cast_to_i64 = zext i32 1 to i64
  %137 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %137, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb30
  %138 = ashr i32 %136, 1, !dbg !7403
  %not = xor i32 %138, -1, !dbg !7403
  %139 = load i32* %flags, align 4, !dbg !7403
  %140 = and i32 %not, %139, !dbg !7403
  store i32 %140, i32* %flags, align 4, !dbg !7403
  %141 = load i8** %fmt, align 8, !dbg !7404
  %142 = getelementptr inbounds i8* %141, i64 -1, !dbg !7404
  %143 = load i8* %142, align 1, !dbg !7404
  %144 = icmp ne i8 %143, 37, !dbg !7404
  br i1 %144, label %width_precision, label %PREC_WIDTH, !dbg !7404

PREC_WIDTH:                                       ; preds = %klee_overshift_check.exit, %bb24, %bb13
  %145 = load i8** %p, align 8, !dbg !7405
  %146 = load i8* %145, align 1, !dbg !7405
  %147 = icmp eq i8 %146, 42, !dbg !7405
  br i1 %147, label %bb32, label %bb41, !dbg !7405

bb32:                                             ; preds = %PREC_WIDTH
  %148 = load i32* %maxposarg, align 4, !dbg !7406
  %149 = icmp ne i32 %148, 0, !dbg !7406
  br i1 %149, label %bb33, label %bb38, !dbg !7406

bb33:                                             ; preds = %bb32
  %150 = load i8** %fmt, align 8, !dbg !7407
  %151 = load i8* %150, align 1, !dbg !7407
  %152 = icmp ne i8 %151, 36, !dbg !7407
  %153 = zext i1 %152 to i8, !dbg !7407
  %154 = load i8** %fmt, align 8, !dbg !7407
  %155 = getelementptr inbounds i8* %154, i64 1, !dbg !7407
  store i8* %155, i8** %fmt, align 8, !dbg !7407
  %toBool34 = icmp ne i8 %153, 0, !dbg !7407
  br i1 %toBool34, label %bb36, label %bb35, !dbg !7407

bb35:                                             ; preds = %bb33
  %156 = load i32* %i, align 4, !dbg !7407
  %157 = icmp sle i32 %156, 0, !dbg !7407
  br i1 %157, label %bb36, label %bb37, !dbg !7407

bb36:                                             ; preds = %bb35, %bb33
  store i32 -1, i32* %0, align 4, !dbg !7408
  br label %bb90, !dbg !7408

bb37:                                             ; preds = %bb35
  %158 = load i32* %dpoint, align 4, !dbg !7409
  %159 = sub nsw i32 0, %158, !dbg !7409
  %160 = sext i32 %159 to i64, !dbg !7409
  %161 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %160, !dbg !7409
  %162 = load i32* %i, align 4, !dbg !7409
  store i32 %162, i32* %161, align 4, !dbg !7409
  br label %bb40, !dbg !7409

bb38:                                             ; preds = %bb32
  %163 = load i8** %p, align 8, !dbg !7410
  %164 = getelementptr inbounds i8* %163, i64 1, !dbg !7410
  store i8* %164, i8** %p, align 8, !dbg !7410
  %165 = load i8** %p, align 8, !dbg !7410
  %166 = load i8** %fmt, align 8, !dbg !7410
  %167 = icmp ne i8* %165, %166, !dbg !7410
  br i1 %167, label %bb39, label %bb40, !dbg !7410

bb39:                                             ; preds = %bb38
  store i32 -1, i32* %0, align 4, !dbg !7411
  br label %bb90, !dbg !7411

bb40:                                             ; preds = %bb38, %bb37
  store i32 -2147483648, i32* %i, align 4, !dbg !7412
  br label %bb41, !dbg !7412

bb41:                                             ; preds = %bb40, %PREC_WIDTH
  %168 = load i32* %dpoint, align 4, !dbg !7413
  %169 = icmp eq i32 %168, 0, !dbg !7413
  %170 = load i32* %i, align 4, !dbg !7414
  br i1 %169, label %bb42, label %bb45, !dbg !7413

bb42:                                             ; preds = %bb41
  store i32 %170, i32* %width, align 4, !dbg !7414
  %171 = load i8** %fmt, align 8, !dbg !7415
  %172 = load i8* %171, align 1, !dbg !7415
  %173 = icmp eq i8 %172, 46, !dbg !7415
  br i1 %173, label %bb43, label %bb46, !dbg !7415

bb43:                                             ; preds = %bb42
  %174 = load i8** %fmt, align 8, !dbg !7416
  %175 = getelementptr inbounds i8* %174, i64 1, !dbg !7416
  store i8* %175, i8** %fmt, align 8, !dbg !7416
  store i32 -1, i32* %dpoint, align 4, !dbg !7417
  br label %width_precision, !dbg !7417

bb45:                                             ; preds = %bb41
  store i32 %170, i32* %preci, align 4, !dbg !7418
  br label %bb46, !dbg !7418

bb46:                                             ; preds = %bb42, %bb45
  store i8* getelementptr inbounds ([20 x i8]* @qual_chars.3670, i64 0, i64 0), i8** %p, align 8, !dbg !7419
  br label %bb47, !dbg !7419

bb47:                                             ; preds = %bb49, %bb46
  %176 = load i8** %fmt, align 8, !dbg !7420
  %177 = load i8* %176, align 1, !dbg !7420
  %178 = load i8** %p, align 8, !dbg !7420
  %179 = load i8* %178, align 1, !dbg !7420
  %180 = icmp eq i8 %177, %179, !dbg !7420
  br i1 %180, label %bb48, label %bb49, !dbg !7420

bb48:                                             ; preds = %bb47
  %181 = load i8** %fmt, align 8, !dbg !7421
  %182 = getelementptr inbounds i8* %181, i64 1, !dbg !7421
  store i8* %182, i8** %fmt, align 8, !dbg !7421
  br label %bb50, !dbg !7421

bb49:                                             ; preds = %bb47
  %183 = load i8** %p, align 8, !dbg !7422
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7422
  store i8* %184, i8** %p, align 8, !dbg !7422
  %185 = load i8** %p, align 8, !dbg !7422
  %186 = load i8* %185, align 1, !dbg !7422
  %187 = icmp ne i8 %186, 0, !dbg !7422
  br i1 %187, label %bb47, label %bb50, !dbg !7422

bb50:                                             ; preds = %bb49, %bb48
  %188 = load i8** %p, align 8, !dbg !7423
  %189 = ptrtoint i8* %188 to i64, !dbg !7423
  %190 = sub nsw i64 %189, ptrtoint ([20 x i8]* @qual_chars.3670 to i64), !dbg !7423
  %191 = icmp sle i64 %190, 1, !dbg !7423
  br i1 %191, label %bb51, label %bb53, !dbg !7423

bb51:                                             ; preds = %bb50
  %192 = load i8** %fmt, align 8, !dbg !7423
  %193 = load i8* %192, align 1, !dbg !7423
  %194 = load i8** %p, align 8, !dbg !7423
  %195 = load i8* %194, align 1, !dbg !7423
  %196 = icmp eq i8 %193, %195, !dbg !7423
  br i1 %196, label %bb52, label %bb53, !dbg !7423

bb52:                                             ; preds = %bb51
  %197 = load i8** %p, align 8, !dbg !7424
  %198 = getelementptr inbounds i8* %197, i64 9, !dbg !7424
  store i8* %198, i8** %p, align 8, !dbg !7424
  %199 = load i8** %fmt, align 8, !dbg !7425
  %200 = getelementptr inbounds i8* %199, i64 1, !dbg !7425
  store i8* %200, i8** %fmt, align 8, !dbg !7425
  br label %bb53, !dbg !7425

bb53:                                             ; preds = %bb52, %bb51, %bb50
  %201 = load i8** %p, align 8, !dbg !7426
  %202 = getelementptr inbounds i8* %201, i64 9, !dbg !7426
  %203 = load i8* %202, align 1, !dbg !7426
  %204 = sext i8 %203 to i32, !dbg !7426
  %int_cast_to_i641 = zext i32 8 to i64
  %205 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %205, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb53
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb53
  %206 = shl i32 %204, 8, !dbg !7426
  store i32 %206, i32* %dataargtype, align 4, !dbg !7426
  %207 = load i8** %fmt, align 8, !dbg !7427
  %208 = load i8* %207, align 1, !dbg !7427
  %209 = icmp eq i8 %208, 0, !dbg !7427
  br i1 %209, label %bb54, label %bb55, !dbg !7427

bb54:                                             ; preds = %klee_overshift_check.exit3
  store i32 -1, i32* %0, align 4, !dbg !7428
  br label %bb90, !dbg !7428

bb55:                                             ; preds = %klee_overshift_check.exit3
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7429
  br label %bb56, !dbg !7429

bb56:                                             ; preds = %bb63, %bb55
  %210 = load i8** %fmt, align 8, !dbg !7430
  %211 = load i8* %210, align 1, !dbg !7430
  %212 = load i8** %p, align 8, !dbg !7430
  %213 = load i8* %212, align 1, !dbg !7430
  %214 = icmp eq i8 %211, %213, !dbg !7430
  %215 = load i8** %p, align 8, !dbg !7431
  br i1 %214, label %bb57, label %bb63, !dbg !7430

bb57:                                             ; preds = %bb56
  %216 = ptrtoint i8* %215 to i64, !dbg !7431
  %217 = trunc i64 %216 to i32, !dbg !7431
  %218 = trunc i64 ptrtoint ([21 x i8]* @spec_chars.3666 to i64) to i32, !dbg !7431
  %219 = sub i32 %217, %218, !dbg !7431
  store i32 %219, i32* %p_m_spec_chars, align 4, !dbg !7431
  %220 = load i32* %p_m_spec_chars, align 4, !dbg !7432
  %221 = icmp sgt i32 %220, 17, !dbg !7432
  br i1 %221, label %bb58, label %bb60, !dbg !7432

bb58:                                             ; preds = %bb57
  %222 = load i32* %dataargtype, align 4, !dbg !7432
  %223 = and i32 %222, 1024, !dbg !7432
  %224 = icmp ne i32 %223, 0, !dbg !7432
  br i1 %224, label %bb59, label %bb60, !dbg !7432

bb59:                                             ; preds = %bb58
  %225 = load i32* %p_m_spec_chars, align 4, !dbg !7433
  %226 = sub nsw i32 %225, 2, !dbg !7433
  store i32 %226, i32* %p_m_spec_chars, align 4, !dbg !7433
  br label %bb60, !dbg !7433

bb60:                                             ; preds = %bb59, %bb58, %bb57
  %227 = load i32* %p_m_spec_chars, align 4, !dbg !7434
  %228 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7434
  %229 = getelementptr inbounds %struct.ppfs_t* %228, i32 0, i32 4, !dbg !7434
  store i32 %227, i32* %229, align 4, !dbg !7434
  store i8* getelementptr ([9 x i8]* @spec_ranges.3667, i64 2049638230412172401, i64 6), i8** %p, align 8, !dbg !7435
  br label %bb61, !dbg !7435

bb61:                                             ; preds = %bb61, %bb60
  %230 = load i8** %p, align 8, !dbg !7436
  %231 = getelementptr inbounds i8* %230, i64 1, !dbg !7436
  store i8* %231, i8** %p, align 8, !dbg !7436
  %232 = load i8** %p, align 8, !dbg !7436
  %233 = load i8* %232, align 1, !dbg !7436
  %234 = sext i8 %233 to i32, !dbg !7436
  %235 = load i32* %p_m_spec_chars, align 4, !dbg !7436
  %236 = icmp slt i32 %234, %235, !dbg !7436
  br i1 %236, label %bb61, label %bb62, !dbg !7436

bb62:                                             ; preds = %bb61
  %237 = load i8** %p, align 8, !dbg !7437
  %238 = ptrtoint i8* %237 to i64, !dbg !7437
  %239 = trunc i64 %238 to i32, !dbg !7437
  %240 = trunc i64 ptrtoint ([9 x i8]* @spec_ranges.3667 to i64) to i32, !dbg !7437
  %241 = sub i32 %239, %240, !dbg !7437
  store i32 %241, i32* %i, align 4, !dbg !7437
  %242 = load i32* %i, align 4, !dbg !7438
  %243 = sext i32 %242 to i64, !dbg !7438
  %244 = getelementptr inbounds [8 x i16]* @spec_or_mask.3668, i64 0, i64 %243, !dbg !7438
  %245 = load i16* %244, align 2, !dbg !7438
  %246 = sext i16 %245 to i32, !dbg !7438
  %247 = load i32* %dataargtype, align 4, !dbg !7438
  %248 = or i32 %246, %247, !dbg !7438
  %249 = load i32* %i, align 4, !dbg !7438
  %250 = sext i32 %249 to i64, !dbg !7438
  %251 = getelementptr inbounds [8 x i16]* @spec_and_mask.3669, i64 0, i64 %250, !dbg !7438
  %252 = load i16* %251, align 2, !dbg !7438
  %253 = sext i16 %252 to i32, !dbg !7438
  %254 = and i32 %248, %253, !dbg !7438
  %255 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 2, !dbg !7438
  store i32 %254, i32* %255, align 4, !dbg !7438
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7439
  br label %bb64, !dbg !7439

bb63:                                             ; preds = %bb56
  %256 = getelementptr inbounds i8* %215, i64 1, !dbg !7440
  store i8* %256, i8** %p, align 8, !dbg !7440
  %257 = load i8** %p, align 8, !dbg !7440
  %258 = load i8* %257, align 1, !dbg !7440
  %259 = icmp ne i8 %258, 0, !dbg !7440
  br i1 %259, label %bb56, label %bb64, !dbg !7440

bb64:                                             ; preds = %bb63, %bb62
  %260 = load i8** %fmt, align 8, !dbg !7441
  %261 = load i8* %260, align 1, !dbg !7441
  %262 = sext i8 %261 to i32, !dbg !7441
  %263 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7441
  %264 = getelementptr inbounds %struct.ppfs_t* %263, i32 0, i32 1, !dbg !7441
  %265 = getelementptr inbounds %struct.printf_info* %264, i32 0, i32 2, !dbg !7441
  store i32 %262, i32* %265, align 8, !dbg !7441
  %266 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7442
  %267 = getelementptr inbounds %struct.ppfs_t* %266, i32 0, i32 1, !dbg !7442
  %268 = getelementptr inbounds %struct.printf_info* %267, i32 0, i32 0, !dbg !7442
  %269 = load i32* %preci, align 4, !dbg !7442
  store i32 %269, i32* %268, align 8, !dbg !7442
  %270 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7443
  %271 = getelementptr inbounds %struct.ppfs_t* %270, i32 0, i32 1, !dbg !7443
  %272 = getelementptr inbounds %struct.printf_info* %271, i32 0, i32 1, !dbg !7443
  %273 = load i32* %width, align 4, !dbg !7443
  store i32 %273, i32* %272, align 4, !dbg !7443
  %274 = load i32* %flags, align 4, !dbg !7444
  %275 = and i32 %274, 4, !dbg !7444
  %276 = icmp ne i32 %275, 0, !dbg !7444
  br i1 %276, label %bb65, label %bb66, !dbg !7444

bb65:                                             ; preds = %bb64
  store i32 48, i32* %iftmp.14, align 4, !dbg !7444
  br label %bb67, !dbg !7444

bb66:                                             ; preds = %bb64
  store i32 32, i32* %iftmp.14, align 4, !dbg !7444
  br label %bb67, !dbg !7444

bb67:                                             ; preds = %bb66, %bb65
  %277 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7444
  %278 = getelementptr inbounds %struct.ppfs_t* %277, i32 0, i32 1, !dbg !7444
  %279 = getelementptr inbounds %struct.printf_info* %278, i32 0, i32 4, !dbg !7444
  %280 = load i32* %iftmp.14, align 4, !dbg !7444
  store i32 %280, i32* %279, align 8, !dbg !7444
  %281 = load i32* %flags, align 4, !dbg !7445
  %282 = and i32 %281, -5, !dbg !7445
  %283 = load i32* %dataargtype, align 4, !dbg !7445
  %284 = and i32 %283, 3840, !dbg !7445
  %285 = or i32 %282, %284, !dbg !7445
  %286 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7445
  %287 = getelementptr inbounds %struct.ppfs_t* %286, i32 0, i32 1, !dbg !7445
  %288 = getelementptr inbounds %struct.printf_info* %287, i32 0, i32 3, !dbg !7445
  store i32 %285, i32* %288, align 4, !dbg !7445
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7446
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7446
  store i32 1, i32* %290, align 16, !dbg !7446
  %291 = load i8** %p, align 8, !dbg !7447
  %292 = load i8* %291, align 1, !dbg !7447
  %293 = icmp eq i8 %292, 0, !dbg !7447
  br i1 %293, label %bb68, label %bb69, !dbg !7447

bb68:                                             ; preds = %bb67
  store i32 -1, i32* %0, align 4, !dbg !7448
  br label %bb90, !dbg !7448

bb69:                                             ; preds = %bb67
  %294 = load i32* %maxposarg, align 4, !dbg !7449
  %295 = icmp sgt i32 %294, 0, !dbg !7449
  br i1 %295, label %bb70, label %bb81, !dbg !7449

bb70:                                             ; preds = %bb69
  store i32 0, i32* %i, align 4, !dbg !7450
  br label %bb71, !dbg !7450

bb71:                                             ; preds = %bb79, %bb70
  %296 = load i32* %i, align 4, !dbg !7451
  %297 = icmp sle i32 %296, 2, !dbg !7451
  br i1 %297, label %bb72, label %bb73, !dbg !7451

bb72:                                             ; preds = %bb71
  %298 = load i32* %i, align 4, !dbg !7451
  %299 = load i32* %i, align 4, !dbg !7451
  %300 = sext i32 %299 to i64, !dbg !7451
  %301 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %300, !dbg !7451
  %302 = load i32* %301, align 4, !dbg !7451
  %303 = trunc i32 %302 to i8, !dbg !7451
  %304 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7451
  %305 = getelementptr inbounds %struct.ppfs_t* %304, i32 0, i32 5, !dbg !7451
  %306 = sext i32 %298 to i64, !dbg !7451
  %307 = getelementptr inbounds [4 x i8]* %305, i64 0, i64 %306, !dbg !7451
  store i8 %303, i8* %307, align 1, !dbg !7451
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7451
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 5, !dbg !7451
  %310 = sext i32 %298 to i64, !dbg !7451
  %311 = getelementptr inbounds [4 x i8]* %309, i64 0, i64 %310, !dbg !7451
  %312 = load i8* %311, align 1, !dbg !7451
  %313 = zext i8 %312 to i32, !dbg !7451
  store i32 %313, i32* %iftmp.15, align 4, !dbg !7451
  br label %bb74, !dbg !7451

bb73:                                             ; preds = %bb71
  %314 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7451
  %315 = load i32* %314, align 4, !dbg !7451
  %316 = load i32* %i, align 4, !dbg !7451
  %317 = sub nsw i32 %316, 2, !dbg !7451
  %318 = add nsw i32 %315, %317, !dbg !7451
  store i32 %318, i32* %iftmp.15, align 4, !dbg !7451
  br label %bb74, !dbg !7451

bb74:                                             ; preds = %bb73, %bb72
  %319 = load i32* %iftmp.15, align 4, !dbg !7451
  store i32 %319, i32* %n, align 4, !dbg !7451
  %320 = load i32* %n, align 4, !dbg !7452
  %321 = load i32* %maxposarg, align 4, !dbg !7452
  %322 = icmp sgt i32 %320, %321, !dbg !7452
  br i1 %322, label %bb75, label %bb77, !dbg !7452

bb75:                                             ; preds = %bb74
  %323 = load i32* %n, align 4, !dbg !7453
  store i32 %323, i32* %maxposarg, align 4, !dbg !7453
  %324 = load i32* %maxposarg, align 4, !dbg !7453
  %325 = icmp sgt i32 %324, 9, !dbg !7453
  br i1 %325, label %bb76, label %bb77, !dbg !7453

bb76:                                             ; preds = %bb75
  store i32 -1, i32* %0, align 4, !dbg !7454
  br label %bb90, !dbg !7454

bb77:                                             ; preds = %bb75, %bb74
  %326 = load i32* %n, align 4, !dbg !7455
  %327 = sub nsw i32 %326, 1, !dbg !7455
  store i32 %327, i32* %n, align 4, !dbg !7455
  %328 = load i32* %i, align 4, !dbg !7456
  %329 = sext i32 %328 to i64, !dbg !7456
  %330 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %329, !dbg !7456
  %331 = load i32* %330, align 4, !dbg !7456
  %332 = load i32* %n, align 4, !dbg !7456
  %333 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7456
  %334 = getelementptr inbounds %struct.ppfs_t* %333, i32 0, i32 6, !dbg !7456
  %335 = sext i32 %332 to i64, !dbg !7456
  %336 = getelementptr inbounds [9 x i32]* %334, i64 0, i64 %335, !dbg !7456
  %337 = load i32* %336, align 4, !dbg !7456
  %338 = call i32 @_is_equal_or_bigger_arg(i32 %337, i32 %331) nounwind, !dbg !7456
  %339 = icmp ne i32 %338, 0, !dbg !7456
  br i1 %339, label %bb78, label %bb79, !dbg !7456

bb78:                                             ; preds = %bb77
  %340 = load i32* %n, align 4, !dbg !7457
  %341 = load i32* %i, align 4, !dbg !7457
  %342 = sext i32 %341 to i64, !dbg !7457
  %343 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %342, !dbg !7457
  %344 = load i32* %343, align 4, !dbg !7457
  %345 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7457
  %346 = getelementptr inbounds %struct.ppfs_t* %345, i32 0, i32 6, !dbg !7457
  %347 = sext i32 %340 to i64, !dbg !7457
  %348 = getelementptr inbounds [9 x i32]* %346, i64 0, i64 %347, !dbg !7457
  store i32 %344, i32* %348, align 4, !dbg !7457
  br label %bb79, !dbg !7457

bb79:                                             ; preds = %bb78, %bb77
  %349 = load i32* %i, align 4, !dbg !7458
  %350 = add nsw i32 %349, 1, !dbg !7458
  store i32 %350, i32* %i, align 4, !dbg !7458
  %351 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7458
  %352 = getelementptr inbounds %struct.ppfs_t* %351, i32 0, i32 3, !dbg !7458
  %353 = load i32* %352, align 16, !dbg !7458
  %354 = add nsw i32 %353, 2, !dbg !7458
  %355 = load i32* %i, align 4, !dbg !7458
  %356 = icmp slt i32 %355, %354, !dbg !7458
  br i1 %356, label %bb71, label %bb83, !dbg !7458

bb81:                                             ; preds = %bb69
  %357 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7459
  %358 = getelementptr inbounds %struct.ppfs_t* %357, i32 0, i32 5, !dbg !7459
  %359 = getelementptr inbounds [4 x i8]* %358, i64 0, i64 2, !dbg !7459
  store i8 1, i8* %359, align 1, !dbg !7459
  %360 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7460
  %361 = getelementptr inbounds %struct.ppfs_t* %360, i32 0, i32 3, !dbg !7460
  %362 = load i32* %361, align 16, !dbg !7460
  %363 = sext i32 %362 to i64, !dbg !7460
  %364 = mul i64 %363, 4, !dbg !7460
  %365 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7460
  %366 = getelementptr inbounds %struct.ppfs_t* %365, i32 0, i32 6, !dbg !7460
  %367 = getelementptr inbounds [9 x i32]* %366, i64 0, i64 0, !dbg !7460
  %368 = bitcast i32* %367 to i8*, !dbg !7460
  %argtype82 = bitcast [3 x i32]* %argtype to i32*, !dbg !7460
  %369 = getelementptr inbounds i32* %argtype82, i64 2, !dbg !7460
  %370 = bitcast i32* %369 to i8*, !dbg !7460
  %371 = call i8* @memcpy(i8* noalias %368, i8* noalias %370, i64 %364) nounwind, !dbg !7460
  br label %bb83, !dbg !7460

bb83:                                             ; preds = %bb79, %bb81
  %372 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7461
  %373 = getelementptr inbounds %struct.ppfs_t* %372, i32 0, i32 2, !dbg !7461
  %374 = load i32* %maxposarg, align 4, !dbg !7461
  store i32 %374, i32* %373, align 4, !dbg !7461
  %375 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7462
  %376 = getelementptr inbounds %struct.ppfs_t* %375, i32 0, i32 1, !dbg !7462
  %377 = getelementptr inbounds %struct.printf_info* %376, i32 0, i32 3, !dbg !7462
  %378 = load i32* %377, align 4, !dbg !7462
  %379 = and i32 %378, 128, !dbg !7462
  store i32 %379, i32* %flags, align 4, !dbg !7462
  %380 = load i32* %flags, align 4, !dbg !7462
  %381 = icmp eq i32 %380, 0, !dbg !7462
  br i1 %381, label %bb84, label %bb85, !dbg !7462

bb84:                                             ; preds = %bb83
  %382 = load i8** %fmt, align 8, !dbg !7463
  %383 = getelementptr inbounds i8* %382, i64 1, !dbg !7463
  store i8* %383, i8** %fmt, align 8, !dbg !7463
  %384 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7463
  %385 = getelementptr inbounds %struct.ppfs_t* %384, i32 0, i32 0, !dbg !7463
  %386 = load i8** %fmt, align 8, !dbg !7463
  store i8* %386, i8** %385, align 16, !dbg !7463
  br label %bb89, !dbg !7463

bb85:                                             ; preds = %bb83
  %387 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7464
  %388 = getelementptr inbounds %struct.ppfs_t* %387, i32 0, i32 0, !dbg !7464
  %389 = load i8** %388, align 16, !dbg !7464
  %390 = bitcast i8* %389 to i32*, !dbg !7464
  %391 = load i8** %fmt, align 8, !dbg !7464
  %392 = ptrtoint i8* %391 to i64, !dbg !7464
  %buf86 = bitcast [32 x i8]* %buf to i8*, !dbg !7464
  %buf8687 = ptrtoint i8* %buf86 to i64, !dbg !7464
  %393 = sub nsw i64 %392, %buf8687, !dbg !7464
  %394 = getelementptr inbounds i32* %390, i64 %393, !dbg !7464
  %395 = bitcast i32* %394 to i8*, !dbg !7464
  %396 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7464
  %397 = getelementptr inbounds %struct.ppfs_t* %396, i32 0, i32 0, !dbg !7464
  store i8* %395, i8** %397, align 16, !dbg !7464
  br label %bb89, !dbg !7464

bb89:                                             ; preds = %bb85, %bb84
  %398 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7465
  %399 = getelementptr inbounds %struct.ppfs_t* %398, i32 0, i32 3, !dbg !7465
  %400 = load i32* %399, align 16, !dbg !7465
  %401 = add nsw i32 %400, 2, !dbg !7465
  store i32 %401, i32* %0, align 4, !dbg !7465
  br label %bb90, !dbg !7465

bb90:                                             ; preds = %bb89, %bb76, %bb68, %bb54, %bb39, %bb36, %bb22, %bb17, %bb4
  %402 = load i32* %0, align 4, !dbg !7369
  store i32 %402, i32* %retval, align 4, !dbg !7369
  %retval91 = load i32* %retval, !dbg !7369
  ret i32 %retval91, !dbg !7369
}

define hidden void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %arg) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7466
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 7, !dbg !7466
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %1, i64 0, i64 0, !dbg !7466
  %3 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7466
  %4 = bitcast %struct.__va_list_tag* %2 to i8*, !dbg !7466
  %5 = bitcast %struct.__va_list_tag* %3 to i8*, !dbg !7466
  %vacopy.cast.dst = bitcast i8* %4 to i64*
  %vacopy.cast.src = bitcast i8* %5 to i64*
  %6 = load i64* %vacopy.cast.src
  store i64 %6, i64* %vacopy.cast.dst
  %7 = getelementptr i64* %vacopy.cast.dst, i64 1
  %8 = getelementptr i64* %vacopy.cast.src, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = getelementptr i64* %7, i64 1
  %11 = getelementptr i64* %8, i64 1
  %12 = load i64* %11
  store i64 %12, i64* %10
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7468
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 2, !dbg !7468
  %15 = load i32* %14, align 4, !dbg !7468
  store i32 %15, i32* %i, align 4, !dbg !7468
  %16 = load i32* %i, align 4, !dbg !7468
  %17 = icmp sgt i32 %16, 0, !dbg !7468
  br i1 %17, label %bb, label %return, !dbg !7468

bb:                                               ; preds = %entry
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7469
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 3, !dbg !7469
  %20 = load i32* %i, align 4, !dbg !7469
  store i32 %20, i32* %19, align 16, !dbg !7469
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7470
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 2, !dbg !7470
  store i32 0, i32* %22, align 4, !dbg !7470
  %23 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7470
  %24 = getelementptr inbounds %struct.ppfs_t* %23, i32 0, i32 2, !dbg !7470
  %25 = load i32* %24, align 4, !dbg !7470
  %26 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7470
  %27 = getelementptr inbounds %struct.ppfs_t* %26, i32 0, i32 1, !dbg !7470
  %28 = getelementptr inbounds %struct.printf_info* %27, i32 0, i32 0, !dbg !7470
  store i32 %25, i32* %28, align 8, !dbg !7470
  %29 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7470
  %30 = getelementptr inbounds %struct.ppfs_t* %29, i32 0, i32 1, !dbg !7470
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 0, !dbg !7470
  %32 = load i32* %31, align 8, !dbg !7470
  %33 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7470
  %34 = getelementptr inbounds %struct.ppfs_t* %33, i32 0, i32 1, !dbg !7470
  %35 = getelementptr inbounds %struct.printf_info* %34, i32 0, i32 1, !dbg !7470
  store i32 %32, i32* %35, align 4, !dbg !7470
  %36 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7471
  call void @_ppfs_setargs(%struct.ppfs_t* %36) nounwind, !dbg !7471
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7472
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 2, !dbg !7472
  %39 = load i32* %i, align 4, !dbg !7472
  store i32 %39, i32* %38, align 4, !dbg !7472
  br label %return, !dbg !7472

return:                                           ; preds = %entry, %bb
  ret void, !dbg !7473
}

define hidden void @_ppfs_setargs(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %addr.17 = alloca i8*
  %addr.15 = alloca i8*
  %addr.13 = alloca i8*
  %addr.11 = alloca i8*
  %addr.9 = alloca i8*
  %addr.7 = alloca i8*
  %addr.5 = alloca i8*
  %addr.2 = alloca i8*
  %addr.0 = alloca i8*
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7474
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 8, !dbg !7474
  %2 = getelementptr inbounds [9 x %union.argvalue_t]* %1, i64 0, i64 0, !dbg !7474
  store %union.argvalue_t* %2, %union.argvalue_t** %p, align 8, !dbg !7474
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7476
  %4 = getelementptr inbounds %struct.ppfs_t* %3, i32 0, i32 2, !dbg !7476
  %5 = load i32* %4, align 4, !dbg !7476
  %6 = icmp eq i32 %5, 0, !dbg !7476
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7477
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 1, !dbg !7477
  %9 = getelementptr inbounds %struct.printf_info* %8, i32 0, i32 1, !dbg !7477
  %10 = load i32* %9, align 4, !dbg !7477
  %11 = icmp eq i32 %10, -2147483648, !dbg !7477
  br i1 %6, label %bb, label %bb41, !dbg !7476

bb:                                               ; preds = %entry
  br i1 %11, label %bb1, label %bb5, !dbg !7477

bb1:                                              ; preds = %bb
  %12 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7478
  %13 = getelementptr inbounds %struct.ppfs_t* %12, i32 0, i32 7, !dbg !7478
  %14 = bitcast [1 x %struct.__va_list_tag]* %13 to %struct.__va_list_tag*, !dbg !7478
  %15 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7478
  %16 = load i32* %15, align 8, !dbg !7478
  %17 = icmp uge i32 %16, 48, !dbg !7478
  br i1 %17, label %bb3, label %bb2, !dbg !7478

bb2:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 3, !dbg !7478
  %19 = load i8** %18, align 8, !dbg !7478
  %20 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7478
  %21 = load i32* %20, align 8, !dbg !7478
  %22 = inttoptr i32 %21 to i8*, !dbg !7478
  %23 = ptrtoint i8* %19 to i64, !dbg !7478
  %24 = ptrtoint i8* %22 to i64, !dbg !7478
  %25 = add i64 %23, %24, !dbg !7478
  %26 = inttoptr i64 %25 to i8*, !dbg !7478
  store i8* %26, i8** %addr.0, align 8, !dbg !7478
  %27 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7478
  %28 = load i32* %27, align 8, !dbg !7478
  %29 = add i32 %28, 8, !dbg !7478
  %30 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7478
  store i32 %29, i32* %30, align 8, !dbg !7478
  br label %bb4, !dbg !7478

bb3:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7478
  %32 = load i8** %31, align 8, !dbg !7478
  store i8* %32, i8** %addr.0, align 8, !dbg !7478
  %33 = getelementptr inbounds i8* %32, i64 8, !dbg !7478
  %34 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7478
  store i8* %33, i8** %34, align 8, !dbg !7478
  br label %bb4, !dbg !7478

bb4:                                              ; preds = %bb3, %bb2
  %35 = load i8** %addr.0, align 8, !dbg !7478
  %36 = bitcast i8* %35 to i32*, !dbg !7478
  %37 = load i32* %36, align 4, !dbg !7478
  %38 = load %union.argvalue_t** %p, align 8, !dbg !7478
  %39 = getelementptr inbounds %union.argvalue_t* %38, i32 0, i32 0, !dbg !7478
  %40 = bitcast x86_fp80* %39 to i32*, !dbg !7478
  store i32 %37, i32* %40, align 16, !dbg !7478
  %41 = load %union.argvalue_t** %p, align 8, !dbg !7478
  %42 = getelementptr inbounds %union.argvalue_t* %41, i32 0, i32 0, !dbg !7478
  %43 = bitcast x86_fp80* %42 to i32*, !dbg !7478
  %44 = load i32* %43, align 16, !dbg !7478
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7478
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 1, !dbg !7478
  %47 = getelementptr inbounds %struct.printf_info* %46, i32 0, i32 1, !dbg !7478
  store i32 %44, i32* %47, align 4, !dbg !7478
  br label %bb5, !dbg !7478

bb5:                                              ; preds = %bb4, %bb
  %48 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7479
  %49 = getelementptr inbounds %struct.ppfs_t* %48, i32 0, i32 1, !dbg !7479
  %50 = getelementptr inbounds %struct.printf_info* %49, i32 0, i32 0, !dbg !7479
  %51 = load i32* %50, align 8, !dbg !7479
  %52 = icmp eq i32 %51, -2147483648, !dbg !7479
  br i1 %52, label %bb6, label %bb10, !dbg !7479

bb6:                                              ; preds = %bb5
  %53 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7480
  %54 = getelementptr inbounds %struct.ppfs_t* %53, i32 0, i32 7, !dbg !7480
  %55 = bitcast [1 x %struct.__va_list_tag]* %54 to %struct.__va_list_tag*, !dbg !7480
  %56 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7480
  %57 = load i32* %56, align 8, !dbg !7480
  %58 = icmp uge i32 %57, 48, !dbg !7480
  br i1 %58, label %bb8, label %bb7, !dbg !7480

bb7:                                              ; preds = %bb6
  %59 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 3, !dbg !7480
  %60 = load i8** %59, align 8, !dbg !7480
  %61 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7480
  %62 = load i32* %61, align 8, !dbg !7480
  %63 = inttoptr i32 %62 to i8*, !dbg !7480
  %64 = ptrtoint i8* %60 to i64, !dbg !7480
  %65 = ptrtoint i8* %63 to i64, !dbg !7480
  %66 = add i64 %64, %65, !dbg !7480
  %67 = inttoptr i64 %66 to i8*, !dbg !7480
  store i8* %67, i8** %addr.2, align 8, !dbg !7480
  %68 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7480
  %69 = load i32* %68, align 8, !dbg !7480
  %70 = add i32 %69, 8, !dbg !7480
  %71 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7480
  store i32 %70, i32* %71, align 8, !dbg !7480
  br label %bb9, !dbg !7480

bb8:                                              ; preds = %bb6
  %72 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7480
  %73 = load i8** %72, align 8, !dbg !7480
  store i8* %73, i8** %addr.2, align 8, !dbg !7480
  %74 = getelementptr inbounds i8* %73, i64 8, !dbg !7480
  %75 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7480
  store i8* %74, i8** %75, align 8, !dbg !7480
  br label %bb9, !dbg !7480

bb9:                                              ; preds = %bb8, %bb7
  %76 = load i8** %addr.2, align 8, !dbg !7480
  %77 = bitcast i8* %76 to i32*, !dbg !7480
  %78 = load i32* %77, align 4, !dbg !7480
  %79 = load %union.argvalue_t** %p, align 8, !dbg !7480
  %80 = getelementptr inbounds %union.argvalue_t* %79, i32 0, i32 0, !dbg !7480
  %81 = bitcast x86_fp80* %80 to i32*, !dbg !7480
  store i32 %78, i32* %81, align 16, !dbg !7480
  %82 = load %union.argvalue_t** %p, align 8, !dbg !7480
  %83 = getelementptr inbounds %union.argvalue_t* %82, i32 0, i32 0, !dbg !7480
  %84 = bitcast x86_fp80* %83 to i32*, !dbg !7480
  %85 = load i32* %84, align 16, !dbg !7480
  %86 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7480
  %87 = getelementptr inbounds %struct.ppfs_t* %86, i32 0, i32 1, !dbg !7480
  %88 = getelementptr inbounds %struct.printf_info* %87, i32 0, i32 0, !dbg !7480
  store i32 %85, i32* %88, align 8, !dbg !7480
  br label %bb10, !dbg !7480

bb10:                                             ; preds = %bb9, %bb5
  store i32 0, i32* %i, align 4, !dbg !7481
  br label %bb39, !dbg !7481

bb11:                                             ; preds = %bb39
  %89 = load i32* %i, align 4, !dbg !7482
  %90 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7482
  %91 = getelementptr inbounds %struct.ppfs_t* %90, i32 0, i32 6, !dbg !7482
  %92 = sext i32 %89 to i64, !dbg !7482
  %93 = getelementptr inbounds [9 x i32]* %91, i64 0, i64 %92, !dbg !7482
  %94 = load i32* %93, align 4, !dbg !7482
  %95 = load i32* %i, align 4, !dbg !7482
  %96 = add nsw i32 %95, 1, !dbg !7482
  store i32 %96, i32* %i, align 4, !dbg !7482
  switch i32 %94, label %bb33 [
    i32 0, label %bb20
    i32 1, label %bb20
    i32 2, label %bb24
    i32 7, label %bb28
    i32 8, label %bb39
    i32 256, label %bb20
    i32 512, label %bb20
    i32 1024, label %bb16
    i32 2048, label %bb12
    i32 2055, label %bb32
  ], !dbg !7482

bb12:                                             ; preds = %bb11
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7483
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 7, !dbg !7483
  %99 = bitcast [1 x %struct.__va_list_tag]* %98 to %struct.__va_list_tag*, !dbg !7483
  %100 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7483
  %101 = load i32* %100, align 8, !dbg !7483
  %102 = icmp uge i32 %101, 48, !dbg !7483
  br i1 %102, label %bb14, label %bb13, !dbg !7483

bb13:                                             ; preds = %bb12
  %103 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 3, !dbg !7483
  %104 = load i8** %103, align 8, !dbg !7483
  %105 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7483
  %106 = load i32* %105, align 8, !dbg !7483
  %107 = inttoptr i32 %106 to i8*, !dbg !7483
  %108 = ptrtoint i8* %104 to i64, !dbg !7483
  %109 = ptrtoint i8* %107 to i64, !dbg !7483
  %110 = add i64 %108, %109, !dbg !7483
  %111 = inttoptr i64 %110 to i8*, !dbg !7483
  store i8* %111, i8** %addr.5, align 8, !dbg !7483
  %112 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7483
  %113 = load i32* %112, align 8, !dbg !7483
  %114 = add i32 %113, 8, !dbg !7483
  %115 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7483
  store i32 %114, i32* %115, align 8, !dbg !7483
  br label %bb15, !dbg !7483

bb14:                                             ; preds = %bb12
  %116 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7483
  %117 = load i8** %116, align 8, !dbg !7483
  store i8* %117, i8** %addr.5, align 8, !dbg !7483
  %118 = getelementptr inbounds i8* %117, i64 8, !dbg !7483
  %119 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7483
  store i8* %118, i8** %119, align 8, !dbg !7483
  br label %bb15, !dbg !7483

bb15:                                             ; preds = %bb14, %bb13
  %120 = load i8** %addr.5, align 8, !dbg !7483
  %121 = bitcast i8* %120 to i64*, !dbg !7483
  %122 = load i64* %121, align 8, !dbg !7483
  %123 = load %union.argvalue_t** %p, align 8, !dbg !7483
  %124 = getelementptr inbounds %union.argvalue_t* %123, i32 0, i32 0, !dbg !7483
  %125 = bitcast x86_fp80* %124 to i64*, !dbg !7483
  store i64 %122, i64* %125, align 16, !dbg !7483
  br label %bb38, !dbg !7483

bb16:                                             ; preds = %bb11
  %126 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7484
  %127 = getelementptr inbounds %struct.ppfs_t* %126, i32 0, i32 7, !dbg !7484
  %128 = bitcast [1 x %struct.__va_list_tag]* %127 to %struct.__va_list_tag*, !dbg !7484
  %129 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7484
  %130 = load i32* %129, align 8, !dbg !7484
  %131 = icmp uge i32 %130, 48, !dbg !7484
  br i1 %131, label %bb18, label %bb17, !dbg !7484

bb17:                                             ; preds = %bb16
  %132 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 3, !dbg !7484
  %133 = load i8** %132, align 8, !dbg !7484
  %134 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7484
  %135 = load i32* %134, align 8, !dbg !7484
  %136 = inttoptr i32 %135 to i8*, !dbg !7484
  %137 = ptrtoint i8* %133 to i64, !dbg !7484
  %138 = ptrtoint i8* %136 to i64, !dbg !7484
  %139 = add i64 %137, %138, !dbg !7484
  %140 = inttoptr i64 %139 to i8*, !dbg !7484
  store i8* %140, i8** %addr.7, align 8, !dbg !7484
  %141 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7484
  %142 = load i32* %141, align 8, !dbg !7484
  %143 = add i32 %142, 8, !dbg !7484
  %144 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7484
  store i32 %143, i32* %144, align 8, !dbg !7484
  br label %bb19, !dbg !7484

bb18:                                             ; preds = %bb16
  %145 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7484
  %146 = load i8** %145, align 8, !dbg !7484
  store i8* %146, i8** %addr.7, align 8, !dbg !7484
  %147 = getelementptr inbounds i8* %146, i64 8, !dbg !7484
  %148 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7484
  store i8* %147, i8** %148, align 8, !dbg !7484
  br label %bb19, !dbg !7484

bb19:                                             ; preds = %bb18, %bb17
  %149 = load i8** %addr.7, align 8, !dbg !7484
  %150 = bitcast i8* %149 to i64*, !dbg !7484
  %151 = load i64* %150, align 8, !dbg !7484
  %152 = load %union.argvalue_t** %p, align 8, !dbg !7484
  %153 = getelementptr inbounds %union.argvalue_t* %152, i32 0, i32 0, !dbg !7484
  %154 = bitcast x86_fp80* %153 to i64*, !dbg !7484
  store i64 %151, i64* %154, align 16, !dbg !7484
  br label %bb38, !dbg !7484

bb20:                                             ; preds = %bb11, %bb11, %bb11, %bb11
  %155 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7485
  %156 = getelementptr inbounds %struct.ppfs_t* %155, i32 0, i32 7, !dbg !7485
  %157 = bitcast [1 x %struct.__va_list_tag]* %156 to %struct.__va_list_tag*, !dbg !7485
  %158 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7485
  %159 = load i32* %158, align 8, !dbg !7485
  %160 = icmp uge i32 %159, 48, !dbg !7485
  br i1 %160, label %bb22, label %bb21, !dbg !7485

bb21:                                             ; preds = %bb20
  %161 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 3, !dbg !7485
  %162 = load i8** %161, align 8, !dbg !7485
  %163 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7485
  %164 = load i32* %163, align 8, !dbg !7485
  %165 = inttoptr i32 %164 to i8*, !dbg !7485
  %166 = ptrtoint i8* %162 to i64, !dbg !7485
  %167 = ptrtoint i8* %165 to i64, !dbg !7485
  %168 = add i64 %166, %167, !dbg !7485
  %169 = inttoptr i64 %168 to i8*, !dbg !7485
  store i8* %169, i8** %addr.9, align 8, !dbg !7485
  %170 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7485
  %171 = load i32* %170, align 8, !dbg !7485
  %172 = add i32 %171, 8, !dbg !7485
  %173 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7485
  store i32 %172, i32* %173, align 8, !dbg !7485
  br label %bb23, !dbg !7485

bb22:                                             ; preds = %bb20
  %174 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7485
  %175 = load i8** %174, align 8, !dbg !7485
  store i8* %175, i8** %addr.9, align 8, !dbg !7485
  %176 = getelementptr inbounds i8* %175, i64 8, !dbg !7485
  %177 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7485
  store i8* %176, i8** %177, align 8, !dbg !7485
  br label %bb23, !dbg !7485

bb23:                                             ; preds = %bb22, %bb21
  %178 = load i8** %addr.9, align 8, !dbg !7485
  %179 = bitcast i8* %178 to i32*, !dbg !7485
  %180 = load i32* %179, align 4, !dbg !7485
  %181 = load %union.argvalue_t** %p, align 8, !dbg !7485
  %182 = getelementptr inbounds %union.argvalue_t* %181, i32 0, i32 0, !dbg !7485
  %183 = bitcast x86_fp80* %182 to i32*, !dbg !7485
  store i32 %180, i32* %183, align 16, !dbg !7485
  br label %bb38, !dbg !7485

bb24:                                             ; preds = %bb11
  %184 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7486
  %185 = getelementptr inbounds %struct.ppfs_t* %184, i32 0, i32 7, !dbg !7486
  %186 = bitcast [1 x %struct.__va_list_tag]* %185 to %struct.__va_list_tag*, !dbg !7486
  %187 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7486
  %188 = load i32* %187, align 8, !dbg !7486
  %189 = icmp uge i32 %188, 48, !dbg !7486
  br i1 %189, label %bb26, label %bb25, !dbg !7486

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 3, !dbg !7486
  %191 = load i8** %190, align 8, !dbg !7486
  %192 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7486
  %193 = load i32* %192, align 8, !dbg !7486
  %194 = inttoptr i32 %193 to i8*, !dbg !7486
  %195 = ptrtoint i8* %191 to i64, !dbg !7486
  %196 = ptrtoint i8* %194 to i64, !dbg !7486
  %197 = add i64 %195, %196, !dbg !7486
  %198 = inttoptr i64 %197 to i8*, !dbg !7486
  store i8* %198, i8** %addr.11, align 8, !dbg !7486
  %199 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7486
  %200 = load i32* %199, align 8, !dbg !7486
  %201 = add i32 %200, 8, !dbg !7486
  %202 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7486
  store i32 %201, i32* %202, align 8, !dbg !7486
  br label %bb27, !dbg !7486

bb26:                                             ; preds = %bb24
  %203 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7486
  %204 = load i8** %203, align 8, !dbg !7486
  store i8* %204, i8** %addr.11, align 8, !dbg !7486
  %205 = getelementptr inbounds i8* %204, i64 8, !dbg !7486
  %206 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7486
  store i8* %205, i8** %206, align 8, !dbg !7486
  br label %bb27, !dbg !7486

bb27:                                             ; preds = %bb26, %bb25
  %207 = load i8** %addr.11, align 8, !dbg !7486
  %208 = bitcast i8* %207 to i32*, !dbg !7486
  %209 = load i32* %208, align 4, !dbg !7486
  %210 = load %union.argvalue_t** %p, align 8, !dbg !7486
  %211 = getelementptr inbounds %union.argvalue_t* %210, i32 0, i32 0, !dbg !7486
  %212 = bitcast x86_fp80* %211 to i32*, !dbg !7486
  store i32 %209, i32* %212, align 16, !dbg !7486
  br label %bb38, !dbg !7486

bb28:                                             ; preds = %bb11
  %213 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7487
  %214 = getelementptr inbounds %struct.ppfs_t* %213, i32 0, i32 7, !dbg !7487
  %215 = bitcast [1 x %struct.__va_list_tag]* %214 to %struct.__va_list_tag*, !dbg !7487
  %216 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7487
  %217 = load i32* %216, align 4, !dbg !7487
  %218 = icmp uge i32 %217, 176, !dbg !7487
  br i1 %218, label %bb30, label %bb29, !dbg !7487

bb29:                                             ; preds = %bb28
  %219 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 3, !dbg !7487
  %220 = load i8** %219, align 8, !dbg !7487
  %221 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7487
  %222 = load i32* %221, align 4, !dbg !7487
  %223 = inttoptr i32 %222 to i8*, !dbg !7487
  %224 = ptrtoint i8* %220 to i64, !dbg !7487
  %225 = ptrtoint i8* %223 to i64, !dbg !7487
  %226 = add i64 %224, %225, !dbg !7487
  %227 = inttoptr i64 %226 to i8*, !dbg !7487
  store i8* %227, i8** %addr.13, align 8, !dbg !7487
  %228 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7487
  %229 = load i32* %228, align 4, !dbg !7487
  %230 = add i32 %229, 16, !dbg !7487
  %231 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7487
  store i32 %230, i32* %231, align 4, !dbg !7487
  br label %bb31, !dbg !7487

bb30:                                             ; preds = %bb28
  %232 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7487
  %233 = load i8** %232, align 8, !dbg !7487
  store i8* %233, i8** %addr.13, align 8, !dbg !7487
  %234 = getelementptr inbounds i8* %233, i64 8, !dbg !7487
  %235 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7487
  store i8* %234, i8** %235, align 8, !dbg !7487
  br label %bb31, !dbg !7487

bb31:                                             ; preds = %bb30, %bb29
  %236 = load i8** %addr.13, align 8, !dbg !7487
  %237 = bitcast i8* %236 to double*, !dbg !7487
  %238 = load double* %237, align 8, !dbg !7487
  %239 = load %union.argvalue_t** %p, align 8, !dbg !7487
  %240 = getelementptr inbounds %union.argvalue_t* %239, i32 0, i32 0, !dbg !7487
  %241 = bitcast x86_fp80* %240 to double*, !dbg !7487
  store double %238, double* %241, align 16, !dbg !7487
  br label %bb38, !dbg !7487

bb32:                                             ; preds = %bb11
  %242 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7488
  %243 = getelementptr inbounds %struct.ppfs_t* %242, i32 0, i32 7, !dbg !7488
  %244 = bitcast [1 x %struct.__va_list_tag]* %243 to %struct.__va_list_tag*, !dbg !7488
  %245 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7488
  %246 = load i8** %245, align 8, !dbg !7488
  %247 = getelementptr inbounds i8* %246, i64 15, !dbg !7488
  %248 = ptrtoint i8* %247 to i64, !dbg !7488
  %249 = and i64 %248, -16, !dbg !7488
  %250 = inttoptr i64 %249 to i8*, !dbg !7488
  store i8* %250, i8** %addr.15, align 8, !dbg !7488
  %251 = getelementptr inbounds i8* %250, i64 16, !dbg !7488
  %252 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7488
  store i8* %251, i8** %252, align 8, !dbg !7488
  %253 = load i8** %addr.15, align 8, !dbg !7488
  %254 = bitcast i8* %253 to x86_fp80*, !dbg !7488
  %255 = load x86_fp80* %254, align 16, !dbg !7488
  %256 = load %union.argvalue_t** %p, align 8, !dbg !7488
  %257 = getelementptr inbounds %union.argvalue_t* %256, i32 0, i32 0, !dbg !7488
  store x86_fp80 %255, x86_fp80* %257, align 16, !dbg !7488
  br label %bb38, !dbg !7488

bb33:                                             ; preds = %bb11
  %258 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7489
  %259 = getelementptr inbounds %struct.ppfs_t* %258, i32 0, i32 7, !dbg !7489
  %260 = bitcast [1 x %struct.__va_list_tag]* %259 to %struct.__va_list_tag*, !dbg !7489
  %261 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7489
  %262 = load i32* %261, align 8, !dbg !7489
  %263 = icmp uge i32 %262, 48, !dbg !7489
  br i1 %263, label %bb35, label %bb34, !dbg !7489

bb34:                                             ; preds = %bb33
  %264 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 3, !dbg !7489
  %265 = load i8** %264, align 8, !dbg !7489
  %266 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7489
  %267 = load i32* %266, align 8, !dbg !7489
  %268 = inttoptr i32 %267 to i8*, !dbg !7489
  %269 = ptrtoint i8* %265 to i64, !dbg !7489
  %270 = ptrtoint i8* %268 to i64, !dbg !7489
  %271 = add i64 %269, %270, !dbg !7489
  %272 = inttoptr i64 %271 to i8*, !dbg !7489
  store i8* %272, i8** %addr.17, align 8, !dbg !7489
  %273 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7489
  %274 = load i32* %273, align 8, !dbg !7489
  %275 = add i32 %274, 8, !dbg !7489
  %276 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7489
  store i32 %275, i32* %276, align 8, !dbg !7489
  br label %bb36, !dbg !7489

bb35:                                             ; preds = %bb33
  %277 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7489
  %278 = load i8** %277, align 8, !dbg !7489
  store i8* %278, i8** %addr.17, align 8, !dbg !7489
  %279 = getelementptr inbounds i8* %278, i64 8, !dbg !7489
  %280 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7489
  store i8* %279, i8** %280, align 8, !dbg !7489
  br label %bb36, !dbg !7489

bb36:                                             ; preds = %bb35, %bb34
  %281 = load i8** %addr.17, align 8, !dbg !7489
  %282 = bitcast i8* %281 to i8**, !dbg !7489
  %283 = load i8** %282, align 8, !dbg !7489
  %284 = load %union.argvalue_t** %p, align 8, !dbg !7489
  %285 = getelementptr inbounds %union.argvalue_t* %284, i32 0, i32 0, !dbg !7489
  %286 = bitcast x86_fp80* %285 to i8**, !dbg !7489
  store i8* %283, i8** %286, align 16, !dbg !7489
  br label %bb38, !dbg !7489

bb38:                                             ; preds = %bb36, %bb32, %bb31, %bb27, %bb23, %bb19, %bb15
  %287 = load %union.argvalue_t** %p, align 8, !dbg !7490
  %288 = getelementptr inbounds %union.argvalue_t* %287, i64 1, !dbg !7490
  store %union.argvalue_t* %288, %union.argvalue_t** %p, align 8, !dbg !7490
  br label %bb39, !dbg !7490

bb39:                                             ; preds = %bb11, %bb38, %bb10
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7491
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7491
  %291 = load i32* %290, align 16, !dbg !7491
  %292 = load i32* %i, align 4, !dbg !7491
  %293 = icmp sgt i32 %291, %292, !dbg !7491
  br i1 %293, label %bb11, label %bb45, !dbg !7491

bb41:                                             ; preds = %entry
  br i1 %11, label %bb42, label %bb43, !dbg !7492

bb42:                                             ; preds = %bb41
  %294 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7493
  %295 = getelementptr inbounds %struct.ppfs_t* %294, i32 0, i32 5, !dbg !7493
  %296 = getelementptr inbounds [4 x i8]* %295, i64 0, i64 0, !dbg !7493
  %297 = load i8* %296, align 1, !dbg !7493
  %298 = zext i8 %297 to i32, !dbg !7493
  %299 = load %union.argvalue_t** %p, align 8, !dbg !7493
  %300 = sext i32 %298 to i64, !dbg !7493
  %301 = getelementptr inbounds %union.argvalue_t* %299, i64 %300, !dbg !7493
  %302 = getelementptr inbounds %union.argvalue_t* %301, i64 -1, !dbg !7493
  %303 = getelementptr inbounds %union.argvalue_t* %302, i32 0, i32 0, !dbg !7493
  %304 = bitcast x86_fp80* %303 to i32*, !dbg !7493
  %305 = load i32* %304, align 16, !dbg !7493
  %306 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7493
  %307 = getelementptr inbounds %struct.ppfs_t* %306, i32 0, i32 1, !dbg !7493
  %308 = getelementptr inbounds %struct.printf_info* %307, i32 0, i32 1, !dbg !7493
  store i32 %305, i32* %308, align 4, !dbg !7493
  br label %bb43, !dbg !7493

bb43:                                             ; preds = %bb42, %bb41
  %309 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7494
  %310 = getelementptr inbounds %struct.ppfs_t* %309, i32 0, i32 1, !dbg !7494
  %311 = getelementptr inbounds %struct.printf_info* %310, i32 0, i32 0, !dbg !7494
  %312 = load i32* %311, align 8, !dbg !7494
  %313 = icmp eq i32 %312, -2147483648, !dbg !7494
  br i1 %313, label %bb44, label %bb45, !dbg !7494

bb44:                                             ; preds = %bb43
  %314 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7495
  %315 = getelementptr inbounds %struct.ppfs_t* %314, i32 0, i32 5, !dbg !7495
  %316 = getelementptr inbounds [4 x i8]* %315, i64 0, i64 1, !dbg !7495
  %317 = load i8* %316, align 1, !dbg !7495
  %318 = zext i8 %317 to i32, !dbg !7495
  %319 = load %union.argvalue_t** %p, align 8, !dbg !7495
  %320 = sext i32 %318 to i64, !dbg !7495
  %321 = getelementptr inbounds %union.argvalue_t* %319, i64 %320, !dbg !7495
  %322 = getelementptr inbounds %union.argvalue_t* %321, i64 -1, !dbg !7495
  %323 = getelementptr inbounds %union.argvalue_t* %322, i32 0, i32 0, !dbg !7495
  %324 = bitcast x86_fp80* %323 to i32*, !dbg !7495
  %325 = load i32* %324, align 16, !dbg !7495
  %326 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7495
  %327 = getelementptr inbounds %struct.ppfs_t* %326, i32 0, i32 1, !dbg !7495
  %328 = getelementptr inbounds %struct.printf_info* %327, i32 0, i32 0, !dbg !7495
  store i32 %325, i32* %328, align 8, !dbg !7495
  br label %bb45, !dbg !7495

bb45:                                             ; preds = %bb39, %bb44, %bb43
  %329 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7496
  %330 = getelementptr inbounds %struct.ppfs_t* %329, i32 0, i32 1, !dbg !7496
  %331 = getelementptr inbounds %struct.printf_info* %330, i32 0, i32 1, !dbg !7496
  %332 = load i32* %331, align 4, !dbg !7496
  %333 = icmp slt i32 %332, 0, !dbg !7496
  br i1 %333, label %bb46, label %return, !dbg !7496

bb46:                                             ; preds = %bb45
  %334 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7497
  %335 = getelementptr inbounds %struct.ppfs_t* %334, i32 0, i32 1, !dbg !7497
  %336 = getelementptr inbounds %struct.printf_info* %335, i32 0, i32 1, !dbg !7497
  %337 = load i32* %336, align 4, !dbg !7497
  %338 = sub nsw i32 0, %337, !dbg !7497
  %339 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7497
  %340 = getelementptr inbounds %struct.ppfs_t* %339, i32 0, i32 1, !dbg !7497
  %341 = getelementptr inbounds %struct.printf_info* %340, i32 0, i32 1, !dbg !7497
  store i32 %338, i32* %341, align 4, !dbg !7497
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7498
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !7498
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 3, !dbg !7498
  %345 = load i32* %344, align 4, !dbg !7498
  %346 = or i32 %345, 8, !dbg !7498
  %347 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7498
  %348 = getelementptr inbounds %struct.ppfs_t* %347, i32 0, i32 1, !dbg !7498
  %349 = getelementptr inbounds %struct.printf_info* %348, i32 0, i32 3, !dbg !7498
  store i32 %346, i32* %349, align 4, !dbg !7498
  %350 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7499
  %351 = getelementptr inbounds %struct.ppfs_t* %350, i32 0, i32 1, !dbg !7499
  %352 = getelementptr inbounds %struct.printf_info* %351, i32 0, i32 3, !dbg !7499
  %353 = load i32* %352, align 4, !dbg !7499
  %354 = and i32 %353, -2, !dbg !7499
  %355 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7499
  %356 = getelementptr inbounds %struct.ppfs_t* %355, i32 0, i32 1, !dbg !7499
  %357 = getelementptr inbounds %struct.printf_info* %356, i32 0, i32 3, !dbg !7499
  store i32 %354, i32* %357, align 4, !dbg !7499
  %358 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7500
  %359 = getelementptr inbounds %struct.ppfs_t* %358, i32 0, i32 1, !dbg !7500
  %360 = getelementptr inbounds %struct.printf_info* %359, i32 0, i32 4, !dbg !7500
  store i32 32, i32* %360, align 8, !dbg !7500
  br label %return, !dbg !7500

return:                                           ; preds = %bb45, %bb46
  ret void, !dbg !7501
}

define hidden i8* @_uintmaxtostr(i8* noalias %bufend, i64 %uval, i32 %base, i32 %alphacase) nounwind {
entry:
  %bufend_addr = alloca i8*, align 8
  %uval_addr = alloca i64, align 8
  %base_addr = alloca i32, align 4
  %alphacase_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.12 = alloca i8
  %negative = alloca i32
  %digit = alloca i32
  %H = alloca i32
  %L = alloca i32
  %high = alloca i32
  %low = alloca i32
  %rh = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %bufend, i8** %bufend_addr
  store i64 %uval, i64* %uval_addr
  store i32 %base, i32* %base_addr
  store i32 %alphacase, i32* %alphacase_addr
  store i32 0, i32* %negative, align 4, !dbg !7502
  %1 = load i32* %base_addr, align 4, !dbg !7504
  %2 = icmp slt i32 %1, 0, !dbg !7504
  br i1 %2, label %bb, label %bb2, !dbg !7504

bb:                                               ; preds = %entry
  %3 = load i32* %base_addr, align 4, !dbg !7505
  %4 = sub nsw i32 0, %3, !dbg !7505
  store i32 %4, i32* %base_addr, align 4, !dbg !7505
  %5 = load i64* %uval_addr, align 8, !dbg !7506
  %6 = icmp slt i64 %5, 0, !dbg !7506
  br i1 %6, label %bb1, label %bb2, !dbg !7506

bb1:                                              ; preds = %bb
  %7 = load i64* %uval_addr, align 8, !dbg !7507
  %8 = sub i64 0, %7, !dbg !7507
  store i64 %8, i64* %uval_addr, align 8, !dbg !7507
  store i32 1, i32* %negative, align 4, !dbg !7508
  br label %bb2, !dbg !7508

bb2:                                              ; preds = %bb1, %bb, %entry
  %9 = load i8** %bufend_addr, align 8, !dbg !7509
  store i8 0, i8* %9, align 1, !dbg !7509
  %10 = load i32* %base_addr, align 4, !dbg !7510
  %int_cast_to_i64 = zext i32 %10 to i64
  %11 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %12 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %12, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %13 = udiv i32 -1, %10, !dbg !7510
  store i32 %13, i32* %H, align 4, !dbg !7510
  %14 = load i32* %base_addr, align 4, !dbg !7511
  %int_cast_to_i641 = zext i32 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %16, label %bb.i11, label %klee_div_zero_check.exit12

bb.i11:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit12:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %17 = urem i32 -1, %14, !dbg !7511
  %18 = add i32 %17, 1, !dbg !7511
  store i32 %18, i32* %L, align 4, !dbg !7511
  %19 = load i32* %base_addr, align 4, !dbg !7512
  %20 = load i32* %L, align 4, !dbg !7512
  %21 = icmp eq i32 %19, %20, !dbg !7512
  br i1 %21, label %bb3, label %bb4, !dbg !7512

bb3:                                              ; preds = %klee_div_zero_check.exit12
  %22 = load i32* %H, align 4, !dbg !7513
  %23 = add i32 %22, 1, !dbg !7513
  store i32 %23, i32* %H, align 4, !dbg !7513
  store i32 0, i32* %L, align 4, !dbg !7514
  br label %bb4, !dbg !7514

bb4:                                              ; preds = %bb3, %klee_div_zero_check.exit12
  %24 = load i64* %uval_addr, align 8, !dbg !7515
  %25 = trunc i64 %24 to i32, !dbg !7515
  store i32 %25, i32* %low, align 4, !dbg !7515
  %26 = load i64* %uval_addr, align 8, !dbg !7516
  %int_cast_to_i6410 = bitcast i64 32 to i64
  %27 = icmp ult i64 %int_cast_to_i6410, 64
  br i1 %27, label %klee_overshift_check.exit, label %bb.i29

bb.i29:                                           ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb4
  %28 = lshr i64 %26, 32, !dbg !7516
  %29 = trunc i64 %28 to i32, !dbg !7516
  store i32 %29, i32* %high, align 4, !dbg !7516
  br label %bb5, !dbg !7516

bb5:                                              ; preds = %bb11, %klee_overshift_check.exit
  %30 = load i32* %high, align 4, !dbg !7517
  %31 = icmp ne i32 %30, 0, !dbg !7517
  %32 = zext i1 %31 to i64, !dbg !7517
  %33 = icmp ne i64 %32, 0, !dbg !7517
  %34 = load i32* %base_addr, align 4, !dbg !7518
  br i1 %33, label %bb6, label %bb7, !dbg !7517

bb6:                                              ; preds = %bb5
  %35 = load i32* %high, align 4, !dbg !7518
  %int_cast_to_i642 = zext i32 %34 to i64
  %36 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %37 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %37, label %bb.i13, label %klee_div_zero_check.exit14

bb.i13:                                           ; preds = %bb6
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit14:                       ; preds = %bb6
  call void @klee_disable_symbex() nounwind
  %38 = urem i32 %35, %34, !dbg !7518
  store i32 %38, i32* %rh, align 4, !dbg !7518
  %39 = load i32* %base_addr, align 4, !dbg !7519
  %40 = load i32* %high, align 4, !dbg !7519
  %int_cast_to_i643 = zext i32 %39 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %42, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit14
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit14
  call void @klee_disable_symbex() nounwind
  %43 = udiv i32 %40, %39, !dbg !7519
  store i32 %43, i32* %high, align 4, !dbg !7519
  %44 = load i32* %base_addr, align 4, !dbg !7520
  %45 = load i32* %low, align 4, !dbg !7520
  %int_cast_to_i644 = zext i32 %44 to i64
  %46 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %47 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %47, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %klee_div_zero_check.exit16
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %klee_div_zero_check.exit16
  call void @klee_disable_symbex() nounwind
  %48 = urem i32 %45, %44, !dbg !7520
  %49 = load i32* %L, align 4, !dbg !7520
  %50 = load i32* %rh, align 4, !dbg !7520
  %51 = mul i32 %49, %50, !dbg !7520
  %52 = add i32 %48, %51, !dbg !7520
  store i32 %52, i32* %digit, align 4, !dbg !7520
  %53 = load i32* %base_addr, align 4, !dbg !7521
  %54 = load i32* %low, align 4, !dbg !7521
  %int_cast_to_i645 = zext i32 %53 to i64
  %55 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %56 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %56, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %57 = udiv i32 %54, %53, !dbg !7521
  %58 = load i32* %H, align 4, !dbg !7521
  %59 = load i32* %rh, align 4, !dbg !7521
  %60 = mul i32 %58, %59, !dbg !7521
  %61 = add i32 %57, %60, !dbg !7521
  %62 = load i32* %base_addr, align 4, !dbg !7521
  %63 = load i32* %digit, align 4, !dbg !7521
  %int_cast_to_i646 = zext i32 %62 to i64
  %64 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %65 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %65, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %klee_div_zero_check.exit20
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %klee_div_zero_check.exit20
  call void @klee_disable_symbex() nounwind
  %66 = udiv i32 %63, %62, !dbg !7521
  %67 = add i32 %61, %66, !dbg !7521
  store i32 %67, i32* %low, align 4, !dbg !7521
  %68 = load i32* %base_addr, align 4, !dbg !7522
  %69 = load i32* %digit, align 4, !dbg !7522
  %int_cast_to_i647 = zext i32 %68 to i64
  %70 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %71 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %71, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %klee_div_zero_check.exit22
  call void @klee_disable_symbex() nounwind
  %72 = urem i32 %69, %68, !dbg !7522
  store i32 %72, i32* %digit, align 4, !dbg !7522
  br label %bb8, !dbg !7522

bb7:                                              ; preds = %bb5
  %73 = load i32* %low, align 4, !dbg !7523
  %int_cast_to_i648 = zext i32 %34 to i64
  %74 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %75 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %75, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb7
  call void @klee_disable_symbex() nounwind
  %76 = urem i32 %73, %34, !dbg !7523
  store i32 %76, i32* %digit, align 4, !dbg !7523
  %77 = load i32* %base_addr, align 4, !dbg !7524
  %78 = load i32* %low, align 4, !dbg !7524
  %int_cast_to_i649 = zext i32 %77 to i64
  %79 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %80 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %80, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %klee_div_zero_check.exit26
  call void @klee_disable_symbex() nounwind
  %81 = udiv i32 %78, %77, !dbg !7524
  store i32 %81, i32* %low, align 4, !dbg !7524
  br label %bb8, !dbg !7524

bb8:                                              ; preds = %klee_div_zero_check.exit28, %klee_div_zero_check.exit24
  %82 = load i8** %bufend_addr, align 8, !dbg !7525
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !7525
  store i8* %83, i8** %bufend_addr, align 8, !dbg !7525
  %84 = load i32* %digit, align 4, !dbg !7525
  %85 = icmp ule i32 %84, 9, !dbg !7525
  %86 = load i32* %digit, align 4, !dbg !7525
  %87 = trunc i32 %86 to i8, !dbg !7525
  br i1 %85, label %bb9, label %bb10, !dbg !7525

bb9:                                              ; preds = %bb8
  %88 = add i8 %87, 48, !dbg !7525
  store i8 %88, i8* %iftmp.12, align 1, !dbg !7525
  br label %bb11, !dbg !7525

bb10:                                             ; preds = %bb8
  %89 = load i32* %alphacase_addr, align 4, !dbg !7525
  %90 = trunc i32 %89 to i8, !dbg !7525
  %91 = add i8 %87, %90, !dbg !7525
  store i8 %91, i8* %iftmp.12, align 1, !dbg !7525
  br label %bb11, !dbg !7525

bb11:                                             ; preds = %bb10, %bb9
  %92 = load i8** %bufend_addr, align 8, !dbg !7525
  %93 = load i8* %iftmp.12, align 1, !dbg !7525
  store i8 %93, i8* %92, align 1, !dbg !7525
  %94 = load i32* %low, align 4, !dbg !7526
  %95 = load i32* %high, align 4, !dbg !7526
  %96 = or i32 %94, %95, !dbg !7526
  %97 = icmp ne i32 %96, 0, !dbg !7526
  br i1 %97, label %bb5, label %bb12, !dbg !7526

bb12:                                             ; preds = %bb11
  %98 = load i32* %negative, align 4, !dbg !7527
  %99 = icmp ne i32 %98, 0, !dbg !7527
  br i1 %99, label %bb13, label %bb14, !dbg !7527

bb13:                                             ; preds = %bb12
  %100 = load i8** %bufend_addr, align 8, !dbg !7528
  %101 = getelementptr inbounds i8* %100, i64 -1, !dbg !7528
  store i8* %101, i8** %bufend_addr, align 8, !dbg !7528
  %102 = load i8** %bufend_addr, align 8, !dbg !7528
  store i8 45, i8* %102, align 1, !dbg !7528
  br label %bb14, !dbg !7528

bb14:                                             ; preds = %bb13, %bb12
  %103 = load i8** %bufend_addr, align 8, !dbg !7529
  store i8* %103, i8** %0, align 8, !dbg !7529
  %104 = load i8** %0, align 8, !dbg !7529
  store i8* %104, i8** %retval, align 8, !dbg !7529
  %retval15 = load i8** %retval, !dbg !7529
  ret i8* %retval15, !dbg !7529
}

define i64 @strnlen(i8* %s, i64 %max) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %max_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i64 %max, i64* %max_addr
  %1 = load i8** %s_addr, align 8, !dbg !7530
  store i8* %1, i8** %p, align 8, !dbg !7530
  br label %bb1, !dbg !7530

bb:                                               ; preds = %bb2
  %2 = load i8** %p, align 8, !dbg !7532
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !7532
  store i8* %3, i8** %p, align 8, !dbg !7532
  %4 = load i64* %max_addr, align 8, !dbg !7533
  %5 = sub i64 %4, 1, !dbg !7533
  store i64 %5, i64* %max_addr, align 8, !dbg !7533
  br label %bb1, !dbg !7533

bb1:                                              ; preds = %bb, %entry
  %6 = load i64* %max_addr, align 8, !dbg !7534
  %7 = icmp eq i64 %6, 0, !dbg !7534
  br i1 %7, label %bb3, label %bb2, !dbg !7534

bb2:                                              ; preds = %bb1
  %8 = load i8** %p, align 8, !dbg !7534
  %9 = load i8* %8, align 1, !dbg !7534
  %10 = icmp ne i8 %9, 0, !dbg !7534
  br i1 %10, label %bb, label %bb3, !dbg !7534

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %p, align 8, !dbg !7535
  %12 = ptrtoint i8* %11 to i64, !dbg !7535
  %13 = load i8** %s_addr, align 8, !dbg !7535
  %14 = ptrtoint i8* %13 to i64, !dbg !7535
  %15 = sub nsw i64 %12, %14, !dbg !7535
  store i64 %15, i64* %0, align 8, !dbg !7535
  %16 = load i64* %0, align 8, !dbg !7535
  store i64 %16, i64* %retval, align 8, !dbg !7535
  %retval4 = load i64* %retval, !dbg !7535
  ret i64 %retval4, !dbg !7535
}

define i8* @strpbrk(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !7536
  store i8* %1, i8** %s, align 8, !dbg !7536
  br label %bb6, !dbg !7536

bb:                                               ; preds = %bb6
  %2 = load i8** %s2_addr, align 8, !dbg !7538
  store i8* %2, i8** %p, align 8, !dbg !7538
  br label %bb4, !dbg !7538

bb1:                                              ; preds = %bb4
  %3 = load i8** %p, align 8, !dbg !7539
  %4 = load i8* %3, align 1, !dbg !7539
  %5 = load i8** %s, align 8, !dbg !7539
  %6 = load i8* %5, align 1, !dbg !7539
  %7 = icmp eq i8 %4, %6, !dbg !7539
  br i1 %7, label %bb2, label %bb3, !dbg !7539

bb2:                                              ; preds = %bb1
  %8 = load i8** %s, align 8, !dbg !7539
  store i8* %8, i8** %0, align 8, !dbg !7539
  br label %bb8, !dbg !7539

bb3:                                              ; preds = %bb1
  %9 = load i8** %p, align 8, !dbg !7538
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !7538
  store i8* %10, i8** %p, align 8, !dbg !7538
  br label %bb4, !dbg !7538

bb4:                                              ; preds = %bb3, %bb
  %11 = load i8** %p, align 8, !dbg !7538
  %12 = load i8* %11, align 1, !dbg !7538
  %13 = icmp ne i8 %12, 0, !dbg !7538
  br i1 %13, label %bb1, label %bb5, !dbg !7538

bb5:                                              ; preds = %bb4
  %14 = load i8** %s, align 8, !dbg !7536
  %15 = getelementptr inbounds i8* %14, i64 1, !dbg !7536
  store i8* %15, i8** %s, align 8, !dbg !7536
  br label %bb6, !dbg !7536

bb6:                                              ; preds = %bb5, %entry
  %16 = load i8** %s, align 8, !dbg !7536
  %17 = load i8* %16, align 1, !dbg !7536
  %18 = icmp ne i8 %17, 0, !dbg !7536
  br i1 %18, label %bb, label %bb7, !dbg !7536

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8, !dbg !7540
  br label %bb8, !dbg !7540

bb8:                                              ; preds = %bb7, %bb2
  %19 = load i8** %0, align 8, !dbg !7539
  store i8* %19, i8** %retval, align 8, !dbg !7539
  %retval9 = load i8** %retval, !dbg !7539
  ret i8* %retval9, !dbg !7539
}

define i64 @strtol(i8* noalias %str, i8** noalias %endptr, i32 %base) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  %1 = load i8** %str_addr, align 8, !dbg !7541
  %2 = load i8*** %endptr_addr, align 8, !dbg !7541
  %3 = load i32* %base_addr, align 4, !dbg !7541
  %4 = call i64 @_stdlib_strto_l(i8* noalias %1, i8** noalias %2, i32 %3, i32 1) nounwind, !dbg !7541
  store i64 %4, i64* %0, align 8, !dbg !7541
  %5 = load i64* %0, align 8, !dbg !7541
  store i64 %5, i64* %retval, align 8, !dbg !7541
  %retval1 = load i64* %retval, !dbg !7541
  ret i64 %retval1, !dbg !7541
}

define i32 @tcgetattr(i32 %fd, %struct.termios* %termios_p) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %termios_p_addr = alloca %struct.termios*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %k_termios = alloca %struct.__kernel_termios
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store %struct.termios* %termios_p, %struct.termios** %termios_p_addr
  %1 = load i32* %fd_addr, align 4, !dbg !7543
  %2 = call i32 (i32, i64, ...)* @ioctl(i32 %1, i64 21505, %struct.__kernel_termios* %k_termios) nounwind, !dbg !7543
  store i32 %2, i32* %retval1, align 4, !dbg !7543
  %3 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !7545
  %4 = load i32* %3, align 4, !dbg !7545
  %5 = load %struct.termios** %termios_p_addr, align 8, !dbg !7545
  %6 = getelementptr inbounds %struct.termios* %5, i32 0, i32 0, !dbg !7545
  store i32 %4, i32* %6, align 4, !dbg !7545
  %7 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !7546
  %8 = load i32* %7, align 4, !dbg !7546
  %9 = load %struct.termios** %termios_p_addr, align 8, !dbg !7546
  %10 = getelementptr inbounds %struct.termios* %9, i32 0, i32 1, !dbg !7546
  store i32 %8, i32* %10, align 4, !dbg !7546
  %11 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !7547
  %12 = load i32* %11, align 4, !dbg !7547
  %13 = load %struct.termios** %termios_p_addr, align 8, !dbg !7547
  %14 = getelementptr inbounds %struct.termios* %13, i32 0, i32 2, !dbg !7547
  store i32 %12, i32* %14, align 4, !dbg !7547
  %15 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !7548
  %16 = load i32* %15, align 4, !dbg !7548
  %17 = load %struct.termios** %termios_p_addr, align 8, !dbg !7548
  %18 = getelementptr inbounds %struct.termios* %17, i32 0, i32 3, !dbg !7548
  store i32 %16, i32* %18, align 4, !dbg !7548
  %19 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !7549
  %20 = load i8* %19, align 4, !dbg !7549
  %21 = load %struct.termios** %termios_p_addr, align 8, !dbg !7549
  %22 = getelementptr inbounds %struct.termios* %21, i32 0, i32 4, !dbg !7549
  store i8 %20, i8* %22, align 4, !dbg !7549
  %23 = load %struct.termios** %termios_p_addr, align 8, !dbg !7550
  %24 = getelementptr inbounds %struct.termios* %23, i32 0, i32 5, !dbg !7550
  %25 = getelementptr inbounds [32 x i8]* %24, i64 0, i64 0, !dbg !7550
  %26 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !7550
  %27 = getelementptr inbounds [19 x i8]* %26, i64 0, i64 0, !dbg !7550
  %28 = call i8* @mempcpy(i8* noalias %25, i8* noalias %27, i64 19) nounwind, !dbg !7550
  %29 = call i8* @memset(i8* %28, i32 0, i64 13) nounwind, !dbg !7550
  %30 = load i32* %retval1, align 4, !dbg !7551
  store i32 %30, i32* %0, align 4, !dbg !7551
  %31 = load i32* %0, align 4, !dbg !7551
  store i32 %31, i32* %retval, align 4, !dbg !7551
  %retval2 = load i32* %retval, !dbg !7551
  ret i32 %retval2, !dbg !7551
}

define internal i32 @sc_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7552
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 2, !dbg !7552
  %3 = load %4** %2, align 8, !dbg !7552
  %4 = call i32 @__fgetc_unlocked(%4* %3) nounwind, !dbg !7552
  store i32 %4, i32* %0, align 4, !dbg !7552
  %5 = load i32* %0, align 4, !dbg !7552
  store i32 %5, i32* %retval, align 4, !dbg !7552
  %retval1 = load i32* %retval, !dbg !7552
  ret i32 %retval1, !dbg !7552
}

define internal i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i64
  %width = alloca i32
  %wc = alloca [1 x i32]
  %b = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7554
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 4, !dbg !7554
  %3 = load i32* %2, align 4, !dbg !7554
  %4 = sub nsw i32 %3, 1, !dbg !7554
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7554
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 4, !dbg !7554
  store i32 %4, i32* %6, align 4, !dbg !7554
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7554
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !7554
  %9 = load i32* %8, align 4, !dbg !7554
  %10 = icmp slt i32 %9, 0, !dbg !7554
  %11 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7556
  br i1 %10, label %bb, label %bb1, !dbg !7554

bb:                                               ; preds = %entry
  %12 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 7, !dbg !7556
  %13 = load i8* %12, align 1, !dbg !7556
  %14 = or i8 %13, 2, !dbg !7556
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7556
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 7, !dbg !7556
  store i8 %14, i8* %16, align 1, !dbg !7556
  store i32 -1, i32* %0, align 4, !dbg !7557
  br label %bb12, !dbg !7557

bb1:                                              ; preds = %entry
  %17 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 4, !dbg !7558
  %18 = load i32* %17, align 4, !dbg !7558
  store i32 %18, i32* %width, align 4, !dbg !7558
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7559
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 4, !dbg !7559
  store i32 2147483647, i32* %20, align 4, !dbg !7559
  store i64 -3, i64* %r, align 8, !dbg !7560
  br label %bb8, !dbg !7560

bb2:                                              ; preds = %bb8
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7561
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 0, !dbg !7561
  %23 = load i32* %22, align 8, !dbg !7561
  %24 = trunc i32 %23 to i8, !dbg !7561
  %25 = getelementptr inbounds [1 x i8]* %b, i64 0, i64 0, !dbg !7561
  store i8 %24, i8* %25, align 1, !dbg !7561
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7562
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 10, !dbg !7562
  %wc3 = bitcast [1 x i32]* %wc to i32*, !dbg !7562
  %b4 = bitcast [1 x i8]* %b to i8*, !dbg !7562
  %28 = call i64 @mbrtowc(i32* noalias %wc3, i8* noalias %b4, i64 1, %struct.__mbstate_t* %27) nounwind, !dbg !7562
  store i64 %28, i64* %r, align 8, !dbg !7562
  %29 = load i64* %r, align 8, !dbg !7563
  %30 = icmp sge i64 %29, 0, !dbg !7563
  br i1 %30, label %bb5, label %bb6, !dbg !7563

bb5:                                              ; preds = %bb2
  %31 = getelementptr inbounds [1 x i32]* %wc, i64 0, i64 0, !dbg !7564
  %32 = load i32* %31, align 4, !dbg !7564
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7564
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 11, !dbg !7564
  store i32 %32, i32* %34, align 8, !dbg !7564
  br label %SUCCESS, !dbg !7564

bb6:                                              ; preds = %bb2
  %35 = load i64* %r, align 8, !dbg !7565
  %36 = icmp eq i64 %35, -2, !dbg !7565
  br i1 %36, label %bb8, label %bb9, !dbg !7565

bb8:                                              ; preds = %bb6, %bb1
  %37 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7566
  %38 = call i32 @__scan_getc(%struct.scan_cookie* %37) nounwind, !dbg !7566
  %39 = icmp sge i32 %38, 0, !dbg !7566
  br i1 %39, label %bb2, label %bb9, !dbg !7566

bb9:                                              ; preds = %bb6, %bb8
  %40 = load i64* %r, align 8, !dbg !7567
  %41 = icmp eq i64 %40, -3, !dbg !7567
  br i1 %41, label %bb10, label %bb11, !dbg !7567

bb10:                                             ; preds = %bb9
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7568
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 11, !dbg !7568
  store i32 -1, i32* %43, align 8, !dbg !7568
  store i64 -1, i64* %r, align 8, !dbg !7569
  br label %SUCCESS, !dbg !7569

bb11:                                             ; preds = %bb9
  store i32 84, i32* @errno, align 4, !dbg !7570
  %44 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7571
  %45 = getelementptr inbounds %struct.scan_cookie* %44, i32 0, i32 9, !dbg !7571
  store i8 1, i8* %45, align 1, !dbg !7571
  br label %SUCCESS, !dbg !7572

SUCCESS:                                          ; preds = %bb11, %bb10, %bb5
  %46 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7573
  %47 = getelementptr inbounds %struct.scan_cookie* %46, i32 0, i32 4, !dbg !7573
  %48 = load i32* %width, align 4, !dbg !7573
  store i32 %48, i32* %47, align 4, !dbg !7573
  %49 = load i64* %r, align 8, !dbg !7574
  %50 = trunc i64 %49 to i32, !dbg !7574
  store i32 %50, i32* %0, align 4, !dbg !7574
  br label %bb12, !dbg !7574

bb12:                                             ; preds = %SUCCESS, %bb
  %51 = load i32* %0, align 4, !dbg !7557
  store i32 %51, i32* %retval, align 4, !dbg !7557
  %retval13 = load i32* %retval, !dbg !7557
  ret i32 %retval13, !dbg !7557
}

define i32 @vfscanf(%4* noalias %fp, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.11 = alloca i32*
  %iftmp.8 = alloca i8*
  %addr.5 = alloca i8*
  %addr.3 = alloca i8*
  %fmt = alloca i8*
  %b = alloca i8*
  %sc = alloca %struct.scan_cookie
  %psfs = alloca %struct.psfs_t
  %i = alloca i32
  %buf = alloca [67 x i8]
  %scanset = alloca [256 x i8]
  %invert = alloca i8
  %fail = alloca i8
  %zero_conversions = alloca i8
  %r = alloca i32
  %wbuf = alloca [1 x i32]
  %wb = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i8 1, i8* %zero_conversions, align 1, !dbg !7575
  %1 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7577
  store i32 -1, i32* %1, align 8, !dbg !7577
  %2 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !7578
  %3 = getelementptr inbounds [9 x i8*]* %2, i64 0, i64 0, !dbg !7578
  %4 = bitcast i8** %3 to i8*, !dbg !7578
  %5 = call i8* @memset(i8* %4, i32 0, i64 72) nounwind, !dbg !7578
  %6 = load %4** %fp_addr, align 8, !dbg !7579
  call void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %6) nounwind, !dbg !7579
  %7 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 13, !dbg !7580
  store i32 (%struct.scan_cookie*)* @sc_getc, i32 (%struct.scan_cookie*)** %7, align 8, !dbg !7580
  %8 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 2, !dbg !7581
  %9 = load %4** %8, align 8, !dbg !7581
  %10 = getelementptr inbounds %4* %9, i32 0, i32 1, !dbg !7581
  %11 = getelementptr inbounds [2 x i8]* %10, i64 0, i64 1, !dbg !7581
  %12 = load i8* %11, align 1, !dbg !7581
  %13 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 6, !dbg !7581
  store i8 %12, i8* %13, align 4, !dbg !7581
  %14 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 14, !dbg !7582
  %15 = load i8** %14, align 8, !dbg !7582
  %16 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 17, !dbg !7582
  store i8* %15, i8** %16, align 8, !dbg !7582
  %17 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7583
  store i32 0, i32* %17, align 8, !dbg !7583
  %18 = load i8** %format_addr, align 8, !dbg !7584
  store i8* %18, i8** %fmt, align 8, !dbg !7584
  br label %bb104, !dbg !7584

bb:                                               ; preds = %bb104
  %19 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7585
  store i8 1, i8* %19, align 8, !dbg !7585
  %20 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 10, !dbg !7586
  store i8 0, i8* %20, align 1, !dbg !7586
  %21 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !7587
  %22 = load i8* %21, align 1, !dbg !7587
  %23 = and i8 %22, 1, !dbg !7587
  %24 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !7587
  store i8 %23, i8* %24, align 1, !dbg !7587
  %25 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !7588
  store i32 2147483647, i32* %25, align 4, !dbg !7588
  %26 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !7588
  %27 = load i32* %26, align 4, !dbg !7588
  %28 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7588
  store i32 %27, i32* %28, align 4, !dbg !7588
  %29 = load i16** @__ctype_b, align 8, !dbg !7589
  %30 = load i8** %fmt, align 8, !dbg !7589
  %31 = load i8* %30, align 1, !dbg !7589
  %32 = zext i8 %31 to i32, !dbg !7589
  %33 = sext i32 %32 to i64, !dbg !7589
  %34 = getelementptr inbounds i16* %29, i64 %33, !dbg !7589
  %35 = load i16* %34, align 1, !dbg !7589
  %36 = zext i16 %35 to i32, !dbg !7589
  %37 = and i32 %36, 8192, !dbg !7589
  %38 = icmp ne i32 %37, 0, !dbg !7589
  br i1 %38, label %bb1, label %bb3, !dbg !7589

bb1:                                              ; preds = %bb1, %bb
  %39 = load i8** %fmt, align 8, !dbg !7590
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !7590
  store i8* %40, i8** %fmt, align 8, !dbg !7590
  %41 = load i16** @__ctype_b, align 8, !dbg !7591
  %42 = load i8** %fmt, align 8, !dbg !7591
  %43 = load i8* %42, align 1, !dbg !7591
  %44 = zext i8 %43 to i32, !dbg !7591
  %45 = sext i32 %44 to i64, !dbg !7591
  %46 = getelementptr inbounds i16* %41, i64 %45, !dbg !7591
  %47 = load i16* %46, align 1, !dbg !7591
  %48 = zext i16 %47 to i32, !dbg !7591
  %49 = and i32 %48, 8192, !dbg !7591
  %50 = icmp ne i32 %49, 0, !dbg !7591
  br i1 %50, label %bb1, label %bb2, !dbg !7591

bb2:                                              ; preds = %bb1
  %51 = load i8** %fmt, align 8, !dbg !7592
  %52 = getelementptr inbounds i8* %51, i64 -1, !dbg !7592
  store i8* %52, i8** %fmt, align 8, !dbg !7592
  %53 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7593
  store i32 23, i32* %53, align 8, !dbg !7593
  br label %DO_WHITESPACE, !dbg !7593

bb3:                                              ; preds = %bb
  %54 = load i8** %fmt, align 8, !dbg !7594
  %55 = load i8* %54, align 1, !dbg !7594
  %56 = icmp eq i8 %55, 37, !dbg !7594
  br i1 %56, label %bb4, label %MATCH_CHAR, !dbg !7594

bb4:                                              ; preds = %bb3
  %57 = load i8** %fmt, align 8, !dbg !7595
  %58 = getelementptr inbounds i8* %57, i64 1, !dbg !7595
  store i8* %58, i8** %fmt, align 8, !dbg !7595
  %59 = load i8** %fmt, align 8, !dbg !7595
  %60 = load i8* %59, align 1, !dbg !7595
  %61 = icmp eq i8 %60, 37, !dbg !7595
  br i1 %61, label %bb5, label %bb6, !dbg !7595

bb5:                                              ; preds = %bb4
  %62 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7596
  store i32 22, i32* %62, align 8, !dbg !7596
  br label %DO_CONVERSION, !dbg !7596

bb6:                                              ; preds = %bb4
  %63 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 4, !dbg !7597
  %64 = load i8** %fmt, align 8, !dbg !7597
  store i8* %64, i8** %63, align 8, !dbg !7597
  %65 = call i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind, !dbg !7598
  store i32 %65, i32* %i, align 4, !dbg !7598
  %66 = load i32* %i, align 4, !dbg !7598
  %67 = icmp slt i32 %66, 0, !dbg !7598
  br i1 %67, label %DONE, label %bb7, !dbg !7598

bb7:                                              ; preds = %bb6
  %68 = load i8** %fmt, align 8, !dbg !7599
  %69 = load i32* %i, align 4, !dbg !7599
  %70 = sext i32 %69 to i64, !dbg !7599
  %71 = getelementptr inbounds i8* %68, i64 %70, !dbg !7599
  store i8* %71, i8** %fmt, align 8, !dbg !7599
  %72 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7600
  %73 = load i8* %72, align 8, !dbg !7600
  %74 = icmp ne i8 %73, 0, !dbg !7600
  br i1 %74, label %bb8, label %DO_CONVERSION, !dbg !7600

bb8:                                              ; preds = %bb7
  %75 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7601
  %76 = load i32* %75, align 8, !dbg !7601
  %77 = icmp eq i32 %76, -2, !dbg !7601
  br i1 %77, label %bb9, label %bb18, !dbg !7601

bb9:                                              ; preds = %bb8
  %78 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0, !dbg !7602
  %80 = load i32* %79, align 8, !dbg !7602
  %81 = icmp uge i32 %80, 48, !dbg !7602
  %82 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  br i1 %81, label %bb11, label %bb10, !dbg !7602

bb10:                                             ; preds = %bb9
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 3, !dbg !7602
  %84 = load i8** %83, align 8, !dbg !7602
  %85 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  %86 = getelementptr inbounds %struct.__va_list_tag* %85, i32 0, i32 0, !dbg !7602
  %87 = load i32* %86, align 8, !dbg !7602
  %88 = inttoptr i32 %87 to i8*, !dbg !7602
  %89 = ptrtoint i8* %84 to i64, !dbg !7602
  %90 = ptrtoint i8* %88 to i64, !dbg !7602
  %91 = add i64 %89, %90, !dbg !7602
  %92 = inttoptr i64 %91 to i8*, !dbg !7602
  store i8* %92, i8** %addr.3, align 8, !dbg !7602
  %93 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  %94 = getelementptr inbounds %struct.__va_list_tag* %93, i32 0, i32 0, !dbg !7602
  %95 = load i32* %94, align 8, !dbg !7602
  %96 = add i32 %95, 8, !dbg !7602
  %97 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  %98 = getelementptr inbounds %struct.__va_list_tag* %97, i32 0, i32 0, !dbg !7602
  store i32 %96, i32* %98, align 8, !dbg !7602
  br label %bb12, !dbg !7602

bb11:                                             ; preds = %bb9
  %99 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 2, !dbg !7602
  %100 = load i8** %99, align 8, !dbg !7602
  store i8* %100, i8** %addr.3, align 8, !dbg !7602
  %101 = getelementptr inbounds i8* %100, i64 8, !dbg !7602
  %102 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7602
  %103 = getelementptr inbounds %struct.__va_list_tag* %102, i32 0, i32 2, !dbg !7602
  store i8* %101, i8** %103, align 8, !dbg !7602
  br label %bb12, !dbg !7602

bb12:                                             ; preds = %bb11, %bb10
  %104 = load i8** %addr.3, align 8, !dbg !7602
  %105 = bitcast i8* %104 to i8**, !dbg !7602
  %106 = load i8** %105, align 8, !dbg !7602
  %107 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7602
  store i8* %106, i8** %107, align 8, !dbg !7602
  br label %DO_CONVERSION, !dbg !7602

bb14:                                             ; preds = %bb18
  %108 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7603
  %109 = load i32* %108, align 8, !dbg !7603
  %110 = add nsw i32 %109, 1, !dbg !7603
  %111 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7603
  store i32 %110, i32* %111, align 8, !dbg !7603
  %112 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7603
  %113 = load i32* %112, align 8, !dbg !7603
  %114 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  %115 = getelementptr inbounds %struct.__va_list_tag* %114, i32 0, i32 0, !dbg !7603
  %116 = load i32* %115, align 8, !dbg !7603
  %117 = icmp uge i32 %116, 48, !dbg !7603
  %118 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  br i1 %117, label %bb16, label %bb15, !dbg !7603

bb15:                                             ; preds = %bb14
  %119 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 3, !dbg !7603
  %120 = load i8** %119, align 8, !dbg !7603
  %121 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  %122 = getelementptr inbounds %struct.__va_list_tag* %121, i32 0, i32 0, !dbg !7603
  %123 = load i32* %122, align 8, !dbg !7603
  %124 = inttoptr i32 %123 to i8*, !dbg !7603
  %125 = ptrtoint i8* %120 to i64, !dbg !7603
  %126 = ptrtoint i8* %124 to i64, !dbg !7603
  %127 = add i64 %125, %126, !dbg !7603
  %128 = inttoptr i64 %127 to i8*, !dbg !7603
  store i8* %128, i8** %addr.5, align 8, !dbg !7603
  %129 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  %130 = getelementptr inbounds %struct.__va_list_tag* %129, i32 0, i32 0, !dbg !7603
  %131 = load i32* %130, align 8, !dbg !7603
  %132 = add i32 %131, 8, !dbg !7603
  %133 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  %134 = getelementptr inbounds %struct.__va_list_tag* %133, i32 0, i32 0, !dbg !7603
  store i32 %132, i32* %134, align 8, !dbg !7603
  br label %bb17, !dbg !7603

bb16:                                             ; preds = %bb14
  %135 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 2, !dbg !7603
  %136 = load i8** %135, align 8, !dbg !7603
  store i8* %136, i8** %addr.5, align 8, !dbg !7603
  %137 = getelementptr inbounds i8* %136, i64 8, !dbg !7603
  %138 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7603
  %139 = getelementptr inbounds %struct.__va_list_tag* %138, i32 0, i32 2, !dbg !7603
  store i8* %137, i8** %139, align 8, !dbg !7603
  br label %bb17, !dbg !7603

bb17:                                             ; preds = %bb16, %bb15
  %140 = load i8** %addr.5, align 8, !dbg !7603
  %141 = bitcast i8* %140 to i8**, !dbg !7603
  %142 = load i8** %141, align 8, !dbg !7603
  %143 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !7603
  %144 = sext i32 %113 to i64, !dbg !7603
  %145 = getelementptr inbounds [9 x i8*]* %143, i64 0, i64 %144, !dbg !7603
  store i8* %142, i8** %145, align 8, !dbg !7603
  br label %bb18, !dbg !7603

bb18:                                             ; preds = %bb8, %bb17
  %146 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !7604
  %147 = load i32* %146, align 4, !dbg !7604
  %148 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !7604
  %149 = load i32* %148, align 8, !dbg !7604
  %150 = icmp sgt i32 %147, %149, !dbg !7604
  br i1 %150, label %bb14, label %bb19, !dbg !7604

bb19:                                             ; preds = %bb18
  %151 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !7605
  %152 = load i32* %151, align 4, !dbg !7605
  %153 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !7605
  %154 = sext i32 %152 to i64, !dbg !7605
  %155 = getelementptr inbounds [9 x i8*]* %153, i64 0, i64 %154, !dbg !7605
  %156 = load i8** %155, align 8, !dbg !7605
  %157 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7605
  store i8* %156, i8** %157, align 8, !dbg !7605
  br label %DO_CONVERSION, !dbg !7606

DO_CONVERSION:                                    ; preds = %bb19, %bb12, %bb7, %bb5
  %158 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7607
  %159 = load i32* %158, align 8, !dbg !7607
  %.cast = zext i32 %159 to i64, !dbg !7607
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %160 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %160, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %DO_CONVERSION
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %DO_CONVERSION
  %161 = ashr i64 2949121, %.cast, !dbg !7607
  %162 = and i64 %161, 1, !dbg !7607
  %163 = icmp eq i64 %162, 0, !dbg !7607
  br i1 %163, label %DO_WHITESPACE, label %bb22, !dbg !7607

DO_WHITESPACE:                                    ; preds = %bb20, %klee_overshift_check.exit, %bb2
  %164 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7608
  %165 = icmp slt i32 %164, 0, !dbg !7608
  br i1 %165, label %bb21, label %bb20, !dbg !7608

bb20:                                             ; preds = %DO_WHITESPACE
  %166 = load i16** @__ctype_b, align 8, !dbg !7608
  %167 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7608
  %168 = load i32* %167, align 8, !dbg !7608
  %169 = sext i32 %168 to i64, !dbg !7608
  %170 = getelementptr inbounds i16* %166, i64 %169, !dbg !7608
  %171 = load i16* %170, align 1, !dbg !7608
  %172 = zext i16 %171 to i32, !dbg !7608
  %173 = and i32 %172, 8192, !dbg !7608
  %174 = icmp ne i32 %173, 0, !dbg !7608
  br i1 %174, label %DO_WHITESPACE, label %bb21, !dbg !7608

bb21:                                             ; preds = %bb20, %DO_WHITESPACE
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7609
  %175 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7610
  %176 = load i32* %175, align 8, !dbg !7610
  %177 = icmp eq i32 %176, 23, !dbg !7610
  br i1 %177, label %NEXT_FMT, label %bb22, !dbg !7610

bb22:                                             ; preds = %bb21, %klee_overshift_check.exit
  %178 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !7611
  %179 = load i32* %178, align 4, !dbg !7611
  %180 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7611
  store i32 %179, i32* %180, align 4, !dbg !7611
  %181 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7612
  %182 = load i32* %181, align 4, !dbg !7612
  %183 = icmp eq i32 %182, 0, !dbg !7612
  br i1 %183, label %DONE, label %bb23, !dbg !7612

bb23:                                             ; preds = %bb22
  %184 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7613
  %185 = load i32* %184, align 8, !dbg !7613
  %186 = icmp eq i32 %185, 22, !dbg !7613
  br i1 %186, label %MATCH_CHAR, label %bb24, !dbg !7613

bb24:                                             ; preds = %bb23
  %187 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7614
  %188 = load i32* %187, align 8, !dbg !7614
  %189 = icmp eq i32 %188, 0, !dbg !7614
  br i1 %189, label %bb25, label %bb28, !dbg !7614

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7615
  %191 = load i8* %190, align 8, !dbg !7615
  %192 = icmp ne i8 %191, 0, !dbg !7615
  br i1 %192, label %bb26, label %NEXT_FMT, !dbg !7615

bb26:                                             ; preds = %bb25
  %193 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 3, !dbg !7616
  %194 = load i32* %193, align 8, !dbg !7616
  %195 = sext i32 %194 to i64, !dbg !7616
  %196 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 6, !dbg !7616
  %197 = load i32* %196, align 4, !dbg !7616
  %198 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7616
  %199 = load i8** %198, align 8, !dbg !7616
  call void @_store_inttype(i8* %199, i32 %197, i64 %195) nounwind, !dbg !7616
  br label %NEXT_FMT, !dbg !7616

bb28:                                             ; preds = %bb24
  %200 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7617
  %201 = load i32* %200, align 8, !dbg !7617
  %202 = icmp sle i32 %201, 15, !dbg !7617
  br i1 %202, label %bb29, label %bb33, !dbg !7617

bb29:                                             ; preds = %bb28
  %203 = call i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind, !dbg !7618
  store i32 %203, i32* %r, align 4, !dbg !7618
  %204 = load i32* %r, align 4, !dbg !7620
  %205 = icmp ne i32 %204, -1, !dbg !7620
  br i1 %205, label %bb30, label %bb31, !dbg !7620

bb30:                                             ; preds = %bb29
  store i8 0, i8* %zero_conversions, align 1, !dbg !7621
  br label %bb31, !dbg !7621

bb31:                                             ; preds = %bb30, %bb29
  %206 = load i32* %r, align 4, !dbg !7622
  %207 = icmp slt i32 %206, 0, !dbg !7622
  br i1 %207, label %DONE, label %NEXT_FMT, !dbg !7622

bb33:                                             ; preds = %bb28
  %208 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7623
  %209 = load i32* %208, align 8, !dbg !7623
  %210 = icmp sgt i32 %209, 17, !dbg !7623
  br i1 %210, label %bb34, label %DO_LEFTBRACKET, !dbg !7623

bb34:                                             ; preds = %bb33
  %211 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7624
  %212 = load i8* %211, align 8, !dbg !7624
  %213 = icmp ne i8 %212, 0, !dbg !7624
  br i1 %213, label %bb35, label %bb36, !dbg !7624

bb35:                                             ; preds = %bb34
  %214 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7624
  %215 = load i8** %214, align 8, !dbg !7624
  store i8* %215, i8** %iftmp.8, align 8, !dbg !7624
  br label %bb38, !dbg !7624

bb36:                                             ; preds = %bb34
  %buf37 = bitcast [67 x i8]* %buf to i8*, !dbg !7624
  store i8* %buf37, i8** %iftmp.8, align 8, !dbg !7624
  br label %bb38, !dbg !7624

bb38:                                             ; preds = %bb36, %bb35
  %216 = load i8** %iftmp.8, align 8, !dbg !7624
  store i8* %216, i8** %b, align 8, !dbg !7624
  store i8 1, i8* %fail, align 1, !dbg !7625
  %217 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7626
  %218 = load i32* %217, align 8, !dbg !7626
  %219 = icmp eq i32 %218, 19, !dbg !7626
  br i1 %219, label %bb39, label %bb46, !dbg !7626

bb39:                                             ; preds = %bb38
  %220 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7627
  %221 = load i32* %220, align 4, !dbg !7627
  %222 = icmp eq i32 %221, 2147483647, !dbg !7627
  br i1 %222, label %bb40, label %bb43, !dbg !7627

bb40:                                             ; preds = %bb39
  %223 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7628
  store i32 1, i32* %223, align 4, !dbg !7628
  br label %bb43, !dbg !7628

bb42:                                             ; preds = %bb43
  store i8 0, i8* %zero_conversions, align 1, !dbg !7629
  %224 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7630
  %225 = load i32* %224, align 8, !dbg !7630
  %226 = trunc i32 %225 to i8, !dbg !7630
  %227 = load i8** %b, align 8, !dbg !7630
  store i8 %226, i8* %227, align 1, !dbg !7630
  %228 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7631
  %229 = load i8* %228, align 8, !dbg !7631
  %230 = zext i8 %229 to i32, !dbg !7631
  %231 = load i8** %b, align 8, !dbg !7631
  %232 = sext i32 %230 to i64, !dbg !7631
  %233 = getelementptr inbounds i8* %231, i64 %232, !dbg !7631
  store i8* %233, i8** %b, align 8, !dbg !7631
  br label %bb43, !dbg !7631

bb43:                                             ; preds = %bb39, %bb40, %bb42
  %234 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7632
  %235 = icmp sge i32 %234, 0, !dbg !7632
  br i1 %235, label %bb42, label %bb44, !dbg !7632

bb44:                                             ; preds = %bb43
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7633
  %236 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7634
  %237 = load i32* %236, align 4, !dbg !7634
  %238 = icmp sgt i32 %237, 0, !dbg !7634
  br i1 %238, label %DONE, label %bb45, !dbg !7634

bb45:                                             ; preds = %bb44
  %239 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7635
  %240 = load i32* %239, align 8, !dbg !7635
  %241 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7635
  %242 = load i8* %241, align 8, !dbg !7635
  %243 = zext i8 %242 to i32, !dbg !7635
  %244 = add nsw i32 %240, %243, !dbg !7635
  %245 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7635
  store i32 %244, i32* %245, align 8, !dbg !7635
  br label %NEXT_FMT, !dbg !7635

bb46:                                             ; preds = %bb38
  %246 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7636
  %247 = load i32* %246, align 8, !dbg !7636
  %248 = icmp eq i32 %247, 20, !dbg !7636
  br i1 %248, label %bb49, label %bb52, !dbg !7636

bb48:                                             ; preds = %bb50
  store i8 0, i8* %zero_conversions, align 1, !dbg !7637
  %249 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7638
  %250 = load i32* %249, align 8, !dbg !7638
  %251 = trunc i32 %250 to i8, !dbg !7638
  %252 = load i8** %b, align 8, !dbg !7638
  store i8 %251, i8* %252, align 1, !dbg !7638
  %253 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7639
  %254 = load i8* %253, align 8, !dbg !7639
  %255 = zext i8 %254 to i32, !dbg !7639
  %256 = load i8** %b, align 8, !dbg !7639
  %257 = sext i32 %255 to i64, !dbg !7639
  %258 = getelementptr inbounds i8* %256, i64 %257, !dbg !7639
  store i8* %258, i8** %b, align 8, !dbg !7639
  store i8 0, i8* %fail, align 1, !dbg !7640
  br label %bb49, !dbg !7640

bb49:                                             ; preds = %bb46, %bb48
  %259 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7641
  %260 = icmp slt i32 %259, 0, !dbg !7641
  br i1 %260, label %bb71, label %bb50, !dbg !7641

bb50:                                             ; preds = %bb49
  %261 = load i16** @__ctype_b, align 8, !dbg !7641
  %262 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7641
  %263 = load i32* %262, align 8, !dbg !7641
  %264 = sext i32 %263 to i64, !dbg !7641
  %265 = getelementptr inbounds i16* %261, i64 %264, !dbg !7641
  %266 = load i16* %265, align 1, !dbg !7641
  %267 = zext i16 %266 to i32, !dbg !7641
  %268 = and i32 %267, 8192, !dbg !7641
  %269 = icmp eq i32 %268, 0, !dbg !7641
  br i1 %269, label %bb48, label %bb71, !dbg !7641

bb52:                                             ; preds = %bb46
  store i8 0, i8* %invert, align 1, !dbg !7642
  %270 = load i8** %fmt, align 8, !dbg !7643
  %271 = getelementptr inbounds i8* %270, i64 1, !dbg !7643
  store i8* %271, i8** %fmt, align 8, !dbg !7643
  %272 = load i8** %fmt, align 8, !dbg !7643
  %273 = load i8* %272, align 1, !dbg !7643
  %274 = icmp eq i8 %273, 94, !dbg !7643
  br i1 %274, label %bb53, label %bb54, !dbg !7643

bb53:                                             ; preds = %bb52
  %275 = load i8** %fmt, align 8, !dbg !7644
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !7644
  store i8* %276, i8** %fmt, align 8, !dbg !7644
  store i8 1, i8* %invert, align 1, !dbg !7645
  br label %bb54, !dbg !7645

bb54:                                             ; preds = %bb53, %bb52
  %277 = load i8* %invert, align 1, !dbg !7646
  %278 = zext i8 %277 to i32, !dbg !7646
  %scanset55 = bitcast [256 x i8]* %scanset to i8*, !dbg !7646
  %279 = call i8* @memset(i8* %scanset55, i32 %278, i64 256) nounwind, !dbg !7646
  %280 = load i8* %invert, align 1, !dbg !7647
  %281 = sub i8 1, %280, !dbg !7647
  store i8 %281, i8* %invert, align 1, !dbg !7647
  %282 = load i8** %fmt, align 8, !dbg !7648
  %283 = load i8* %282, align 1, !dbg !7648
  %284 = icmp eq i8 %283, 93, !dbg !7648
  br i1 %284, label %bb56, label %bb65, !dbg !7648

bb56:                                             ; preds = %bb54
  %285 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 93, !dbg !7649
  %286 = load i8* %invert, align 1, !dbg !7649
  store i8 %286, i8* %285, align 1, !dbg !7649
  %287 = load i8** %fmt, align 8, !dbg !7650
  %288 = getelementptr inbounds i8* %287, i64 1, !dbg !7650
  store i8* %288, i8** %fmt, align 8, !dbg !7650
  br label %bb65, !dbg !7650

bb58:                                             ; preds = %bb65
  %289 = load i8** %fmt, align 8, !dbg !7651
  %290 = load i8* %289, align 1, !dbg !7651
  %291 = icmp eq i8 %290, 0, !dbg !7651
  br i1 %291, label %DONE, label %bb59, !dbg !7651

bb59:                                             ; preds = %bb58
  %292 = load i8** %fmt, align 8, !dbg !7652
  %293 = load i8* %292, align 1, !dbg !7652
  %294 = icmp eq i8 %293, 45, !dbg !7652
  br i1 %294, label %bb60, label %bb64, !dbg !7652

bb60:                                             ; preds = %bb59
  %295 = load i8** %fmt, align 8, !dbg !7652
  %296 = getelementptr inbounds i8* %295, i64 1, !dbg !7652
  %297 = load i8* %296, align 1, !dbg !7652
  %298 = icmp ne i8 %297, 93, !dbg !7652
  br i1 %298, label %bb61, label %bb64, !dbg !7652

bb61:                                             ; preds = %bb60
  %299 = load i8** %fmt, align 8, !dbg !7652
  %300 = getelementptr inbounds i8* %299, i64 -1, !dbg !7652
  %301 = load i8* %300, align 1, !dbg !7652
  %302 = load i8** %fmt, align 8, !dbg !7652
  %303 = getelementptr inbounds i8* %302, i64 1, !dbg !7652
  %304 = load i8* %303, align 1, !dbg !7652
  %305 = icmp ult i8 %301, %304, !dbg !7652
  br i1 %305, label %bb62, label %bb64, !dbg !7652

bb62:                                             ; preds = %bb61
  %306 = load i8** %fmt, align 8, !dbg !7653
  %307 = getelementptr inbounds i8* %306, i64 1, !dbg !7653
  store i8* %307, i8** %fmt, align 8, !dbg !7653
  %308 = load i8** %fmt, align 8, !dbg !7654
  %309 = getelementptr inbounds i8* %308, i64 -2, !dbg !7654
  %310 = load i8* %309, align 1, !dbg !7654
  %311 = zext i8 %310 to i32, !dbg !7654
  store i32 %311, i32* %i, align 4, !dbg !7654
  br label %bb63, !dbg !7654

bb63:                                             ; preds = %bb63, %bb62
  %312 = load i32* %i, align 4, !dbg !7655
  %313 = add nsw i32 %312, 1, !dbg !7655
  store i32 %313, i32* %i, align 4, !dbg !7655
  %314 = load i32* %i, align 4, !dbg !7655
  %315 = sext i32 %314 to i64, !dbg !7655
  %316 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %315, !dbg !7655
  %317 = load i8* %invert, align 1, !dbg !7655
  store i8 %317, i8* %316, align 1, !dbg !7655
  %318 = load i8** %fmt, align 8, !dbg !7656
  %319 = load i8* %318, align 1, !dbg !7656
  %320 = zext i8 %319 to i32, !dbg !7656
  %321 = load i32* %i, align 4, !dbg !7656
  %322 = icmp sgt i32 %320, %321, !dbg !7656
  br i1 %322, label %bb63, label %bb64, !dbg !7656

bb64:                                             ; preds = %bb63, %bb61, %bb60, %bb59
  %323 = load i8** %fmt, align 8, !dbg !7657
  %324 = load i8* %323, align 1, !dbg !7657
  %325 = zext i8 %324 to i32, !dbg !7657
  %326 = sext i32 %325 to i64, !dbg !7657
  %327 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %326, !dbg !7657
  %328 = load i8* %invert, align 1, !dbg !7657
  store i8 %328, i8* %327, align 1, !dbg !7657
  %329 = load i8** %fmt, align 8, !dbg !7658
  %330 = getelementptr inbounds i8* %329, i64 1, !dbg !7658
  store i8* %330, i8** %fmt, align 8, !dbg !7658
  br label %bb65, !dbg !7658

bb65:                                             ; preds = %bb54, %bb56, %bb64
  %331 = load i8** %fmt, align 8, !dbg !7659
  %332 = load i8* %331, align 1, !dbg !7659
  %333 = icmp ne i8 %332, 93, !dbg !7659
  br i1 %333, label %bb58, label %bb66, !dbg !7659

bb66:                                             ; preds = %bb65
  %334 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7660
  %335 = load i32* %334, align 8, !dbg !7660
  %336 = icmp eq i32 %335, 18, !dbg !7660
  br i1 %336, label %DO_LEFTBRACKET, label %bb70, !dbg !7660

bb68:                                             ; preds = %bb70
  store i8 0, i8* %zero_conversions, align 1, !dbg !7661
  %337 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7662
  %338 = load i32* %337, align 8, !dbg !7662
  %339 = sext i32 %338 to i64, !dbg !7662
  %340 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %339, !dbg !7662
  %341 = load i8* %340, align 1, !dbg !7662
  %342 = icmp eq i8 %341, 0, !dbg !7662
  br i1 %342, label %bb71, label %bb69, !dbg !7662

bb69:                                             ; preds = %bb68
  %343 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !7663
  %344 = load i32* %343, align 8, !dbg !7663
  %345 = trunc i32 %344 to i8, !dbg !7663
  %346 = load i8** %b, align 8, !dbg !7663
  store i8 %345, i8* %346, align 1, !dbg !7663
  %347 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7664
  %348 = load i8* %347, align 8, !dbg !7664
  %349 = zext i8 %348 to i32, !dbg !7664
  %350 = load i8** %b, align 8, !dbg !7664
  %351 = sext i32 %349 to i64, !dbg !7664
  %352 = getelementptr inbounds i8* %350, i64 %351, !dbg !7664
  store i8* %352, i8** %b, align 8, !dbg !7664
  store i8 0, i8* %fail, align 1, !dbg !7665
  br label %bb70, !dbg !7665

bb70:                                             ; preds = %bb66, %bb69
  %353 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7666
  %354 = icmp sge i32 %353, 0, !dbg !7666
  br i1 %354, label %bb68, label %bb71, !dbg !7666

bb71:                                             ; preds = %bb49, %bb50, %bb70, %bb68
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7667
  %355 = load i8* %fail, align 1, !dbg !7668
  %356 = icmp ne i8 %355, 0, !dbg !7668
  br i1 %356, label %DONE, label %bb72, !dbg !7668

bb72:                                             ; preds = %bb71
  %357 = load i8** %b, align 8, !dbg !7669
  store i8 0, i8* %357, align 1, !dbg !7669
  %358 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7670
  %359 = load i32* %358, align 8, !dbg !7670
  %360 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7670
  %361 = load i8* %360, align 8, !dbg !7670
  %362 = zext i8 %361 to i32, !dbg !7670
  %363 = add nsw i32 %359, %362, !dbg !7670
  %364 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7670
  store i32 %363, i32* %364, align 8, !dbg !7670
  br label %NEXT_FMT, !dbg !7670

DO_LEFTBRACKET:                                   ; preds = %bb66, %bb33
  %365 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7671
  %366 = load i32* %365, align 8, !dbg !7671
  %367 = icmp sgt i32 %366, 15, !dbg !7671
  br i1 %367, label %bb73, label %DONE, !dbg !7671

bb73:                                             ; preds = %DO_LEFTBRACKET
  %368 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 10, !dbg !7672
  %369 = getelementptr inbounds %struct.__mbstate_t* %368, i32 0, i32 0, !dbg !7672
  store i32 0, i32* %369, align 8, !dbg !7672
  %370 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7674
  %371 = load i8* %370, align 8, !dbg !7674
  %372 = icmp ne i8 %371, 0, !dbg !7674
  br i1 %372, label %bb74, label %bb75, !dbg !7674

bb74:                                             ; preds = %bb73
  %373 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !7674
  %374 = load i8** %373, align 8, !dbg !7674
  %375 = bitcast i8* %374 to i32*, !dbg !7674
  store i32* %375, i32** %iftmp.11, align 8, !dbg !7674
  br label %bb77, !dbg !7674

bb75:                                             ; preds = %bb73
  %wbuf76 = bitcast [1 x i32]* %wbuf to i32*, !dbg !7674
  store i32* %wbuf76, i32** %iftmp.11, align 8, !dbg !7674
  br label %bb77, !dbg !7674

bb77:                                             ; preds = %bb75, %bb74
  %376 = load i32** %iftmp.11, align 8, !dbg !7674
  store i32* %376, i32** %wb, align 8, !dbg !7674
  store i8 1, i8* %fail, align 1, !dbg !7675
  %377 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7676
  %378 = load i32* %377, align 8, !dbg !7676
  %379 = icmp eq i32 %378, 16, !dbg !7676
  br i1 %379, label %bb78, label %bb85, !dbg !7676

bb78:                                             ; preds = %bb77
  %380 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7677
  %381 = load i32* %380, align 4, !dbg !7677
  %382 = icmp eq i32 %381, 2147483647, !dbg !7677
  br i1 %382, label %bb79, label %bb82, !dbg !7677

bb79:                                             ; preds = %bb78
  %383 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7678
  store i32 1, i32* %383, align 4, !dbg !7678
  br label %bb82, !dbg !7678

bb81:                                             ; preds = %bb82
  store i8 0, i8* %zero_conversions, align 1, !dbg !7679
  %384 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7680
  %385 = load i32* %384, align 8, !dbg !7680
  %386 = load i32** %wb, align 8, !dbg !7680
  store i32 %385, i32* %386, align 4, !dbg !7680
  %387 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7681
  %388 = load i8* %387, align 8, !dbg !7681
  %389 = zext i8 %388 to i32, !dbg !7681
  %390 = load i32** %wb, align 8, !dbg !7681
  %391 = sext i32 %389 to i64, !dbg !7681
  %392 = getelementptr inbounds i32* %390, i64 %391, !dbg !7681
  store i32* %392, i32** %wb, align 8, !dbg !7681
  br label %bb82, !dbg !7681

bb82:                                             ; preds = %bb78, %bb79, %bb81
  %393 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7682
  %394 = icmp sge i32 %393, 0, !dbg !7682
  br i1 %394, label %bb81, label %bb83, !dbg !7682

bb83:                                             ; preds = %bb82
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7683
  %395 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !7684
  %396 = load i32* %395, align 4, !dbg !7684
  %397 = icmp sgt i32 %396, 0, !dbg !7684
  br i1 %397, label %DONE, label %bb84, !dbg !7684

bb84:                                             ; preds = %bb83
  %398 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7685
  %399 = load i32* %398, align 8, !dbg !7685
  %400 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7685
  %401 = load i8* %400, align 8, !dbg !7685
  %402 = zext i8 %401 to i32, !dbg !7685
  %403 = add nsw i32 %399, %402, !dbg !7685
  %404 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7685
  store i32 %403, i32* %404, align 8, !dbg !7685
  br label %NEXT_FMT, !dbg !7685

bb85:                                             ; preds = %bb77
  %405 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !7686
  %406 = load i32* %405, align 8, !dbg !7686
  %407 = icmp eq i32 %406, 17, !dbg !7686
  br i1 %407, label %bb90, label %bb98, !dbg !7686

bb87:                                             ; preds = %bb90
  store i8 0, i8* %zero_conversions, align 1, !dbg !7687
  %408 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7688
  %409 = load i32* %408, align 8, !dbg !7688
  %410 = icmp ule i32 %409, 255, !dbg !7688
  br i1 %410, label %bb88, label %bb89, !dbg !7688

bb88:                                             ; preds = %bb87
  %411 = load i16** @__ctype_b, align 8, !dbg !7688
  %412 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7688
  %413 = load i32* %412, align 8, !dbg !7688
  %414 = sext i32 %413 to i64, !dbg !7688
  %415 = getelementptr inbounds i16* %411, i64 %414, !dbg !7688
  %416 = load i16* %415, align 1, !dbg !7688
  %417 = zext i16 %416 to i32, !dbg !7688
  %418 = and i32 %417, 8192, !dbg !7688
  %419 = icmp ne i32 %418, 0, !dbg !7688
  br i1 %419, label %bb99, label %bb89, !dbg !7688

bb89:                                             ; preds = %bb88, %bb87
  %420 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7689
  %421 = load i32* %420, align 8, !dbg !7689
  %422 = load i32** %wb, align 8, !dbg !7689
  store i32 %421, i32* %422, align 4, !dbg !7689
  %423 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7690
  %424 = load i8* %423, align 8, !dbg !7690
  %425 = zext i8 %424 to i32, !dbg !7690
  %426 = load i32** %wb, align 8, !dbg !7690
  %427 = sext i32 %425 to i64, !dbg !7690
  %428 = getelementptr inbounds i32* %426, i64 %427, !dbg !7690
  store i32* %428, i32** %wb, align 8, !dbg !7690
  store i8 0, i8* %fail, align 1, !dbg !7691
  br label %bb90, !dbg !7691

bb90:                                             ; preds = %bb85, %bb89
  %429 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7692
  %430 = icmp sge i32 %429, 0, !dbg !7692
  br i1 %430, label %bb87, label %bb99, !dbg !7692

bb93:                                             ; preds = %bb98
  store i8 0, i8* %zero_conversions, align 1, !dbg !7693
  %431 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7694
  %432 = load i32* %431, align 8, !dbg !7694
  %433 = icmp ule i32 %432, 255, !dbg !7694
  br i1 %433, label %bb94, label %bb96, !dbg !7694

bb94:                                             ; preds = %bb93
  %434 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7695
  %435 = load i32* %434, align 8, !dbg !7695
  %436 = zext i32 %435 to i64, !dbg !7695
  %437 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %436, !dbg !7695
  %438 = load i8* %437, align 1, !dbg !7695
  %439 = icmp eq i8 %438, 0, !dbg !7695
  br i1 %439, label %bb99, label %bb97, !dbg !7695

bb96:                                             ; preds = %bb93
  %440 = load i8* %invert, align 1, !dbg !7696
  %441 = icmp ne i8 %440, 0, !dbg !7696
  br i1 %441, label %bb99, label %bb97, !dbg !7696

bb97:                                             ; preds = %bb94, %bb96
  %442 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !7697
  %443 = load i32* %442, align 8, !dbg !7697
  %444 = load i32** %wb, align 8, !dbg !7697
  store i32 %443, i32* %444, align 4, !dbg !7697
  %445 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7698
  %446 = load i8* %445, align 8, !dbg !7698
  %447 = zext i8 %446 to i32, !dbg !7698
  %448 = load i32** %wb, align 8, !dbg !7698
  %449 = sext i32 %447 to i64, !dbg !7698
  %450 = getelementptr inbounds i32* %448, i64 %449, !dbg !7698
  store i32* %450, i32** %wb, align 8, !dbg !7698
  store i8 0, i8* %fail, align 1, !dbg !7699
  br label %bb98, !dbg !7699

bb98:                                             ; preds = %bb85, %bb97
  %451 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !7700
  %452 = icmp sge i32 %451, 0, !dbg !7700
  br i1 %452, label %bb93, label %bb99, !dbg !7700

bb99:                                             ; preds = %bb88, %bb90, %bb98, %bb96, %bb94
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7701
  %453 = load i8* %fail, align 1, !dbg !7702
  %454 = icmp ne i8 %453, 0, !dbg !7702
  br i1 %454, label %DONE, label %bb100, !dbg !7702

bb100:                                            ; preds = %bb99
  %455 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 9, !dbg !7702
  %456 = load i8* %455, align 1, !dbg !7702
  %457 = icmp ne i8 %456, 0, !dbg !7702
  br i1 %457, label %DONE, label %bb101, !dbg !7702

bb101:                                            ; preds = %bb100
  %458 = load i32** %wb, align 8, !dbg !7703
  store i32 0, i32* %458, align 4, !dbg !7703
  %459 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7704
  %460 = load i32* %459, align 8, !dbg !7704
  %461 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !7704
  %462 = load i8* %461, align 8, !dbg !7704
  %463 = zext i8 %462 to i32, !dbg !7704
  %464 = add nsw i32 %460, %463, !dbg !7704
  %465 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7704
  store i32 %464, i32* %465, align 8, !dbg !7704
  br label %NEXT_FMT, !dbg !7704

MATCH_CHAR:                                       ; preds = %bb23, %bb3
  %466 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !7705
  %467 = load i8** %fmt, align 8, !dbg !7705
  %468 = load i8* %467, align 1, !dbg !7705
  %469 = zext i8 %468 to i32, !dbg !7705
  %470 = icmp ne i32 %466, %469, !dbg !7705
  br i1 %470, label %bb103, label %NEXT_FMT, !dbg !7705

bb103:                                            ; preds = %MATCH_CHAR
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !7706
  br label %DONE, !dbg !7706

NEXT_FMT:                                         ; preds = %bb31, %bb25, %bb26, %MATCH_CHAR, %bb101, %bb84, %bb72, %bb45, %bb21
  %471 = load i8** %fmt, align 8, !dbg !7707
  %472 = getelementptr inbounds i8* %471, i64 1, !dbg !7707
  store i8* %472, i8** %fmt, align 8, !dbg !7707
  %473 = load %4** %fp_addr, align 8, !dbg !7708
  %474 = getelementptr inbounds %4* %473, i32 0, i32 0, !dbg !7708
  %475 = load i16* %474, align 8, !dbg !7708
  %476 = zext i16 %475 to i32, !dbg !7708
  %477 = and i32 %476, 8, !dbg !7708
  %478 = icmp ne i32 %477, 0, !dbg !7708
  br i1 %478, label %DONE, label %bb104, !dbg !7708

bb104:                                            ; preds = %NEXT_FMT, %entry
  %479 = load i8** %fmt, align 8, !dbg !7584
  %480 = load i8* %479, align 1, !dbg !7584
  %481 = icmp ne i8 %480, 0, !dbg !7584
  br i1 %481, label %bb, label %DONE, !dbg !7584

DONE:                                             ; preds = %DO_LEFTBRACKET, %bb104, %NEXT_FMT, %bb103, %bb100, %bb99, %bb83, %bb71, %bb58, %bb44, %bb31, %bb22, %bb6
  %482 = load %4** %fp_addr, align 8, !dbg !7709
  %483 = getelementptr inbounds %4* %482, i32 0, i32 0, !dbg !7709
  %484 = load i16* %483, align 8, !dbg !7709
  %485 = zext i16 %484 to i32, !dbg !7709
  %486 = and i32 %485, 8, !dbg !7709
  %487 = icmp ne i32 %486, 0, !dbg !7709
  br i1 %487, label %bb108, label %bb105, !dbg !7709

bb105:                                            ; preds = %DONE
  %488 = load i8** %fmt, align 8, !dbg !7709
  %489 = load i8* %488, align 1, !dbg !7709
  %490 = icmp eq i8 %489, 0, !dbg !7709
  br i1 %490, label %bb109, label %bb106, !dbg !7709

bb106:                                            ; preds = %bb105
  %491 = load i8* %zero_conversions, align 1, !dbg !7709
  %492 = icmp eq i8 %491, 0, !dbg !7709
  br i1 %492, label %bb109, label %bb107, !dbg !7709

bb107:                                            ; preds = %bb106
  %493 = load %4** %fp_addr, align 8, !dbg !7709
  %494 = getelementptr inbounds %4* %493, i32 0, i32 0, !dbg !7709
  %495 = load i16* %494, align 8, !dbg !7709
  %496 = zext i16 %495 to i32, !dbg !7709
  %497 = and i32 %496, 4, !dbg !7709
  %498 = icmp ne i32 %497, 0, !dbg !7709
  br i1 %498, label %bb108, label %bb109, !dbg !7709

bb108:                                            ; preds = %bb107, %DONE
  %499 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7710
  store i32 -1, i32* %499, align 8, !dbg !7710
  br label %bb109, !dbg !7710

bb109:                                            ; preds = %bb108, %bb107, %bb106, %bb105
  call void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind, !dbg !7711
  %500 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !7712
  %501 = load i32* %500, align 8, !dbg !7712
  store i32 %501, i32* %0, align 4, !dbg !7712
  %502 = load i32* %0, align 4, !dbg !7712
  store i32 %502, i32* %retval, align 4, !dbg !7712
  %retval110 = load i32* %retval, !dbg !7712
  ret i32 %retval110, !dbg !7712
}

define internal void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind inlinehint {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7713
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 7, !dbg !7713
  %2 = load i8* %1, align 1, !dbg !7713
  %3 = sext i8 %2 to i32, !dbg !7713
  %4 = and i32 %3, 1, !dbg !7713
  %5 = trunc i32 %4 to i8, !dbg !7713
  %toBool = icmp ne i8 %5, 0, !dbg !7713
  br i1 %toBool, label %bb, label %return, !dbg !7713

bb:                                               ; preds = %entry
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7715
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 2, !dbg !7715
  %8 = load %4** %7, align 8, !dbg !7715
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7715
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 1, !dbg !7715
  %11 = load i32* %10, align 4, !dbg !7715
  %12 = call i32 @ungetc(i32 %11, %4* %8) nounwind, !dbg !7715
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7716
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 3, !dbg !7716
  %15 = load i32* %14, align 8, !dbg !7716
  %16 = icmp eq i32 %15, 0, !dbg !7716
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7717
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 2, !dbg !7717
  %19 = load %4** %18, align 8, !dbg !7717
  br i1 %16, label %bb1, label %bb2, !dbg !7716

bb1:                                              ; preds = %bb
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7717
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 5, !dbg !7717
  %22 = load i32* %21, align 8, !dbg !7717
  %23 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !7717
  %24 = getelementptr inbounds [2 x i32]* %23, i64 0, i64 1, !dbg !7717
  store i32 %22, i32* %24, align 4, !dbg !7717
  br label %return, !dbg !7717

bb2:                                              ; preds = %bb
  %25 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !7718
  %26 = getelementptr inbounds [2 x i32]* %25, i64 0, i64 1, !dbg !7718
  store i32 0, i32* %26, align 4, !dbg !7718
  br label %return, !dbg !7718

return:                                           ; preds = %entry, %bb1, %bb2
  ret void, !dbg !7719
}

define i64 @wcrtomb(i8* noalias %s, i32 %wc, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %wc_addr = alloca i32, align 4
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %pwc = alloca i32*
  %r = alloca i64
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %wc, i32* %wc_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %s_addr, align 8, !dbg !7720
  %2 = icmp eq i8* %1, null, !dbg !7720
  br i1 %2, label %bb, label %bb2, !dbg !7720

bb:                                               ; preds = %entry
  %buf1 = bitcast [16 x i8]* %buf to i8*, !dbg !7722
  store i8* %buf1, i8** %s_addr, align 8, !dbg !7722
  store i32 0, i32* %wc_addr, align 4, !dbg !7723
  br label %bb2, !dbg !7723

bb2:                                              ; preds = %bb, %entry
  %wcbuf3 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !7724
  store i32* %wcbuf3, i32** %pwc, align 8, !dbg !7724
  %3 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !7725
  %4 = load i32* %wc_addr, align 4, !dbg !7725
  store i32 %4, i32* %3, align 4, !dbg !7725
  %5 = load i8** %s_addr, align 8, !dbg !7726
  %6 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7726
  %7 = call i64 @wcsnrtombs(i8* noalias %5, i32** noalias %pwc, i64 1, i64 16, %struct.__mbstate_t* noalias %6) nounwind, !dbg !7726
  store i64 %7, i64* %r, align 8, !dbg !7726
  %8 = load i64* %r, align 8, !dbg !7727
  %9 = icmp ne i64 %8, 0, !dbg !7727
  br i1 %9, label %bb4, label %bb5, !dbg !7727

bb4:                                              ; preds = %bb2
  %10 = load i64* %r, align 8, !dbg !7727
  store i64 %10, i64* %iftmp.0, align 8, !dbg !7727
  br label %bb6, !dbg !7727

bb5:                                              ; preds = %bb2
  store i64 1, i64* %iftmp.0, align 8, !dbg !7727
  br label %bb6, !dbg !7727

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i64* %iftmp.0, align 8, !dbg !7727
  store i64 %11, i64* %0, align 8, !dbg !7727
  %12 = load i64* %0, align 8, !dbg !7727
  store i64 %12, i64* %retval, align 8, !dbg !7727
  %retval7 = load i64* %retval, !dbg !7727
  ret i64 %retval7, !dbg !7727
}

define i64 @wcsnrtombs(i8* noalias %dst, i32** noalias %src, i64 %NWC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %NWC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i32*
  %count = alloca i64
  %incr = alloca i32
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %NWC, i64* %NWC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  store i32 1, i32* %incr, align 4, !dbg !7728
  %1 = load i8** %dst_addr, align 8, !dbg !7730
  %2 = icmp eq i8* %1, null, !dbg !7730
  br i1 %2, label %bb1, label %bb, !dbg !7730

bb:                                               ; preds = %entry
  %3 = load i32*** %src_addr, align 8, !dbg !7730
  %4 = bitcast i32** %3 to i8*, !dbg !7730
  %5 = load i8** %dst_addr, align 8, !dbg !7730
  %6 = icmp eq i8* %5, %4, !dbg !7730
  br i1 %6, label %bb1, label %bb5, !dbg !7730

bb1:                                              ; preds = %bb, %entry
  %7 = load i8** %dst_addr, align 8, !dbg !7731
  %8 = icmp eq i8* %7, null, !dbg !7731
  br i1 %8, label %bb2, label %bb3, !dbg !7731

bb2:                                              ; preds = %bb1
  store i64 -1, i64* %len_addr, align 8, !dbg !7732
  br label %bb3, !dbg !7732

bb3:                                              ; preds = %bb2, %bb1
  %buf4 = bitcast [16 x i8]* %buf to i8*, !dbg !7733
  store i8* %buf4, i8** %dst_addr, align 8, !dbg !7733
  store i32 0, i32* %incr, align 4, !dbg !7734
  br label %bb5, !dbg !7734

bb5:                                              ; preds = %bb3, %bb
  %9 = load i64* %len_addr, align 8, !dbg !7735
  %10 = load i64* %NWC_addr, align 8, !dbg !7735
  %11 = icmp ugt i64 %9, %10, !dbg !7735
  br i1 %11, label %bb6, label %bb7, !dbg !7735

bb6:                                              ; preds = %bb5
  %12 = load i64* %NWC_addr, align 8, !dbg !7736
  store i64 %12, i64* %len_addr, align 8, !dbg !7736
  br label %bb7, !dbg !7736

bb7:                                              ; preds = %bb6, %bb5
  %13 = load i64* %len_addr, align 8, !dbg !7737
  store i64 %13, i64* %count, align 8, !dbg !7737
  %14 = load i32*** %src_addr, align 8, !dbg !7738
  %15 = load i32** %14, align 8, !dbg !7738
  store i32* %15, i32** %s, align 8, !dbg !7738
  br label %bb13, !dbg !7738

bb8:                                              ; preds = %bb13
  %16 = load i32** %s, align 8, !dbg !7739
  %17 = load i32* %16, align 4, !dbg !7739
  %18 = icmp ugt i32 %17, 127, !dbg !7739
  br i1 %18, label %bb9, label %bb10, !dbg !7739

bb9:                                              ; preds = %bb8
  store i32 84, i32* @errno, align 4, !dbg !7740
  store i64 -1, i64* %0, align 8, !dbg !7741
  br label %bb18, !dbg !7741

bb10:                                             ; preds = %bb8
  %19 = load i32** %s, align 8, !dbg !7742
  %20 = load i32* %19, align 4, !dbg !7742
  %21 = trunc i32 %20 to i8, !dbg !7742
  %22 = load i8** %dst_addr, align 8, !dbg !7742
  store i8 %21, i8* %22, align 1, !dbg !7742
  %23 = load i8** %dst_addr, align 8, !dbg !7742
  %24 = load i8* %23, align 1, !dbg !7742
  %25 = icmp eq i8 %24, 0, !dbg !7742
  br i1 %25, label %bb11, label %bb12, !dbg !7742

bb11:                                             ; preds = %bb10
  store i32* null, i32** %s, align 8, !dbg !7743
  br label %bb14, !dbg !7743

bb12:                                             ; preds = %bb10
  %26 = load i32** %s, align 8, !dbg !7744
  %27 = getelementptr inbounds i32* %26, i64 1, !dbg !7744
  store i32* %27, i32** %s, align 8, !dbg !7744
  %28 = load i8** %dst_addr, align 8, !dbg !7745
  %29 = load i32* %incr, align 4, !dbg !7745
  %30 = sext i32 %29 to i64, !dbg !7745
  %31 = getelementptr inbounds i8* %28, i64 %30, !dbg !7745
  store i8* %31, i8** %dst_addr, align 8, !dbg !7745
  %32 = load i64* %count, align 8, !dbg !7746
  %33 = sub i64 %32, 1, !dbg !7746
  store i64 %33, i64* %count, align 8, !dbg !7746
  br label %bb13, !dbg !7746

bb13:                                             ; preds = %bb12, %bb7
  %34 = load i64* %count, align 8, !dbg !7747
  %35 = icmp ne i64 %34, 0, !dbg !7747
  br i1 %35, label %bb8, label %bb14, !dbg !7747

bb14:                                             ; preds = %bb13, %bb11
  %buf15 = bitcast [16 x i8]* %buf to i8*, !dbg !7748
  %36 = load i8** %dst_addr, align 8, !dbg !7748
  %37 = icmp ne i8* %buf15, %36, !dbg !7748
  br i1 %37, label %bb16, label %bb17, !dbg !7748

bb16:                                             ; preds = %bb14
  %38 = load i32** %s, align 8, !dbg !7749
  %39 = load i32*** %src_addr, align 8, !dbg !7749
  store i32* %38, i32** %39, align 8, !dbg !7749
  br label %bb17, !dbg !7749

bb17:                                             ; preds = %bb16, %bb14
  %40 = load i64* %len_addr, align 8, !dbg !7750
  %41 = load i64* %count, align 8, !dbg !7750
  %42 = sub i64 %40, %41, !dbg !7750
  store i64 %42, i64* %0, align 8, !dbg !7750
  br label %bb18, !dbg !7750

bb18:                                             ; preds = %bb17, %bb9
  %43 = load i64* %0, align 8, !dbg !7741
  store i64 %43, i64* %retval, align 8, !dbg !7741
  %retval19 = load i64* %retval, !dbg !7741
  ret i64 %retval19, !dbg !7741
}

define hidden void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %fp) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %fp_addr = alloca %4*, align 8
  %iftmp.0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store %4* %fp, %4** %fp_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7751
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 2, !dbg !7751
  %2 = load %4** %fp_addr, align 8, !dbg !7751
  store %4* %2, %4** %1, align 8, !dbg !7751
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7753
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 3, !dbg !7753
  store i32 0, i32* %4, align 8, !dbg !7753
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7754
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 7, !dbg !7754
  store i8 0, i8* %6, align 1, !dbg !7754
  %7 = load %4** %fp_addr, align 8, !dbg !7755
  %8 = getelementptr inbounds %4* %7, i32 0, i32 0, !dbg !7755
  %9 = load i16* %8, align 8, !dbg !7755
  %10 = zext i16 %9 to i32, !dbg !7755
  %11 = and i32 %10, 2, !dbg !7755
  %12 = icmp ne i32 %11, 0, !dbg !7755
  br i1 %12, label %bb, label %bb1, !dbg !7755

bb:                                               ; preds = %entry
  %13 = load %4** %fp_addr, align 8, !dbg !7755
  %14 = getelementptr inbounds %4* %13, i32 0, i32 10, !dbg !7755
  %15 = getelementptr inbounds [2 x i32]* %14, i64 0, i64 1, !dbg !7755
  %16 = load i32* %15, align 4, !dbg !7755
  store i32 %16, i32* %iftmp.0, align 4, !dbg !7755
  br label %bb2, !dbg !7755

bb1:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !7755
  br label %bb2, !dbg !7755

bb2:                                              ; preds = %bb1, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7755
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 5, !dbg !7755
  %19 = load i32* %iftmp.0, align 4, !dbg !7755
  store i32 %19, i32* %18, align 8, !dbg !7755
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7756
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 8, !dbg !7756
  store i8 0, i8* %21, align 2, !dbg !7756
  %22 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7757
  %23 = getelementptr inbounds %struct.scan_cookie* %22, i32 0, i32 9, !dbg !7757
  store i8 0, i8* %23, align 1, !dbg !7757
  %24 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7758
  %25 = getelementptr inbounds %struct.scan_cookie* %24, i32 0, i32 14, !dbg !7758
  store i8* getelementptr inbounds ([2 x i8]* @decpt_str, i64 0, i64 0), i8** %25, align 8, !dbg !7758
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7758
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 14, !dbg !7758
  %28 = load i8** %27, align 8, !dbg !7758
  %29 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7758
  %30 = getelementptr inbounds %struct.scan_cookie* %29, i32 0, i32 17, !dbg !7758
  store i8* %28, i8** %30, align 8, !dbg !7758
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7759
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 15, !dbg !7759
  store i32 1, i32* %32, align 8, !dbg !7759
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7760
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 16, !dbg !7760
  store i32 46, i32* %34, align 4, !dbg !7760
  ret void, !dbg !7761
}

define hidden i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %c = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7762
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 0, !dbg !7762
  store i32 -1, i32* %2, align 8, !dbg !7762
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7764
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 4, !dbg !7764
  %5 = load i32* %4, align 4, !dbg !7764
  %6 = sub nsw i32 %5, 1, !dbg !7764
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7764
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !7764
  store i32 %6, i32* %8, align 4, !dbg !7764
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7764
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 4, !dbg !7764
  %11 = load i32* %10, align 4, !dbg !7764
  %12 = icmp slt i32 %11, 0, !dbg !7764
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7765
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 7, !dbg !7765
  %15 = load i8* %14, align 1, !dbg !7765
  br i1 %12, label %bb, label %bb1, !dbg !7764

bb:                                               ; preds = %entry
  %16 = or i8 %15, 2, !dbg !7765
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7765
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 7, !dbg !7765
  store i8 %16, i8* %18, align 1, !dbg !7765
  store i32 -1, i32* %0, align 4, !dbg !7766
  br label %bb7, !dbg !7766

bb1:                                              ; preds = %entry
  %19 = icmp eq i8 %15, 0, !dbg !7767
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7768
  br i1 %19, label %bb2, label %bb5, !dbg !7767

bb2:                                              ; preds = %bb1
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 13, !dbg !7768
  %22 = load i32 (%struct.scan_cookie*)** %21, align 8, !dbg !7768
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7768
  %24 = call i32 %22(%struct.scan_cookie* %23) nounwind, !dbg !7768
  store i32 %24, i32* %c, align 4, !dbg !7768
  %25 = load i32* %c, align 4, !dbg !7768
  %26 = icmp eq i32 %25, -1, !dbg !7768
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7769
  br i1 %26, label %bb3, label %bb4, !dbg !7768

bb3:                                              ; preds = %bb2
  %28 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 7, !dbg !7769
  %29 = load i8* %28, align 1, !dbg !7769
  %30 = or i8 %29, 2, !dbg !7769
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7769
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 7, !dbg !7769
  store i8 %30, i8* %32, align 1, !dbg !7769
  store i32 -1, i32* %0, align 4, !dbg !7770
  br label %bb7, !dbg !7770

bb4:                                              ; preds = %bb2
  %33 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 1, !dbg !7771
  %34 = load i32* %c, align 4, !dbg !7771
  store i32 %34, i32* %33, align 4, !dbg !7771
  br label %bb6, !dbg !7771

bb5:                                              ; preds = %bb1
  %35 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 7, !dbg !7772
  store i8 0, i8* %35, align 1, !dbg !7772
  br label %bb6, !dbg !7772

bb6:                                              ; preds = %bb5, %bb4
  %36 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7773
  %37 = getelementptr inbounds %struct.scan_cookie* %36, i32 0, i32 3, !dbg !7773
  %38 = load i32* %37, align 8, !dbg !7773
  %39 = add nsw i32 %38, 1, !dbg !7773
  %40 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7773
  %41 = getelementptr inbounds %struct.scan_cookie* %40, i32 0, i32 3, !dbg !7773
  store i32 %39, i32* %41, align 8, !dbg !7773
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7774
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 1, !dbg !7774
  %44 = load i32* %43, align 4, !dbg !7774
  %45 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7774
  %46 = getelementptr inbounds %struct.scan_cookie* %45, i32 0, i32 0, !dbg !7774
  store i32 %44, i32* %46, align 8, !dbg !7774
  %47 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7774
  %48 = getelementptr inbounds %struct.scan_cookie* %47, i32 0, i32 0, !dbg !7774
  %49 = load i32* %48, align 8, !dbg !7774
  store i32 %49, i32* %0, align 4, !dbg !7774
  br label %bb7, !dbg !7774

bb7:                                              ; preds = %bb6, %bb3, %bb
  %50 = load i32* %0, align 4, !dbg !7766
  store i32 %50, i32* %retval, align 4, !dbg !7766
  %retval8 = load i32* %retval, !dbg !7766
  ret i32 %retval8, !dbg !7766
}

define hidden void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7775
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 4, !dbg !7775
  %2 = load i32* %1, align 4, !dbg !7775
  %3 = add nsw i32 %2, 1, !dbg !7775
  %4 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7775
  %5 = getelementptr inbounds %struct.scan_cookie* %4, i32 0, i32 4, !dbg !7775
  store i32 %3, i32* %5, align 4, !dbg !7775
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7777
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 7, !dbg !7777
  %8 = load i8* %7, align 1, !dbg !7777
  %9 = icmp eq i8 %8, 2, !dbg !7777
  %10 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7778
  %11 = getelementptr inbounds %struct.scan_cookie* %10, i32 0, i32 7, !dbg !7778
  br i1 %9, label %bb, label %bb1, !dbg !7777

bb:                                               ; preds = %entry
  store i8 0, i8* %11, align 1, !dbg !7778
  %12 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7779
  %13 = getelementptr inbounds %struct.scan_cookie* %12, i32 0, i32 1, !dbg !7779
  %14 = load i32* %13, align 4, !dbg !7779
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7779
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 0, !dbg !7779
  store i32 %14, i32* %16, align 8, !dbg !7779
  br label %return, !dbg !7779

bb1:                                              ; preds = %entry
  %17 = load i8* %11, align 1, !dbg !7780
  %18 = icmp eq i8 %17, 0, !dbg !7780
  br i1 %18, label %bb2, label %return, !dbg !7780

bb2:                                              ; preds = %bb1
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7781
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 7, !dbg !7781
  store i8 1, i8* %20, align 1, !dbg !7781
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7782
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 3, !dbg !7782
  %23 = load i32* %22, align 8, !dbg !7782
  %24 = sub nsw i32 %23, 1, !dbg !7782
  %25 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7782
  %26 = getelementptr inbounds %struct.scan_cookie* %25, i32 0, i32 3, !dbg !7782
  store i32 %24, i32* %26, align 8, !dbg !7782
  br label %return, !dbg !7782

return:                                           ; preds = %bb, %bb1, %bb2
  ret void, !dbg !7783
}

define hidden i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %b = alloca i8*
  %p = alloca i8*
  %exp_adjust = alloca i32
  %buf = alloca [167 x i8]
  %usflag = alloca i8
  %base = alloca i8
  %nonzero = alloca i8
  %seendigit = alloca i8
  %x = alloca x86_fp80
  %e = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store i32 0, i32* %exp_adjust, align 4, !dbg !7784
  store i8 0, i8* %nonzero, align 1, !dbg !7786
  store i8 0, i8* %seendigit, align 1, !dbg !7787
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7788
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 7, !dbg !7788
  %3 = load i32* %2, align 8, !dbg !7788
  %4 = sub nsw i32 %3, 1, !dbg !7788
  %5 = sext i32 %4 to i64, !dbg !7788
  %6 = getelementptr inbounds [15 x i8]* @spec_base, i64 0, i64 %5, !dbg !7788
  %7 = load i8* %6, align 1, !dbg !7788
  store i8 %7, i8* %base, align 1, !dbg !7788
  %8 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7789
  %9 = getelementptr inbounds %struct.psfs_t* %8, i32 0, i32 7, !dbg !7789
  %10 = load i32* %9, align 8, !dbg !7789
  %11 = icmp sle i32 %10, 5, !dbg !7789
  %12 = zext i1 %11 to i8, !dbg !7789
  store i8 %12, i8* %usflag, align 1, !dbg !7789
  %buf1 = bitcast [167 x i8]* %buf to i8*, !dbg !7790
  store i8* %buf1, i8** %b, align 8, !dbg !7790
  %13 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7791
  %14 = getelementptr inbounds %struct.psfs_t* %13, i32 0, i32 7, !dbg !7791
  %15 = load i32* %14, align 8, !dbg !7791
  %16 = icmp eq i32 %15, 1, !dbg !7791
  br i1 %16, label %bb, label %bb12, !dbg !7791

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), i8** %p, align 8, !dbg !7792
  br label %bb2, !dbg !7792

bb2:                                              ; preds = %bb7, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7793
  %18 = call i32 @__scan_getc(%struct.scan_cookie* %17) nounwind, !dbg !7793
  %19 = icmp slt i32 %18, 0, !dbg !7793
  br i1 %19, label %bb4, label %bb3, !dbg !7793

bb3:                                              ; preds = %bb2
  %20 = load i8** %p, align 8, !dbg !7793
  %21 = load i8* %20, align 1, !dbg !7793
  %22 = zext i8 %21 to i32, !dbg !7793
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7793
  %24 = getelementptr inbounds %struct.scan_cookie* %23, i32 0, i32 0, !dbg !7793
  %25 = load i32* %24, align 8, !dbg !7793
  %26 = icmp ne i32 %22, %25, !dbg !7793
  br i1 %26, label %bb4, label %bb7, !dbg !7793

bb4:                                              ; preds = %bb3, %bb2
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7794
  call void @__scan_ungetc(%struct.scan_cookie* %27) nounwind, !dbg !7794
  %28 = load i8** %p, align 8, !dbg !7795
  %29 = icmp ugt i8* %28, getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), !dbg !7795
  br i1 %29, label %bb5, label %bb12, !dbg !7795

bb5:                                              ; preds = %bb4
  store i32 -2, i32* %0, align 4, !dbg !7796
  br label %bb104, !dbg !7796

bb7:                                              ; preds = %bb3
  %30 = load i8** %p, align 8, !dbg !7797
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !7797
  store i8* %31, i8** %p, align 8, !dbg !7797
  %32 = load i8** %p, align 8, !dbg !7797
  %33 = load i8* %32, align 1, !dbg !7797
  %34 = icmp eq i8 %33, 0, !dbg !7797
  br i1 %34, label %bb8, label %bb2, !dbg !7797

bb8:                                              ; preds = %bb7
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7798
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 9, !dbg !7798
  %37 = load i8* %36, align 8, !dbg !7798
  %38 = icmp ne i8 %37, 0, !dbg !7798
  br i1 %38, label %bb9, label %bb10, !dbg !7798

bb9:                                              ; preds = %bb8
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7799
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 5, !dbg !7799
  %41 = load i32* %40, align 8, !dbg !7799
  %42 = add nsw i32 %41, 1, !dbg !7799
  %43 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7799
  %44 = getelementptr inbounds %struct.psfs_t* %43, i32 0, i32 5, !dbg !7799
  store i32 %42, i32* %44, align 8, !dbg !7799
  %45 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7800
  %46 = getelementptr inbounds %struct.psfs_t* %45, i32 0, i32 6, !dbg !7800
  %47 = load i32* %46, align 4, !dbg !7800
  %48 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7800
  %49 = getelementptr inbounds %struct.psfs_t* %48, i32 0, i32 3, !dbg !7800
  %50 = load i8** %49, align 8, !dbg !7800
  call void @_store_inttype(i8* %50, i32 %47, i64 0) nounwind, !dbg !7800
  br label %bb10, !dbg !7800

bb10:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %0, align 4, !dbg !7801
  br label %bb104, !dbg !7801

bb12:                                             ; preds = %bb4, %entry
  %51 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7802
  %52 = call i32 @__scan_getc(%struct.scan_cookie* %51) nounwind, !dbg !7802
  %53 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7803
  %54 = getelementptr inbounds %struct.scan_cookie* %53, i32 0, i32 0, !dbg !7803
  %55 = load i32* %54, align 8, !dbg !7803
  %56 = icmp slt i32 %55, 0, !dbg !7803
  br i1 %56, label %bb13, label %bb14, !dbg !7803

bb13:                                             ; preds = %bb12
  store i32 -1, i32* %0, align 4, !dbg !7804
  br label %bb104, !dbg !7804

bb14:                                             ; preds = %bb12
  %57 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7805
  %58 = getelementptr inbounds %struct.scan_cookie* %57, i32 0, i32 0, !dbg !7805
  %59 = load i32* %58, align 8, !dbg !7805
  %60 = icmp eq i32 %59, 43, !dbg !7805
  br i1 %60, label %bb16, label %bb15, !dbg !7805

bb15:                                             ; preds = %bb14
  %61 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7805
  %62 = getelementptr inbounds %struct.scan_cookie* %61, i32 0, i32 0, !dbg !7805
  %63 = load i32* %62, align 8, !dbg !7805
  %64 = icmp eq i32 %63, 45, !dbg !7805
  br i1 %64, label %bb16, label %bb17, !dbg !7805

bb16:                                             ; preds = %bb15, %bb14
  %65 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7806
  %66 = getelementptr inbounds %struct.scan_cookie* %65, i32 0, i32 0, !dbg !7806
  %67 = load i32* %66, align 8, !dbg !7806
  %68 = trunc i32 %67 to i8, !dbg !7806
  %69 = load i8** %b, align 8, !dbg !7806
  store i8 %68, i8* %69, align 1, !dbg !7806
  %70 = load i8** %b, align 8, !dbg !7806
  %71 = getelementptr inbounds i8* %70, i64 1, !dbg !7806
  store i8* %71, i8** %b, align 8, !dbg !7806
  %72 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7807
  %73 = call i32 @__scan_getc(%struct.scan_cookie* %72) nounwind, !dbg !7807
  br label %bb17, !dbg !7807

bb17:                                             ; preds = %bb16, %bb15
  %74 = load i8* %base, align 1, !dbg !7808
  %75 = zext i8 %74 to i32, !dbg !7808
  %76 = and i32 %75, 239, !dbg !7808
  %77 = icmp eq i32 %76, 0, !dbg !7808
  br i1 %77, label %bb18, label %bb27, !dbg !7808

bb18:                                             ; preds = %bb17
  %78 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7809
  %79 = getelementptr inbounds %struct.scan_cookie* %78, i32 0, i32 0, !dbg !7809
  %80 = load i32* %79, align 8, !dbg !7809
  %81 = icmp eq i32 %80, 48, !dbg !7809
  br i1 %81, label %bb19, label %bb25, !dbg !7809

bb19:                                             ; preds = %bb18
  %82 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7810
  %83 = call i32 @__scan_getc(%struct.scan_cookie* %82) nounwind, !dbg !7810
  %84 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7811
  %85 = getelementptr inbounds %struct.scan_cookie* %84, i32 0, i32 0, !dbg !7811
  %86 = load i32* %85, align 8, !dbg !7811
  %87 = or i32 %86, 32, !dbg !7811
  %88 = icmp eq i32 %87, 120, !dbg !7811
  %89 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7812
  br i1 %88, label %bb20, label %bb22, !dbg !7811

bb20:                                             ; preds = %bb19
  %90 = call i32 @__scan_getc(%struct.scan_cookie* %89) nounwind, !dbg !7812
  %91 = icmp slt i32 %90, 0, !dbg !7812
  br i1 %91, label %DONE_DO_UNGET, label %bb21, !dbg !7812

bb21:                                             ; preds = %bb20
  store i8 16, i8* %base, align 1, !dbg !7813
  br label %bb27, !dbg !7813

bb22:                                             ; preds = %bb19
  call void @__scan_ungetc(%struct.scan_cookie* %89) nounwind, !dbg !7814
  %92 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7815
  %93 = getelementptr inbounds %struct.scan_cookie* %92, i32 0, i32 0, !dbg !7815
  store i32 48, i32* %93, align 8, !dbg !7815
  %94 = load i8* %base, align 1, !dbg !7816
  %int_cast_to_i64 = zext i8 1 to i64
  %95 = icmp ult i64 %int_cast_to_i64, 8
  br i1 %95, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb22
  %96 = lshr i8 %94, 1, !dbg !7816
  %97 = add i8 %96, 8, !dbg !7816
  store i8 %97, i8* %base, align 1, !dbg !7816
  %98 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7817
  %99 = getelementptr inbounds %struct.psfs_t* %98, i32 0, i32 7, !dbg !7817
  %100 = load i32* %99, align 8, !dbg !7817
  %101 = icmp sgt i32 %100, 7, !dbg !7817
  br i1 %101, label %bb23, label %bb27, !dbg !7817

bb23:                                             ; preds = %klee_overshift_check.exit
  store i8 10, i8* %base, align 1, !dbg !7818
  br label %bb27, !dbg !7818

bb25:                                             ; preds = %bb18
  %102 = load i8* %base, align 1, !dbg !7819
  %103 = icmp eq i8 %102, 0, !dbg !7819
  br i1 %103, label %bb26, label %bb27, !dbg !7819

bb26:                                             ; preds = %bb25
  store i8 10, i8* %base, align 1, !dbg !7820
  br label %bb27, !dbg !7820

bb27:                                             ; preds = %bb21, %klee_overshift_check.exit, %bb23, %bb26, %bb25, %bb17
  %104 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7821
  %105 = getelementptr inbounds %struct.scan_cookie* %104, i32 0, i32 0, !dbg !7821
  %106 = load i32* %105, align 8, !dbg !7821
  %107 = icmp eq i32 %106, 48, !dbg !7821
  br i1 %107, label %bb28, label %bb38, !dbg !7821

bb28:                                             ; preds = %bb27
  store i8 1, i8* %seendigit, align 1, !dbg !7822
  %108 = load i8** %b, align 8, !dbg !7823
  store i8 48, i8* %108, align 1, !dbg !7823
  %109 = load i8** %b, align 8, !dbg !7823
  %110 = getelementptr inbounds i8* %109, i64 1, !dbg !7823
  store i8* %110, i8** %b, align 8, !dbg !7823
  br label %bb29, !dbg !7823

bb29:                                             ; preds = %bb29, %bb28
  %111 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7824
  %112 = call i32 @__scan_getc(%struct.scan_cookie* %111) nounwind, !dbg !7824
  %113 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7825
  %114 = getelementptr inbounds %struct.scan_cookie* %113, i32 0, i32 0, !dbg !7825
  %115 = load i32* %114, align 8, !dbg !7825
  %116 = icmp eq i32 %115, 48, !dbg !7825
  br i1 %116, label %bb29, label %bb38, !dbg !7825

bb31:                                             ; preds = %bb40, %bb39
  %117 = load i8** %b, align 8, !dbg !7826
  %118 = ptrtoint i8* %117 to i64, !dbg !7826
  %buf32 = bitcast [167 x i8]* %buf to i8*, !dbg !7826
  %buf3233 = ptrtoint i8* %buf32 to i64, !dbg !7826
  %119 = sub nsw i64 %118, %buf3233, !dbg !7826
  %120 = icmp sle i64 %119, 64, !dbg !7826
  br i1 %120, label %bb35, label %bb36, !dbg !7826

bb35:                                             ; preds = %bb31
  store i8 1, i8* %seendigit, align 1, !dbg !7827
  %121 = load i8* %seendigit, align 1, !dbg !7827
  store i8 %121, i8* %nonzero, align 1, !dbg !7827
  %122 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7828
  %123 = getelementptr inbounds %struct.scan_cookie* %122, i32 0, i32 0, !dbg !7828
  %124 = load i32* %123, align 8, !dbg !7828
  %125 = trunc i32 %124 to i8, !dbg !7828
  %126 = load i8** %b, align 8, !dbg !7828
  store i8 %125, i8* %126, align 1, !dbg !7828
  %127 = load i8** %b, align 8, !dbg !7828
  %128 = getelementptr inbounds i8* %127, i64 1, !dbg !7828
  store i8* %128, i8** %b, align 8, !dbg !7828
  br label %bb37, !dbg !7828

bb36:                                             ; preds = %bb31
  %129 = load i32* %exp_adjust, align 4, !dbg !7829
  %130 = add nsw i32 %129, 1, !dbg !7829
  store i32 %130, i32* %exp_adjust, align 4, !dbg !7829
  br label %bb37, !dbg !7829

bb37:                                             ; preds = %bb36, %bb35
  %131 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7830
  %132 = call i32 @__scan_getc(%struct.scan_cookie* %131) nounwind, !dbg !7830
  br label %bb38, !dbg !7830

bb38:                                             ; preds = %bb27, %bb29, %bb37
  %133 = load i16** @__ctype_b, align 8, !dbg !7831
  %134 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7831
  %135 = getelementptr inbounds %struct.scan_cookie* %134, i32 0, i32 0, !dbg !7831
  %136 = load i32* %135, align 8, !dbg !7831
  %137 = sext i32 %136 to i64, !dbg !7831
  %138 = getelementptr inbounds i16* %133, i64 %137, !dbg !7831
  %139 = load i16* %138, align 1, !dbg !7831
  %140 = zext i16 %139 to i32, !dbg !7831
  %141 = and i32 %140, 4096, !dbg !7831
  %142 = icmp eq i32 %141, 0, !dbg !7831
  br i1 %142, label %bb41, label %bb39, !dbg !7831

bb39:                                             ; preds = %bb38
  %143 = load i8* %base, align 1, !dbg !7831
  %144 = icmp eq i8 %143, 16, !dbg !7831
  br i1 %144, label %bb31, label %bb40, !dbg !7831

bb40:                                             ; preds = %bb39
  %145 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7831
  %146 = getelementptr inbounds %struct.scan_cookie* %145, i32 0, i32 0, !dbg !7831
  %147 = load i32* %146, align 8, !dbg !7831
  %148 = sub nsw i32 %147, 48, !dbg !7831
  %149 = load i8* %base, align 1, !dbg !7831
  %150 = zext i8 %149 to i32, !dbg !7831
  %151 = icmp slt i32 %148, %150, !dbg !7831
  br i1 %151, label %bb31, label %bb41, !dbg !7831

bb41:                                             ; preds = %bb40, %bb38
  %152 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7832
  %153 = getelementptr inbounds %struct.psfs_t* %152, i32 0, i32 7, !dbg !7832
  %154 = load i32* %153, align 8, !dbg !7832
  %155 = icmp sle i32 %154, 7, !dbg !7832
  %156 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7833
  br i1 %155, label %bb42, label %bb50, !dbg !7832

bb42:                                             ; preds = %bb41
  call void @__scan_ungetc(%struct.scan_cookie* %156) nounwind, !dbg !7833
  %157 = load i8** %b, align 8, !dbg !7834
  store i8 0, i8* %157, align 1, !dbg !7834
  %158 = load i8* %seendigit, align 1, !dbg !7835
  %159 = icmp eq i8 %158, 0, !dbg !7835
  br i1 %159, label %DONE, label %bb43, !dbg !7835

bb43:                                             ; preds = %bb42
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7836
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 9, !dbg !7836
  %162 = load i8* %161, align 8, !dbg !7836
  %163 = icmp ne i8 %162, 0, !dbg !7836
  br i1 %163, label %bb44, label %bb49, !dbg !7836

bb44:                                             ; preds = %bb43
  %164 = getelementptr inbounds [167 x i8]* %buf, i64 0, i64 0, !dbg !7837
  %165 = load i8* %164, align 1, !dbg !7837
  %166 = icmp eq i8 %165, 45, !dbg !7837
  br i1 %166, label %bb45, label %bb46, !dbg !7837

bb45:                                             ; preds = %bb44
  store i8 0, i8* %usflag, align 1, !dbg !7838
  br label %bb46, !dbg !7838

bb46:                                             ; preds = %bb45, %bb44
  %167 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7839
  %168 = getelementptr inbounds %struct.psfs_t* %167, i32 0, i32 5, !dbg !7839
  %169 = load i32* %168, align 8, !dbg !7839
  %170 = add nsw i32 %169, 1, !dbg !7839
  %171 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7839
  %172 = getelementptr inbounds %struct.psfs_t* %171, i32 0, i32 5, !dbg !7839
  store i32 %170, i32* %172, align 8, !dbg !7839
  %173 = load i8* %usflag, align 1, !dbg !7840
  %174 = zext i8 %173 to i32, !dbg !7840
  %175 = sub nsw i32 1, %174, !dbg !7840
  %176 = load i8* %base, align 1, !dbg !7840
  %177 = zext i8 %176 to i32, !dbg !7840
  %buf47 = bitcast [167 x i8]* %buf to i8*, !dbg !7840
  %178 = call i64 @_stdlib_strto_l(i8* noalias %buf47, i8** noalias null, i32 %177, i32 %175) nounwind, !dbg !7840
  %179 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7840
  %180 = getelementptr inbounds %struct.psfs_t* %179, i32 0, i32 6, !dbg !7840
  %181 = load i32* %180, align 4, !dbg !7840
  %182 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7840
  %183 = getelementptr inbounds %struct.psfs_t* %182, i32 0, i32 3, !dbg !7840
  %184 = load i8** %183, align 8, !dbg !7840
  call void @_store_inttype(i8* %184, i32 %181, i64 %178) nounwind, !dbg !7840
  br label %bb49, !dbg !7840

bb49:                                             ; preds = %bb46, %bb43
  store i32 0, i32* %0, align 4, !dbg !7841
  br label %bb104, !dbg !7841

bb50:                                             ; preds = %bb41
  %185 = getelementptr inbounds %struct.scan_cookie* %156, i32 0, i32 17, !dbg !7842
  %186 = load i8** %185, align 8, !dbg !7842
  store i8* %186, i8** %p, align 8, !dbg !7842
  br label %bb51, !dbg !7842

bb51:                                             ; preds = %bb56, %bb50
  %187 = load i8** %p, align 8, !dbg !7843
  %188 = load i8* %187, align 1, !dbg !7843
  %189 = icmp eq i8 %188, 0, !dbg !7843
  br i1 %189, label %bb52, label %bb53, !dbg !7843

bb52:                                             ; preds = %bb51
  %190 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7844
  %191 = getelementptr inbounds %struct.scan_cookie* %190, i32 0, i32 14, !dbg !7844
  %192 = load i8** %191, align 8, !dbg !7844
  %193 = load i8** %b, align 8, !dbg !7844
  %194 = call i8* @strcpy(i8* noalias %193, i8* noalias %192) nounwind, !dbg !7844
  %195 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7845
  %196 = getelementptr inbounds %struct.scan_cookie* %195, i32 0, i32 15, !dbg !7845
  %197 = load i32* %196, align 8, !dbg !7845
  %198 = load i8** %b, align 8, !dbg !7845
  %199 = sext i32 %197 to i64, !dbg !7845
  %200 = getelementptr inbounds i8* %198, i64 %199, !dbg !7845
  store i8* %200, i8** %b, align 8, !dbg !7845
  %201 = load i8* %nonzero, align 1, !dbg !7846
  %202 = icmp eq i8 %201, 0, !dbg !7846
  br i1 %202, label %bb57, label %bb67, !dbg !7846

bb53:                                             ; preds = %bb51
  %203 = load i8** %p, align 8, !dbg !7847
  %204 = load i8* %203, align 1, !dbg !7847
  %205 = zext i8 %204 to i32, !dbg !7847
  %206 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7847
  %207 = getelementptr inbounds %struct.scan_cookie* %206, i32 0, i32 0, !dbg !7847
  %208 = load i32* %207, align 8, !dbg !7847
  %209 = icmp ne i32 %205, %208, !dbg !7847
  br i1 %209, label %bb54, label %bb56, !dbg !7847

bb54:                                             ; preds = %bb53
  %210 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7848
  %211 = getelementptr inbounds %struct.scan_cookie* %210, i32 0, i32 17, !dbg !7848
  %212 = load i8** %211, align 8, !dbg !7848
  %213 = load i8** %p, align 8, !dbg !7848
  %214 = icmp ult i8* %212, %213, !dbg !7848
  br i1 %214, label %DONE_DO_UNGET, label %DO_DIGIT_CHECK, !dbg !7848

bb56:                                             ; preds = %bb53
  %215 = load i8** %p, align 8, !dbg !7849
  %216 = getelementptr inbounds i8* %215, i64 1, !dbg !7849
  store i8* %216, i8** %p, align 8, !dbg !7849
  %217 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7850
  %218 = call i32 @__scan_getc(%struct.scan_cookie* %217) nounwind, !dbg !7850
  br label %bb51, !dbg !7850

bb57:                                             ; preds = %bb52
  %219 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7851
  %220 = getelementptr inbounds %struct.scan_cookie* %219, i32 0, i32 0, !dbg !7851
  %221 = load i32* %220, align 8, !dbg !7851
  %222 = icmp eq i32 %221, 48, !dbg !7851
  br i1 %222, label %bb58, label %bb67, !dbg !7851

bb58:                                             ; preds = %bb57
  %223 = load i8** %b, align 8, !dbg !7852
  store i8 48, i8* %223, align 1, !dbg !7852
  %224 = load i8** %b, align 8, !dbg !7852
  %225 = getelementptr inbounds i8* %224, i64 1, !dbg !7852
  store i8* %225, i8** %b, align 8, !dbg !7852
  %226 = load i32* %exp_adjust, align 4, !dbg !7853
  %227 = add nsw i32 %226, 1, !dbg !7853
  store i32 %227, i32* %exp_adjust, align 4, !dbg !7853
  store i8 1, i8* %seendigit, align 1, !dbg !7854
  br label %bb59, !dbg !7854

bb59:                                             ; preds = %bb59, %bb58
  %228 = load i32* %exp_adjust, align 4, !dbg !7855
  %229 = sub nsw i32 %228, 1, !dbg !7855
  store i32 %229, i32* %exp_adjust, align 4, !dbg !7855
  %230 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7856
  %231 = call i32 @__scan_getc(%struct.scan_cookie* %230) nounwind, !dbg !7856
  %232 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7857
  %233 = getelementptr inbounds %struct.scan_cookie* %232, i32 0, i32 0, !dbg !7857
  %234 = load i32* %233, align 8, !dbg !7857
  %235 = icmp eq i32 %234, 48, !dbg !7857
  br i1 %235, label %bb59, label %bb67, !dbg !7857

bb61:                                             ; preds = %bb69, %bb68
  %236 = load i8** %b, align 8, !dbg !7858
  %237 = ptrtoint i8* %236 to i64, !dbg !7858
  %buf62 = bitcast [167 x i8]* %buf to i8*, !dbg !7858
  %buf6263 = ptrtoint i8* %buf62 to i64, !dbg !7858
  %238 = sub nsw i64 %237, %buf6263, !dbg !7858
  %239 = icmp sle i64 %238, 64, !dbg !7858
  br i1 %239, label %bb65, label %bb66, !dbg !7858

bb65:                                             ; preds = %bb61
  store i8 1, i8* %seendigit, align 1, !dbg !7859
  %240 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7860
  %241 = getelementptr inbounds %struct.scan_cookie* %240, i32 0, i32 0, !dbg !7860
  %242 = load i32* %241, align 8, !dbg !7860
  %243 = trunc i32 %242 to i8, !dbg !7860
  %244 = load i8** %b, align 8, !dbg !7860
  store i8 %243, i8* %244, align 1, !dbg !7860
  %245 = load i8** %b, align 8, !dbg !7860
  %246 = getelementptr inbounds i8* %245, i64 1, !dbg !7860
  store i8* %246, i8** %b, align 8, !dbg !7860
  br label %bb66, !dbg !7860

bb66:                                             ; preds = %bb65, %bb61
  %247 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7861
  %248 = call i32 @__scan_getc(%struct.scan_cookie* %247) nounwind, !dbg !7861
  br label %bb67, !dbg !7861

bb67:                                             ; preds = %bb52, %bb57, %bb59, %bb66
  %249 = load i16** @__ctype_b, align 8, !dbg !7862
  %250 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7862
  %251 = getelementptr inbounds %struct.scan_cookie* %250, i32 0, i32 0, !dbg !7862
  %252 = load i32* %251, align 8, !dbg !7862
  %253 = sext i32 %252 to i64, !dbg !7862
  %254 = getelementptr inbounds i16* %249, i64 %253, !dbg !7862
  %255 = load i16* %254, align 1, !dbg !7862
  %256 = zext i16 %255 to i32, !dbg !7862
  %257 = and i32 %256, 4096, !dbg !7862
  %258 = icmp eq i32 %257, 0, !dbg !7862
  br i1 %258, label %DO_DIGIT_CHECK, label %bb68, !dbg !7862

bb68:                                             ; preds = %bb67
  %259 = load i8* %base, align 1, !dbg !7862
  %260 = icmp eq i8 %259, 16, !dbg !7862
  br i1 %260, label %bb61, label %bb69, !dbg !7862

bb69:                                             ; preds = %bb68
  %261 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7862
  %262 = getelementptr inbounds %struct.scan_cookie* %261, i32 0, i32 0, !dbg !7862
  %263 = load i32* %262, align 8, !dbg !7862
  %264 = sub nsw i32 %263, 48, !dbg !7862
  %265 = load i8* %base, align 1, !dbg !7862
  %266 = zext i8 %265 to i32, !dbg !7862
  %267 = icmp slt i32 %264, %266, !dbg !7862
  br i1 %267, label %bb61, label %DO_DIGIT_CHECK, !dbg !7862

DO_DIGIT_CHECK:                                   ; preds = %bb54, %bb69, %bb67
  %268 = load i8* %seendigit, align 1, !dbg !7863
  %269 = icmp eq i8 %268, 0, !dbg !7863
  br i1 %269, label %bb70, label %bb81, !dbg !7863

bb70:                                             ; preds = %DO_DIGIT_CHECK
  %270 = load i8* %base, align 1, !dbg !7864
  %271 = icmp eq i8 %270, 16, !dbg !7864
  br i1 %271, label %DONE_DO_UNGET, label %bb71, !dbg !7864

bb71:                                             ; preds = %bb70
  %272 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7866
  %273 = getelementptr inbounds %struct.scan_cookie* %272, i32 0, i32 0, !dbg !7866
  %274 = load i32* %273, align 8, !dbg !7866
  %275 = or i32 %274, 32, !dbg !7866
  switch i32 %275, label %DONE_DO_UNGET [
    i32 105, label %bb72
    i32 110, label %bb73
  ], !dbg !7866

bb72:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 3), i8** %p, align 8, !dbg !7867
  br label %bb75, !dbg !7867

bb73:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 0), i8** %p, align 8, !dbg !7868
  br label %bb75, !dbg !7868

bb75:                                             ; preds = %bb73, %bb72
  %276 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7869
  %277 = getelementptr inbounds %struct.scan_cookie* %276, i32 0, i32 0, !dbg !7869
  %278 = load i32* %277, align 8, !dbg !7869
  %279 = trunc i32 %278 to i8, !dbg !7869
  %280 = load i8** %b, align 8, !dbg !7869
  store i8 %279, i8* %280, align 1, !dbg !7869
  %281 = load i8** %b, align 8, !dbg !7869
  %282 = getelementptr inbounds i8* %281, i64 1, !dbg !7869
  store i8* %282, i8** %b, align 8, !dbg !7869
  br label %bb76, !dbg !7869

bb76:                                             ; preds = %bb77, %bb75
  %283 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7870
  %284 = call i32 @__scan_getc(%struct.scan_cookie* %283) nounwind, !dbg !7870
  %285 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7871
  %286 = getelementptr inbounds %struct.scan_cookie* %285, i32 0, i32 0, !dbg !7871
  %287 = load i32* %286, align 8, !dbg !7871
  %288 = or i32 %287, 32, !dbg !7871
  %289 = load i8** %p, align 8, !dbg !7871
  %290 = load i8* %289, align 1, !dbg !7871
  %291 = zext i8 %290 to i32, !dbg !7871
  %292 = icmp eq i32 %288, %291, !dbg !7871
  br i1 %292, label %bb77, label %bb78, !dbg !7871

bb77:                                             ; preds = %bb76
  %293 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7872
  %294 = getelementptr inbounds %struct.scan_cookie* %293, i32 0, i32 0, !dbg !7872
  %295 = load i32* %294, align 8, !dbg !7872
  %296 = trunc i32 %295 to i8, !dbg !7872
  %297 = load i8** %b, align 8, !dbg !7872
  store i8 %296, i8* %297, align 1, !dbg !7872
  %298 = load i8** %b, align 8, !dbg !7872
  %299 = getelementptr inbounds i8* %298, i64 1, !dbg !7872
  store i8* %299, i8** %b, align 8, !dbg !7872
  %300 = load i8** %p, align 8, !dbg !7873
  %301 = getelementptr inbounds i8* %300, i64 1, !dbg !7873
  store i8* %301, i8** %p, align 8, !dbg !7873
  br label %bb76, !dbg !7873

bb78:                                             ; preds = %bb76
  %302 = load i8** %p, align 8, !dbg !7874
  %303 = load i8* %302, align 1, !dbg !7874
  %304 = icmp eq i8 %303, 0, !dbg !7874
  %305 = load i8** %p, align 8, !dbg !7874
  %306 = icmp eq i8* %305, getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 5), !dbg !7874
  %or.cond = or i1 %304, %306
  br i1 %or.cond, label %GOT_FLOAT, label %DONE_DO_UNGET, !dbg !7874

bb81:                                             ; preds = %DO_DIGIT_CHECK
  %307 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7875
  %308 = getelementptr inbounds %struct.scan_cookie* %307, i32 0, i32 0, !dbg !7875
  %309 = load i32* %308, align 8, !dbg !7875
  %310 = or i32 %309, 32, !dbg !7875
  %311 = icmp eq i32 %310, 101, !dbg !7876
  br i1 %311, label %bb82, label %GOT_FLOAT, !dbg !7876

bb82:                                             ; preds = %bb81
  %312 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7877
  %313 = getelementptr inbounds %struct.scan_cookie* %312, i32 0, i32 0, !dbg !7877
  %314 = load i32* %313, align 8, !dbg !7877
  %315 = trunc i32 %314 to i8, !dbg !7877
  %316 = load i8** %b, align 8, !dbg !7877
  store i8 %315, i8* %316, align 1, !dbg !7877
  %317 = load i8** %b, align 8, !dbg !7877
  %318 = getelementptr inbounds i8* %317, i64 1, !dbg !7877
  store i8* %318, i8** %b, align 8, !dbg !7877
  %319 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7878
  %320 = call i32 @__scan_getc(%struct.scan_cookie* %319) nounwind, !dbg !7878
  %321 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7879
  %322 = getelementptr inbounds %struct.scan_cookie* %321, i32 0, i32 0, !dbg !7879
  %323 = load i32* %322, align 8, !dbg !7879
  %324 = icmp slt i32 %323, 0, !dbg !7879
  br i1 %324, label %DONE_DO_UNGET, label %bb83, !dbg !7879

bb83:                                             ; preds = %bb82
  %325 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7880
  %326 = getelementptr inbounds %struct.scan_cookie* %325, i32 0, i32 0, !dbg !7880
  %327 = load i32* %326, align 8, !dbg !7880
  %328 = icmp eq i32 %327, 43, !dbg !7880
  br i1 %328, label %bb85, label %bb84, !dbg !7880

bb84:                                             ; preds = %bb83
  %329 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7880
  %330 = getelementptr inbounds %struct.scan_cookie* %329, i32 0, i32 0, !dbg !7880
  %331 = load i32* %330, align 8, !dbg !7880
  %332 = icmp eq i32 %331, 45, !dbg !7880
  br i1 %332, label %bb85, label %bb86, !dbg !7880

bb85:                                             ; preds = %bb84, %bb83
  %333 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7881
  %334 = getelementptr inbounds %struct.scan_cookie* %333, i32 0, i32 0, !dbg !7881
  %335 = load i32* %334, align 8, !dbg !7881
  %336 = trunc i32 %335 to i8, !dbg !7881
  %337 = load i8** %b, align 8, !dbg !7881
  store i8 %336, i8* %337, align 1, !dbg !7881
  %338 = load i8** %b, align 8, !dbg !7881
  %339 = getelementptr inbounds i8* %338, i64 1, !dbg !7881
  store i8* %339, i8** %b, align 8, !dbg !7881
  %340 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7882
  %341 = call i32 @__scan_getc(%struct.scan_cookie* %340) nounwind, !dbg !7882
  br label %bb86, !dbg !7882

bb86:                                             ; preds = %bb85, %bb84
  store i8 0, i8* %seendigit, align 1, !dbg !7883
  store i8 0, i8* %nonzero, align 1, !dbg !7884
  %342 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7885
  %343 = getelementptr inbounds %struct.scan_cookie* %342, i32 0, i32 0, !dbg !7885
  %344 = load i32* %343, align 8, !dbg !7885
  %345 = icmp eq i32 %344, 48, !dbg !7885
  br i1 %345, label %bb87, label %bb93, !dbg !7885

bb87:                                             ; preds = %bb86
  store i8 1, i8* %seendigit, align 1, !dbg !7886
  %346 = load i8** %b, align 8, !dbg !7887
  store i8 48, i8* %346, align 1, !dbg !7887
  %347 = load i8** %b, align 8, !dbg !7887
  %348 = getelementptr inbounds i8* %347, i64 1, !dbg !7887
  store i8* %348, i8** %b, align 8, !dbg !7887
  br label %bb88, !dbg !7887

bb88:                                             ; preds = %bb88, %bb87
  %349 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7888
  %350 = call i32 @__scan_getc(%struct.scan_cookie* %349) nounwind, !dbg !7888
  %351 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7889
  %352 = getelementptr inbounds %struct.scan_cookie* %351, i32 0, i32 0, !dbg !7889
  %353 = load i32* %352, align 8, !dbg !7889
  %354 = icmp eq i32 %353, 48, !dbg !7889
  br i1 %354, label %bb88, label %bb93, !dbg !7889

bb90:                                             ; preds = %bb93
  %355 = icmp ule i8 %373, 19, !dbg !7890
  br i1 %355, label %bb91, label %bb92, !dbg !7890

bb91:                                             ; preds = %bb90
  %356 = load i8* %seendigit, align 1, !dbg !7891
  %357 = add i8 %356, 1, !dbg !7891
  store i8 %357, i8* %seendigit, align 1, !dbg !7891
  %358 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7892
  %359 = getelementptr inbounds %struct.scan_cookie* %358, i32 0, i32 0, !dbg !7892
  %360 = load i32* %359, align 8, !dbg !7892
  %361 = trunc i32 %360 to i8, !dbg !7892
  %362 = load i8** %b, align 8, !dbg !7892
  store i8 %361, i8* %362, align 1, !dbg !7892
  %363 = load i8** %b, align 8, !dbg !7892
  %364 = getelementptr inbounds i8* %363, i64 1, !dbg !7892
  store i8* %364, i8** %b, align 8, !dbg !7892
  br label %bb92, !dbg !7892

bb92:                                             ; preds = %bb91, %bb90
  %365 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7893
  %366 = call i32 @__scan_getc(%struct.scan_cookie* %365) nounwind, !dbg !7893
  br label %bb93, !dbg !7893

bb93:                                             ; preds = %bb86, %bb88, %bb92
  %367 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7894
  %368 = getelementptr inbounds %struct.scan_cookie* %367, i32 0, i32 0, !dbg !7894
  %369 = load i32* %368, align 8, !dbg !7894
  %370 = trunc i32 %369 to i8, !dbg !7894
  %371 = sub i8 %370, 48, !dbg !7894
  %372 = icmp ule i8 %371, 9, !dbg !7894
  %373 = load i8* %seendigit, align 1, !dbg !7890
  br i1 %372, label %bb90, label %bb94, !dbg !7894

bb94:                                             ; preds = %bb93
  %374 = icmp eq i8 %373, 0, !dbg !7895
  br i1 %374, label %DONE_DO_UNGET, label %GOT_FLOAT, !dbg !7895

GOT_FLOAT:                                        ; preds = %bb94, %bb81, %bb78
  %375 = load i8** %b, align 8, !dbg !7896
  store i8 0, i8* %375, align 1, !dbg !7896
  %buf95 = bitcast [167 x i8]* %buf to i8*, !dbg !7897
  %376 = load i32* %exp_adjust, align 4, !dbg !7897
  %377 = call x86_fp80 @__strtofpmax(i8* %buf95, i8** %e, i32 %376) nounwind, !dbg !7897
  store x86_fp80 %377, x86_fp80* %x, align 16, !dbg !7897
  %378 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7899
  %379 = getelementptr inbounds %struct.psfs_t* %378, i32 0, i32 9, !dbg !7899
  %380 = load i8* %379, align 8, !dbg !7899
  %381 = icmp ne i8 %380, 0, !dbg !7899
  br i1 %381, label %bb97, label %bb103, !dbg !7899

bb97:                                             ; preds = %GOT_FLOAT
  %382 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7900
  %383 = getelementptr inbounds %struct.psfs_t* %382, i32 0, i32 6, !dbg !7900
  %384 = load i32* %383, align 4, !dbg !7900
  %385 = and i32 %384, 2048, !dbg !7900
  %386 = icmp ne i32 %385, 0, !dbg !7900
  %387 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7901
  br i1 %386, label %bb98, label %bb99, !dbg !7900

bb98:                                             ; preds = %bb97
  %388 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 3, !dbg !7901
  %389 = load i8** %388, align 8, !dbg !7901
  %390 = bitcast i8* %389 to x86_fp80*, !dbg !7901
  %391 = load x86_fp80* %x, align 16, !dbg !7901
  store x86_fp80 %391, x86_fp80* %390, align 16, !dbg !7901
  br label %bb102, !dbg !7901

bb99:                                             ; preds = %bb97
  %392 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 6, !dbg !7902
  %393 = load i32* %392, align 4, !dbg !7902
  %394 = and i32 %393, 1024, !dbg !7902
  %395 = icmp ne i32 %394, 0, !dbg !7902
  %396 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7903
  %397 = getelementptr inbounds %struct.psfs_t* %396, i32 0, i32 3, !dbg !7903
  %398 = load i8** %397, align 8, !dbg !7903
  br i1 %395, label %bb100, label %bb101, !dbg !7902

bb100:                                            ; preds = %bb99
  %399 = bitcast i8* %398 to double*, !dbg !7903
  %400 = load x86_fp80* %x, align 16, !dbg !7903
  %401 = fptrunc x86_fp80 %400 to double, !dbg !7903
  store double %401, double* %399, align 8, !dbg !7903
  br label %bb102, !dbg !7903

bb101:                                            ; preds = %bb99
  %402 = bitcast i8* %398 to float*, !dbg !7904
  %403 = load x86_fp80* %x, align 16, !dbg !7904
  %404 = fptrunc x86_fp80 %403 to float, !dbg !7904
  store float %404, float* %402, align 4, !dbg !7904
  br label %bb102, !dbg !7904

bb102:                                            ; preds = %bb101, %bb100, %bb98
  %405 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7905
  %406 = getelementptr inbounds %struct.psfs_t* %405, i32 0, i32 5, !dbg !7905
  %407 = load i32* %406, align 8, !dbg !7905
  %408 = add nsw i32 %407, 1, !dbg !7905
  %409 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7905
  %410 = getelementptr inbounds %struct.psfs_t* %409, i32 0, i32 5, !dbg !7905
  store i32 %408, i32* %410, align 8, !dbg !7905
  br label %bb103, !dbg !7905

bb103:                                            ; preds = %bb102, %GOT_FLOAT
  %411 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7906
  call void @__scan_ungetc(%struct.scan_cookie* %411) nounwind, !dbg !7906
  store i32 0, i32* %0, align 4, !dbg !7907
  br label %bb104, !dbg !7907

DONE_DO_UNGET:                                    ; preds = %bb78, %bb71, %bb94, %bb82, %bb70, %bb54, %bb20
  %412 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7908
  call void @__scan_ungetc(%struct.scan_cookie* %412) nounwind, !dbg !7908
  br label %DONE, !dbg !7909

DONE:                                             ; preds = %DONE_DO_UNGET, %bb42
  store i32 -2, i32* %0, align 4, !dbg !7910
  br label %bb104, !dbg !7910

bb104:                                            ; preds = %DONE, %bb103, %bb49, %bb13, %bb10, %bb5
  %413 = load i32* %0, align 4, !dbg !7796
  store i32 %413, i32* %retval, align 4, !dbg !7796
  %retval105 = load i32* %retval, !dbg !7796
  ret i32 %retval105, !dbg !7796
}

define hidden i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %fmt0 = alloca i8*
  %i = alloca i32
  %j = alloca i32
  %fail = alloca i8
  %p_m_spec_chars = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7911
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 4, !dbg !7911
  %3 = load i8** %2, align 8, !dbg !7911
  store i8* %3, i8** %fmt0, align 8, !dbg !7911
  store i8 0, i8* %fail, align 1, !dbg !7913
  store i32 0, i32* %i, align 4, !dbg !7914
  %4 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7915
  %5 = getelementptr inbounds %struct.psfs_t* %4, i32 0, i32 4, !dbg !7915
  %6 = load i8** %5, align 8, !dbg !7915
  %7 = load i8* %6, align 1, !dbg !7915
  %8 = sub i8 %7, 48, !dbg !7915
  %9 = icmp ugt i8 %8, 9, !dbg !7915
  br i1 %9, label %bb, label %bb1, !dbg !7915

bb:                                               ; preds = %entry
  store i8 1, i8* %fail, align 1, !dbg !7916
  br label %DO_FLAGS, !dbg !7916

bb1:                                              ; preds = %bb3, %entry
  %10 = load i32* %i, align 4, !dbg !7917
  %11 = icmp sle i32 %10, 214748363, !dbg !7917
  br i1 %11, label %bb2, label %bb3, !dbg !7917

bb2:                                              ; preds = %bb1
  %12 = load i32* %i, align 4, !dbg !7918
  %13 = mul nsw i32 %12, 10, !dbg !7918
  %14 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7918
  %15 = getelementptr inbounds %struct.psfs_t* %14, i32 0, i32 4, !dbg !7918
  %16 = load i8** %15, align 8, !dbg !7918
  %17 = load i8* %16, align 1, !dbg !7918
  %18 = zext i8 %17 to i32, !dbg !7918
  %19 = sub nsw i32 %18, 48, !dbg !7918
  %20 = add nsw i32 %13, %19, !dbg !7918
  store i32 %20, i32* %i, align 4, !dbg !7918
  %21 = getelementptr inbounds i8* %16, i64 1, !dbg !7918
  %22 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7918
  %23 = getelementptr inbounds %struct.psfs_t* %22, i32 0, i32 4, !dbg !7918
  store i8* %21, i8** %23, align 8, !dbg !7918
  br label %bb3, !dbg !7918

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7919
  %25 = getelementptr inbounds %struct.psfs_t* %24, i32 0, i32 4, !dbg !7919
  %26 = load i8** %25, align 8, !dbg !7919
  %27 = load i8* %26, align 1, !dbg !7919
  %28 = sub i8 %27, 48, !dbg !7919
  %29 = icmp ule i8 %28, 9, !dbg !7919
  br i1 %29, label %bb1, label %bb4, !dbg !7919

bb4:                                              ; preds = %bb3
  %30 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7920
  %31 = getelementptr inbounds %struct.psfs_t* %30, i32 0, i32 4, !dbg !7920
  %32 = load i8** %31, align 8, !dbg !7920
  %33 = load i8* %32, align 1, !dbg !7920
  %34 = icmp ne i8 %33, 36, !dbg !7920
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7921
  br i1 %34, label %bb5, label %bb7, !dbg !7920

bb5:                                              ; preds = %bb4
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 1, !dbg !7921
  %37 = load i32* %36, align 8, !dbg !7921
  %38 = icmp sge i32 %37, 0, !dbg !7921
  br i1 %38, label %ERROR_EINVAL, label %bb6, !dbg !7921

bb6:                                              ; preds = %bb5
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7922
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 8, !dbg !7922
  %41 = load i32* %i, align 4, !dbg !7922
  store i32 %41, i32* %40, align 4, !dbg !7922
  %42 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7923
  %43 = getelementptr inbounds %struct.psfs_t* %42, i32 0, i32 1, !dbg !7923
  store i32 -2, i32* %43, align 8, !dbg !7923
  br label %DO_QUALIFIER, !dbg !7923

bb7:                                              ; preds = %bb4
  %44 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 4, !dbg !7924
  %45 = load i8** %44, align 8, !dbg !7924
  %46 = getelementptr inbounds i8* %45, i64 1, !dbg !7924
  %47 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7924
  %48 = getelementptr inbounds %struct.psfs_t* %47, i32 0, i32 4, !dbg !7924
  store i8* %46, i8** %48, align 8, !dbg !7924
  br label %DO_FLAGS, !dbg !7925

DO_FLAGS:                                         ; preds = %bb9, %bb7, %bb
  store i8* getelementptr inbounds ([4 x i8]* @spec_flags, i64 0, i64 0), i8** %p, align 8, !dbg !7926
  store i32 16, i32* %j, align 4, !dbg !7927
  br label %bb8, !dbg !7927

bb8:                                              ; preds = %bb10, %DO_FLAGS
  %49 = load i8** %p, align 8, !dbg !7928
  %50 = load i8* %49, align 1, !dbg !7928
  %51 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7928
  %52 = getelementptr inbounds %struct.psfs_t* %51, i32 0, i32 4, !dbg !7928
  %53 = load i8** %52, align 8, !dbg !7928
  %54 = load i8* %53, align 1, !dbg !7928
  %55 = icmp eq i8 %50, %54, !dbg !7928
  br i1 %55, label %bb9, label %bb10, !dbg !7928

bb9:                                              ; preds = %bb8
  %56 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7929
  %57 = getelementptr inbounds %struct.psfs_t* %56, i32 0, i32 4, !dbg !7929
  %58 = load i8** %57, align 8, !dbg !7929
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !7929
  %60 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7929
  %61 = getelementptr inbounds %struct.psfs_t* %60, i32 0, i32 4, !dbg !7929
  store i8* %59, i8** %61, align 8, !dbg !7929
  %62 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7930
  %63 = getelementptr inbounds %struct.psfs_t* %62, i32 0, i32 10, !dbg !7930
  %64 = load i8* %63, align 1, !dbg !7930
  %65 = load i32* %j, align 4, !dbg !7930
  %66 = trunc i32 %65 to i8, !dbg !7930
  %67 = or i8 %64, %66, !dbg !7930
  %68 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7930
  %69 = getelementptr inbounds %struct.psfs_t* %68, i32 0, i32 10, !dbg !7930
  store i8 %67, i8* %69, align 1, !dbg !7930
  br label %DO_FLAGS, !dbg !7930

bb10:                                             ; preds = %bb8
  %70 = load i32* %j, align 4, !dbg !7931
  %71 = load i32* %j, align 4, !dbg !7931
  %72 = add nsw i32 %70, %71, !dbg !7931
  store i32 %72, i32* %j, align 4, !dbg !7931
  %73 = load i8** %p, align 8, !dbg !7932
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !7932
  store i8* %74, i8** %p, align 8, !dbg !7932
  %75 = load i8** %p, align 8, !dbg !7932
  %76 = load i8* %75, align 1, !dbg !7932
  %77 = icmp ne i8 %76, 0, !dbg !7932
  br i1 %77, label %bb8, label %bb11, !dbg !7932

bb11:                                             ; preds = %bb10
  %78 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7933
  %79 = getelementptr inbounds %struct.psfs_t* %78, i32 0, i32 10, !dbg !7933
  %80 = load i8* %79, align 1, !dbg !7933
  %81 = zext i8 %80 to i32, !dbg !7933
  %82 = and i32 %81, 16, !dbg !7933
  %83 = icmp ne i32 %82, 0, !dbg !7933
  br i1 %83, label %bb12, label %bb13, !dbg !7933

bb12:                                             ; preds = %bb11
  %84 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7934
  %85 = getelementptr inbounds %struct.psfs_t* %84, i32 0, i32 9, !dbg !7934
  store i8 0, i8* %85, align 8, !dbg !7934
  br label %DO_WIDTH, !dbg !7934

bb13:                                             ; preds = %bb11
  %86 = load i8* %fail, align 1, !dbg !7935
  %87 = icmp ne i8 %86, 0, !dbg !7935
  %88 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7936
  %89 = getelementptr inbounds %struct.psfs_t* %88, i32 0, i32 1, !dbg !7936
  %90 = load i32* %89, align 8, !dbg !7936
  br i1 %87, label %bb14, label %bb16, !dbg !7935

bb14:                                             ; preds = %bb13
  %91 = icmp sge i32 %90, 0, !dbg !7936
  br i1 %91, label %ERROR_EINVAL, label %bb15, !dbg !7936

bb15:                                             ; preds = %bb14
  %92 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7937
  %93 = getelementptr inbounds %struct.psfs_t* %92, i32 0, i32 1, !dbg !7937
  store i32 -2, i32* %93, align 8, !dbg !7937
  br label %DO_WIDTH, !dbg !7937

bb16:                                             ; preds = %bb13
  %94 = icmp eq i32 %90, -2, !dbg !7938
  br i1 %94, label %ERROR_EINVAL, label %bb17, !dbg !7938

bb17:                                             ; preds = %bb16
  %95 = load i32* %i, align 4, !dbg !7938
  %96 = sub nsw i32 %95, 1, !dbg !7938
  store i32 %96, i32* %i, align 4, !dbg !7938
  %97 = load i32* %i, align 4, !dbg !7938
  %98 = icmp ugt i32 %97, 8, !dbg !7938
  br i1 %98, label %ERROR_EINVAL, label %bb18, !dbg !7938

bb18:                                             ; preds = %bb17
  %99 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7939
  %100 = getelementptr inbounds %struct.psfs_t* %99, i32 0, i32 2, !dbg !7939
  %101 = load i32* %i, align 4, !dbg !7939
  store i32 %101, i32* %100, align 4, !dbg !7939
  br label %DO_WIDTH, !dbg !7940

DO_WIDTH:                                         ; preds = %bb18, %bb15, %bb12
  store i32 0, i32* %i, align 4, !dbg !7941
  br label %bb21, !dbg !7941

bb19:                                             ; preds = %bb21
  %102 = load i32* %i, align 4, !dbg !7942
  %103 = icmp sle i32 %102, 214748363, !dbg !7942
  br i1 %103, label %bb20, label %bb21, !dbg !7942

bb20:                                             ; preds = %bb19
  %104 = load i32* %i, align 4, !dbg !7943
  %105 = mul nsw i32 %104, 10, !dbg !7943
  %106 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7943
  %107 = getelementptr inbounds %struct.psfs_t* %106, i32 0, i32 4, !dbg !7943
  %108 = load i8** %107, align 8, !dbg !7943
  %109 = load i8* %108, align 1, !dbg !7943
  %110 = zext i8 %109 to i32, !dbg !7943
  %111 = sub nsw i32 %110, 48, !dbg !7943
  %112 = add nsw i32 %105, %111, !dbg !7943
  store i32 %112, i32* %i, align 4, !dbg !7943
  %113 = getelementptr inbounds i8* %108, i64 1, !dbg !7943
  %114 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7943
  %115 = getelementptr inbounds %struct.psfs_t* %114, i32 0, i32 4, !dbg !7943
  store i8* %113, i8** %115, align 8, !dbg !7943
  %116 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7944
  %117 = getelementptr inbounds %struct.psfs_t* %116, i32 0, i32 8, !dbg !7944
  %118 = load i32* %i, align 4, !dbg !7944
  store i32 %118, i32* %117, align 4, !dbg !7944
  br label %bb21, !dbg !7944

bb21:                                             ; preds = %bb20, %bb19, %DO_WIDTH
  %119 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7941
  %120 = getelementptr inbounds %struct.psfs_t* %119, i32 0, i32 4, !dbg !7941
  %121 = load i8** %120, align 8, !dbg !7941
  %122 = load i8* %121, align 1, !dbg !7941
  %123 = sub i8 %122, 48, !dbg !7941
  %124 = icmp ule i8 %123, 9, !dbg !7941
  br i1 %124, label %bb19, label %DO_QUALIFIER, !dbg !7941

DO_QUALIFIER:                                     ; preds = %bb21, %bb6
  store i8* getelementptr inbounds ([18 x i8]* @qual_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7945
  br label %bb22, !dbg !7945

bb22:                                             ; preds = %bb24, %DO_QUALIFIER
  %125 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7946
  %126 = getelementptr inbounds %struct.psfs_t* %125, i32 0, i32 4, !dbg !7946
  %127 = load i8** %126, align 8, !dbg !7946
  %128 = load i8* %127, align 1, !dbg !7946
  %129 = load i8** %p, align 8, !dbg !7946
  %130 = load i8* %129, align 1, !dbg !7946
  %131 = icmp eq i8 %128, %130, !dbg !7946
  br i1 %131, label %bb23, label %bb24, !dbg !7946

bb23:                                             ; preds = %bb22
  %132 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7947
  %133 = getelementptr inbounds %struct.psfs_t* %132, i32 0, i32 4, !dbg !7947
  %134 = load i8** %133, align 8, !dbg !7947
  %135 = getelementptr inbounds i8* %134, i64 1, !dbg !7947
  %136 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7947
  %137 = getelementptr inbounds %struct.psfs_t* %136, i32 0, i32 4, !dbg !7947
  store i8* %135, i8** %137, align 8, !dbg !7947
  br label %bb25, !dbg !7947

bb24:                                             ; preds = %bb22
  %138 = load i8** %p, align 8, !dbg !7948
  %139 = getelementptr inbounds i8* %138, i64 1, !dbg !7948
  store i8* %139, i8** %p, align 8, !dbg !7948
  %140 = load i8** %p, align 8, !dbg !7948
  %141 = load i8* %140, align 1, !dbg !7948
  %142 = icmp ne i8 %141, 0, !dbg !7948
  br i1 %142, label %bb22, label %bb25, !dbg !7948

bb25:                                             ; preds = %bb24, %bb23
  %143 = load i8** %p, align 8, !dbg !7949
  %144 = ptrtoint i8* %143 to i64, !dbg !7949
  %145 = sub nsw i64 %144, ptrtoint ([18 x i8]* @qual_chars to i64), !dbg !7949
  %146 = icmp sle i64 %145, 1, !dbg !7949
  br i1 %146, label %bb26, label %bb28, !dbg !7949

bb26:                                             ; preds = %bb25
  %147 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7949
  %148 = getelementptr inbounds %struct.psfs_t* %147, i32 0, i32 4, !dbg !7949
  %149 = load i8** %148, align 8, !dbg !7949
  %150 = load i8* %149, align 1, !dbg !7949
  %151 = load i8** %p, align 8, !dbg !7949
  %152 = load i8* %151, align 1, !dbg !7949
  %153 = icmp eq i8 %150, %152, !dbg !7949
  br i1 %153, label %bb27, label %bb28, !dbg !7949

bb27:                                             ; preds = %bb26
  %154 = load i8** %p, align 8, !dbg !7950
  %155 = getelementptr inbounds i8* %154, i64 8, !dbg !7950
  store i8* %155, i8** %p, align 8, !dbg !7950
  %156 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7951
  %157 = getelementptr inbounds %struct.psfs_t* %156, i32 0, i32 4, !dbg !7951
  %158 = load i8** %157, align 8, !dbg !7951
  %159 = getelementptr inbounds i8* %158, i64 1, !dbg !7951
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7951
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 4, !dbg !7951
  store i8* %159, i8** %161, align 8, !dbg !7951
  br label %bb28, !dbg !7951

bb28:                                             ; preds = %bb27, %bb26, %bb25
  %162 = load i8** %p, align 8, !dbg !7952
  %163 = getelementptr inbounds i8* %162, i64 8, !dbg !7952
  %164 = load i8* %163, align 1, !dbg !7952
  %165 = zext i8 %164 to i32, !dbg !7952
  %int_cast_to_i64 = zext i32 8 to i64
  %166 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %166, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb28
  %167 = shl i32 %165, 8, !dbg !7952
  %168 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7952
  %169 = getelementptr inbounds %struct.psfs_t* %168, i32 0, i32 6, !dbg !7952
  store i32 %167, i32* %169, align 4, !dbg !7952
  store i8* getelementptr inbounds ([23 x i8]* @spec_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7953
  br label %bb29, !dbg !7953

bb29:                                             ; preds = %bb39, %klee_overshift_check.exit
  %170 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7954
  %171 = getelementptr inbounds %struct.psfs_t* %170, i32 0, i32 4, !dbg !7954
  %172 = load i8** %171, align 8, !dbg !7954
  %173 = load i8* %172, align 1, !dbg !7954
  %174 = load i8** %p, align 8, !dbg !7954
  %175 = load i8* %174, align 1, !dbg !7954
  %176 = icmp eq i8 %173, %175, !dbg !7954
  %177 = load i8** %p, align 8, !dbg !7955
  br i1 %176, label %bb30, label %bb39, !dbg !7954

bb30:                                             ; preds = %bb29
  %178 = ptrtoint i8* %177 to i64, !dbg !7955
  %179 = trunc i64 %178 to i32, !dbg !7955
  %180 = trunc i64 ptrtoint ([23 x i8]* @spec_chars to i64) to i32, !dbg !7955
  %181 = sub i32 %179, %180, !dbg !7955
  store i32 %181, i32* %p_m_spec_chars, align 4, !dbg !7955
  store i8* getelementptr inbounds ([8 x i8]* @spec_ranges, i64 0, i64 0), i8** %p, align 8, !dbg !7957
  br label %bb32, !dbg !7957

bb31:                                             ; preds = %bb32
  %182 = load i8** %p, align 8, !dbg !7957
  %183 = getelementptr inbounds i8* %182, i64 1, !dbg !7957
  store i8* %183, i8** %p, align 8, !dbg !7957
  br label %bb32, !dbg !7957

bb32:                                             ; preds = %bb31, %bb30
  %184 = load i8** %p, align 8, !dbg !7957
  %185 = load i8* %184, align 1, !dbg !7957
  %186 = zext i8 %185 to i32, !dbg !7957
  %187 = load i32* %p_m_spec_chars, align 4, !dbg !7957
  %188 = icmp slt i32 %186, %187, !dbg !7957
  br i1 %188, label %bb31, label %bb33, !dbg !7957

bb33:                                             ; preds = %bb32
  %189 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7958
  %190 = getelementptr inbounds %struct.psfs_t* %189, i32 0, i32 6, !dbg !7958
  %191 = load i32* %190, align 4, !dbg !7958
  %int_cast_to_i641 = zext i32 8 to i64
  %192 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %192, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb33
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb33
  %193 = ashr i32 %191, 8, !dbg !7958
  %194 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7958
  %195 = getelementptr inbounds %struct.psfs_t* %194, i32 0, i32 10, !dbg !7958
  %196 = load i8* %195, align 1, !dbg !7958
  %197 = zext i8 %196 to i32, !dbg !7958
  %198 = or i32 %193, %197, !dbg !7958
  %199 = load i8** %p, align 8, !dbg !7958
  %200 = ptrtoint i8* %199 to i64, !dbg !7958
  %201 = trunc i64 %200 to i32, !dbg !7958
  %202 = trunc i64 ptrtoint ([8 x i8]* @spec_ranges to i64) to i32, !dbg !7958
  %203 = sub i32 %201, %202, !dbg !7958
  %204 = sext i32 %203 to i64, !dbg !7958
  %205 = getelementptr inbounds [8 x i16]* @spec_allowed, i64 0, i64 %204, !dbg !7958
  %206 = load i16* %205, align 2, !dbg !7958
  %207 = zext i16 %206 to i32, !dbg !7958
  %not = xor i32 %207, -1, !dbg !7958
  %208 = and i32 %198, %not, !dbg !7958
  %209 = icmp ne i32 %208, 0, !dbg !7958
  br i1 %209, label %ERROR_EINVAL, label %bb35, !dbg !7958

bb35:                                             ; preds = %klee_overshift_check.exit3
  %210 = load i32* %p_m_spec_chars, align 4, !dbg !7959
  %211 = icmp sgt i32 %210, 18, !dbg !7959
  br i1 %211, label %bb36, label %bb38, !dbg !7959

bb36:                                             ; preds = %bb35
  %212 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7959
  %213 = getelementptr inbounds %struct.psfs_t* %212, i32 0, i32 6, !dbg !7959
  %214 = load i32* %213, align 4, !dbg !7959
  %215 = and i32 %214, 1024, !dbg !7959
  %216 = icmp ne i32 %215, 0, !dbg !7959
  br i1 %216, label %bb37, label %bb38, !dbg !7959

bb37:                                             ; preds = %bb36
  %217 = load i32* %p_m_spec_chars, align 4, !dbg !7960
  %218 = sub nsw i32 %217, 3, !dbg !7960
  store i32 %218, i32* %p_m_spec_chars, align 4, !dbg !7960
  br label %bb38, !dbg !7960

bb38:                                             ; preds = %bb37, %bb36, %bb35
  %219 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7961
  %220 = getelementptr inbounds %struct.psfs_t* %219, i32 0, i32 7, !dbg !7961
  %221 = load i32* %p_m_spec_chars, align 4, !dbg !7961
  store i32 %221, i32* %220, align 8, !dbg !7961
  %222 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7962
  %223 = getelementptr inbounds %struct.psfs_t* %222, i32 0, i32 4, !dbg !7962
  %224 = load i8** %223, align 8, !dbg !7962
  %225 = ptrtoint i8* %224 to i64, !dbg !7962
  %226 = trunc i64 %225 to i32, !dbg !7962
  %227 = load i8** %fmt0, align 8, !dbg !7962
  %228 = ptrtoint i8* %227 to i64, !dbg !7962
  %229 = trunc i64 %228 to i32, !dbg !7962
  %230 = sub i32 %226, %229, !dbg !7962
  store i32 %230, i32* %0, align 4, !dbg !7962
  br label %bb41, !dbg !7962

bb39:                                             ; preds = %bb29
  %231 = getelementptr inbounds i8* %177, i64 1, !dbg !7963
  store i8* %231, i8** %p, align 8, !dbg !7963
  %232 = load i8** %p, align 8, !dbg !7963
  %233 = load i8* %232, align 1, !dbg !7963
  %234 = icmp eq i8 %233, 0, !dbg !7963
  br i1 %234, label %ERROR_EINVAL, label %bb29, !dbg !7963

ERROR_EINVAL:                                     ; preds = %bb39, %klee_overshift_check.exit3, %bb17, %bb16, %bb14, %bb5
  store i32 22, i32* @errno, align 4, !dbg !7964
  store i32 -1, i32* %0, align 4, !dbg !7965
  br label %bb41, !dbg !7965

bb41:                                             ; preds = %ERROR_EINVAL, %bb38
  %235 = load i32* %0, align 4, !dbg !7962
  store i32 %235, i32* %retval, align 4, !dbg !7962
  %retval42 = load i32* %retval, !dbg !7962
  ret i32 %retval42, !dbg !7962
}

define i32 @ungetc(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !7966
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !7966
  %3 = load i8** %2, align 8, !dbg !7966
  %4 = load %4** %stream_addr, align 8, !dbg !7966
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !7966
  %6 = load i8** %5, align 8, !dbg !7966
  %7 = icmp uge i8* %3, %6, !dbg !7966
  br i1 %7, label %bb4, label %bb, !dbg !7966

bb:                                               ; preds = %entry
  %8 = load i32* %c_addr, align 4, !dbg !7966
  %9 = icmp eq i32 %8, -1, !dbg !7966
  br i1 %9, label %bb4, label %bb1, !dbg !7966

bb1:                                              ; preds = %bb
  %10 = load %4** %stream_addr, align 8, !dbg !7966
  %11 = getelementptr inbounds %4* %10, i32 0, i32 5, !dbg !7966
  %12 = load i8** %11, align 8, !dbg !7966
  %13 = load %4** %stream_addr, align 8, !dbg !7966
  %14 = getelementptr inbounds %4* %13, i32 0, i32 3, !dbg !7966
  %15 = load i8** %14, align 8, !dbg !7966
  %16 = icmp ule i8* %12, %15, !dbg !7966
  br i1 %16, label %bb4, label %bb2, !dbg !7966

bb2:                                              ; preds = %bb1
  %17 = load %4** %stream_addr, align 8, !dbg !7966
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !7966
  %19 = load i8** %18, align 8, !dbg !7966
  %20 = getelementptr inbounds i8* %19, i64 -1, !dbg !7966
  %21 = load i8* %20, align 1, !dbg !7966
  %22 = load i32* %c_addr, align 4, !dbg !7966
  %23 = trunc i32 %22 to i8, !dbg !7966
  %24 = icmp ne i8 %21, %23, !dbg !7966
  br i1 %24, label %bb4, label %bb3, !dbg !7966

bb3:                                              ; preds = %bb2
  %25 = load %4** %stream_addr, align 8, !dbg !7968
  %26 = getelementptr inbounds %4* %25, i32 0, i32 5, !dbg !7968
  %27 = load i8** %26, align 8, !dbg !7968
  %28 = getelementptr inbounds i8* %27, i64 -1, !dbg !7968
  %29 = load %4** %stream_addr, align 8, !dbg !7968
  %30 = getelementptr inbounds %4* %29, i32 0, i32 5, !dbg !7968
  store i8* %28, i8** %30, align 8, !dbg !7968
  %31 = load %4** %stream_addr, align 8, !dbg !7969
  %32 = getelementptr inbounds %4* %31, i32 0, i32 0, !dbg !7969
  %33 = load i16* %32, align 8, !dbg !7969
  %34 = and i16 %33, -5, !dbg !7969
  %35 = load %4** %stream_addr, align 8, !dbg !7969
  %36 = getelementptr inbounds %4* %35, i32 0, i32 0, !dbg !7969
  store i16 %34, i16* %36, align 8, !dbg !7969
  br label %bb12, !dbg !7969

bb4:                                              ; preds = %bb2, %bb1, %bb, %entry
  %37 = load %4** %stream_addr, align 8, !dbg !7970
  %38 = getelementptr inbounds %4* %37, i32 0, i32 0, !dbg !7970
  %39 = load i16* %38, align 8, !dbg !7970
  %40 = zext i16 %39 to i32, !dbg !7970
  %41 = and i32 %40, 131, !dbg !7970
  %42 = icmp ugt i32 %41, 128, !dbg !7970
  br i1 %42, label %bb6, label %bb5, !dbg !7970

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !7970
  %44 = call i32 @__stdio_trans2r_o(%4* noalias %43, i32 128) nounwind, !dbg !7970
  %45 = icmp ne i32 %44, 0, !dbg !7970
  br i1 %45, label %bb9, label %bb6, !dbg !7970

bb6:                                              ; preds = %bb5, %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !7970
  %47 = getelementptr inbounds %4* %46, i32 0, i32 0, !dbg !7970
  %48 = load i16* %47, align 8, !dbg !7970
  %49 = zext i16 %48 to i32, !dbg !7970
  %50 = and i32 %49, 2, !dbg !7970
  %51 = icmp eq i32 %50, 0, !dbg !7970
  br i1 %51, label %bb10, label %bb7, !dbg !7970

bb7:                                              ; preds = %bb6
  %52 = load %4** %stream_addr, align 8, !dbg !7970
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !7970
  %54 = load i16* %53, align 8, !dbg !7970
  %55 = zext i16 %54 to i32, !dbg !7970
  %56 = and i32 %55, 1, !dbg !7970
  %57 = trunc i32 %56 to i8, !dbg !7970
  %toBool = icmp ne i8 %57, 0, !dbg !7970
  br i1 %toBool, label %bb9, label %bb8, !dbg !7970

bb8:                                              ; preds = %bb7
  %58 = load %4** %stream_addr, align 8, !dbg !7970
  %59 = getelementptr inbounds %4* %58, i32 0, i32 10, !dbg !7970
  %60 = getelementptr inbounds [2 x i32]* %59, i64 0, i64 1, !dbg !7970
  %61 = load i32* %60, align 4, !dbg !7970
  %62 = icmp ne i32 %61, 0, !dbg !7970
  br i1 %62, label %bb9, label %bb10, !dbg !7970

bb9:                                              ; preds = %bb8, %bb7, %bb5
  store i32 -1, i32* %c_addr, align 4, !dbg !7971
  br label %bb12, !dbg !7971

bb10:                                             ; preds = %bb8, %bb6
  %63 = load i32* %c_addr, align 4, !dbg !7972
  %64 = icmp ne i32 %63, -1, !dbg !7972
  br i1 %64, label %bb11, label %bb12, !dbg !7972

bb11:                                             ; preds = %bb10
  %65 = load %4** %stream_addr, align 8, !dbg !7973
  %66 = getelementptr inbounds %4* %65, i32 0, i32 3, !dbg !7973
  %67 = load i8** %66, align 8, !dbg !7973
  %68 = load %4** %stream_addr, align 8, !dbg !7973
  %69 = getelementptr inbounds %4* %68, i32 0, i32 7, !dbg !7973
  store i8* %67, i8** %69, align 8, !dbg !7973
  %70 = load %4** %stream_addr, align 8, !dbg !7974
  %71 = getelementptr inbounds %4* %70, i32 0, i32 10, !dbg !7974
  %72 = getelementptr inbounds [2 x i32]* %71, i64 0, i64 1, !dbg !7974
  store i32 1, i32* %72, align 4, !dbg !7974
  %73 = load %4** %stream_addr, align 8, !dbg !7975
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !7975
  %75 = load i16* %74, align 8, !dbg !7975
  %76 = add i16 %75, 1, !dbg !7975
  %77 = load %4** %stream_addr, align 8, !dbg !7975
  %78 = getelementptr inbounds %4* %77, i32 0, i32 0, !dbg !7975
  store i16 %76, i16* %78, align 8, !dbg !7975
  %79 = load %4** %stream_addr, align 8, !dbg !7975
  %80 = getelementptr inbounds %4* %79, i32 0, i32 0, !dbg !7975
  %81 = load i16* %80, align 8, !dbg !7975
  %82 = zext i16 %81 to i32, !dbg !7975
  %83 = and i32 %82, 1, !dbg !7975
  %84 = load %4** %stream_addr, align 8, !dbg !7975
  %85 = getelementptr inbounds %4* %84, i32 0, i32 10, !dbg !7975
  %86 = sext i32 %83 to i64, !dbg !7975
  %87 = getelementptr inbounds [2 x i32]* %85, i64 0, i64 %86, !dbg !7975
  %88 = load i32* %c_addr, align 4, !dbg !7975
  store i32 %88, i32* %87, align 4, !dbg !7975
  %89 = load %4** %stream_addr, align 8, !dbg !7976
  %90 = getelementptr inbounds %4* %89, i32 0, i32 0, !dbg !7976
  %91 = load i16* %90, align 8, !dbg !7976
  %92 = and i16 %91, -5, !dbg !7976
  %93 = load %4** %stream_addr, align 8, !dbg !7976
  %94 = getelementptr inbounds %4* %93, i32 0, i32 0, !dbg !7976
  store i16 %92, i16* %94, align 8, !dbg !7976
  br label %bb12, !dbg !7976

bb12:                                             ; preds = %bb11, %bb10, %bb9, %bb3
  %95 = load i32* %c_addr, align 4, !dbg !7977
  store i32 %95, i32* %0, align 4, !dbg !7977
  %96 = load i32* %0, align 4, !dbg !7977
  store i32 %96, i32* %retval, align 4, !dbg !7977
  %retval13 = load i32* %retval, !dbg !7977
  ret i32 %retval13, !dbg !7977
}

define hidden x86_fp80 @__strtofpmax(i8* %str, i8** %endptr, i32 %exponent_power) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %exponent_power_addr = alloca i32, align 4
  %retval = alloca x86_fp80
  %0 = alloca x86_fp80
  %number = alloca x86_fp80
  %p_base = alloca x86_fp80
  %pos0 = alloca i8*
  %pos1 = alloca i8*
  %pos = alloca i8*
  %exponent_temp = alloca i32
  %negative = alloca i32
  %num_digits = alloca i32
  %i = alloca i32
  %j = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %exponent_power, i32* %exponent_power_addr
  store x86_fp80 0xK4002A000000000000000, x86_fp80* %p_base, align 16, !dbg !7978
  %1 = load i8** %str_addr, align 8, !dbg !7980
  store i8* %1, i8** %pos, align 8, !dbg !7980
  br label %bb1, !dbg !7980

bb:                                               ; preds = %bb1
  %2 = load i8** %pos, align 8, !dbg !7981
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !7981
  store i8* %3, i8** %pos, align 8, !dbg !7981
  br label %bb1, !dbg !7981

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !7982
  %5 = load i8** %pos, align 8, !dbg !7982
  %6 = load i8* %5, align 1, !dbg !7982
  %7 = sext i8 %6 to i32, !dbg !7982
  %8 = sext i32 %7 to i64, !dbg !7982
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !7982
  %10 = load i16* %9, align 1, !dbg !7982
  %11 = zext i16 %10 to i32, !dbg !7982
  %12 = and i32 %11, 8192, !dbg !7982
  %13 = icmp ne i32 %12, 0, !dbg !7982
  br i1 %13, label %bb, label %bb2, !dbg !7982

bb2:                                              ; preds = %bb1
  store i32 0, i32* %negative, align 4, !dbg !7983
  %14 = load i8** %pos, align 8, !dbg !7984
  %15 = load i8* %14, align 1, !dbg !7984
  %16 = sext i8 %15 to i32, !dbg !7984
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !7984

bb3:                                              ; preds = %bb2
  store i32 1, i32* %negative, align 4, !dbg !7985
  br label %bb4, !dbg !7985

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %pos, align 8, !dbg !7986
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !7986
  store i8* %18, i8** %pos, align 8, !dbg !7986
  br label %bb5, !dbg !7986

bb5:                                              ; preds = %bb4, %bb2
  store x86_fp80 0xK00000000000000000000, x86_fp80* %number, align 16, !dbg !7987
  store i32 -1, i32* %num_digits, align 4, !dbg !7988
  store i8* null, i8** %pos0, align 8, !dbg !7989
  br label %bb13, !dbg !7990

bb6:                                              ; preds = %bb13
  %19 = load i32* %num_digits, align 4, !dbg !7991
  %20 = icmp slt i32 %19, 0, !dbg !7991
  br i1 %20, label %bb7, label %bb8, !dbg !7991

bb7:                                              ; preds = %bb6
  %21 = load i32* %num_digits, align 4, !dbg !7992
  %22 = add nsw i32 %21, 1, !dbg !7992
  store i32 %22, i32* %num_digits, align 4, !dbg !7992
  br label %bb8, !dbg !7992

bb8:                                              ; preds = %bb7, %bb6
  %23 = load i32* %num_digits, align 4, !dbg !7993
  %24 = icmp ne i32 %23, 0, !dbg !7993
  br i1 %24, label %bb10, label %bb9, !dbg !7993

bb9:                                              ; preds = %bb8
  %25 = load i8** %pos, align 8, !dbg !7993
  %26 = load i8* %25, align 1, !dbg !7993
  %27 = icmp ne i8 %26, 48, !dbg !7993
  br i1 %27, label %bb10, label %bb12, !dbg !7993

bb10:                                             ; preds = %bb9, %bb8
  %28 = load i32* %num_digits, align 4, !dbg !7994
  %29 = add nsw i32 %28, 1, !dbg !7994
  store i32 %29, i32* %num_digits, align 4, !dbg !7994
  %30 = load i32* %num_digits, align 4, !dbg !7995
  %31 = icmp sle i32 %30, 21, !dbg !7995
  br i1 %31, label %bb11, label %bb12, !dbg !7995

bb11:                                             ; preds = %bb10
  %32 = load x86_fp80* %number, align 16, !dbg !7996
  %33 = load x86_fp80* %p_base, align 16, !dbg !7996
  %34 = fmul x86_fp80 %32, %33, !dbg !7996
  %35 = load i8** %pos, align 8, !dbg !7996
  %36 = load i8* %35, align 1, !dbg !7996
  %37 = sext i8 %36 to i32, !dbg !7996
  %38 = sub nsw i32 %37, 48, !dbg !7996
  %39 = sitofp i32 %38 to x86_fp80, !dbg !7996
  %40 = fadd x86_fp80 %34, %39, !dbg !7996
  store x86_fp80 %40, x86_fp80* %number, align 16, !dbg !7996
  br label %bb12, !dbg !7996

bb12:                                             ; preds = %bb11, %bb10, %bb9
  %41 = load i8** %pos, align 8, !dbg !7997
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !7997
  store i8* %42, i8** %pos, align 8, !dbg !7997
  br label %bb13, !dbg !7997

bb13:                                             ; preds = %bb5, %bb16, %bb12
  %43 = load i16** @__ctype_b, align 8, !dbg !7998
  %44 = load i8** %pos, align 8, !dbg !7998
  %45 = load i8* %44, align 1, !dbg !7998
  %46 = sext i8 %45 to i32, !dbg !7998
  %47 = sext i32 %46 to i64, !dbg !7998
  %48 = getelementptr inbounds i16* %43, i64 %47, !dbg !7998
  %49 = load i16* %48, align 1, !dbg !7998
  %50 = zext i16 %49 to i32, !dbg !7998
  %51 = and i32 %50, 2048, !dbg !7998
  %52 = icmp ne i32 %51, 0, !dbg !7998
  br i1 %52, label %bb6, label %bb14, !dbg !7998

bb14:                                             ; preds = %bb13
  %53 = load i8** %pos, align 8, !dbg !7999
  %54 = load i8* %53, align 1, !dbg !7999
  %55 = icmp eq i8 %54, 46, !dbg !7999
  br i1 %55, label %bb15, label %bb17, !dbg !7999

bb15:                                             ; preds = %bb14
  %56 = load i8** %pos0, align 8, !dbg !7999
  %57 = icmp eq i8* %56, null, !dbg !7999
  br i1 %57, label %bb16, label %bb17, !dbg !7999

bb16:                                             ; preds = %bb15
  %58 = load i8** %pos, align 8, !dbg !8000
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !8000
  store i8* %59, i8** %pos, align 8, !dbg !8000
  %60 = load i8** %pos, align 8, !dbg !8000
  store i8* %60, i8** %pos0, align 8, !dbg !8000
  br label %bb13, !dbg !8000

bb17:                                             ; preds = %bb15, %bb14
  %61 = load i32* %num_digits, align 4, !dbg !8001
  %62 = icmp slt i32 %61, 0, !dbg !8001
  br i1 %62, label %bb18, label %bb28, !dbg !8001

bb18:                                             ; preds = %bb17
  %63 = load i8** %pos0, align 8, !dbg !8002
  %64 = icmp eq i8* %63, null, !dbg !8002
  br i1 %64, label %bb19, label %bb27, !dbg !8002

bb19:                                             ; preds = %bb18
  store i32 0, i32* %i, align 4, !dbg !8003
  br label %bb20, !dbg !8003

bb20:                                             ; preds = %bb26, %bb19
  store i32 0, i32* %j, align 4, !dbg !8005
  br label %bb25, !dbg !8005

bb21:                                             ; preds = %bb25
  %65 = load i32* %j, align 4, !dbg !8007
  %66 = add nsw i32 %65, 1, !dbg !8007
  store i32 %66, i32* %j, align 4, !dbg !8007
  %67 = load i32* %i, align 4, !dbg !8008
  %68 = add nsw i32 %67, 1, !dbg !8008
  %69 = load i32* %j, align 4, !dbg !8008
  %70 = add nsw i32 %68, %69, !dbg !8008
  %71 = sext i32 %70 to i64, !dbg !8008
  %72 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %71, !dbg !8008
  %73 = load i8* %72, align 1, !dbg !8008
  %74 = icmp eq i8 %73, 0, !dbg !8008
  br i1 %74, label %bb22, label %bb25, !dbg !8008

bb22:                                             ; preds = %bb21
  %75 = load i32* %i, align 4, !dbg !8009
  %76 = sitofp i32 %75 to double, !dbg !8009
  %77 = fdiv double %76, 0.000000e+00, !dbg !8009
  %78 = fpext double %77 to x86_fp80, !dbg !8009
  store x86_fp80 %78, x86_fp80* %number, align 16, !dbg !8009
  %79 = load i32* %negative, align 4, !dbg !8010
  %80 = icmp ne i32 %79, 0, !dbg !8010
  br i1 %80, label %bb23, label %bb24, !dbg !8010

bb23:                                             ; preds = %bb22
  %81 = load x86_fp80* %number, align 16, !dbg !8011
  %82 = fsub x86_fp80 0xK80000000000000000000, %81, !dbg !8011
  store x86_fp80 %82, x86_fp80* %number, align 16, !dbg !8011
  br label %bb24, !dbg !8011

bb24:                                             ; preds = %bb23, %bb22
  %83 = load i32* %i, align 4, !dbg !8012
  %84 = sext i32 %83 to i64, !dbg !8012
  %85 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %84, !dbg !8012
  %86 = load i8* %85, align 1, !dbg !8012
  %87 = sext i8 %86 to i32, !dbg !8012
  %88 = sub nsw i32 %87, 2, !dbg !8012
  %89 = load i8** %pos, align 8, !dbg !8012
  %90 = sext i32 %88 to i64, !dbg !8012
  %91 = getelementptr inbounds i8* %89, i64 %90, !dbg !8012
  store i8* %91, i8** %pos, align 8, !dbg !8012
  br label %DONE, !dbg !8012

bb25:                                             ; preds = %bb21, %bb20
  %92 = load i16** @__ctype_tolower, align 8, !dbg !8013
  %93 = load i8** %pos, align 8, !dbg !8013
  %94 = load i32* %j, align 4, !dbg !8013
  %95 = sext i32 %94 to i64, !dbg !8013
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !8013
  %97 = load i8* %96, align 1, !dbg !8013
  %98 = sext i8 %97 to i32, !dbg !8013
  %99 = sext i32 %98 to i64, !dbg !8013
  %100 = getelementptr inbounds i16* %92, i64 %99, !dbg !8013
  %101 = load i16* %100, align 1, !dbg !8013
  %102 = load i32* %i, align 4, !dbg !8013
  %103 = add nsw i32 %102, 1, !dbg !8013
  %104 = load i32* %j, align 4, !dbg !8013
  %105 = add nsw i32 %103, %104, !dbg !8013
  %106 = sext i32 %105 to i64, !dbg !8013
  %107 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %106, !dbg !8013
  %108 = load i8* %107, align 1, !dbg !8013
  %109 = sext i8 %108 to i16, !dbg !8013
  %110 = icmp eq i16 %101, %109, !dbg !8013
  br i1 %110, label %bb21, label %bb26, !dbg !8013

bb26:                                             ; preds = %bb25
  %111 = load i32* %i, align 4, !dbg !8014
  %112 = sext i32 %111 to i64, !dbg !8014
  %113 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %112, !dbg !8014
  %114 = load i8* %113, align 1, !dbg !8014
  %115 = sext i8 %114 to i32, !dbg !8014
  %116 = load i32* %i, align 4, !dbg !8014
  %117 = add nsw i32 %115, %116, !dbg !8014
  store i32 %117, i32* %i, align 4, !dbg !8014
  %118 = load i32* %i, align 4, !dbg !8015
  %119 = sext i32 %118 to i64, !dbg !8015
  %120 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %119, !dbg !8015
  %121 = load i8* %120, align 1, !dbg !8015
  %122 = icmp ne i8 %121, 0, !dbg !8015
  br i1 %122, label %bb20, label %bb27, !dbg !8015

bb27:                                             ; preds = %bb26, %bb18
  %123 = load i8** %str_addr, align 8, !dbg !8016
  store i8* %123, i8** %pos, align 8, !dbg !8016
  br label %DONE, !dbg !8016

bb28:                                             ; preds = %bb17
  %124 = load i32* %num_digits, align 4, !dbg !8017
  %125 = icmp sgt i32 %124, 21, !dbg !8017
  br i1 %125, label %bb29, label %bb30, !dbg !8017

bb29:                                             ; preds = %bb28
  %126 = load i32* %num_digits, align 4, !dbg !8018
  %127 = sub nsw i32 %126, 21, !dbg !8018
  %128 = load i32* %exponent_power_addr, align 4, !dbg !8018
  %129 = add nsw i32 %127, %128, !dbg !8018
  store i32 %129, i32* %exponent_power_addr, align 4, !dbg !8018
  br label %bb30, !dbg !8018

bb30:                                             ; preds = %bb29, %bb28
  %130 = load i8** %pos0, align 8, !dbg !8019
  %131 = icmp ne i8* %130, null, !dbg !8019
  br i1 %131, label %bb31, label %bb32, !dbg !8019

bb31:                                             ; preds = %bb30
  %132 = load i8** %pos0, align 8, !dbg !8020
  %133 = ptrtoint i8* %132 to i64, !dbg !8020
  %134 = trunc i64 %133 to i32, !dbg !8020
  %135 = load i8** %pos, align 8, !dbg !8020
  %136 = ptrtoint i8* %135 to i64, !dbg !8020
  %137 = trunc i64 %136 to i32, !dbg !8020
  %138 = sub i32 %134, %137, !dbg !8020
  %139 = load i32* %exponent_power_addr, align 4, !dbg !8020
  %140 = add i32 %138, %139, !dbg !8020
  store i32 %140, i32* %exponent_power_addr, align 4, !dbg !8020
  br label %bb32, !dbg !8020

bb32:                                             ; preds = %bb31, %bb30
  %141 = load i32* %negative, align 4, !dbg !8021
  %142 = icmp ne i32 %141, 0, !dbg !8021
  br i1 %142, label %bb33, label %bb34, !dbg !8021

bb33:                                             ; preds = %bb32
  %143 = load x86_fp80* %number, align 16, !dbg !8022
  %144 = fsub x86_fp80 0xK80000000000000000000, %143, !dbg !8022
  store x86_fp80 %144, x86_fp80* %number, align 16, !dbg !8022
  br label %bb34, !dbg !8022

bb34:                                             ; preds = %bb33, %bb32
  %145 = load i8** %pos, align 8, !dbg !8023
  %146 = load i8* %145, align 1, !dbg !8023
  %147 = or i8 %146, 32, !dbg !8023
  %148 = icmp eq i8 %147, 101, !dbg !8023
  br i1 %148, label %bb35, label %bb46, !dbg !8023

bb35:                                             ; preds = %bb34
  %149 = load i8** %pos, align 8, !dbg !8024
  store i8* %149, i8** %pos1, align 8, !dbg !8024
  store i32 1, i32* %negative, align 4, !dbg !8025
  %150 = load i8** %pos, align 8, !dbg !8026
  %151 = getelementptr inbounds i8* %150, i64 1, !dbg !8026
  store i8* %151, i8** %pos, align 8, !dbg !8026
  %152 = load i8** %pos, align 8, !dbg !8026
  %153 = load i8* %152, align 1, !dbg !8026
  %154 = sext i8 %153 to i32, !dbg !8026
  switch i32 %154, label %bb38 [
    i32 43, label %bb37
    i32 45, label %bb36
  ], !dbg !8026

bb36:                                             ; preds = %bb35
  store i32 -1, i32* %negative, align 4, !dbg !8027
  br label %bb37, !dbg !8027

bb37:                                             ; preds = %bb36, %bb35
  %155 = load i8** %pos, align 8, !dbg !8028
  %156 = getelementptr inbounds i8* %155, i64 1, !dbg !8028
  store i8* %156, i8** %pos, align 8, !dbg !8028
  br label %bb38, !dbg !8028

bb38:                                             ; preds = %bb37, %bb35
  %157 = load i8** %pos, align 8, !dbg !8029
  store i8* %157, i8** %pos0, align 8, !dbg !8029
  store i32 0, i32* %exponent_temp, align 4, !dbg !8030
  br label %bb42, !dbg !8030

bb39:                                             ; preds = %bb42
  %158 = load i32* %exponent_temp, align 4, !dbg !8031
  %159 = icmp sle i32 %158, 4972, !dbg !8031
  br i1 %159, label %bb40, label %bb41, !dbg !8031

bb40:                                             ; preds = %bb39
  %160 = load i32* %exponent_temp, align 4, !dbg !8032
  %161 = mul nsw i32 %160, 10, !dbg !8032
  %162 = load i8** %pos, align 8, !dbg !8032
  %163 = load i8* %162, align 1, !dbg !8032
  %164 = sext i8 %163 to i32, !dbg !8032
  %165 = sub nsw i32 %164, 48, !dbg !8032
  %166 = add nsw i32 %161, %165, !dbg !8032
  store i32 %166, i32* %exponent_temp, align 4, !dbg !8032
  br label %bb41, !dbg !8032

bb41:                                             ; preds = %bb40, %bb39
  %167 = load i8** %pos, align 8, !dbg !8033
  %168 = getelementptr inbounds i8* %167, i64 1, !dbg !8033
  store i8* %168, i8** %pos, align 8, !dbg !8033
  br label %bb42, !dbg !8033

bb42:                                             ; preds = %bb41, %bb38
  %169 = load i16** @__ctype_b, align 8, !dbg !8034
  %170 = load i8** %pos, align 8, !dbg !8034
  %171 = load i8* %170, align 1, !dbg !8034
  %172 = sext i8 %171 to i32, !dbg !8034
  %173 = sext i32 %172 to i64, !dbg !8034
  %174 = getelementptr inbounds i16* %169, i64 %173, !dbg !8034
  %175 = load i16* %174, align 1, !dbg !8034
  %176 = zext i16 %175 to i32, !dbg !8034
  %177 = and i32 %176, 2048, !dbg !8034
  %178 = icmp ne i32 %177, 0, !dbg !8034
  br i1 %178, label %bb39, label %bb43, !dbg !8034

bb43:                                             ; preds = %bb42
  %179 = load i8** %pos, align 8, !dbg !8035
  %180 = load i8** %pos0, align 8, !dbg !8035
  %181 = icmp eq i8* %179, %180, !dbg !8035
  br i1 %181, label %bb44, label %bb45, !dbg !8035

bb44:                                             ; preds = %bb43
  %182 = load i8** %pos1, align 8, !dbg !8036
  store i8* %182, i8** %pos, align 8, !dbg !8036
  br label %bb45, !dbg !8036

bb45:                                             ; preds = %bb44, %bb43
  %183 = load i32* %negative, align 4, !dbg !8037
  %184 = load i32* %exponent_temp, align 4, !dbg !8037
  %185 = mul nsw i32 %183, %184, !dbg !8037
  %186 = load i32* %exponent_power_addr, align 4, !dbg !8037
  %187 = add nsw i32 %185, %186, !dbg !8037
  store i32 %187, i32* %exponent_power_addr, align 4, !dbg !8037
  br label %bb46, !dbg !8037

bb46:                                             ; preds = %bb45, %bb34
  %188 = load x86_fp80* %number, align 16, !dbg !8038
  %189 = fcmp oeq x86_fp80 %188, 0xK00000000000000000000, !dbg !8038
  br i1 %189, label %DONE, label %bb47, !dbg !8038

bb47:                                             ; preds = %bb46
  %190 = load i32* %exponent_power_addr, align 4, !dbg !8039
  store i32 %190, i32* %exponent_temp, align 4, !dbg !8039
  %191 = load i32* %exponent_temp, align 4, !dbg !8040
  %192 = icmp slt i32 %191, 0, !dbg !8040
  br i1 %192, label %bb48, label %bb55, !dbg !8040

bb48:                                             ; preds = %bb47
  %193 = load i32* %exponent_temp, align 4, !dbg !8041
  %194 = sub nsw i32 0, %193, !dbg !8041
  store i32 %194, i32* %exponent_temp, align 4, !dbg !8041
  br label %bb55, !dbg !8041

bb50:                                             ; preds = %bb55
  %195 = load i32* %exponent_temp, align 4, !dbg !8042
  %196 = and i32 %195, 1, !dbg !8042
  %197 = trunc i32 %196 to i8, !dbg !8042
  %toBool = icmp ne i8 %197, 0, !dbg !8042
  br i1 %toBool, label %bb51, label %bb54, !dbg !8042

bb51:                                             ; preds = %bb50
  %198 = load i32* %exponent_power_addr, align 4, !dbg !8043
  %199 = icmp slt i32 %198, 0, !dbg !8043
  %200 = load x86_fp80* %number, align 16, !dbg !8044
  %201 = load x86_fp80* %p_base, align 16, !dbg !8044
  br i1 %199, label %bb52, label %bb53, !dbg !8043

bb52:                                             ; preds = %bb51
  %202 = fdiv x86_fp80 %200, %201, !dbg !8044
  store x86_fp80 %202, x86_fp80* %number, align 16, !dbg !8044
  br label %bb54, !dbg !8044

bb53:                                             ; preds = %bb51
  %203 = fmul x86_fp80 %200, %201, !dbg !8045
  store x86_fp80 %203, x86_fp80* %number, align 16, !dbg !8045
  br label %bb54, !dbg !8045

bb54:                                             ; preds = %bb53, %bb52, %bb50
  %204 = load i32* %exponent_temp, align 4, !dbg !8046
  %int_cast_to_i64 = zext i32 1 to i64
  %205 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %205, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb54
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb54
  %206 = ashr i32 %204, 1, !dbg !8046
  store i32 %206, i32* %exponent_temp, align 4, !dbg !8046
  %207 = load x86_fp80* %p_base, align 16, !dbg !8047
  %208 = load x86_fp80* %p_base, align 16, !dbg !8047
  %209 = fmul x86_fp80 %207, %208, !dbg !8047
  store x86_fp80 %209, x86_fp80* %p_base, align 16, !dbg !8047
  br label %bb55, !dbg !8047

bb55:                                             ; preds = %bb47, %bb48, %klee_overshift_check.exit
  %210 = load i32* %exponent_temp, align 4, !dbg !8048
  %211 = icmp ne i32 %210, 0, !dbg !8048
  br i1 %211, label %bb50, label %bb56, !dbg !8048

bb56:                                             ; preds = %bb55
  %212 = load x86_fp80* %number, align 16, !dbg !8049
  %213 = fdiv x86_fp80 %212, 0xK40018000000000000000, !dbg !8049
  %214 = load x86_fp80* %number, align 16, !dbg !8049
  %215 = fcmp oeq x86_fp80 %213, %214, !dbg !8049
  br i1 %215, label %bb57, label %DONE, !dbg !8049

bb57:                                             ; preds = %bb56
  store i32 34, i32* @errno, align 4, !dbg !8050
  br label %DONE, !dbg !8051

DONE:                                             ; preds = %bb57, %bb56, %bb46, %bb27, %bb24
  %216 = load i8*** %endptr_addr, align 8, !dbg !8052
  %217 = icmp ne i8** %216, null, !dbg !8052
  br i1 %217, label %bb58, label %bb59, !dbg !8052

bb58:                                             ; preds = %DONE
  %218 = load i8*** %endptr_addr, align 8, !dbg !8053
  %219 = load i8** %pos, align 8, !dbg !8053
  store i8* %219, i8** %218, align 8, !dbg !8053
  br label %bb59, !dbg !8053

bb59:                                             ; preds = %bb58, %DONE
  %220 = load x86_fp80* %number, align 16, !dbg !8054
  store x86_fp80 %220, x86_fp80* %0, align 16, !dbg !8054
  %221 = load x86_fp80* %0, align 16, !dbg !8054
  store x86_fp80 %221, x86_fp80* %retval, align 16, !dbg !8054
  %retval60 = load x86_fp80* %retval, !dbg !8054
  ret x86_fp80 %retval60, !dbg !8054
}

define i32 @main(i32, i8**) {
entry:
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
}

define %struct.exe_file_t* @__get_file(i32 %fd) nounwind readonly {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8055
  br i1 %0, label %bb, label %bb3, !dbg !8055

bb:                                               ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8056
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8057
  %3 = load i32* %2, align 4, !dbg !8057
  %4 = and i32 %3, 1
  %toBool = icmp eq i32 %4, 0, !dbg !8057
  br i1 %toBool, label %bb3, label %bb1, !dbg !8057

bb1:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8056
  br label %bb3, !dbg !8058

bb3:                                              ; preds = %bb1, %bb, %entry
  %.0 = phi %struct.exe_file_t* [ %5, %bb1 ], [ null, %bb ], [ null, %entry ]
  ret %struct.exe_file_t* %.0, !dbg !8058
}

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

define i32 @umask(i32 %mask) nounwind {
entry:
  %0 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8059
  %1 = and i32 %mask, 511, !dbg !8060
  store i32 %1, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8060
  ret i32 %0, !dbg !8061
}

define i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = icmp ult i32 %out_fd, 32, !dbg !8062
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !8062

bb.i:                                             ; preds = %entry
  %1 = sext i32 %out_fd to i64, !dbg !8064
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8065
  %3 = load i32* %2, align 4, !dbg !8065
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8065
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !8065

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8064
  br label %__get_file.exit, !dbg !8066

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = icmp ult i32 %in_fd, 32, !dbg !8067
  br i1 %6, label %bb.i8, label %__get_file.exit11, !dbg !8067

bb.i8:                                            ; preds = %__get_file.exit
  %7 = sext i32 %in_fd to i64, !dbg !8069
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, i32 1, !dbg !8070
  %9 = load i32* %8, align 4, !dbg !8070
  %10 = and i32 %9, 1
  %toBool.i7 = icmp eq i32 %10, 0, !dbg !8070
  br i1 %toBool.i7, label %__get_file.exit11, label %bb1.i9, !dbg !8070

bb1.i9:                                           ; preds = %bb.i8
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, !dbg !8069
  br label %__get_file.exit11, !dbg !8071

__get_file.exit11:                                ; preds = %bb1.i9, %bb.i8, %__get_file.exit
  %.0.i10 = phi %struct.exe_file_t* [ %11, %bb1.i9 ], [ null, %bb.i8 ], [ null, %__get_file.exit ]
  %12 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !8072
  %13 = load %struct.exe_disk_file_t** %12, align 8, !dbg !8072
  %14 = icmp eq %struct.exe_disk_file_t* %13, null, !dbg !8072
  br i1 %14, label %bb, label %bb1, !dbg !8072

bb:                                               ; preds = %__get_file.exit11
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 3, !dbg !8072
  %16 = load %struct.exe_disk_file_t** %15, align 8, !dbg !8072
  %17 = icmp eq %struct.exe_disk_file_t* %16, null, !dbg !8072
  br i1 %17, label %bb2, label %bb1, !dbg !8072

bb1:                                              ; preds = %bb, %__get_file.exit11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8073
  store i32 22, i32* %18, align 4, !dbg !8073
  br label %bb5, !dbg !8074

bb2:                                              ; preds = %bb
  %19 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 0, !dbg !8075
  %20 = load i32* %19, align 8, !dbg !8075
  %21 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !8075
  %22 = load i32* %21, align 8, !dbg !8075
  %23 = tail call i64 (i64, ...)* @syscall(i64 40, i32 %22, i32 %20, i64* %offset, i64 %count) nounwind, !dbg !8075
  %24 = icmp slt i64 %23, 0, !dbg !8076
  br i1 %24, label %bb3, label %bb5, !dbg !8076

bb3:                                              ; preds = %bb2
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8077
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8077
  store i32 %26, i32* %25, align 4, !dbg !8077
  br label %bb5, !dbg !8077

bb5:                                              ; preds = %bb3, %bb2, %bb1
  %.0 = phi i64 [ -1, %bb1 ], [ %23, %bb3 ], [ %23, %bb2 ]
  ret i64 %.0, !dbg !8074
}

declare i64 @syscall(i64, ...) nounwind

declare i32 @klee_get_errno()

define i64 @sendfile64(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = tail call i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind, !dbg !8078
  ret i64 %0, !dbg !8078
}

define i32 @fsync(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8080
  br i1 %0, label %bb.i, label %bb, !dbg !8080

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8082
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8083
  %3 = load i32* %2, align 4, !dbg !8083
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8083
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8083

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8082
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8084
  br i1 %6, label %bb, label %bb1, !dbg !8084

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8085
  store i32 9, i32* %7, align 4, !dbg !8085
  br label %bb6, !dbg !8086

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8087
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8087
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8087
  br i1 %10, label %bb3, label %bb6, !dbg !8087

bb3:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8088
  %12 = load i32* %11, align 8, !dbg !8088
  %13 = tail call i64 (i64, ...)* @syscall(i64 74, i32 %12) nounwind, !dbg !8088
  %14 = trunc i64 %13 to i32, !dbg !8088
  %15 = icmp eq i32 %14, -1, !dbg !8089
  br i1 %15, label %bb4, label %bb6, !dbg !8089

bb4:                                              ; preds = %bb3
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8090
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8090
  store i32 %17, i32* %16, align 4, !dbg !8090
  br label %bb6, !dbg !8090

bb6:                                              ; preds = %bb4, %bb3, %bb1, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb1 ], [ -1, %bb4 ], [ %14, %bb3 ]
  ret i32 %.0, !dbg !8086
}

define i32 @chroot(i8* nocapture %path) nounwind {
entry:
  %0 = load i8* %path, align 1, !dbg !8091
  switch i8 %0, label %bb4 [
    i8 0, label %bb
    i8 47, label %bb2
  ]

bb:                                               ; preds = %entry
  %1 = tail call i32* @__errno_location() nounwind readnone, !dbg !8093
  store i32 2, i32* %1, align 4, !dbg !8093
  br label %bb5, !dbg !8094

bb2:                                              ; preds = %entry
  %2 = getelementptr inbounds i8* %path, i64 1, !dbg !8095
  %3 = load i8* %2, align 1, !dbg !8095
  %4 = icmp eq i8 %3, 0, !dbg !8095
  br i1 %4, label %bb5, label %bb4, !dbg !8095

bb4:                                              ; preds = %bb2, %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str278, i64 0, i64 0)) nounwind, !dbg !8096
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8097
  store i32 2, i32* %5, align 4, !dbg !8097
  br label %bb5, !dbg !8098

bb5:                                              ; preds = %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb4 ], [ 0, %bb2 ]
  ret i32 %.0, !dbg !8094
}

declare void @klee_warning(i8*)

define i32 @fstatfs(i32 %fd, %struct.statfs* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8099
  br i1 %0, label %bb.i, label %bb, !dbg !8099

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8101
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8102
  %3 = load i32* %2, align 4, !dbg !8102
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8102
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8102

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8101
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8103
  br i1 %6, label %bb, label %bb1, !dbg !8103

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8104
  store i32 9, i32* %7, align 4, !dbg !8104
  br label %bb6, !dbg !8105

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8106
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8106
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8106
  br i1 %10, label %bb3, label %bb2, !dbg !8106

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str1279, i64 0, i64 0)) nounwind, !dbg !8107
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8108
  store i32 9, i32* %11, align 4, !dbg !8108
  br label %bb6, !dbg !8109

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8110
  %13 = load i32* %12, align 8, !dbg !8110
  %14 = tail call i64 (i64, ...)* @syscall(i64 138, i32 %13, %struct.statfs* %buf) nounwind, !dbg !8110
  %15 = trunc i64 %14 to i32, !dbg !8110
  %16 = icmp eq i32 %15, -1, !dbg !8111
  br i1 %16, label %bb4, label %bb6, !dbg !8111

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8112
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8112
  store i32 %18, i32* %17, align 4, !dbg !8112
  br label %bb6, !dbg !8112

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8105
}

define i32 @fcntl(i32 %fd, i32 %cmd, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8113
  br i1 %0, label %bb.i, label %bb, !dbg !8113

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8115
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8116
  %3 = load i32* %2, align 4, !dbg !8116
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8116
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8116

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8115
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8117
  br i1 %6, label %bb, label %bb1, !dbg !8117

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8118
  store i32 9, i32* %7, align 4, !dbg !8118
  br label %bb35, !dbg !8119

bb1:                                              ; preds = %__get_file.exit
  switch i32 %cmd, label %bb8 [
    i32 3, label %bb21
    i32 1, label %bb21
    i32 11, label %bb21
    i32 9, label %bb21
  ]

bb8:                                              ; preds = %bb1
  %cmd.off = add i32 %cmd, -1025
  %8 = icmp ult i32 %cmd.off, 2
  br i1 %8, label %bb21, label %bb13, !dbg !8120

bb13:                                             ; preds = %bb8
  %ap1415 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8121
  call void @llvm.va_start(i8* %ap1415), !dbg !8121
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8122
  %10 = load i32* %9, align 8, !dbg !8122
  %11 = icmp ugt i32 %10, 47, !dbg !8122
  br i1 %11, label %bb17, label %bb16, !dbg !8122

bb16:                                             ; preds = %bb13
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8122
  %13 = load i8** %12, align 8, !dbg !8122
  %tmp = zext i32 %10 to i64
  %14 = ptrtoint i8* %13 to i64, !dbg !8122
  %15 = add i64 %14, %tmp, !dbg !8122
  %16 = inttoptr i64 %15 to i8*, !dbg !8122
  %17 = add i32 %10, 8, !dbg !8122
  store i32 %17, i32* %9, align 8, !dbg !8122
  br label %bb18, !dbg !8122

bb17:                                             ; preds = %bb13
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8122
  %19 = load i8** %18, align 8, !dbg !8122
  %20 = getelementptr inbounds i8* %19, i64 8, !dbg !8122
  store i8* %20, i8** %18, align 8, !dbg !8122
  br label %bb18, !dbg !8122

bb18:                                             ; preds = %bb17, %bb16
  %addr.76.0 = phi i8* [ %19, %bb17 ], [ %16, %bb16 ]
  %21 = bitcast i8* %addr.76.0 to i32*, !dbg !8122
  %22 = load i32* %21, align 4, !dbg !8122
  call void @llvm.va_end(i8* %ap1415), !dbg !8123
  br label %bb21, !dbg !8123

bb21:                                             ; preds = %bb18, %bb8, %bb1, %bb1, %bb1, %bb1
  %arg.0 = phi i32 [ %22, %bb18 ], [ 0, %bb1 ], [ 0, %bb1 ], [ 0, %bb8 ], [ 0, %bb1 ], [ 0, %bb1 ]
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8124
  %24 = load %struct.exe_disk_file_t** %23, align 8, !dbg !8124
  %25 = icmp eq %struct.exe_disk_file_t* %24, null, !dbg !8124
  br i1 %25, label %bb32, label %bb22, !dbg !8124

bb22:                                             ; preds = %bb21
  switch i32 %cmd, label %bb31 [
    i32 1, label %bb23
    i32 2, label %bb26
    i32 3, label %bb35
    i32 4, label %bb35
  ], !dbg !8125

bb23:                                             ; preds = %bb22
  %26 = load i32* %2, align 4, !dbg !8126
  %int_cast_to_i64 = zext i32 1 to i64
  %27 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %27, label %klee_overshift_check.exit, label %bb.i1

bb.i1:                                            ; preds = %bb23
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb23
  %28 = lshr i32 %26, 1
  %.lobit = and i32 %28, 1
  br label %bb35

bb26:                                             ; preds = %bb22
  %29 = load i32* %2, align 4, !dbg !8127
  %30 = and i32 %29, -3, !dbg !8127
  store i32 %30, i32* %2, align 4, !dbg !8127
  %31 = and i32 %arg.0, 1
  %toBool27 = icmp eq i32 %31, 0, !dbg !8128
  br i1 %toBool27, label %bb35, label %bb28, !dbg !8128

bb28:                                             ; preds = %bb26
  %32 = or i32 %29, 2, !dbg !8129
  store i32 %32, i32* %2, align 4, !dbg !8129
  br label %bb35, !dbg !8129

bb31:                                             ; preds = %bb22
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2280, i64 0, i64 0)) nounwind, !dbg !8130
  %33 = call i32* @__errno_location() nounwind readnone, !dbg !8131
  store i32 22, i32* %33, align 4, !dbg !8131
  br label %bb35, !dbg !8132

bb32:                                             ; preds = %bb21
  %34 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8133
  %35 = load i32* %34, align 8, !dbg !8133
  %36 = call i64 (i64, ...)* @syscall(i64 72, i32 %35, i32 %cmd, i32 %arg.0) nounwind, !dbg !8133
  %37 = trunc i64 %36 to i32, !dbg !8133
  %38 = icmp eq i32 %37, -1, !dbg !8134
  br i1 %38, label %bb33, label %bb35, !dbg !8134

bb33:                                             ; preds = %bb32
  %39 = call i32* @__errno_location() nounwind readnone, !dbg !8135
  %40 = call i32 @klee_get_errno() nounwind, !dbg !8135
  store i32 %40, i32* %39, align 4, !dbg !8135
  br label %bb35, !dbg !8135

bb35:                                             ; preds = %bb33, %bb32, %bb31, %bb28, %bb26, %klee_overshift_check.exit, %bb22, %bb22, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb31 ], [ %.lobit, %klee_overshift_check.exit ], [ 0, %bb26 ], [ 0, %bb28 ], [ 0, %bb22 ], [ 0, %bb22 ], [ -1, %bb33 ], [ %37, %bb32 ]
  ret i32 %.0, !dbg !8119
}

define i32 @futimens(i32 %fd, %struct.timespec* %times) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8136
  br i1 %0, label %bb.i, label %bb3, !dbg !8136

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8138
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8139
  %3 = load i32* %2, align 4, !dbg !8139
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8139
  br i1 %toBool.i, label %bb3, label %__get_file.exit, !dbg !8139

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8138
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb3, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8140
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !8140
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !8140
  br i1 %8, label %bb4, label %bb1, !dbg !8140

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str3281, i64 0, i64 0)) nounwind, !dbg !8141
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8142
  store i32 2, i32* %9, align 4, !dbg !8142
  br label %bb7, !dbg !8143

bb3:                                              ; preds = %__get_file.exit, %bb.i, %entry
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !8144
  store i32 9, i32* %10, align 4, !dbg !8144
  br label %bb7, !dbg !8145

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8146
  %12 = load i32* %11, align 8, !dbg !8146
  %13 = sext i32 %12 to i64, !dbg !8146
  %14 = tail call i64 (i64, ...)* @syscall(i64 280, i64 %13, i64 0, %struct.timespec* %times, i64 0) nounwind, !dbg !8146
  %15 = trunc i64 %14 to i32, !dbg !8146
  %16 = icmp eq i32 %15, -1, !dbg !8147
  br i1 %16, label %bb5, label %bb7, !dbg !8147

bb5:                                              ; preds = %bb4
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8148
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8148
  store i32 %18, i32* %17, align 4, !dbg !8148
  br label %bb7, !dbg !8148

bb7:                                              ; preds = %bb5, %bb4, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ -1, %bb5 ], [ %15, %bb4 ]
  ret i32 %.0, !dbg !8143
}

define i32 @fchown(i32 %fd, i32 %owner, i32 %group) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8149
  br i1 %0, label %bb.i, label %bb, !dbg !8149

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8151
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8152
  %3 = load i32* %2, align 4, !dbg !8152
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8152
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8152

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8151
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8153
  br i1 %6, label %bb, label %bb1, !dbg !8153

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8154
  store i32 9, i32* %7, align 4, !dbg !8154
  br label %bb6, !dbg !8155

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8156
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8156
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8156
  br i1 %10, label %bb3, label %bb2, !dbg !8156

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4282, i64 0, i64 0)) nounwind, !dbg !8157
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8160
  store i32 1, i32* %11, align 4, !dbg !8160
  br label %bb6, !dbg !8159

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8161
  %13 = load i32* %12, align 8, !dbg !8161
  %14 = tail call i64 (i64, ...)* @syscall(i64 93, i32 %13, i32 %owner, i32 %group) nounwind, !dbg !8161
  %15 = trunc i64 %14 to i32, !dbg !8161
  %16 = icmp eq i32 %15, -1, !dbg !8162
  br i1 %16, label %bb4, label %bb6, !dbg !8162

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8163
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8163
  store i32 %18, i32* %17, align 4, !dbg !8163
  br label %bb6, !dbg !8163

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8155
}

define i32 @fchdir(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8164
  br i1 %0, label %bb.i, label %bb, !dbg !8164

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8166
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8167
  %3 = load i32* %2, align 4, !dbg !8167
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8167
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8167

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8166
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8168
  br i1 %6, label %bb, label %bb1, !dbg !8168

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8169
  store i32 9, i32* %7, align 4, !dbg !8169
  br label %bb6, !dbg !8170

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8171
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8171
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8171
  br i1 %10, label %bb3, label %bb2, !dbg !8171

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5283, i64 0, i64 0)) nounwind, !dbg !8172
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8173
  store i32 2, i32* %11, align 4, !dbg !8173
  br label %bb6, !dbg !8174

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8175
  %13 = load i32* %12, align 8, !dbg !8175
  %14 = tail call i64 (i64, ...)* @syscall(i64 81, i32 %13) nounwind, !dbg !8175
  %15 = trunc i64 %14 to i32, !dbg !8175
  %16 = icmp eq i32 %15, -1, !dbg !8176
  br i1 %16, label %bb4, label %bb6, !dbg !8176

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8177
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8177
  store i32 %18, i32* %17, align 4, !dbg !8177
  br label %bb6, !dbg !8177

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8170
}

define i32 @ioctl(i32 %fd, i64 %request, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8178
  br i1 %0, label %bb.i, label %bb, !dbg !8178

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8180
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8181
  %3 = load i32* %2, align 4, !dbg !8181
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8181
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8181

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8180
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8182
  br i1 %6, label %bb, label %bb1, !dbg !8182

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8183
  store i32 9, i32* %7, align 4, !dbg !8183
  br label %bb49, !dbg !8184

bb1:                                              ; preds = %__get_file.exit
  %ap23 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8185
  call void @llvm.va_start(i8* %ap23), !dbg !8185
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8186
  %9 = load i32* %8, align 8, !dbg !8186
  %10 = icmp ugt i32 %9, 47, !dbg !8186
  br i1 %10, label %bb5, label %bb4, !dbg !8186

bb4:                                              ; preds = %bb1
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8186
  %12 = load i8** %11, align 8, !dbg !8186
  %tmp = zext i32 %9 to i64
  %13 = ptrtoint i8* %12 to i64, !dbg !8186
  %14 = add i64 %13, %tmp, !dbg !8186
  %15 = inttoptr i64 %14 to i8*, !dbg !8186
  %16 = add i32 %9, 8, !dbg !8186
  store i32 %16, i32* %8, align 8, !dbg !8186
  br label %bb6, !dbg !8186

bb5:                                              ; preds = %bb1
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8186
  %18 = load i8** %17, align 8, !dbg !8186
  %19 = getelementptr inbounds i8* %18, i64 8, !dbg !8186
  store i8* %19, i8** %17, align 8, !dbg !8186
  br label %bb6, !dbg !8186

bb6:                                              ; preds = %bb5, %bb4
  %addr.99.0 = phi i8* [ %18, %bb5 ], [ %15, %bb4 ]
  %20 = bitcast i8* %addr.99.0 to i8**, !dbg !8186
  %21 = load i8** %20, align 8, !dbg !8186
  call void @llvm.va_end(i8* %ap23), !dbg !8187
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8188
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8188
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !8188
  br i1 %24, label %bb46, label %bb9, !dbg !8188

bb9:                                              ; preds = %bb6
  %25 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 3, !dbg !8189
  %26 = load %struct.stat** %25, align 8, !dbg !8189
  switch i64 %request, label %bb45 [
    i64 21505, label %bb10
    i64 21506, label %bb13
    i64 21507, label %bb16
    i64 21508, label %bb19
    i64 21523, label %bb22
    i64 21524, label %bb25
    i64 21531, label %bb28
    i64 35093, label %bb38
    i64 35111, label %bb36
    i64 35123, label %bb35
    i64 2150657282, label %bb34
  ], !dbg !8190

bb10:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([41 x i8]* @.str6284, i64 0, i64 0)) nounwind, !dbg !8191
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8192
  %28 = load i32* %27, align 8, !dbg !8192
  %29 = and i32 %28, 61440, !dbg !8192
  %30 = icmp eq i32 %29, 8192, !dbg !8192
  br i1 %30, label %bb11, label %bb12, !dbg !8192

bb11:                                             ; preds = %bb10
  %31 = bitcast i8* %21 to i32*, !dbg !8193
  store i32 27906, i32* %31, align 4, !dbg !8193
  %32 = getelementptr inbounds i8* %21, i64 4
  %33 = bitcast i8* %32 to i32*, !dbg !8194
  store i32 5, i32* %33, align 4, !dbg !8194
  %34 = getelementptr inbounds i8* %21, i64 8
  %35 = bitcast i8* %34 to i32*, !dbg !8195
  store i32 1215, i32* %35, align 4, !dbg !8195
  %36 = getelementptr inbounds i8* %21, i64 12
  %37 = bitcast i8* %36 to i32*, !dbg !8196
  store i32 35287, i32* %37, align 4, !dbg !8196
  %38 = getelementptr inbounds i8* %21, i64 16
  store i8 0, i8* %38, align 4, !dbg !8197
  %39 = getelementptr inbounds i8* %21, i64 17
  store i8 3, i8* %39, align 1, !dbg !8198
  %40 = getelementptr inbounds i8* %21, i64 18, !dbg !8199
  store i8 28, i8* %40, align 1, !dbg !8199
  %41 = getelementptr inbounds i8* %21, i64 19, !dbg !8200
  store i8 127, i8* %41, align 1, !dbg !8200
  %42 = getelementptr inbounds i8* %21, i64 20, !dbg !8201
  store i8 21, i8* %42, align 1, !dbg !8201
  %43 = getelementptr inbounds i8* %21, i64 21, !dbg !8202
  store i8 4, i8* %43, align 1, !dbg !8202
  %44 = getelementptr inbounds i8* %21, i64 22, !dbg !8203
  store i8 0, i8* %44, align 1, !dbg !8203
  %45 = getelementptr inbounds i8* %21, i64 23, !dbg !8204
  store i8 1, i8* %45, align 1, !dbg !8204
  %46 = getelementptr inbounds i8* %21, i64 24, !dbg !8205
  store i8 -1, i8* %46, align 1, !dbg !8205
  %47 = getelementptr inbounds i8* %21, i64 25, !dbg !8206
  store i8 17, i8* %47, align 1, !dbg !8206
  %48 = getelementptr inbounds i8* %21, i64 26, !dbg !8207
  store i8 19, i8* %48, align 1, !dbg !8207
  %49 = getelementptr inbounds i8* %21, i64 27, !dbg !8208
  store i8 26, i8* %49, align 1, !dbg !8208
  %50 = getelementptr inbounds i8* %21, i64 28, !dbg !8209
  store i8 -1, i8* %50, align 1, !dbg !8209
  %51 = getelementptr inbounds i8* %21, i64 29, !dbg !8210
  store i8 18, i8* %51, align 1, !dbg !8210
  %52 = getelementptr inbounds i8* %21, i64 30, !dbg !8211
  store i8 15, i8* %52, align 1, !dbg !8211
  %53 = getelementptr inbounds i8* %21, i64 31, !dbg !8212
  store i8 23, i8* %53, align 1, !dbg !8212
  %54 = getelementptr inbounds i8* %21, i64 32, !dbg !8213
  store i8 22, i8* %54, align 1, !dbg !8213
  %55 = getelementptr inbounds i8* %21, i64 33, !dbg !8214
  store i8 -1, i8* %55, align 1, !dbg !8214
  %56 = getelementptr inbounds i8* %21, i64 34, !dbg !8215
  store i8 0, i8* %56, align 1, !dbg !8215
  %57 = getelementptr inbounds i8* %21, i64 35, !dbg !8216
  store i8 0, i8* %57, align 1, !dbg !8216
  br label %bb49, !dbg !8217

bb12:                                             ; preds = %bb10
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !8218
  store i32 25, i32* %58, align 4, !dbg !8218
  br label %bb49, !dbg !8219

bb13:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([42 x i8]* @.str7285, i64 0, i64 0)) nounwind, !dbg !8220
  %59 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8221
  %60 = load i32* %59, align 8, !dbg !8221
  %61 = and i32 %60, 61440, !dbg !8221
  %62 = icmp eq i32 %61, 8192, !dbg !8221
  br i1 %62, label %bb49, label %bb15, !dbg !8221

bb15:                                             ; preds = %bb13
  %63 = call i32* @__errno_location() nounwind readnone, !dbg !8222
  store i32 25, i32* %63, align 4, !dbg !8222
  br label %bb49, !dbg !8223

bb16:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str8286, i64 0, i64 0)) nounwind, !dbg !8224
  %64 = icmp eq i32 %fd, 0, !dbg !8225
  br i1 %64, label %bb49, label %bb18, !dbg !8225

bb18:                                             ; preds = %bb16
  %65 = call i32* @__errno_location() nounwind readnone, !dbg !8226
  store i32 25, i32* %65, align 4, !dbg !8226
  br label %bb49, !dbg !8227

bb19:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str9287, i64 0, i64 0)) nounwind, !dbg !8228
  %66 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8229
  %67 = load i32* %66, align 8, !dbg !8229
  %68 = and i32 %67, 61440, !dbg !8229
  %69 = icmp eq i32 %68, 8192, !dbg !8229
  br i1 %69, label %bb49, label %bb21, !dbg !8229

bb21:                                             ; preds = %bb19
  %70 = call i32* @__errno_location() nounwind readnone, !dbg !8230
  store i32 25, i32* %70, align 4, !dbg !8230
  br label %bb49, !dbg !8231

bb22:                                             ; preds = %bb9
  %71 = bitcast i8* %21 to i16*, !dbg !8232
  store i16 24, i16* %71, align 2, !dbg !8232
  %72 = getelementptr inbounds i8* %21, i64 2
  %73 = bitcast i8* %72 to i16*, !dbg !8233
  store i16 80, i16* %73, align 2, !dbg !8233
  call void @klee_warning_once(i8* getelementptr inbounds ([45 x i8]* @.str10288, i64 0, i64 0)) nounwind, !dbg !8234
  %74 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8235
  %75 = load i32* %74, align 8, !dbg !8235
  %76 = and i32 %75, 61440, !dbg !8235
  %77 = icmp eq i32 %76, 8192, !dbg !8235
  br i1 %77, label %bb49, label %bb24, !dbg !8235

bb24:                                             ; preds = %bb22
  %78 = call i32* @__errno_location() nounwind readnone, !dbg !8236
  store i32 25, i32* %78, align 4, !dbg !8236
  br label %bb49, !dbg !8237

bb25:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([46 x i8]* @.str11289, i64 0, i64 0)) nounwind, !dbg !8238
  %79 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8239
  %80 = load i32* %79, align 8, !dbg !8239
  %81 = and i32 %80, 61440, !dbg !8239
  %82 = icmp eq i32 %81, 8192, !dbg !8239
  %83 = call i32* @__errno_location() nounwind readnone, !dbg !8240
  br i1 %82, label %bb26, label %bb27, !dbg !8239

bb26:                                             ; preds = %bb25
  store i32 22, i32* %83, align 4, !dbg !8240
  br label %bb49, !dbg !8241

bb27:                                             ; preds = %bb25
  store i32 25, i32* %83, align 4, !dbg !8242
  br label %bb49, !dbg !8243

bb28:                                             ; preds = %bb9
  %84 = bitcast i8* %21 to i32*, !dbg !8244
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str12290, i64 0, i64 0)) nounwind, !dbg !8245
  %85 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8246
  %86 = load i32* %85, align 8, !dbg !8246
  %87 = and i32 %86, 61440, !dbg !8246
  %88 = icmp eq i32 %87, 8192, !dbg !8246
  br i1 %88, label %bb29, label %bb33, !dbg !8246

bb29:                                             ; preds = %bb28
  %89 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8247
  %90 = load i64* %89, align 8, !dbg !8247
  %91 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8247
  %92 = getelementptr inbounds %struct.exe_disk_file_t* %91, i64 0, i32 0, !dbg !8247
  %93 = load i32* %92, align 8, !dbg !8247
  %94 = zext i32 %93 to i64, !dbg !8247
  %95 = icmp slt i64 %90, %94, !dbg !8247
  br i1 %95, label %bb30, label %bb32, !dbg !8247

bb30:                                             ; preds = %bb29
  %96 = trunc i64 %90 to i32, !dbg !8248
  %97 = sub i32 %93, %96, !dbg !8248
  br label %bb32, !dbg !8248

bb32:                                             ; preds = %bb30, %bb29
  %storemerge = phi i32 [ %97, %bb30 ], [ 0, %bb29 ]
  store i32 %storemerge, i32* %84, align 4
  br label %bb49, !dbg !8249

bb33:                                             ; preds = %bb28
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !8250
  store i32 25, i32* %98, align 4, !dbg !8250
  br label %bb49, !dbg !8251

bb34:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str13291, i64 0, i64 0)) nounwind, !dbg !8252
  %99 = call i32* @__errno_location() nounwind readnone, !dbg !8253
  store i32 22, i32* %99, align 4, !dbg !8253
  br label %bb49, !dbg !8254

bb35:                                             ; preds = %bb9
  %100 = getelementptr inbounds i8* %21, i64 16
  %101 = bitcast i8* %100 to i32*, !dbg !8255
  store i32 0, i32* %101, align 8, !dbg !8255
  br label %bb49, !dbg !8256

bb36:                                             ; preds = %bb9
  %102 = getelementptr inbounds i8* %21, i64 18
  %103 = call i8* @memset(i8* %102, i32 221, i64 14)
  br label %bb49, !dbg !8257

bb38:                                             ; preds = %bb9
  %104 = getelementptr inbounds i8* %21, i64 16
  %105 = bitcast i8* %104 to i16*, !dbg !8258
  %106 = load i16* %105, align 8, !dbg !8258
  %107 = zext i16 %106 to i32, !dbg !8258
  switch i32 %107, label %bb40 [
    i32 2, label %bb41
    i32 10, label %bb43
  ], !dbg !8258

bb40:                                             ; preds = %bb38
  store i16 2, i16* %105, align 8, !dbg !8259
  br label %bb41, !dbg !8259

bb41:                                             ; preds = %bb40, %bb38
  %108 = getelementptr inbounds i8* %21, i64 20
  %109 = bitcast i8* %108 to i32*
  store i32 -572662307, i32* %109, align 4
  br label %bb49, !dbg !8260

bb43:                                             ; preds = %bb38
  %110 = getelementptr inbounds i8* %21, i64 24
  %111 = call i8* @memset(i8* %110, i32 221, i64 16)
  br label %bb49, !dbg !8261

bb45:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2280, i64 0, i64 0)) nounwind, !dbg !8262
  %112 = call i32* @__errno_location() nounwind readnone, !dbg !8263
  store i32 22, i32* %112, align 4, !dbg !8263
  br label %bb49, !dbg !8264

bb46:                                             ; preds = %bb6
  %113 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8265
  %114 = load i32* %113, align 8, !dbg !8265
  %115 = call i64 (i64, ...)* @syscall(i64 16, i32 %114, i64 %request, i8* %21) nounwind, !dbg !8265
  %116 = trunc i64 %115 to i32, !dbg !8265
  %117 = icmp eq i32 %116, -1, !dbg !8266
  br i1 %117, label %bb47, label %bb49, !dbg !8266

bb47:                                             ; preds = %bb46
  %118 = call i32* @__errno_location() nounwind readnone, !dbg !8267
  %119 = call i32 @klee_get_errno() nounwind, !dbg !8267
  store i32 %119, i32* %118, align 4, !dbg !8267
  br label %bb49, !dbg !8267

bb49:                                             ; preds = %bb47, %bb46, %bb45, %bb43, %bb41, %bb36, %bb35, %bb34, %bb33, %bb32, %bb27, %bb26, %bb24, %bb22, %bb21, %bb19, %bb18, %bb16, %bb15, %bb13, %bb12, %bb11, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb45 ], [ -1, %bb34 ], [ 0, %bb35 ], [ 0, %bb36 ], [ 0, %bb41 ], [ 0, %bb43 ], [ 0, %bb32 ], [ -1, %bb33 ], [ -1, %bb26 ], [ -1, %bb27 ], [ -1, %bb24 ], [ -1, %bb21 ], [ -1, %bb18 ], [ -1, %bb15 ], [ 0, %bb11 ], [ -1, 
  ret i32 %.0, !dbg !8184
}

declare void @klee_warning_once(i8*)

define void @__undo_get_new_fd(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = bitcast %struct.exe_file_t* %f to i8*, !dbg !8268
  %1 = call i8* @memset(i8* %0, i32 0, i64 56)
  ret void, !dbg !8270
}

define i32 @__get_new_fd(%struct.exe_file_t** nocapture %pf) nounwind {
entry:
  br label %bb2, !dbg !8271

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !8272
  %1 = and i32 %0, 1, !dbg !8272
  %2 = icmp eq i32 %1, 0, !dbg !8272
  br i1 %2, label %bb5, label %bb1, !dbg !8272

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !8271

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !8271
  br i1 %3, label %bb, label %bb3, !dbg !8271

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !8273
  br i1 %4, label %bb4, label %bb5, !dbg !8273

bb4:                                              ; preds = %bb3
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8274
  store i32 23, i32* %5, align 4, !dbg !8274
  br label %bb6, !dbg !8275

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !8276
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !8276
  store %struct.exe_file_t* %7, %struct.exe_file_t** %pf, align 8, !dbg !8276
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8277
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = load %struct.exe_file_t** %pf, align 8, !dbg !8278
  %11 = getelementptr inbounds %struct.exe_file_t* %10, i64 0, i32 0, !dbg !8278
  store i32 -1, i32* %11, align 8, !dbg !8278
  %12 = load %struct.exe_file_t** %pf, align 8, !dbg !8279
  %13 = getelementptr inbounds %struct.exe_file_t* %12, i64 0, i32 1, !dbg !8279
  store i32 1, i32* %13, align 4, !dbg !8279
  br label %bb6, !dbg !8280

bb6:                                              ; preds = %bb5, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ %fd.0, %bb5 ]
  ret i32 %.0, !dbg !8275
}

define i32 @select(i32 %nfds, %struct.__sigset_t* %read, %struct.__sigset_t* %write, %struct.__sigset_t* %except, %struct.timespec* nocapture %timeout) nounwind {
entry:
  %in_read = alloca %struct.__sigset_t, align 8
  %in_write = alloca %struct.__sigset_t, align 8
  %in_except = alloca %struct.__sigset_t, align 8
  %os_read = alloca %struct.__sigset_t, align 8
  %os_write = alloca %struct.__sigset_t, align 8
  %os_except = alloca %struct.__sigset_t, align 8
  %tv = alloca %struct.timespec, align 8
  %0 = icmp eq %struct.__sigset_t* %read, null, !dbg !8281
  %in_read3 = bitcast %struct.__sigset_t* %in_read to i8*, !dbg !8282
  br i1 %0, label %bb2, label %bb, !dbg !8281

bb:                                               ; preds = %entry
  %1 = bitcast %struct.__sigset_t* %read to i8*, !dbg !8283
  %2 = call i8* @memcpy(i8* %in_read3, i8* %1, i64 128)
  %3 = call i8* @memset(i8* %1, i32 0, i64 128)
  br label %bb4, !dbg !8284

bb2:                                              ; preds = %entry
  %4 = call i8* @memset(i8* %in_read3, i32 0, i64 128)
  br label %bb4, !dbg !8282

bb4:                                              ; preds = %bb2, %bb
  %5 = icmp eq %struct.__sigset_t* %write, null, !dbg !8285
  %in_write8 = bitcast %struct.__sigset_t* %in_write to i8*, !dbg !8286
  br i1 %5, label %bb7, label %bb5, !dbg !8285

bb5:                                              ; preds = %bb4
  %6 = bitcast %struct.__sigset_t* %write to i8*, !dbg !8287
  %7 = call i8* @memcpy(i8* %in_write8, i8* %6, i64 128)
  %8 = call i8* @memset(i8* %6, i32 0, i64 128)
  br label %bb9, !dbg !8288

bb7:                                              ; preds = %bb4
  %9 = call i8* @memset(i8* %in_write8, i32 0, i64 128)
  br label %bb9, !dbg !8286

bb9:                                              ; preds = %bb7, %bb5
  %10 = icmp eq %struct.__sigset_t* %except, null, !dbg !8289
  %in_except13 = bitcast %struct.__sigset_t* %in_except to i8*, !dbg !8290
  br i1 %10, label %bb12, label %bb10, !dbg !8289

bb10:                                             ; preds = %bb9
  %11 = bitcast %struct.__sigset_t* %except to i8*, !dbg !8291
  %12 = call i8* @memcpy(i8* %in_except13, i8* %11, i64 128)
  %13 = call i8* @memset(i8* %11, i32 0, i64 128)
  br label %bb14, !dbg !8292

bb12:                                             ; preds = %bb9
  %14 = call i8* @memset(i8* %in_except13, i32 0, i64 128)
  br label %bb14, !dbg !8290

bb14:                                             ; preds = %bb12, %bb10
  %os_read15 = bitcast %struct.__sigset_t* %os_read to i8*, !dbg !8293
  %15 = call i8* @memset(i8* %os_read15, i32 0, i64 128)
  %os_write16 = bitcast %struct.__sigset_t* %os_write to i8*, !dbg !8294
  %16 = call i8* @memset(i8* %os_write16, i32 0, i64 128)
  %os_except17 = bitcast %struct.__sigset_t* %os_except to i8*, !dbg !8295
  %17 = call i8* @memset(i8* %os_except17, i32 0, i64 128)
  br label %bb47, !dbg !8296

bb18:                                             ; preds = %bb47
  %int_cast_to_i64 = zext i32 64 to i64
  %18 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %19 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %19, label %bb.i20, label %klee_div_zero_check.exit

bb.i20:                                           ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb18
  call void @klee_disable_symbex() nounwind
  %20 = sdiv i32 %i.0, 64, !dbg !8297
  %21 = sext i32 %20 to i64, !dbg !8297
  %22 = getelementptr inbounds %struct.__sigset_t* %in_read, i64 0, i32 0, i64 %21, !dbg !8297
  %23 = load i64* %22, align 8, !dbg !8297
  %24 = and i32 %i.0, 63
  %int_cast_to_i6410 = zext i32 %24 to i64
  %25 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %25, label %klee_overshift_check.exit, label %bb.i39

bb.i39:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %26 = shl i32 1, %24, !dbg !8297
  %27 = sext i32 %26 to i64, !dbg !8297
  %28 = and i64 %23, %27, !dbg !8297
  %29 = icmp eq i64 %28, 0, !dbg !8297
  br i1 %29, label %bb19, label %bb21, !dbg !8297

bb19:                                             ; preds = %klee_overshift_check.exit
  %30 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8297
  %31 = load i64* %30, align 8, !dbg !8297
  %32 = and i64 %31, %27, !dbg !8297
  %33 = icmp eq i64 %32, 0, !dbg !8297
  br i1 %33, label %bb20, label %bb21, !dbg !8297

bb20:                                             ; preds = %bb19
  %34 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8297
  %35 = load i64* %34, align 8, !dbg !8297
  %36 = and i64 %35, %27, !dbg !8297
  %37 = icmp eq i64 %36, 0, !dbg !8297
  br i1 %37, label %bb46, label %bb21, !dbg !8297

bb21:                                             ; preds = %bb20, %bb19, %klee_overshift_check.exit
  %38 = icmp ult i32 %i.0, 32, !dbg !8298
  br i1 %38, label %bb.i, label %bb22, !dbg !8298

bb.i:                                             ; preds = %bb21
  %39 = load i32* %scevgep91, align 4, !dbg !8300
  %40 = and i32 %39, 1
  %toBool.i = icmp eq i32 %40, 0, !dbg !8300
  %41 = icmp eq %struct.exe_file_t* %scevgep89, null, !dbg !8301
  %or.cond = or i1 %toBool.i, %41
  br i1 %or.cond, label %bb22, label %bb23, !dbg !8300

bb22:                                             ; preds = %bb.i, %bb21
  %42 = call i32* @__errno_location() nounwind readnone, !dbg !8302
  store i32 9, i32* %42, align 4, !dbg !8302
  br label %bb68, !dbg !8303

bb23:                                             ; preds = %bb.i
  %43 = load %struct.exe_disk_file_t** %scevgep92, align 8, !dbg !8304
  %44 = icmp eq %struct.exe_disk_file_t* %43, null, !dbg !8304
  br i1 %44, label %bb38, label %bb24, !dbg !8304

bb24:                                             ; preds = %bb23
  br i1 %29, label %bb34, label %bb25, !dbg !8305

bb25:                                             ; preds = %bb24
  %45 = and i32 %39, 16, !dbg !8306
  %46 = icmp eq i32 %45, 0, !dbg !8306
  br i1 %46, label %bb33, label %bb27, !dbg !8306

bb27:                                             ; preds = %bb25
  %47 = and i32 %39, 32, !dbg !8307
  %48 = icmp eq i32 %47, 0, !dbg !8307
  br i1 %48, label %bb29, label %bb28, !dbg !8307

bb28:                                             ; preds = %bb27
  %49 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !8308
  %50 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !8308
  %51 = icmp ult i32 %49, %50, !dbg !8308
  %52 = zext i1 %51 to i32, !dbg !8308
  br label %bb32, !dbg !8308

bb29:                                             ; preds = %bb27
  %53 = and i32 %39, 64, !dbg !8309
  %54 = icmp eq i32 %53, 0, !dbg !8309
  br i1 %54, label %bb33, label %bb30, !dbg !8309

bb30:                                             ; preds = %bb29
  %55 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !8310
  %56 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !8310
  %57 = icmp ult i32 %55, %56, !dbg !8310
  %58 = zext i1 %57 to i32, !dbg !8310
  br label %bb32, !dbg !8310

bb32:                                             ; preds = %bb30, %bb28
  %flags.0 = phi i32 [ %52, %bb28 ], [ %58, %bb30 ]
  %toBool = icmp eq i32 %flags.0, 0, !dbg !8311
  br i1 %toBool, label %bb34, label %bb33, !dbg !8311

bb33:                                             ; preds = %bb32, %bb29, %bb25
  %flags.076 = phi i32 [ %flags.0, %bb32 ], [ 1, %bb25 ], [ 1, %bb29 ]
  %59 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %21, !dbg !8311
  %60 = load i64* %59, align 8, !dbg !8311
  %61 = or i64 %60, %27, !dbg !8311
  store i64 %61, i64* %59, align 8, !dbg !8311
  br label %bb34, !dbg !8311

bb34:                                             ; preds = %bb33, %bb32, %bb24
  %flags.1 = phi i32 [ %flags.076, %bb33 ], [ 0, %bb24 ], [ 0, %bb32 ]
  %62 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8312
  %63 = load i64* %62, align 8, !dbg !8312
  %64 = and i64 %63, %27, !dbg !8312
  %65 = icmp eq i64 %64, 0, !dbg !8312
  br i1 %65, label %bb36, label %bb35, !dbg !8312

bb35:                                             ; preds = %bb34
  %66 = or i32 %flags.1, 2, !dbg !8313
  %67 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %21, !dbg !8313
  %68 = load i64* %67, align 8, !dbg !8313
  %69 = or i64 %68, %27, !dbg !8313
  store i64 %69, i64* %67, align 8, !dbg !8313
  br label %bb36, !dbg !8313

bb36:                                             ; preds = %bb35, %bb34
  %flags.2 = phi i32 [ %66, %bb35 ], [ %flags.1, %bb34 ]
  %not. = icmp ne i32 %flags.2, 0
  %70 = zext i1 %not. to i32
  %count.1. = add i32 %70, %count.1
  br label %bb46

bb38:                                             ; preds = %bb23
  br i1 %29, label %bb40, label %bb39, !dbg !8314

bb39:                                             ; preds = %bb38
  %71 = load i32* %scevgep8990, align 8, !dbg !8314
  %int_cast_to_i641 = zext i32 64 to i64
  %72 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %73 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %73, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %bb39
  call void @klee_disable_symbex() nounwind
  %74 = sdiv i32 %71, 64, !dbg !8314
  %75 = sext i32 %74 to i64, !dbg !8314
  %76 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %75, !dbg !8314
  %77 = load i64* %76, align 8, !dbg !8314
  %78 = and i32 %71, 63
  %int_cast_to_i6411 = zext i32 %78 to i64
  %79 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %79, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_div_zero_check.exit22
  %80 = shl i32 1, %78, !dbg !8314
  %81 = sext i32 %80 to i64, !dbg !8314
  %82 = or i64 %81, %77, !dbg !8314
  store i64 %82, i64* %76, align 8, !dbg !8314
  br label %bb40, !dbg !8314

bb40:                                             ; preds = %klee_overshift_check.exit41, %bb38
  %83 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8315
  %84 = load i64* %83, align 8, !dbg !8315
  %85 = and i64 %84, %27, !dbg !8315
  %86 = icmp eq i64 %85, 0, !dbg !8315
  %.pre.pre = load i32* %scevgep8990, align 8
  br i1 %86, label %bb42, label %bb41, !dbg !8315

bb41:                                             ; preds = %bb40
  %int_cast_to_i642 = zext i32 64 to i64
  %87 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %88 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %88, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %bb41
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %bb41
  call void @klee_disable_symbex() nounwind
  %89 = sdiv i32 %.pre.pre, 64, !dbg !8315
  %90 = sext i32 %89 to i64, !dbg !8315
  %91 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %90, !dbg !8315
  %92 = load i64* %91, align 8, !dbg !8315
  %93 = and i32 %.pre.pre, 63
  %int_cast_to_i6412 = zext i32 %93 to i64
  %94 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %94, label %klee_overshift_check.exit43, label %bb.i42

bb.i42:                                           ; preds = %klee_div_zero_check.exit24
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit43:                      ; preds = %klee_div_zero_check.exit24
  %95 = shl i32 1, %93, !dbg !8315
  %96 = sext i32 %95 to i64, !dbg !8315
  %97 = or i64 %96, %92, !dbg !8315
  store i64 %97, i64* %91, align 8, !dbg !8315
  br label %bb42, !dbg !8315

bb42:                                             ; preds = %klee_overshift_check.exit43, %bb40
  %98 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8316
  %99 = load i64* %98, align 8, !dbg !8316
  %100 = and i64 %99, %27, !dbg !8316
  %101 = icmp eq i64 %100, 0, !dbg !8316
  br i1 %101, label %bb44, label %bb43, !dbg !8316

bb43:                                             ; preds = %bb42
  %int_cast_to_i643 = zext i32 64 to i64
  %102 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %103 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %103, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb43
  call void @klee_disable_symbex() nounwind
  %104 = sdiv i32 %.pre.pre, 64, !dbg !8316
  %105 = sext i32 %104 to i64, !dbg !8316
  %106 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %105, !dbg !8316
  %107 = load i64* %106, align 8, !dbg !8316
  %108 = and i32 %.pre.pre, 63
  %int_cast_to_i6413 = zext i32 %108 to i64
  %109 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %109, label %klee_overshift_check.exit45, label %bb.i44

bb.i44:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit45:                      ; preds = %klee_div_zero_check.exit26
  %110 = shl i32 1, %108, !dbg !8316
  %111 = sext i32 %110 to i64, !dbg !8316
  %112 = or i64 %107, %111, !dbg !8316
  store i64 %112, i64* %106, align 8, !dbg !8316
  br label %bb44, !dbg !8316

bb44:                                             ; preds = %klee_overshift_check.exit45, %bb42
  %113 = add nsw i32 %.pre.pre, 1, !dbg !8317
  %114 = icmp slt i32 %.pre.pre, %os_nfds.1, !dbg !8317
  %os_nfds.1. = select i1 %114, i32 %os_nfds.1, i32 %113
  br label %bb46

bb46:                                             ; preds = %bb44, %bb36, %bb20
  %count.0 = phi i32 [ %count.1, %bb20 ], [ %count.1., %bb36 ], [ %count.1, %bb44 ]
  %os_nfds.0 = phi i32 [ %os_nfds.1, %bb20 ], [ %os_nfds.1, %bb36 ], [ %os_nfds.1., %bb44 ]
  %indvar.next87 = add i64 %indvar86, 1
  br label %bb47, !dbg !8296

bb47:                                             ; preds = %bb46, %bb14
  %indvar86 = phi i64 [ %indvar.next87, %bb46 ], [ 0, %bb14 ]
  %count.1 = phi i32 [ %count.0, %bb46 ], [ 0, %bb14 ]
  %os_nfds.1 = phi i32 [ %os_nfds.0, %bb46 ], [ 0, %bb14 ]
  %scevgep92 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 3
  %scevgep91 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 1
  %scevgep89 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86
  %scevgep8990 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 0
  %i.0 = trunc i64 %indvar86 to i32
  %115 = icmp slt i32 %i.0, %nfds, !dbg !8296
  br i1 %115, label %bb18, label %bb48, !dbg !8296

bb48:                                             ; preds = %bb47
  %116 = icmp sgt i32 %os_nfds.1, 0, !dbg !8318
  br i1 %116, label %bb49, label %bb68, !dbg !8318

bb49:                                             ; preds = %bb48
  %117 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !8319
  store i64 0, i64* %117, align 8, !dbg !8319
  %118 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !8319
  store i64 0, i64* %118, align 8, !dbg !8319
  %119 = call i64 (i64, ...)* @syscall(i64 23, i32 %os_nfds.1, %struct.__sigset_t* %os_read, %struct.__sigset_t* %os_write, %struct.__sigset_t* %os_except, %struct.timespec* %tv) nounwind, !dbg !8320
  %120 = trunc i64 %119 to i32, !dbg !8320
  %121 = icmp eq i32 %120, -1, !dbg !8321
  br i1 %121, label %bb50, label %bb52, !dbg !8321

bb50:                                             ; preds = %bb49
  %122 = icmp eq i32 %count.1, 0, !dbg !8322
  br i1 %122, label %bb51, label %bb68, !dbg !8322

bb51:                                             ; preds = %bb50
  %123 = call i32* @__errno_location() nounwind readnone, !dbg !8323
  %124 = call i32 @klee_get_errno() nounwind, !dbg !8323
  store i32 %124, i32* %123, align 4, !dbg !8323
  br label %bb68, !dbg !8324

bb52:                                             ; preds = %bb49
  %125 = add nsw i32 %120, %count.1, !dbg !8325
  %126 = icmp sgt i32 %nfds, 0, !dbg !8326
  br i1 %126, label %bb53.lr.ph, label %bb68, !dbg !8326

bb53.lr.ph:                                       ; preds = %bb52
  %tmp3 = zext i32 %nfds to i64
  br label %bb53

bb53:                                             ; preds = %bb65, %bb53.lr.ph
  %indvar = phi i64 [ 0, %bb53.lr.ph ], [ %indvar.next, %bb65 ]
  %scevgep82 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 3
  %scevgep81 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %i.177 = trunc i64 %indvar to i32
  %127 = icmp ult i32 %i.177, 32, !dbg !8327
  br i1 %127, label %bb.i71, label %bb65, !dbg !8327

bb.i71:                                           ; preds = %bb53
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar
  %scevgep83 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %128 = load i32* %scevgep83, align 4, !dbg !8329
  %129 = and i32 %128, 1
  %toBool.i70 = icmp eq i32 %129, 0, !dbg !8329
  %130 = icmp eq %struct.exe_file_t* %scevgep, null, !dbg !8330
  %or.cond93 = or i1 %toBool.i70, %130
  br i1 %or.cond93, label %bb65, label %bb55, !dbg !8329

bb55:                                             ; preds = %bb.i71
  %131 = load %struct.exe_disk_file_t** %scevgep82, align 8, !dbg !8330
  %132 = icmp eq %struct.exe_disk_file_t* %131, null, !dbg !8330
  br i1 %132, label %bb56, label %bb65, !dbg !8330

bb56:                                             ; preds = %bb55
  br i1 %0, label %bb59, label %bb57, !dbg !8331

bb57:                                             ; preds = %bb56
  %133 = load i32* %scevgep81, align 8, !dbg !8331
  %int_cast_to_i644 = zext i32 64 to i64
  %134 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %135 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %135, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %bb57
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %bb57
  call void @klee_disable_symbex() nounwind
  %136 = sdiv i32 %133, 64, !dbg !8331
  %137 = sext i32 %136 to i64, !dbg !8331
  %138 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %137, !dbg !8331
  %139 = load i64* %138, align 8, !dbg !8331
  %140 = and i32 %133, 63
  %int_cast_to_i6414 = zext i32 %140 to i64
  %141 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %141, label %klee_overshift_check.exit47, label %bb.i46

bb.i46:                                           ; preds = %klee_div_zero_check.exit28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit47:                      ; preds = %klee_div_zero_check.exit28
  %142 = shl i32 1, %140, !dbg !8331
  %143 = sext i32 %142 to i64, !dbg !8331
  %144 = and i64 %143, %139, !dbg !8331
  %145 = icmp eq i64 %144, 0, !dbg !8331
  br i1 %145, label %bb59, label %bb58, !dbg !8331

bb58:                                             ; preds = %klee_overshift_check.exit47
  %int_cast_to_i645 = zext i32 64 to i64
  %146 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %147 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %147, label %bb.i29, label %klee_div_zero_check.exit30

bb.i29:                                           ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit30:                       ; preds = %bb58
  call void @klee_disable_symbex() nounwind
  %148 = sdiv i32 %i.177, 64, !dbg !8331
  %149 = sext i32 %148 to i64, !dbg !8331
  %150 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %149, !dbg !8331
  %151 = load i64* %150, align 8, !dbg !8331
  %152 = and i32 %i.177, 63
  %int_cast_to_i6415 = zext i32 %152 to i64
  %153 = icmp ult i64 %int_cast_to_i6415, 32
  br i1 %153, label %klee_overshift_check.exit49, label %bb.i48

bb.i48:                                           ; preds = %klee_div_zero_check.exit30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit49:                      ; preds = %klee_div_zero_check.exit30
  %154 = shl i32 1, %152, !dbg !8331
  %155 = sext i32 %154 to i64, !dbg !8331
  %156 = or i64 %151, %155, !dbg !8331
  store i64 %156, i64* %150, align 8, !dbg !8331
  br label %bb59, !dbg !8331

bb59:                                             ; preds = %klee_overshift_check.exit49, %klee_overshift_check.exit47, %bb56
  br i1 %5, label %bb62, label %bb60, !dbg !8332

bb60:                                             ; preds = %bb59
  %157 = load i32* %scevgep81, align 8, !dbg !8332
  %int_cast_to_i646 = zext i32 64 to i64
  %158 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %159 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %159, label %bb.i31, label %klee_div_zero_check.exit32

bb.i31:                                           ; preds = %bb60
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit32:                       ; preds = %bb60
  call void @klee_disable_symbex() nounwind
  %160 = sdiv i32 %157, 64, !dbg !8332
  %161 = sext i32 %160 to i64, !dbg !8332
  %162 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %161, !dbg !8332
  %163 = load i64* %162, align 8, !dbg !8332
  %164 = and i32 %157, 63
  %int_cast_to_i6416 = zext i32 %164 to i64
  %165 = icmp ult i64 %int_cast_to_i6416, 32
  br i1 %165, label %klee_overshift_check.exit51, label %bb.i50

bb.i50:                                           ; preds = %klee_div_zero_check.exit32
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit51:                      ; preds = %klee_div_zero_check.exit32
  %166 = shl i32 1, %164, !dbg !8332
  %167 = sext i32 %166 to i64, !dbg !8332
  %168 = and i64 %167, %163, !dbg !8332
  %169 = icmp eq i64 %168, 0, !dbg !8332
  br i1 %169, label %bb62, label %bb61, !dbg !8332

bb61:                                             ; preds = %klee_overshift_check.exit51
  %int_cast_to_i647 = zext i32 64 to i64
  %170 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %171 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %171, label %bb.i33, label %klee_div_zero_check.exit34

bb.i33:                                           ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit34:                       ; preds = %bb61
  call void @klee_disable_symbex() nounwind
  %172 = sdiv i32 %i.177, 64, !dbg !8332
  %173 = sext i32 %172 to i64, !dbg !8332
  %174 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %173, !dbg !8332
  %175 = load i64* %174, align 8, !dbg !8332
  %176 = and i32 %i.177, 63
  %int_cast_to_i6417 = zext i32 %176 to i64
  %177 = icmp ult i64 %int_cast_to_i6417, 32
  br i1 %177, label %klee_overshift_check.exit53, label %bb.i52

bb.i52:                                           ; preds = %klee_div_zero_check.exit34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit53:                      ; preds = %klee_div_zero_check.exit34
  %178 = shl i32 1, %176, !dbg !8332
  %179 = sext i32 %178 to i64, !dbg !8332
  %180 = or i64 %175, %179, !dbg !8332
  store i64 %180, i64* %174, align 8, !dbg !8332
  br label %bb62, !dbg !8332

bb62:                                             ; preds = %klee_overshift_check.exit53, %klee_overshift_check.exit51, %bb59
  br i1 %10, label %bb65, label %bb63, !dbg !8333

bb63:                                             ; preds = %bb62
  %181 = load i32* %scevgep81, align 8, !dbg !8333
  %int_cast_to_i648 = zext i32 64 to i64
  %182 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %183 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %183, label %bb.i35, label %klee_div_zero_check.exit36

bb.i35:                                           ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit36:                       ; preds = %bb63
  call void @klee_disable_symbex() nounwind
  %184 = sdiv i32 %181, 64, !dbg !8333
  %185 = sext i32 %184 to i64, !dbg !8333
  %186 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %185, !dbg !8333
  %187 = load i64* %186, align 8, !dbg !8333
  %188 = and i32 %181, 63
  %int_cast_to_i6418 = zext i32 %188 to i64
  %189 = icmp ult i64 %int_cast_to_i6418, 32
  br i1 %189, label %klee_overshift_check.exit55, label %bb.i54

bb.i54:                                           ; preds = %klee_div_zero_check.exit36
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit55:                      ; preds = %klee_div_zero_check.exit36
  %190 = shl i32 1, %188, !dbg !8333
  %191 = sext i32 %190 to i64, !dbg !8333
  %192 = and i64 %191, %187, !dbg !8333
  %193 = icmp eq i64 %192, 0, !dbg !8333
  br i1 %193, label %bb65, label %bb64, !dbg !8333

bb64:                                             ; preds = %klee_overshift_check.exit55
  %int_cast_to_i649 = zext i32 64 to i64
  %194 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %195 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %195, label %bb.i37, label %klee_div_zero_check.exit38

bb.i37:                                           ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit38:                       ; preds = %bb64
  call void @klee_disable_symbex() nounwind
  %196 = sdiv i32 %i.177, 64, !dbg !8333
  %197 = sext i32 %196 to i64, !dbg !8333
  %198 = getelementptr inbounds %struct.__sigset_t* %except, i64 0, i32 0, i64 %197, !dbg !8333
  %199 = load i64* %198, align 8, !dbg !8333
  %200 = and i32 %i.177, 63
  %int_cast_to_i6419 = zext i32 %200 to i64
  %201 = icmp ult i64 %int_cast_to_i6419, 32
  br i1 %201, label %klee_overshift_check.exit57, label %bb.i56

bb.i56:                                           ; preds = %klee_div_zero_check.exit38
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit57:                      ; preds = %klee_div_zero_check.exit38
  %202 = shl i32 1, %200, !dbg !8333
  %203 = sext i32 %202 to i64, !dbg !8333
  %204 = or i64 %199, %203, !dbg !8333
  store i64 %204, i64* %198, align 8, !dbg !8333
  br label %bb65, !dbg !8333

bb65:                                             ; preds = %klee_overshift_check.exit57, %klee_overshift_check.exit55, %bb62, %bb55, %bb.i71, %bb53
  %indvar.next = add i64 %indvar, 1
  %exitcond4 = icmp eq i64 %indvar.next, %tmp3
  br i1 %exitcond4, label %bb68, label %bb53, !dbg !8326

bb68:                                             ; preds = %bb65, %bb52, %bb51, %bb50, %bb48, %bb22
  %.0 = phi i32 [ -1, %bb22 ], [ -1, %bb51 ], [ %count.1, %bb50 ], [ %count.1, %bb48 ], [ %125, %bb52 ], [ %125, %bb65 ]
  ret i32 %.0, !dbg !8303
}

define i32 @close(i32 %fd) nounwind {
entry:
  %0 = load i32* @n_calls.5871, align 4, !dbg !8334
  %1 = add nsw i32 %0, 1, !dbg !8334
  store i32 %1, i32* @n_calls.5871, align 4, !dbg !8334
  %2 = icmp ult i32 %fd, 32, !dbg !8335
  br i1 %2, label %bb.i, label %bb, !dbg !8335

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !8337
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !8338
  %5 = load i32* %4, align 4, !dbg !8338
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !8338
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8338

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !8337
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !8339
  br i1 %8, label %bb, label %bb1, !dbg !8339

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8340
  store i32 9, i32* %9, align 4, !dbg !8340
  br label %bb9, !dbg !8341

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8342
  %11 = icmp eq i32 %10, 0, !dbg !8342
  br i1 %11, label %bb4, label %bb2, !dbg !8342

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 8, !dbg !8342
  %13 = load i32* %12, align 4, !dbg !8342
  %14 = icmp eq i32 %13, %1, !dbg !8342
  br i1 %14, label %bb3, label %bb4, !dbg !8342

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !8343
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8343
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8344
  store i32 5, i32* %16, align 4, !dbg !8344
  br label %bb9, !dbg !8345

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !8346
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !8346
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !8346
  br i1 %19, label %bb5, label %bb8, !dbg !8346

bb5:                                              ; preds = %bb4
  %20 = and i32 %5, 16, !dbg !8346
  %21 = icmp eq i32 %20, 0, !dbg !8346
  br i1 %21, label %bb8, label %bb6, !dbg !8346

bb6:                                              ; preds = %bb5
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !8347
  %23 = load i32* %22, align 8, !dbg !8347
  %24 = tail call i64 (i64, ...)* @syscall(i64 3, i32 %23) nounwind, !dbg !8347
  %25 = trunc i64 %24 to i32, !dbg !8347
  br label %bb8, !dbg !8347

bb8:                                              ; preds = %bb6, %bb5, %bb4
  %r.0 = phi i32 [ %25, %bb6 ], [ 0, %bb4 ], [ 0, %bb5 ]
  %26 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8348
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  br label %bb9, !dbg !8349

bb9:                                              ; preds = %bb8, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ %r.0, %bb8 ]
  ret i32 %.0, !dbg !8341
}

define i32 @dup2(i32 %oldfd, i32 %newfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8350
  br i1 %0, label %bb.i, label %bb, !dbg !8350

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8352
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8353
  %3 = load i32* %2, align 4, !dbg !8353
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8353
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8353

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8352
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8354
  %7 = icmp ugt i32 %newfd, 31, !dbg !8354
  %8 = or i1 %6, %7, !dbg !8354
  br i1 %8, label %bb, label %bb10, !dbg !8354

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8355
  store i32 9, i32* %9, align 4, !dbg !8355
  br label %bb17, !dbg !8356

bb4:                                              ; preds = %bb10
  %scevgep1920 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %10 = load i32* %scevgep1920, align 8, !dbg !8357
  %11 = icmp eq i32 %10, %newfd, !dbg !8357
  br i1 %11, label %bb11, label %bb6, !dbg !8357

bb6:                                              ; preds = %bb4
  %12 = icmp eq i32 %idx.1, -1, !dbg !8358
  br i1 %12, label %bb7, label %bb9, !dbg !8358

bb7:                                              ; preds = %bb6
  %13 = load i32* %scevgep, align 4, !dbg !8358
  %14 = and i32 %13, 1, !dbg !8358
  %15 = icmp eq i32 %14, 0, !dbg !8358
  br i1 %15, label %bb8, label %bb9, !dbg !8358

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !8359

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %idx.0 = phi i32 [ %i.0, %bb8 ], [ -1, %bb7 ], [ %idx.1, %bb6 ]
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !8360

bb10:                                             ; preds = %bb9, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %__get_file.exit ]
  %idx.1 = phi i32 [ %idx.0, %bb9 ], [ -1, %__get_file.exit ]
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %i.0 = trunc i64 %indvar to i32
  %16 = icmp slt i32 %i.0, 32, !dbg !8360
  br i1 %16, label %bb4, label %bb11, !dbg !8360

bb11:                                             ; preds = %bb10, %bb4
  %idx.2 = phi i32 [ %idx.1, %bb10 ], [ %i.0, %bb4 ]
  %17 = icmp eq i32 %idx.2, -1, !dbg !8361
  br i1 %17, label %bb12, label %bb13, !dbg !8361

bb12:                                             ; preds = %bb11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8362
  store i32 24, i32* %18, align 4, !dbg !8362
  br label %bb17, !dbg !8363

bb13:                                             ; preds = %bb11
  %19 = sext i32 %idx.2 to i64, !dbg !8364
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, !dbg !8364
  %21 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, i32 1, !dbg !8365
  %22 = load i32* %21, align 4, !dbg !8365
  %23 = and i32 %22, 1
  %toBool14 = icmp eq i32 %23, 0, !dbg !8365
  br i1 %toBool14, label %bb16, label %bb15, !dbg !8365

bb15:                                             ; preds = %bb13
  %24 = tail call i32 @close(i32 %newfd) nounwind, !dbg !8365
  br label %bb16, !dbg !8365

bb16:                                             ; preds = %bb15, %bb13
  %25 = bitcast %struct.exe_file_t* %20 to i8*, !dbg !8366
  %26 = bitcast %struct.exe_file_t* %5 to i8*, !dbg !8366
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 56)
  %28 = load i32* %21, align 4, !dbg !8367
  %29 = and i32 %28, -3, !dbg !8367
  store i32 %29, i32* %21, align 4, !dbg !8367
  br label %bb17, !dbg !8368

bb17:                                             ; preds = %bb16, %bb12, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb12 ], [ %newfd, %bb16 ]
  ret i32 %.0, !dbg !8356
}

define i32 @dup(i32 %oldfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8369
  br i1 %0, label %bb.i, label %bb, !dbg !8369

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8371
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8372
  %3 = load i32* %2, align 4, !dbg !8372
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8372
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8372

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8371
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8373
  br i1 %6, label %bb, label %bb4, !dbg !8373

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8374
  store i32 9, i32* %7, align 4, !dbg !8374
  br label %bb8, !dbg !8375

bb2:                                              ; preds = %bb4
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %8 = load i32* %scevgep, align 4, !dbg !8376
  %9 = and i32 %8, 1, !dbg !8376
  %10 = icmp eq i32 %9, 0, !dbg !8376
  br i1 %10, label %bb7, label %bb3, !dbg !8376

bb3:                                              ; preds = %bb2
  %indvar.next = add i64 %indvar, 1
  br label %bb4, !dbg !8377

bb4:                                              ; preds = %bb3, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb3 ], [ 0, %__get_file.exit ]
  %fd.0 = trunc i64 %indvar to i32
  %11 = icmp slt i32 %fd.0, 32, !dbg !8377
  br i1 %11, label %bb2, label %bb5, !dbg !8377

bb5:                                              ; preds = %bb4
  %12 = icmp eq i32 %fd.0, 32, !dbg !8378
  br i1 %12, label %bb6, label %bb7, !dbg !8378

bb6:                                              ; preds = %bb5
  %13 = tail call i32* @__errno_location() nounwind readnone, !dbg !8379
  store i32 24, i32* %13, align 4, !dbg !8379
  br label %bb8, !dbg !8380

bb7:                                              ; preds = %bb5, %bb2
  %14 = tail call i32 @dup2(i32 %oldfd, i32 %fd.0) nounwind, !dbg !8381
  br label %bb8, !dbg !8381

bb8:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb6 ], [ %14, %bb7 ]
  ret i32 %.0, !dbg !8375
}

define i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %count) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8382
  br i1 %0, label %bb.i, label %bb, !dbg !8382

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8384
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8385
  %3 = load i32* %2, align 4, !dbg !8385
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8385
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8385

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8384
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8386
  br i1 %6, label %bb, label %bb1, !dbg !8386

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8387
  store i32 9, i32* %7, align 4, !dbg !8387
  br label %bb19, !dbg !8388

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8389
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8389
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8389
  br i1 %10, label %bb3, label %bb2, !dbg !8389

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str14292, i64 0, i64 0)) nounwind, !dbg !8390
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8391
  store i32 22, i32* %11, align 4, !dbg !8391
  br label %bb19, !dbg !8392

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8393
  %13 = load i64* %12, align 8, !dbg !8393
  %14 = icmp ult i64 %13, 4096, !dbg !8393
  br i1 %14, label %bb4, label %bb11, !dbg !8393

bb4:                                              ; preds = %bb3
  %int_cast_to_i64 = bitcast i64 280 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i2, label %klee_div_zero_check.exit

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 %13, 280, !dbg !8394
  %18 = mul i64 %17, 280, !dbg !8395
  %19 = icmp eq i64 %18, %13, !dbg !8395
  br i1 %19, label %bb5, label %bb6, !dbg !8395

bb5:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8395
  %21 = zext i32 %20 to i64, !dbg !8395
  %22 = icmp ult i64 %21, %17, !dbg !8395
  br i1 %22, label %bb6, label %bb8.preheader, !dbg !8395

bb8.preheader:                                    ; preds = %bb5
  %23 = icmp ugt i64 %21, %17, !dbg !8396
  br i1 %23, label %bb7.lr.ph, label %bb9, !dbg !8396

bb7.lr.ph:                                        ; preds = %bb8.preheader
  %tmp1 = add i64 %17, 1
  %tmp5 = add i64 %18, 280
  %tmp8 = add i64 %17, 65
  br label %bb7

bb6:                                              ; preds = %bb5, %klee_div_zero_check.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !8397
  store i32 22, i32* %24, align 4, !dbg !8397
  br label %bb19, !dbg !8398

bb7:                                              ; preds = %klee_overshift_check.exit, %bb7.lr.ph
  %indvar = phi i64 [ 0, %bb7.lr.ph ], [ %38, %klee_overshift_check.exit ]
  %tmp51 = add i64 %tmp1, %indvar
  %tmp3 = mul i64 %indvar, 280
  %tmp49 = add i64 %tmp5, %tmp3
  %tmp7 = add i64 %17, %indvar
  %tmp9 = add i64 %tmp8, %indvar
  %tmp42 = trunc i64 %tmp9 to i8
  %scevgep36 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 1
  %scevgep35 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 0
  %scevgep32 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 1
  %scevgep31 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 3
  %scevgep30 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 2
  %scevgep29 = getelementptr inbounds %struct.dirent* %dirp, i64 %indvar, i32 0
  %25 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !8399
  %scevgep = getelementptr %struct.exe_disk_file_t* %25, i64 %tmp7, i32 3
  %26 = load %struct.stat** %scevgep, align 8, !dbg !8400
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 1, !dbg !8400
  %28 = load i64* %27, align 8, !dbg !8400
  store i64 %28, i64* %scevgep29, align 8, !dbg !8400
  store i16 280, i16* %scevgep30, align 8, !dbg !8401
  %29 = load %struct.stat** %scevgep, align 8, !dbg !8402
  %30 = getelementptr inbounds %struct.stat* %29, i64 0, i32 3, !dbg !8402
  %31 = load i32* %30, align 8, !dbg !8402
  %int_cast_to_i641 = zext i32 12 to i64
  %32 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %32, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb7
  %33 = lshr i32 %31, 12
  %.tr = trunc i32 %33 to i8
  %34 = and i8 %.tr, 15, !dbg !8402
  store i8 %34, i8* %scevgep31, align 2, !dbg !8402
  store i8 %tmp42, i8* %scevgep35, align 1, !dbg !8403
  store i8 0, i8* %scevgep36, align 1, !dbg !8404
  store i64 %tmp49, i64* %scevgep32, align 8, !dbg !8405
  %35 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8396
  %36 = zext i32 %35 to i64, !dbg !8396
  %37 = icmp sgt i64 %36, %tmp51, !dbg !8396
  %38 = add i64 %indvar, 1
  br i1 %37, label %bb7, label %bb8.bb9_crit_edge, !dbg !8396

bb8.bb9_crit_edge:                                ; preds = %klee_overshift_check.exit
  %tmp18 = add i64 %tmp3, 280
  %scevgep34 = getelementptr %struct.dirent* %dirp, i64 %38
  br label %bb9

bb9:                                              ; preds = %bb8.bb9_crit_edge, %bb8.preheader
  %dirp_addr.0.lcssa = phi %struct.dirent* [ %scevgep34, %bb8.bb9_crit_edge ], [ %dirp, %bb8.preheader ]
  %bytes.0.lcssa = phi i64 [ %tmp18, %bb8.bb9_crit_edge ], [ 0, %bb8.preheader ]
  %39 = icmp ugt i32 %count, 4096, !dbg !8406
  %40 = zext i32 %count to i64
  %41 = select i1 %39, i64 4096, i64 %40, !dbg !8406
  %42 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 0, !dbg !8407
  store i64 0, i64* %42, align 8, !dbg !8407
  %43 = trunc i64 %41 to i16, !dbg !8408
  %44 = trunc i64 %bytes.0.lcssa to i16, !dbg !8408
  %45 = sub i16 %43, %44, !dbg !8408
  %46 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 2, !dbg !8408
  store i16 %45, i16* %46, align 8, !dbg !8408
  %47 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 3, !dbg !8409
  store i8 0, i8* %47, align 2, !dbg !8409
  %48 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 4, i64 0, !dbg !8410
  store i8 0, i8* %48, align 1, !dbg !8410
  %49 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 1, !dbg !8411
  store i64 4096, i64* %49, align 8, !dbg !8411
  %50 = zext i16 %45 to i64, !dbg !8412
  %51 = add nsw i64 %50, %bytes.0.lcssa, !dbg !8412
  store i64 %41, i64* %12, align 8, !dbg !8413
  %52 = trunc i64 %51 to i32, !dbg !8414
  br label %bb19, !dbg !8414

bb11:                                             ; preds = %bb3
  %53 = trunc i64 %13 to i32, !dbg !8415
  %54 = add i32 %53, -4096, !dbg !8415
  %55 = zext i32 %count to i64, !dbg !8416
  %56 = bitcast %struct.dirent* %dirp to i8*, !dbg !8416
  %57 = call i8* @memset(i8* %56, i32 0, i64 %55)
  %58 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8417
  %59 = load i32* %58, align 8, !dbg !8417
  %60 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %59, i32 %54, i32 0) nounwind, !dbg !8417
  %61 = trunc i64 %60 to i32, !dbg !8417
  %62 = icmp eq i32 %61, -1, !dbg !8418
  br i1 %62, label %bb12, label %bb13, !dbg !8418

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str15293, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 1436, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.6593, i64 0, i64 0)) 
  unreachable, !dbg !8418

bb13:                                             ; preds = %bb11
  %63 = load i32* %58, align 8, !dbg !8419
  %64 = tail call i64 (i64, ...)* @syscall(i64 217, i32 %63, %struct.dirent* %dirp, i32 %count) nounwind, !dbg !8419
  %65 = trunc i64 %64 to i32, !dbg !8419
  %66 = icmp eq i32 %65, -1, !dbg !8420
  br i1 %66, label %bb14, label %bb15, !dbg !8420

bb14:                                             ; preds = %bb13
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !8421
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !8421
  store i32 %68, i32* %67, align 4, !dbg !8421
  br label %bb19, !dbg !8421

bb15:                                             ; preds = %bb13
  %69 = load i32* %58, align 8, !dbg !8422
  %70 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %69, i32 0, i32 1) nounwind, !dbg !8422
  %71 = add nsw i64 %70, 4096, !dbg !8422
  store i64 %71, i64* %12, align 8, !dbg !8422
  %72 = icmp sgt i32 %65, 0, !dbg !8423
  br i1 %72, label %bb16, label %bb19, !dbg !8423

bb16:                                             ; preds = %bb16, %bb15
  %pos.023 = phi i32 [ %82, %bb16 ], [ 0, %bb15 ]
  %73 = sext i32 %pos.023 to i64, !dbg !8424
  %.sum = add i64 %73, 8
  %74 = getelementptr inbounds i8* %56, i64 %.sum
  %75 = bitcast i8* %74 to i64*, !dbg !8425
  %76 = load i64* %75, align 8, !dbg !8425
  %77 = add nsw i64 %76, 4096, !dbg !8425
  store i64 %77, i64* %75, align 8, !dbg !8425
  %.sum22 = add i64 %73, 16
  %78 = getelementptr inbounds i8* %56, i64 %.sum22
  %79 = bitcast i8* %78 to i16*, !dbg !8426
  %80 = load i16* %79, align 8, !dbg !8426
  %81 = zext i16 %80 to i32, !dbg !8426
  %82 = add nsw i32 %81, %pos.023, !dbg !8426
  %83 = icmp slt i32 %82, %65, !dbg !8423
  br i1 %83, label %bb16, label %bb19, !dbg !8423

bb19:                                             ; preds = %bb16, %bb15, %bb14, %bb9, %bb6, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb6 ], [ %52, %bb9 ], [ -1, %bb14 ], [ %65, %bb15 ], [ %65, %bb16 ]
  ret i32 %.0, !dbg !8388
}

define i64 @__fd_gather_write(%struct.exe_file_t* nocapture %f, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !8427
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8427
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !8427
  br i1 %2, label %bb16, label %bb14.preheader, !dbg !8427

bb14.preheader:                                   ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !8428
  %tmp4 = zext i32 %iovcnt to i64
  br label %bb14

bb:                                               ; preds = %bb14
  %4 = load i64* %scevgep28, align 8, !dbg !8429
  %5 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8430
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 4, !dbg !8430
  %7 = load %struct.exe_sockaddr_t** %6, align 8, !dbg !8430
  %8 = icmp eq %struct.exe_sockaddr_t* %7, null, !dbg !8430
  br i1 %8, label %bb2, label %bb1, !dbg !8430

bb1:                                              ; preds = %bb
  %9 = load i8** %scevgep27, align 8, !dbg !8431
  tail call void @klee_check_memory_access(i8* %9, i64 %4) nounwind, !dbg !8431
  br label %skip, !dbg !8431

bb2:                                              ; preds = %bb
  %10 = load i64* %3, align 8, !dbg !8428
  %11 = add i64 %10, %4, !dbg !8428
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 0, !dbg !8428
  %13 = load i32* %12, align 8, !dbg !8428
  %14 = zext i32 %13 to i64, !dbg !8428
  %15 = icmp ugt i64 %11, %14, !dbg !8428
  br i1 %15, label %bb3, label %bb8, !dbg !8428

bb3:                                              ; preds = %bb2
  %16 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !8432
  %17 = icmp eq i32 %16, 0, !dbg !8432
  br i1 %17, label %bb5, label %bb4, !dbg !8432

bb4:                                              ; preds = %bb3
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17295, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 2246, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7291, i64 0, i64 0)) n
  unreachable, !dbg !8433

bb5:                                              ; preds = %bb3
  %18 = icmp slt i64 %10, %14, !dbg !8434
  br i1 %18, label %bb6, label %bb10, !dbg !8434

bb6:                                              ; preds = %bb5
  %19 = sub nsw i64 %14, %10, !dbg !8435
  br label %bb8, !dbg !8435

bb8:                                              ; preds = %bb6, %bb2
  %this_len.0 = phi i64 [ %19, %bb6 ], [ %4, %bb2 ]
  %20 = icmp eq i64 %this_len.0, 0, !dbg !8436
  br i1 %20, label %bb10, label %bb9, !dbg !8436

bb9:                                              ; preds = %bb8
  %21 = load i8** %scevgep27, align 8, !dbg !8437
  %22 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 1, !dbg !8437
  %23 = load i8** %22, align 8, !dbg !8437
  %24 = getelementptr inbounds i8* %23, i64 %10, !dbg !8437
  %25 = call i8* @memcpy(i8* %24, i8* %21, i64 %this_len.0)
  %.pre = load i64* %scevgep28, align 8
  br label %bb10, !dbg !8437

bb10:                                             ; preds = %bb9, %bb8, %bb5
  %26 = phi i64 [ %4, %bb8 ], [ %.pre, %bb9 ], [ %4, %bb5 ]
  %this_len.021 = phi i64 [ 0, %bb8 ], [ %this_len.0, %bb9 ], [ 0, %bb5 ]
  %27 = icmp eq i64 %26, %this_len.021, !dbg !8438
  br i1 %27, label %bb12, label %bb11, !dbg !8438

bb11:                                             ; preds = %bb10
  tail call void @klee_warning_once(i8* getelementptr inbounds ([23 x i8]* @.str18296, i64 0, i64 0)) nounwind, !dbg !8439
  br label %bb12, !dbg !8439

bb12:                                             ; preds = %bb11, %bb10
  %28 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8440
  %29 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !8440
  %30 = icmp eq %struct.exe_disk_file_t* %28, %29, !dbg !8440
  br i1 %30, label %bb13, label %skip, !dbg !8440

bb13:                                             ; preds = %bb12
  %31 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8441
  %32 = trunc i64 %this_len.021 to i32, !dbg !8441
  %33 = add i32 %31, %32, !dbg !8441
  store i32 %33, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8441
  br label %skip, !dbg !8442

skip:                                             ; preds = %bb13, %bb12, %bb1
  %34 = load i64* %scevgep28, align 8, !dbg !8443
  %35 = add i64 %34, %total.0, !dbg !8443
  %36 = load i64* %3, align 8, !dbg !8444
  %37 = add i64 %36, %34, !dbg !8444
  store i64 %37, i64* %3, align 8, !dbg !8444
  %indvar.next = add i64 %indvar, 1
  br label %bb14, !dbg !8445

bb14:                                             ; preds = %skip, %bb14.preheader
  %indvar = phi i64 [ 0, %bb14.preheader ], [ %indvar.next, %skip ]
  %total.0 = phi i64 [ 0, %bb14.preheader ], [ %35, %skip ]
  %scevgep28 = getelementptr %struct.iovec* %iov, i64 %indvar, i32 1
  %scevgep27 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar, i32 0
  %tmp5 = sub i64 %tmp4, %indvar
  %iovcnt_addr.0 = trunc i64 %tmp5 to i32
  %38 = icmp sgt i32 %iovcnt_addr.0, 0, !dbg !8445
  br i1 %38, label %bb, label %bb19, !dbg !8445

bb16:                                             ; preds = %entry
  %39 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !8446
  %40 = load i32* %39, align 8, !dbg !8446
  %41 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %40, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !8446
  %42 = trunc i64 %41 to i32, !dbg !8446
  %43 = icmp slt i32 %42, 0, !dbg !8447
  br i1 %43, label %bb17, label %bb18, !dbg !8447

bb17:                                             ; preds = %bb16
  %44 = tail call i32* @__errno_location() nounwind readnone, !dbg !8448
  %45 = tail call i32 @klee_get_errno() nounwind, !dbg !8448
  store i32 %45, i32* %44, align 4, !dbg !8448
  br label %bb18, !dbg !8448

bb18:                                             ; preds = %bb17, %bb16
  %46 = sext i32 %42 to i64, !dbg !8449
  br label %bb19, !dbg !8449

bb19:                                             ; preds = %bb18, %bb14
  %.0 = phi i64 [ %46, %bb18 ], [ %total.0, %bb14 ]
  ret i64 %.0, !dbg !8450
}

declare void @klee_check_memory_access(i8*, i64)

define i64 @writev(i32 %fd, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8451
  br i1 %0, label %bb.i, label %bb, !dbg !8451

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8453
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8454
  %3 = load i32* %2, align 4, !dbg !8454
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8454
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8454

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8453
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8455
  br i1 %6, label %bb, label %bb1, !dbg !8455

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8456
  store i32 9, i32* %7, align 4, !dbg !8456
  br label %bb6, !dbg !8457

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8458
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8458
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8458
  br i1 %10, label %bb2, label %bb5, !dbg !8458

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8459
  %12 = load i32* %11, align 8, !dbg !8459
  %13 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %12, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !8459
  %14 = trunc i64 %13 to i32, !dbg !8459
  %15 = icmp eq i32 %14, -1, !dbg !8460
  br i1 %15, label %bb3, label %bb4, !dbg !8460

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8461
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8461
  store i32 %17, i32* %16, align 4, !dbg !8461
  br label %bb6, !dbg !8462

bb4:                                              ; preds = %bb2
  %18 = sext i32 %14 to i64, !dbg !8463
  br label %bb6, !dbg !8463

bb5:                                              ; preds = %bb1
  %19 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %5, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !8464
  br label %bb6, !dbg !8464

bb6:                                              ; preds = %bb5, %bb4, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ %18, %bb4 ], [ %19, %bb5 ]
  ret i64 %.0, !dbg !8457
}

define i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8465
  br i1 %0, label %bb.i, label %bb, !dbg !8465

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8467
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8468
  %3 = load i32* %2, align 4, !dbg !8468
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8468
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8468

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8467
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8469
  br i1 %6, label %bb, label %bb1, !dbg !8469

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8470
  store i32 9, i32* %7, align 4, !dbg !8470
  br label %bb6, !dbg !8471

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8472
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8472
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8472
  br i1 %10, label %bb2, label %bb5, !dbg !8472

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8473
  %12 = load i32* %11, align 8, !dbg !8473
  %13 = tail call i64 (i64, ...)* @syscall(i64 5, i32 %12, %struct.stat* %buf) nounwind, !dbg !8473
  %14 = trunc i64 %13 to i32, !dbg !8473
  %15 = icmp eq i32 %14, -1, !dbg !8474
  br i1 %15, label %bb3, label %bb6, !dbg !8474

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8475
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8475
  store i32 %17, i32* %16, align 4, !dbg !8475
  br label %bb6, !dbg !8475

bb5:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 0, i32 3, !dbg !8476
  %19 = load %struct.stat** %18, align 8, !dbg !8476
  %20 = bitcast %struct.stat* %buf to i8*, !dbg !8476
  %21 = bitcast %struct.stat* %19 to i8*, !dbg !8476
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 144)
  br label %bb6, !dbg !8477

bb6:                                              ; preds = %bb5, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb5 ], [ -1, %bb3 ], [ %14, %bb2 ]
  ret i32 %.0, !dbg !8471
}

define i64 @__fd_scatter_read(%struct.exe_file_t* nocapture %f, %struct.iovec* %iov, i32 %iovcnt) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([57 x i8]* @.str19297, i64 0, i64 0)) nounwind, !dbg !8478
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !8479
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8479
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !8479
  br i1 %2, label %bb9, label %bb, !dbg !8479

bb:                                               ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !8480
  %4 = load i64* %3, align 8, !dbg !8480
  %5 = icmp slt i64 %4, 0, !dbg !8480
  br i1 %5, label %bb1, label %bb2, !dbg !8480

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20298, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 2186, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !8480

bb2:                                              ; preds = %bb
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %1, i64 0, i32 0, !dbg !8481
  %7 = load i32* %6, align 8, !dbg !8481
  %8 = zext i32 %7 to i64, !dbg !8481
  %9 = icmp sge i64 %8, %4, !dbg !8481
  %10 = icmp sgt i32 %iovcnt, 0, !dbg !8482
  %or.cond = and i1 %9, %10
  br i1 %or.cond, label %bb4.lr.ph, label %bb22, !dbg !8481

bb4.lr.ph:                                        ; preds = %bb2
  %tmp2 = zext i32 %iovcnt to i64
  %tmp3 = add i64 %tmp2, -1
  br label %bb4

bb4:                                              ; preds = %bb4.bb4_crit_edge, %bb4.lr.ph
  %11 = phi i32 [ %7, %bb4.lr.ph ], [ %.pre36, %bb4.bb4_crit_edge ]
  %12 = phi %struct.exe_disk_file_t* [ %1, %bb4.lr.ph ], [ %.pre, %bb4.bb4_crit_edge ]
  %13 = phi i64 [ %4, %bb4.lr.ph ], [ %26, %bb4.bb4_crit_edge ]
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4.bb4_crit_edge ]
  %total.025 = phi i64 [ 0, %bb4.lr.ph ], [ %24, %bb4.bb4_crit_edge ]
  %scevgep2930 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar, i32 0
  %scevgep = getelementptr %struct.iovec* %iov, i64 %indvar, i32 1
  %14 = load i64* %scevgep, align 8, !dbg !8483
  %15 = add i64 %14, %13, !dbg !8484
  %16 = zext i32 %11 to i64, !dbg !8484
  %17 = sub nsw i64 %16, %13, !dbg !8485
  %18 = icmp ugt i64 %15, %16, !dbg !8484
  %. = select i1 %18, i64 %17, i64 %14
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 1, !dbg !8486
  %20 = load i8** %19, align 8, !dbg !8486
  %21 = getelementptr inbounds i8* %20, i64 %13, !dbg !8486
  %22 = load i8** %scevgep2930, align 8, !dbg !8486
  %23 = call i8* @memcpy(i8* %22, i8* %21, i64 %.)
  %24 = add i64 %., %total.025, !dbg !8487
  %25 = load i64* %3, align 8, !dbg !8488
  %26 = add i64 %25, %., !dbg !8488
  store i64 %26, i64* %3, align 8, !dbg !8488
  %exitcond4 = icmp eq i64 %indvar, %tmp3
  br i1 %exitcond4, label %bb22, label %bb4.bb4_crit_edge, !dbg !8482

bb4.bb4_crit_edge:                                ; preds = %bb4
  %indvar.next = add i64 %indvar, 1
  %.pre = load %struct.exe_disk_file_t** %0, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %.pre, i64 0, i32 0
  %.pre36 = load i32* %.phi.trans.insert, align 8
  br label %bb4

bb9:                                              ; preds = %entry
  %27 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !8489
  %28 = load i32* %27, align 8, !dbg !8489
  %29 = tail call i64 (i64, ...)* @syscall(i64 19, i32 %28, %struct.iovec* %iov, i32 %iovcnt) nounwind, !dbg !8489
  %30 = icmp slt i64 %29, 0, !dbg !8490
  br i1 %30, label %bb10, label %bb11, !dbg !8490

bb10:                                             ; preds = %bb9
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !8491
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !8491
  store i32 %32, i32* %31, align 4, !dbg !8491
  br label %bb22, !dbg !8491

bb11:                                             ; preds = %bb9
  %33 = tail call i32 @klee_zest_enabled() nounwind, !dbg !8492
  %34 = icmp eq i32 %33, 0, !dbg !8492
  br i1 %34, label %bb22, label %bb20, !dbg !8492

bb14:                                             ; preds = %bb20
  %scevgep35 = getelementptr %struct.iovec* %iov, i64 %indvar31, i32 1
  %35 = load i64* %scevgep35, align 8, !dbg !8493
  %36 = icmp ugt i64 %cb.1, %35, !dbg !8493
  %this_len13.0 = select i1 %36, i64 %35, i64 %cb.1
  %37 = tail call noalias i8* @malloc(i64 %this_len13.0) nounwind, !dbg !8494
  %38 = icmp eq i8* %37, null, !dbg !8495
  br i1 %38, label %bb18, label %bb19, !dbg !8495

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21299, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 2218, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !8496

bb19:                                             ; preds = %bb14
  %39 = sub i64 %cb.1, %35, !dbg !8497
  %.24 = select i1 %36, i64 %39, i64 0
  %40 = load i8** %scevgep3334, align 8, !dbg !8498
  %41 = call i8* @memcpy(i8* %37, i8* %40, i64 %this_len13.0)
  tail call void @klee_make_symbolic(i8* %37, i64 %this_len13.0, i8* getelementptr inbounds ([11 x i8]* @.str22300, i64 0, i64 0)) nounwind, !dbg !8499
  %42 = load i8** %scevgep3334, align 8, !dbg !8500
  %43 = call i8* @memcpy(i8* %42, i8* %37, i64 %this_len13.0)
  tail call void @free(i8* %37) nounwind, !dbg !8501
  %indvar.next32 = add i64 %indvar31, 1
  br label %bb20, !dbg !8502

bb20:                                             ; preds = %bb19, %bb11
  %indvar31 = phi i64 [ %indvar.next32, %bb19 ], [ 0, %bb11 ]
  %cb.1 = phi i64 [ %.24, %bb19 ], [ %29, %bb11 ]
  %scevgep3334 = getelementptr inbounds %struct.iovec* %iov, i64 %indvar31, i32 0
  %44 = icmp eq i64 %cb.1, 0, !dbg !8503
  br i1 %44, label %bb22, label %bb14, !dbg !8503

bb22:                                             ; preds = %bb20, %bb11, %bb10, %bb4, %bb2
  %.0 = phi i64 [ 0, %bb2 ], [ %29, %bb11 ], [ %29, %bb10 ], [ %24, %bb4 ], [ %29, %bb20 ]
  ret i64 %.0, !dbg !8504
}

declare i32 @klee_zest_enabled()

declare void @klee_make_symbolic(i8*, i64, i8*)

define i32 @munmap(i8* nocapture %addr, i64 %length) nounwind {
entry:
  tail call void @free(i8* %addr) nounwind, !dbg !8505
  ret i32 0, !dbg !8507
}

define weak i32 @pipe(i32* %filedes) nounwind {
entry:
  %os_filedes = alloca [2 x i32], align 4
  br label %bb2.i, !dbg !8508

bb.i:                                             ; preds = %bb2.i
  %scevgep.i = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i, i32 1
  %0 = load i32* %scevgep.i, align 4, !dbg !8510
  %1 = and i32 %0, 1, !dbg !8510
  %2 = icmp eq i32 %1, 0, !dbg !8510
  br i1 %2, label %__get_new_fd.exit, label %bb1.i, !dbg !8510

bb1.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb2.i, !dbg !8508

bb2.i:                                            ; preds = %bb1.i, %entry
  %indvar.i = phi i64 [ %indvar.next.i, %bb1.i ], [ 0, %entry ]
  %fd.0.i = trunc i64 %indvar.i to i32
  %3 = icmp slt i32 %fd.0.i, 32, !dbg !8508
  br i1 %3, label %bb.i, label %bb3.i, !dbg !8508

bb3.i:                                            ; preds = %bb2.i
  %4 = icmp eq i32 %fd.0.i, 32, !dbg !8511
  br i1 %4, label %__get_new_fd.exit.thread, label %__get_new_fd.exit, !dbg !8511

__get_new_fd.exit.thread:                         ; preds = %bb3.i
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !8512
  store i32 23, i32* %5, align 4, !dbg !8512
  store i32 -1, i32* %filedes, align 4, !dbg !8509
  br label %bb

__get_new_fd.exit:                                ; preds = %bb3.i, %bb.i
  %6 = sext i32 %fd.0.i to i64, !dbg !8513
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !8513
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8514
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !8515
  store i32 -1, i32* %10, align 8, !dbg !8515
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !8516
  store i32 1, i32* %11, align 4, !dbg !8516
  store i32 %fd.0.i, i32* %filedes, align 4, !dbg !8509
  %12 = icmp slt i32 %fd.0.i, 0, !dbg !8509
  br i1 %12, label %__get_new_fd.exit.bb_crit_edge, label %bb2.i15, !dbg !8509

__get_new_fd.exit.bb_crit_edge:                   ; preds = %__get_new_fd.exit
  %.pre = call i32* @__errno_location() nounwind readnone, !dbg !8517
  br label %bb

bb:                                               ; preds = %__get_new_fd.exit.bb_crit_edge, %__get_new_fd.exit.thread
  %.pre-phi = phi i32* [ %.pre, %__get_new_fd.exit.bb_crit_edge ], [ %5, %__get_new_fd.exit.thread ]
  %13 = call i32 @klee_get_errno() nounwind, !dbg !8517
  store i32 %13, i32* %.pre-phi, align 4, !dbg !8517
  %14 = load i32* %filedes, align 4, !dbg !8518
  br label %bb7, !dbg !8518

bb.i10:                                           ; preds = %bb2.i15
  %scevgep.i9 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i13, i32 1
  %15 = load i32* %scevgep.i9, align 4, !dbg !8519
  %16 = and i32 %15, 1, !dbg !8519
  %17 = icmp eq i32 %16, 0, !dbg !8519
  br i1 %17, label %__get_new_fd.exit20, label %bb1.i12, !dbg !8519

bb1.i12:                                          ; preds = %bb.i10
  %indvar.next.i11 = add i64 %indvar.i13, 1
  br label %bb2.i15, !dbg !8521

bb2.i15:                                          ; preds = %bb1.i12, %__get_new_fd.exit
  %indvar.i13 = phi i64 [ %indvar.next.i11, %bb1.i12 ], [ 0, %__get_new_fd.exit ]
  %fd.0.i14 = trunc i64 %indvar.i13 to i32
  %18 = icmp slt i32 %fd.0.i14, 32, !dbg !8521
  br i1 %18, label %bb.i10, label %bb3.i16, !dbg !8521

bb3.i16:                                          ; preds = %bb2.i15
  %19 = icmp eq i32 %fd.0.i14, 32, !dbg !8522
  br i1 %19, label %__get_new_fd.exit20.thread, label %__get_new_fd.exit20, !dbg !8522

__get_new_fd.exit20.thread:                       ; preds = %bb3.i16
  %20 = call i32* @__errno_location() nounwind readnone, !dbg !8523
  store i32 23, i32* %20, align 4, !dbg !8523
  %21 = getelementptr inbounds i32* %filedes, i64 1, !dbg !8520
  store i32 -1, i32* %21, align 4, !dbg !8520
  br label %bb2

__get_new_fd.exit20:                              ; preds = %bb3.i16, %bb.i10
  %22 = sext i32 %fd.0.i14 to i64, !dbg !8524
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, !dbg !8524
  %24 = bitcast %struct.exe_file_t* %23 to i8*, !dbg !8525
  %25 = call i8* @memset(i8* %24, i32 0, i64 56)
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 0, !dbg !8526
  store i32 -1, i32* %26, align 8, !dbg !8526
  %27 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 1, !dbg !8527
  store i32 1, i32* %27, align 4, !dbg !8527
  %28 = getelementptr inbounds i32* %filedes, i64 1, !dbg !8520
  store i32 %fd.0.i14, i32* %28, align 4, !dbg !8520
  %29 = icmp slt i32 %fd.0.i14, 0, !dbg !8520
  br i1 %29, label %__get_new_fd.exit20.bb2_crit_edge, label %bb3, !dbg !8520

__get_new_fd.exit20.bb2_crit_edge:                ; preds = %__get_new_fd.exit20
  %.pre29 = call i32* @__errno_location() nounwind readnone, !dbg !8528
  br label %bb2

bb2:                                              ; preds = %__get_new_fd.exit20.bb2_crit_edge, %__get_new_fd.exit20.thread
  %.pre-phi30 = phi i32* [ %.pre29, %__get_new_fd.exit20.bb2_crit_edge ], [ %20, %__get_new_fd.exit20.thread ]
  %30 = phi i32* [ %28, %__get_new_fd.exit20.bb2_crit_edge ], [ %21, %__get_new_fd.exit20.thread ]
  %31 = call i32 @klee_get_errno() nounwind, !dbg !8528
  store i32 %31, i32* %.pre-phi30, align 4, !dbg !8528
  %32 = load i32* %30, align 4, !dbg !8529
  br label %bb7, !dbg !8529

bb3:                                              ; preds = %__get_new_fd.exit20
  %os_filedes4 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 0, !dbg !8530
  %33 = call i64 (i64, ...)* @syscall(i64 22, i32* %os_filedes4) nounwind, !dbg !8530
  %34 = trunc i64 %33 to i32, !dbg !8530
  %35 = icmp slt i32 %34, 0, !dbg !8531
  br i1 %35, label %bb5, label %bb6, !dbg !8531

bb5:                                              ; preds = %bb3
  %36 = call i32* @__errno_location() nounwind readnone, !dbg !8532
  %37 = call i32 @klee_get_errno() nounwind, !dbg !8532
  store i32 %37, i32* %36, align 4, !dbg !8532
  br label %bb7, !dbg !8533

bb6:                                              ; preds = %bb3
  %38 = load i32* %os_filedes4, align 4, !dbg !8534
  store i32 %38, i32* %10, align 8, !dbg !8534
  store i32 5, i32* %11, align 4, !dbg !8534
  %39 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 1, !dbg !8535
  %40 = load i32* %39, align 4, !dbg !8535
  store i32 %40, i32* %26, align 8, !dbg !8535
  store i32 9, i32* %27, align 4, !dbg !8535
  %41 = load i32* %28, align 4, !dbg !8536
  %42 = load i32* %filedes, align 4, !dbg !8536
  %43 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8536
  %44 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %43, i8* noalias getelementptr inbounds ([47 x i8]* @.str23301, i64 0, i64 0), i32 %42, i32 %41, i32 %38, i32 %40)
  br label %bb7, !dbg !8537

bb7:                                              ; preds = %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ %14, %bb ], [ %32, %bb2 ], [ %34, %bb5 ], [ 0, %bb6 ]
  ret i32 %.0, !dbg !8518
}

declare i64 @klee_get_valuel(i64)

declare void @klee_assume(i64)

define internal fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %cp_treat_symbolic) nounwind {
entry:
  %0 = icmp eq i8* %pathname, null, !dbg !8538
  br i1 %0, label %bb59, label %bb, !dbg !8538

bb:                                               ; preds = %entry
  %1 = load i8* %pathname, align 1, !dbg !8538
  %2 = icmp eq i8 %1, 0, !dbg !8538
  br i1 %2, label %bb59, label %bb2, !dbg !8538

bb2:                                              ; preds = %bb
  %3 = tail call i32 @klee_zest_enabled() nounwind, !dbg !8539
  %4 = icmp eq i32 %3, 1, !dbg !8539
  %5 = zext i1 %4 to i8, !dbg !8539
  store i8 %5, i8* @UseConcretePath, align 1, !dbg !8539
  %6 = getelementptr inbounds i8* %pathname, i64 1, !dbg !8540
  %7 = load i8* %6, align 1, !dbg !8540
  %8 = icmp eq i8 %7, 0, !dbg !8540
  br i1 %8, label %bb3, label %bb11, !dbg !8540

bb3:                                              ; preds = %bb2
  %9 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8540
  %10 = icmp eq i32 %9, 0, !dbg !8540
  br i1 %10, label %bb4, label %bb3.bb11_crit_edge, !dbg !8540

bb3.bb11_crit_edge:                               ; preds = %bb3
  %.pre = load i8* @UseConcretePath, align 1
  br label %bb11

bb4:                                              ; preds = %bb3
  %11 = load i8* %pathname, align 1, !dbg !8541
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8542
  %13 = sext i8 %11 to i32, !dbg !8543
  br label %bb10, !dbg !8542

bb5:                                              ; preds = %bb10
  %int_cast_to_i64 = zext i32 24 to i64
  %14 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %14, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb5
  %sext = shl i32 %28, 24
  %int_cast_to_i641 = zext i32 24 to i64
  %15 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %15, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit
  %16 = ashr exact i32 %sext, 24, !dbg !8543
  %17 = add nsw i32 %16, 65, !dbg !8543
  %18 = icmp eq i32 %13, %17, !dbg !8543
  br i1 %18, label %bb6, label %bb9, !dbg !8543

bb6:                                              ; preds = %klee_overshift_check.exit6
  %19 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !8544
  %20 = zext i32 %28 to i64, !dbg !8544
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, i32 3, !dbg !8545
  %22 = load %struct.stat** %21, align 8, !dbg !8545
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 1, !dbg !8545
  %24 = load i64* %23, align 8, !dbg !8545
  %25 = icmp eq i64 %24, 0, !dbg !8545
  br i1 %25, label %bb59, label %bb8, !dbg !8545

bb8:                                              ; preds = %bb6
  %26 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, !dbg !8544
  br label %bb59, !dbg !8546

bb9:                                              ; preds = %klee_overshift_check.exit6
  %27 = add i32 %28, 1, !dbg !8542
  br label %bb10, !dbg !8542

bb10:                                             ; preds = %bb9, %bb4
  %28 = phi i32 [ 0, %bb4 ], [ %27, %bb9 ]
  %29 = icmp ugt i32 %12, %28, !dbg !8542
  br i1 %29, label %bb5, label %bb59, !dbg !8542

bb11:                                             ; preds = %bb3.bb11_crit_edge, %bb2
  %30 = phi i8 [ %.pre, %bb3.bb11_crit_edge ], [ %5, %bb2 ]
  %toBool = icmp eq i8 %30, 0, !dbg !8547
  %toBool13 = icmp eq i8 %cp_treat_symbolic, 0, !dbg !8547
  %or.cond = or i1 %toBool, %toBool13
  br i1 %or.cond, label %bb59, label %bb14, !dbg !8547

bb14:                                             ; preds = %bb11
  %31 = load i8* %pathname, align 1, !dbg !8548
  %32 = sext i8 %31 to i64, !dbg !8548
  %33 = tail call i32 @klee_is_symbolic(i64 %32) nounwind, !dbg !8548
  %34 = icmp eq i32 %33, 0, !dbg !8548
  br i1 %34, label %bb19, label %bb16, !dbg !8548

bb16:                                             ; preds = %bb14
  %35 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8549
  %36 = icmp eq i32 %35, 0, !dbg !8549
  br i1 %36, label %bb17, label %bb41, !dbg !8549

bb17:                                             ; preds = %bb16
  %37 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8550
  %38 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %37, i8* noalias getelementptr inbounds ([32 x i8]* @.str24302, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !8550

bb19:                                             ; preds = %bb14
  %39 = tail call i8* @strchr(i8* %pathname, i32 46) nounwind readonly, !dbg !8551
  %40 = icmp eq i8* %39, null, !dbg !8552
  br i1 %40, label %bb56, label %bb37, !dbg !8552

bb37:                                             ; preds = %bb19
  %41 = tail call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([6 x i8]* @.str25303, i64 0, i64 0)) nounwind readonly, !dbg !8553
  %phitmp = icmp eq i32 %41, 0
  br i1 %phitmp, label %bb38, label %bb56, !dbg !8553

bb38:                                             ; preds = %bb37
  %42 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8554
  %43 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias getelementptr inbounds ([40 x i8]* @.str26304, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !8554

bb41:                                             ; preds = %bb38, %bb17, %bb16
  %44 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8555
  %45 = icmp eq i32 %44, 0, !dbg !8556
  br i1 %45, label %bb43, label %bb42, !dbg !8556

bb42:                                             ; preds = %bb41
  %46 = tail call i64 @strlen(i8* %pathname) nounwind readonly, !dbg !8557
  %int_cast_to_i642 = bitcast i64 32 to i64
  %47 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %47, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %bb42
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %bb42
  %48 = shl i64 %46, 32
  %sext63 = add i64 %48, 4294967296
  %int_cast_to_i643 = bitcast i64 32 to i64
  %49 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %49, label %klee_overshift_check.exit10, label %bb.i9

bb.i9:                                            ; preds = %klee_overshift_check.exit8
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit10:                      ; preds = %klee_overshift_check.exit8
  %50 = ashr exact i64 %sext63, 32, !dbg !8558
  %51 = tail call noalias i8* @malloc(i64 %50) nounwind, !dbg !8558
  %52 = call i8* @memcpy(i8* %51, i8* %pathname, i64 %50)
  br label %bb43, !dbg !8559

bb43:                                             ; preds = %klee_overshift_check.exit10, %bb41
  %toConcretize.0 = phi i8* [ %51, %klee_overshift_check.exit10 ], [ %pathname, %bb41 ]
  %53 = ptrtoint i8* %toConcretize.0 to i64, !dbg !8560
  %54 = tail call i64 @klee_get_valuel(i64 %53) nounwind, !dbg !8560
  %55 = inttoptr i64 %54 to i8*, !dbg !8560
  %56 = icmp eq i8* %55, %toConcretize.0, !dbg !8563
  %57 = zext i1 %56 to i64, !dbg !8563
  tail call void @klee_assume(i64 %57) nounwind, !dbg !8563
  br label %bb.i, !dbg !8564

bb.i:                                             ; preds = %bb13.i, %bb43
  %sc.0.i = phi i8* [ %55, %bb43 ], [ %sc.1.i, %bb13.i ]
  %58 = phi i32 [ 0, %bb43 ], [ %75, %bb13.i ]
  %59 = load i8* %sc.0.i, align 1, !dbg !8565
  %60 = load i8* @UseConcretePath, align 1, !dbg !8566
  %toBool3not.i = icmp eq i8 %60, 0, !dbg !8566
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8566

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %58, -1
  %61 = and i32 %tmp.i, %58, !dbg !8566
  %62 = icmp eq i32 %61, 0, !dbg !8566
  br i1 %62, label %bb8.i, label %bb12.i, !dbg !8566

bb8.i:                                            ; preds = %bb7.i
  switch i8 %59, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8567
  br label %bb50.preheader, !dbg !8567

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8568
  %63 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8568
  br label %bb13.i, !dbg !8568

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %64 = sext i8 %59 to i64, !dbg !8569
  %65 = tail call i64 @klee_get_valuel(i64 %64) nounwind, !dbg !8569
  %66 = trunc i64 %65 to i8, !dbg !8569
  %67 = icmp eq i8 %66, %59, !dbg !8570
  %68 = zext i1 %67 to i64, !dbg !8570
  tail call void @klee_assume(i64 %68) nounwind, !dbg !8570
  store i8 %66, i8* %sc.0.i, align 1, !dbg !8571
  %69 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8571
  %70 = icmp eq i8 %66, 0, !dbg !8572
  br i1 %70, label %bb50.preheader, label %bb13.i, !dbg !8572

bb50.preheader:                                   ; preds = %bb12.i, %bb9.i
  %71 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !8573
  %72 = icmp eq i32 %71, 0, !dbg !8573
  br i1 %72, label %bb52, label %bb44.lr.ph, !dbg !8573

bb44.lr.ph:                                       ; preds = %bb50.preheader
  %73 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 8, !dbg !8574
  %tmp = icmp ugt i32 %71, 1
  %.op = add i32 %71, -1
  %74 = zext i32 %.op to i64
  %.op76 = add i64 %74, 1
  %tmp70 = select i1 %tmp, i64 %.op76, i64 1
  br label %bb44

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %69, %bb12.i ], [ %63, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %75 = add i32 %58, 1, !dbg !8564
  br label %bb.i, !dbg !8564

bb44:                                             ; preds = %bb49, %bb44.lr.ph
  %indvar = phi i64 [ 0, %bb44.lr.ph ], [ %indvar.next, %bb49 ]
  %df15.165 = phi %struct.exe_disk_file_t* [ null, %bb44.lr.ph ], [ %df15.0, %bb49 ]
  %scevgep71 = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar, i32 2
  %scevgep = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar
  %76 = load i8** %scevgep71, align 8, !dbg !8574
  %77 = icmp eq i8* %76, null, !dbg !8574
  br i1 %77, label %bb49, label %bb45, !dbg !8574

bb45:                                             ; preds = %bb44
  %78 = tail call i32 @strcmp(i8* %76, i8* %pathname) nounwind readonly, !dbg !8575
  %79 = icmp eq i32 %78, 0, !dbg !8575
  br i1 %79, label %bb48, label %bb49, !dbg !8575

bb48:                                             ; preds = %bb45
  br label %bb49, !dbg !8576

bb49:                                             ; preds = %bb48, %bb45, %bb44
  %df15.0 = phi %struct.exe_disk_file_t* [ %scevgep, %bb48 ], [ %df15.165, %bb45 ], [ %df15.165, %bb44 ]
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp70
  br i1 %exitcond3, label %bb51, label %bb44, !dbg !8573

bb51:                                             ; preds = %bb49
  %80 = icmp eq %struct.exe_disk_file_t* %df15.0, null, !dbg !8577
  br i1 %80, label %bb52, label %bb53, !dbg !8577

bb52:                                             ; preds = %bb51, %bb50.preheader
  %81 = tail call %struct.exe_disk_file_t* @klee_init_cp_file(i8* %toConcretize.0, i32 %flags) nounwind, !dbg !8578
  br label %bb53, !dbg !8578

bb53:                                             ; preds = %bb52, %bb51
  %df15.2 = phi %struct.exe_disk_file_t* [ %81, %bb52 ], [ %df15.0, %bb51 ]
  br i1 %45, label %bb59, label %bb54, !dbg !8579

bb54:                                             ; preds = %bb53
  tail call void @free(i8* %toConcretize.0) nounwind, !dbg !8580
  br label %bb59, !dbg !8580

bb56:                                             ; preds = %bb37, %bb19
  %82 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8555
  %83 = icmp eq i32 %82, 0, !dbg !8556
  br i1 %83, label %bb57, label %bb59, !dbg !8581

bb57:                                             ; preds = %bb56
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8582
  %85 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %84, i8* noalias getelementptr inbounds ([32 x i8]* @.str27305, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb59, !dbg !8582

bb59:                                             ; preds = %bb57, %bb56, %bb54, %bb53, %bb11, %bb10, %bb8, %bb6, %bb, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %26, %bb8 ], [ null, %bb ], [ null, %entry ], [ null, %bb6 ], [ %df15.2, %bb53 ], [ %df15.2, %bb54 ], [ null, %bb11 ], [ null, %bb57 ], [ null, %bb56 ], [ null, %bb10 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !8583
}

declare i32 @klee_shadow_enabled()

declare i32 @klee_is_symbolic(i64)

define i32 @utime(i8* %path, i8* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8584
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8587
  br i1 %1, label %bb1, label %bb, !dbg !8587

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([40 x i8]* @.str28306, i64 0, i64 0)) nounwind, !dbg !8588
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8589
  store i32 2, i32* %2, align 4, !dbg !8589
  br label %bb4, !dbg !8590

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8591
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8591
  %5 = inttoptr i64 %4 to i8*, !dbg !8591
  %6 = icmp eq i8* %5, %path, !dbg !8594
  %7 = zext i1 %6 to i64, !dbg !8594
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8594
  br label %bb.i, !dbg !8595

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8596
  %10 = load i8* @UseConcretePath, align 1, !dbg !8597
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8597
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8597

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8597
  %12 = icmp eq i32 %11, 0, !dbg !8597
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8597

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8598
  br label %__concretize_string.exit, !dbg !8598

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8599
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8599
  br label %bb13.i, !dbg !8599

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8600
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8600
  %16 = trunc i64 %15 to i8, !dbg !8600
  %17 = icmp eq i8 %16, %9, !dbg !8601
  %18 = zext i1 %17 to i64, !dbg !8601
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8601
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8602
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8602
  %20 = icmp eq i8 %16, 0, !dbg !8603
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8603

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8595
  br label %bb.i, !dbg !8595

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 132, i8* %path, i8* %times) nounwind, !dbg !8593
  %23 = trunc i64 %22 to i32, !dbg !8593
  %24 = icmp eq i32 %23, -1, !dbg !8604
  br i1 %24, label %bb2, label %bb4, !dbg !8604

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8605
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8605
  store i32 %26, i32* %25, align 4, !dbg !8605
  br label %bb4, !dbg !8605

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8590
}

define i64 @readlink(i8* %path, i8* %buf, i64 %bufsize) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8606
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8608
  br i1 %1, label %bb12, label %bb, !dbg !8608

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8609
  %3 = load %struct.stat** %2, align 8, !dbg !8609
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8609
  %5 = load i32* %4, align 8, !dbg !8609
  %6 = and i32 %5, 61440, !dbg !8609
  %7 = icmp eq i32 %6, 40960, !dbg !8609
  br i1 %7, label %bb1, label %bb11, !dbg !8609

bb1:                                              ; preds = %bb
  %8 = load i8* %path, align 1, !dbg !8610
  store i8 %8, i8* %buf, align 1, !dbg !8610
  %9 = icmp ugt i64 %bufsize, 1, !dbg !8611
  br i1 %9, label %bb3, label %bb9, !dbg !8611

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds i8* %buf, i64 1, !dbg !8611
  store i8 46, i8* %10, align 1, !dbg !8611
  %11 = icmp ugt i64 %bufsize, 2, !dbg !8612
  br i1 %11, label %bb5, label %bb9, !dbg !8612

bb5:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8* %buf, i64 2, !dbg !8612
  store i8 108, i8* %12, align 1, !dbg !8612
  %13 = icmp ugt i64 %bufsize, 3, !dbg !8613
  br i1 %13, label %bb7, label %bb9, !dbg !8613

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds i8* %buf, i64 3, !dbg !8613
  store i8 110, i8* %14, align 1, !dbg !8613
  %15 = icmp ugt i64 %bufsize, 4, !dbg !8614
  br i1 %15, label %bb8, label %bb9, !dbg !8614

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8* %buf, i64 4, !dbg !8614
  store i8 107, i8* %16, align 1, !dbg !8614
  br label %bb9, !dbg !8614

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb3, %bb1
  %17 = icmp ugt i64 %bufsize, 5, !dbg !8615
  %min = select i1 %17, i64 5, i64 %bufsize, !dbg !8615
  br label %bb15, !dbg !8615

bb11:                                             ; preds = %bb
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8616
  store i32 22, i32* %18, align 4, !dbg !8616
  br label %bb15, !dbg !8617

bb12:                                             ; preds = %entry
  %19 = tail call i64 (i64, ...)* @syscall(i64 89, i8* %path, i8* %buf, i64 %bufsize) nounwind, !dbg !8618
  %20 = trunc i64 %19 to i32, !dbg !8618
  %21 = icmp eq i32 %20, -1, !dbg !8619
  br i1 %21, label %bb13, label %bb14, !dbg !8619

bb13:                                             ; preds = %bb12
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !8620
  %23 = tail call i32 @klee_get_errno() nounwind, !dbg !8620
  store i32 %23, i32* %22, align 4, !dbg !8620
  br label %bb14, !dbg !8620

bb14:                                             ; preds = %bb13, %bb12
  %24 = sext i32 %20 to i64, !dbg !8621
  br label %bb15, !dbg !8621

bb15:                                             ; preds = %bb14, %bb11, %bb9
  %.0 = phi i64 [ %min, %bb9 ], [ -1, %bb11 ], [ %24, %bb14 ]
  ret i64 %.0, !dbg !8615
}

define i32 @utimes(i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8622
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8624
  br i1 %1, label %bb1, label %bb, !dbg !8624

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([41 x i8]* @.str29307, i64 0, i64 0)) nounwind, !dbg !8625
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8626
  store i32 2, i32* %2, align 4, !dbg !8626
  br label %bb4, !dbg !8627

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8628
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8628
  %5 = inttoptr i64 %4 to i8*, !dbg !8628
  %6 = icmp eq i8* %5, %path, !dbg !8631
  %7 = zext i1 %6 to i64, !dbg !8631
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8631
  br label %bb.i, !dbg !8632

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8633
  %10 = load i8* @UseConcretePath, align 1, !dbg !8634
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8634
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8634

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8634
  %12 = icmp eq i32 %11, 0, !dbg !8634
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8634

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8635
  br label %__concretize_string.exit, !dbg !8635

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8636
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8636
  br label %bb13.i, !dbg !8636

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8637
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8637
  %16 = trunc i64 %15 to i8, !dbg !8637
  %17 = icmp eq i8 %16, %9, !dbg !8638
  %18 = zext i1 %17 to i64, !dbg !8638
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8638
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8639
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8639
  %20 = icmp eq i8 %16, 0, !dbg !8640
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8640

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8632
  br label %bb.i, !dbg !8632

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 235, i8* %path, %struct.timespec* %times) nounwind, !dbg !8630
  %23 = trunc i64 %22 to i32, !dbg !8630
  %24 = icmp eq i32 %23, -1, !dbg !8641
  br i1 %24, label %bb2, label %bb4, !dbg !8641

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8642
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8642
  store i32 %26, i32* %25, align 4, !dbg !8642
  br label %bb4, !dbg !8642

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8627
}

define i32 @unlink(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8643
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8645
  br i1 %1, label %bb5, label %bb, !dbg !8645

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8646
  %3 = load %struct.stat** %2, align 8, !dbg !8646
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8646
  %5 = load i32* %4, align 8, !dbg !8646
  %6 = and i32 %5, 61440, !dbg !8646
  %7 = icmp eq i32 %6, 32768, !dbg !8646
  br i1 %7, label %bb1, label %bb2, !dbg !8646

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !8647
  store i64 0, i64* %8, align 8, !dbg !8647
  br label %bb8, !dbg !8648

bb2:                                              ; preds = %bb
  %9 = icmp eq i32 %6, 16384, !dbg !8649
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !8650
  br i1 %9, label %bb3, label %bb4, !dbg !8649

bb3:                                              ; preds = %bb2
  store i32 21, i32* %10, align 4, !dbg !8650
  br label %bb8, !dbg !8651

bb4:                                              ; preds = %bb2
  store i32 1, i32* %10, align 4, !dbg !8652
  br label %bb8, !dbg !8653

bb5:                                              ; preds = %entry
  %11 = ptrtoint i8* %pathname to i64, !dbg !8654
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !8654
  %13 = inttoptr i64 %12 to i8*, !dbg !8654
  %14 = icmp eq i8* %13, %pathname, !dbg !8657
  %15 = zext i1 %14 to i64, !dbg !8657
  tail call void @klee_assume(i64 %15) nounwind, !dbg !8657
  br label %bb.i, !dbg !8658

bb.i:                                             ; preds = %bb13.i, %bb5
  %sc.0.i = phi i8* [ %13, %bb5 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb5 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !8659
  %18 = load i8* @UseConcretePath, align 1, !dbg !8660
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !8660
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8660

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !8660
  %20 = icmp eq i32 %19, 0, !dbg !8660
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !8660

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8661
  br label %__concretize_string.exit, !dbg !8661

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8662
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8662
  br label %bb13.i, !dbg !8662

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !8663
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !8663
  %24 = trunc i64 %23 to i8, !dbg !8663
  %25 = icmp eq i8 %24, %17, !dbg !8664
  %26 = zext i1 %25 to i64, !dbg !8664
  tail call void @klee_assume(i64 %26) nounwind, !dbg !8664
  store i8 %24, i8* %sc.0.i, align 1, !dbg !8665
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8665
  %28 = icmp eq i8 %24, 0, !dbg !8666
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !8666

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !8658
  br label %bb.i, !dbg !8658

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 87, i8* %pathname) nounwind, !dbg !8656
  %31 = trunc i64 %30 to i32, !dbg !8656
  %32 = icmp eq i32 %31, -1, !dbg !8667
  br i1 %32, label %bb6, label %bb8, !dbg !8667

bb6:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !8668
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !8668
  store i32 %34, i32* %33, align 4, !dbg !8668
  br label %bb8, !dbg !8668

bb8:                                              ; preds = %bb6, %__concretize_string.exit, %bb4, %bb3, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb3 ], [ -1, %bb4 ], [ -1, %bb6 ], [ %31, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8648
}

define i32 @rmdir(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8669
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8671
  br i1 %1, label %bb3, label %bb, !dbg !8671

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8672
  %3 = load %struct.stat** %2, align 8, !dbg !8672
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8672
  %5 = load i32* %4, align 8, !dbg !8672
  %6 = and i32 %5, 61440, !dbg !8672
  %7 = icmp eq i32 %6, 16384, !dbg !8672
  br i1 %7, label %bb1, label %bb2, !dbg !8672

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !8673
  store i64 0, i64* %8, align 8, !dbg !8673
  br label %bb6, !dbg !8674

bb2:                                              ; preds = %bb
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8675
  store i32 20, i32* %9, align 4, !dbg !8675
  br label %bb6, !dbg !8676

bb3:                                              ; preds = %entry
  %10 = ptrtoint i8* %pathname to i64, !dbg !8677
  %11 = tail call i64 @klee_get_valuel(i64 %10) nounwind, !dbg !8677
  %12 = inttoptr i64 %11 to i8*, !dbg !8677
  %13 = icmp eq i8* %12, %pathname, !dbg !8680
  %14 = zext i1 %13 to i64, !dbg !8680
  tail call void @klee_assume(i64 %14) nounwind, !dbg !8680
  br label %bb.i, !dbg !8681

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %12, %bb3 ], [ %sc.1.i, %bb13.i ]
  %15 = phi i32 [ 0, %bb3 ], [ %28, %bb13.i ]
  %16 = load i8* %sc.0.i, align 1, !dbg !8682
  %17 = load i8* @UseConcretePath, align 1, !dbg !8683
  %toBool3not.i = icmp eq i8 %17, 0, !dbg !8683
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8683

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %15, -1
  %18 = and i32 %tmp.i, %15, !dbg !8683
  %19 = icmp eq i32 %18, 0, !dbg !8683
  br i1 %19, label %bb8.i, label %bb12.i, !dbg !8683

bb8.i:                                            ; preds = %bb7.i
  switch i8 %16, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8684
  br label %__concretize_string.exit, !dbg !8684

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8685
  %20 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8685
  br label %bb13.i, !dbg !8685

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %21 = sext i8 %16 to i64, !dbg !8686
  %22 = tail call i64 @klee_get_valuel(i64 %21) nounwind, !dbg !8686
  %23 = trunc i64 %22 to i8, !dbg !8686
  %24 = icmp eq i8 %23, %16, !dbg !8687
  %25 = zext i1 %24 to i64, !dbg !8687
  tail call void @klee_assume(i64 %25) nounwind, !dbg !8687
  store i8 %23, i8* %sc.0.i, align 1, !dbg !8688
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8688
  %27 = icmp eq i8 %23, 0, !dbg !8689
  br i1 %27, label %__concretize_string.exit, label %bb13.i, !dbg !8689

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %26, %bb12.i ], [ %20, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %28 = add i32 %15, 1, !dbg !8681
  br label %bb.i, !dbg !8681

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %29 = tail call i64 (i64, ...)* @syscall(i64 84, i8* %pathname) nounwind, !dbg !8679
  %30 = trunc i64 %29 to i32, !dbg !8679
  %31 = icmp eq i32 %30, -1, !dbg !8690
  br i1 %31, label %bb4, label %bb6, !dbg !8690

bb4:                                              ; preds = %__concretize_string.exit
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !8691
  %33 = tail call i32 @klee_get_errno() nounwind, !dbg !8691
  store i32 %33, i32* %32, align 4, !dbg !8691
  br label %bb6, !dbg !8691

bb6:                                              ; preds = %bb4, %__concretize_string.exit, %bb2, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb2 ], [ -1, %bb4 ], [ %30, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8674
}

define i32 @__fd_statfs(i8* %path, %struct.statfs* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8692
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8694
  br i1 %1, label %bb1, label %bb, !dbg !8694

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5283, i64 0, i64 0)) nounwind, !dbg !8695
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8696
  store i32 2, i32* %2, align 4, !dbg !8696
  br label %bb4, !dbg !8697

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8698
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8698
  %5 = inttoptr i64 %4 to i8*, !dbg !8698
  %6 = icmp eq i8* %5, %path, !dbg !8701
  %7 = zext i1 %6 to i64, !dbg !8701
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8701
  br label %bb.i, !dbg !8702

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8703
  %10 = load i8* @UseConcretePath, align 1, !dbg !8704
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8704
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8704

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8704
  %12 = icmp eq i32 %11, 0, !dbg !8704
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8704

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8705
  br label %__concretize_string.exit, !dbg !8705

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8706
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8706
  br label %bb13.i, !dbg !8706

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8707
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8707
  %16 = trunc i64 %15 to i8, !dbg !8707
  %17 = icmp eq i8 %16, %9, !dbg !8708
  %18 = zext i1 %17 to i64, !dbg !8708
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8708
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8709
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8709
  %20 = icmp eq i8 %16, 0, !dbg !8710
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8710

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8702
  br label %bb.i, !dbg !8702

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 137, i8* %path, %struct.statfs* %buf) nounwind, !dbg !8700
  %23 = trunc i64 %22 to i32, !dbg !8700
  %24 = icmp eq i32 %23, -1, !dbg !8711
  br i1 %24, label %bb2, label %bb4, !dbg !8711

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8712
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8712
  store i32 %26, i32* %25, align 4, !dbg !8712
  br label %bb4, !dbg !8712

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8697
}

define i32 @openat(i32 %fd, i8* %path, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8713
  br i1 %0, label %bb.i, label %bb4, !dbg !8713

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8715
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8716
  %3 = load i32* %2, align 4, !dbg !8716
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8716
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !8716

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8715
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb4, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8717
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !8717
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !8717
  br i1 %8, label %bb3, label %bb1, !dbg !8717

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str30308, i64 0, i64 0)) nounwind, !dbg !8718
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !8719
  store i32 2, i32* %9, align 4, !dbg !8719
  br label %bb29, !dbg !8720

bb3:                                              ; preds = %bb
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8721
  %11 = load i32* %10, align 8, !dbg !8721
  br label %bb4, !dbg !8721

bb4:                                              ; preds = %bb3, %__get_file.exit, %bb.i, %entry
  %fd_addr.0 = phi i32 [ %11, %bb3 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %entry ]
  br label %bb7, !dbg !8722

bb5:                                              ; preds = %bb7
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %12 = load i32* %scevgep, align 4, !dbg !8723
  %13 = and i32 %12, 1, !dbg !8723
  %14 = icmp eq i32 %13, 0, !dbg !8723
  br i1 %14, label %bb10, label %bb6, !dbg !8723

bb6:                                              ; preds = %bb5
  %indvar.next = add i64 %indvar, 1
  br label %bb7, !dbg !8722

bb7:                                              ; preds = %bb6, %bb4
  %indvar = phi i64 [ %indvar.next, %bb6 ], [ 0, %bb4 ]
  %fd_idx.0 = trunc i64 %indvar to i32
  %15 = icmp slt i32 %fd_idx.0, 32, !dbg !8722
  br i1 %15, label %bb5, label %bb8, !dbg !8722

bb8:                                              ; preds = %bb7
  %16 = icmp eq i32 %fd_idx.0, 32, !dbg !8724
  br i1 %16, label %bb9, label %bb10, !dbg !8724

bb9:                                              ; preds = %bb8
  %17 = call i32* @__errno_location() nounwind readnone, !dbg !8725
  store i32 24, i32* %17, align 4, !dbg !8725
  br label %bb29, !dbg !8726

bb10:                                             ; preds = %bb8, %bb5
  %18 = sext i32 %fd_idx.0 to i64, !dbg !8727
  %19 = and i32 %flags, 64, !dbg !8728
  %20 = icmp eq i32 %19, 0, !dbg !8728
  br i1 %20, label %bb19, label %bb11, !dbg !8728

bb11:                                             ; preds = %bb10
  %ap1213 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8729
  call void @llvm.va_start(i8* %ap1213), !dbg !8729
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8730
  %22 = load i32* %21, align 8, !dbg !8730
  %23 = icmp ugt i32 %22, 47, !dbg !8730
  br i1 %23, label %bb15, label %bb14, !dbg !8730

bb14:                                             ; preds = %bb11
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8730
  %25 = load i8** %24, align 8, !dbg !8730
  %tmp = zext i32 %22 to i64
  %26 = ptrtoint i8* %25 to i64, !dbg !8730
  %27 = add i64 %26, %tmp, !dbg !8730
  %28 = inttoptr i64 %27 to i8*, !dbg !8730
  %29 = add i32 %22, 8, !dbg !8730
  store i32 %29, i32* %21, align 8, !dbg !8730
  br label %bb16, !dbg !8730

bb15:                                             ; preds = %bb11
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8730
  %31 = load i8** %30, align 8, !dbg !8730
  %32 = getelementptr inbounds i8* %31, i64 8, !dbg !8730
  store i8* %32, i8** %30, align 8, !dbg !8730
  br label %bb16, !dbg !8730

bb16:                                             ; preds = %bb15, %bb14
  %addr.67.0 = phi i8* [ %31, %bb15 ], [ %28, %bb14 ]
  %33 = bitcast i8* %addr.67.0 to i32*, !dbg !8730
  %34 = load i32* %33, align 4, !dbg !8730
  call void @llvm.va_end(i8* %ap1213), !dbg !8731
  br label %bb19, !dbg !8731

bb19:                                             ; preds = %bb16, %bb10
  %mode.0 = phi i32 [ %34, %bb16 ], [ 0, %bb10 ]
  %35 = sext i32 %flags to i64, !dbg !8732
  %36 = ptrtoint i8* %path to i64, !dbg !8733
  %37 = call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !8733
  %38 = inttoptr i64 %37 to i8*, !dbg !8733
  %39 = icmp eq i8* %38, %path, !dbg !8735
  %40 = zext i1 %39 to i64, !dbg !8735
  call void @klee_assume(i64 %40) nounwind, !dbg !8735
  br label %bb.i32, !dbg !8736

bb.i32:                                           ; preds = %bb13.i, %bb19
  %sc.0.i = phi i8* [ %38, %bb19 ], [ %sc.1.i, %bb13.i ]
  %41 = phi i32 [ 0, %bb19 ], [ %54, %bb13.i ]
  %42 = load i8* %sc.0.i, align 1, !dbg !8737
  %43 = load i8* @UseConcretePath, align 1, !dbg !8738
  %toBool3not.i = icmp eq i8 %43, 0, !dbg !8738
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8738

bb7.i:                                            ; preds = %bb.i32
  %tmp.i = add i32 %41, -1
  %44 = and i32 %tmp.i, %41, !dbg !8738
  %45 = icmp eq i32 %44, 0, !dbg !8738
  br i1 %45, label %bb8.i, label %bb12.i, !dbg !8738

bb8.i:                                            ; preds = %bb7.i
  switch i8 %42, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8739
  br label %__concretize_string.exit, !dbg !8739

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8740
  %46 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8740
  br label %bb13.i, !dbg !8740

bb12.i:                                           ; preds = %bb7.i, %bb.i32
  %47 = sext i8 %42 to i64, !dbg !8741
  %48 = call i64 @klee_get_valuel(i64 %47) nounwind, !dbg !8741
  %49 = trunc i64 %48 to i8, !dbg !8741
  %50 = icmp eq i8 %49, %42, !dbg !8742
  %51 = zext i1 %50 to i64, !dbg !8742
  call void @klee_assume(i64 %51) nounwind, !dbg !8742
  store i8 %49, i8* %sc.0.i, align 1, !dbg !8743
  %52 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8743
  %53 = icmp eq i8 %49, 0, !dbg !8744
  br i1 %53, label %__concretize_string.exit, label %bb13.i, !dbg !8744

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %52, %bb12.i ], [ %46, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %54 = add i32 %41, 1, !dbg !8736
  br label %bb.i32, !dbg !8736

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %55 = sext i32 %fd_addr.0 to i64, !dbg !8732
  %56 = call i64 (i64, ...)* @syscall(i64 257, i64 %55, i8* %path, i64 %35, i32 %mode.0) nounwind, !dbg !8732
  %57 = trunc i64 %56 to i32, !dbg !8732
  %cond31 = icmp eq i32 %57, -1
  br i1 %cond31, label %bb20, label %bb23

bb20:                                             ; preds = %__concretize_string.exit
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !8745
  %59 = call i32 @klee_get_errno() nounwind, !dbg !8745
  store i32 %59, i32* %58, align 4, !dbg !8745
  br label %bb29

bb23:                                             ; preds = %__concretize_string.exit
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 0, !dbg !8746
  store i32 %57, i32* %60, align 8, !dbg !8746
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 1, !dbg !8747
  store i32 1, i32* %61, align 4, !dbg !8747
  %62 = and i32 %flags, 3, !dbg !8748
  switch i32 %62, label %bb27 [
    i32 0, label %bb24
    i32 1, label %bb26
  ]

bb24:                                             ; preds = %bb23
  store i32 5, i32* %61, align 4, !dbg !8749
  br label %bb29, !dbg !8749

bb26:                                             ; preds = %bb23
  store i32 9, i32* %61, align 4, !dbg !8750
  br label %bb29, !dbg !8750

bb27:                                             ; preds = %bb23
  store i32 13, i32* %61, align 4, !dbg !8751
  br label %bb29, !dbg !8751

bb29:                                             ; preds = %bb27, %bb26, %bb24, %bb20, %bb9, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb9 ], [ -1, %bb20 ], [ %fd_idx.0, %bb27 ], [ %fd_idx.0, %bb26 ], [ %fd_idx.0, %bb24 ]
  ret i32 %.0, !dbg !8720
}

define i32 @symlink(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !8752
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8754
  br i1 %1, label %bb1, label %bb, !dbg !8754

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31309, i64 0, i64 0)) nounwind, !dbg !8755
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8756
  store i32 2, i32* %2, align 4, !dbg !8756
  br label %bb6, !dbg !8757

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !8758
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !8760
  br i1 %4, label %bb3, label %bb2, !dbg !8760

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31309, i64 0, i64 0)) nounwind, !dbg !8761
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8762
  store i32 2, i32* %5, align 4, !dbg !8762
  br label %bb6, !dbg !8763

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !8764
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !8764
  %8 = inttoptr i64 %7 to i8*, !dbg !8764
  %9 = icmp eq i8* %8, %newpath, !dbg !8767
  %10 = zext i1 %9 to i64, !dbg !8767
  tail call void @klee_assume(i64 %10) nounwind, !dbg !8767
  br label %bb.i, !dbg !8768

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !8769
  %13 = load i8* @UseConcretePath, align 1, !dbg !8770
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !8770
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8770

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !8770
  %15 = icmp eq i32 %14, 0, !dbg !8770
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !8770

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8771
  br label %__concretize_string.exit, !dbg !8771

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8772
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8772
  br label %bb13.i, !dbg !8772

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !8773
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !8773
  %19 = trunc i64 %18 to i8, !dbg !8773
  %20 = icmp eq i8 %19, %12, !dbg !8774
  %21 = zext i1 %20 to i64, !dbg !8774
  tail call void @klee_assume(i64 %21) nounwind, !dbg !8774
  store i8 %19, i8* %sc.0.i, align 1, !dbg !8775
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8775
  %23 = icmp eq i8 %19, 0, !dbg !8776
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !8776

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !8768
  br label %bb.i, !dbg !8768

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !8764
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !8764
  %27 = inttoptr i64 %26 to i8*, !dbg !8764
  %28 = icmp eq i8* %27, %oldpath, !dbg !8767
  %29 = zext i1 %28 to i64, !dbg !8767
  tail call void @klee_assume(i64 %29) nounwind, !dbg !8767
  br label %bb.i10, !dbg !8768

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !8769
  %32 = load i8* @UseConcretePath, align 1, !dbg !8770
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !8770
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !8770

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !8770
  %34 = icmp eq i32 %33, 0, !dbg !8770
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !8770

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !8771
  br label %__concretize_string.exit19, !dbg !8771

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !8772
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !8772
  br label %bb13.i18, !dbg !8772

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !8773
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !8773
  %38 = trunc i64 %37 to i8, !dbg !8773
  %39 = icmp eq i8 %38, %31, !dbg !8774
  %40 = zext i1 %39 to i64, !dbg !8774
  tail call void @klee_assume(i64 %40) nounwind, !dbg !8774
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !8775
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !8775
  %42 = icmp eq i8 %38, 0, !dbg !8776
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !8776

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !8768
  br label %bb.i10, !dbg !8768

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 88, i8* %oldpath, i8* %newpath) nounwind, !dbg !8766
  %45 = trunc i64 %44 to i32, !dbg !8766
  %46 = icmp eq i32 %45, -1, !dbg !8777
  br i1 %46, label %bb4, label %bb6, !dbg !8777

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !8778
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !8778
  store i32 %48, i32* %47, align 4, !dbg !8778
  br label %bb6, !dbg !8778

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !8757
}

define i32 @link(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !8779
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8781
  br i1 %1, label %bb1, label %bb, !dbg !8781

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32310, i64 0, i64 0)) nounwind, !dbg !8782
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8783
  store i32 2, i32* %2, align 4, !dbg !8783
  br label %bb6, !dbg !8784

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !8785
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !8787
  br i1 %4, label %bb3, label %bb2, !dbg !8787

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32310, i64 0, i64 0)) nounwind, !dbg !8788
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8789
  store i32 2, i32* %5, align 4, !dbg !8789
  br label %bb6, !dbg !8790

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !8791
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !8791
  %8 = inttoptr i64 %7 to i8*, !dbg !8791
  %9 = icmp eq i8* %8, %newpath, !dbg !8794
  %10 = zext i1 %9 to i64, !dbg !8794
  tail call void @klee_assume(i64 %10) nounwind, !dbg !8794
  br label %bb.i, !dbg !8795

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !8796
  %13 = load i8* @UseConcretePath, align 1, !dbg !8797
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !8797
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8797

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !8797
  %15 = icmp eq i32 %14, 0, !dbg !8797
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !8797

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8798
  br label %__concretize_string.exit, !dbg !8798

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8799
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8799
  br label %bb13.i, !dbg !8799

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !8800
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !8800
  %19 = trunc i64 %18 to i8, !dbg !8800
  %20 = icmp eq i8 %19, %12, !dbg !8801
  %21 = zext i1 %20 to i64, !dbg !8801
  tail call void @klee_assume(i64 %21) nounwind, !dbg !8801
  store i8 %19, i8* %sc.0.i, align 1, !dbg !8802
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8802
  %23 = icmp eq i8 %19, 0, !dbg !8803
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !8803

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !8795
  br label %bb.i, !dbg !8795

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !8791
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !8791
  %27 = inttoptr i64 %26 to i8*, !dbg !8791
  %28 = icmp eq i8* %27, %oldpath, !dbg !8794
  %29 = zext i1 %28 to i64, !dbg !8794
  tail call void @klee_assume(i64 %29) nounwind, !dbg !8794
  br label %bb.i10, !dbg !8795

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !8796
  %32 = load i8* @UseConcretePath, align 1, !dbg !8797
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !8797
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !8797

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !8797
  %34 = icmp eq i32 %33, 0, !dbg !8797
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !8797

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !8798
  br label %__concretize_string.exit19, !dbg !8798

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !8799
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !8799
  br label %bb13.i18, !dbg !8799

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !8800
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !8800
  %38 = trunc i64 %37 to i8, !dbg !8800
  %39 = icmp eq i8 %38, %31, !dbg !8801
  %40 = zext i1 %39 to i64, !dbg !8801
  tail call void @klee_assume(i64 %40) nounwind, !dbg !8801
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !8802
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !8802
  %42 = icmp eq i8 %38, 0, !dbg !8803
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !8803

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !8795
  br label %bb.i10, !dbg !8795

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 86, i8* %oldpath, i8* %newpath) nounwind, !dbg !8793
  %45 = trunc i64 %44 to i32, !dbg !8793
  %46 = icmp eq i32 %45, -1, !dbg !8804
  br i1 %46, label %bb4, label %bb6, !dbg !8804

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !8805
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !8805
  store i32 %48, i32* %47, align 4, !dbg !8805
  br label %bb6, !dbg !8805

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !8784
}

define i32 @futimesat(i32 %fd, i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8806
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8808
  br i1 %1, label %bb1, label %bb, !dbg !8808

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str33311, i64 0, i64 0)) nounwind, !dbg !8809
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8810
  store i32 2, i32* %2, align 4, !dbg !8810
  br label %bb12, !dbg !8811

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !8812
  br i1 %3, label %bb.i, label %bb6, !dbg !8812

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !8814
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !8815
  %6 = load i32* %5, align 4, !dbg !8815
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !8815
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !8815

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !8814
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !8816
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !8816
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !8816
  br i1 %11, label %bb5, label %bb3, !dbg !8816

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([55 x i8]* @.str34312, i64 0, i64 0)) nounwind, !dbg !8817
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !8818
  store i32 2, i32* %12, align 4, !dbg !8818
  br label %bb12, !dbg !8819

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !8820
  %14 = load i32* %13, align 8, !dbg !8820
  br label %bb6, !dbg !8820

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = icmp eq i8* %path, null, !dbg !8821
  br i1 %15, label %bb9, label %bb7, !dbg !8821

bb7:                                              ; preds = %bb6
  %16 = ptrtoint i8* %path to i64, !dbg !8822
  %17 = tail call i64 @klee_get_valuel(i64 %16) nounwind, !dbg !8822
  %18 = inttoptr i64 %17 to i8*, !dbg !8822
  %19 = icmp eq i8* %18, %path, !dbg !8824
  %20 = zext i1 %19 to i64, !dbg !8824
  tail call void @klee_assume(i64 %20) nounwind, !dbg !8824
  br label %bb.i14, !dbg !8825

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %18, %bb7 ], [ %sc.1.i, %bb13.i ]
  %21 = phi i32 [ 0, %bb7 ], [ %34, %bb13.i ]
  %22 = load i8* %sc.0.i, align 1, !dbg !8826
  %23 = load i8* @UseConcretePath, align 1, !dbg !8827
  %toBool3not.i = icmp eq i8 %23, 0, !dbg !8827
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8827

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %21, -1
  %24 = and i32 %tmp.i, %21, !dbg !8827
  %25 = icmp eq i32 %24, 0, !dbg !8827
  br i1 %25, label %bb8.i, label %bb12.i, !dbg !8827

bb8.i:                                            ; preds = %bb7.i
  switch i8 %22, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8828
  br label %bb9, !dbg !8828

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8829
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8829
  br label %bb13.i, !dbg !8829

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %27 = sext i8 %22 to i64, !dbg !8830
  %28 = tail call i64 @klee_get_valuel(i64 %27) nounwind, !dbg !8830
  %29 = trunc i64 %28 to i8, !dbg !8830
  %30 = icmp eq i8 %29, %22, !dbg !8831
  %31 = zext i1 %30 to i64, !dbg !8831
  tail call void @klee_assume(i64 %31) nounwind, !dbg !8831
  store i8 %29, i8* %sc.0.i, align 1, !dbg !8832
  %32 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8832
  %33 = icmp eq i8 %29, 0, !dbg !8833
  br i1 %33, label %bb9, label %bb13.i, !dbg !8833

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %32, %bb12.i ], [ %26, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %34 = add i32 %21, 1, !dbg !8825
  br label %bb.i14, !dbg !8825

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.64.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %35 = sext i32 %fd_addr.0 to i64, !dbg !8821
  %36 = tail call i64 (i64, ...)* @syscall(i64 261, i64 %35, i8* %iftmp.64.0, %struct.timespec* %times) nounwind, !dbg !8821
  %37 = trunc i64 %36 to i32, !dbg !8821
  %38 = icmp eq i32 %37, -1, !dbg !8834
  br i1 %38, label %bb10, label %bb12, !dbg !8834

bb10:                                             ; preds = %bb9
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !8835
  %40 = tail call i32 @klee_get_errno() nounwind, !dbg !8835
  store i32 %40, i32* %39, align 4, !dbg !8835
  br label %bb12, !dbg !8835

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %37, %bb9 ]
  ret i32 %.0, !dbg !8811
}

define i32 @unlinkat(i32 %fd, i8* %path, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8836
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8838
  br i1 %1, label %bb1, label %bb, !dbg !8838

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str35313, i64 0, i64 0)) nounwind, !dbg !8839
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8840
  store i32 2, i32* %2, align 4, !dbg !8840
  br label %bb12, !dbg !8841

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !8842
  br i1 %3, label %bb.i, label %bb6, !dbg !8842

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !8844
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !8845
  %6 = load i32* %5, align 4, !dbg !8845
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !8845
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !8845

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !8844
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !8846
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !8846
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !8846
  br i1 %11, label %bb5, label %bb3, !dbg !8846

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str36314, i64 0, i64 0)) nounwind, !dbg !8847
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !8848
  store i32 2, i32* %12, align 4, !dbg !8848
  br label %bb12, !dbg !8849

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !8850
  %14 = load i32* %13, align 8, !dbg !8850
  br label %bb6, !dbg !8850

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !8851
  %16 = icmp eq i8* %path, null, !dbg !8851
  br i1 %16, label %bb9, label %bb7, !dbg !8851

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !8852
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !8852
  %19 = inttoptr i64 %18 to i8*, !dbg !8852
  %20 = icmp eq i8* %19, %path, !dbg !8854
  %21 = zext i1 %20 to i64, !dbg !8854
  tail call void @klee_assume(i64 %21) nounwind, !dbg !8854
  br label %bb.i14, !dbg !8855

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !8856
  %24 = load i8* @UseConcretePath, align 1, !dbg !8857
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !8857
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8857

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !8857
  %26 = icmp eq i32 %25, 0, !dbg !8857
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !8857

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8858
  br label %bb9, !dbg !8858

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8859
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8859
  br label %bb13.i, !dbg !8859

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !8860
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !8860
  %30 = trunc i64 %29 to i8, !dbg !8860
  %31 = icmp eq i8 %30, %23, !dbg !8861
  %32 = zext i1 %31 to i64, !dbg !8861
  tail call void @klee_assume(i64 %32) nounwind, !dbg !8861
  store i8 %30, i8* %sc.0.i, align 1, !dbg !8862
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8862
  %34 = icmp eq i8 %30, 0, !dbg !8863
  br i1 %34, label %bb9, label %bb13.i, !dbg !8863

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !8855
  br label %bb.i14, !dbg !8855

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.63.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !8851
  %37 = tail call i64 (i64, ...)* @syscall(i64 263, i64 %36, i8* %iftmp.63.0, i64 %15) nounwind, !dbg !8851
  %38 = trunc i64 %37 to i32, !dbg !8851
  %39 = icmp eq i32 %38, -1, !dbg !8864
  br i1 %39, label %bb10, label %bb12, !dbg !8864

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !8865
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !8865
  store i32 %41, i32* %40, align 4, !dbg !8865
  br label %bb12, !dbg !8865

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !8841
}

define i32 @fstatat(i32 %fd, i8* %path, %struct.stat* %buf, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8866
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8868
  br i1 %1, label %bb1, label %bb, !dbg !8868

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str37315, i64 0, i64 0)) nounwind, !dbg !8869
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8870
  store i32 2, i32* %2, align 4, !dbg !8870
  br label %bb12, !dbg !8871

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !8872
  br i1 %3, label %bb.i, label %bb6, !dbg !8872

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !8874
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !8875
  %6 = load i32* %5, align 4, !dbg !8875
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !8875
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !8875

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !8874
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !8876
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !8876
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !8876
  br i1 %11, label %bb5, label %bb3, !dbg !8876

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([53 x i8]* @.str38316, i64 0, i64 0)) nounwind, !dbg !8877
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !8878
  store i32 2, i32* %12, align 4, !dbg !8878
  br label %bb12, !dbg !8879

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !8880
  %14 = load i32* %13, align 8, !dbg !8880
  br label %bb6, !dbg !8880

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !8881
  %16 = icmp eq i8* %path, null, !dbg !8881
  br i1 %16, label %bb9, label %bb7, !dbg !8881

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !8882
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !8882
  %19 = inttoptr i64 %18 to i8*, !dbg !8882
  %20 = icmp eq i8* %19, %path, !dbg !8884
  %21 = zext i1 %20 to i64, !dbg !8884
  tail call void @klee_assume(i64 %21) nounwind, !dbg !8884
  br label %bb.i14, !dbg !8885

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !8886
  %24 = load i8* @UseConcretePath, align 1, !dbg !8887
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !8887
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8887

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !8887
  %26 = icmp eq i32 %25, 0, !dbg !8887
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !8887

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8888
  br label %bb9, !dbg !8888

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8889
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8889
  br label %bb13.i, !dbg !8889

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !8890
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !8890
  %30 = trunc i64 %29 to i8, !dbg !8890
  %31 = icmp eq i8 %30, %23, !dbg !8891
  %32 = zext i1 %31 to i64, !dbg !8891
  tail call void @klee_assume(i64 %32) nounwind, !dbg !8891
  store i8 %30, i8* %sc.0.i, align 1, !dbg !8892
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8892
  %34 = icmp eq i8 %30, 0, !dbg !8893
  br i1 %34, label %bb9, label %bb13.i, !dbg !8893

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !8885
  br label %bb.i14, !dbg !8885

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.62.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !8881
  %37 = tail call i64 (i64, ...)* @syscall(i64 262, i64 %36, i8* %iftmp.62.0, %struct.stat* %buf, i64 %15) nounwind, !dbg !8881
  %38 = trunc i64 %37 to i32, !dbg !8881
  %39 = icmp eq i32 %38, -1, !dbg !8894
  br i1 %39, label %bb10, label %bb12, !dbg !8894

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !8895
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !8895
  store i32 %41, i32* %40, align 4, !dbg !8895
  br label %bb12, !dbg !8895

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !8871
}

define i32 @lchown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8896
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8898
  br i1 %1, label %bb1, label %bb, !dbg !8898

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4282, i64 0, i64 0)) nounwind, !dbg !8899
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8901
  store i32 1, i32* %2, align 4, !dbg !8901
  br label %bb4, !dbg !8900

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8902
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8902
  %5 = inttoptr i64 %4 to i8*, !dbg !8902
  %6 = icmp eq i8* %5, %path, !dbg !8905
  %7 = zext i1 %6 to i64, !dbg !8905
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8905
  br label %bb.i, !dbg !8906

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8907
  %10 = load i8* @UseConcretePath, align 1, !dbg !8908
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8908
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8908

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8908
  %12 = icmp eq i32 %11, 0, !dbg !8908
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8908

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8909
  br label %__concretize_string.exit, !dbg !8909

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8910
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8910
  br label %bb13.i, !dbg !8910

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8911
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8911
  %16 = trunc i64 %15 to i8, !dbg !8911
  %17 = icmp eq i8 %16, %9, !dbg !8912
  %18 = zext i1 %17 to i64, !dbg !8912
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8912
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8913
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8913
  %20 = icmp eq i8 %16, 0, !dbg !8914
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8914

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8906
  br label %bb.i, !dbg !8906

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 92, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !8904
  %23 = trunc i64 %22 to i32, !dbg !8904
  %24 = icmp eq i32 %23, -1, !dbg !8915
  br i1 %24, label %bb2, label %bb4, !dbg !8915

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8916
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8916
  store i32 %26, i32* %25, align 4, !dbg !8916
  br label %bb4, !dbg !8916

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8900
}

define i32 @chown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8917
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8919
  br i1 %1, label %bb1, label %bb, !dbg !8919

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4282, i64 0, i64 0)) nounwind, !dbg !8920
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8922
  store i32 1, i32* %2, align 4, !dbg !8922
  br label %bb4, !dbg !8921

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8923
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8923
  %5 = inttoptr i64 %4 to i8*, !dbg !8923
  %6 = icmp eq i8* %5, %path, !dbg !8926
  %7 = zext i1 %6 to i64, !dbg !8926
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8926
  br label %bb.i, !dbg !8927

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8928
  %10 = load i8* @UseConcretePath, align 1, !dbg !8929
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8929
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8929

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8929
  %12 = icmp eq i32 %11, 0, !dbg !8929
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8929

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8930
  br label %__concretize_string.exit, !dbg !8930

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8931
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8931
  br label %bb13.i, !dbg !8931

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8932
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8932
  %16 = trunc i64 %15 to i8, !dbg !8932
  %17 = icmp eq i8 %16, %9, !dbg !8933
  %18 = zext i1 %17 to i64, !dbg !8933
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8933
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8934
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8934
  %20 = icmp eq i8 %16, 0, !dbg !8935
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8935

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8927
  br label %bb.i, !dbg !8927

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 94, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !8925
  %23 = trunc i64 %22 to i32, !dbg !8925
  %24 = icmp eq i32 %23, -1, !dbg !8936
  br i1 %24, label %bb2, label %bb4, !dbg !8936

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8937
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8937
  store i32 %26, i32* %25, align 4, !dbg !8937
  br label %bb4, !dbg !8937

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8921
}

define i32 @chdir(i8* %path) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8938
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8940
  br i1 %1, label %bb1, label %bb, !dbg !8940

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5283, i64 0, i64 0)) nounwind, !dbg !8941
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8942
  store i32 2, i32* %2, align 4, !dbg !8942
  br label %bb4, !dbg !8943

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8944
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8944
  %5 = inttoptr i64 %4 to i8*, !dbg !8944
  %6 = icmp eq i8* %5, %path, !dbg !8947
  %7 = zext i1 %6 to i64, !dbg !8947
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8947
  br label %bb.i, !dbg !8948

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8949
  %10 = load i8* @UseConcretePath, align 1, !dbg !8950
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8950
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8950

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8950
  %12 = icmp eq i32 %11, 0, !dbg !8950
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8950

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8951
  br label %__concretize_string.exit, !dbg !8951

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8952
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8952
  br label %bb13.i, !dbg !8952

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8953
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8953
  %16 = trunc i64 %15 to i8, !dbg !8953
  %17 = icmp eq i8 %16, %9, !dbg !8954
  %18 = zext i1 %17 to i64, !dbg !8954
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8954
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8955
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8955
  %20 = icmp eq i8 %16, 0, !dbg !8956
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8956

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8948
  br label %bb.i, !dbg !8948

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 80, i8* %path) nounwind, !dbg !8946
  %23 = trunc i64 %22 to i32, !dbg !8946
  %24 = icmp eq i32 %23, -1, !dbg !8957
  br i1 %24, label %bb2, label %bb4, !dbg !8957

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8958
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8958
  store i32 %26, i32* %25, align 4, !dbg !8958
  br label %bb4, !dbg !8958

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8943
}

define i32 @euidaccess(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8959
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8961
  br i1 %1, label %bb1, label %bb4, !dbg !8961

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !8962
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !8962
  %4 = inttoptr i64 %3 to i8*, !dbg !8962
  %5 = icmp eq i8* %4, %pathname, !dbg !8965
  %6 = zext i1 %5 to i64, !dbg !8965
  tail call void @klee_assume(i64 %6) nounwind, !dbg !8965
  br label %bb.i, !dbg !8966

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !8967
  %9 = load i8* @UseConcretePath, align 1, !dbg !8968
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !8968
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8968

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !8968
  %11 = icmp eq i32 %10, 0, !dbg !8968
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !8968

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8969
  br label %__concretize_string.exit, !dbg !8969

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8970
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8970
  br label %bb13.i, !dbg !8970

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !8971
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !8971
  %15 = trunc i64 %14 to i8, !dbg !8971
  %16 = icmp eq i8 %15, %8, !dbg !8972
  %17 = zext i1 %16 to i64, !dbg !8972
  tail call void @klee_assume(i64 %17) nounwind, !dbg !8972
  store i8 %15, i8* %sc.0.i, align 1, !dbg !8973
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8973
  %19 = icmp eq i8 %15, 0, !dbg !8974
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !8974

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !8966
  br label %bb.i, !dbg !8966

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !8964
  %22 = trunc i64 %21 to i32, !dbg !8964
  %23 = icmp eq i32 %22, -1, !dbg !8975
  br i1 %23, label %bb2, label %bb4, !dbg !8975

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !8976
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !8976
  store i32 %25, i32* %24, align 4, !dbg !8976
  br label %bb4, !dbg !8976

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8977
}

define i32 @access(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8978
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8980
  br i1 %1, label %bb1, label %bb4, !dbg !8980

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !8981
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !8981
  %4 = inttoptr i64 %3 to i8*, !dbg !8981
  %5 = icmp eq i8* %4, %pathname, !dbg !8984
  %6 = zext i1 %5 to i64, !dbg !8984
  tail call void @klee_assume(i64 %6) nounwind, !dbg !8984
  br label %bb.i, !dbg !8985

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !8986
  %9 = load i8* @UseConcretePath, align 1, !dbg !8987
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !8987
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8987

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !8987
  %11 = icmp eq i32 %10, 0, !dbg !8987
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !8987

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8988
  br label %__concretize_string.exit, !dbg !8988

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8989
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8989
  br label %bb13.i, !dbg !8989

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !8990
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !8990
  %15 = trunc i64 %14 to i8, !dbg !8990
  %16 = icmp eq i8 %15, %8, !dbg !8991
  %17 = zext i1 %16 to i64, !dbg !8991
  tail call void @klee_assume(i64 %17) nounwind, !dbg !8991
  store i8 %15, i8* %sc.0.i, align 1, !dbg !8992
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8992
  %19 = icmp eq i8 %15, 0, !dbg !8993
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !8993

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !8985
  br label %bb.i, !dbg !8985

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !8983
  %22 = trunc i64 %21 to i32, !dbg !8983
  %23 = icmp eq i32 %22, -1, !dbg !8994
  br i1 %23, label %bb2, label %bb4, !dbg !8994

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !8995
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !8995
  store i32 %25, i32* %24, align 4, !dbg !8995
  br label %bb4, !dbg !8995

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8996
}

define i8* @getcwd(i8* %buf, i64 %size) nounwind {
entry:
  %0 = load i32* @n_calls.7064, align 4, !dbg !8997
  %1 = add nsw i32 %0, 1, !dbg !8997
  store i32 %1, i32* @n_calls.7064, align 4, !dbg !8997
  %2 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8998
  %3 = icmp eq i32 %2, 0, !dbg !8998
  br i1 %3, label %bb2, label %bb, !dbg !8998

bb:                                               ; preds = %entry
  %4 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 8, !dbg !8998
  %5 = load i32* %4, align 4, !dbg !8998
  %6 = icmp eq i32 %5, %1, !dbg !8998
  br i1 %6, label %bb1, label %bb2, !dbg !8998

bb1:                                              ; preds = %bb
  %7 = add i32 %2, -1, !dbg !8999
  store i32 %7, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8999
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9000
  store i32 34, i32* %8, align 4, !dbg !9000
  br label %bb9, !dbg !9001

bb2:                                              ; preds = %bb, %entry
  %9 = icmp eq i8* %buf, null, !dbg !9002
  br i1 %9, label %bb3, label %bb6, !dbg !9002

bb3:                                              ; preds = %bb2
  %10 = icmp eq i64 %size, 0, !dbg !9003
  %size_addr.0 = select i1 %10, i64 1024, i64 %size
  %11 = tail call noalias i8* @malloc(i64 %size_addr.0) nounwind, !dbg !9004
  br label %bb6, !dbg !9004

bb6:                                              ; preds = %bb3, %bb2
  %size_addr.1 = phi i64 [ %size_addr.0, %bb3 ], [ %size, %bb2 ]
  %buf_addr.0 = phi i8* [ %11, %bb3 ], [ %buf, %bb2 ]
  %12 = ptrtoint i8* %buf_addr.0 to i64, !dbg !9005
  %13 = tail call i64 @klee_get_valuel(i64 %12) nounwind, !dbg !9005
  %14 = inttoptr i64 %13 to i8*, !dbg !9005
  %15 = icmp eq i8* %14, %buf_addr.0, !dbg !9007
  %16 = zext i1 %15 to i64, !dbg !9007
  tail call void @klee_assume(i64 %16) nounwind, !dbg !9007
  %17 = tail call i64 @klee_get_valuel(i64 %size_addr.1) nounwind, !dbg !9008
  %18 = icmp eq i64 %17, %size_addr.1, !dbg !9010
  %19 = zext i1 %18 to i64, !dbg !9010
  tail call void @klee_assume(i64 %19) nounwind, !dbg !9010
  tail call void @klee_check_memory_access(i8* %14, i64 %17) nounwind, !dbg !9011
  %20 = tail call i64 (i64, ...)* @syscall(i64 79, i8* %14, i64 %17) nounwind, !dbg !9012
  %21 = trunc i64 %20 to i32, !dbg !9012
  %22 = icmp eq i32 %21, -1, !dbg !9013
  br i1 %22, label %bb7, label %bb9, !dbg !9013

bb7:                                              ; preds = %bb6
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9014
  %24 = tail call i32 @klee_get_errno() nounwind, !dbg !9014
  store i32 %24, i32* %23, align 4, !dbg !9014
  br label %bb9, !dbg !9015

bb9:                                              ; preds = %bb7, %bb6, %bb1
  %.0 = phi i8* [ null, %bb1 ], [ null, %bb7 ], [ %14, %bb6 ]
  ret i8* %.0, !dbg !9001
}

define i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9016
  br i1 %0, label %bb.i, label %__get_file.exit.thread, !dbg !9016

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9018
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9019
  %3 = load i32* %2, align 4, !dbg !9019
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9019
  br i1 %toBool.i, label %__get_file.exit.thread, label %__get_file.exit, !dbg !9019

__get_file.exit.thread:                           ; preds = %bb.i, %entry
  %5 = load i32* @n_calls.6554, align 4, !dbg !9020
  %6 = add nsw i32 %5, 1, !dbg !9020
  store i32 %6, i32* @n_calls.6554, align 4, !dbg !9020
  br label %bb

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9018
  %8 = load i32* @n_calls.6554, align 4, !dbg !9020
  %9 = add nsw i32 %8, 1, !dbg !9020
  store i32 %9, i32* @n_calls.6554, align 4, !dbg !9020
  %10 = icmp eq %struct.exe_file_t* %7, null, !dbg !9021
  br i1 %10, label %bb, label %bb1, !dbg !9021

bb:                                               ; preds = %__get_file.exit, %__get_file.exit.thread
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !9022
  store i32 9, i32* %11, align 4, !dbg !9022
  br label %bb9, !dbg !9023

bb1:                                              ; preds = %__get_file.exit
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9024
  %13 = icmp eq i32 %12, 0, !dbg !9024
  br i1 %13, label %bb4, label %bb2, !dbg !9024

bb2:                                              ; preds = %bb1
  %14 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !9024
  %15 = load i32* %14, align 4, !dbg !9024
  %16 = icmp eq i32 %15, %9, !dbg !9024
  br i1 %16, label %bb3, label %bb4, !dbg !9024

bb3:                                              ; preds = %bb2
  %17 = add i32 %12, -1, !dbg !9025
  store i32 %17, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9025
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9026
  store i32 5, i32* %18, align 4, !dbg !9026
  br label %bb9, !dbg !9027

bb4:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9028
  %20 = load %struct.exe_disk_file_t** %19, align 8, !dbg !9028
  %21 = icmp eq %struct.exe_disk_file_t* %20, null, !dbg !9028
  br i1 %21, label %bb6, label %bb5, !dbg !9028

bb5:                                              ; preds = %bb4
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str39317, i64 0, i64 0)) nounwind, !dbg !9029
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !9030
  store i32 5, i32* %22, align 4, !dbg !9030
  br label %bb9, !dbg !9031

bb6:                                              ; preds = %bb4
  %23 = tail call i64 @klee_get_valuel(i64 %length) nounwind, !dbg !9032
  %24 = icmp eq i64 %23, %length, !dbg !9034
  %25 = zext i1 %24 to i64, !dbg !9034
  tail call void @klee_assume(i64 %25) nounwind, !dbg !9034
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9035
  %27 = load i32* %26, align 8, !dbg !9035
  %28 = tail call i64 (i64, ...)* @syscall(i64 77, i32 %27, i64 %23) nounwind, !dbg !9035
  %29 = trunc i64 %28 to i32, !dbg !9035
  %30 = icmp eq i32 %29, -1, !dbg !9036
  br i1 %30, label %bb7, label %bb9, !dbg !9036

bb7:                                              ; preds = %bb6
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !9037
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !9037
  store i32 %32, i32* %31, align 4, !dbg !9037
  br label %bb9, !dbg !9037

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb5 ], [ -1, %bb7 ], [ %29, %bb6 ]
  ret i32 %.0, !dbg !9023
}

define i64 @__fd_lseek(i32 %fd, i64 %offset, i32 %whence) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9038
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !9038

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9040
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9041
  %3 = load i32* %2, align 4, !dbg !9041
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9041
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !9041

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9040
  br label %__get_file.exit, !dbg !9042

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = tail call i64 @klee_get_valuel(i64 %offset) nounwind, !dbg !9043
  %7 = icmp eq i64 %6, %offset, !dbg !9045
  %8 = zext i1 %7 to i64, !dbg !9045
  tail call void @klee_assume(i64 %8) nounwind, !dbg !9045
  %9 = icmp eq %struct.exe_file_t* %.0.i, null, !dbg !9046
  br i1 %9, label %bb, label %bb1, !dbg !9046

bb:                                               ; preds = %__get_file.exit
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !9047
  store i32 9, i32* %10, align 4, !dbg !9047
  br label %bb19, !dbg !9048

bb1:                                              ; preds = %__get_file.exit
  %11 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !9049
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !9049
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !9049
  br i1 %13, label %bb2, label %bb11, !dbg !9049

bb2:                                              ; preds = %bb1
  %14 = icmp eq i32 %whence, 0, !dbg !9050
  br i1 %14, label %bb3, label %bb4, !dbg !9050

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9051
  %16 = load i32* %15, align 8, !dbg !9051
  %17 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %16, i64 %6, i32 0) nounwind, !dbg !9051
  br label %bb8, !dbg !9051

bb4:                                              ; preds = %bb2
  %18 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9052
  %19 = load i64* %18, align 8, !dbg !9052
  %20 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9052
  %21 = load i32* %20, align 8, !dbg !9052
  %22 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %21, i64 %19, i32 0) nounwind, !dbg !9052
  %23 = icmp eq i64 %22, -1, !dbg !9053
  br i1 %23, label %bb9, label %bb5, !dbg !9053

bb5:                                              ; preds = %bb4
  %24 = load i64* %18, align 8, !dbg !9054
  %25 = icmp eq i64 %24, %22, !dbg !9054
  br i1 %25, label %bb7, label %bb6, !dbg !9054

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str40318, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 709, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.6098, i64 0, i64 0)) n
  unreachable, !dbg !9054

bb7:                                              ; preds = %bb5
  %26 = load i32* %20, align 8, !dbg !9055
  %27 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %26, i64 %6, i32 %whence) nounwind, !dbg !9055
  br label %bb8, !dbg !9055

bb8:                                              ; preds = %bb7, %bb3
  %new_off.0 = phi i64 [ %17, %bb3 ], [ %27, %bb7 ]
  %28 = icmp eq i64 %new_off.0, -1, !dbg !9056
  br i1 %28, label %bb9, label %bb10, !dbg !9056

bb9:                                              ; preds = %bb8, %bb4
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !9057
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !9057
  store i32 %30, i32* %29, align 4, !dbg !9057
  br label %bb19, !dbg !9058

bb10:                                             ; preds = %bb8
  %31 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9059
  store i64 %new_off.0, i64* %31, align 8, !dbg !9059
  br label %bb19, !dbg !9060

bb11:                                             ; preds = %bb1
  switch i32 %whence, label %bb15 [
    i32 0, label %bb16
    i32 1, label %bb13
    i32 2, label %bb14
  ], !dbg !9061

bb13:                                             ; preds = %bb11
  %32 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9062
  %33 = load i64* %32, align 8, !dbg !9062
  %34 = add nsw i64 %33, %6, !dbg !9062
  br label %bb16, !dbg !9062

bb14:                                             ; preds = %bb11
  %35 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 0, !dbg !9063
  %36 = load i32* %35, align 8, !dbg !9063
  %37 = zext i32 %36 to i64, !dbg !9063
  %38 = add nsw i64 %37, %6, !dbg !9063
  br label %bb16, !dbg !9063

bb15:                                             ; preds = %bb11
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !9064
  store i32 22, i32* %39, align 4, !dbg !9064
  br label %bb19, !dbg !9065

bb16:                                             ; preds = %bb14, %bb13, %bb11
  %new_off.1 = phi i64 [ %38, %bb14 ], [ %34, %bb13 ], [ %6, %bb11 ]
  %40 = icmp slt i64 %new_off.1, 0, !dbg !9066
  br i1 %40, label %bb17, label %bb18, !dbg !9066

bb17:                                             ; preds = %bb16
  %41 = tail call i32* @__errno_location() nounwind readnone, !dbg !9067
  store i32 22, i32* %41, align 4, !dbg !9067
  br label %bb19, !dbg !9068

bb18:                                             ; preds = %bb16
  %42 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9069
  store i64 %new_off.1, i64* %42, align 8, !dbg !9069
  br label %bb19, !dbg !9070

bb19:                                             ; preds = %bb18, %bb17, %bb15, %bb10, %bb9, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb9 ], [ %new_off.0, %bb10 ], [ -1, %bb15 ], [ -1, %bb17 ], [ %new_off.1, %bb18 ]
  ret i64 %.0, !dbg !9048
}

define i64 @pread(i32 %fd, i8* %buf, i64 %count, i64 %offset) nounwind {
entry:
  %0 = load i32* @n_calls.5974, align 4, !dbg !9071
  %1 = add nsw i32 %0, 1, !dbg !9071
  store i32 %1, i32* @n_calls.5974, align 4, !dbg !9071
  %2 = icmp eq i64 %count, 0, !dbg !9072
  br i1 %2, label %bb19, label %bb1, !dbg !9072

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9073
  br i1 %3, label %bb2, label %bb3, !dbg !9073

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9074
  store i32 14, i32* %4, align 4, !dbg !9074
  br label %bb19, !dbg !9075

bb3:                                              ; preds = %bb1
  %5 = icmp slt i64 %offset, 0, !dbg !9076
  br i1 %5, label %bb4, label %bb5, !dbg !9076

bb4:                                              ; preds = %bb3
  %6 = tail call i32* @__errno_location() nounwind readnone, !dbg !9077
  store i32 22, i32* %6, align 4, !dbg !9077
  br label %bb19, !dbg !9078

bb5:                                              ; preds = %bb3
  %7 = icmp ult i32 %fd, 32, !dbg !9079
  br i1 %7, label %bb.i, label %bb6, !dbg !9079

bb.i:                                             ; preds = %bb5
  %8 = sext i32 %fd to i64, !dbg !9081
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 1, !dbg !9082
  %10 = load i32* %9, align 4, !dbg !9082
  %11 = and i32 %10, 1
  %toBool.i = icmp eq i32 %11, 0, !dbg !9082
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9082

__get_file.exit:                                  ; preds = %bb.i
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, !dbg !9081
  %13 = icmp eq %struct.exe_file_t* %12, null, !dbg !9083
  br i1 %13, label %bb6, label %bb7, !dbg !9083

bb6:                                              ; preds = %__get_file.exit, %bb.i, %bb5
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !9084
  store i32 9, i32* %14, align 4, !dbg !9084
  br label %bb19, !dbg !9085

bb7:                                              ; preds = %__get_file.exit
  %15 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9086
  %16 = icmp eq i32 %15, 0, !dbg !9086
  br i1 %16, label %bb10, label %bb8, !dbg !9086

bb8:                                              ; preds = %bb7
  %17 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9086
  %18 = load i32* %17, align 4, !dbg !9086
  %19 = icmp eq i32 %18, %1, !dbg !9086
  br i1 %19, label %bb9, label %bb10, !dbg !9086

bb9:                                              ; preds = %bb8
  %20 = add i32 %15, -1, !dbg !9087
  store i32 %20, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9087
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !9088
  store i32 5, i32* %21, align 4, !dbg !9088
  br label %bb19, !dbg !9089

bb10:                                             ; preds = %bb8, %bb7
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 3, !dbg !9090
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !9090
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !9090
  br i1 %24, label %bb11, label %bb14, !dbg !9090

bb11:                                             ; preds = %bb10
  %25 = ptrtoint i8* %buf to i64, !dbg !9091
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9091
  %27 = inttoptr i64 %26 to i8*, !dbg !9091
  %28 = icmp eq i8* %27, %buf, !dbg !9093
  %29 = zext i1 %28 to i64, !dbg !9093
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9093
  %30 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9094
  %31 = icmp eq i64 %30, %count, !dbg !9096
  %32 = zext i1 %31 to i64, !dbg !9096
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9096
  tail call void @klee_check_memory_access(i8* %27, i64 %30) nounwind, !dbg !9097
  %33 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 0, !dbg !9098
  %34 = load i32* %33, align 8, !dbg !9098
  %35 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %34, i8* %27, i64 %30, i64 %offset) nounwind, !dbg !9098
  %36 = trunc i64 %35 to i32, !dbg !9098
  %37 = icmp eq i32 %36, -1, !dbg !9099
  br i1 %37, label %bb12, label %bb13, !dbg !9099

bb12:                                             ; preds = %bb11
  %38 = tail call i32* @__errno_location() nounwind readnone, !dbg !9100
  %39 = tail call i32 @klee_get_errno() nounwind, !dbg !9100
  store i32 %39, i32* %38, align 4, !dbg !9100
  br label %bb19, !dbg !9101

bb13:                                             ; preds = %bb11
  %40 = sext i32 %36 to i64, !dbg !9102
  br label %bb19, !dbg !9102

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 0, !dbg !9103
  %42 = load i32* %41, align 8, !dbg !9103
  %43 = zext i32 %42 to i64, !dbg !9103
  %44 = icmp slt i64 %43, %offset, !dbg !9103
  br i1 %44, label %bb19, label %bb16, !dbg !9103

bb16:                                             ; preds = %bb14
  %45 = add i64 %offset, %count, !dbg !9104
  %46 = sub nsw i64 %43, %offset, !dbg !9105
  %47 = icmp ugt i64 %45, %43, !dbg !9104
  %.count = select i1 %47, i64 %46, i64 %count
  %48 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 1, !dbg !9106
  %49 = load i8** %48, align 8, !dbg !9106
  %50 = getelementptr inbounds i8* %49, i64 %offset, !dbg !9106
  %51 = call i8* @memcpy(i8* %buf, i8* %50, i64 %.count)
  br label %bb19, !dbg !9107

bb19:                                             ; preds = %bb16, %bb14, %bb13, %bb12, %bb9, %bb6, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb9 ], [ -1, %bb12 ], [ %40, %bb13 ], [ %.count, %bb16 ], [ 0, %entry ], [ 0, %bb14 ]
  ret i64 %.0, !dbg !9108
}

define i64 @read(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.5898, align 4, !dbg !9109
  %1 = add nsw i32 %0, 1, !dbg !9109
  store i32 %1, i32* @n_calls.5898, align 4, !dbg !9109
  %2 = icmp eq i64 %count, 0, !dbg !9110
  br i1 %2, label %bb34, label %bb1, !dbg !9110

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9111
  br i1 %3, label %bb2, label %bb3, !dbg !9111

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9112
  store i32 14, i32* %4, align 4, !dbg !9112
  br label %bb34, !dbg !9113

bb3:                                              ; preds = %bb1
  %5 = icmp ult i32 %fd, 32, !dbg !9114
  br i1 %5, label %bb.i, label %bb4, !dbg !9114

bb.i:                                             ; preds = %bb3
  %6 = sext i32 %fd to i64, !dbg !9116
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9117
  %8 = load i32* %7, align 4, !dbg !9117
  %9 = and i32 %8, 1
  %toBool.i = icmp eq i32 %9, 0, !dbg !9117
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !9117

__get_file.exit:                                  ; preds = %bb.i
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !9116
  %11 = icmp eq %struct.exe_file_t* %10, null, !dbg !9118
  br i1 %11, label %bb4, label %bb5, !dbg !9118

bb4:                                              ; preds = %__get_file.exit, %bb.i, %bb3
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9119
  store i32 9, i32* %12, align 4, !dbg !9119
  br label %bb34, !dbg !9120

bb5:                                              ; preds = %__get_file.exit
  %13 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9121
  %14 = icmp eq i32 %13, 0, !dbg !9121
  br i1 %14, label %bb8, label %bb6, !dbg !9121

bb6:                                              ; preds = %bb5
  %15 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9121
  %16 = load i32* %15, align 4, !dbg !9121
  %17 = icmp eq i32 %16, %1, !dbg !9121
  br i1 %17, label %bb7, label %bb8, !dbg !9121

bb7:                                              ; preds = %bb6
  %18 = add i32 %13, -1, !dbg !9122
  store i32 %18, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9122
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !9123
  store i32 5, i32* %19, align 4, !dbg !9123
  br label %bb34, !dbg !9124

bb8:                                              ; preds = %bb6, %bb5
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9125
  %21 = load %struct.exe_disk_file_t** %20, align 8, !dbg !9125
  %22 = icmp eq %struct.exe_disk_file_t* %21, null, !dbg !9125
  br i1 %22, label %bb9, label %bb27, !dbg !9125

bb9:                                              ; preds = %bb8
  %23 = ptrtoint i8* %buf to i64, !dbg !9126
  %24 = tail call i64 @klee_get_valuel(i64 %23) nounwind, !dbg !9126
  %25 = inttoptr i64 %24 to i8*, !dbg !9126
  %26 = icmp eq i8* %25, %buf, !dbg !9128
  %27 = zext i1 %26 to i64, !dbg !9128
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9128
  %28 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9129
  %29 = icmp eq i64 %28, %count, !dbg !9131
  %30 = zext i1 %29 to i64, !dbg !9131
  tail call void @klee_assume(i64 %30) nounwind, !dbg !9131
  tail call void @klee_check_memory_access(i8* %25, i64 %28) nounwind, !dbg !9132
  %31 = load i32* %7, align 4, !dbg !9133
  %32 = and i32 %31, 16, !dbg !9133
  %33 = icmp eq i32 %32, 0, !dbg !9133
  br i1 %33, label %bb13, label %bb10, !dbg !9133

bb10:                                             ; preds = %bb9
  %34 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9133
  %35 = icmp eq i32 %34, 0, !dbg !9133
  br i1 %35, label %bb13, label %bb11, !dbg !9133

bb11:                                             ; preds = %bb10
  %36 = tail call noalias i8* @malloc(i64 %28) nounwind, !dbg !9134
  %37 = icmp eq i8* %36, null, !dbg !9135
  br i1 %37, label %bb12, label %bb13, !dbg !9135

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21299, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9136

bb13:                                             ; preds = %bb11, %bb10, %bb9
  %incoming.0 = phi i8* [ %36, %bb11 ], [ %25, %bb10 ], [ %25, %bb9 ]
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9137
  %39 = load i32* %38, align 8, !dbg !9137
  %40 = icmp eq i32 %39, 0, !dbg !9137
  br i1 %40, label %bb15, label %bb14, !dbg !9137

bb14:                                             ; preds = %bb13
  %41 = load i32* %7, align 4, !dbg !9137
  %42 = and i32 %41, 16, !dbg !9137
  %43 = icmp eq i32 %42, 0, !dbg !9137
  br i1 %43, label %bb16, label %bb15, !dbg !9137

bb15:                                             ; preds = %bb14, %bb13
  %44 = tail call i64 (i64, ...)* @syscall(i64 0, i32 %39, i8* %incoming.0, i64 %28) nounwind, !dbg !9138
  br label %bb17, !dbg !9138

bb16:                                             ; preds = %bb14
  %45 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9139
  %46 = load i64* %45, align 8, !dbg !9139
  %47 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %39, i8* %25, i64 %28, i64 %46) nounwind, !dbg !9139
  br label %bb17, !dbg !9139

bb17:                                             ; preds = %bb16, %bb15
  %r.0.in = phi i64 [ %44, %bb15 ], [ %47, %bb16 ]
  %r.0 = trunc i64 %r.0.in to i32
  %48 = load i32* %7, align 4, !dbg !9140
  %49 = and i32 %48, 16, !dbg !9140
  %50 = icmp eq i32 %49, 0, !dbg !9140
  br i1 %50, label %bb22, label %bb18, !dbg !9140

bb18:                                             ; preds = %bb17
  %51 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9140
  %52 = icmp eq i32 %51, 0, !dbg !9140
  br i1 %52, label %bb22, label %bb19, !dbg !9140

bb19:                                             ; preds = %bb18
  %53 = icmp eq i32 %r.0, -1, !dbg !9141
  br i1 %53, label %bb21, label %bb20, !dbg !9141

bb20:                                             ; preds = %bb19
  tail call void @klee_make_symbolic(i8* %incoming.0, i64 %28, i8* getelementptr inbounds ([10 x i8]* @.str41319, i64 0, i64 0)) nounwind, !dbg !9142
  %54 = sext i32 %r.0 to i64, !dbg !9143
  %55 = call i8* @memcpy(i8* %25, i8* %incoming.0, i64 %54)
  br label %bb21, !dbg !9143

bb21:                                             ; preds = %bb20, %bb19
  tail call void @free(i8* %incoming.0) nounwind, !dbg !9144
  br label %bb22, !dbg !9144

bb22:                                             ; preds = %bb21, %bb18, %bb17
  %56 = icmp eq i32 %r.0, -1, !dbg !9145
  br i1 %56, label %bb23, label %bb24, !dbg !9145

bb23:                                             ; preds = %bb22
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9146
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9146
  store i32 %58, i32* %57, align 4, !dbg !9146
  br label %bb34, !dbg !9147

bb24:                                             ; preds = %bb22
  %59 = load i32* %38, align 8, !dbg !9148
  %60 = icmp eq i32 %59, 0, !dbg !9148
  br i1 %60, label %bb24.bb26_crit_edge, label %bb25, !dbg !9148

bb24.bb26_crit_edge:                              ; preds = %bb24
  %.pre = sext i32 %r.0 to i64, !dbg !9149
  br label %bb34

bb25:                                             ; preds = %bb24
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9150
  %62 = load i64* %61, align 8, !dbg !9150
  %63 = sext i32 %r.0 to i64, !dbg !9150
  %64 = add nsw i64 %62, %63, !dbg !9150
  store i64 %64, i64* %61, align 8, !dbg !9150
  br label %bb34, !dbg !9150

bb27:                                             ; preds = %bb8
  %65 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9151
  %66 = load i64* %65, align 8, !dbg !9151
  %67 = icmp slt i64 %66, 0, !dbg !9151
  br i1 %67, label %bb28, label %bb29, !dbg !9151

bb28:                                             ; preds = %bb27
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20298, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 525, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9151

bb29:                                             ; preds = %bb27
  %68 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 0, !dbg !9152
  %69 = load i32* %68, align 8, !dbg !9152
  %70 = zext i32 %69 to i64, !dbg !9152
  %71 = icmp slt i64 %70, %66, !dbg !9152
  br i1 %71, label %bb34, label %bb31, !dbg !9152

bb31:                                             ; preds = %bb29
  %72 = add i64 %66, %count, !dbg !9153
  %73 = sub nsw i64 %70, %66, !dbg !9154
  %74 = icmp ugt i64 %72, %70, !dbg !9153
  %.count = select i1 %74, i64 %73, i64 %count
  %75 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 1, !dbg !9155
  %76 = load i8** %75, align 8, !dbg !9155
  %77 = getelementptr inbounds i8* %76, i64 %66, !dbg !9155
  %78 = call i8* @memcpy(i8* %buf, i8* %77, i64 %.count)
  %79 = load i64* %65, align 8, !dbg !9156
  %80 = add i64 %79, %.count, !dbg !9156
  store i64 %80, i64* %65, align 8, !dbg !9156
  br label %bb34, !dbg !9157

bb34:                                             ; preds = %bb31, %bb29, %bb25, %bb24.bb26_crit_edge, %bb23, %bb7, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb7 ], [ -1, %bb23 ], [ %.count, %bb31 ], [ 0, %entry ], [ 0, %bb29 ], [ %.pre, %bb24.bb26_crit_edge ], [ %63, %bb25 ]
  ret i64 %.0, !dbg !9158
}

define i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind {
entry:
  %0 = tail call noalias i8* @malloc(i64 %length) nounwind, !dbg !9159
  %1 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 0) nounwind, !dbg !9160
  br label %bb5, !dbg !9161

bb:                                               ; preds = %bb5
  %2 = sub i64 %length, %count.0, !dbg !9162
  %3 = tail call i64 @read(i32 %fd, i8* %0, i64 %2) nounwind, !dbg !9162
  switch i64 %3, label %bb4 [
    i64 0, label %bb1
    i64 -1, label %bb3
  ]

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str42320, i64 0, i64 0)) nounwind, !dbg !9163
  br label %bb6, !dbg !9163

bb3:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str43321, i64 0, i64 0)) nounwind, !dbg !9164
  br label %bb6, !dbg !9164

bb4:                                              ; preds = %bb
  %4 = add i64 %3, %count.0, !dbg !9165
  br label %bb5, !dbg !9165

bb5:                                              ; preds = %bb4, %entry
  %count.0 = phi i64 [ 0, %entry ], [ %4, %bb4 ]
  %5 = icmp ult i64 %count.0, %length, !dbg !9166
  br i1 %5, label %bb, label %bb6, !dbg !9166

bb6:                                              ; preds = %bb5, %bb3, %bb1
  ret i8* %0, !dbg !9167
}

define i8* @mmap(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9168
  %1 = icmp eq i32 %prot, 1, !dbg !9168
  %2 = and i1 %0, %1, !dbg !9168
  br i1 %2, label %bb, label %bb3, !dbg !9168

bb:                                               ; preds = %entry
  %3 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind, !dbg !9169
  br label %bb4, !dbg !9169

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44322, i64 0, i64 0)) nounwind, !dbg !9170
  br label %bb4, !dbg !9171

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i8* [ %3, %bb ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9169
}

define i8* @mmap64(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9172
  %1 = icmp eq i32 %prot, 1, !dbg !9172
  %2 = and i1 %0, %1, !dbg !9172
  br i1 %2, label %bb, label %bb3, !dbg !9172

bb:                                               ; preds = %entry
  %int_cast_to_i64 = bitcast i64 12 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %4 = shl nsw i64 %off, 12, !dbg !9173
  %5 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %4) nounwind, !dbg !9173
  br label %bb4, !dbg !9173

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44322, i64 0, i64 0)) nounwind, !dbg !9174
  br label %bb4, !dbg !9175

bb4:                                              ; preds = %bb3, %klee_overshift_check.exit
  %.0 = phi i8* [ %5, %klee_overshift_check.exit ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9173
}

define i32 @fchmod(i32 %fd, i32 %mode) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9176
  br i1 %0, label %bb.i, label %bb, !dbg !9176

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9178
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9179
  %3 = load i32* %2, align 4, !dbg !9179
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9179
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9179

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9178
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !9180
  br i1 %6, label %bb, label %bb1, !dbg !9180

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9181
  store i32 9, i32* %7, align 4, !dbg !9181
  br label %bb9, !dbg !9182

bb1:                                              ; preds = %__get_file.exit
  %8 = load i32* @n_calls.6299, align 4, !dbg !9183
  %9 = add nsw i32 %8, 1, !dbg !9183
  store i32 %9, i32* @n_calls.6299, align 4, !dbg !9183
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9184
  %11 = icmp eq i32 %10, 0, !dbg !9184
  br i1 %11, label %bb4, label %bb2, !dbg !9184

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 21), align 8, !dbg !9184
  %13 = load i32* %12, align 4, !dbg !9184
  %14 = icmp eq i32 %13, %9, !dbg !9184
  br i1 %14, label %bb3, label %bb4, !dbg !9184

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9185
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9185
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9186
  store i32 5, i32* %16, align 4, !dbg !9186
  br label %bb9, !dbg !9187

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9188
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9188
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9188
  br i1 %19, label %bb6, label %bb5, !dbg !9188

bb5:                                              ; preds = %bb4
  %20 = tail call i32 @geteuid() nounwind, !dbg !9189
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 3, !dbg !9189
  %22 = load %struct.stat** %21, align 8, !dbg !9189
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 4, !dbg !9189
  %24 = load i32* %23, align 4, !dbg !9189
  %25 = icmp eq i32 %20, %24, !dbg !9189
  br i1 %25, label %bb.i11, label %bb3.i, !dbg !9189

bb.i11:                                           ; preds = %bb5
  %26 = tail call i32 @getgid() nounwind, !dbg !9192
  %27 = load %struct.stat** %21, align 8, !dbg !9192
  %28 = getelementptr inbounds %struct.stat* %27, i64 0, i32 5, !dbg !9192
  %29 = load i32* %28, align 8, !dbg !9192
  %30 = and i32 %mode, 3071, !dbg !9193
  %31 = icmp eq i32 %26, %29, !dbg !9192
  %mode..i = select i1 %31, i32 %mode, i32 %30
  %32 = getelementptr inbounds %struct.stat* %27, i64 0, i32 3, !dbg !9194
  %33 = load i32* %32, align 8, !dbg !9194
  %34 = and i32 %33, -4096, !dbg !9194
  %35 = and i32 %mode..i, 4095, !dbg !9194
  %36 = or i32 %35, %34, !dbg !9194
  store i32 %36, i32* %32, align 8, !dbg !9194
  br label %bb9, !dbg !9195

bb3.i:                                            ; preds = %bb5
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !9196
  store i32 1, i32* %37, align 4, !dbg !9196
  br label %bb9, !dbg !9197

bb6:                                              ; preds = %bb4
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9198
  %39 = load i32* %38, align 8, !dbg !9198
  %40 = tail call i64 (i64, ...)* @syscall(i64 91, i32 %39, i32 %mode) nounwind, !dbg !9198
  %41 = trunc i64 %40 to i32, !dbg !9198
  %42 = icmp eq i32 %41, -1, !dbg !9199
  br i1 %42, label %bb7, label %bb9, !dbg !9199

bb7:                                              ; preds = %bb6
  %43 = tail call i32* @__errno_location() nounwind readnone, !dbg !9200
  %44 = tail call i32 @klee_get_errno() nounwind, !dbg !9200
  store i32 %44, i32* %43, align 4, !dbg !9200
  br label %bb9, !dbg !9200

bb9:                                              ; preds = %bb7, %bb6, %bb3.i, %bb.i11, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb7 ], [ %41, %bb6 ], [ 0, %bb.i11 ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9182
}

define i32 @chmod(i8* %path, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9201
  %1 = load i32* @n_calls.6276, align 4, !dbg !9203
  %2 = add nsw i32 %1, 1, !dbg !9203
  store i32 %2, i32* @n_calls.6276, align 4, !dbg !9203
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9204
  %4 = icmp eq i32 %3, 0, !dbg !9204
  br i1 %4, label %bb2, label %bb, !dbg !9204

bb:                                               ; preds = %entry
  %5 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 20), align 8, !dbg !9204
  %6 = load i32* %5, align 4, !dbg !9204
  %7 = icmp eq i32 %6, %2, !dbg !9204
  br i1 %7, label %bb1, label %bb2, !dbg !9204

bb1:                                              ; preds = %bb
  %8 = add i32 %3, -1, !dbg !9205
  store i32 %8, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9205
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9206
  store i32 5, i32* %9, align 4, !dbg !9206
  br label %bb7, !dbg !9207

bb2:                                              ; preds = %bb, %entry
  %10 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9208
  br i1 %10, label %bb4, label %bb3, !dbg !9208

bb3:                                              ; preds = %bb2
  %11 = tail call i32 @geteuid() nounwind, !dbg !9209
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9209
  %13 = load %struct.stat** %12, align 8, !dbg !9209
  %14 = getelementptr inbounds %struct.stat* %13, i64 0, i32 4, !dbg !9209
  %15 = load i32* %14, align 4, !dbg !9209
  %16 = icmp eq i32 %11, %15, !dbg !9209
  br i1 %16, label %bb.i, label %bb3.i, !dbg !9209

bb.i:                                             ; preds = %bb3
  %17 = tail call i32 @getgid() nounwind, !dbg !9211
  %18 = load %struct.stat** %12, align 8, !dbg !9211
  %19 = getelementptr inbounds %struct.stat* %18, i64 0, i32 5, !dbg !9211
  %20 = load i32* %19, align 8, !dbg !9211
  %21 = and i32 %mode, 3071, !dbg !9212
  %22 = icmp eq i32 %17, %20, !dbg !9211
  %mode..i = select i1 %22, i32 %mode, i32 %21
  %23 = getelementptr inbounds %struct.stat* %18, i64 0, i32 3, !dbg !9213
  %24 = load i32* %23, align 8, !dbg !9213
  %25 = and i32 %24, -4096, !dbg !9213
  %26 = and i32 %mode..i, 4095, !dbg !9213
  %27 = or i32 %26, %25, !dbg !9213
  store i32 %27, i32* %23, align 8, !dbg !9213
  br label %bb7, !dbg !9214

bb3.i:                                            ; preds = %bb3
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !9215
  store i32 1, i32* %28, align 4, !dbg !9215
  br label %bb7, !dbg !9216

bb4:                                              ; preds = %bb2
  %29 = ptrtoint i8* %path to i64, !dbg !9217
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9217
  %31 = inttoptr i64 %30 to i8*, !dbg !9217
  %32 = icmp eq i8* %31, %path, !dbg !9220
  %33 = zext i1 %32 to i64, !dbg !9220
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9220
  br label %bb.i9, !dbg !9221

bb.i9:                                            ; preds = %bb13.i, %bb4
  %sc.0.i = phi i8* [ %31, %bb4 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb4 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9222
  %36 = load i8* @UseConcretePath, align 1, !dbg !9223
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9223
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9223

bb7.i:                                            ; preds = %bb.i9
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9223
  %38 = icmp eq i32 %37, 0, !dbg !9223
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9223

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9224
  br label %__concretize_string.exit, !dbg !9224

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9225
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9225
  br label %bb13.i, !dbg !9225

bb12.i:                                           ; preds = %bb7.i, %bb.i9
  %40 = sext i8 %35 to i64, !dbg !9226
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9226
  %42 = trunc i64 %41 to i8, !dbg !9226
  %43 = icmp eq i8 %42, %35, !dbg !9227
  %44 = zext i1 %43 to i64, !dbg !9227
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9227
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9228
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9228
  %46 = icmp eq i8 %42, 0, !dbg !9229
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9229

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9221
  br label %bb.i9, !dbg !9221

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 90, i8* %path, i32 %mode) nounwind, !dbg !9219
  %49 = trunc i64 %48 to i32, !dbg !9219
  %50 = icmp eq i32 %49, -1, !dbg !9230
  br i1 %50, label %bb5, label %bb7, !dbg !9230

bb5:                                              ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9231
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9231
  store i32 %52, i32* %51, align 4, !dbg !9231
  br label %bb7, !dbg !9231

bb7:                                              ; preds = %bb5, %__concretize_string.exit, %bb3.i, %bb.i, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb5 ], [ %49, %__concretize_string.exit ], [ 0, %bb.i ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9207
}

define i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9232
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9234
  br i1 %1, label %bb1, label %bb, !dbg !9234

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9235
  %3 = load %struct.stat** %2, align 8, !dbg !9235
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9235
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9235
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9236

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9237
  %8 = add i64 %7, 1, !dbg !9237
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9237
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9238
  %11 = ptrtoint i8* %9 to i64, !dbg !9239
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9239
  %13 = inttoptr i64 %12 to i8*, !dbg !9239
  %14 = icmp eq i8* %13, %9, !dbg !9242
  %15 = zext i1 %14 to i64, !dbg !9242
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9242
  br label %bb.i, !dbg !9243

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9244
  %18 = load i8* @UseConcretePath, align 1, !dbg !9245
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9245
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9245

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9245
  %20 = icmp eq i32 %19, 0, !dbg !9245
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9245

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9246
  br label %__concretize_string.exit, !dbg !9246

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9247
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9247
  br label %bb13.i, !dbg !9247

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9248
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9248
  %24 = trunc i64 %23 to i8, !dbg !9248
  %25 = icmp eq i8 %24, %17, !dbg !9249
  %26 = zext i1 %25 to i64, !dbg !9249
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9249
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9250
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9250
  %28 = icmp eq i8 %24, 0, !dbg !9251
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9251

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9243
  br label %bb.i, !dbg !9243

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 6, i8* %9, %struct.stat* %buf) nounwind, !dbg !9241
  %31 = trunc i64 %30 to i32, !dbg !9241
  %32 = icmp eq i32 %31, -1, !dbg !9252
  br i1 %32, label %bb2, label %bb3, !dbg !9252

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9253
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9253
  store i32 %34, i32* %33, align 4, !dbg !9253
  br label %bb3, !dbg !9253

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9254
  br label %bb4, !dbg !9255

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9236
}

define i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9256
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9258
  br i1 %1, label %bb1, label %bb, !dbg !9258

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9259
  %3 = load %struct.stat** %2, align 8, !dbg !9259
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9259
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9259
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9260

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9261
  %8 = add i64 %7, 1, !dbg !9261
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9261
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9262
  %11 = ptrtoint i8* %9 to i64, !dbg !9263
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9263
  %13 = inttoptr i64 %12 to i8*, !dbg !9263
  %14 = icmp eq i8* %13, %9, !dbg !9266
  %15 = zext i1 %14 to i64, !dbg !9266
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9266
  br label %bb.i, !dbg !9267

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9268
  %18 = load i8* @UseConcretePath, align 1, !dbg !9269
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9269
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9269

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9269
  %20 = icmp eq i32 %19, 0, !dbg !9269
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9269

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9270
  br label %__concretize_string.exit, !dbg !9270

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9271
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9271
  br label %bb13.i, !dbg !9271

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9272
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9272
  %24 = trunc i64 %23 to i8, !dbg !9272
  %25 = icmp eq i8 %24, %17, !dbg !9273
  %26 = zext i1 %25 to i64, !dbg !9273
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9273
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9274
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9274
  %28 = icmp eq i8 %24, 0, !dbg !9275
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9275

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9267
  br label %bb.i, !dbg !9267

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 4, i8* %9, %struct.stat* %buf) nounwind, !dbg !9265
  %31 = trunc i64 %30 to i32, !dbg !9265
  %32 = icmp eq i32 %31, -1, !dbg !9276
  br i1 %32, label %bb2, label %bb3, !dbg !9276

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9277
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9277
  store i32 %34, i32* %33, align 4, !dbg !9277
  br label %bb3, !dbg !9277

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9278
  br label %bb4, !dbg !9279

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9260
}

define i64 @write(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.6018, align 4, !dbg !9280
  %1 = add nsw i32 %0, 1, !dbg !9280
  store i32 %1, i32* @n_calls.6018, align 4, !dbg !9280
  %2 = icmp ult i32 %fd, 32, !dbg !9281
  br i1 %2, label %bb.i, label %bb, !dbg !9281

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !9283
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !9284
  %5 = load i32* %4, align 4, !dbg !9284
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !9284
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9284

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !9283
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !9285
  br i1 %8, label %bb, label %bb1, !dbg !9285

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9286
  store i32 9, i32* %9, align 4, !dbg !9286
  br label %bb33, !dbg !9287

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9288
  %11 = icmp eq i32 %10, 0, !dbg !9288
  br i1 %11, label %bb4, label %bb2, !dbg !9288

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !9288
  %13 = load i32* %12, align 4, !dbg !9288
  %14 = icmp eq i32 %13, %1, !dbg !9288
  br i1 %14, label %bb3, label %bb4, !dbg !9288

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9289
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9289
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9290
  store i32 5, i32* %16, align 4, !dbg !9290
  br label %bb33, !dbg !9291

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !9292
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9292
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9292
  br i1 %19, label %bb5, label %bb20, !dbg !9292

bb5:                                              ; preds = %bb4
  %20 = ptrtoint i8* %buf to i64, !dbg !9293
  %21 = tail call i64 @klee_get_valuel(i64 %20) nounwind, !dbg !9293
  %22 = inttoptr i64 %21 to i8*, !dbg !9293
  %23 = icmp eq i8* %22, %buf, !dbg !9295
  %24 = zext i1 %23 to i64, !dbg !9295
  tail call void @klee_assume(i64 %24) nounwind, !dbg !9295
  %25 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9296
  %26 = icmp eq i64 %25, %count, !dbg !9298
  %27 = zext i1 %26 to i64, !dbg !9298
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9298
  tail call void @klee_check_memory_access(i8* %22, i64 %25) nounwind, !dbg !9299
  %28 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9300
  %29 = icmp eq i32 %28, 1, !dbg !9300
  %30 = zext i1 %29 to i8, !dbg !9300
  store i8 %30, i8* @UseConcretePath, align 1, !dbg !9300
  %.not = xor i1 %29, true
  %31 = icmp eq i64 %25, 0, !dbg !9301
  %or.cond = or i1 %31, %.not
  br i1 %or.cond, label %bb10, label %bb7, !dbg !9301

bb7:                                              ; preds = %bb5
  %32 = tail call noalias i8* @malloc(i64 %25) nounwind, !dbg !9302
  %33 = icmp eq i8* %32, null, !dbg !9303
  br i1 %33, label %bb8, label %bb9, !dbg !9303

bb8:                                              ; preds = %bb7
  tail call void @__assert_fail(i8* getelementptr inbounds ([5 x i8]* @.str45323, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9303

bb9:                                              ; preds = %bb7
  %34 = call i8* @memcpy(i8* %32, i8* %22, i64 %25)
  %35 = trunc i64 %25 to i32, !dbg !9304
  %36 = ptrtoint i8* %32 to i64, !dbg !9305
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9305
  %38 = inttoptr i64 %37 to i8*, !dbg !9305
  %39 = icmp eq i8* %38, %32, !dbg !9307
  %40 = zext i1 %39 to i64, !dbg !9307
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9307
  %41 = icmp eq i32 %35, 0, !dbg !9308
  br i1 %41, label %bb10, label %bb.lr.ph.i, !dbg !9308

bb.lr.ph.i:                                       ; preds = %bb9
  %tmp1 = and i64 %25, 4294967295
  br label %bb.i35

bb.i35:                                           ; preds = %bb.i35, %bb.lr.ph.i
  %indvar.i = phi i64 [ 0, %bb.lr.ph.i ], [ %indvar.next.i, %bb.i35 ]
  %sc.04.i = getelementptr i8* %38, i64 %indvar.i
  %42 = load i8* %sc.04.i, align 1, !dbg !9309
  %43 = sext i8 %42 to i64, !dbg !9310
  %44 = tail call i64 @klee_get_valuel(i64 %43) nounwind, !dbg !9310
  %45 = trunc i64 %44 to i8, !dbg !9310
  %46 = icmp eq i8 %45, %42, !dbg !9311
  %47 = zext i1 %46 to i64, !dbg !9311
  tail call void @klee_assume(i64 %47) nounwind, !dbg !9311
  store i8 %45, i8* %sc.04.i, align 1, !dbg !9312
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond2 = icmp eq i64 %indvar.next.i, %tmp1
  br i1 %exitcond2, label %bb10, label %bb.i35, !dbg !9308

bb10:                                             ; preds = %bb.i35, %bb9, %bb5
  %cbuf.0 = phi i8* [ null, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %buf_addr.0 = phi i8* [ %22, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %48 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !9313
  %49 = load i32* %48, align 8, !dbg !9313
  %50 = add i32 %49, -1, !dbg !9313
  %51 = icmp ult i32 %50, 2, !dbg !9313
  br i1 %51, label %bb11, label %bb12, !dbg !9313

bb11:                                             ; preds = %bb10
  %52 = tail call i64 (i64, ...)* @syscall(i64 1, i32 %49, i8* %buf_addr.0, i64 %25) nounwind, !dbg !9314
  br label %bb13, !dbg !9314

bb12:                                             ; preds = %bb10
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9315
  %54 = load i64* %53, align 8, !dbg !9315
  %55 = tail call i64 (i64, ...)* @syscall(i64 18, i32 %49, i8* %buf_addr.0, i64 %25, i64 %54) nounwind, !dbg !9315
  br label %bb13, !dbg !9315

bb13:                                             ; preds = %bb12, %bb11
  %r.0.in = phi i64 [ %52, %bb11 ], [ %55, %bb12 ]
  %r.0 = trunc i64 %r.0.in to i32
  tail call void @free(i8* %cbuf.0) nounwind, !dbg !9316
  %56 = icmp eq i32 %r.0, -1, !dbg !9317
  br i1 %56, label %bb14, label %bb15, !dbg !9317

bb14:                                             ; preds = %bb13
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9318
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9318
  store i32 %58, i32* %57, align 4, !dbg !9318
  br label %bb33, !dbg !9319

bb15:                                             ; preds = %bb13
  %59 = icmp slt i32 %r.0, 0, !dbg !9320
  br i1 %59, label %bb16, label %bb17, !dbg !9320

bb16:                                             ; preds = %bb15
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8]* @.str46324, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9320

bb17:                                             ; preds = %bb15
  %60 = load i32* %48, align 8, !dbg !9321
  %61 = add i32 %60, -1, !dbg !9321
  %62 = icmp ugt i32 %61, 1, !dbg !9321
  br i1 %62, label %bb18, label %bb17.bb19_crit_edge, !dbg !9321

bb17.bb19_crit_edge:                              ; preds = %bb17
  %.pre = sext i32 %r.0 to i64, !dbg !9322
  br label %bb33

bb18:                                             ; preds = %bb17
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9323
  %64 = load i64* %63, align 8, !dbg !9323
  %65 = sext i32 %r.0 to i64, !dbg !9323
  %66 = add nsw i64 %64, %65, !dbg !9323
  store i64 %66, i64* %63, align 8, !dbg !9323
  br label %bb33, !dbg !9323

bb20:                                             ; preds = %bb4
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9324
  %68 = load i64* %67, align 8, !dbg !9324
  %69 = add i64 %68, %count, !dbg !9324
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 0, !dbg !9324
  %71 = load i32* %70, align 8, !dbg !9324
  %72 = zext i32 %71 to i64, !dbg !9324
  %73 = icmp ugt i64 %69, %72, !dbg !9324
  br i1 %73, label %bb22, label %bb26, !dbg !9324

bb22:                                             ; preds = %bb20
  %74 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !9325
  %75 = icmp eq i32 %74, 0, !dbg !9325
  br i1 %75, label %bb24, label %bb23, !dbg !9325

bb23:                                             ; preds = %bb22
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17295, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16294, i64 0, i64 0), i32 663, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9326

bb24:                                             ; preds = %bb22
  %76 = icmp slt i64 %68, %72, !dbg !9327
  br i1 %76, label %bb25, label %bb28, !dbg !9327

bb25:                                             ; preds = %bb24
  %77 = sub nsw i64 %72, %68, !dbg !9328
  br label %bb26, !dbg !9328

bb26:                                             ; preds = %bb25, %bb20
  %actual_count.0 = phi i64 [ %77, %bb25 ], [ %count, %bb20 ]
  %78 = icmp eq i64 %actual_count.0, 0, !dbg !9329
  br i1 %78, label %bb28, label %bb27, !dbg !9329

bb27:                                             ; preds = %bb26
  %79 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 1, !dbg !9330
  %80 = load i8** %79, align 8, !dbg !9330
  %81 = getelementptr inbounds i8* %80, i64 %68, !dbg !9330
  %82 = call i8* @memcpy(i8* %81, i8* %buf, i64 %actual_count.0)
  br label %bb28, !dbg !9330

bb28:                                             ; preds = %bb27, %bb26, %bb24
  %actual_count.036 = phi i64 [ 0, %bb26 ], [ %actual_count.0, %bb27 ], [ 0, %bb24 ]
  %83 = icmp eq i64 %actual_count.036, %count, !dbg !9331
  br i1 %83, label %bb30, label %bb29, !dbg !9331

bb29:                                             ; preds = %bb28
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9332
  %85 = bitcast %struct.FILE* %84 to i8*, !dbg !9332
  %86 = tail call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([33 x i8]* @.str47325, i64 0, i64 0), i64 1, i64 32, i8* %85) nounwind, !dbg !9332
  br label %bb30, !dbg !9332

bb30:                                             ; preds = %bb29, %bb28
  %87 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9333
  %88 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !9333
  %89 = icmp eq %struct.exe_disk_file_t* %87, %88, !dbg !9333
  br i1 %89, label %bb31, label %bb32, !dbg !9333

bb31:                                             ; preds = %bb30
  %90 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9334
  %91 = trunc i64 %actual_count.036 to i32, !dbg !9334
  %92 = add i32 %90, %91, !dbg !9334
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9334
  br label %bb32, !dbg !9334

bb32:                                             ; preds = %bb31, %bb30
  %93 = load i64* %67, align 8, !dbg !9335
  %94 = add i64 %93, %count, !dbg !9335
  store i64 %94, i64* %67, align 8, !dbg !9335
  br label %bb33, !dbg !9336

bb33:                                             ; preds = %bb32, %bb18, %bb17.bb19_crit_edge, %bb14, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb14 ], [ %count, %bb32 ], [ %.pre, %bb17.bb19_crit_edge ], [ %65, %bb18 ]
  ret i64 %.0, !dbg !9287
}

define i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %buffer = alloca [1024 x i8], align 1
  br label %bb2, !dbg !9337

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !9338
  %1 = and i32 %0, 1, !dbg !9338
  %2 = icmp eq i32 %1, 0, !dbg !9338
  br i1 %2, label %bb5, label %bb1, !dbg !9338

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !9337

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !9337
  br i1 %3, label %bb, label %bb3, !dbg !9337

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !9339
  br i1 %4, label %bb4, label %bb5, !dbg !9339

bb4:                                              ; preds = %bb3
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !9340
  store i32 24, i32* %5, align 4, !dbg !9340
  br label %bb36, !dbg !9341

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !9342
  %7 = and i32 %flags, 3, !dbg !9343
  %8 = icmp eq i32 %7, 0, !dbg !9343
  %9 = zext i1 %8 to i8, !dbg !9343
  %10 = call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %9) nounwind, !dbg !9343
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9344
  br i1 %11, label %bb16, label %bb6, !dbg !9344

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9345
  store %struct.exe_disk_file_t* %10, %struct.exe_disk_file_t** %12, align 8, !dbg !9345
  %13 = and i32 %flags, 192
  switch i32 %13, label %bb12 [
    i32 192, label %bb8
    i32 128, label %bb11
  ]

bb8:                                              ; preds = %bb6
  %14 = call i32* @__errno_location() nounwind readnone, !dbg !9346
  store i32 17, i32* %14, align 4, !dbg !9346
  br label %bb36, !dbg !9347

bb11:                                             ; preds = %bb6
  %15 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9348
  %16 = bitcast %struct.FILE* %15 to i8*, !dbg !9348
  %17 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([47 x i8]* @.str48326, i64 0, i64 0), i64 1, i64 46, i8* %16) nounwind, !dbg !9348
  %18 = call i32* @__errno_location() nounwind readnone, !dbg !9349
  store i32 13, i32* %18, align 4, !dbg !9349
  br label %bb36, !dbg !9350

bb12:                                             ; preds = %bb6
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %10, i64 0, i32 3, !dbg !9351
  %20 = load %struct.stat** %19, align 8, !dbg !9351
  %21 = getelementptr inbounds %struct.stat* %20, i64 0, i32 3, !dbg !9352
  %22 = load i32* %21, align 8, !dbg !9352
  %23 = and i32 %flags, 2, !dbg !9353
  %24 = icmp eq i32 %23, 0, !dbg !9353
  br i1 %24, label %bb9.i, label %bb7.i, !dbg !9354

bb7.i:                                            ; preds = %bb12
  %25 = and i32 %22, 292, !dbg !9354
  %26 = icmp eq i32 %25, 0, !dbg !9354
  br i1 %26, label %bb9.i, label %bb13, !dbg !9354

bb9.i:                                            ; preds = %bb7.i, %bb12
  br i1 %8, label %bb14, label %bb10.i, !dbg !9355

bb10.i:                                           ; preds = %bb9.i
  %27 = and i32 %22, 146, !dbg !9355
  %28 = icmp eq i32 %27, 0, !dbg !9355
  br i1 %28, label %bb13, label %bb14, !dbg !9355

bb13:                                             ; preds = %bb10.i, %bb7.i
  %29 = call i32* @__errno_location() nounwind readnone, !dbg !9356
  store i32 13, i32* %29, align 4, !dbg !9356
  br label %bb36, !dbg !9357

bb14:                                             ; preds = %bb10.i, %bb9.i
  %30 = and i32 %22, -512, !dbg !9358
  %31 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !9358
  %not = xor i32 %31, -1, !dbg !9358
  %32 = and i32 %not, %mode, !dbg !9358
  %33 = or i32 %32, %30, !dbg !9358
  store i32 %33, i32* %21, align 8, !dbg !9358
  br label %bb30, !dbg !9358

bb16:                                             ; preds = %bb5
  %34 = ptrtoint i8* %pathname to i64, !dbg !9359
  %35 = call i64 @klee_get_valuel(i64 %34) nounwind, !dbg !9359
  %36 = inttoptr i64 %35 to i8*, !dbg !9359
  %37 = icmp eq i8* %36, %pathname, !dbg !9362
  %38 = zext i1 %37 to i64, !dbg !9362
  call void @klee_assume(i64 %38) nounwind, !dbg !9362
  br label %bb.i42, !dbg !9363

bb.i42:                                           ; preds = %bb13.i, %bb16
  %sc.0.i = phi i8* [ %36, %bb16 ], [ %sc.1.i, %bb13.i ]
  %39 = phi i32 [ 0, %bb16 ], [ %52, %bb13.i ]
  %40 = load i8* %sc.0.i, align 1, !dbg !9364
  %41 = load i8* @UseConcretePath, align 1, !dbg !9365
  %toBool3not.i = icmp eq i8 %41, 0, !dbg !9365
  br i1 %toBool3not.i, label %bb7.i43, label %bb12.i45, !dbg !9365

bb7.i43:                                          ; preds = %bb.i42
  %tmp.i = add i32 %39, -1
  %42 = and i32 %tmp.i, %39, !dbg !9365
  %43 = icmp eq i32 %42, 0, !dbg !9365
  br i1 %43, label %bb8.i, label %bb12.i45, !dbg !9365

bb8.i:                                            ; preds = %bb7.i43
  switch i8 %40, label %bb13.i [
    i8 0, label %bb9.i44
    i8 47, label %bb11.i
  ]

bb9.i44:                                          ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9366
  br label %__concretize_string.exit, !dbg !9366

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9367
  %44 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9367
  br label %bb13.i, !dbg !9367

bb12.i45:                                         ; preds = %bb7.i43, %bb.i42
  %45 = sext i8 %40 to i64, !dbg !9368
  %46 = call i64 @klee_get_valuel(i64 %45) nounwind, !dbg !9368
  %47 = trunc i64 %46 to i8, !dbg !9368
  %48 = icmp eq i8 %47, %40, !dbg !9369
  %49 = zext i1 %48 to i64, !dbg !9369
  call void @klee_assume(i64 %49) nounwind, !dbg !9369
  store i8 %47, i8* %sc.0.i, align 1, !dbg !9370
  %50 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9370
  %51 = icmp eq i8 %47, 0, !dbg !9371
  br i1 %51, label %__concretize_string.exit, label %bb13.i, !dbg !9371

bb13.i:                                           ; preds = %bb12.i45, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %50, %bb12.i45 ], [ %44, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %52 = add i32 %39, 1, !dbg !9363
  br label %bb.i42, !dbg !9363

__concretize_string.exit:                         ; preds = %bb12.i45, %bb9.i44
  %53 = call i32 @strncmp(i8* %pathname, i8* getelementptr inbounds ([15 x i8]* @.str49327, i64 0, i64 0), i64 14) nounwind readonly, !dbg !9372
  %54 = icmp eq i32 %53, 0, !dbg !9372
  br i1 %54, label %bb17, label %bb26, !dbg !9372

bb17:                                             ; preds = %__concretize_string.exit
  %55 = getelementptr inbounds i8* %pathname, i64 14, !dbg !9373
  %56 = call i64 @strtol(i8* noalias nocapture %55, i8** noalias null, i32 10) nounwind, !dbg !9374
  %57 = trunc i64 %56 to i32, !dbg !9374
  %58 = icmp ult i32 %57, 32, !dbg !9376
  br i1 %58, label %bb.i, label %bb25, !dbg !9376

bb.i:                                             ; preds = %bb17
  %59 = sext i32 %57 to i64, !dbg !9378
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 1, !dbg !9379
  %61 = load i32* %60, align 4, !dbg !9379
  %62 = and i32 %61, 1
  %toBool.i = icmp eq i32 %62, 0, !dbg !9379
  br i1 %toBool.i, label %bb25, label %__get_file.exit, !dbg !9379

__get_file.exit:                                  ; preds = %bb.i
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, !dbg !9378
  %64 = icmp eq %struct.exe_file_t* %63, null, !dbg !9380
  br i1 %64, label %bb25, label %bb19, !dbg !9380

bb19:                                             ; preds = %__get_file.exit
  %65 = call i8* @strchr(i8* %55, i32 47) nounwind readonly, !dbg !9381
  %66 = icmp eq i8* %65, null, !dbg !9382
  %. = select i1 %66, i8* getelementptr inbounds ([1 x i8]* @.str50328, i64 0, i64 0), i8* %65
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 0, !dbg !9382
  %68 = load i32* %67, align 8, !dbg !9382
  %buffer23 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 0, !dbg !9382
  %69 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %buffer23, i64 1023, i8* noalias getelementptr inbounds ([19 x i8]* @.str51329, i64 0, i64 0), i32 %68, i8* %.) nounwind, !dbg !9382
  %70 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 1023, !dbg !9383
  store i8 0, i8* %70, align 1, !dbg !9383
  %71 = call i64 (i64, ...)* @syscall(i64 2, i8* %buffer23, i32 %flags, i32 %mode) nounwind, !dbg !9384
  br label %bb27, !dbg !9384

bb25:                                             ; preds = %__get_file.exit, %bb.i, %bb17
  %72 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9385
  br label %bb27, !dbg !9385

bb26:                                             ; preds = %__concretize_string.exit
  %73 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9386
  br label %bb27, !dbg !9386

bb27:                                             ; preds = %bb26, %bb25, %bb19
  %os_fd.0.in = phi i64 [ %71, %bb19 ], [ %72, %bb25 ], [ %73, %bb26 ]
  %os_fd.0 = trunc i64 %os_fd.0.in to i32
  %74 = icmp eq i32 %os_fd.0, -1, !dbg !9387
  br i1 %74, label %bb28, label %bb29, !dbg !9387

bb28:                                             ; preds = %bb27
  %75 = call i32* @__errno_location() nounwind readnone, !dbg !9388
  %76 = call i32 @klee_get_errno() nounwind, !dbg !9388
  store i32 %76, i32* %75, align 4, !dbg !9388
  br label %bb36, !dbg !9389

bb29:                                             ; preds = %bb27
  %77 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9390
  store i32 %os_fd.0, i32* %77, align 8, !dbg !9390
  br label %bb30, !dbg !9390

bb30:                                             ; preds = %bb29, %bb14
  %78 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9391
  store i32 1, i32* %78, align 4, !dbg !9391
  br i1 %8, label %bb31, label %bb32, !dbg !9392

bb31:                                             ; preds = %bb30
  store i32 5, i32* %78, align 4, !dbg !9393
  br label %bb36, !dbg !9393

bb32:                                             ; preds = %bb30
  %79 = icmp eq i32 %7, 1, !dbg !9394
  br i1 %79, label %bb33, label %bb34, !dbg !9394

bb33:                                             ; preds = %bb32
  store i32 9, i32* %78, align 4, !dbg !9395
  br label %bb36, !dbg !9395

bb34:                                             ; preds = %bb32
  store i32 13, i32* %78, align 4, !dbg !9396
  br label %bb36, !dbg !9396

bb36:                                             ; preds = %bb34, %bb33, %bb31, %bb28, %bb13, %bb11, %bb8, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ -1, %bb8 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb28 ], [ %fd.0, %bb34 ], [ %fd.0, %bb33 ], [ %fd.0, %bb31 ]
  ret i32 %.0, !dbg !9341
}

declare i32 @snprintf(i8* nocapture, i64, i8* nocapture, ...) nounwind

define i32 @__fd_openat(i32 %basefd, i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %0 = icmp eq i32 %basefd, -100, !dbg !9397
  br i1 %0, label %bb5, label %bb, !dbg !9397

bb:                                               ; preds = %entry
  %1 = icmp ult i32 %basefd, 32, !dbg !9398
  br i1 %1, label %bb.i, label %bb1, !dbg !9398

bb.i:                                             ; preds = %bb
  %2 = sext i32 %basefd to i64, !dbg !9400
  %3 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 1, !dbg !9401
  %4 = load i32* %3, align 4, !dbg !9401
  %5 = and i32 %4, 1
  %toBool.i = icmp eq i32 %5, 0, !dbg !9401
  br i1 %toBool.i, label %bb1, label %__get_file.exit, !dbg !9401

__get_file.exit:                                  ; preds = %bb.i
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, !dbg !9400
  %7 = icmp eq %struct.exe_file_t* %6, null, !dbg !9402
  br i1 %7, label %bb1, label %bb2, !dbg !9402

bb1:                                              ; preds = %__get_file.exit, %bb.i, %bb
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9403
  store i32 9, i32* %8, align 4, !dbg !9403
  br label %bb21, !dbg !9404

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 3, !dbg !9405
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9405
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9405
  br i1 %11, label %bb4, label %bb3, !dbg !9405

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str52330, i64 0, i64 0)) nounwind, !dbg !9406
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9407
  store i32 2, i32* %12, align 4, !dbg !9407
  br label %bb21, !dbg !9408

bb4:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 0, !dbg !9409
  %14 = load i32* %13, align 8, !dbg !9409
  %phitmp = sext i32 %14 to i64
  br label %bb5, !dbg !9409

bb5:                                              ; preds = %bb4, %entry
  %basefd_addr.0 = phi i64 [ %phitmp, %bb4 ], [ -100, %entry ]
  %15 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9410
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !9411
  br i1 %16, label %bb10, label %bb6, !dbg !9411

bb6:                                              ; preds = %bb5
  %17 = tail call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9412
  br label %bb21, !dbg !9412

bb8:                                              ; preds = %bb10
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %18 = load i32* %scevgep, align 4, !dbg !9413
  %19 = and i32 %18, 1, !dbg !9413
  %20 = icmp eq i32 %19, 0, !dbg !9413
  br i1 %20, label %bb13, label %bb9, !dbg !9413

bb9:                                              ; preds = %bb8
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !9414

bb10:                                             ; preds = %bb9, %bb5
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %bb5 ]
  %fd.0 = trunc i64 %indvar to i32
  %21 = icmp slt i32 %fd.0, 32, !dbg !9414
  br i1 %21, label %bb8, label %bb11, !dbg !9414

bb11:                                             ; preds = %bb10
  %22 = icmp eq i32 %fd.0, 32, !dbg !9415
  br i1 %22, label %bb12, label %bb13, !dbg !9415

bb12:                                             ; preds = %bb11
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9416
  store i32 24, i32* %23, align 4, !dbg !9416
  br label %bb21, !dbg !9417

bb13:                                             ; preds = %bb11, %bb8
  %24 = sext i32 %fd.0 to i64, !dbg !9418
  %25 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, !dbg !9418
  %26 = bitcast %struct.exe_file_t* %25 to i8*, !dbg !9419
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  %28 = sext i32 %flags to i64, !dbg !9420
  %29 = ptrtoint i8* %pathname to i64, !dbg !9421
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9421
  %31 = inttoptr i64 %30 to i8*, !dbg !9421
  %32 = icmp eq i8* %31, %pathname, !dbg !9423
  %33 = zext i1 %32 to i64, !dbg !9423
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9423
  br label %bb.i23, !dbg !9424

bb.i23:                                           ; preds = %bb13.i, %bb13
  %sc.0.i = phi i8* [ %31, %bb13 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb13 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9425
  %36 = load i8* @UseConcretePath, align 1, !dbg !9426
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9426
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9426

bb7.i:                                            ; preds = %bb.i23
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9426
  %38 = icmp eq i32 %37, 0, !dbg !9426
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9426

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9427
  br label %__concretize_string.exit, !dbg !9427

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9428
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9428
  br label %bb13.i, !dbg !9428

bb12.i:                                           ; preds = %bb7.i, %bb.i23
  %40 = sext i8 %35 to i64, !dbg !9429
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9429
  %42 = trunc i64 %41 to i8, !dbg !9429
  %43 = icmp eq i8 %42, %35, !dbg !9430
  %44 = zext i1 %43 to i64, !dbg !9430
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9430
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9431
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9431
  %46 = icmp eq i8 %42, 0, !dbg !9432
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9432

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9424
  br label %bb.i23, !dbg !9424

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 257, i64 %basefd_addr.0, i8* %pathname, i64 %28, i32 %mode) nounwind, !dbg !9420
  %49 = trunc i64 %48 to i32, !dbg !9420
  %50 = icmp eq i32 %49, -1, !dbg !9433
  br i1 %50, label %bb14, label %bb15, !dbg !9433

bb14:                                             ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9434
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9434
  store i32 %52, i32* %51, align 4, !dbg !9434
  br label %bb21, !dbg !9435

bb15:                                             ; preds = %__concretize_string.exit
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 0, !dbg !9436
  store i32 %49, i32* %53, align 8, !dbg !9436
  %54 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 1, !dbg !9437
  store i32 1, i32* %54, align 4, !dbg !9437
  %55 = and i32 %flags, 3, !dbg !9438
  switch i32 %55, label %bb19 [
    i32 0, label %bb16
    i32 1, label %bb18
  ]

bb16:                                             ; preds = %bb15
  store i32 5, i32* %54, align 4, !dbg !9439
  br label %bb21, !dbg !9439

bb18:                                             ; preds = %bb15
  store i32 9, i32* %54, align 4, !dbg !9440
  br label %bb21, !dbg !9440

bb19:                                             ; preds = %bb15
  store i32 13, i32* %54, align 4, !dbg !9441
  br label %bb21, !dbg !9441

bb21:                                             ; preds = %bb19, %bb18, %bb16, %bb14, %bb12, %bb6, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ %17, %bb6 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %fd.0, %bb19 ], [ %fd.0, %bb18 ], [ %fd.0, %bb16 ]
  ret i32 %.0, !dbg !9404
}

define i32 @kill(i32 %pid, i32 %sig) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str2344, i64 0, i64 0)) nounwind, !dbg !9442
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9444
  store i32 1, i32* %0, align 4, !dbg !9444
  ret i32 -1, !dbg !9445
}

define i32 @fork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str342, i64 0, i64 0)) nounwind, !dbg !9446
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9448
  store i32 12, i32* %0, align 4, !dbg !9448
  ret i32 -1, !dbg !9449
}

define i32 @vfork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str342, i64 0, i64 0)) nounwind, !dbg !9450
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9453
  store i32 12, i32* %0, align 4, !dbg !9453
  ret i32 -1, !dbg !9451
}

define weak i32 @execve(i8* %file, i8** %argv, i8** %envp) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9454
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9454
  store i32 13, i32* %0, align 4, !dbg !9454
  ret i32 -1, !dbg !9455
}

define weak i32 @execvp(i8* %file, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9457
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9457
  store i32 13, i32* %0, align 4, !dbg !9457
  ret i32 -1, !dbg !9458
}

define weak i32 @execv(i8* %path, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9460
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9460
  store i32 13, i32* %0, align 4, !dbg !9460
  ret i32 -1, !dbg !9461
}

define weak i32 @execle(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9463
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !9463
  store i32 13, i32* %0, align 4, !dbg !9463
  ret i32 -1, !dbg !9464
}

define weak i32 @execlp(i8* %file, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9466
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !9466
  store i32 13, i32* %0, align 4, !dbg !9466
  ret i32 -1, !dbg !9467
}

define weak i32 @execl(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1343, i64 0, i64 0)) nounwind, !dbg !9469
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !9469
  store i32 13, i32* %0, align 4, !dbg !9469
  ret i32 -1, !dbg !9470
}

define void @longjmp(%struct.__jmp_buf_tag* nocapture %env, i32 %val) noreturn nounwind {
entry:
  tail call void @klee_report_error(i8* getelementptr inbounds ([10 x i8]* @.str3345, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([20 x i8]* @.str4346, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str5347, i64 0, i64 0)) noreturn nounwin
  unreachable, !dbg !9472
}

declare void @klee_report_error(i8*, i32, i8*, i8*) noreturn

define weak i32 @_setjmp(%struct.__jmp_buf_tag* %__env) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([9 x i8]* @.str6348, i64 0, i64 0)) nounwind, !dbg !9474
  ret i32 0, !dbg !9476
}

define void @klee_init_env(i32* nocapture %argcPtr, i8*** nocapture %argvPtr) nounwind {
entry:
  %new_argv = alloca [1024 x i8*], align 8
  %stream_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %dgram_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %sym_arg_name = alloca [5 x i8], align 1
  %0 = load i32* %argcPtr, align 4, !dbg !9477
  %1 = load i8*** %argvPtr, align 8, !dbg !9478
  %2 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 0, !dbg !9479
  store i8 97, i8* %2, align 1, !dbg !9479
  %3 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 1, !dbg !9479
  store i8 114, i8* %3, align 1, !dbg !9479
  %4 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 2, !dbg !9479
  store i8 103, i8* %4, align 1, !dbg !9479
  %5 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 3, !dbg !9479
  store i8 0, i8* %5, align 1, !dbg !9479
  %6 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 4, !dbg !9480
  store i8 0, i8* %6, align 1, !dbg !9480
  %7 = icmp eq i32 %0, 2, !dbg !9481
  br i1 %7, label %bb, label %bb99, !dbg !9481

bb:                                               ; preds = %entry
  %8 = call i32 @klee_shadow_enabled() nounwind, !dbg !9481
  %9 = icmp eq i32 %8, 0, !dbg !9481
  br i1 %9, label %bb1, label %bb99, !dbg !9481

bb1:                                              ; preds = %bb
  %10 = getelementptr inbounds i8** %1, i64 1, !dbg !9481
  %11 = load i8** %10, align 8, !dbg !9481
  br label %bb3.i, !dbg !9482

bb.i:                                             ; preds = %bb3.i
  %12 = icmp eq i8 %13, 0, !dbg !9484
  br i1 %12, label %bb2, label %bb2.i, !dbg !9484

bb2.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb3.i, !dbg !9485

bb3.i:                                            ; preds = %bb2.i, %bb1
  %indvar.i = phi i64 [ %indvar.next.i, %bb2.i ], [ 0, %bb1 ]
  %a_addr.0.i = getelementptr i8* %11, i64 %indvar.i
  %b_addr.0.i = getelementptr [7 x i8]* @.str5354, i64 0, i64 %indvar.i
  %13 = load i8* %a_addr.0.i, align 1, !dbg !9482
  %14 = load i8* %b_addr.0.i, align 1, !dbg !9482
  %15 = icmp eq i8 %13, %14, !dbg !9482
  br i1 %15, label %bb.i, label %bb99, !dbg !9482

bb2:                                              ; preds = %bb.i
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([593 x i8]* @.str6355, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9486

bb3:                                              ; preds = %bb99
  %16 = sext i32 %k.0 to i64, !dbg !9489
  %17 = getelementptr inbounds i8** %1, i64 %16, !dbg !9489
  %18 = load i8** %17, align 8, !dbg !9489
  br label %bb3.i112, !dbg !9490

bb.i106:                                          ; preds = %bb3.i112
  %19 = icmp eq i8 %20, 0, !dbg !9491
  br i1 %19, label %bb5, label %bb2.i108, !dbg !9491

bb2.i108:                                         ; preds = %bb.i106
  %indvar.next.i107 = add i64 %indvar.i109, 1
  br label %bb3.i112, !dbg !9492

bb3.i112:                                         ; preds = %bb2.i108, %bb3
  %indvar.i109 = phi i64 [ %indvar.next.i107, %bb2.i108 ], [ 0, %bb3 ]
  %a_addr.0.i111 = getelementptr i8* %18, i64 %indvar.i109
  %b_addr.0.i110 = getelementptr [10 x i8]* @.str7356, i64 0, i64 %indvar.i109
  %20 = load i8* %a_addr.0.i111, align 1, !dbg !9490
  %21 = load i8* %b_addr.0.i110, align 1, !dbg !9490
  %22 = icmp eq i8 %20, %21, !dbg !9490
  br i1 %22, label %bb.i106, label %bb3.i122, !dbg !9490

bb.i116:                                          ; preds = %bb3.i122
  %23 = icmp eq i8 %24, 0, !dbg !9491
  br i1 %23, label %bb5, label %bb2.i118, !dbg !9491

bb2.i118:                                         ; preds = %bb.i116
  %indvar.next.i117 = add i64 %indvar.i119, 1
  br label %bb3.i122, !dbg !9492

bb3.i122:                                         ; preds = %bb2.i118, %bb3.i112
  %indvar.i119 = phi i64 [ %indvar.next.i117, %bb2.i118 ], [ 0, %bb3.i112 ]
  %a_addr.0.i121 = getelementptr i8* %18, i64 %indvar.i119
  %b_addr.0.i120 = getelementptr [9 x i8]* @.str8357, i64 0, i64 %indvar.i119
  %24 = load i8* %a_addr.0.i121, align 1, !dbg !9490
  %25 = load i8* %b_addr.0.i120, align 1, !dbg !9490
  %26 = icmp eq i8 %24, %25, !dbg !9490
  br i1 %26, label %bb.i116, label %bb3.i139, !dbg !9490

bb5:                                              ; preds = %bb.i116, %bb.i106
  %27 = add nsw i32 %k.0, 1, !dbg !9493
  %28 = icmp eq i32 %27, %0, !dbg !9493
  br i1 %28, label %bb6, label %bb7, !dbg !9493

bb6:                                              ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9358, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9494

bb7:                                              ; preds = %bb5
  %29 = sext i32 %27 to i64, !dbg !9496
  %30 = getelementptr inbounds i8** %1, i64 %29, !dbg !9496
  %31 = load i8** %30, align 8, !dbg !9496
  %32 = add i32 %k.0, 2, !dbg !9496
  %33 = load i8* %31, align 1, !dbg !9497
  switch i8 %33, label %bb9.preheader.i [
    i8 0, label %bb.i127
    i8 48, label %bb2.i128
  ]

bb.i127:                                          ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9358, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9498

bb2.i128:                                         ; preds = %bb7
  %34 = getelementptr inbounds i8* %31, i64 1, !dbg !9499
  %35 = load i8* %34, align 1, !dbg !9499
  switch i8 %35, label %bb9.preheader.i [
    i8 120, label %bb5.i
    i8 88, label %bb5.i
  ]

bb5.i:                                            ; preds = %bb2.i128, %bb2.i128
  %36 = getelementptr inbounds i8* %31, i64 2, !dbg !9500
  br label %bb9.preheader.i, !dbg !9500

bb9.preheader.i:                                  ; preds = %bb5.i, %bb2.i128, %bb7
  %base.0.ph.i = phi i64 [ 10, %bb2.i128 ], [ 16, %bb5.i ], [ 10, %bb7 ]
  %s_addr.0.ph.i = phi i8* [ %31, %bb2.i128 ], [ %36, %bb5.i ], [ %31, %bb7 ]
  br label %bb9.i

bb6.i:                                            ; preds = %bb9.i
  %37 = add i8 %53, -48, !dbg !9501
  %38 = icmp ult i8 %37, 10, !dbg !9501
  br i1 %38, label %bb.i143, label %bb1.i, !dbg !9501

bb.i143:                                          ; preds = %bb6.i
  %39 = sext i8 %53 to i32, !dbg !9501
  %40 = add nsw i32 %39, -48, !dbg !9501
  br label %__getxdigit.exit, !dbg !9501

bb1.i:                                            ; preds = %bb6.i
  %41 = add i8 %53, -65, !dbg !9501
  %42 = icmp ult i8 %41, 6, !dbg !9501
  br i1 %42, label %bb2.i144, label %bb3.i145, !dbg !9501

bb2.i144:                                         ; preds = %bb1.i
  %43 = sext i8 %53 to i32, !dbg !9501
  %44 = add nsw i32 %43, -55, !dbg !9501
  br label %__getxdigit.exit, !dbg !9501

bb3.i145:                                         ; preds = %bb1.i
  %45 = add i8 %53, -97, !dbg !9501
  %46 = icmp ult i8 %45, 6, !dbg !9501
  br i1 %46, label %bb4.i, label %bb8.i, !dbg !9501

bb4.i:                                            ; preds = %bb3.i145
  %47 = sext i8 %53 to i32, !dbg !9501
  %48 = add nsw i32 %47, -87, !dbg !9501
  br label %__getxdigit.exit, !dbg !9501

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i144, %bb.i143
  %iftmp.12.0.i = phi i32 [ %40, %bb.i143 ], [ %44, %bb2.i144 ], [ %48, %bb4.i ]
  %49 = icmp eq i32 %iftmp.12.0.i, -1, !dbg !9504
  br i1 %49, label %bb8.i, label %bb7.i, !dbg !9504

bb7.i:                                            ; preds = %__getxdigit.exit
  %50 = mul nsw i64 %res.0.ph.i, %base.0.ph.i, !dbg !9505
  %51 = sext i32 %iftmp.12.0.i to i64, !dbg !9505
  %52 = add nsw i64 %51, %50, !dbg !9505
  %indvar.next1718 = add i64 %indvar1717, 1
  br label %bb9.i, !dbg !9505

bb8.i:                                            ; preds = %__getxdigit.exit, %bb3.i145
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9358, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9506

bb9.i:                                            ; preds = %bb7.i, %bb9.preheader.i
  %indvar1717 = phi i64 [ 0, %bb9.preheader.i ], [ %indvar.next1718, %bb7.i ]
  %res.0.ph.i = phi i64 [ 0, %bb9.preheader.i ], [ %52, %bb7.i ]
  %s_addr.0.ph14.i = getelementptr i8* %s_addr.0.ph.i, i64 %indvar1717
  %53 = load i8* %s_addr.0.ph14.i, align 1, !dbg !9508
  %54 = icmp eq i8 %53, 0, !dbg !9508
  br i1 %54, label %__str_to_int.exit, label %bb6.i, !dbg !9508

__str_to_int.exit:                                ; preds = %bb9.i
  %55 = trunc i64 %res.0.ph.i to i32, !dbg !9496
  %56 = trunc i32 %sym_arg_num.1 to i8, !dbg !9509
  %57 = add i8 %56, 48, !dbg !9509
  store i8 %57, i8* %5, align 1, !dbg !9509
  %58 = call fastcc i8* @__get_sym_str(i32 %55, i8* %2) nounwind, !dbg !9510
  %59 = icmp eq i32 %704, 1024, !dbg !9511
  br i1 %59, label %bb.i131, label %__add_arg.exit132, !dbg !9511

bb.i131:                                          ; preds = %__str_to_int.exit
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3353, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9513

__add_arg.exit132:                                ; preds = %__str_to_int.exit
  %60 = add i32 %sym_arg_num.1, 1, !dbg !9509
  %61 = sext i32 %704 to i64, !dbg !9515
  %62 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %61, !dbg !9515
  store i8* %58, i8** %62, align 8, !dbg !9515
  %63 = add nsw i32 %704, 1, !dbg !9516
  br label %bb99, !dbg !9510

bb.i133:                                          ; preds = %bb3.i139
  %64 = icmp eq i8 %65, 0, !dbg !9517
  br i1 %64, label %bb12, label %bb2.i135, !dbg !9517

bb2.i135:                                         ; preds = %bb.i133
  %indvar.next.i134 = add i64 %indvar.i136, 1
  br label %bb3.i139, !dbg !9519

bb3.i139:                                         ; preds = %bb2.i135, %bb3.i122
  %indvar.i136 = phi i64 [ %indvar.next.i134, %bb2.i135 ], [ 0, %bb3.i122 ]
  %a_addr.0.i138 = getelementptr i8* %18, i64 %indvar.i136
  %b_addr.0.i137 = getelementptr [11 x i8]* @.str10359, i64 0, i64 %indvar.i136
  %65 = load i8* %a_addr.0.i138, align 1, !dbg !9520
  %66 = load i8* %b_addr.0.i137, align 1, !dbg !9520
  %67 = icmp eq i8 %65, %66, !dbg !9520
  br i1 %67, label %bb.i133, label %bb3.i153, !dbg !9520

bb.i147:                                          ; preds = %bb3.i153
  %68 = icmp eq i8 %69, 0, !dbg !9517
  br i1 %68, label %bb12, label %bb2.i149, !dbg !9517

bb2.i149:                                         ; preds = %bb.i147
  %indvar.next.i148 = add i64 %indvar.i150, 1
  br label %bb3.i153, !dbg !9519

bb3.i153:                                         ; preds = %bb2.i149, %bb3.i139
  %indvar.i150 = phi i64 [ %indvar.next.i148, %bb2.i149 ], [ 0, %bb3.i139 ]
  %a_addr.0.i152 = getelementptr i8* %18, i64 %indvar.i150
  %b_addr.0.i151 = getelementptr [10 x i8]* @.str11360, i64 0, i64 %indvar.i150
  %69 = load i8* %a_addr.0.i152, align 1, !dbg !9520
  %70 = load i8* %b_addr.0.i151, align 1, !dbg !9520
  %71 = icmp eq i8 %69, %70, !dbg !9520
  br i1 %71, label %bb.i147, label %bb3.i233, !dbg !9520

bb12:                                             ; preds = %bb.i147, %bb.i133
  %72 = add nsw i32 %k.0, 3, !dbg !9521
  %73 = icmp slt i32 %72, %0, !dbg !9521
  br i1 %73, label %bb15, label %bb14, !dbg !9521

bb14:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9522

bb15:                                             ; preds = %bb12
  %74 = add nsw i32 %k.0, 1, !dbg !9524
  %75 = sext i32 %74 to i64, !dbg !9525
  %76 = getelementptr inbounds i8** %1, i64 %75, !dbg !9525
  %77 = load i8** %76, align 8, !dbg !9525
  %78 = add i32 %k.0, 2, !dbg !9525
  %79 = load i8* %77, align 1, !dbg !9526
  switch i8 %79, label %bb9.preheader.i173 [
    i8 0, label %bb.i168
    i8 48, label %bb2.i169
  ]

bb.i168:                                          ; preds = %bb15
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9527

bb2.i169:                                         ; preds = %bb15
  %80 = getelementptr inbounds i8* %77, i64 1, !dbg !9528
  %81 = load i8* %80, align 1, !dbg !9528
  switch i8 %81, label %bb9.preheader.i173 [
    i8 120, label %bb5.i170
    i8 88, label %bb5.i170
  ]

bb5.i170:                                         ; preds = %bb2.i169, %bb2.i169
  %82 = getelementptr inbounds i8* %77, i64 2, !dbg !9529
  br label %bb9.preheader.i173, !dbg !9529

bb9.preheader.i173:                               ; preds = %bb5.i170, %bb2.i169, %bb15
  %base.0.ph.i171 = phi i64 [ 10, %bb2.i169 ], [ 16, %bb5.i170 ], [ 10, %bb15 ]
  %s_addr.0.ph.i172 = phi i8* [ %77, %bb2.i169 ], [ %82, %bb5.i170 ], [ %77, %bb15 ]
  br label %bb9.i184

bb6.i174:                                         ; preds = %bb9.i184
  %83 = add i8 %99, -48, !dbg !9530
  %84 = icmp ult i8 %83, 10, !dbg !9530
  br i1 %84, label %bb.i348, label %bb1.i349, !dbg !9530

bb.i348:                                          ; preds = %bb6.i174
  %85 = sext i8 %99 to i32, !dbg !9530
  %86 = add nsw i32 %85, -48, !dbg !9530
  br label %__getxdigit.exit355, !dbg !9530

bb1.i349:                                         ; preds = %bb6.i174
  %87 = add i8 %99, -65, !dbg !9530
  %88 = icmp ult i8 %87, 6, !dbg !9530
  br i1 %88, label %bb2.i350, label %bb3.i351, !dbg !9530

bb2.i350:                                         ; preds = %bb1.i349
  %89 = sext i8 %99 to i32, !dbg !9530
  %90 = add nsw i32 %89, -55, !dbg !9530
  br label %__getxdigit.exit355, !dbg !9530

bb3.i351:                                         ; preds = %bb1.i349
  %91 = add i8 %99, -97, !dbg !9530
  %92 = icmp ult i8 %91, 6, !dbg !9530
  br i1 %92, label %bb4.i352, label %bb8.i180, !dbg !9530

bb4.i352:                                         ; preds = %bb3.i351
  %93 = sext i8 %99 to i32, !dbg !9530
  %94 = add nsw i32 %93, -87, !dbg !9530
  br label %__getxdigit.exit355, !dbg !9530

__getxdigit.exit355:                              ; preds = %bb4.i352, %bb2.i350, %bb.i348
  %iftmp.12.0.i353 = phi i32 [ %86, %bb.i348 ], [ %90, %bb2.i350 ], [ %94, %bb4.i352 ]
  %95 = icmp eq i32 %iftmp.12.0.i353, -1, !dbg !9532
  br i1 %95, label %bb8.i180, label %bb7.i176, !dbg !9532

bb7.i176:                                         ; preds = %__getxdigit.exit355
  %96 = mul nsw i64 %res.0.ph.i177, %base.0.ph.i171, !dbg !9533
  %97 = sext i32 %iftmp.12.0.i353 to i64, !dbg !9533
  %98 = add nsw i64 %97, %96, !dbg !9533
  %indvar.next1683 = add i64 %indvar1682, 1
  br label %bb9.i184, !dbg !9533

bb8.i180:                                         ; preds = %__getxdigit.exit355, %bb3.i351
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9534

bb9.i184:                                         ; preds = %bb7.i176, %bb9.preheader.i173
  %indvar1682 = phi i64 [ 0, %bb9.preheader.i173 ], [ %indvar.next1683, %bb7.i176 ]
  %res.0.ph.i177 = phi i64 [ 0, %bb9.preheader.i173 ], [ %98, %bb7.i176 ]
  %s_addr.0.ph14.i178 = getelementptr i8* %s_addr.0.ph.i172, i64 %indvar1682
  %99 = load i8* %s_addr.0.ph14.i178, align 1, !dbg !9536
  %100 = icmp eq i8 %99, 0, !dbg !9536
  br i1 %100, label %__str_to_int.exit185, label %bb6.i174, !dbg !9536

__str_to_int.exit185:                             ; preds = %bb9.i184
  %101 = trunc i64 %res.0.ph.i177 to i32, !dbg !9525
  %102 = sext i32 %78 to i64, !dbg !9537
  %103 = getelementptr inbounds i8** %1, i64 %102, !dbg !9537
  %104 = load i8** %103, align 8, !dbg !9537
  %105 = load i8* %104, align 1, !dbg !9538
  switch i8 %105, label %bb9.preheader.i192 [
    i8 0, label %bb.i187
    i8 48, label %bb2.i188
  ]

bb.i187:                                          ; preds = %__str_to_int.exit185
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9539

bb2.i188:                                         ; preds = %__str_to_int.exit185
  %106 = getelementptr inbounds i8* %104, i64 1, !dbg !9540
  %107 = load i8* %106, align 1, !dbg !9540
  switch i8 %107, label %bb9.preheader.i192 [
    i8 120, label %bb5.i189
    i8 88, label %bb5.i189
  ]

bb5.i189:                                         ; preds = %bb2.i188, %bb2.i188
  %108 = getelementptr inbounds i8* %104, i64 2, !dbg !9541
  br label %bb9.preheader.i192, !dbg !9541

bb9.preheader.i192:                               ; preds = %bb5.i189, %bb2.i188, %__str_to_int.exit185
  %base.0.ph.i190 = phi i64 [ 10, %bb2.i188 ], [ 16, %bb5.i189 ], [ 10, %__str_to_int.exit185 ]
  %s_addr.0.ph.i191 = phi i8* [ %104, %bb2.i188 ], [ %108, %bb5.i189 ], [ %104, %__str_to_int.exit185 ]
  br label %bb9.i203

bb6.i193:                                         ; preds = %bb9.i203
  %109 = add i8 %125, -48, !dbg !9542
  %110 = icmp ult i8 %109, 10, !dbg !9542
  br i1 %110, label %bb.i255, label %bb1.i256, !dbg !9542

bb.i255:                                          ; preds = %bb6.i193
  %111 = sext i8 %125 to i32, !dbg !9542
  %112 = add nsw i32 %111, -48, !dbg !9542
  br label %__getxdigit.exit262, !dbg !9542

bb1.i256:                                         ; preds = %bb6.i193
  %113 = add i8 %125, -65, !dbg !9542
  %114 = icmp ult i8 %113, 6, !dbg !9542
  br i1 %114, label %bb2.i257, label %bb3.i258, !dbg !9542

bb2.i257:                                         ; preds = %bb1.i256
  %115 = sext i8 %125 to i32, !dbg !9542
  %116 = add nsw i32 %115, -55, !dbg !9542
  br label %__getxdigit.exit262, !dbg !9542

bb3.i258:                                         ; preds = %bb1.i256
  %117 = add i8 %125, -97, !dbg !9542
  %118 = icmp ult i8 %117, 6, !dbg !9542
  br i1 %118, label %bb4.i259, label %bb8.i199, !dbg !9542

bb4.i259:                                         ; preds = %bb3.i258
  %119 = sext i8 %125 to i32, !dbg !9542
  %120 = add nsw i32 %119, -87, !dbg !9542
  br label %__getxdigit.exit262, !dbg !9542

__getxdigit.exit262:                              ; preds = %bb4.i259, %bb2.i257, %bb.i255
  %iftmp.12.0.i260 = phi i32 [ %112, %bb.i255 ], [ %116, %bb2.i257 ], [ %120, %bb4.i259 ]
  %121 = icmp eq i32 %iftmp.12.0.i260, -1, !dbg !9544
  br i1 %121, label %bb8.i199, label %bb7.i195, !dbg !9544

bb7.i195:                                         ; preds = %__getxdigit.exit262
  %122 = mul nsw i64 %res.0.ph.i196, %base.0.ph.i190, !dbg !9545
  %123 = sext i32 %iftmp.12.0.i260 to i64, !dbg !9545
  %124 = add nsw i64 %123, %122, !dbg !9545
  %indvar.next1686 = add i64 %indvar1685, 1
  br label %bb9.i203, !dbg !9545

bb8.i199:                                         ; preds = %__getxdigit.exit262, %bb3.i258
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9546

bb9.i203:                                         ; preds = %bb7.i195, %bb9.preheader.i192
  %indvar1685 = phi i64 [ 0, %bb9.preheader.i192 ], [ %indvar.next1686, %bb7.i195 ]
  %res.0.ph.i196 = phi i64 [ 0, %bb9.preheader.i192 ], [ %124, %bb7.i195 ]
  %s_addr.0.ph14.i197 = getelementptr i8* %s_addr.0.ph.i191, i64 %indvar1685
  %125 = load i8* %s_addr.0.ph14.i197, align 1, !dbg !9548
  %126 = icmp eq i8 %125, 0, !dbg !9548
  br i1 %126, label %__str_to_int.exit204, label %bb6.i193, !dbg !9548

__str_to_int.exit204:                             ; preds = %bb9.i203
  %127 = trunc i64 %res.0.ph.i196 to i32, !dbg !9537
  %128 = sext i32 %72 to i64, !dbg !9549
  %129 = getelementptr inbounds i8** %1, i64 %128, !dbg !9549
  %130 = load i8** %129, align 8, !dbg !9549
  %131 = add i32 %k.0, 4, !dbg !9549
  %132 = load i8* %130, align 1, !dbg !9550
  switch i8 %132, label %bb9.preheader.i211 [
    i8 0, label %bb.i206
    i8 48, label %bb2.i207
  ]

bb.i206:                                          ; preds = %__str_to_int.exit204
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9551

bb2.i207:                                         ; preds = %__str_to_int.exit204
  %133 = getelementptr inbounds i8* %130, i64 1, !dbg !9552
  %134 = load i8* %133, align 1, !dbg !9552
  switch i8 %134, label %bb9.preheader.i211 [
    i8 120, label %bb5.i208
    i8 88, label %bb5.i208
  ]

bb5.i208:                                         ; preds = %bb2.i207, %bb2.i207
  %135 = getelementptr inbounds i8* %130, i64 2, !dbg !9553
  br label %bb9.preheader.i211, !dbg !9553

bb9.preheader.i211:                               ; preds = %bb5.i208, %bb2.i207, %__str_to_int.exit204
  %base.0.ph.i209 = phi i64 [ 10, %bb2.i207 ], [ 16, %bb5.i208 ], [ 10, %__str_to_int.exit204 ]
  %s_addr.0.ph.i210 = phi i8* [ %130, %bb2.i207 ], [ %135, %bb5.i208 ], [ %130, %__str_to_int.exit204 ]
  br label %bb9.i222

bb6.i212:                                         ; preds = %bb9.i222
  %136 = add i8 %152, -48, !dbg !9554
  %137 = icmp ult i8 %136, 10, !dbg !9554
  br i1 %137, label %bb.i237, label %bb1.i238, !dbg !9554

bb.i237:                                          ; preds = %bb6.i212
  %138 = sext i8 %152 to i32, !dbg !9554
  %139 = add nsw i32 %138, -48, !dbg !9554
  br label %__getxdigit.exit244, !dbg !9554

bb1.i238:                                         ; preds = %bb6.i212
  %140 = add i8 %152, -65, !dbg !9554
  %141 = icmp ult i8 %140, 6, !dbg !9554
  br i1 %141, label %bb2.i239, label %bb3.i240, !dbg !9554

bb2.i239:                                         ; preds = %bb1.i238
  %142 = sext i8 %152 to i32, !dbg !9554
  %143 = add nsw i32 %142, -55, !dbg !9554
  br label %__getxdigit.exit244, !dbg !9554

bb3.i240:                                         ; preds = %bb1.i238
  %144 = add i8 %152, -97, !dbg !9554
  %145 = icmp ult i8 %144, 6, !dbg !9554
  br i1 %145, label %bb4.i241, label %bb8.i218, !dbg !9554

bb4.i241:                                         ; preds = %bb3.i240
  %146 = sext i8 %152 to i32, !dbg !9554
  %147 = add nsw i32 %146, -87, !dbg !9554
  br label %__getxdigit.exit244, !dbg !9554

__getxdigit.exit244:                              ; preds = %bb4.i241, %bb2.i239, %bb.i237
  %iftmp.12.0.i242 = phi i32 [ %139, %bb.i237 ], [ %143, %bb2.i239 ], [ %147, %bb4.i241 ]
  %148 = icmp eq i32 %iftmp.12.0.i242, -1, !dbg !9556
  br i1 %148, label %bb8.i218, label %bb7.i214, !dbg !9556

bb7.i214:                                         ; preds = %__getxdigit.exit244
  %149 = mul nsw i64 %res.0.ph.i215, %base.0.ph.i209, !dbg !9557
  %150 = sext i32 %iftmp.12.0.i242 to i64, !dbg !9557
  %151 = add nsw i64 %150, %149, !dbg !9557
  %indvar.next1689 = add i64 %indvar1688, 1
  br label %bb9.i222, !dbg !9557

bb8.i218:                                         ; preds = %__getxdigit.exit244, %bb3.i240
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12361, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9558

bb9.i222:                                         ; preds = %bb7.i214, %bb9.preheader.i211
  %indvar1688 = phi i64 [ 0, %bb9.preheader.i211 ], [ %indvar.next1689, %bb7.i214 ]
  %res.0.ph.i215 = phi i64 [ 0, %bb9.preheader.i211 ], [ %151, %bb7.i214 ]
  %s_addr.0.ph14.i216 = getelementptr i8* %s_addr.0.ph.i210, i64 %indvar1688
  %152 = load i8* %s_addr.0.ph14.i216, align 1, !dbg !9560
  %153 = icmp eq i8 %152, 0, !dbg !9560
  br i1 %153, label %__str_to_int.exit223, label %bb6.i212, !dbg !9560

__str_to_int.exit223:                             ; preds = %bb9.i222
  %154 = trunc i64 %res.0.ph.i215 to i32, !dbg !9549
  %155 = add i32 %127, 1, !dbg !9561
  %156 = call i32 @klee_range(i32 %101, i32 %155, i8* getelementptr inbounds ([7 x i8]* @.str13362, i64 0, i64 0)) nounwind, !dbg !9561
  %tmp1692 = icmp sgt i32 %156, 0
  %.op = xor i32 %156, -1
  %tmp1693 = select i1 %tmp1692, i32 %.op, i32 -1
  %tmp1694 = add i32 %704, -1025
  %tmp1695 = icmp ugt i32 %tmp1693, %tmp1694
  %umax = select i1 %tmp1695, i32 %tmp1693, i32 %tmp1694
  %tmp = add i32 %sym_arg_num.1, -1
  %sym_arg_num.0 = sub i32 %tmp, %umax
  %tmp1697 = add i32 %704, -1
  %tmp1698 = sub i32 %tmp1697, %umax
  %tmp833 = sext i32 %704 to i64
  %tmp836 = zext i32 %704 to i64
  %tmp839 = zext i32 %sym_arg_num.1 to i64
  %tmp840 = add i64 %tmp839, 48
  br label %bb19, !dbg !9562

bb16:                                             ; preds = %bb19
  %tmp841 = add i64 %tmp840, %indvar1699
  %tmp837 = add i64 %tmp836, %indvar1699
  %tmp1710 = trunc i64 %tmp841 to i8
  %tmp1703 = trunc i64 %tmp837 to i32
  store i8 %tmp1710, i8* %5, align 1, !dbg !9563
  %157 = call fastcc i8* @__get_sym_str(i32 %154, i8* %2) nounwind, !dbg !9564
  %158 = icmp eq i32 %tmp1703, 1024, !dbg !9565
  br i1 %158, label %bb.i225, label %__add_arg.exit226, !dbg !9565

bb.i225:                                          ; preds = %bb16
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3353, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9566

__add_arg.exit226:                                ; preds = %bb16
  store i8* %157, i8** %scevgep, align 8, !dbg !9568
  %indvar.next1700 = add i64 %indvar1699, 1
  br label %bb19, !dbg !9562

bb19:                                             ; preds = %__add_arg.exit226, %__str_to_int.exit223
  %indvar1699 = phi i64 [ %indvar.next1700, %__add_arg.exit226 ], [ 0, %__str_to_int.exit223 ]
  %tmp834 = add i64 %tmp833, %indvar1699
  %scevgep = getelementptr [1024 x i8*]* %new_argv, i64 0, i64 %tmp834
  %i.0 = trunc i64 %indvar1699 to i32
  %159 = icmp slt i32 %i.0, %156, !dbg !9562
  br i1 %159, label %bb16, label %bb99, !dbg !9562

bb.i227:                                          ; preds = %bb3.i233
  %160 = icmp eq i8 %161, 0, !dbg !9569
  br i1 %160, label %bb22, label %bb2.i229, !dbg !9569

bb2.i229:                                         ; preds = %bb.i227
  %indvar.next.i228 = add i64 %indvar.i230, 1
  br label %bb3.i233, !dbg !9571

bb3.i233:                                         ; preds = %bb2.i229, %bb3.i153
  %indvar.i230 = phi i64 [ %indvar.next.i228, %bb2.i229 ], [ 0, %bb3.i153 ]
  %a_addr.0.i232 = getelementptr i8* %18, i64 %indvar.i230
  %b_addr.0.i231 = getelementptr [12 x i8]* @.str14363, i64 0, i64 %indvar.i230
  %161 = load i8* %a_addr.0.i232, align 1, !dbg !9572
  %162 = load i8* %b_addr.0.i231, align 1, !dbg !9572
  %163 = icmp eq i8 %161, %162, !dbg !9572
  br i1 %163, label %bb.i227, label %bb3.i251, !dbg !9572

bb.i245:                                          ; preds = %bb3.i251
  %164 = icmp eq i8 %165, 0, !dbg !9569
  br i1 %164, label %bb22, label %bb2.i247, !dbg !9569

bb2.i247:                                         ; preds = %bb.i245
  %indvar.next.i246 = add i64 %indvar.i248, 1
  br label %bb3.i251, !dbg !9571

bb3.i251:                                         ; preds = %bb2.i247, %bb3.i233
  %indvar.i248 = phi i64 [ %indvar.next.i246, %bb2.i247 ], [ 0, %bb3.i233 ]
  %a_addr.0.i250 = getelementptr i8* %18, i64 %indvar.i248
  %b_addr.0.i249 = getelementptr [11 x i8]* @.str15364, i64 0, i64 %indvar.i248
  %165 = load i8* %a_addr.0.i250, align 1, !dbg !9572
  %166 = load i8* %b_addr.0.i249, align 1, !dbg !9572
  %167 = icmp eq i8 %165, %166, !dbg !9572
  br i1 %167, label %bb.i245, label %bb3.i308, !dbg !9572

bb22:                                             ; preds = %bb.i245, %bb.i227
  %168 = add nsw i32 %k.0, 2, !dbg !9573
  %169 = icmp slt i32 %168, %0, !dbg !9573
  br i1 %169, label %bb25, label %bb24, !dbg !9573

bb24:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16365, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9574

bb25:                                             ; preds = %bb22
  %170 = add nsw i32 %k.0, 1, !dbg !9576
  %171 = sext i32 %170 to i64, !dbg !9577
  %172 = getelementptr inbounds i8** %1, i64 %171, !dbg !9577
  %173 = load i8** %172, align 8, !dbg !9577
  %174 = load i8* %173, align 1, !dbg !9578
  switch i8 %174, label %bb9.preheader.i269 [
    i8 0, label %bb.i264
    i8 48, label %bb2.i265
  ]

bb.i264:                                          ; preds = %bb25
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16365, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9579

bb2.i265:                                         ; preds = %bb25
  %175 = getelementptr inbounds i8* %173, i64 1, !dbg !9580
  %176 = load i8* %175, align 1, !dbg !9580
  switch i8 %176, label %bb9.preheader.i269 [
    i8 120, label %bb5.i266
    i8 88, label %bb5.i266
  ]

bb5.i266:                                         ; preds = %bb2.i265, %bb2.i265
  %177 = getelementptr inbounds i8* %173, i64 2, !dbg !9581
  br label %bb9.preheader.i269, !dbg !9581

bb9.preheader.i269:                               ; preds = %bb5.i266, %bb2.i265, %bb25
  %base.0.ph.i267 = phi i64 [ 10, %bb2.i265 ], [ 16, %bb5.i266 ], [ 10, %bb25 ]
  %s_addr.0.ph.i268 = phi i8* [ %173, %bb2.i265 ], [ %177, %bb5.i266 ], [ %173, %bb25 ]
  br label %bb9.i280

bb6.i270:                                         ; preds = %bb9.i280
  %178 = add i8 %194, -48, !dbg !9582
  %179 = icmp ult i8 %178, 10, !dbg !9582
  br i1 %179, label %bb.i330, label %bb1.i331, !dbg !9582

bb.i330:                                          ; preds = %bb6.i270
  %180 = sext i8 %194 to i32, !dbg !9582
  %181 = add nsw i32 %180, -48, !dbg !9582
  br label %__getxdigit.exit337, !dbg !9582

bb1.i331:                                         ; preds = %bb6.i270
  %182 = add i8 %194, -65, !dbg !9582
  %183 = icmp ult i8 %182, 6, !dbg !9582
  br i1 %183, label %bb2.i332, label %bb3.i333, !dbg !9582

bb2.i332:                                         ; preds = %bb1.i331
  %184 = sext i8 %194 to i32, !dbg !9582
  %185 = add nsw i32 %184, -55, !dbg !9582
  br label %__getxdigit.exit337, !dbg !9582

bb3.i333:                                         ; preds = %bb1.i331
  %186 = add i8 %194, -97, !dbg !9582
  %187 = icmp ult i8 %186, 6, !dbg !9582
  br i1 %187, label %bb4.i334, label %bb8.i276, !dbg !9582

bb4.i334:                                         ; preds = %bb3.i333
  %188 = sext i8 %194 to i32, !dbg !9582
  %189 = add nsw i32 %188, -87, !dbg !9582
  br label %__getxdigit.exit337, !dbg !9582

__getxdigit.exit337:                              ; preds = %bb4.i334, %bb2.i332, %bb.i330
  %iftmp.12.0.i335 = phi i32 [ %181, %bb.i330 ], [ %185, %bb2.i332 ], [ %189, %bb4.i334 ]
  %190 = icmp eq i32 %iftmp.12.0.i335, -1, !dbg !9584
  br i1 %190, label %bb8.i276, label %bb7.i272, !dbg !9584

bb7.i272:                                         ; preds = %__getxdigit.exit337
  %191 = mul nsw i64 %res.0.ph.i273, %base.0.ph.i267, !dbg !9585
  %192 = sext i32 %iftmp.12.0.i335 to i64, !dbg !9585
  %193 = add nsw i64 %192, %191, !dbg !9585
  %indvar.next1677 = add i64 %indvar1676, 1
  br label %bb9.i280, !dbg !9585

bb8.i276:                                         ; preds = %__getxdigit.exit337, %bb3.i333
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16365, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9586

bb9.i280:                                         ; preds = %bb7.i272, %bb9.preheader.i269
  %indvar1676 = phi i64 [ 0, %bb9.preheader.i269 ], [ %indvar.next1677, %bb7.i272 ]
  %res.0.ph.i273 = phi i64 [ 0, %bb9.preheader.i269 ], [ %193, %bb7.i272 ]
  %s_addr.0.ph14.i274 = getelementptr i8* %s_addr.0.ph.i268, i64 %indvar1676
  %194 = load i8* %s_addr.0.ph14.i274, align 1, !dbg !9588
  %195 = icmp eq i8 %194, 0, !dbg !9588
  br i1 %195, label %__str_to_int.exit281, label %bb6.i270, !dbg !9588

__str_to_int.exit281:                             ; preds = %bb9.i280
  %196 = trunc i64 %res.0.ph.i273 to i32, !dbg !9577
  %197 = sext i32 %168 to i64, !dbg !9589
  %198 = getelementptr inbounds i8** %1, i64 %197, !dbg !9589
  %199 = load i8** %198, align 8, !dbg !9589
  %200 = add i32 %k.0, 3, !dbg !9589
  %201 = load i8* %199, align 1, !dbg !9590
  switch i8 %201, label %bb9.preheader.i288 [
    i8 0, label %bb.i283
    i8 48, label %bb2.i284
  ]

bb.i283:                                          ; preds = %__str_to_int.exit281
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16365, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9591

bb2.i284:                                         ; preds = %__str_to_int.exit281
  %202 = getelementptr inbounds i8* %199, i64 1, !dbg !9592
  %203 = load i8* %202, align 1, !dbg !9592
  switch i8 %203, label %bb9.preheader.i288 [
    i8 120, label %bb5.i285
    i8 88, label %bb5.i285
  ]

bb5.i285:                                         ; preds = %bb2.i284, %bb2.i284
  %204 = getelementptr inbounds i8* %199, i64 2, !dbg !9593
  br label %bb9.preheader.i288, !dbg !9593

bb9.preheader.i288:                               ; preds = %bb5.i285, %bb2.i284, %__str_to_int.exit281
  %base.0.ph.i286 = phi i64 [ 10, %bb2.i284 ], [ 16, %bb5.i285 ], [ 10, %__str_to_int.exit281 ]
  %s_addr.0.ph.i287 = phi i8* [ %199, %bb2.i284 ], [ %204, %bb5.i285 ], [ %199, %__str_to_int.exit281 ]
  br label %bb9.i299

bb6.i289:                                         ; preds = %bb9.i299
  %205 = add i8 %221, -48, !dbg !9594
  %206 = icmp ult i8 %205, 10, !dbg !9594
  br i1 %206, label %bb.i312, label %bb1.i313, !dbg !9594

bb.i312:                                          ; preds = %bb6.i289
  %207 = sext i8 %221 to i32, !dbg !9594
  %208 = add nsw i32 %207, -48, !dbg !9594
  br label %__getxdigit.exit319, !dbg !9594

bb1.i313:                                         ; preds = %bb6.i289
  %209 = add i8 %221, -65, !dbg !9594
  %210 = icmp ult i8 %209, 6, !dbg !9594
  br i1 %210, label %bb2.i314, label %bb3.i315, !dbg !9594

bb2.i314:                                         ; preds = %bb1.i313
  %211 = sext i8 %221 to i32, !dbg !9594
  %212 = add nsw i32 %211, -55, !dbg !9594
  br label %__getxdigit.exit319, !dbg !9594

bb3.i315:                                         ; preds = %bb1.i313
  %213 = add i8 %221, -97, !dbg !9594
  %214 = icmp ult i8 %213, 6, !dbg !9594
  br i1 %214, label %bb4.i316, label %bb8.i295, !dbg !9594

bb4.i316:                                         ; preds = %bb3.i315
  %215 = sext i8 %221 to i32, !dbg !9594
  %216 = add nsw i32 %215, -87, !dbg !9594
  br label %__getxdigit.exit319, !dbg !9594

__getxdigit.exit319:                              ; preds = %bb4.i316, %bb2.i314, %bb.i312
  %iftmp.12.0.i317 = phi i32 [ %208, %bb.i312 ], [ %212, %bb2.i314 ], [ %216, %bb4.i316 ]
  %217 = icmp eq i32 %iftmp.12.0.i317, -1, !dbg !9596
  br i1 %217, label %bb8.i295, label %bb7.i291, !dbg !9596

bb7.i291:                                         ; preds = %__getxdigit.exit319
  %218 = mul nsw i64 %res.0.ph.i292, %base.0.ph.i286, !dbg !9597
  %219 = sext i32 %iftmp.12.0.i317 to i64, !dbg !9597
  %220 = add nsw i64 %219, %218, !dbg !9597
  %indvar.next1680 = add i64 %indvar1679, 1
  br label %bb9.i299, !dbg !9597

bb8.i295:                                         ; preds = %__getxdigit.exit319, %bb3.i315
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16365, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9598

bb9.i299:                                         ; preds = %bb7.i291, %bb9.preheader.i288
  %indvar1679 = phi i64 [ 0, %bb9.preheader.i288 ], [ %indvar.next1680, %bb7.i291 ]
  %res.0.ph.i292 = phi i64 [ 0, %bb9.preheader.i288 ], [ %220, %bb7.i291 ]
  %s_addr.0.ph14.i293 = getelementptr i8* %s_addr.0.ph.i287, i64 %indvar1679
  %221 = load i8* %s_addr.0.ph14.i293, align 1, !dbg !9600
  %222 = icmp eq i8 %221, 0, !dbg !9600
  br i1 %222, label %__str_to_int.exit300, label %bb6.i289, !dbg !9600

__str_to_int.exit300:                             ; preds = %bb9.i299
  %223 = trunc i64 %res.0.ph.i292 to i32, !dbg !9589
  br label %bb99, !dbg !9589

bb.i302:                                          ; preds = %bb3.i308
  %224 = icmp eq i8 %225, 0, !dbg !9601
  br i1 %224, label %bb28, label %bb2.i304, !dbg !9601

bb2.i304:                                         ; preds = %bb.i302
  %indvar.next.i303 = add i64 %indvar.i305, 1
  br label %bb3.i308, !dbg !9603

bb3.i308:                                         ; preds = %bb2.i304, %bb3.i251
  %indvar.i305 = phi i64 [ %indvar.next.i303, %bb2.i304 ], [ 0, %bb3.i251 ]
  %a_addr.0.i307 = getelementptr i8* %18, i64 %indvar.i305
  %b_addr.0.i306 = getelementptr [13 x i8]* @.str17366, i64 0, i64 %indvar.i305
  %225 = load i8* %a_addr.0.i307, align 1, !dbg !9604
  %226 = load i8* %b_addr.0.i306, align 1, !dbg !9604
  %227 = icmp eq i8 %225, %226, !dbg !9604
  br i1 %227, label %bb.i302, label %bb3.i326, !dbg !9604

bb.i320:                                          ; preds = %bb3.i326
  %228 = icmp eq i8 %229, 0, !dbg !9601
  br i1 %228, label %bb28, label %bb2.i322, !dbg !9601

bb2.i322:                                         ; preds = %bb.i320
  %indvar.next.i321 = add i64 %indvar.i323, 1
  br label %bb3.i326, !dbg !9603

bb3.i326:                                         ; preds = %bb2.i322, %bb3.i308
  %indvar.i323 = phi i64 [ %indvar.next.i321, %bb2.i322 ], [ 0, %bb3.i308 ]
  %a_addr.0.i325 = getelementptr i8* %18, i64 %indvar.i323
  %b_addr.0.i324 = getelementptr [12 x i8]* @.str18367, i64 0, i64 %indvar.i323
  %229 = load i8* %a_addr.0.i325, align 1, !dbg !9604
  %230 = load i8* %b_addr.0.i324, align 1, !dbg !9604
  %231 = icmp eq i8 %229, %230, !dbg !9604
  br i1 %231, label %bb.i320, label %bb3.i344, !dbg !9604

bb28:                                             ; preds = %bb.i320, %bb.i302
  %232 = add nsw i32 %k.0, 1, !dbg !9605
  br label %bb99, !dbg !9605

bb.i338:                                          ; preds = %bb3.i344
  %233 = icmp eq i8 %234, 0, !dbg !9606
  br i1 %233, label %bb31, label %bb2.i340, !dbg !9606

bb2.i340:                                         ; preds = %bb.i338
  %indvar.next.i339 = add i64 %indvar.i341, 1
  br label %bb3.i344, !dbg !9608

bb3.i344:                                         ; preds = %bb2.i340, %bb3.i326
  %indvar.i341 = phi i64 [ %indvar.next.i339, %bb2.i340 ], [ 0, %bb3.i326 ]
  %a_addr.0.i343 = getelementptr i8* %18, i64 %indvar.i341
  %b_addr.0.i342 = getelementptr [18 x i8]* @.str19368, i64 0, i64 %indvar.i341
  %234 = load i8* %a_addr.0.i343, align 1, !dbg !9609
  %235 = load i8* %b_addr.0.i342, align 1, !dbg !9609
  %236 = icmp eq i8 %234, %235, !dbg !9609
  br i1 %236, label %bb.i338, label %bb3.i362, !dbg !9609

bb.i356:                                          ; preds = %bb3.i362
  %237 = icmp eq i8 %238, 0, !dbg !9606
  br i1 %237, label %bb31, label %bb2.i358, !dbg !9606

bb2.i358:                                         ; preds = %bb.i356
  %indvar.next.i357 = add i64 %indvar.i359, 1
  br label %bb3.i362, !dbg !9608

bb3.i362:                                         ; preds = %bb2.i358, %bb3.i344
  %indvar.i359 = phi i64 [ %indvar.next.i357, %bb2.i358 ], [ 0, %bb3.i344 ]
  %a_addr.0.i361 = getelementptr i8* %18, i64 %indvar.i359
  %b_addr.0.i360 = getelementptr [17 x i8]* @.str20369, i64 0, i64 %indvar.i359
  %238 = load i8* %a_addr.0.i361, align 1, !dbg !9609
  %239 = load i8* %b_addr.0.i360, align 1, !dbg !9609
  %240 = icmp eq i8 %238, %239, !dbg !9609
  br i1 %240, label %bb.i356, label %bb3.i373, !dbg !9609

bb31:                                             ; preds = %bb.i356, %bb.i338
  %241 = add nsw i32 %k.0, 1, !dbg !9610
  br label %bb99, !dbg !9610

bb.i367:                                          ; preds = %bb3.i373
  %242 = icmp eq i8 %243, 0, !dbg !9611
  br i1 %242, label %bb34, label %bb2.i369, !dbg !9611

bb2.i369:                                         ; preds = %bb.i367
  %indvar.next.i368 = add i64 %indvar.i370, 1
  br label %bb3.i373, !dbg !9613

bb3.i373:                                         ; preds = %bb2.i369, %bb3.i362
  %indvar.i370 = phi i64 [ %indvar.next.i368, %bb2.i369 ], [ 0, %bb3.i362 ]
  %a_addr.0.i372 = getelementptr i8* %18, i64 %indvar.i370
  %b_addr.0.i371 = getelementptr [10 x i8]* @.str21370, i64 0, i64 %indvar.i370
  %243 = load i8* %a_addr.0.i372, align 1, !dbg !9614
  %244 = load i8* %b_addr.0.i371, align 1, !dbg !9614
  %245 = icmp eq i8 %243, %244, !dbg !9614
  br i1 %245, label %bb.i367, label %bb3.i412, !dbg !9614

bb.i406:                                          ; preds = %bb3.i412
  %246 = icmp eq i8 %247, 0, !dbg !9611
  br i1 %246, label %bb34, label %bb2.i408, !dbg !9611

bb2.i408:                                         ; preds = %bb.i406
  %indvar.next.i407 = add i64 %indvar.i409, 1
  br label %bb3.i412, !dbg !9613

bb3.i412:                                         ; preds = %bb2.i408, %bb3.i373
  %indvar.i409 = phi i64 [ %indvar.next.i407, %bb2.i408 ], [ 0, %bb3.i373 ]
  %a_addr.0.i411 = getelementptr i8* %18, i64 %indvar.i409
  %b_addr.0.i410 = getelementptr [9 x i8]* @.str22371, i64 0, i64 %indvar.i409
  %247 = load i8* %a_addr.0.i411, align 1, !dbg !9614
  %248 = load i8* %b_addr.0.i410, align 1, !dbg !9614
  %249 = icmp eq i8 %247, %248, !dbg !9614
  br i1 %249, label %bb.i406, label %bb3.i430, !dbg !9614

bb34:                                             ; preds = %bb.i406, %bb.i367
  %250 = add nsw i32 %k.0, 1, !dbg !9615
  br label %bb99, !dbg !9615

bb.i424:                                          ; preds = %bb3.i430
  %251 = icmp eq i8 %252, 0, !dbg !9616
  br i1 %251, label %bb37, label %bb2.i426, !dbg !9616

bb2.i426:                                         ; preds = %bb.i424
  %indvar.next.i425 = add i64 %indvar.i427, 1
  br label %bb3.i430, !dbg !9618

bb3.i430:                                         ; preds = %bb2.i426, %bb3.i412
  %indvar.i427 = phi i64 [ %indvar.next.i425, %bb2.i426 ], [ 0, %bb3.i412 ]
  %a_addr.0.i429 = getelementptr i8* %18, i64 %indvar.i427
  %b_addr.0.i428 = getelementptr [11 x i8]* @.str23372, i64 0, i64 %indvar.i427
  %252 = load i8* %a_addr.0.i429, align 1, !dbg !9619
  %253 = load i8* %b_addr.0.i428, align 1, !dbg !9619
  %254 = icmp eq i8 %252, %253, !dbg !9619
  br i1 %254, label %bb.i424, label %bb3.i459, !dbg !9619

bb.i453:                                          ; preds = %bb3.i459
  %255 = icmp eq i8 %256, 0, !dbg !9616
  br i1 %255, label %bb37, label %bb2.i455, !dbg !9616

bb2.i455:                                         ; preds = %bb.i453
  %indvar.next.i454 = add i64 %indvar.i456, 1
  br label %bb3.i459, !dbg !9618

bb3.i459:                                         ; preds = %bb2.i455, %bb3.i430
  %indvar.i456 = phi i64 [ %indvar.next.i454, %bb2.i455 ], [ 0, %bb3.i430 ]
  %a_addr.0.i458 = getelementptr i8* %18, i64 %indvar.i456
  %b_addr.0.i457 = getelementptr [10 x i8]* @.str24373, i64 0, i64 %indvar.i456
  %256 = load i8* %a_addr.0.i458, align 1, !dbg !9619
  %257 = load i8* %b_addr.0.i457, align 1, !dbg !9619
  %258 = icmp eq i8 %256, %257, !dbg !9619
  br i1 %258, label %bb.i453, label %bb3.i497, !dbg !9619

bb37:                                             ; preds = %bb.i453, %bb.i424
  %259 = add nsw i32 %k.0, 1, !dbg !9620
  %260 = icmp eq i32 %259, %0, !dbg !9620
  br i1 %260, label %bb39, label %bb40, !dbg !9620

bb39:                                             ; preds = %bb37
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25374, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9621

bb40:                                             ; preds = %bb37
  %261 = sext i32 %259 to i64, !dbg !9623
  %262 = getelementptr inbounds i8** %1, i64 %261, !dbg !9623
  %263 = load i8** %262, align 8, !dbg !9623
  %264 = add i32 %k.0, 2, !dbg !9623
  %265 = load i8* %263, align 1, !dbg !9624
  switch i8 %265, label %bb9.preheader.i477 [
    i8 0, label %bb.i472
    i8 48, label %bb2.i473
  ]

bb.i472:                                          ; preds = %bb40
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25374, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9625

bb2.i473:                                         ; preds = %bb40
  %266 = getelementptr inbounds i8* %263, i64 1, !dbg !9626
  %267 = load i8* %266, align 1, !dbg !9626
  switch i8 %267, label %bb9.preheader.i477 [
    i8 120, label %bb5.i474
    i8 88, label %bb5.i474
  ]

bb5.i474:                                         ; preds = %bb2.i473, %bb2.i473
  %268 = getelementptr inbounds i8* %263, i64 2, !dbg !9627
  br label %bb9.preheader.i477, !dbg !9627

bb9.preheader.i477:                               ; preds = %bb5.i474, %bb2.i473, %bb40
  %base.0.ph.i475 = phi i64 [ 10, %bb2.i473 ], [ 16, %bb5.i474 ], [ 10, %bb40 ]
  %s_addr.0.ph.i476 = phi i8* [ %263, %bb2.i473 ], [ %268, %bb5.i474 ], [ %263, %bb40 ]
  br label %bb9.i488

bb6.i478:                                         ; preds = %bb9.i488
  %269 = add i8 %285, -48, !dbg !9628
  %270 = icmp ult i8 %269, 10, !dbg !9628
  br i1 %270, label %bb.i501, label %bb1.i502, !dbg !9628

bb.i501:                                          ; preds = %bb6.i478
  %271 = sext i8 %285 to i32, !dbg !9628
  %272 = add nsw i32 %271, -48, !dbg !9628
  br label %__getxdigit.exit508, !dbg !9628

bb1.i502:                                         ; preds = %bb6.i478
  %273 = add i8 %285, -65, !dbg !9628
  %274 = icmp ult i8 %273, 6, !dbg !9628
  br i1 %274, label %bb2.i503, label %bb3.i504, !dbg !9628

bb2.i503:                                         ; preds = %bb1.i502
  %275 = sext i8 %285 to i32, !dbg !9628
  %276 = add nsw i32 %275, -55, !dbg !9628
  br label %__getxdigit.exit508, !dbg !9628

bb3.i504:                                         ; preds = %bb1.i502
  %277 = add i8 %285, -97, !dbg !9628
  %278 = icmp ult i8 %277, 6, !dbg !9628
  br i1 %278, label %bb4.i505, label %bb8.i484, !dbg !9628

bb4.i505:                                         ; preds = %bb3.i504
  %279 = sext i8 %285 to i32, !dbg !9628
  %280 = add nsw i32 %279, -87, !dbg !9628
  br label %__getxdigit.exit508, !dbg !9628

__getxdigit.exit508:                              ; preds = %bb4.i505, %bb2.i503, %bb.i501
  %iftmp.12.0.i506 = phi i32 [ %272, %bb.i501 ], [ %276, %bb2.i503 ], [ %280, %bb4.i505 ]
  %281 = icmp eq i32 %iftmp.12.0.i506, -1, !dbg !9630
  br i1 %281, label %bb8.i484, label %bb7.i480, !dbg !9630

bb7.i480:                                         ; preds = %__getxdigit.exit508
  %282 = mul nsw i64 %res.0.ph.i481, %base.0.ph.i475, !dbg !9631
  %283 = sext i32 %iftmp.12.0.i506 to i64, !dbg !9631
  %284 = add nsw i64 %283, %282, !dbg !9631
  %indvar.next1674 = add i64 %indvar1673, 1
  br label %bb9.i488, !dbg !9631

bb8.i484:                                         ; preds = %__getxdigit.exit508, %bb3.i504
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25374, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9632

bb9.i488:                                         ; preds = %bb7.i480, %bb9.preheader.i477
  %indvar1673 = phi i64 [ 0, %bb9.preheader.i477 ], [ %indvar.next1674, %bb7.i480 ]
  %res.0.ph.i481 = phi i64 [ 0, %bb9.preheader.i477 ], [ %284, %bb7.i480 ]
  %s_addr.0.ph14.i482 = getelementptr i8* %s_addr.0.ph.i476, i64 %indvar1673
  %285 = load i8* %s_addr.0.ph14.i482, align 1, !dbg !9634
  %286 = icmp eq i8 %285, 0, !dbg !9634
  br i1 %286, label %__str_to_int.exit489, label %bb6.i478, !dbg !9634

__str_to_int.exit489:                             ; preds = %bb9.i488
  %287 = trunc i64 %res.0.ph.i481 to i32, !dbg !9623
  br label %bb99, !dbg !9623

bb.i491:                                          ; preds = %bb3.i497
  %288 = icmp eq i8 %289, 0, !dbg !9635
  br i1 %288, label %bb43, label %bb2.i493, !dbg !9635

bb2.i493:                                         ; preds = %bb.i491
  %indvar.next.i492 = add i64 %indvar.i494, 1
  br label %bb3.i497, !dbg !9637

bb3.i497:                                         ; preds = %bb2.i493, %bb3.i459
  %indvar.i494 = phi i64 [ %indvar.next.i492, %bb2.i493 ], [ 0, %bb3.i459 ]
  %a_addr.0.i496 = getelementptr i8* %18, i64 %indvar.i494
  %b_addr.0.i495 = getelementptr [14 x i8]* @.str26375, i64 0, i64 %indvar.i494
  %289 = load i8* %a_addr.0.i496, align 1, !dbg !9638
  %290 = load i8* %b_addr.0.i495, align 1, !dbg !9638
  %291 = icmp eq i8 %289, %290, !dbg !9638
  br i1 %291, label %bb.i491, label %bb3.i515, !dbg !9638

bb.i509:                                          ; preds = %bb3.i515
  %292 = icmp eq i8 %293, 0, !dbg !9635
  br i1 %292, label %bb43, label %bb2.i511, !dbg !9635

bb2.i511:                                         ; preds = %bb.i509
  %indvar.next.i510 = add i64 %indvar.i512, 1
  br label %bb3.i515, !dbg !9637

bb3.i515:                                         ; preds = %bb2.i511, %bb3.i497
  %indvar.i512 = phi i64 [ %indvar.next.i510, %bb2.i511 ], [ 0, %bb3.i497 ]
  %a_addr.0.i514 = getelementptr i8* %18, i64 %indvar.i512
  %b_addr.0.i513 = getelementptr [13 x i8]* @.str27376, i64 0, i64 %indvar.i512
  %293 = load i8* %a_addr.0.i514, align 1, !dbg !9638
  %294 = load i8* %b_addr.0.i513, align 1, !dbg !9638
  %295 = icmp eq i8 %293, %294, !dbg !9638
  br i1 %295, label %bb.i509, label %bb3.i565, !dbg !9638

bb43:                                             ; preds = %bb.i509, %bb.i491
  %296 = add nsw i32 %k.0, 2, !dbg !9639
  %297 = icmp slt i32 %296, %0, !dbg !9639
  br i1 %297, label %bb46, label %bb45, !dbg !9639

bb45:                                             ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28377, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9640

bb46:                                             ; preds = %bb43
  %298 = add nsw i32 %k.0, 1, !dbg !9642
  %299 = sext i32 %298 to i64, !dbg !9643
  %300 = getelementptr inbounds i8** %1, i64 %299, !dbg !9643
  %301 = load i8** %300, align 8, !dbg !9643
  %302 = load i8* %301, align 1, !dbg !9644
  switch i8 %302, label %bb9.preheader.i526 [
    i8 0, label %bb.i521
    i8 48, label %bb2.i522
  ]

bb.i521:                                          ; preds = %bb46
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28377, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9645

bb2.i522:                                         ; preds = %bb46
  %303 = getelementptr inbounds i8* %301, i64 1, !dbg !9646
  %304 = load i8* %303, align 1, !dbg !9646
  switch i8 %304, label %bb9.preheader.i526 [
    i8 120, label %bb5.i523
    i8 88, label %bb5.i523
  ]

bb5.i523:                                         ; preds = %bb2.i522, %bb2.i522
  %305 = getelementptr inbounds i8* %301, i64 2, !dbg !9647
  br label %bb9.preheader.i526, !dbg !9647

bb9.preheader.i526:                               ; preds = %bb5.i523, %bb2.i522, %bb46
  %base.0.ph.i524 = phi i64 [ 10, %bb2.i522 ], [ 16, %bb5.i523 ], [ 10, %bb46 ]
  %s_addr.0.ph.i525 = phi i8* [ %301, %bb2.i522 ], [ %305, %bb5.i523 ], [ %301, %bb46 ]
  br label %bb9.i537

bb6.i527:                                         ; preds = %bb9.i537
  %306 = add i8 %322, -48, !dbg !9648
  %307 = icmp ult i8 %306, 10, !dbg !9648
  br i1 %307, label %bb.i587, label %bb1.i588, !dbg !9648

bb.i587:                                          ; preds = %bb6.i527
  %308 = sext i8 %322 to i32, !dbg !9648
  %309 = add nsw i32 %308, -48, !dbg !9648
  br label %__getxdigit.exit594, !dbg !9648

bb1.i588:                                         ; preds = %bb6.i527
  %310 = add i8 %322, -65, !dbg !9648
  %311 = icmp ult i8 %310, 6, !dbg !9648
  br i1 %311, label %bb2.i589, label %bb3.i590, !dbg !9648

bb2.i589:                                         ; preds = %bb1.i588
  %312 = sext i8 %322 to i32, !dbg !9648
  %313 = add nsw i32 %312, -55, !dbg !9648
  br label %__getxdigit.exit594, !dbg !9648

bb3.i590:                                         ; preds = %bb1.i588
  %314 = add i8 %322, -97, !dbg !9648
  %315 = icmp ult i8 %314, 6, !dbg !9648
  br i1 %315, label %bb4.i591, label %bb8.i533, !dbg !9648

bb4.i591:                                         ; preds = %bb3.i590
  %316 = sext i8 %322 to i32, !dbg !9648
  %317 = add nsw i32 %316, -87, !dbg !9648
  br label %__getxdigit.exit594, !dbg !9648

__getxdigit.exit594:                              ; preds = %bb4.i591, %bb2.i589, %bb.i587
  %iftmp.12.0.i592 = phi i32 [ %309, %bb.i587 ], [ %313, %bb2.i589 ], [ %317, %bb4.i591 ]
  %318 = icmp eq i32 %iftmp.12.0.i592, -1, !dbg !9650
  br i1 %318, label %bb8.i533, label %bb7.i529, !dbg !9650

bb7.i529:                                         ; preds = %__getxdigit.exit594
  %319 = mul nsw i64 %res.0.ph.i530, %base.0.ph.i524, !dbg !9651
  %320 = sext i32 %iftmp.12.0.i592 to i64, !dbg !9651
  %321 = add nsw i64 %320, %319, !dbg !9651
  %indvar.next1668 = add i64 %indvar1667, 1
  br label %bb9.i537, !dbg !9651

bb8.i533:                                         ; preds = %__getxdigit.exit594, %bb3.i590
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28377, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9652

bb9.i537:                                         ; preds = %bb7.i529, %bb9.preheader.i526
  %indvar1667 = phi i64 [ 0, %bb9.preheader.i526 ], [ %indvar.next1668, %bb7.i529 ]
  %res.0.ph.i530 = phi i64 [ 0, %bb9.preheader.i526 ], [ %321, %bb7.i529 ]
  %s_addr.0.ph14.i531 = getelementptr i8* %s_addr.0.ph.i525, i64 %indvar1667
  %322 = load i8* %s_addr.0.ph14.i531, align 1, !dbg !9654
  %323 = icmp eq i8 %322, 0, !dbg !9654
  br i1 %323, label %__str_to_int.exit538, label %bb6.i527, !dbg !9654

__str_to_int.exit538:                             ; preds = %bb9.i537
  %324 = trunc i64 %res.0.ph.i530 to i32, !dbg !9643
  %325 = sext i32 %296 to i64, !dbg !9655
  %326 = getelementptr inbounds i8** %1, i64 %325, !dbg !9655
  %327 = load i8** %326, align 8, !dbg !9655
  %328 = add i32 %k.0, 3, !dbg !9655
  %329 = load i8* %327, align 1, !dbg !9656
  switch i8 %329, label %bb9.preheader.i545 [
    i8 0, label %bb.i540
    i8 48, label %bb2.i541
  ]

bb.i540:                                          ; preds = %__str_to_int.exit538
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28377, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9657

bb2.i541:                                         ; preds = %__str_to_int.exit538
  %330 = getelementptr inbounds i8* %327, i64 1, !dbg !9658
  %331 = load i8* %330, align 1, !dbg !9658
  switch i8 %331, label %bb9.preheader.i545 [
    i8 120, label %bb5.i542
    i8 88, label %bb5.i542
  ]

bb5.i542:                                         ; preds = %bb2.i541, %bb2.i541
  %332 = getelementptr inbounds i8* %327, i64 2, !dbg !9659
  br label %bb9.preheader.i545, !dbg !9659

bb9.preheader.i545:                               ; preds = %bb5.i542, %bb2.i541, %__str_to_int.exit538
  %base.0.ph.i543 = phi i64 [ 10, %bb2.i541 ], [ 16, %bb5.i542 ], [ 10, %__str_to_int.exit538 ]
  %s_addr.0.ph.i544 = phi i8* [ %327, %bb2.i541 ], [ %332, %bb5.i542 ], [ %327, %__str_to_int.exit538 ]
  br label %bb9.i556

bb6.i546:                                         ; preds = %bb9.i556
  %333 = add i8 %349, -48, !dbg !9660
  %334 = icmp ult i8 %333, 10, !dbg !9660
  br i1 %334, label %bb.i569, label %bb1.i570, !dbg !9660

bb.i569:                                          ; preds = %bb6.i546
  %335 = sext i8 %349 to i32, !dbg !9660
  %336 = add nsw i32 %335, -48, !dbg !9660
  br label %__getxdigit.exit576, !dbg !9660

bb1.i570:                                         ; preds = %bb6.i546
  %337 = add i8 %349, -65, !dbg !9660
  %338 = icmp ult i8 %337, 6, !dbg !9660
  br i1 %338, label %bb2.i571, label %bb3.i572, !dbg !9660

bb2.i571:                                         ; preds = %bb1.i570
  %339 = sext i8 %349 to i32, !dbg !9660
  %340 = add nsw i32 %339, -55, !dbg !9660
  br label %__getxdigit.exit576, !dbg !9660

bb3.i572:                                         ; preds = %bb1.i570
  %341 = add i8 %349, -97, !dbg !9660
  %342 = icmp ult i8 %341, 6, !dbg !9660
  br i1 %342, label %bb4.i573, label %bb8.i552, !dbg !9660

bb4.i573:                                         ; preds = %bb3.i572
  %343 = sext i8 %349 to i32, !dbg !9660
  %344 = add nsw i32 %343, -87, !dbg !9660
  br label %__getxdigit.exit576, !dbg !9660

__getxdigit.exit576:                              ; preds = %bb4.i573, %bb2.i571, %bb.i569
  %iftmp.12.0.i574 = phi i32 [ %336, %bb.i569 ], [ %340, %bb2.i571 ], [ %344, %bb4.i573 ]
  %345 = icmp eq i32 %iftmp.12.0.i574, -1, !dbg !9662
  br i1 %345, label %bb8.i552, label %bb7.i548, !dbg !9662

bb7.i548:                                         ; preds = %__getxdigit.exit576
  %346 = mul nsw i64 %res.0.ph.i549, %base.0.ph.i543, !dbg !9663
  %347 = sext i32 %iftmp.12.0.i574 to i64, !dbg !9663
  %348 = add nsw i64 %347, %346, !dbg !9663
  %indvar.next1671 = add i64 %indvar1670, 1
  br label %bb9.i556, !dbg !9663

bb8.i552:                                         ; preds = %__getxdigit.exit576, %bb3.i572
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28377, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9664

bb9.i556:                                         ; preds = %bb7.i548, %bb9.preheader.i545
  %indvar1670 = phi i64 [ 0, %bb9.preheader.i545 ], [ %indvar.next1671, %bb7.i548 ]
  %res.0.ph.i549 = phi i64 [ 0, %bb9.preheader.i545 ], [ %348, %bb7.i548 ]
  %s_addr.0.ph14.i550 = getelementptr i8* %s_addr.0.ph.i544, i64 %indvar1670
  %349 = load i8* %s_addr.0.ph14.i550, align 1, !dbg !9666
  %350 = icmp eq i8 %349, 0, !dbg !9666
  br i1 %350, label %__str_to_int.exit557, label %bb6.i546, !dbg !9666

__str_to_int.exit557:                             ; preds = %bb9.i556
  %351 = trunc i64 %res.0.ph.i549 to i32, !dbg !9655
  br label %bb99, !dbg !9655

bb.i559:                                          ; preds = %bb3.i565
  %352 = icmp eq i8 %353, 0, !dbg !9667
  br i1 %352, label %bb49, label %bb2.i561, !dbg !9667

bb2.i561:                                         ; preds = %bb.i559
  %indvar.next.i560 = add i64 %indvar.i562, 1
  br label %bb3.i565, !dbg !9669

bb3.i565:                                         ; preds = %bb2.i561, %bb3.i515
  %indvar.i562 = phi i64 [ %indvar.next.i560, %bb2.i561 ], [ 0, %bb3.i515 ]
  %a_addr.0.i564 = getelementptr i8* %18, i64 %indvar.i562
  %b_addr.0.i563 = getelementptr [16 x i8]* @.str29378, i64 0, i64 %indvar.i562
  %353 = load i8* %a_addr.0.i564, align 1, !dbg !9670
  %354 = load i8* %b_addr.0.i563, align 1, !dbg !9670
  %355 = icmp eq i8 %353, %354, !dbg !9670
  br i1 %355, label %bb.i559, label %bb3.i583, !dbg !9670

bb.i577:                                          ; preds = %bb3.i583
  %356 = icmp eq i8 %357, 0, !dbg !9667
  br i1 %356, label %bb49, label %bb2.i579, !dbg !9667

bb2.i579:                                         ; preds = %bb.i577
  %indvar.next.i578 = add i64 %indvar.i580, 1
  br label %bb3.i583, !dbg !9669

bb3.i583:                                         ; preds = %bb2.i579, %bb3.i565
  %indvar.i580 = phi i64 [ %indvar.next.i578, %bb2.i579 ], [ 0, %bb3.i565 ]
  %a_addr.0.i582 = getelementptr i8* %18, i64 %indvar.i580
  %b_addr.0.i581 = getelementptr [15 x i8]* @.str30379, i64 0, i64 %indvar.i580
  %357 = load i8* %a_addr.0.i582, align 1, !dbg !9670
  %358 = load i8* %b_addr.0.i581, align 1, !dbg !9670
  %359 = icmp eq i8 %357, %358, !dbg !9670
  br i1 %359, label %bb.i577, label %bb3.i640, !dbg !9670

bb49:                                             ; preds = %bb.i577, %bb.i559
  %360 = add nsw i32 %k.0, 2, !dbg !9671
  %361 = icmp slt i32 %360, %0, !dbg !9671
  br i1 %361, label %bb52, label %bb51, !dbg !9671

bb51:                                             ; preds = %bb49
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31380, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9672

bb52:                                             ; preds = %bb49
  %362 = add nsw i32 %k.0, 1, !dbg !9674
  %363 = sext i32 %362 to i64, !dbg !9675
  %364 = getelementptr inbounds i8** %1, i64 %363, !dbg !9675
  %365 = load i8** %364, align 8, !dbg !9675
  %366 = load i8* %365, align 1, !dbg !9676
  switch i8 %366, label %bb9.preheader.i601 [
    i8 0, label %bb.i596
    i8 48, label %bb2.i597
  ]

bb.i596:                                          ; preds = %bb52
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31380, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9677

bb2.i597:                                         ; preds = %bb52
  %367 = getelementptr inbounds i8* %365, i64 1, !dbg !9678
  %368 = load i8* %367, align 1, !dbg !9678
  switch i8 %368, label %bb9.preheader.i601 [
    i8 120, label %bb5.i598
    i8 88, label %bb5.i598
  ]

bb5.i598:                                         ; preds = %bb2.i597, %bb2.i597
  %369 = getelementptr inbounds i8* %365, i64 2, !dbg !9679
  br label %bb9.preheader.i601, !dbg !9679

bb9.preheader.i601:                               ; preds = %bb5.i598, %bb2.i597, %bb52
  %base.0.ph.i599 = phi i64 [ 10, %bb2.i597 ], [ 16, %bb5.i598 ], [ 10, %bb52 ]
  %s_addr.0.ph.i600 = phi i8* [ %365, %bb2.i597 ], [ %369, %bb5.i598 ], [ %365, %bb52 ]
  br label %bb9.i612

bb6.i602:                                         ; preds = %bb9.i612
  %370 = add i8 %386, -48, !dbg !9680
  %371 = icmp ult i8 %370, 10, !dbg !9680
  br i1 %371, label %bb.i662, label %bb1.i663, !dbg !9680

bb.i662:                                          ; preds = %bb6.i602
  %372 = sext i8 %386 to i32, !dbg !9680
  %373 = add nsw i32 %372, -48, !dbg !9680
  br label %__getxdigit.exit669, !dbg !9680

bb1.i663:                                         ; preds = %bb6.i602
  %374 = add i8 %386, -65, !dbg !9680
  %375 = icmp ult i8 %374, 6, !dbg !9680
  br i1 %375, label %bb2.i664, label %bb3.i665, !dbg !9680

bb2.i664:                                         ; preds = %bb1.i663
  %376 = sext i8 %386 to i32, !dbg !9680
  %377 = add nsw i32 %376, -55, !dbg !9680
  br label %__getxdigit.exit669, !dbg !9680

bb3.i665:                                         ; preds = %bb1.i663
  %378 = add i8 %386, -97, !dbg !9680
  %379 = icmp ult i8 %378, 6, !dbg !9680
  br i1 %379, label %bb4.i666, label %bb8.i608, !dbg !9680

bb4.i666:                                         ; preds = %bb3.i665
  %380 = sext i8 %386 to i32, !dbg !9680
  %381 = add nsw i32 %380, -87, !dbg !9680
  br label %__getxdigit.exit669, !dbg !9680

__getxdigit.exit669:                              ; preds = %bb4.i666, %bb2.i664, %bb.i662
  %iftmp.12.0.i667 = phi i32 [ %373, %bb.i662 ], [ %377, %bb2.i664 ], [ %381, %bb4.i666 ]
  %382 = icmp eq i32 %iftmp.12.0.i667, -1, !dbg !9682
  br i1 %382, label %bb8.i608, label %bb7.i604, !dbg !9682

bb7.i604:                                         ; preds = %__getxdigit.exit669
  %383 = mul nsw i64 %res.0.ph.i605, %base.0.ph.i599, !dbg !9683
  %384 = sext i32 %iftmp.12.0.i667 to i64, !dbg !9683
  %385 = add nsw i64 %384, %383, !dbg !9683
  %indvar.next1662 = add i64 %indvar1661, 1
  br label %bb9.i612, !dbg !9683

bb8.i608:                                         ; preds = %__getxdigit.exit669, %bb3.i665
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31380, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9684

bb9.i612:                                         ; preds = %bb7.i604, %bb9.preheader.i601
  %indvar1661 = phi i64 [ 0, %bb9.preheader.i601 ], [ %indvar.next1662, %bb7.i604 ]
  %res.0.ph.i605 = phi i64 [ 0, %bb9.preheader.i601 ], [ %385, %bb7.i604 ]
  %s_addr.0.ph14.i606 = getelementptr i8* %s_addr.0.ph.i600, i64 %indvar1661
  %386 = load i8* %s_addr.0.ph14.i606, align 1, !dbg !9686
  %387 = icmp eq i8 %386, 0, !dbg !9686
  br i1 %387, label %__str_to_int.exit613, label %bb6.i602, !dbg !9686

__str_to_int.exit613:                             ; preds = %bb9.i612
  %388 = trunc i64 %res.0.ph.i605 to i32, !dbg !9675
  %389 = sext i32 %360 to i64, !dbg !9687
  %390 = getelementptr inbounds i8** %1, i64 %389, !dbg !9687
  %391 = load i8** %390, align 8, !dbg !9687
  %392 = add i32 %k.0, 3, !dbg !9687
  %393 = load i8* %391, align 1, !dbg !9688
  switch i8 %393, label %bb9.preheader.i620 [
    i8 0, label %bb.i615
    i8 48, label %bb2.i616
  ]

bb.i615:                                          ; preds = %__str_to_int.exit613
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31380, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9689

bb2.i616:                                         ; preds = %__str_to_int.exit613
  %394 = getelementptr inbounds i8* %391, i64 1, !dbg !9690
  %395 = load i8* %394, align 1, !dbg !9690
  switch i8 %395, label %bb9.preheader.i620 [
    i8 120, label %bb5.i617
    i8 88, label %bb5.i617
  ]

bb5.i617:                                         ; preds = %bb2.i616, %bb2.i616
  %396 = getelementptr inbounds i8* %391, i64 2, !dbg !9691
  br label %bb9.preheader.i620, !dbg !9691

bb9.preheader.i620:                               ; preds = %bb5.i617, %bb2.i616, %__str_to_int.exit613
  %base.0.ph.i618 = phi i64 [ 10, %bb2.i616 ], [ 16, %bb5.i617 ], [ 10, %__str_to_int.exit613 ]
  %s_addr.0.ph.i619 = phi i8* [ %391, %bb2.i616 ], [ %396, %bb5.i617 ], [ %391, %__str_to_int.exit613 ]
  br label %bb9.i631

bb6.i621:                                         ; preds = %bb9.i631
  %397 = add i8 %413, -48, !dbg !9692
  %398 = icmp ult i8 %397, 10, !dbg !9692
  br i1 %398, label %bb.i644, label %bb1.i645, !dbg !9692

bb.i644:                                          ; preds = %bb6.i621
  %399 = sext i8 %413 to i32, !dbg !9692
  %400 = add nsw i32 %399, -48, !dbg !9692
  br label %__getxdigit.exit651, !dbg !9692

bb1.i645:                                         ; preds = %bb6.i621
  %401 = add i8 %413, -65, !dbg !9692
  %402 = icmp ult i8 %401, 6, !dbg !9692
  br i1 %402, label %bb2.i646, label %bb3.i647, !dbg !9692

bb2.i646:                                         ; preds = %bb1.i645
  %403 = sext i8 %413 to i32, !dbg !9692
  %404 = add nsw i32 %403, -55, !dbg !9692
  br label %__getxdigit.exit651, !dbg !9692

bb3.i647:                                         ; preds = %bb1.i645
  %405 = add i8 %413, -97, !dbg !9692
  %406 = icmp ult i8 %405, 6, !dbg !9692
  br i1 %406, label %bb4.i648, label %bb8.i627, !dbg !9692

bb4.i648:                                         ; preds = %bb3.i647
  %407 = sext i8 %413 to i32, !dbg !9692
  %408 = add nsw i32 %407, -87, !dbg !9692
  br label %__getxdigit.exit651, !dbg !9692

__getxdigit.exit651:                              ; preds = %bb4.i648, %bb2.i646, %bb.i644
  %iftmp.12.0.i649 = phi i32 [ %400, %bb.i644 ], [ %404, %bb2.i646 ], [ %408, %bb4.i648 ]
  %409 = icmp eq i32 %iftmp.12.0.i649, -1, !dbg !9694
  br i1 %409, label %bb8.i627, label %bb7.i623, !dbg !9694

bb7.i623:                                         ; preds = %__getxdigit.exit651
  %410 = mul nsw i64 %res.0.ph.i624, %base.0.ph.i618, !dbg !9695
  %411 = sext i32 %iftmp.12.0.i649 to i64, !dbg !9695
  %412 = add nsw i64 %411, %410, !dbg !9695
  %indvar.next1665 = add i64 %indvar1664, 1
  br label %bb9.i631, !dbg !9695

bb8.i627:                                         ; preds = %__getxdigit.exit651, %bb3.i647
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31380, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9696

bb9.i631:                                         ; preds = %bb7.i623, %bb9.preheader.i620
  %indvar1664 = phi i64 [ 0, %bb9.preheader.i620 ], [ %indvar.next1665, %bb7.i623 ]
  %res.0.ph.i624 = phi i64 [ 0, %bb9.preheader.i620 ], [ %412, %bb7.i623 ]
  %s_addr.0.ph14.i625 = getelementptr i8* %s_addr.0.ph.i619, i64 %indvar1664
  %413 = load i8* %s_addr.0.ph14.i625, align 1, !dbg !9698
  %414 = icmp eq i8 %413, 0, !dbg !9698
  br i1 %414, label %__str_to_int.exit632, label %bb6.i621, !dbg !9698

__str_to_int.exit632:                             ; preds = %bb9.i631
  %415 = trunc i64 %res.0.ph.i624 to i32, !dbg !9687
  br label %bb99, !dbg !9687

bb.i634:                                          ; preds = %bb3.i640
  %416 = icmp eq i8 %417, 0, !dbg !9699
  br i1 %416, label %bb55, label %bb2.i636, !dbg !9699

bb2.i636:                                         ; preds = %bb.i634
  %indvar.next.i635 = add i64 %indvar.i637, 1
  br label %bb3.i640, !dbg !9701

bb3.i640:                                         ; preds = %bb2.i636, %bb3.i583
  %indvar.i637 = phi i64 [ %indvar.next.i635, %bb2.i636 ], [ 0, %bb3.i583 ]
  %a_addr.0.i639 = getelementptr i8* %18, i64 %indvar.i637
  %b_addr.0.i638 = getelementptr [19 x i8]* @.str32381, i64 0, i64 %indvar.i637
  %417 = load i8* %a_addr.0.i639, align 1, !dbg !9702
  %418 = load i8* %b_addr.0.i638, align 1, !dbg !9702
  %419 = icmp eq i8 %417, %418, !dbg !9702
  br i1 %419, label %bb.i634, label %bb3.i658, !dbg !9702

bb.i652:                                          ; preds = %bb3.i658
  %420 = icmp eq i8 %421, 0, !dbg !9699
  br i1 %420, label %bb55, label %bb2.i654, !dbg !9699

bb2.i654:                                         ; preds = %bb.i652
  %indvar.next.i653 = add i64 %indvar.i655, 1
  br label %bb3.i658, !dbg !9701

bb3.i658:                                         ; preds = %bb2.i654, %bb3.i640
  %indvar.i655 = phi i64 [ %indvar.next.i653, %bb2.i654 ], [ 0, %bb3.i640 ]
  %a_addr.0.i657 = getelementptr i8* %18, i64 %indvar.i655
  %b_addr.0.i656 = getelementptr [18 x i8]* @.str33382, i64 0, i64 %indvar.i655
  %421 = load i8* %a_addr.0.i657, align 1, !dbg !9702
  %422 = load i8* %b_addr.0.i656, align 1, !dbg !9702
  %423 = icmp eq i8 %421, %422, !dbg !9702
  br i1 %423, label %bb.i652, label %bb3.i676, !dbg !9702

bb55:                                             ; preds = %bb.i652, %bb.i634
  %424 = add nsw i32 %k.0, 1, !dbg !9703
  br label %bb99, !dbg !9703

bb.i670:                                          ; preds = %bb3.i676
  %425 = icmp eq i8 %426, 0, !dbg !9704
  br i1 %425, label %bb58, label %bb2.i672, !dbg !9704

bb2.i672:                                         ; preds = %bb.i670
  %indvar.next.i671 = add i64 %indvar.i673, 1
  br label %bb3.i676, !dbg !9706

bb3.i676:                                         ; preds = %bb2.i672, %bb3.i658
  %indvar.i673 = phi i64 [ %indvar.next.i671, %bb2.i672 ], [ 0, %bb3.i658 ]
  %a_addr.0.i675 = getelementptr i8* %18, i64 %indvar.i673
  %b_addr.0.i674 = getelementptr [15 x i8]* @.str34383, i64 0, i64 %indvar.i673
  %426 = load i8* %a_addr.0.i675, align 1, !dbg !9707
  %427 = load i8* %b_addr.0.i674, align 1, !dbg !9707
  %428 = icmp eq i8 %426, %427, !dbg !9707
  br i1 %428, label %bb.i670, label %bb3.i715, !dbg !9707

bb.i709:                                          ; preds = %bb3.i715
  %429 = icmp eq i8 %430, 0, !dbg !9704
  br i1 %429, label %bb58, label %bb2.i711, !dbg !9704

bb2.i711:                                         ; preds = %bb.i709
  %indvar.next.i710 = add i64 %indvar.i712, 1
  br label %bb3.i715, !dbg !9706

bb3.i715:                                         ; preds = %bb2.i711, %bb3.i676
  %indvar.i712 = phi i64 [ %indvar.next.i710, %bb2.i711 ], [ 0, %bb3.i676 ]
  %a_addr.0.i714 = getelementptr i8* %18, i64 %indvar.i712
  %b_addr.0.i713 = getelementptr [14 x i8]* @.str35384, i64 0, i64 %indvar.i712
  %430 = load i8* %a_addr.0.i714, align 1, !dbg !9707
  %431 = load i8* %b_addr.0.i713, align 1, !dbg !9707
  %432 = icmp eq i8 %430, %431, !dbg !9707
  br i1 %432, label %bb.i709, label %bb3.i850, !dbg !9707

bb58:                                             ; preds = %bb.i709, %bb.i670
  %433 = icmp ugt i32 %n_stream_fill_info.0, 99, !dbg !9708
  br i1 %433, label %bb60, label %bb61, !dbg !9708

bb60:                                             ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([32 x i8]* @.str37386, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9709

bb61:                                             ; preds = %bb58
  %434 = add nsw i32 %k.0, 2, !dbg !9711
  %435 = icmp slt i32 %434, %0, !dbg !9711
  br i1 %435, label %bb63, label %bb62, !dbg !9711

bb62:                                             ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9712

bb63:                                             ; preds = %bb61
  %436 = add nsw i32 %k.0, 1, !dbg !9714
  %437 = sext i32 %436 to i64, !dbg !9715
  %438 = getelementptr inbounds i8** %1, i64 %437, !dbg !9715
  %439 = load i8** %438, align 8, !dbg !9715
  %440 = load i8* %439, align 1, !dbg !9716
  switch i8 %440, label %bb9.preheader.i734 [
    i8 0, label %bb.i729
    i8 48, label %bb2.i730
  ]

bb.i729:                                          ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9717

bb2.i730:                                         ; preds = %bb63
  %441 = getelementptr inbounds i8* %439, i64 1, !dbg !9718
  %442 = load i8* %441, align 1, !dbg !9718
  switch i8 %442, label %bb9.preheader.i734 [
    i8 120, label %bb5.i731
    i8 88, label %bb5.i731
  ]

bb5.i731:                                         ; preds = %bb2.i730, %bb2.i730
  %443 = getelementptr inbounds i8* %439, i64 2, !dbg !9719
  br label %bb9.preheader.i734, !dbg !9719

bb9.preheader.i734:                               ; preds = %bb5.i731, %bb2.i730, %bb63
  %base.0.ph.i732 = phi i64 [ 10, %bb2.i730 ], [ 16, %bb5.i731 ], [ 10, %bb63 ]
  %s_addr.0.ph.i733 = phi i8* [ %439, %bb2.i730 ], [ %443, %bb5.i731 ], [ %439, %bb63 ]
  br label %bb9.i745

bb6.i735:                                         ; preds = %bb9.i745
  %444 = add i8 %460, -48, !dbg !9720
  %445 = icmp ult i8 %444, 10, !dbg !9720
  br i1 %445, label %bb.i758, label %bb1.i759, !dbg !9720

bb.i758:                                          ; preds = %bb6.i735
  %446 = sext i8 %460 to i32, !dbg !9720
  %447 = add nsw i32 %446, -48, !dbg !9720
  br label %__getxdigit.exit765, !dbg !9720

bb1.i759:                                         ; preds = %bb6.i735
  %448 = add i8 %460, -65, !dbg !9720
  %449 = icmp ult i8 %448, 6, !dbg !9720
  br i1 %449, label %bb2.i760, label %bb3.i761, !dbg !9720

bb2.i760:                                         ; preds = %bb1.i759
  %450 = sext i8 %460 to i32, !dbg !9720
  %451 = add nsw i32 %450, -55, !dbg !9720
  br label %__getxdigit.exit765, !dbg !9720

bb3.i761:                                         ; preds = %bb1.i759
  %452 = add i8 %460, -97, !dbg !9720
  %453 = icmp ult i8 %452, 6, !dbg !9720
  br i1 %453, label %bb4.i762, label %bb8.i741, !dbg !9720

bb4.i762:                                         ; preds = %bb3.i761
  %454 = sext i8 %460 to i32, !dbg !9720
  %455 = add nsw i32 %454, -87, !dbg !9720
  br label %__getxdigit.exit765, !dbg !9720

__getxdigit.exit765:                              ; preds = %bb4.i762, %bb2.i760, %bb.i758
  %iftmp.12.0.i763 = phi i32 [ %447, %bb.i758 ], [ %451, %bb2.i760 ], [ %455, %bb4.i762 ]
  %456 = icmp eq i32 %iftmp.12.0.i763, -1, !dbg !9722
  br i1 %456, label %bb8.i741, label %bb7.i737, !dbg !9722

bb7.i737:                                         ; preds = %__getxdigit.exit765
  %457 = mul nsw i64 %res.0.ph.i738, %base.0.ph.i732, !dbg !9723
  %458 = sext i32 %iftmp.12.0.i763 to i64, !dbg !9723
  %459 = add nsw i64 %458, %457, !dbg !9723
  %indvar.next1653 = add i64 %indvar1652, 1
  br label %bb9.i745, !dbg !9723

bb8.i741:                                         ; preds = %__getxdigit.exit765, %bb3.i761
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9724

bb9.i745:                                         ; preds = %bb7.i737, %bb9.preheader.i734
  %indvar1652 = phi i64 [ 0, %bb9.preheader.i734 ], [ %indvar.next1653, %bb7.i737 ]
  %res.0.ph.i738 = phi i64 [ 0, %bb9.preheader.i734 ], [ %459, %bb7.i737 ]
  %s_addr.0.ph14.i739 = getelementptr i8* %s_addr.0.ph.i733, i64 %indvar1652
  %460 = load i8* %s_addr.0.ph14.i739, align 1, !dbg !9726
  %461 = icmp eq i8 %460, 0, !dbg !9726
  br i1 %461, label %__str_to_int.exit746, label %bb6.i735, !dbg !9726

__str_to_int.exit746:                             ; preds = %bb9.i745
  %462 = trunc i64 %res.0.ph.i738 to i32, !dbg !9715
  %463 = zext i32 %n_stream_fill_info.0 to i64, !dbg !9715
  %464 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 0, !dbg !9715
  store i32 %462, i32* %464, align 8, !dbg !9715
  %465 = sext i32 %434 to i64, !dbg !9727
  %466 = getelementptr inbounds i8** %1, i64 %465, !dbg !9727
  %467 = load i8** %466, align 8, !dbg !9727
  br label %bb3.i754, !dbg !9728

bb.i748:                                          ; preds = %bb3.i754
  %468 = icmp eq i8 %469, 0, !dbg !9729
  br i1 %468, label %bb64, label %bb2.i750, !dbg !9729

bb2.i750:                                         ; preds = %bb.i748
  %indvar.next.i749 = add i64 %indvar.i751, 1
  br label %bb3.i754, !dbg !9730

bb3.i754:                                         ; preds = %bb2.i750, %__str_to_int.exit746
  %indvar.i751 = phi i64 [ %indvar.next.i749, %bb2.i750 ], [ 0, %__str_to_int.exit746 ]
  %a_addr.0.i753 = getelementptr i8* %467, i64 %indvar.i751
  %b_addr.0.i752 = getelementptr [4 x i8]* @.str38387, i64 0, i64 %indvar.i751
  %469 = load i8* %a_addr.0.i753, align 1, !dbg !9728
  %470 = load i8* %b_addr.0.i752, align 1, !dbg !9728
  %471 = icmp eq i8 %469, %470, !dbg !9728
  br i1 %471, label %bb.i748, label %bb3.i811, !dbg !9728

bb64:                                             ; preds = %bb.i748
  %472 = add i32 %k.0, 4, !dbg !9731
  %473 = icmp slt i32 %472, %0, !dbg !9731
  br i1 %473, label %bb66, label %bb65, !dbg !9731

bb65:                                             ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9732

bb66:                                             ; preds = %bb64
  %474 = add i32 %k.0, 3, !dbg !9734
  %475 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !9735
  store i32 0, i32* %475, align 4, !dbg !9735
  %476 = sext i32 %474 to i64, !dbg !9736
  %477 = getelementptr inbounds i8** %1, i64 %476, !dbg !9736
  %478 = load i8** %477, align 8, !dbg !9736
  %479 = load i8* %478, align 1, !dbg !9737
  switch i8 %479, label %bb9.preheader.i772 [
    i8 0, label %bb.i767
    i8 48, label %bb2.i768
  ]

bb.i767:                                          ; preds = %bb66
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9738

bb2.i768:                                         ; preds = %bb66
  %480 = getelementptr inbounds i8* %478, i64 1, !dbg !9739
  %481 = load i8* %480, align 1, !dbg !9739
  switch i8 %481, label %bb9.preheader.i772 [
    i8 120, label %bb5.i769
    i8 88, label %bb5.i769
  ]

bb5.i769:                                         ; preds = %bb2.i768, %bb2.i768
  %482 = getelementptr inbounds i8* %478, i64 2, !dbg !9740
  br label %bb9.preheader.i772, !dbg !9740

bb9.preheader.i772:                               ; preds = %bb5.i769, %bb2.i768, %bb66
  %base.0.ph.i770 = phi i64 [ 10, %bb2.i768 ], [ 16, %bb5.i769 ], [ 10, %bb66 ]
  %s_addr.0.ph.i771 = phi i8* [ %478, %bb2.i768 ], [ %482, %bb5.i769 ], [ %478, %bb66 ]
  br label %bb9.i783

bb6.i773:                                         ; preds = %bb9.i783
  %483 = add i8 %499, -48, !dbg !9741
  %484 = icmp ult i8 %483, 10, !dbg !9741
  br i1 %484, label %bb.i834, label %bb1.i835, !dbg !9741

bb.i834:                                          ; preds = %bb6.i773
  %485 = sext i8 %499 to i32, !dbg !9741
  %486 = add nsw i32 %485, -48, !dbg !9741
  br label %__getxdigit.exit841, !dbg !9741

bb1.i835:                                         ; preds = %bb6.i773
  %487 = add i8 %499, -65, !dbg !9741
  %488 = icmp ult i8 %487, 6, !dbg !9741
  br i1 %488, label %bb2.i836, label %bb3.i837, !dbg !9741

bb2.i836:                                         ; preds = %bb1.i835
  %489 = sext i8 %499 to i32, !dbg !9741
  %490 = add nsw i32 %489, -55, !dbg !9741
  br label %__getxdigit.exit841, !dbg !9741

bb3.i837:                                         ; preds = %bb1.i835
  %491 = add i8 %499, -97, !dbg !9741
  %492 = icmp ult i8 %491, 6, !dbg !9741
  br i1 %492, label %bb4.i838, label %bb8.i779, !dbg !9741

bb4.i838:                                         ; preds = %bb3.i837
  %493 = sext i8 %499 to i32, !dbg !9741
  %494 = add nsw i32 %493, -87, !dbg !9741
  br label %__getxdigit.exit841, !dbg !9741

__getxdigit.exit841:                              ; preds = %bb4.i838, %bb2.i836, %bb.i834
  %iftmp.12.0.i839 = phi i32 [ %486, %bb.i834 ], [ %490, %bb2.i836 ], [ %494, %bb4.i838 ]
  %495 = icmp eq i32 %iftmp.12.0.i839, -1, !dbg !9743
  br i1 %495, label %bb8.i779, label %bb7.i775, !dbg !9743

bb7.i775:                                         ; preds = %__getxdigit.exit841
  %496 = mul nsw i64 %res.0.ph.i776, %base.0.ph.i770, !dbg !9744
  %497 = sext i32 %iftmp.12.0.i839 to i64, !dbg !9744
  %498 = add nsw i64 %497, %496, !dbg !9744
  %indvar.next1656 = add i64 %indvar1655, 1
  br label %bb9.i783, !dbg !9744

bb8.i779:                                         ; preds = %__getxdigit.exit841, %bb3.i837
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9745

bb9.i783:                                         ; preds = %bb7.i775, %bb9.preheader.i772
  %indvar1655 = phi i64 [ 0, %bb9.preheader.i772 ], [ %indvar.next1656, %bb7.i775 ]
  %res.0.ph.i776 = phi i64 [ 0, %bb9.preheader.i772 ], [ %498, %bb7.i775 ]
  %s_addr.0.ph14.i777 = getelementptr i8* %s_addr.0.ph.i771, i64 %indvar1655
  %499 = load i8* %s_addr.0.ph14.i777, align 1, !dbg !9747
  %500 = icmp eq i8 %499, 0, !dbg !9747
  br i1 %500, label %__str_to_int.exit784, label %bb6.i773, !dbg !9747

__str_to_int.exit784:                             ; preds = %bb9.i783
  %501 = trunc i64 %res.0.ph.i776 to i32, !dbg !9736
  %502 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !9736
  store i32 %501, i32* %502, align 8, !dbg !9736
  %503 = sext i32 %472 to i64, !dbg !9748
  %504 = getelementptr inbounds i8** %1, i64 %503, !dbg !9748
  %505 = load i8** %504, align 8, !dbg !9748
  %506 = add i32 %k.0, 5, !dbg !9748
  %507 = load i8* %505, align 1, !dbg !9749
  switch i8 %507, label %bb9.preheader.i791 [
    i8 0, label %bb.i786
    i8 48, label %bb2.i787
  ]

bb.i786:                                          ; preds = %__str_to_int.exit784
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9750

bb2.i787:                                         ; preds = %__str_to_int.exit784
  %508 = getelementptr inbounds i8* %505, i64 1, !dbg !9751
  %509 = load i8* %508, align 1, !dbg !9751
  switch i8 %509, label %bb9.preheader.i791 [
    i8 120, label %bb5.i788
    i8 88, label %bb5.i788
  ]

bb5.i788:                                         ; preds = %bb2.i787, %bb2.i787
  %510 = getelementptr inbounds i8* %505, i64 2, !dbg !9752
  br label %bb9.preheader.i791, !dbg !9752

bb9.preheader.i791:                               ; preds = %bb5.i788, %bb2.i787, %__str_to_int.exit784
  %base.0.ph.i789 = phi i64 [ 10, %bb2.i787 ], [ 16, %bb5.i788 ], [ 10, %__str_to_int.exit784 ]
  %s_addr.0.ph.i790 = phi i8* [ %505, %bb2.i787 ], [ %510, %bb5.i788 ], [ %505, %__str_to_int.exit784 ]
  br label %bb9.i802

bb6.i792:                                         ; preds = %bb9.i802
  %511 = add i8 %527, -48, !dbg !9753
  %512 = icmp ult i8 %511, 10, !dbg !9753
  br i1 %512, label %bb.i815, label %bb1.i816, !dbg !9753

bb.i815:                                          ; preds = %bb6.i792
  %513 = sext i8 %527 to i32, !dbg !9753
  %514 = add nsw i32 %513, -48, !dbg !9753
  br label %__getxdigit.exit822, !dbg !9753

bb1.i816:                                         ; preds = %bb6.i792
  %515 = add i8 %527, -65, !dbg !9753
  %516 = icmp ult i8 %515, 6, !dbg !9753
  br i1 %516, label %bb2.i817, label %bb3.i818, !dbg !9753

bb2.i817:                                         ; preds = %bb1.i816
  %517 = sext i8 %527 to i32, !dbg !9753
  %518 = add nsw i32 %517, -55, !dbg !9753
  br label %__getxdigit.exit822, !dbg !9753

bb3.i818:                                         ; preds = %bb1.i816
  %519 = add i8 %527, -97, !dbg !9753
  %520 = icmp ult i8 %519, 6, !dbg !9753
  br i1 %520, label %bb4.i819, label %bb8.i798, !dbg !9753

bb4.i819:                                         ; preds = %bb3.i818
  %521 = sext i8 %527 to i32, !dbg !9753
  %522 = add nsw i32 %521, -87, !dbg !9753
  br label %__getxdigit.exit822, !dbg !9753

__getxdigit.exit822:                              ; preds = %bb4.i819, %bb2.i817, %bb.i815
  %iftmp.12.0.i820 = phi i32 [ %514, %bb.i815 ], [ %518, %bb2.i817 ], [ %522, %bb4.i819 ]
  %523 = icmp eq i32 %iftmp.12.0.i820, -1, !dbg !9755
  br i1 %523, label %bb8.i798, label %bb7.i794, !dbg !9755

bb7.i794:                                         ; preds = %__getxdigit.exit822
  %524 = mul nsw i64 %res.0.ph.i795, %base.0.ph.i789, !dbg !9756
  %525 = sext i32 %iftmp.12.0.i820 to i64, !dbg !9756
  %526 = add nsw i64 %525, %524, !dbg !9756
  %indvar.next1659 = add i64 %indvar1658, 1
  br label %bb9.i802, !dbg !9756

bb8.i798:                                         ; preds = %__getxdigit.exit822, %bb3.i818
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9757

bb9.i802:                                         ; preds = %bb7.i794, %bb9.preheader.i791
  %indvar1658 = phi i64 [ 0, %bb9.preheader.i791 ], [ %indvar.next1659, %bb7.i794 ]
  %res.0.ph.i795 = phi i64 [ 0, %bb9.preheader.i791 ], [ %526, %bb7.i794 ]
  %s_addr.0.ph14.i796 = getelementptr i8* %s_addr.0.ph.i790, i64 %indvar1658
  %527 = load i8* %s_addr.0.ph14.i796, align 1, !dbg !9759
  %528 = icmp eq i8 %527, 0, !dbg !9759
  br i1 %528, label %__str_to_int.exit803, label %bb6.i792, !dbg !9759

__str_to_int.exit803:                             ; preds = %bb9.i802
  %529 = trunc i64 %res.0.ph.i795 to i32, !dbg !9748
  %530 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !9748
  %531 = bitcast i8** %530 to i32*, !dbg !9748
  store i32 %529, i32* %531, align 8, !dbg !9748
  %532 = add i32 %n_stream_fill_info.0, 1, !dbg !9760
  br label %bb99, !dbg !9760

bb.i805:                                          ; preds = %bb3.i811
  %533 = icmp eq i8 %534, 0, !dbg !9761
  br i1 %533, label %bb68, label %bb2.i807, !dbg !9761

bb2.i807:                                         ; preds = %bb.i805
  %indvar.next.i806 = add i64 %indvar.i808, 1
  br label %bb3.i811, !dbg !9763

bb3.i811:                                         ; preds = %bb2.i807, %bb3.i754
  %indvar.i808 = phi i64 [ %indvar.next.i806, %bb2.i807 ], [ 0, %bb3.i754 ]
  %a_addr.0.i810 = getelementptr i8* %467, i64 %indvar.i808
  %b_addr.0.i809 = getelementptr [5 x i8]* @.str39388, i64 0, i64 %indvar.i808
  %534 = load i8* %a_addr.0.i810, align 1, !dbg !9764
  %535 = load i8* %b_addr.0.i809, align 1, !dbg !9764
  %536 = icmp eq i8 %534, %535, !dbg !9764
  br i1 %536, label %bb.i805, label %bb3.i830, !dbg !9764

bb68:                                             ; preds = %bb.i805
  %537 = add i32 %k.0, 3, !dbg !9765
  %538 = icmp slt i32 %537, %0, !dbg !9766
  br i1 %538, label %bb70, label %bb69, !dbg !9766

bb69:                                             ; preds = %bb68
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9767

bb70:                                             ; preds = %bb68
  %539 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !9769
  store i32 1, i32* %539, align 4, !dbg !9769
  %540 = sext i32 %537 to i64, !dbg !9770
  %541 = getelementptr inbounds i8** %1, i64 %540, !dbg !9770
  %542 = load i8** %541, align 8, !dbg !9770
  %543 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !9770
  store i8* %542, i8** %543, align 8, !dbg !9770
  %544 = add i32 %k.0, 4, !dbg !9770
  %545 = call fastcc i64 @__convert_escape_sequences(i8* %542) nounwind, !dbg !9771
  %546 = trunc i64 %545 to i32, !dbg !9771
  %547 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !9771
  store i32 %546, i32* %547, align 8, !dbg !9771
  %548 = add i32 %n_stream_fill_info.0, 1, !dbg !9772
  br label %bb99, !dbg !9772

bb.i824:                                          ; preds = %bb3.i830
  %549 = icmp eq i8 %550, 0, !dbg !9773
  br i1 %549, label %bb72, label %bb2.i826, !dbg !9773

bb2.i826:                                         ; preds = %bb.i824
  %indvar.next.i825 = add i64 %indvar.i827, 1
  br label %bb3.i830, !dbg !9775

bb3.i830:                                         ; preds = %bb2.i826, %bb3.i811
  %indvar.i827 = phi i64 [ %indvar.next.i825, %bb2.i826 ], [ 0, %bb3.i811 ]
  %a_addr.0.i829 = getelementptr i8* %467, i64 %indvar.i827
  %b_addr.0.i828 = getelementptr [5 x i8]* @.str40389, i64 0, i64 %indvar.i827
  %550 = load i8* %a_addr.0.i829, align 1, !dbg !9776
  %551 = load i8* %b_addr.0.i828, align 1, !dbg !9776
  %552 = icmp eq i8 %550, %551, !dbg !9776
  br i1 %552, label %bb.i824, label %bb75, !dbg !9776

bb72:                                             ; preds = %bb.i824
  %553 = add i32 %k.0, 3, !dbg !9777
  %554 = icmp slt i32 %553, %0, !dbg !9778
  br i1 %554, label %bb74, label %bb73, !dbg !9778

bb73:                                             ; preds = %bb72
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9779

bb74:                                             ; preds = %bb72
  %555 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !9781
  store i32 2, i32* %555, align 4, !dbg !9781
  %556 = sext i32 %553 to i64, !dbg !9782
  %557 = getelementptr inbounds i8** %1, i64 %556, !dbg !9782
  %558 = load i8** %557, align 8, !dbg !9782
  %559 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !9782
  store i8* %558, i8** %559, align 8, !dbg !9782
  %560 = add i32 %k.0, 4, !dbg !9782
  %561 = add i32 %n_stream_fill_info.0, 1, !dbg !9783
  br label %bb99, !dbg !9783

bb75:                                             ; preds = %bb3.i830
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36385, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !9784

bb.i844:                                          ; preds = %bb3.i850
  %562 = icmp eq i8 %563, 0, !dbg !9786
  br i1 %562, label %bb78, label %bb2.i846, !dbg !9786

bb2.i846:                                         ; preds = %bb.i844
  %indvar.next.i845 = add i64 %indvar.i847, 1
  br label %bb3.i850, !dbg !9788

bb3.i850:                                         ; preds = %bb2.i846, %bb3.i715
  %indvar.i847 = phi i64 [ %indvar.next.i845, %bb2.i846 ], [ 0, %bb3.i715 ]
  %a_addr.0.i849 = getelementptr i8* %18, i64 %indvar.i847
  %b_addr.0.i848 = getelementptr [17 x i8]* @.str41390, i64 0, i64 %indvar.i847
  %563 = load i8* %a_addr.0.i849, align 1, !dbg !9789
  %564 = load i8* %b_addr.0.i848, align 1, !dbg !9789
  %565 = icmp eq i8 %563, %564, !dbg !9789
  br i1 %565, label %bb.i844, label %bb3.i861, !dbg !9789

bb.i855:                                          ; preds = %bb3.i861
  %566 = icmp eq i8 %567, 0, !dbg !9786
  br i1 %566, label %bb78, label %bb2.i857, !dbg !9786

bb2.i857:                                         ; preds = %bb.i855
  %indvar.next.i856 = add i64 %indvar.i858, 1
  br label %bb3.i861, !dbg !9788

bb3.i861:                                         ; preds = %bb2.i857, %bb3.i850
  %indvar.i858 = phi i64 [ %indvar.next.i856, %bb2.i857 ], [ 0, %bb3.i850 ]
  %a_addr.0.i860 = getelementptr i8* %18, i64 %indvar.i858
  %b_addr.0.i859 = getelementptr [16 x i8]* @.str42391, i64 0, i64 %indvar.i858
  %567 = load i8* %a_addr.0.i860, align 1, !dbg !9789
  %568 = load i8* %b_addr.0.i859, align 1, !dbg !9789
  %569 = icmp eq i8 %567, %568, !dbg !9789
  br i1 %569, label %bb.i855, label %bb97, !dbg !9789

bb78:                                             ; preds = %bb.i855, %bb.i844
  %570 = icmp ugt i32 %n_dgram_fill_info.0, 99, !dbg !9790
  br i1 %570, label %bb81, label %bb82, !dbg !9790

bb81:                                             ; preds = %bb78
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([34 x i8]* @.str44393, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9791

bb82:                                             ; preds = %bb78
  %571 = add nsw i32 %k.0, 2, !dbg !9793
  %572 = icmp slt i32 %571, %0, !dbg !9793
  br i1 %572, label %bb84, label %bb83, !dbg !9793

bb83:                                             ; preds = %bb82
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9794

bb84:                                             ; preds = %bb82
  %573 = add nsw i32 %k.0, 1, !dbg !9796
  %574 = sext i32 %573 to i64, !dbg !9797
  %575 = getelementptr inbounds i8** %1, i64 %574, !dbg !9797
  %576 = load i8** %575, align 8, !dbg !9797
  %577 = load i8* %576, align 1, !dbg !9798
  switch i8 %577, label %bb9.preheader.i695 [
    i8 0, label %bb.i690
    i8 48, label %bb2.i691
  ]

bb.i690:                                          ; preds = %bb84
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9799

bb2.i691:                                         ; preds = %bb84
  %578 = getelementptr inbounds i8* %576, i64 1, !dbg !9800
  %579 = load i8* %578, align 1, !dbg !9800
  switch i8 %579, label %bb9.preheader.i695 [
    i8 120, label %bb5.i692
    i8 88, label %bb5.i692
  ]

bb5.i692:                                         ; preds = %bb2.i691, %bb2.i691
  %580 = getelementptr inbounds i8* %576, i64 2, !dbg !9801
  br label %bb9.preheader.i695, !dbg !9801

bb9.preheader.i695:                               ; preds = %bb5.i692, %bb2.i691, %bb84
  %base.0.ph.i693 = phi i64 [ 10, %bb2.i691 ], [ 16, %bb5.i692 ], [ 10, %bb84 ]
  %s_addr.0.ph.i694 = phi i8* [ %576, %bb2.i691 ], [ %580, %bb5.i692 ], [ %576, %bb84 ]
  br label %bb9.i706

bb6.i696:                                         ; preds = %bb9.i706
  %581 = add i8 %597, -48, !dbg !9802
  %582 = icmp ult i8 %581, 10, !dbg !9802
  br i1 %582, label %bb.i719, label %bb1.i720, !dbg !9802

bb.i719:                                          ; preds = %bb6.i696
  %583 = sext i8 %597 to i32, !dbg !9802
  %584 = add nsw i32 %583, -48, !dbg !9802
  br label %__getxdigit.exit726, !dbg !9802

bb1.i720:                                         ; preds = %bb6.i696
  %585 = add i8 %597, -65, !dbg !9802
  %586 = icmp ult i8 %585, 6, !dbg !9802
  br i1 %586, label %bb2.i721, label %bb3.i722, !dbg !9802

bb2.i721:                                         ; preds = %bb1.i720
  %587 = sext i8 %597 to i32, !dbg !9802
  %588 = add nsw i32 %587, -55, !dbg !9802
  br label %__getxdigit.exit726, !dbg !9802

bb3.i722:                                         ; preds = %bb1.i720
  %589 = add i8 %597, -97, !dbg !9802
  %590 = icmp ult i8 %589, 6, !dbg !9802
  br i1 %590, label %bb4.i723, label %bb8.i702, !dbg !9802

bb4.i723:                                         ; preds = %bb3.i722
  %591 = sext i8 %597 to i32, !dbg !9802
  %592 = add nsw i32 %591, -87, !dbg !9802
  br label %__getxdigit.exit726, !dbg !9802

__getxdigit.exit726:                              ; preds = %bb4.i723, %bb2.i721, %bb.i719
  %iftmp.12.0.i724 = phi i32 [ %584, %bb.i719 ], [ %588, %bb2.i721 ], [ %592, %bb4.i723 ]
  %593 = icmp eq i32 %iftmp.12.0.i724, -1, !dbg !9804
  br i1 %593, label %bb8.i702, label %bb7.i698, !dbg !9804

bb7.i698:                                         ; preds = %__getxdigit.exit726
  %594 = mul nsw i64 %res.0.ph.i699, %base.0.ph.i693, !dbg !9805
  %595 = sext i32 %iftmp.12.0.i724 to i64, !dbg !9805
  %596 = add nsw i64 %595, %594, !dbg !9805
  %indvar.next = add i64 %indvar, 1
  br label %bb9.i706, !dbg !9805

bb8.i702:                                         ; preds = %__getxdigit.exit726, %bb3.i722
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9806

bb9.i706:                                         ; preds = %bb7.i698, %bb9.preheader.i695
  %indvar = phi i64 [ 0, %bb9.preheader.i695 ], [ %indvar.next, %bb7.i698 ]
  %res.0.ph.i699 = phi i64 [ 0, %bb9.preheader.i695 ], [ %596, %bb7.i698 ]
  %s_addr.0.ph14.i700 = getelementptr i8* %s_addr.0.ph.i694, i64 %indvar
  %597 = load i8* %s_addr.0.ph14.i700, align 1, !dbg !9808
  %598 = icmp eq i8 %597, 0, !dbg !9808
  br i1 %598, label %__str_to_int.exit707, label %bb6.i696, !dbg !9808

__str_to_int.exit707:                             ; preds = %bb9.i706
  %599 = trunc i64 %res.0.ph.i699 to i32, !dbg !9797
  %600 = zext i32 %n_dgram_fill_info.0 to i64, !dbg !9797
  %601 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 0, !dbg !9797
  store i32 %599, i32* %601, align 8, !dbg !9797
  %602 = sext i32 %571 to i64, !dbg !9809
  %603 = getelementptr inbounds i8** %1, i64 %602, !dbg !9809
  %604 = load i8** %603, align 8, !dbg !9809
  br label %bb3.i686, !dbg !9810

bb.i680:                                          ; preds = %bb3.i686
  %605 = icmp eq i8 %606, 0, !dbg !9811
  br i1 %605, label %bb85, label %bb2.i682, !dbg !9811

bb2.i682:                                         ; preds = %bb.i680
  %indvar.next.i681 = add i64 %indvar.i683, 1
  br label %bb3.i686, !dbg !9812

bb3.i686:                                         ; preds = %bb2.i682, %__str_to_int.exit707
  %indvar.i683 = phi i64 [ %indvar.next.i681, %bb2.i682 ], [ 0, %__str_to_int.exit707 ]
  %a_addr.0.i685 = getelementptr i8* %604, i64 %indvar.i683
  %b_addr.0.i684 = getelementptr [4 x i8]* @.str38387, i64 0, i64 %indvar.i683
  %606 = load i8* %a_addr.0.i685, align 1, !dbg !9810
  %607 = load i8* %b_addr.0.i684, align 1, !dbg !9810
  %608 = icmp eq i8 %606, %607, !dbg !9810
  br i1 %608, label %bb.i680, label %bb3.i383, !dbg !9810

bb85:                                             ; preds = %bb.i680
  %609 = add i32 %k.0, 4, !dbg !9813
  %610 = icmp slt i32 %609, %0, !dbg !9813
  br i1 %610, label %bb87, label %bb86, !dbg !9813

bb86:                                             ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9814

bb87:                                             ; preds = %bb85
  %611 = add i32 %k.0, 3, !dbg !9816
  %612 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !9817
  store i32 0, i32* %612, align 4, !dbg !9817
  %613 = sext i32 %611 to i64, !dbg !9818
  %614 = getelementptr inbounds i8** %1, i64 %613, !dbg !9818
  %615 = load i8** %614, align 8, !dbg !9818
  %616 = load i8* %615, align 1, !dbg !9819
  switch i8 %616, label %bb9.preheader.i439 [
    i8 0, label %bb.i434
    i8 48, label %bb2.i435
  ]

bb.i434:                                          ; preds = %bb87
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9820

bb2.i435:                                         ; preds = %bb87
  %617 = getelementptr inbounds i8* %615, i64 1, !dbg !9821
  %618 = load i8* %617, align 1, !dbg !9821
  switch i8 %618, label %bb9.preheader.i439 [
    i8 120, label %bb5.i436
    i8 88, label %bb5.i436
  ]

bb5.i436:                                         ; preds = %bb2.i435, %bb2.i435
  %619 = getelementptr inbounds i8* %615, i64 2, !dbg !9822
  br label %bb9.preheader.i439, !dbg !9822

bb9.preheader.i439:                               ; preds = %bb5.i436, %bb2.i435, %bb87
  %base.0.ph.i437 = phi i64 [ 10, %bb2.i435 ], [ 16, %bb5.i436 ], [ 10, %bb87 ]
  %s_addr.0.ph.i438 = phi i8* [ %615, %bb2.i435 ], [ %619, %bb5.i436 ], [ %615, %bb87 ]
  br label %bb9.i450

bb6.i440:                                         ; preds = %bb9.i450
  %620 = add i8 %636, -48, !dbg !9823
  %621 = icmp ult i8 %620, 10, !dbg !9823
  br i1 %621, label %bb.i463, label %bb1.i464, !dbg !9823

bb.i463:                                          ; preds = %bb6.i440
  %622 = sext i8 %636 to i32, !dbg !9823
  %623 = add nsw i32 %622, -48, !dbg !9823
  br label %__getxdigit.exit470, !dbg !9823

bb1.i464:                                         ; preds = %bb6.i440
  %624 = add i8 %636, -65, !dbg !9823
  %625 = icmp ult i8 %624, 6, !dbg !9823
  br i1 %625, label %bb2.i465, label %bb3.i466, !dbg !9823

bb2.i465:                                         ; preds = %bb1.i464
  %626 = sext i8 %636 to i32, !dbg !9823
  %627 = add nsw i32 %626, -55, !dbg !9823
  br label %__getxdigit.exit470, !dbg !9823

bb3.i466:                                         ; preds = %bb1.i464
  %628 = add i8 %636, -97, !dbg !9823
  %629 = icmp ult i8 %628, 6, !dbg !9823
  br i1 %629, label %bb4.i467, label %bb8.i446, !dbg !9823

bb4.i467:                                         ; preds = %bb3.i466
  %630 = sext i8 %636 to i32, !dbg !9823
  %631 = add nsw i32 %630, -87, !dbg !9823
  br label %__getxdigit.exit470, !dbg !9823

__getxdigit.exit470:                              ; preds = %bb4.i467, %bb2.i465, %bb.i463
  %iftmp.12.0.i468 = phi i32 [ %623, %bb.i463 ], [ %627, %bb2.i465 ], [ %631, %bb4.i467 ]
  %632 = icmp eq i32 %iftmp.12.0.i468, -1, !dbg !9825
  br i1 %632, label %bb8.i446, label %bb7.i442, !dbg !9825

bb7.i442:                                         ; preds = %__getxdigit.exit470
  %633 = mul nsw i64 %res.0.ph.i443, %base.0.ph.i437, !dbg !9826
  %634 = sext i32 %iftmp.12.0.i468 to i64, !dbg !9826
  %635 = add nsw i64 %634, %633, !dbg !9826
  %indvar.next1647 = add i64 %indvar1646, 1
  br label %bb9.i450, !dbg !9826

bb8.i446:                                         ; preds = %__getxdigit.exit470, %bb3.i466
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9827

bb9.i450:                                         ; preds = %bb7.i442, %bb9.preheader.i439
  %indvar1646 = phi i64 [ 0, %bb9.preheader.i439 ], [ %indvar.next1647, %bb7.i442 ]
  %res.0.ph.i443 = phi i64 [ 0, %bb9.preheader.i439 ], [ %635, %bb7.i442 ]
  %s_addr.0.ph14.i444 = getelementptr i8* %s_addr.0.ph.i438, i64 %indvar1646
  %636 = load i8* %s_addr.0.ph14.i444, align 1, !dbg !9829
  %637 = icmp eq i8 %636, 0, !dbg !9829
  br i1 %637, label %__str_to_int.exit451, label %bb6.i440, !dbg !9829

__str_to_int.exit451:                             ; preds = %bb9.i450
  %638 = trunc i64 %res.0.ph.i443 to i32, !dbg !9818
  %639 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !9818
  store i32 %638, i32* %639, align 8, !dbg !9818
  %640 = sext i32 %609 to i64, !dbg !9830
  %641 = getelementptr inbounds i8** %1, i64 %640, !dbg !9830
  %642 = load i8** %641, align 8, !dbg !9830
  %643 = add i32 %k.0, 5, !dbg !9830
  %644 = load i8* %642, align 1, !dbg !9831
  switch i8 %644, label %bb9.preheader.i392 [
    i8 0, label %bb.i387
    i8 48, label %bb2.i388
  ]

bb.i387:                                          ; preds = %__str_to_int.exit451
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9832

bb2.i388:                                         ; preds = %__str_to_int.exit451
  %645 = getelementptr inbounds i8* %642, i64 1, !dbg !9833
  %646 = load i8* %645, align 1, !dbg !9833
  switch i8 %646, label %bb9.preheader.i392 [
    i8 120, label %bb5.i389
    i8 88, label %bb5.i389
  ]

bb5.i389:                                         ; preds = %bb2.i388, %bb2.i388
  %647 = getelementptr inbounds i8* %642, i64 2, !dbg !9834
  br label %bb9.preheader.i392, !dbg !9834

bb9.preheader.i392:                               ; preds = %bb5.i389, %bb2.i388, %__str_to_int.exit451
  %base.0.ph.i390 = phi i64 [ 10, %bb2.i388 ], [ 16, %bb5.i389 ], [ 10, %__str_to_int.exit451 ]
  %s_addr.0.ph.i391 = phi i8* [ %642, %bb2.i388 ], [ %647, %bb5.i389 ], [ %642, %__str_to_int.exit451 ]
  br label %bb9.i403

bb6.i393:                                         ; preds = %bb9.i403
  %648 = add i8 %664, -48, !dbg !9835
  %649 = icmp ult i8 %648, 10, !dbg !9835
  br i1 %649, label %bb.i416, label %bb1.i417, !dbg !9835

bb.i416:                                          ; preds = %bb6.i393
  %650 = sext i8 %664 to i32, !dbg !9835
  %651 = add nsw i32 %650, -48, !dbg !9835
  br label %__getxdigit.exit423, !dbg !9835

bb1.i417:                                         ; preds = %bb6.i393
  %652 = add i8 %664, -65, !dbg !9835
  %653 = icmp ult i8 %652, 6, !dbg !9835
  br i1 %653, label %bb2.i418, label %bb3.i419, !dbg !9835

bb2.i418:                                         ; preds = %bb1.i417
  %654 = sext i8 %664 to i32, !dbg !9835
  %655 = add nsw i32 %654, -55, !dbg !9835
  br label %__getxdigit.exit423, !dbg !9835

bb3.i419:                                         ; preds = %bb1.i417
  %656 = add i8 %664, -97, !dbg !9835
  %657 = icmp ult i8 %656, 6, !dbg !9835
  br i1 %657, label %bb4.i420, label %bb8.i399, !dbg !9835

bb4.i420:                                         ; preds = %bb3.i419
  %658 = sext i8 %664 to i32, !dbg !9835
  %659 = add nsw i32 %658, -87, !dbg !9835
  br label %__getxdigit.exit423, !dbg !9835

__getxdigit.exit423:                              ; preds = %bb4.i420, %bb2.i418, %bb.i416
  %iftmp.12.0.i421 = phi i32 [ %651, %bb.i416 ], [ %655, %bb2.i418 ], [ %659, %bb4.i420 ]
  %660 = icmp eq i32 %iftmp.12.0.i421, -1, !dbg !9837
  br i1 %660, label %bb8.i399, label %bb7.i395, !dbg !9837

bb7.i395:                                         ; preds = %__getxdigit.exit423
  %661 = mul nsw i64 %res.0.ph.i396, %base.0.ph.i390, !dbg !9838
  %662 = sext i32 %iftmp.12.0.i421 to i64, !dbg !9838
  %663 = add nsw i64 %662, %661, !dbg !9838
  %indvar.next1650 = add i64 %indvar1649, 1
  br label %bb9.i403, !dbg !9838

bb8.i399:                                         ; preds = %__getxdigit.exit423, %bb3.i419
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9839

bb9.i403:                                         ; preds = %bb7.i395, %bb9.preheader.i392
  %indvar1649 = phi i64 [ 0, %bb9.preheader.i392 ], [ %indvar.next1650, %bb7.i395 ]
  %res.0.ph.i396 = phi i64 [ 0, %bb9.preheader.i392 ], [ %663, %bb7.i395 ]
  %s_addr.0.ph14.i397 = getelementptr i8* %s_addr.0.ph.i391, i64 %indvar1649
  %664 = load i8* %s_addr.0.ph14.i397, align 1, !dbg !9841
  %665 = icmp eq i8 %664, 0, !dbg !9841
  br i1 %665, label %__str_to_int.exit404, label %bb6.i393, !dbg !9841

__str_to_int.exit404:                             ; preds = %bb9.i403
  %666 = trunc i64 %res.0.ph.i396 to i32, !dbg !9830
  %667 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !9830
  %668 = bitcast i8** %667 to i32*, !dbg !9830
  store i32 %666, i32* %668, align 8, !dbg !9830
  %669 = add i32 %n_dgram_fill_info.0, 1, !dbg !9842
  br label %bb99, !dbg !9842

bb.i377:                                          ; preds = %bb3.i383
  %670 = icmp eq i8 %671, 0, !dbg !9843
  br i1 %670, label %bb89, label %bb2.i379, !dbg !9843

bb2.i379:                                         ; preds = %bb.i377
  %indvar.next.i378 = add i64 %indvar.i380, 1
  br label %bb3.i383, !dbg !9845

bb3.i383:                                         ; preds = %bb2.i379, %bb3.i686
  %indvar.i380 = phi i64 [ %indvar.next.i378, %bb2.i379 ], [ 0, %bb3.i686 ]
  %a_addr.0.i382 = getelementptr i8* %604, i64 %indvar.i380
  %b_addr.0.i381 = getelementptr [5 x i8]* @.str39388, i64 0, i64 %indvar.i380
  %671 = load i8* %a_addr.0.i382, align 1, !dbg !9846
  %672 = load i8* %b_addr.0.i381, align 1, !dbg !9846
  %673 = icmp eq i8 %671, %672, !dbg !9846
  br i1 %673, label %bb.i377, label %bb3.i163, !dbg !9846

bb89:                                             ; preds = %bb.i377
  %674 = add i32 %k.0, 3, !dbg !9847
  %675 = icmp slt i32 %674, %0, !dbg !9848
  br i1 %675, label %bb91, label %bb90, !dbg !9848

bb90:                                             ; preds = %bb89
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9849

bb91:                                             ; preds = %bb89
  %676 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !9851
  store i32 1, i32* %676, align 4, !dbg !9851
  %677 = sext i32 %674 to i64, !dbg !9852
  %678 = getelementptr inbounds i8** %1, i64 %677, !dbg !9852
  %679 = load i8** %678, align 8, !dbg !9852
  %680 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !9852
  store i8* %679, i8** %680, align 8, !dbg !9852
  %681 = add i32 %k.0, 4, !dbg !9852
  %682 = call fastcc i64 @__convert_escape_sequences(i8* %679) nounwind, !dbg !9853
  %683 = trunc i64 %682 to i32, !dbg !9853
  %684 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !9853
  store i32 %683, i32* %684, align 8, !dbg !9853
  %685 = add i32 %n_dgram_fill_info.0, 1, !dbg !9854
  br label %bb99, !dbg !9854

bb.i157:                                          ; preds = %bb3.i163
  %686 = icmp eq i8 %687, 0, !dbg !9855
  br i1 %686, label %bb93, label %bb2.i159, !dbg !9855

bb2.i159:                                         ; preds = %bb.i157
  %indvar.next.i158 = add i64 %indvar.i160, 1
  br label %bb3.i163, !dbg !9857

bb3.i163:                                         ; preds = %bb2.i159, %bb3.i383
  %indvar.i160 = phi i64 [ %indvar.next.i158, %bb2.i159 ], [ 0, %bb3.i383 ]
  %a_addr.0.i162 = getelementptr i8* %604, i64 %indvar.i160
  %b_addr.0.i161 = getelementptr [5 x i8]* @.str40389, i64 0, i64 %indvar.i160
  %687 = load i8* %a_addr.0.i162, align 1, !dbg !9858
  %688 = load i8* %b_addr.0.i161, align 1, !dbg !9858
  %689 = icmp eq i8 %687, %688, !dbg !9858
  br i1 %689, label %bb.i157, label %bb96, !dbg !9858

bb93:                                             ; preds = %bb.i157
  %690 = add i32 %k.0, 3, !dbg !9859
  %691 = icmp slt i32 %690, %0, !dbg !9860
  br i1 %691, label %bb95, label %bb94, !dbg !9860

bb94:                                             ; preds = %bb93
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9861

bb95:                                             ; preds = %bb93
  %692 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !9863
  store i32 2, i32* %692, align 4, !dbg !9863
  %693 = sext i32 %690 to i64, !dbg !9864
  %694 = getelementptr inbounds i8** %1, i64 %693, !dbg !9864
  %695 = load i8** %694, align 8, !dbg !9864
  %696 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !9864
  store i8* %695, i8** %696, align 8, !dbg !9864
  %697 = add i32 %k.0, 4, !dbg !9864
  %698 = add i32 %n_dgram_fill_info.0, 1, !dbg !9865
  br label %bb99, !dbg !9865

bb96:                                             ; preds = %bb3.i163
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43392, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !9866

bb97:                                             ; preds = %bb3.i861
  %699 = icmp eq i32 %704, 1024, !dbg !9868
  br i1 %699, label %bb.i105, label %__add_arg.exit, !dbg !9868

bb.i105:                                          ; preds = %bb97
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3353, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !9870

__add_arg.exit:                                   ; preds = %bb97
  %700 = add nsw i32 %k.0, 1, !dbg !9869
  %701 = sext i32 %704 to i64, !dbg !9872
  %702 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %701, !dbg !9872
  store i8* %18, i8** %702, align 8, !dbg !9872
  %703 = add nsw i32 %704, 1, !dbg !9873
  br label %bb99, !dbg !9869

bb99:                                             ; preds = %__add_arg.exit, %bb95, %bb91, %__str_to_int.exit404, %bb74, %bb70, %__str_to_int.exit803, %bb55, %__str_to_int.exit632, %__str_to_int.exit557, %__str_to_int.exit489, %bb34, %bb31, %bb28, %__str
  %704 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %63, %__add_arg.exit132 ], [ %704, %__str_to_int.exit300 ], [ %704, %bb28 ], [ %704, %bb31 ], [ %704, %bb34 ], [ %704, %__str_to_int.exit489 ], [ %704, %__str_to_int.exit557 ], [ %704, %__str_t
  %save_all_writes_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %save_all_writes_flag.0, %__add_arg.exit132 ], [ %save_all_writes_flag.0, %__str_to_int.exit300 ], [ %save_all_writes_flag.0, %bb28 ], [ 1, %bb31 ], [ %save_all_writes_flag.0
  %sym_stdout_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stdout_flag.0, %__add_arg.exit132 ], [ %sym_stdout_flag.0, %__str_to_int.exit300 ], [ 1, %bb28 ], [ %sym_stdout_flag.0, %bb31 ], [ %sym_stdout_flag.0, %bb34 ], [ %sym_stdout_
  %sym_dgram_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgram_len.0, %__add_arg.exit132 ], [ %sym_dgram_len.0, %__str_to_int.exit300 ], [ %sym_dgram_len.0, %bb28 ], [ %sym_dgram_len.0, %bb31 ], [ %sym_dgram_len.0, %bb34 ], [ %sym_dg
  %sym_dgrams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgrams.0, %__add_arg.exit132 ], [ %sym_dgrams.0, %__str_to_int.exit300 ], [ %sym_dgrams.0, %bb28 ], [ %sym_dgrams.0, %bb31 ], [ %sym_dgrams.0, %bb34 ], [ %sym_dgrams.0, %__str_to_
  %sym_stream_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stream_len.0, %__add_arg.exit132 ], [ %sym_stream_len.0, %__str_to_int.exit300 ], [ %sym_stream_len.0, %bb28 ], [ %sym_stream_len.0, %bb31 ], [ %sym_stream_len.0, %bb34 ], [ %
  %sym_streams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_streams.0, %__add_arg.exit132 ], [ %sym_streams.0, %__str_to_int.exit300 ], [ %sym_streams.0, %bb28 ], [ %sym_streams.0, %bb31 ], [ %sym_streams.0, %bb34 ], [ %sym_streams.0, %__
  %sym_file_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_file_len.0, %__add_arg.exit132 ], [ %223, %__str_to_int.exit300 ], [ %sym_file_len.0, %bb28 ], [ %sym_file_len.0, %bb31 ], [ %sym_file_len.0, %bb34 ], [ %sym_file_len.0, %__str_
  %sym_files.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_files.0, %__add_arg.exit132 ], [ %196, %__str_to_int.exit300 ], [ %sym_files.0, %bb28 ], [ %sym_files.0, %bb31 ], [ %sym_files.0, %bb34 ], [ %sym_files.0, %__str_to_int.exit489 ], 
  %one_line_streams_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %one_line_streams_flag.0, %__add_arg.exit132 ], [ %one_line_streams_flag.0, %__str_to_int.exit300 ], [ %one_line_streams_flag.0, %bb28 ], [ %one_line_streams_flag.0, %bb31 ]
  %n_stream_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_stream_fill_info.0, %__add_arg.exit132 ], [ %n_stream_fill_info.0, %__str_to_int.exit300 ], [ %n_stream_fill_info.0, %bb28 ], [ %n_stream_fill_info.0, %bb31 ], [ %n_stream_f
  %n_dgram_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_dgram_fill_info.0, %__add_arg.exit132 ], [ %n_dgram_fill_info.0, %__str_to_int.exit300 ], [ %n_dgram_fill_info.0, %bb28 ], [ %n_dgram_fill_info.0, %bb31 ], [ %n_dgram_fill_in
  %fd_fail.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %fd_fail.0, %__add_arg.exit132 ], [ %fd_fail.0, %__str_to_int.exit300 ], [ %fd_fail.0, %bb28 ], [ %fd_fail.0, %bb31 ], [ 1, %bb34 ], [ %287, %__str_to_int.exit489 ], [ %fd_fail.0, %__str_
  %sym_arg_num.1 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %60, %__add_arg.exit132 ], [ %sym_arg_num.1, %__str_to_int.exit300 ], [ %sym_arg_num.1, %bb28 ], [ %sym_arg_num.1, %bb31 ], [ %sym_arg_num.1, %bb34 ], [ %sym_arg_num.1, %__str_to_int.
  %k.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %32, %__add_arg.exit132 ], [ %200, %__str_to_int.exit300 ], [ %232, %bb28 ], [ %241, %bb31 ], [ %250, %bb34 ], [ %264, %__str_to_int.exit489 ], [ %328, %__str_to_int.exit557 ], [ %392, %__str_t
  %705 = icmp slt i32 %k.0, %0, !dbg !9874
  br i1 %705, label %bb3, label %bb100, !dbg !9874

bb100:                                            ; preds = %bb99
  %706 = add nsw i32 %704, 1, !dbg !9875
  %707 = sext i32 %706 to i64, !dbg !9875
  %int_cast_to_i64 = bitcast i64 3 to i64
  %708 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %708, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %bb100
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb100
  %709 = shl nsw i64 %707, 3, !dbg !9875
  %710 = call noalias i8* @malloc(i64 %709) nounwind, !dbg !9875
  %711 = bitcast i8* %710 to i8**, !dbg !9875
  call void @klee_mark_global(i8* %710) nounwind, !dbg !9876
  %712 = sext i32 %704 to i64, !dbg !9877
  %int_cast_to_i641 = bitcast i64 3 to i64
  %713 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %713, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %714 = shl nsw i64 %712, 3, !dbg !9877
  %new_argv101102 = bitcast [1024 x i8*]* %new_argv to i8*, !dbg !9877
  %715 = call i8* @memcpy(i8* %710, i8* %new_argv101102, i64 %714)
  %716 = getelementptr inbounds i8** %711, i64 %712, !dbg !9878
  store i8* null, i8** %716, align 8, !dbg !9878
  store i32 %704, i32* %argcPtr, align 4, !dbg !9879
  store i8** %711, i8*** %argvPtr, align 8, !dbg !9880
  %stream_fill_info103 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 0, !dbg !9881
  %dgram_fill_info104 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 0, !dbg !9881
  call void @klee_init_fds(i32 %sym_files.0, i32 %sym_file_len.0, i32 %sym_stdout_flag.0, i32 %save_all_writes_flag.0, i32 %sym_streams.0, i32 %sym_stream_len.0, i32 %sym_dgrams.0, i32 %sym_dgram_len.0, i32 %fd_fail.0, i32 %one_line_streams_flag.0, %stru
  ret void, !dbg !9882
}

define internal fastcc i8* @__get_sym_str(i32 %numChars, i8* %name) nounwind {
entry:
  %0 = add nsw i32 %numChars, 1, !dbg !9883
  %1 = sext i32 %0 to i64, !dbg !9883
  %2 = tail call noalias i8* @malloc(i64 %1) nounwind, !dbg !9883
  tail call void @klee_mark_global(i8* %2) nounwind, !dbg !9884
  tail call void @klee_make_symbolic(i8* %2, i64 %1, i8* %name) nounwind, !dbg !9885
  %3 = icmp sgt i32 %numChars, 0, !dbg !9886
  br i1 %3, label %bb.lr.ph, label %bb2, !dbg !9886

bb.lr.ph:                                         ; preds = %entry
  %tmp1 = zext i32 %numChars to i64
  br label %bb

bb:                                               ; preds = %bb, %bb.lr.ph
  %indvar = phi i64 [ 0, %bb.lr.ph ], [ %indvar.next, %bb ]
  %scevgep = getelementptr i8* %2, i64 %indvar
  %4 = load i8* %scevgep, align 1, !dbg !9887
  %5 = add i8 %4, -32, !dbg !9888
  %6 = icmp ult i8 %5, 95, !dbg !9888
  %7 = zext i1 %6 to i64, !dbg !9887
  tail call void @klee_prefer_cex(i8* %2, i64 %7) nounwind, !dbg !9887
  %indvar.next = add i64 %indvar, 1
  %exitcond2 = icmp eq i64 %indvar.next, %tmp1
  br i1 %exitcond2, label %bb2, label %bb, !dbg !9886

bb2:                                              ; preds = %bb, %entry
  %8 = sext i32 %numChars to i64, !dbg !9890
  %9 = getelementptr inbounds i8* %2, i64 %8, !dbg !9890
  store i8 0, i8* %9, align 1, !dbg !9890
  ret i8* %2, !dbg !9891
}

declare void @klee_mark_global(i8*)

declare void @klee_prefer_cex(i8*, i64)

define internal fastcc i64 @__convert_escape_sequences(i8* nocapture %s) nounwind {
entry:
  br label %bb21, !dbg !9892

bb1:                                              ; preds = %bb21
  store i8 %70, i8* %d.0, align 1, !dbg !9893
  %0 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !9893
  br label %bb21.backedge, !dbg !9893

bb21.backedge:                                    ; preds = %bb19, %klee_overshift_check.exit9, %bb15, %klee_overshift_check.exit7, %klee_overshift_check.exit5, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb1
  %s_addr.0.be = phi i8* [ %0, %bb1 ], [ %4, %bb3 ], [ %63, %klee_overshift_check.exit9 ], [ %48, %bb19 ], [ %4, %bb10 ], [ %4, %bb9 ], [ %4, %bb8 ], [ %4, %bb7 ], [ %4, %bb6 ], [ %4, %bb5 ], [ %4, %bb4 ], [ %21, %klee_overshift_check.exit5 ], [ %14, %kl
  %indvar.next = add i64 %69, 1
  br label %bb21

bb2:                                              ; preds = %bb21
  %1 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !9894
  %2 = load i8* %1, align 1, !dbg !9895
  %3 = sext i8 %2 to i32, !dbg !9895
  %4 = getelementptr inbounds i8* %s_addr.0, i64 2, !dbg !9895
  switch i32 %3, label %bb3 [
    i32 48, label %bb11
    i32 49, label %bb11
    i32 50, label %bb11
    i32 51, label %bb11
    i32 52, label %bb11
    i32 53, label %bb11
    i32 54, label %bb11
    i32 55, label %bb11
    i32 97, label %bb4
    i32 98, label %bb5
    i32 102, label %bb6
    i32 110, label %bb7
    i32 114, label %bb8
    i32 116, label %bb9
    i32 118, label %bb10
    i32 120, label %bb16
  ], !dbg !9895

bb3:                                              ; preds = %bb2
  store i8 %2, i8* %d.0, align 1, !dbg !9896
  br label %bb21.backedge, !dbg !9896

bb4:                                              ; preds = %bb2
  store i8 7, i8* %d.0, align 1, !dbg !9897
  br label %bb21.backedge, !dbg !9897

bb5:                                              ; preds = %bb2
  store i8 8, i8* %d.0, align 1, !dbg !9898
  br label %bb21.backedge, !dbg !9898

bb6:                                              ; preds = %bb2
  store i8 12, i8* %d.0, align 1, !dbg !9899
  br label %bb21.backedge, !dbg !9899

bb7:                                              ; preds = %bb2
  store i8 10, i8* %d.0, align 1, !dbg !9900
  br label %bb21.backedge, !dbg !9900

bb8:                                              ; preds = %bb2
  store i8 13, i8* %d.0, align 1, !dbg !9901
  br label %bb21.backedge, !dbg !9901

bb9:                                              ; preds = %bb2
  store i8 9, i8* %d.0, align 1, !dbg !9902
  br label %bb21.backedge, !dbg !9902

bb10:                                             ; preds = %bb2
  store i8 11, i8* %d.0, align 1, !dbg !9903
  br label %bb21.backedge, !dbg !9903

bb11:                                             ; preds = %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2
  %5 = add i8 %2, -48, !dbg !9904
  %6 = add nsw i32 %3, -48, !dbg !9904
  %7 = icmp ult i8 %5, 8, !dbg !9904
  %. = select i1 %7, i32 %6, i32 -1
  %8 = load i8* %4, align 1, !dbg !9907
  %9 = add i8 %8, -48, !dbg !9908
  %10 = icmp ult i8 %9, 8, !dbg !9908
  br i1 %10, label %__getodigit.exit26, label %bb15, !dbg !9908

__getodigit.exit26:                               ; preds = %bb11
  %11 = sext i8 %8 to i32, !dbg !9908
  %12 = add nsw i32 %11, -48, !dbg !9908
  %13 = icmp sgt i32 %12, -1, !dbg !9907
  br i1 %13, label %bb12, label %bb15, !dbg !9907

bb12:                                             ; preds = %__getodigit.exit26
  %14 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !9909
  %15 = load i8* %14, align 1, !dbg !9910
  %16 = add i8 %15, -48, !dbg !9911
  %17 = icmp ult i8 %16, 8, !dbg !9911
  br i1 %17, label %__getodigit.exit38, label %bb14, !dbg !9911

__getodigit.exit38:                               ; preds = %bb12
  %18 = sext i8 %15 to i32, !dbg !9911
  %19 = add nsw i32 %18, -48, !dbg !9911
  %20 = icmp sgt i32 %19, -1, !dbg !9910
  br i1 %20, label %bb13, label %bb14, !dbg !9910

bb13:                                             ; preds = %__getodigit.exit38
  %21 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !9912
  %int_cast_to_i64 = zext i32 6 to i64
  %22 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %22, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb13
  %23 = shl nsw i32 %., 6, !dbg !9913
  %int_cast_to_i641 = zext i32 3 to i64
  %24 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %24, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %25 = shl nsw i32 %12, 3, !dbg !9913
  %26 = or i32 %25, %23
  %27 = or i32 %26, %19
  %28 = trunc i32 %27 to i8, !dbg !9913
  store i8 %28, i8* %d.0, align 1, !dbg !9913
  br label %bb21.backedge, !dbg !9913

bb14:                                             ; preds = %__getodigit.exit38, %bb12
  %int_cast_to_i642 = zext i32 3 to i64
  %29 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %29, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %bb14
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %bb14
  %30 = shl nsw i32 %., 3, !dbg !9914
  %31 = or i32 %12, %30
  %32 = trunc i32 %31 to i8, !dbg !9914
  store i8 %32, i8* %d.0, align 1, !dbg !9914
  br label %bb21.backedge, !dbg !9914

bb15:                                             ; preds = %__getodigit.exit26, %bb11
  %33 = trunc i32 %. to i8, !dbg !9915
  store i8 %33, i8* %d.0, align 1, !dbg !9915
  br label %bb21.backedge, !dbg !9915

bb16:                                             ; preds = %bb2
  %34 = load i8* %4, align 1, !dbg !9916
  %35 = add i8 %34, -48, !dbg !9917
  %36 = icmp ult i8 %35, 10, !dbg !9917
  br i1 %36, label %bb.i28, label %bb1.i29, !dbg !9917

bb.i28:                                           ; preds = %bb16
  %37 = sext i8 %34 to i32, !dbg !9917
  %38 = add nsw i32 %37, -48, !dbg !9917
  br label %__getxdigit.exit34, !dbg !9917

bb1.i29:                                          ; preds = %bb16
  %39 = add i8 %34, -65, !dbg !9917
  %40 = icmp ult i8 %39, 6, !dbg !9917
  br i1 %40, label %bb2.i30, label %bb3.i31, !dbg !9917

bb2.i30:                                          ; preds = %bb1.i29
  %41 = sext i8 %34 to i32, !dbg !9917
  %42 = add nsw i32 %41, -55, !dbg !9917
  br label %__getxdigit.exit34, !dbg !9917

bb3.i31:                                          ; preds = %bb1.i29
  %43 = add i8 %34, -97, !dbg !9917
  %44 = icmp ult i8 %43, 6, !dbg !9917
  br i1 %44, label %bb4.i32, label %bb20, !dbg !9917

bb4.i32:                                          ; preds = %bb3.i31
  %45 = sext i8 %34 to i32, !dbg !9917
  %46 = add nsw i32 %45, -87, !dbg !9917
  br label %__getxdigit.exit34, !dbg !9917

__getxdigit.exit34:                               ; preds = %bb4.i32, %bb2.i30, %bb.i28
  %iftmp.12.0.i33 = phi i32 [ %38, %bb.i28 ], [ %42, %bb2.i30 ], [ %46, %bb4.i32 ]
  %47 = icmp sgt i32 %iftmp.12.0.i33, -1, !dbg !9916
  br i1 %47, label %bb17, label %bb20, !dbg !9916

bb17:                                             ; preds = %__getxdigit.exit34
  %48 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !9918
  %49 = load i8* %48, align 1, !dbg !9919
  %50 = add i8 %49, -48, !dbg !9920
  %51 = icmp ult i8 %50, 10, !dbg !9920
  br i1 %51, label %bb.i27, label %bb1.i, !dbg !9920

bb.i27:                                           ; preds = %bb17
  %52 = sext i8 %49 to i32, !dbg !9920
  %53 = add nsw i32 %52, -48, !dbg !9920
  br label %__getxdigit.exit, !dbg !9920

bb1.i:                                            ; preds = %bb17
  %54 = add i8 %49, -65, !dbg !9920
  %55 = icmp ult i8 %54, 6, !dbg !9920
  br i1 %55, label %bb2.i, label %bb3.i, !dbg !9920

bb2.i:                                            ; preds = %bb1.i
  %56 = sext i8 %49 to i32, !dbg !9920
  %57 = add nsw i32 %56, -55, !dbg !9920
  br label %__getxdigit.exit, !dbg !9920

bb3.i:                                            ; preds = %bb1.i
  %58 = add i8 %49, -97, !dbg !9920
  %59 = icmp ult i8 %58, 6, !dbg !9920
  br i1 %59, label %bb4.i, label %bb19, !dbg !9920

bb4.i:                                            ; preds = %bb3.i
  %60 = sext i8 %49 to i32, !dbg !9920
  %61 = add nsw i32 %60, -87, !dbg !9920
  br label %__getxdigit.exit, !dbg !9920

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i, %bb.i27
  %iftmp.12.0.i = phi i32 [ %53, %bb.i27 ], [ %57, %bb2.i ], [ %61, %bb4.i ]
  %62 = icmp sgt i32 %iftmp.12.0.i, -1, !dbg !9919
  br i1 %62, label %bb18, label %bb19, !dbg !9919

bb18:                                             ; preds = %__getxdigit.exit
  %63 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !9921
  %int_cast_to_i643 = zext i32 4 to i64
  %64 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %64, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %bb18
  %65 = shl nsw i32 %iftmp.12.0.i33, 4, !dbg !9922
  %66 = or i32 %iftmp.12.0.i, %65
  %67 = trunc i32 %66 to i8, !dbg !9922
  store i8 %67, i8* %d.0, align 1, !dbg !9922
  br label %bb21.backedge, !dbg !9922

bb19:                                             ; preds = %__getxdigit.exit, %bb3.i
  %68 = trunc i32 %iftmp.12.0.i33 to i8, !dbg !9923
  store i8 %68, i8* %d.0, align 1, !dbg !9923
  br label %bb21.backedge, !dbg !9923

bb20:                                             ; preds = %__getxdigit.exit34, %bb3.i31
  tail call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str350, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([24 x i8]* @.str2352, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1351, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !9924

bb21:                                             ; preds = %bb21.backedge, %entry
  %69 = phi i64 [ %indvar.next, %bb21.backedge ], [ 0, %entry ]
  %s_addr.0 = phi i8* [ %s_addr.0.be, %bb21.backedge ], [ %s, %entry ]
  %d.0 = getelementptr i8* %s, i64 %69
  %70 = load i8* %s_addr.0, align 1, !dbg !9926
  switch i8 %70, label %bb1 [
    i8 0, label %bb22
    i8 92, label %bb2
  ]

bb22:                                             ; preds = %bb21
  ret i64 %69, !dbg !9927
}

define weak i32 @__syscall_rt_sigaction(i32 %signum, %struct.sigaction* %act, %struct.sigaction* %oldact, i64 %_something) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8]* @.str20414, i64 0, i64 0)) nounwind, !dbg !9928
  ret i32 0, !dbg !9930
}

define weak i32 @_IO_getc(%struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %f) nounwind, !dbg !9931
  ret i32 %0, !dbg !9931
}

define weak i32 @_IO_putc(i32 %c, %struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 %c, %struct.FILE* %f) nounwind, !dbg !9933
  ret i32 %0, !dbg !9933
}

define weak i32 @rename(i8* %oldpath, i8* %newpath) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([48 x i8]* @.str11405, i64 0, i64 0)) nounwind, !dbg !9935
  %0 = tail call i64 (i64, ...)* @syscall(i64 82, i8* %oldpath, i8* %newpath) nounwind, !dbg !9936
  %1 = trunc i64 %0 to i32, !dbg !9936
  %2 = icmp eq i32 %1, -1, !dbg !9937
  br i1 %2, label %bb, label %bb1, !dbg !9937

bb:                                               ; preds = %entry
  %3 = tail call i32* @__errno_location() nounwind readnone, !dbg !9938
  %4 = tail call i32 @klee_get_errno() nounwind, !dbg !9938
  store i32 %4, i32* %3, align 4, !dbg !9938
  br label %bb1, !dbg !9938

bb1:                                              ; preds = %bb, %entry
  ret i32 %1, !dbg !9939
}

define weak i32 @clock_gettime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  %tv = alloca %struct.timespec, align 8
  %0 = call i32 @gettimeofday(%struct.timespec* noalias %tv, %struct.__mbstate_t* noalias null) nounwind, !dbg !9940
  %1 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !9941
  %2 = load i64* %1, align 8, !dbg !9941
  %3 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 0, !dbg !9941
  store i64 %2, i64* %3, align 8, !dbg !9941
  %4 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !9942
  %5 = load i64* %4, align 8, !dbg !9942
  %6 = mul nsw i64 %5, 1000, !dbg !9942
  %7 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 1, !dbg !9942
  store i64 %6, i64* %7, align 8, !dbg !9942
  ret i32 0, !dbg !9943
}

define weak i32 @clock_settime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str4399, i64 0, i64 0)) nounwind, !dbg !9944
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9946
  store i32 1, i32* %0, align 4, !dbg !9946
  ret i32 -1, !dbg !9947
}

define i32 @strverscmp(i8* nocapture %__s1, i8* nocapture %__s2) nounwind readonly {
entry:
  %0 = tail call i32 @strcmp(i8* %__s1, i8* %__s2) nounwind readonly, !dbg !9948
  ret i32 %0, !dbg !9949
}

define weak i32 @gnu_dev_major(i64 %__dev) nounwind readnone {
entry:
  %int_cast_to_i64 = bitcast i64 8 to i64
  %0 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %0, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %1 = lshr i64 %__dev, 8, !dbg !9950
  %2 = trunc i64 %1 to i32, !dbg !9950
  %3 = and i32 %2, 4095, !dbg !9950
  %int_cast_to_i641 = bitcast i64 32 to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %5 = lshr i64 %__dev, 32, !dbg !9950
  %6 = trunc i64 %5 to i32, !dbg !9950
  %7 = and i32 %6, -4096, !dbg !9950
  %8 = or i32 %3, %7, !dbg !9950
  ret i32 %8, !dbg !9950
}

define weak i32 @gnu_dev_minor(i64 %__dev) nounwind readnone {
entry:
  %0 = trunc i64 %__dev to i32, !dbg !9952
  %1 = and i32 %0, 255, !dbg !9952
  %int_cast_to_i64 = bitcast i64 12 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = lshr i64 %__dev, 12, !dbg !9952
  %4 = trunc i64 %3 to i32, !dbg !9952
  %5 = and i32 %4, -256, !dbg !9952
  %6 = or i32 %5, %1, !dbg !9952
  ret i32 %6, !dbg !9952
}

define weak i64 @gnu_dev_makedev(i32 %__major, i32 %__minor) nounwind readnone {
entry:
  %0 = and i32 %__minor, 255, !dbg !9954
  %int_cast_to_i64 = zext i32 8 to i64
  %1 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %1, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %2 = shl i32 %__major, 8
  %3 = and i32 %2, 1048320, !dbg !9954
  %4 = or i32 %0, %3, !dbg !9954
  %5 = zext i32 %4 to i64, !dbg !9954
  %6 = zext i32 %__minor to i64, !dbg !9954
  %int_cast_to_i641 = bitcast i64 12 to i64
  %7 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %7, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %8 = shl nuw nsw i64 %6, 12
  %9 = and i64 %8, 17592184995840, !dbg !9954
  %10 = zext i32 %__major to i64, !dbg !9954
  %int_cast_to_i642 = bitcast i64 32 to i64
  %11 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %11, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %12 = shl nuw i64 %10, 32
  %13 = and i64 %12, -17592186044416, !dbg !9954
  %14 = or i64 %5, %13, !dbg !9954
  %15 = or i64 %14, %9, !dbg !9954
  ret i64 %15, !dbg !9954
}

define i32 @getsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32* nocapture %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !9956
}

define i32 @setsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32 %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !9958
}

define i64 @__fd_attach_dgram(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 1, !dbg !9960
  %1 = load i32* %0, align 4, !dbg !9960
  %2 = and i32 %1, 32, !dbg !9960
  %3 = icmp eq i32 %2, 0, !dbg !9960
  br i1 %3, label %bb, label %bb9, !dbg !9960

bb:                                               ; preds = %entry
  %4 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 5, !dbg !9962
  %5 = load %struct.exe_sockaddr_t** %4, align 8, !dbg !9962
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %5, i64 0, i32 0, !dbg !9962
  %7 = load %struct.sockaddr_storage** %6, align 8, !dbg !9962
  %8 = icmp eq %struct.sockaddr_storage* %7, null, !dbg !9962
  br i1 %8, label %bb1, label %bb2, !dbg !9962

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str395, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) nor
  unreachable, !dbg !9962

bb2:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.sockaddr_storage* %7, i64 0, i32 0, !dbg !9962
  %10 = load i16* %9, align 2, !dbg !9962
  switch i16 %10, label %bb6 [
    i16 2, label %bb3
    i16 10, label %bb5
  ]

bb3:                                              ; preds = %bb2
  %11 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in*, !dbg !9962
  %12 = getelementptr inbounds %struct.sockaddr_in* %11, i64 0, i32 1, !dbg !9962
  %13 = load i16* %12, align 2, !dbg !9962
  %14 = icmp eq i16 %13, 0, !dbg !9962
  %15 = zext i1 %14 to i8, !dbg !9962
  br label %bb7, !dbg !9962

bb5:                                              ; preds = %bb2
  %16 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in6*, !dbg !9962
  %17 = getelementptr inbounds %struct.sockaddr_in6* %16, i64 0, i32 1, !dbg !9962
  %18 = load i16* %17, align 2, !dbg !9962
  %19 = icmp eq i16 %18, 0, !dbg !9962
  %20 = zext i1 %19 to i8, !dbg !9962
  br label %bb7, !dbg !9962

bb6:                                              ; preds = %bb2
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) no
  unreachable, !dbg !9962

bb7:                                              ; preds = %bb5, %bb3
  %iftmp.121.0 = phi i8 [ %15, %bb3 ], [ %20, %bb5 ]
  %toBool = icmp eq i8 %iftmp.121.0, 0, !dbg !9962
  br i1 %toBool, label %bb12, label %bb8, !dbg !9962

bb8:                                              ; preds = %bb7
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !9963
  store i32 107, i32* %21, align 4, !dbg !9963
  br label %bb12, !dbg !9964

bb9:                                              ; preds = %entry
  %22 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !9965
  store i64 0, i64* %22, align 8, !dbg !9965
  %23 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !9966
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !9966
  %25 = icmp ult i32 %23, %24, !dbg !9966
  br i1 %25, label %__get_sym_dgram.exit, label %__get_sym_dgram.exit.thread, !dbg !9966

__get_sym_dgram.exit.thread:                      ; preds = %bb9
  %26 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !9968
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** %26, align 8, !dbg !9968
  br label %bb10

__get_sym_dgram.exit:                             ; preds = %bb9
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 8, !dbg !9969
  %28 = zext i32 %23 to i64, !dbg !9969
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !9969
  %30 = add i32 %23, 1, !dbg !9969
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !9969
  %31 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !9968
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** %31, align 8, !dbg !9968
  %32 = icmp eq %struct.exe_disk_file_t* %29, null, !dbg !9970
  br i1 %32, label %bb10, label %bb12, !dbg !9970

bb10:                                             ; preds = %__get_sym_dgram.exit, %__get_sym_dgram.exit.thread
  %33 = phi %struct.exe_disk_file_t** [ %26, %__get_sym_dgram.exit.thread ], [ %31, %__get_sym_dgram.exit ]
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %33, align 8, !dbg !9971
  %34 = tail call i32* @__errno_location() nounwind readnone, !dbg !9972
  store i32 111, i32* %34, align 4, !dbg !9972
  br label %bb12, !dbg !9973

bb12:                                             ; preds = %bb10, %__get_sym_dgram.exit, %bb8, %bb7
  %.0 = phi i64 [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb7 ], [ 0, %__get_sym_dgram.exit ]
  ret i64 %.0, !dbg !9964
}

define weak %struct._cap_struct* @cap_get_file(i8* %path_p) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([31 x i8]* @.str3398, i64 0, i64 0)) nounwind, !dbg !9974
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9976
  store i32 2, i32* %0, align 4, !dbg !9976
  ret %struct._cap_struct* null, !dbg !9977
}

define i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !9978
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9979
  br i1 %1, label %bb, label %bb1, !dbg !9979

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9980
  store i32 9, i32* %2, align 4, !dbg !9980
  br label %bb14, !dbg !9981

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9982
  %4 = load i32* %3, align 4, !dbg !9982
  %5 = and i32 %4, 16, !dbg !9982
  %6 = icmp eq i32 %5, 0, !dbg !9982
  br i1 %6, label %bb2, label %bb3, !dbg !9982

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9983
  store i32 88, i32* %7, align 4, !dbg !9983
  br label %bb14, !dbg !9984

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !9985
  br i1 %8, label %bb4, label %bb5, !dbg !9985

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9986
  store i32 14, i32* %9, align 4, !dbg !9986
  br label %bb14, !dbg !9987

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9988
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9988
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !9988
  br i1 %12, label %bb6, label %bb7, !dbg !9988

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5400, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 818, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7439, i64 0, i64 0)) no
  unreachable, !dbg !9989

bb7:                                              ; preds = %bb5
  %13 = tail call i64 @__fd_attach_dgram(%struct.exe_file_t* %0) nounwind, !dbg !9990
  %14 = icmp slt i64 %13, 0, !dbg !9990
  br i1 %14, label %bb14, label %bb9, !dbg !9990

bb9:                                              ; preds = %bb7
  %15 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9991
  %16 = load i8** %15, align 8, !dbg !9991
  %17 = icmp eq i8* %16, null, !dbg !9991
  %.pre = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !9992
  br i1 %17, label %bb11, label %bb10, !dbg !9991

bb10:                                             ; preds = %bb9
  %18 = load i32* %.pre, align 8, !dbg !9993
  %19 = zext i32 %18 to i64, !dbg !9993
  tail call void @klee_check_memory_access(i8* %16, i64 %19) nounwind, !dbg !9993
  %20 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9994
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %20, i64 0, i32 4, !dbg !9994
  %22 = load %struct.exe_sockaddr_t** %21, align 8, !dbg !9994
  %23 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 1, !dbg !9994
  %24 = load i32* %23, align 8, !dbg !9994
  %25 = zext i32 %24 to i64, !dbg !9994
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 0, !dbg !9994
  %27 = load %struct.sockaddr_storage** %26, align 8, !dbg !9994
  %28 = load i8** %15, align 8, !dbg !9994
  %29 = bitcast %struct.sockaddr_storage* %27 to i8*, !dbg !9994
  %30 = call i8* @memcpy(i8* %28, i8* %29, i64 %25)
  br label %bb11, !dbg !9994

bb11:                                             ; preds = %bb10, %bb9
  %31 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9992
  %32 = getelementptr inbounds %struct.exe_disk_file_t* %31, i64 0, i32 4, !dbg !9992
  %33 = load %struct.exe_sockaddr_t** %32, align 8, !dbg !9992
  %34 = getelementptr inbounds %struct.exe_sockaddr_t* %33, i64 0, i32 1, !dbg !9992
  %35 = load i32* %34, align 8, !dbg !9992
  store i32 %35, i32* %.pre, align 8, !dbg !9992
  %36 = icmp eq i32 %flags, 0, !dbg !9995
  br i1 %36, label %bb13, label %bb12, !dbg !9995

bb12:                                             ; preds = %bb11
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6401, i64 0, i64 0)) nounwind, !dbg !9996
  br label %bb13, !dbg !9996

bb13:                                             ; preds = %bb12, %bb11
  %37 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !9997
  %38 = load i64* %37, align 8, !dbg !9997
  %39 = trunc i64 %38 to i32, !dbg !9997
  %40 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !9997
  %41 = load %struct.iovec** %40, align 8, !dbg !9997
  %42 = tail call i64 @__fd_scatter_read(%struct.exe_file_t* %0, %struct.iovec* %41, i32 %39) nounwind, !dbg !9997
  br label %bb14, !dbg !9997

bb14:                                             ; preds = %bb13, %bb7, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %42, %bb13 ], [ -1, %bb7 ]
  ret i64 %.0, !dbg !9981
}

define i64 @recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !9998
  ret i64 %0, !dbg !9998
}

define i64 @__fd_recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov = alloca %struct.iovec, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !10000
  %1 = icmp eq i32* %fromlen, null, !dbg !10000
  %2 = and i1 %0, %1, !dbg !10000
  br i1 %2, label %bb, label %bb3, !dbg !10000

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !10001
  store i32 14, i32* %3, align 4, !dbg !10001
  br label %bb9, !dbg !10002

bb3:                                              ; preds = %entry
  %4 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 0, !dbg !10003
  store i8* %buf, i8** %4, align 8, !dbg !10003
  %5 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 1, !dbg !10004
  store i64 %len, i64* %5, align 8, !dbg !10004
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10005
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !10005
  store i8* %7, i8** %6, align 8, !dbg !10005
  br i1 %1, label %bb6, label %bb4, !dbg !10006

bb4:                                              ; preds = %bb3
  %8 = load i32* %fromlen, align 4, !dbg !10006
  br label %bb6, !dbg !10006

bb6:                                              ; preds = %bb4, %bb3
  %iftmp.113.0 = phi i32 [ %8, %bb4 ], [ 0, %bb3 ]
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10006
  store i32 %iftmp.113.0, i32* %9, align 8, !dbg !10006
  %10 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10007
  store %struct.iovec* %iov, %struct.iovec** %10, align 8, !dbg !10007
  %11 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10008
  store i64 1, i64* %11, align 8, !dbg !10008
  %12 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !10009
  store i8* null, i8** %12, align 8, !dbg !10009
  %13 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !10010
  store i64 0, i64* %13, align 8, !dbg !10010
  %14 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !10011
  store i32 %flags, i32* %14, align 8, !dbg !10011
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10012
  br i1 %1, label %bb9, label %bb7, !dbg !10013

bb7:                                              ; preds = %bb6
  %16 = load i32* %9, align 8, !dbg !10013
  store i32 %16, i32* %fromlen, align 4, !dbg !10013
  br label %bb9, !dbg !10013

bb9:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i64 [ -1, %bb ], [ %15, %bb6 ], [ %15, %bb7 ]
  ret i64 %.0, !dbg !10002
}

define i64 @recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !10014
  %1 = icmp eq i32* %fromlen, null, !dbg !10014
  %2 = and i1 %0, %1, !dbg !10014
  br i1 %2, label %bb.i, label %bb3.i, !dbg !10014

bb.i:                                             ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !10017
  store i32 14, i32* %3, align 4, !dbg !10017
  br label %__fd_recvfrom.exit, !dbg !10018

bb3.i:                                            ; preds = %entry
  %4 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10019
  store i8* %buf, i8** %4, align 8, !dbg !10019
  %5 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10020
  store i64 %len, i64* %5, align 8, !dbg !10020
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10021
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !10021
  store i8* %7, i8** %6, align 8, !dbg !10021
  br i1 %1, label %bb6.i, label %bb4.i, !dbg !10022

bb4.i:                                            ; preds = %bb3.i
  %8 = load i32* %fromlen, align 4, !dbg !10022
  br label %bb6.i, !dbg !10022

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %8, %bb4.i ], [ 0, %bb3.i ]
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10022
  store i32 %iftmp.113.0.i, i32* %9, align 8, !dbg !10022
  %10 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10023
  store %struct.iovec* %iov.i, %struct.iovec** %10, align 8, !dbg !10023
  %11 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10024
  store i64 1, i64* %11, align 8, !dbg !10024
  %12 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10025
  store i8* null, i8** %12, align 8, !dbg !10025
  %13 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10026
  store i64 0, i64* %13, align 8, !dbg !10026
  %14 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10027
  store i32 %flags, i32* %14, align 8, !dbg !10027
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10028
  br i1 %1, label %__fd_recvfrom.exit, label %bb7.i, !dbg !10029

bb7.i:                                            ; preds = %bb6.i
  %16 = load i32* %9, align 8, !dbg !10029
  store i32 %16, i32* %fromlen, align 4, !dbg !10029
  br label %__fd_recvfrom.exit, !dbg !10029

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %15, %bb6.i ], [ %15, %bb7.i ]
  ret i64 %.0.i, !dbg !10015
}

define i64 @__fd_recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
__fd_recvfrom.exit:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10030
  store i8* %buf, i8** %0, align 8, !dbg !10030
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10033
  store i64 %len, i64* %1, align 8, !dbg !10033
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10034
  store i8* null, i8** %2, align 8, !dbg !10034
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10035
  store i32 0, i32* %3, align 8, !dbg !10035
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10036
  store %struct.iovec* %iov.i, %struct.iovec** %4, align 8, !dbg !10036
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10037
  store i64 1, i64* %5, align 8, !dbg !10037
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10038
  store i8* null, i8** %6, align 8, !dbg !10038
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10039
  store i64 0, i64* %7, align 8, !dbg !10039
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10040
  store i32 %flags, i32* %8, align 8, !dbg !10040
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10041
  ret i64 %9, !dbg !10031
}

define i64 @recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10042
  store i8* %buf, i8** %0, align 8, !dbg !10042
  %1 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10046
  store i64 %len, i64* %1, align 8, !dbg !10046
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10047
  store i8* null, i8** %2, align 8, !dbg !10047
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10048
  store i32 0, i32* %3, align 8, !dbg !10048
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10049
  store %struct.iovec* %iov.i.i, %struct.iovec** %4, align 8, !dbg !10049
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10050
  store i64 1, i64* %5, align 8, !dbg !10050
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10051
  store i8* null, i8** %6, align 8, !dbg !10051
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10052
  store i64 0, i64* %7, align 8, !dbg !10052
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10053
  store i32 %flags, i32* %8, align 8, !dbg !10053
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !10054
  ret i64 %9, !dbg !10044
}

define i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !10055
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10056
  br i1 %1, label %bb, label %bb1, !dbg !10056

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10057
  store i32 9, i32* %2, align 4, !dbg !10057
  br label %bb46, !dbg !10058

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10059
  %4 = load i32* %3, align 4, !dbg !10059
  %5 = and i32 %4, 16, !dbg !10059
  %6 = icmp eq i32 %5, 0, !dbg !10059
  br i1 %6, label %bb2, label %bb3, !dbg !10059

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10060
  store i32 88, i32* %7, align 4, !dbg !10060
  br label %bb46, !dbg !10061

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !10062
  br i1 %8, label %bb4, label %bb5, !dbg !10062

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !10063
  store i32 14, i32* %9, align 4, !dbg !10063
  br label %bb46, !dbg !10064

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10065
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !10065
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !10065
  br i1 %12, label %bb6, label %bb7, !dbg !10065

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5400, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 759, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10066

bb7:                                              ; preds = %bb5
  %13 = and i32 %4, 32, !dbg !10067
  %14 = icmp eq i32 %13, 0, !dbg !10067
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10068
  %16 = load %struct.exe_sockaddr_t** %15, align 8, !dbg !10068
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %16, i64 0, i32 0, !dbg !10068
  %18 = load %struct.sockaddr_storage** %17, align 8, !dbg !10068
  %19 = icmp eq %struct.sockaddr_storage* %18, null, !dbg !10068
  br i1 %14, label %bb8, label %bb19, !dbg !10067

bb8:                                              ; preds = %bb7
  br i1 %19, label %bb9, label %bb12, !dbg !10068

bb9:                                              ; preds = %bb8
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7402, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 763, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10068

bb12:                                             ; preds = %bb8
  %20 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !10069
  %21 = load i16* %20, align 2, !dbg !10069
  switch i16 %21, label %bb16 [
    i16 2, label %bb13
    i16 10, label %bb15
  ]

bb13:                                             ; preds = %bb12
  %22 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !10069
  %23 = getelementptr inbounds %struct.sockaddr_in* %22, i64 0, i32 1, !dbg !10069
  %24 = load i16* %23, align 2, !dbg !10069
  %25 = icmp eq i16 %24, 0, !dbg !10069
  %26 = zext i1 %25 to i8, !dbg !10069
  br label %bb17, !dbg !10069

bb15:                                             ; preds = %bb12
  %27 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !10069
  %28 = getelementptr inbounds %struct.sockaddr_in6* %27, i64 0, i32 1, !dbg !10069
  %29 = load i16* %28, align 2, !dbg !10069
  %30 = icmp eq i16 %29, 0, !dbg !10069
  %31 = zext i1 %30 to i8, !dbg !10069
  br label %bb17, !dbg !10069

bb16:                                             ; preds = %bb12
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 764, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10069

bb17:                                             ; preds = %bb15, %bb13
  %iftmp.115.0 = phi i8 [ %26, %bb13 ], [ %31, %bb15 ]
  %toBool = icmp eq i8 %iftmp.115.0, 0, !dbg !10069
  br i1 %toBool, label %bb41, label %bb18, !dbg !10069

bb18:                                             ; preds = %bb17
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !10070
  store i32 107, i32* %32, align 4, !dbg !10070
  br label %bb46, !dbg !10071

bb19:                                             ; preds = %bb7
  br i1 %19, label %bb20, label %bb21, !dbg !10072

bb20:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str395, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) nor
  unreachable, !dbg !10072

bb21:                                             ; preds = %bb19
  %33 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !10072
  %34 = load i16* %33, align 2, !dbg !10072
  switch i16 %34, label %bb25 [
    i16 2, label %bb22
    i16 10, label %bb24
  ]

bb22:                                             ; preds = %bb21
  %35 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !10072
  %36 = getelementptr inbounds %struct.sockaddr_in* %35, i64 0, i32 1, !dbg !10072
  %37 = load i16* %36, align 2, !dbg !10072
  %38 = icmp eq i16 %37, 0, !dbg !10072
  %39 = zext i1 %38 to i8, !dbg !10072
  br label %bb26, !dbg !10072

bb24:                                             ; preds = %bb21
  %40 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !10072
  %41 = getelementptr inbounds %struct.sockaddr_in6* %40, i64 0, i32 1, !dbg !10072
  %42 = load i16* %41, align 2, !dbg !10072
  %43 = icmp eq i16 %42, 0, !dbg !10072
  %44 = zext i1 %43 to i8, !dbg !10072
  br label %bb26, !dbg !10072

bb25:                                             ; preds = %bb21
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10072

bb26:                                             ; preds = %bb24, %bb22
  %45 = phi i16 [ %37, %bb22 ], [ %42, %bb24 ]
  %iftmp.117.0 = phi i8 [ %39, %bb22 ], [ %44, %bb24 ]
  %toBool27 = icmp eq i8 %iftmp.117.0, 0, !dbg !10072
  br i1 %toBool27, label %bb32, label %bb28, !dbg !10072

bb28:                                             ; preds = %bb26
  %46 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10072
  %47 = load i8** %46, align 8, !dbg !10072
  %48 = icmp eq i8* %47, null, !dbg !10072
  br i1 %48, label %bb29, label %bb32, !dbg !10072

bb29:                                             ; preds = %bb28
  %49 = tail call i32* @__errno_location() nounwind readnone, !dbg !10073
  store i32 107, i32* %49, align 4, !dbg !10073
  br label %bb46, !dbg !10074

bb32:                                             ; preds = %bb28, %bb26
  switch i16 %34, label %bb36 [
    i16 2, label %bb33
    i16 10, label %bb35
  ]

bb33:                                             ; preds = %bb32
  %50 = icmp ne i16 %45, 0, !dbg !10075
  %51 = zext i1 %50 to i8, !dbg !10075
  br label %bb37, !dbg !10075

bb35:                                             ; preds = %bb32
  %52 = icmp ne i16 %45, 0, !dbg !10075
  %53 = zext i1 %52 to i8, !dbg !10075
  br label %bb37, !dbg !10075

bb36:                                             ; preds = %bb32
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 775, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !10075

bb37:                                             ; preds = %bb35, %bb33
  %iftmp.119.0 = phi i8 [ %51, %bb33 ], [ %53, %bb35 ]
  %toBool38 = icmp eq i8 %iftmp.119.0, 0, !dbg !10075
  br i1 %toBool38, label %bb41, label %bb39, !dbg !10075

bb39:                                             ; preds = %bb37
  %54 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10075
  %55 = load i8** %54, align 8, !dbg !10075
  %56 = icmp eq i8* %55, null, !dbg !10075
  br i1 %56, label %bb41, label %bb40, !dbg !10075

bb40:                                             ; preds = %bb39
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !10076
  store i32 106, i32* %57, align 4, !dbg !10076
  br label %bb46, !dbg !10077

bb41:                                             ; preds = %bb39, %bb37, %bb17
  %58 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10078
  %59 = load i8** %58, align 8, !dbg !10078
  %60 = icmp eq i8* %59, null, !dbg !10078
  br i1 %60, label %bb43, label %bb42, !dbg !10078

bb42:                                             ; preds = %bb41
  %61 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10079
  %62 = load i32* %61, align 8, !dbg !10079
  %63 = zext i32 %62 to i64, !dbg !10079
  tail call void @klee_check_memory_access(i8* %59, i64 %63) nounwind, !dbg !10079
  br label %bb43, !dbg !10079

bb43:                                             ; preds = %bb42, %bb41
  %64 = icmp eq i32 %flags, 0, !dbg !10080
  br i1 %64, label %bb45, label %bb44, !dbg !10080

bb44:                                             ; preds = %bb43
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6401, i64 0, i64 0)) nounwind, !dbg !10081
  br label %bb45, !dbg !10081

bb45:                                             ; preds = %bb44, %bb43
  %65 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10082
  %66 = load i64* %65, align 8, !dbg !10082
  %67 = trunc i64 %66 to i32, !dbg !10082
  %68 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10082
  %69 = load %struct.iovec** %68, align 8, !dbg !10082
  %70 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %0, %struct.iovec* %69, i32 %67) nounwind, !dbg !10082
  br label %bb46, !dbg !10082

bb46:                                             ; preds = %bb45, %bb40, %bb29, %bb18, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb18 ], [ %70, %bb45 ], [ -1, %bb29 ], [ -1, %bb40 ]
  ret i64 %.0, !dbg !10058
}

define i64 @sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10083
  ret i64 %0, !dbg !10083
}

define i64 @__fd_sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov = alloca %struct.iovec, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 0, !dbg !10085
  store i8* %buf, i8** %0, align 8, !dbg !10085
  %1 = getelementptr inbounds %struct.iovec* %iov, i64 0, i32 1, !dbg !10086
  store i64 %len, i64* %1, align 8, !dbg !10086
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !10087
  %3 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !10087
  store i8* %2, i8** %3, align 8, !dbg !10087
  %4 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !10088
  store i32 %tolen, i32* %4, align 8, !dbg !10088
  %5 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !10089
  store %struct.iovec* %iov, %struct.iovec** %5, align 8, !dbg !10089
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !10090
  store i64 1, i64* %6, align 8, !dbg !10090
  %7 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !10091
  store i8* null, i8** %7, align 8, !dbg !10091
  %8 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !10092
  store i64 0, i64* %8, align 8, !dbg !10092
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !10093
  store i32 %flags, i32* %9, align 8, !dbg !10093
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !10094
  ret i64 %10, !dbg !10094
}

define i64 @sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10095
  store i8* %buf, i8** %0, align 8, !dbg !10095
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10098
  store i64 %len, i64* %1, align 8, !dbg !10098
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !10099
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10099
  store i8* %2, i8** %3, align 8, !dbg !10099
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10100
  store i32 %tolen, i32* %4, align 8, !dbg !10100
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10101
  store %struct.iovec* %iov.i, %struct.iovec** %5, align 8, !dbg !10101
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10102
  store i64 1, i64* %6, align 8, !dbg !10102
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10103
  store i8* null, i8** %7, align 8, !dbg !10103
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10104
  store i64 0, i64* %8, align 8, !dbg !10104
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10105
  store i32 %flags, i32* %9, align 8, !dbg !10105
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10106
  ret i64 %10, !dbg !10096
}

define i64 @__fd_send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10107
  store i8* %buf, i8** %0, align 8, !dbg !10107
  %1 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10110
  store i64 %len, i64* %1, align 8, !dbg !10110
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10111
  store i8* null, i8** %2, align 8, !dbg !10111
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10112
  store i32 0, i32* %3, align 8, !dbg !10112
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10113
  store %struct.iovec* %iov.i, %struct.iovec** %4, align 8, !dbg !10113
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10114
  store i64 1, i64* %5, align 8, !dbg !10114
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10115
  store i8* null, i8** %6, align 8, !dbg !10115
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10116
  store i64 0, i64* %7, align 8, !dbg !10116
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10117
  store i32 %flags, i32* %8, align 8, !dbg !10117
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !10118
  ret i64 %9, !dbg !10108
}

define i64 @send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10119
  store i8* %buf, i8** %0, align 8, !dbg !10119
  %1 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10123
  store i64 %len, i64* %1, align 8, !dbg !10123
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10124
  store i8* null, i8** %2, align 8, !dbg !10124
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10125
  store i32 0, i32* %3, align 8, !dbg !10125
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10126
  store %struct.iovec* %iov.i.i, %struct.iovec** %4, align 8, !dbg !10126
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10127
  store i64 1, i64* %5, align 8, !dbg !10127
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10128
  store i8* null, i8** %6, align 8, !dbg !10128
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10129
  store i64 0, i64* %7, align 8, !dbg !10129
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10130
  store i32 %flags, i32* %8, align 8, !dbg !10130
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !10131
  ret i64 %9, !dbg !10121
}

define i32 @shutdown(i32 %sockfd, i32 %how) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10132
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10133
  br i1 %1, label %bb, label %bb1, !dbg !10133

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10134
  store i32 9, i32* %2, align 4, !dbg !10134
  br label %bb12, !dbg !10135

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10136
  %4 = load i32* %3, align 4, !dbg !10136
  %5 = and i32 %4, 16, !dbg !10136
  %6 = icmp eq i32 %5, 0, !dbg !10136
  br i1 %6, label %bb2, label %bb3, !dbg !10136

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10137
  store i32 88, i32* %7, align 4, !dbg !10137
  br label %bb12, !dbg !10138

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10139
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10139
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10139
  br i1 %10, label %bb9, label %bb4, !dbg !10139

bb4:                                              ; preds = %bb3
  switch i32 %how, label %bb8 [
    i32 0, label %bb5
    i32 1, label %bb6
    i32 2, label %bb7
  ], !dbg !10140

bb5:                                              ; preds = %bb4
  %11 = and i32 %4, -5, !dbg !10141
  store i32 %11, i32* %3, align 4, !dbg !10141
  br label %bb12, !dbg !10141

bb6:                                              ; preds = %bb4
  %12 = and i32 %4, -9, !dbg !10142
  store i32 %12, i32* %3, align 4, !dbg !10142
  br label %bb12, !dbg !10142

bb7:                                              ; preds = %bb4
  %13 = and i32 %4, -13, !dbg !10143
  store i32 %13, i32* %3, align 4, !dbg !10143
  br label %bb12, !dbg !10143

bb8:                                              ; preds = %bb4
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !10144
  store i32 22, i32* %14, align 4, !dbg !10144
  br label %bb12, !dbg !10145

bb9:                                              ; preds = %bb3
  %15 = tail call i64 (i64, ...)* @syscall(i64 48, i32 %sockfd, i32 %how) nounwind, !dbg !10146
  %16 = trunc i64 %15 to i32, !dbg !10146
  %17 = icmp eq i32 %16, -1, !dbg !10147
  br i1 %17, label %bb10, label %bb12, !dbg !10147

bb10:                                             ; preds = %bb9
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !10148
  %19 = tail call i32 @klee_get_errno() nounwind, !dbg !10148
  store i32 %19, i32* %18, align 4, !dbg !10148
  br label %bb12, !dbg !10149

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb7 ], [ 0, %bb6 ], [ 0, %bb5 ]
  ret i32 %.0, !dbg !10135
}

define i32 @__fd_shutdown(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10150
  %1 = trunc i64 %0 to i32, !dbg !10150
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10151
  %3 = load i64* %2, align 8, !dbg !10151
  %4 = trunc i64 %3 to i32, !dbg !10151
  %5 = tail call i32 @shutdown(i32 %1, i32 %4) nounwind, !dbg !10152
  ret i32 %5, !dbg !10152
}

define i32 @getpeername(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10153
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10154
  br i1 %1, label %bb, label %bb1, !dbg !10154

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10155
  store i32 9, i32* %2, align 4, !dbg !10155
  br label %bb12, !dbg !10156

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10157
  %4 = load i32* %3, align 4, !dbg !10157
  %5 = and i32 %4, 16, !dbg !10157
  %6 = icmp eq i32 %5, 0, !dbg !10157
  br i1 %6, label %bb2, label %bb3, !dbg !10157

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10158
  store i32 88, i32* %7, align 4, !dbg !10158
  br label %bb12, !dbg !10159

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10160
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10160
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10160
  br i1 %10, label %bb9, label %bb4, !dbg !10160

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10161
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10161
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !10161
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !10161
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !10161
  br i1 %15, label %bb5, label %bb6, !dbg !10161

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7402, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 587, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7179, i64 0, i64 0)) no
  unreachable, !dbg !10161

bb6:                                              ; preds = %bb4
  %16 = load i32* %addrlen, align 4, !dbg !10162
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !10162
  %18 = load i32* %17, align 8, !dbg !10162
  %19 = icmp ult i32 %16, %18, !dbg !10162
  br i1 %19, label %bb7, label %bb8, !dbg !10162

bb7:                                              ; preds = %bb6
  %20 = tail call i32* @__errno_location() nounwind readnone, !dbg !10163
  store i32 22, i32* %20, align 4, !dbg !10163
  br label %bb12, !dbg !10164

bb8:                                              ; preds = %bb6
  %21 = zext i32 %18 to i64, !dbg !10165
  %22 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10165
  %23 = bitcast %struct.sockaddr_storage* %14 to i8*, !dbg !10165
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 %21)
  %25 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10166
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %25, i64 0, i32 1, !dbg !10166
  %27 = load i32* %26, align 8, !dbg !10166
  store i32 %27, i32* %addrlen, align 4, !dbg !10166
  br label %bb12, !dbg !10166

bb9:                                              ; preds = %bb3
  %28 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10167
  %29 = load i32* %28, align 8, !dbg !10167
  %30 = tail call i64 (i64, ...)* @syscall(i64 52, i32 %29, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10167
  %31 = trunc i64 %30 to i32, !dbg !10167
  %32 = icmp slt i32 %31, 0, !dbg !10168
  br i1 %32, label %bb10, label %bb12, !dbg !10168

bb10:                                             ; preds = %bb9
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !10169
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !10169
  store i32 %34, i32* %33, align 4, !dbg !10169
  br label %bb12, !dbg !10170

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !10156
}

define i32 @__fd_getpeername(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10171
  %1 = trunc i64 %0 to i32, !dbg !10171
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10172
  %3 = load i64* %2, align 8, !dbg !10172
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10172
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10173
  %6 = load i64* %5, align 8, !dbg !10173
  %7 = inttoptr i64 %6 to i32*, !dbg !10173
  %8 = tail call i32 @getpeername(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !10174
  ret i32 %8, !dbg !10174
}

define i32 @getsockname(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10175
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10176
  br i1 %1, label %bb, label %bb1, !dbg !10176

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10177
  store i32 9, i32* %2, align 4, !dbg !10177
  br label %bb12, !dbg !10178

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10179
  %4 = load i32* %3, align 4, !dbg !10179
  %5 = and i32 %4, 16, !dbg !10179
  %6 = icmp eq i32 %5, 0, !dbg !10179
  br i1 %6, label %bb2, label %bb3, !dbg !10179

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10180
  store i32 88, i32* %7, align 4, !dbg !10180
  br label %bb12, !dbg !10181

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10182
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10182
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10182
  br i1 %10, label %bb9, label %bb4, !dbg !10182

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10183
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !10183
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !10183
  br i1 %13, label %bb5, label %bb6, !dbg !10183

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8403, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 543, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7141, i64 0, i64 0)) no
  unreachable, !dbg !10183

bb6:                                              ; preds = %bb4
  %14 = load i32* %addrlen, align 4, !dbg !10184
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !10184
  %16 = load i32* %15, align 8, !dbg !10184
  %17 = icmp ult i32 %14, %16, !dbg !10184
  br i1 %17, label %bb7, label %bb8, !dbg !10184

bb7:                                              ; preds = %bb6
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !10185
  store i32 22, i32* %18, align 4, !dbg !10185
  br label %bb12, !dbg !10186

bb8:                                              ; preds = %bb6
  %19 = zext i32 %16 to i64, !dbg !10187
  %20 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10187
  %21 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !10187
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 %19)
  %23 = load i32* %15, align 8, !dbg !10188
  store i32 %23, i32* %addrlen, align 4, !dbg !10188
  br label %bb12, !dbg !10188

bb9:                                              ; preds = %bb3
  %24 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10189
  %25 = load i32* %24, align 8, !dbg !10189
  %26 = tail call i64 (i64, ...)* @syscall(i64 51, i32 %25, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10189
  %27 = trunc i64 %26 to i32, !dbg !10189
  %28 = icmp slt i32 %27, 0, !dbg !10190
  br i1 %28, label %bb10, label %bb12, !dbg !10190

bb10:                                             ; preds = %bb9
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !10191
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !10191
  store i32 %30, i32* %29, align 4, !dbg !10191
  br label %bb12, !dbg !10192

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !10178
}

define i32 @__fd_getsockname(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10193
  %1 = trunc i64 %0 to i32, !dbg !10193
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10194
  %3 = load i64* %2, align 8, !dbg !10194
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10194
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10195
  %6 = load i64* %5, align 8, !dbg !10195
  %7 = inttoptr i64 %6 to i32*, !dbg !10195
  %8 = tail call i32 @getsockname(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !10196
  ret i32 %8, !dbg !10196
}

define i32 @listen(i32 %sockfd, i32 %backlog) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10197
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10198
  br i1 %1, label %bb, label %bb1, !dbg !10198

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10199
  store i32 9, i32* %2, align 4, !dbg !10199
  br label %bb10, !dbg !10200

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10201
  %4 = load i32* %3, align 4, !dbg !10201
  %5 = and i32 %4, 16, !dbg !10201
  %6 = icmp eq i32 %5, 0, !dbg !10201
  br i1 %6, label %bb2, label %bb3, !dbg !10201

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10202
  store i32 88, i32* %7, align 4, !dbg !10202
  br label %bb10, !dbg !10203

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10204
  %9 = icmp eq i32 %8, 0, !dbg !10204
  br i1 %9, label %bb5, label %bb4, !dbg !10204

bb4:                                              ; preds = %bb3
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !10205
  store i32 95, i32* %10, align 4, !dbg !10205
  br label %bb10, !dbg !10206

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10207
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !10207
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !10207
  br i1 %13, label %bb7, label %bb9, !dbg !10207

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10208
  %15 = load i32* %14, align 8, !dbg !10208
  %16 = tail call i64 (i64, ...)* @syscall(i64 50, i32 %15, i32 %backlog) nounwind, !dbg !10208
  %17 = trunc i64 %16 to i32, !dbg !10208
  %18 = icmp slt i32 %17, 0, !dbg !10209
  br i1 %18, label %bb8, label %bb9, !dbg !10209

bb8:                                              ; preds = %bb7
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !10210
  %20 = tail call i32 @klee_get_errno() nounwind, !dbg !10210
  store i32 %20, i32* %19, align 4, !dbg !10210
  br label %bb9, !dbg !10210

bb9:                                              ; preds = %bb8, %bb7, %bb5
  %os_r.0 = phi i32 [ %17, %bb8 ], [ 0, %bb5 ], [ %17, %bb7 ]
  %21 = load i32* %3, align 4, !dbg !10211
  %22 = or i32 %21, 64, !dbg !10211
  store i32 %22, i32* %3, align 4, !dbg !10211
  br label %bb10, !dbg !10212

bb10:                                             ; preds = %bb9, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %os_r.0, %bb9 ]
  ret i32 %.0, !dbg !10200
}

define i32 @__fd_listen(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10213
  %1 = trunc i64 %0 to i32, !dbg !10213
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10214
  %3 = load i64* %2, align 8, !dbg !10214
  %4 = trunc i64 %3 to i32, !dbg !10214
  %5 = tail call i32 @listen(i32 %1, i32 %4) nounwind, !dbg !10215
  ret i32 %5, !dbg !10215
}

define i32 @connect(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10216
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10217
  br i1 %1, label %bb, label %bb1, !dbg !10217

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10218
  store i32 9, i32* %2, align 4, !dbg !10218
  br label %bb40, !dbg !10219

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10220
  %4 = load i32* %3, align 4, !dbg !10220
  %5 = and i32 %4, 16, !dbg !10220
  %6 = icmp eq i32 %5, 0, !dbg !10220
  br i1 %6, label %bb2, label %bb3, !dbg !10220

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10221
  store i32 88, i32* %7, align 4, !dbg !10221
  br label %bb40, !dbg !10222

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10223
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10223
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10223
  br i1 %10, label %bb37, label %bb4, !dbg !10223

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10224
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10224
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !10224
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !10224
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !10224
  br i1 %15, label %bb5, label %bb6, !dbg !10224

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7402, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10224

bb6:                                              ; preds = %bb4
  %16 = and i32 %4, 32, !dbg !10225
  %17 = icmp eq i32 %16, 0, !dbg !10225
  br i1 %17, label %bb9, label %bb20, !dbg !10225

bb9:                                              ; preds = %bb6
  %18 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10226
  %19 = load i16* %18, align 2, !dbg !10226
  switch i16 %19, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %20 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in*, !dbg !10226
  %21 = getelementptr inbounds %struct.sockaddr_in* %20, i64 0, i32 1, !dbg !10226
  %22 = load i16* %21, align 2, !dbg !10226
  %23 = icmp ne i16 %22, 0, !dbg !10226
  %24 = zext i1 %23 to i8, !dbg !10226
  br label %bb14, !dbg !10226

bb12:                                             ; preds = %bb9
  %25 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in6*, !dbg !10226
  %26 = getelementptr inbounds %struct.sockaddr_in6* %25, i64 0, i32 1, !dbg !10226
  %27 = load i16* %26, align 2, !dbg !10226
  %28 = icmp ne i16 %27, 0, !dbg !10226
  %29 = zext i1 %28 to i8, !dbg !10226
  br label %bb14, !dbg !10226

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10226

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.73.0 = phi i8 [ %24, %bb10 ], [ %29, %bb12 ]
  %toBool17 = icmp eq i8 %iftmp.73.0, 1, !dbg !10226
  br i1 %toBool17, label %bb19, label %bb18, !dbg !10226

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([505 x i8]* @.str9404, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) no
  unreachable, !dbg !10226

bb19:                                             ; preds = %bb14
  %30 = tail call i32* @__errno_location() nounwind readnone, !dbg !10227
  store i32 106, i32* %30, align 4, !dbg !10227
  br label %bb40, !dbg !10228

bb20:                                             ; preds = %bb6
  %31 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !10229
  %32 = load i32* %31, align 8, !dbg !10229
  %33 = icmp eq i32 %32, %addrlen, !dbg !10229
  br i1 %33, label %bb21, label %bb22, !dbg !10229

bb21:                                             ; preds = %bb20
  %34 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10229
  %35 = load i16* %34, align 2, !dbg !10229
  %36 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10229
  %37 = load i16* %36, align 8, !dbg !10229
  %38 = icmp eq i16 %35, %37, !dbg !10229
  br i1 %38, label %bb23, label %bb22, !dbg !10229

bb22:                                             ; preds = %bb21, %bb20
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !10230
  store i32 22, i32* %39, align 4, !dbg !10230
  br label %bb40, !dbg !10231

bb23:                                             ; preds = %bb21
  switch i16 %35, label %bb27 [
    i16 2, label %bb24
    i16 10, label %bb26
  ]

bb24:                                             ; preds = %bb23
  %40 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %41 = bitcast [14 x i8]* %40 to i16*, !dbg !10232
  %42 = load i16* %41, align 2, !dbg !10232
  %43 = icmp eq i16 %42, 0, !dbg !10232
  %44 = zext i1 %43 to i8, !dbg !10232
  br label %bb28, !dbg !10232

bb26:                                             ; preds = %bb23
  %45 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %46 = bitcast [14 x i8]* %45 to i16*, !dbg !10232
  %47 = load i16* %46, align 2, !dbg !10232
  %48 = icmp eq i16 %47, 0, !dbg !10232
  %49 = zext i1 %48 to i8, !dbg !10232
  br label %bb28, !dbg !10232

bb27:                                             ; preds = %bb23
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10232

bb28:                                             ; preds = %bb26, %bb24
  %iftmp.75.0 = phi i8 [ %44, %bb24 ], [ %49, %bb26 ]
  %toBool29 = icmp eq i8 %iftmp.75.0, 0, !dbg !10232
  br i1 %toBool29, label %bb31, label %bb30, !dbg !10232

bb30:                                             ; preds = %bb28
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10233
  store i32 99, i32* %50, align 4, !dbg !10233
  br label %bb31, !dbg !10233

bb31:                                             ; preds = %bb30, %bb28
  %51 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10234
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10234
  %53 = getelementptr inbounds %struct.sockaddr_storage* %52, i64 0, i32 0, !dbg !10234
  %54 = load i16* %53, align 2, !dbg !10234
  switch i16 %54, label %bb35 [
    i16 2, label %bb36
    i16 10, label %bb36
  ]

bb35:                                             ; preds = %bb31
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 348, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10234

bb36:                                             ; preds = %bb31, %bb31
  %55 = zext i32 %addrlen to i64, !dbg !10235
  %56 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10235
  %57 = getelementptr inbounds %struct.exe_sockaddr_t* %56, i64 0, i32 0, !dbg !10235
  %58 = load %struct.sockaddr_storage** %57, align 8, !dbg !10235
  %59 = bitcast %struct.sockaddr_storage* %58 to i8*, !dbg !10235
  %60 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10235
  %61 = call i8* @memcpy(i8* %59, i8* %60, i64 %55)
  br label %bb40, !dbg !10236

bb37:                                             ; preds = %bb3
  %62 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10237
  %63 = load i32* %62, align 8, !dbg !10237
  %64 = tail call i64 (i64, ...)* @syscall(i64 42, i32 %63, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10237
  %65 = trunc i64 %64 to i32, !dbg !10237
  %66 = icmp slt i32 %65, 0, !dbg !10238
  br i1 %66, label %bb38, label %bb40, !dbg !10238

bb38:                                             ; preds = %bb37
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !10239
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !10239
  store i32 %68, i32* %67, align 4, !dbg !10239
  br label %bb40, !dbg !10239

bb40:                                             ; preds = %bb38, %bb37, %bb36, %bb22, %bb19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb19 ], [ -1, %bb22 ], [ 0, %bb36 ], [ %65, %bb38 ], [ %65, %bb37 ]
  ret i32 %.0, !dbg !10219
}

define i32 @__fd_connect(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10240
  %1 = trunc i64 %0 to i32, !dbg !10240
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10241
  %3 = load i64* %2, align 8, !dbg !10241
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10241
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10242
  %6 = load i64* %5, align 8, !dbg !10242
  %7 = trunc i64 %6 to i32, !dbg !10242
  %8 = tail call i32 @connect(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10243
  ret i32 %8, !dbg !10243
}

define i32 @bind(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10244
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10245
  br i1 %1, label %bb, label %bb1, !dbg !10245

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10246
  store i32 9, i32* %2, align 4, !dbg !10246
  br label %bb28, !dbg !10247

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10248
  %4 = load i32* %3, align 4, !dbg !10248
  %5 = and i32 %4, 16, !dbg !10248
  %6 = icmp eq i32 %5, 0, !dbg !10248
  br i1 %6, label %bb2, label %bb3, !dbg !10248

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10249
  store i32 88, i32* %7, align 4, !dbg !10249
  br label %bb28, !dbg !10250

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10251
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10251
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10251
  br i1 %10, label %bb24, label %bb4, !dbg !10251

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10252
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !10252
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !10252
  br i1 %13, label %bb5, label %bb6, !dbg !10252

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8403, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10252

bb6:                                              ; preds = %bb4
  %14 = and i32 %4, 32, !dbg !10253
  %15 = icmp eq i32 %14, 0, !dbg !10253
  br i1 %15, label %bb9, label %bb16, !dbg !10253

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10253
  %17 = load i16* %16, align 2, !dbg !10253
  switch i16 %17, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %18 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in*, !dbg !10253
  %19 = getelementptr inbounds %struct.sockaddr_in* %18, i64 0, i32 1, !dbg !10253
  %20 = load i16* %19, align 2, !dbg !10253
  %21 = icmp ne i16 %20, 0, !dbg !10253
  %22 = zext i1 %21 to i8, !dbg !10253
  br label %bb14, !dbg !10253

bb12:                                             ; preds = %bb9
  %23 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in6*, !dbg !10253
  %24 = getelementptr inbounds %struct.sockaddr_in6* %23, i64 0, i32 1, !dbg !10253
  %25 = load i16* %24, align 2, !dbg !10253
  %26 = icmp ne i16 %25, 0, !dbg !10253
  %27 = zext i1 %26 to i8, !dbg !10253
  br label %bb14, !dbg !10253

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 284, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10253

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.69.0 = phi i8 [ %22, %bb10 ], [ %27, %bb12 ]
  %toBool = icmp eq i8 %iftmp.69.0, 0, !dbg !10253
  br i1 %toBool, label %bb16, label %bb15, !dbg !10253

bb15:                                             ; preds = %bb14
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !10254
  store i32 22, i32* %28, align 4, !dbg !10254
  br label %bb28, !dbg !10255

bb16:                                             ; preds = %bb14, %bb6
  %29 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !10256
  %30 = load i32* %29, align 8, !dbg !10256
  %31 = icmp eq i32 %30, %addrlen, !dbg !10256
  br i1 %31, label %bb17, label %bb18, !dbg !10256

bb17:                                             ; preds = %bb16
  %32 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10256
  %33 = load i16* %32, align 2, !dbg !10256
  %34 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10256
  %35 = load i16* %34, align 8, !dbg !10256
  %36 = icmp eq i16 %33, %35, !dbg !10256
  br i1 %36, label %bb19, label %bb18, !dbg !10256

bb18:                                             ; preds = %bb17, %bb16
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !10257
  store i32 22, i32* %37, align 4, !dbg !10257
  br label %bb28, !dbg !10258

bb19:                                             ; preds = %bb17
  %38 = zext i32 %addrlen to i64, !dbg !10259
  %39 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !10259
  %40 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10259
  %41 = call i8* @memcpy(i8* %39, i8* %40, i64 %38)
  %42 = load %struct.sockaddr_storage** %11, align 8, !dbg !10260
  %43 = getelementptr inbounds %struct.sockaddr_storage* %42, i64 0, i32 0, !dbg !10260
  %44 = load i16* %43, align 2, !dbg !10260
  switch i16 %44, label %bb23 [
    i16 2, label %bb28
    i16 10, label %bb28
  ]

bb23:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 294, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10260

bb24:                                             ; preds = %bb3
  %45 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10261
  %46 = load i32* %45, align 8, !dbg !10261
  %47 = tail call i64 (i64, ...)* @syscall(i64 49, i32 %46, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10261
  %48 = trunc i64 %47 to i32, !dbg !10261
  %49 = icmp slt i32 %48, 0, !dbg !10262
  br i1 %49, label %bb25, label %bb28, !dbg !10262

bb25:                                             ; preds = %bb24
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10263
  %51 = tail call i32 @klee_get_errno() nounwind, !dbg !10263
  store i32 %51, i32* %50, align 4, !dbg !10263
  br label %bb28, !dbg !10263

bb28:                                             ; preds = %bb25, %bb24, %bb19, %bb19, %bb18, %bb15, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb15 ], [ -1, %bb18 ], [ %48, %bb25 ], [ %48, %bb24 ], [ 0, %bb19 ], [ 0, %bb19 ]
  ret i32 %.0, !dbg !10247
}

define i32 @__fd_bind(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10264
  %1 = trunc i64 %0 to i32, !dbg !10264
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10265
  %3 = load i64* %2, align 8, !dbg !10265
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10265
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10266
  %6 = load i64* %5, align 8, !dbg !10266
  %7 = trunc i64 %6 to i32, !dbg !10266
  %8 = tail call i32 @bind(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10267
  ret i32 %8, !dbg !10267
}

define internal fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %a) nounwind {
entry:
  %0 = icmp eq %struct.exe_sockaddr_t* %a, null, !dbg !10268
  br i1 %0, label %bb, label %bb1, !dbg !10268

bb:                                               ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str12406, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10268

bb1:                                              ; preds = %entry
  switch i32 %domain, label %bb11 [
    i32 2, label %bb2
    i32 10, label %bb5
    i32 17, label %bb8
  ], !dbg !10270

bb2:                                              ; preds = %bb1
  %1 = tail call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10271
  %2 = bitcast i8* %1 to %struct.sockaddr_storage*, !dbg !10271
  %3 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10271
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %3, align 8, !dbg !10271
  %4 = icmp eq i8* %1, null, !dbg !10271
  br i1 %4, label %bb12, label %bb4, !dbg !10271

bb4:                                              ; preds = %bb2
  %5 = bitcast i8* %1 to i16*, !dbg !10271
  store i16 2, i16* %5, align 8, !dbg !10271
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10271
  store i32 16, i32* %6, align 8, !dbg !10271
  br label %bb12, !dbg !10271

bb5:                                              ; preds = %bb1
  %7 = tail call noalias i8* @calloc(i64 1, i64 28) nounwind, !dbg !10272
  %8 = bitcast i8* %7 to %struct.sockaddr_storage*, !dbg !10272
  %9 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10272
  store %struct.sockaddr_storage* %8, %struct.sockaddr_storage** %9, align 8, !dbg !10272
  %10 = icmp eq i8* %7, null, !dbg !10272
  br i1 %10, label %bb12, label %bb7, !dbg !10272

bb7:                                              ; preds = %bb5
  %11 = bitcast i8* %7 to i16*, !dbg !10272
  store i16 2, i16* %11, align 8, !dbg !10272
  %12 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10272
  store i32 28, i32* %12, align 8, !dbg !10272
  br label %bb12, !dbg !10272

bb8:                                              ; preds = %bb1
  %13 = tail call noalias i8* @calloc(i64 1, i64 20) nounwind, !dbg !10273
  %14 = bitcast i8* %13 to %struct.sockaddr_storage*, !dbg !10273
  %15 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10273
  store %struct.sockaddr_storage* %14, %struct.sockaddr_storage** %15, align 8, !dbg !10273
  %16 = icmp eq i8* %13, null, !dbg !10273
  br i1 %16, label %bb12, label %bb10, !dbg !10273

bb10:                                             ; preds = %bb8
  %17 = bitcast i8* %13 to i16*, !dbg !10273
  store i16 2, i16* %17, align 8, !dbg !10273
  %18 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10273
  store i32 20, i32* %18, align 8, !dbg !10273
  br label %bb12, !dbg !10273

bb11:                                             ; preds = %bb1
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2397, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1396, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10274

bb12:                                             ; preds = %bb10, %bb8, %bb7, %bb5, %bb4, %bb2
  %.0 = phi %struct.exe_sockaddr_t* [ %a, %bb10 ], [ %a, %bb7 ], [ %a, %bb4 ], [ null, %bb2 ], [ null, %bb5 ], [ null, %bb8 ]
  ret %struct.exe_sockaddr_t* %.0, !dbg !10271
}

define i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %connf = alloca %struct.exe_file_t*, align 8
  %fchild = alloca %struct.exe_file_t*, align 8
  %0 = call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10275
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10276
  br i1 %1, label %bb, label %bb1, !dbg !10276

bb:                                               ; preds = %entry
  %2 = call i32* @__errno_location() nounwind readnone, !dbg !10277
  store i32 9, i32* %2, align 4, !dbg !10277
  br label %bb24, !dbg !10278

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10279
  %4 = load i32* %3, align 4, !dbg !10279
  %5 = and i32 %4, 16, !dbg !10279
  %6 = icmp eq i32 %5, 0, !dbg !10279
  br i1 %6, label %bb2, label %bb3, !dbg !10279

bb2:                                              ; preds = %bb1
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !10280
  store i32 88, i32* %7, align 4, !dbg !10280
  br label %bb24, !dbg !10281

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10282
  %9 = icmp eq i32 %8, 0, !dbg !10282
  br i1 %9, label %bb5, label %bb4, !dbg !10282

bb4:                                              ; preds = %bb3
  %10 = call i32* @__errno_location() nounwind readnone, !dbg !10283
  store i32 95, i32* %10, align 4, !dbg !10283
  br label %bb24, !dbg !10284

bb5:                                              ; preds = %bb3
  %11 = and i32 %4, 64, !dbg !10285
  %12 = icmp eq i32 %11, 0, !dbg !10285
  br i1 %12, label %bb6, label %bb7, !dbg !10285

bb6:                                              ; preds = %bb5
  %13 = call i32* @__errno_location() nounwind readnone, !dbg !10286
  store i32 22, i32* %13, align 4, !dbg !10286
  br label %bb24, !dbg !10287

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10288
  %15 = load %struct.exe_disk_file_t** %14, align 8, !dbg !10288
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !10288
  br i1 %16, label %bb19, label %bb8, !dbg !10288

bb8:                                              ; preds = %bb7
  %17 = call i32 @__get_new_fd(%struct.exe_file_t** %connf) nounwind, !dbg !10289
  %18 = icmp slt i32 %17, 0, !dbg !10290
  br i1 %18, label %bb24, label %bb10, !dbg !10290

bb10:                                             ; preds = %bb8
  %19 = load %struct.exe_file_t** %connf, align 8, !dbg !10291
  %20 = getelementptr inbounds %struct.exe_file_t* %19, i64 0, i32 1, !dbg !10291
  %21 = load i32* %20, align 4, !dbg !10291
  %22 = or i32 %21, 16, !dbg !10291
  store i32 %22, i32* %20, align 4, !dbg !10291
  %23 = load %struct.exe_file_t** %connf, align 8, !dbg !10292
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10293
  %25 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10293
  %26 = icmp ult i32 %24, %25, !dbg !10293
  br i1 %26, label %bb1.i, label %__get_sym_stream.exit, !dbg !10293

bb1.i:                                            ; preds = %bb10
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 8, !dbg !10295
  %28 = zext i32 %24 to i64, !dbg !10295
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !10295
  %30 = add i32 %24, 1, !dbg !10295
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10295
  br label %__get_sym_stream.exit, !dbg !10295

__get_sym_stream.exit:                            ; preds = %bb1.i, %bb10
  %.0.i = phi %struct.exe_disk_file_t* [ %29, %bb1.i ], [ null, %bb10 ]
  %31 = getelementptr inbounds %struct.exe_file_t* %23, i64 0, i32 3, !dbg !10292
  store %struct.exe_disk_file_t* %.0.i, %struct.exe_disk_file_t** %31, align 8, !dbg !10292
  %32 = load %struct.exe_file_t** %connf, align 8, !dbg !10296
  %33 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 3, !dbg !10296
  %34 = load %struct.exe_disk_file_t** %33, align 8, !dbg !10296
  %35 = icmp eq %struct.exe_disk_file_t* %34, null, !dbg !10296
  br i1 %35, label %bb11, label %bb12, !dbg !10296

bb11:                                             ; preds = %__get_sym_stream.exit
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str13407, i64 0, i64 0)) nounwind, !dbg !10297
  %36 = load %struct.exe_file_t** %connf, align 8, !dbg !10298
  call void @__undo_get_new_fd(%struct.exe_file_t* %36) nounwind, !dbg !10298
  %37 = call i32* @__errno_location() nounwind readnone, !dbg !10299
  store i32 23, i32* %37, align 4, !dbg !10299
  br label %bb24, !dbg !10300

bb12:                                             ; preds = %__get_sym_stream.exit
  %38 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 4, !dbg !10301
  %39 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 6, !dbg !10301
  %40 = load i32* %39, align 8, !dbg !10301
  %41 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %40, %struct.exe_sockaddr_t* %38) nounwind, !dbg !10301
  %42 = icmp eq %struct.exe_sockaddr_t* %41, null, !dbg !10301
  br i1 %42, label %bb13, label %bb14, !dbg !10301

bb13:                                             ; preds = %bb12
  %43 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10302
  %44 = add i32 %43, -1, !dbg !10302
  store i32 %44, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10302
  %45 = load %struct.exe_file_t** %connf, align 8, !dbg !10303
  call void @__undo_get_new_fd(%struct.exe_file_t* %45) nounwind, !dbg !10303
  %46 = call i32* @__errno_location() nounwind readnone, !dbg !10304
  store i32 12, i32* %46, align 4, !dbg !10304
  br label %bb24, !dbg !10305

bb14:                                             ; preds = %bb12
  %47 = load %struct.exe_file_t** %connf, align 8, !dbg !10306
  %48 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 3, !dbg !10306
  %49 = load %struct.exe_disk_file_t** %48, align 8, !dbg !10306
  %50 = getelementptr inbounds %struct.exe_disk_file_t* %49, i64 0, i32 4, !dbg !10306
  %51 = load %struct.exe_sockaddr_t** %50, align 8, !dbg !10306
  %52 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 4, i32 1, !dbg !10306
  %53 = load i32* %52, align 8, !dbg !10306
  %54 = getelementptr inbounds %struct.exe_sockaddr_t* %51, i64 0, i32 1, !dbg !10306
  store i32 %53, i32* %54, align 8, !dbg !10306
  %55 = load %struct.exe_file_t** %connf, align 8, !dbg !10307
  %56 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 3, !dbg !10307
  %57 = load %struct.exe_disk_file_t** %56, align 8, !dbg !10307
  %58 = getelementptr inbounds %struct.exe_disk_file_t* %57, i64 0, i32 4, !dbg !10307
  %59 = load %struct.exe_sockaddr_t** %58, align 8, !dbg !10307
  %60 = getelementptr inbounds %struct.exe_sockaddr_t* %59, i64 0, i32 0, !dbg !10307
  %61 = load %struct.sockaddr_storage** %60, align 8, !dbg !10307
  %62 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 4, i32 0, !dbg !10307
  %63 = load %struct.sockaddr_storage** %62, align 8, !dbg !10307
  %64 = getelementptr inbounds %struct.sockaddr_storage* %63, i64 0, i32 0, !dbg !10307
  %65 = load i16* %64, align 8, !dbg !10307
  %66 = getelementptr inbounds %struct.sockaddr_storage* %61, i64 0, i32 0, !dbg !10307
  store i16 %65, i16* %66, align 8, !dbg !10307
  %67 = load %struct.exe_file_t** %connf, align 8, !dbg !10308
  %68 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 3, !dbg !10308
  %69 = load %struct.exe_disk_file_t** %68, align 8, !dbg !10308
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %69, i64 0, i32 4, !dbg !10308
  %71 = load %struct.exe_sockaddr_t** %70, align 8, !dbg !10308
  %72 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 5, !dbg !10308
  store %struct.exe_sockaddr_t* %71, %struct.exe_sockaddr_t** %72, align 8, !dbg !10308
  %73 = icmp eq %struct.sockaddr* %addr, null, !dbg !10309
  br i1 %73, label %bb14.bb18_crit_edge, label %bb15, !dbg !10309

bb14.bb18_crit_edge:                              ; preds = %bb14
  %.pre = load %struct.exe_file_t** %connf, align 8
  br label %bb18

bb15:                                             ; preds = %bb14
  %74 = load i32* %addrlen, align 4, !dbg !10310
  %75 = zext i32 %74 to i64, !dbg !10310
  %76 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10310
  call void @klee_check_memory_access(i8* %76, i64 %75) nounwind, !dbg !10310
  %77 = load i32* %addrlen, align 4, !dbg !10311
  %78 = load %struct.exe_file_t** %connf, align 8, !dbg !10311
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10311
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10311
  %81 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 1, !dbg !10311
  %82 = load i32* %81, align 8, !dbg !10311
  %83 = icmp ult i32 %77, %82, !dbg !10311
  br i1 %83, label %bb16, label %bb17, !dbg !10311

bb16:                                             ; preds = %bb15
  %84 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10312
  %85 = load %struct.sockaddr_storage** %84, align 8, !dbg !10312
  %86 = bitcast %struct.sockaddr_storage* %85 to i8*, !dbg !10312
  call void @free(i8* %86) nounwind, !dbg !10312
  %87 = load %struct.exe_file_t** %connf, align 8, !dbg !10313
  %88 = getelementptr inbounds %struct.exe_file_t* %87, i64 0, i32 4, i32 0, !dbg !10313
  %89 = load %struct.sockaddr_storage** %88, align 8, !dbg !10313
  %90 = bitcast %struct.sockaddr_storage* %89 to i8*, !dbg !10313
  call void @free(i8* %90) nounwind, !dbg !10313
  %91 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10314
  %92 = add i32 %91, -1, !dbg !10314
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10314
  %93 = load %struct.exe_file_t** %connf, align 8, !dbg !10315
  call void @__undo_get_new_fd(%struct.exe_file_t* %93) nounwind, !dbg !10315
  %94 = call i32* @__errno_location() nounwind readnone, !dbg !10316
  store i32 22, i32* %94, align 4, !dbg !10316
  br label %bb24, !dbg !10317

bb17:                                             ; preds = %bb15
  %95 = zext i32 %82 to i64, !dbg !10318
  %96 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10318
  %97 = load %struct.sockaddr_storage** %96, align 8, !dbg !10318
  %98 = bitcast %struct.sockaddr_storage* %97 to i8*, !dbg !10318
  %99 = call i8* @memcpy(i8* %76, i8* %98, i64 %95)
  %100 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10319
  %101 = getelementptr inbounds %struct.exe_sockaddr_t* %100, i64 0, i32 1, !dbg !10319
  %102 = load i32* %101, align 8, !dbg !10319
  store i32 %102, i32* %addrlen, align 4, !dbg !10319
  br label %bb18, !dbg !10319

bb18:                                             ; preds = %bb17, %bb14.bb18_crit_edge
  %103 = phi %struct.exe_file_t* [ %.pre, %bb14.bb18_crit_edge ], [ %78, %bb17 ]
  %104 = getelementptr inbounds %struct.exe_file_t* %103, i64 0, i32 1, !dbg !10320
  %105 = load i32* %104, align 4, !dbg !10320
  %106 = or i32 %105, 12, !dbg !10320
  store i32 %106, i32* %104, align 4, !dbg !10320
  br label %bb24, !dbg !10321

bb19:                                             ; preds = %bb7
  %107 = call i32 @__get_new_fd(%struct.exe_file_t** %fchild) nounwind, !dbg !10322
  %108 = icmp slt i32 %107, 0, !dbg !10323
  br i1 %108, label %bb20, label %bb21, !dbg !10323

bb20:                                             ; preds = %bb19
  %109 = call i32* @__errno_location() nounwind readnone, !dbg !10324
  store i32 12, i32* %109, align 4, !dbg !10324
  br label %bb24, !dbg !10325

bb21:                                             ; preds = %bb19
  %110 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10326
  %111 = load i32* %110, align 8, !dbg !10326
  %112 = call i64 (i64, ...)* @syscall(i64 43, i32 %111, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10326
  %113 = trunc i64 %112 to i32, !dbg !10326
  %114 = icmp slt i32 %113, 0, !dbg !10327
  br i1 %114, label %bb22, label %bb23, !dbg !10327

bb22:                                             ; preds = %bb21
  %115 = call i32* @__errno_location() nounwind readnone, !dbg !10328
  %116 = call i32 @klee_get_errno() nounwind, !dbg !10328
  store i32 %116, i32* %115, align 4, !dbg !10328
  %117 = load %struct.exe_file_t** %fchild, align 8, !dbg !10329
  call void @__undo_get_new_fd(%struct.exe_file_t* %117) nounwind, !dbg !10329
  br label %bb24, !dbg !10330

bb23:                                             ; preds = %bb21
  %118 = load %struct.exe_file_t** %fchild, align 8, !dbg !10331
  %119 = getelementptr inbounds %struct.exe_file_t* %118, i64 0, i32 1, !dbg !10331
  %120 = load i32* %119, align 4, !dbg !10331
  %121 = or i32 %120, 16, !dbg !10331
  store i32 %121, i32* %119, align 4, !dbg !10331
  %122 = load %struct.exe_file_t** %fchild, align 8, !dbg !10332
  %123 = getelementptr inbounds %struct.exe_file_t* %122, i64 0, i32 1, !dbg !10332
  %124 = load i32* %123, align 4, !dbg !10332
  %125 = or i32 %124, 12, !dbg !10332
  store i32 %125, i32* %123, align 4, !dbg !10332
  %126 = load %struct.exe_file_t** %fchild, align 8, !dbg !10333
  %127 = getelementptr inbounds %struct.exe_file_t* %126, i64 0, i32 0, !dbg !10333
  store i32 %113, i32* %127, align 8, !dbg !10333
  br label %bb24, !dbg !10334

bb24:                                             ; preds = %bb23, %bb22, %bb20, %bb18, %bb16, %bb13, %bb11, %bb8, %bb6, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb16 ], [ %17, %bb18 ], [ -1, %bb20 ], [ %113, %bb22 ], [ %107, %bb23 ], [ %17, %bb8 ]
  ret i32 %.0, !dbg !10278
}

define i32 @accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10335
  ret i32 %0, !dbg !10335
}

define weak i32 @socket(i32 %domain, i32 %type, i32 %protocol) nounwind {
entry:
  %f = alloca %struct.exe_file_t*, align 8
  %0 = call i32 @klee_zest_enabled() nounwind, !dbg !10337
  %1 = icmp eq i32 %0, 0, !dbg !10337
  br i1 %1, label %bb5, label %bb, !dbg !10337

bb:                                               ; preds = %entry
  %2 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10338
  %3 = icmp slt i32 %2, 0, !dbg !10339
  br i1 %3, label %bb1, label %bb2, !dbg !10339

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str14408, i64 0, i64 0)) nounwind, !dbg !10340
  %4 = call i32* @__errno_location() nounwind readnone, !dbg !10341
  store i32 24, i32* %4, align 4, !dbg !10341
  br label %bb28, !dbg !10342

bb2:                                              ; preds = %bb
  %5 = call i64 (i64, ...)* @syscall(i64 41, i32 %domain, i32 %type, i32 %protocol) nounwind, !dbg !10343
  %6 = trunc i64 %5 to i32, !dbg !10343
  %7 = icmp slt i32 %6, 0, !dbg !10344
  %8 = load %struct.exe_file_t** %f, align 8, !dbg !10345
  br i1 %7, label %bb3, label %bb4, !dbg !10344

bb3:                                              ; preds = %bb2
  call void @__undo_get_new_fd(%struct.exe_file_t* %8) nounwind, !dbg !10345
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !10346
  %10 = call i32 @klee_get_errno() nounwind, !dbg !10346
  store i32 %10, i32* %9, align 4, !dbg !10346
  br label %bb28, !dbg !10347

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds %struct.exe_file_t* %8, i64 0, i32 1, !dbg !10348
  %12 = load i32* %11, align 4, !dbg !10348
  %13 = or i32 %12, 16, !dbg !10348
  store i32 %13, i32* %11, align 4, !dbg !10348
  %14 = load %struct.exe_file_t** %f, align 8, !dbg !10349
  %15 = getelementptr inbounds %struct.exe_file_t* %14, i64 0, i32 1, !dbg !10349
  %16 = load i32* %15, align 4, !dbg !10349
  %17 = or i32 %16, 12, !dbg !10349
  store i32 %17, i32* %15, align 4, !dbg !10349
  %18 = load %struct.exe_file_t** %f, align 8, !dbg !10350
  %19 = getelementptr inbounds %struct.exe_file_t* %18, i64 0, i32 0, !dbg !10350
  store i32 %6, i32* %19, align 8, !dbg !10350
  br label %bb28, !dbg !10351

bb5:                                              ; preds = %entry
  switch i32 %domain, label %bb26 [
    i32 2, label %bb6
    i32 10, label %bb6
    i32 17, label %bb6
  ], !dbg !10352

bb6:                                              ; preds = %bb5, %bb5, %bb5
  switch i32 %type, label %bb25 [
    i32 1, label %bb7
    i32 2, label %bb16
    i32 3, label %bb16
    i32 10, label %bb16
  ], !dbg !10353

bb7:                                              ; preds = %bb6
  %20 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10354
  %21 = icmp slt i32 %20, 0, !dbg !10355
  br i1 %21, label %bb28, label %bb9, !dbg !10355

bb9:                                              ; preds = %bb7
  %22 = load %struct.exe_file_t** %f, align 8, !dbg !10356
  %23 = getelementptr inbounds %struct.exe_file_t* %22, i64 0, i32 1, !dbg !10356
  %24 = load i32* %23, align 4, !dbg !10356
  %25 = or i32 %24, 16, !dbg !10356
  store i32 %25, i32* %23, align 4, !dbg !10356
  %26 = load %struct.exe_file_t** %f, align 8, !dbg !10357
  %27 = getelementptr inbounds %struct.exe_file_t* %26, i64 0, i32 4, !dbg !10357
  %28 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %27) nounwind, !dbg !10357
  %29 = icmp eq %struct.exe_sockaddr_t* %28, null, !dbg !10357
  %30 = load %struct.exe_file_t** %f, align 8, !dbg !10358
  br i1 %29, label %bb10, label %bb11, !dbg !10357

bb10:                                             ; preds = %bb9
  call void @__undo_get_new_fd(%struct.exe_file_t* %30) nounwind, !dbg !10358
  %31 = call i32* @__errno_location() nounwind readnone, !dbg !10359
  store i32 12, i32* %31, align 4, !dbg !10359
  br label %bb28, !dbg !10360

bb11:                                             ; preds = %bb9
  %32 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10361
  %33 = bitcast i8* %32 to %struct.exe_sockaddr_t*, !dbg !10361
  %34 = getelementptr inbounds %struct.exe_file_t* %30, i64 0, i32 5, !dbg !10361
  store %struct.exe_sockaddr_t* %33, %struct.exe_sockaddr_t** %34, align 8, !dbg !10361
  %35 = load %struct.exe_file_t** %f, align 8, !dbg !10362
  %36 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 5, !dbg !10362
  %37 = load %struct.exe_sockaddr_t** %36, align 8, !dbg !10362
  %38 = icmp eq %struct.exe_sockaddr_t* %37, null, !dbg !10362
  br i1 %38, label %bb12, label %bb13, !dbg !10362

bb12:                                             ; preds = %bb11
  %39 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 4, i32 0, !dbg !10363
  %40 = load %struct.sockaddr_storage** %39, align 8, !dbg !10363
  %41 = bitcast %struct.sockaddr_storage* %40 to i8*, !dbg !10363
  call void @free(i8* %41) nounwind, !dbg !10363
  %42 = load %struct.exe_file_t** %f, align 8, !dbg !10364
  call void @__undo_get_new_fd(%struct.exe_file_t* %42) nounwind, !dbg !10364
  %43 = call i32* @__errno_location() nounwind readnone, !dbg !10365
  store i32 12, i32* %43, align 4, !dbg !10365
  br label %bb28, !dbg !10366

bb13:                                             ; preds = %bb11
  %44 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %37) nounwind, !dbg !10367
  %45 = icmp eq %struct.exe_sockaddr_t* %44, null, !dbg !10367
  %46 = load %struct.exe_file_t** %f, align 8, !dbg !10368
  br i1 %45, label %bb14, label %bb15, !dbg !10367

bb14:                                             ; preds = %bb13
  %47 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 5, !dbg !10368
  %48 = load %struct.exe_sockaddr_t** %47, align 8, !dbg !10368
  %49 = bitcast %struct.exe_sockaddr_t* %48 to i8*, !dbg !10368
  call void @free(i8* %49) nounwind, !dbg !10368
  %50 = load %struct.exe_file_t** %f, align 8, !dbg !10369
  %51 = getelementptr inbounds %struct.exe_file_t* %50, i64 0, i32 4, i32 0, !dbg !10369
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10369
  %53 = bitcast %struct.sockaddr_storage* %52 to i8*, !dbg !10369
  call void @free(i8* %53) nounwind, !dbg !10369
  %54 = load %struct.exe_file_t** %f, align 8, !dbg !10370
  call void @__undo_get_new_fd(%struct.exe_file_t* %54) nounwind, !dbg !10370
  %55 = call i32* @__errno_location() nounwind readnone, !dbg !10371
  store i32 12, i32* %55, align 4, !dbg !10371
  br label %bb28, !dbg !10372

bb15:                                             ; preds = %bb13
  %56 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 3, !dbg !10373
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %56, align 8, !dbg !10373
  %57 = load %struct.exe_file_t** %f, align 8, !dbg !10374
  %58 = getelementptr inbounds %struct.exe_file_t* %57, i64 0, i32 1, !dbg !10374
  %59 = load i32* %58, align 4, !dbg !10374
  %60 = or i32 %59, 12, !dbg !10374
  store i32 %60, i32* %58, align 4, !dbg !10374
  %61 = load %struct.exe_file_t** %f, align 8, !dbg !10375
  %62 = getelementptr inbounds %struct.exe_file_t* %61, i64 0, i32 6, !dbg !10375
  store i32 %domain, i32* %62, align 8, !dbg !10375
  br label %bb28, !dbg !10375

bb16:                                             ; preds = %bb6, %bb6, %bb6
  %63 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10376
  %64 = icmp slt i32 %63, 0, !dbg !10377
  br i1 %64, label %bb28, label %bb18, !dbg !10377

bb18:                                             ; preds = %bb16
  %65 = load %struct.exe_file_t** %f, align 8, !dbg !10378
  %66 = getelementptr inbounds %struct.exe_file_t* %65, i64 0, i32 1, !dbg !10378
  %67 = load i32* %66, align 4, !dbg !10378
  %68 = or i32 %67, 48, !dbg !10378
  store i32 %68, i32* %66, align 4, !dbg !10378
  %69 = load %struct.exe_file_t** %f, align 8, !dbg !10379
  %70 = getelementptr inbounds %struct.exe_file_t* %69, i64 0, i32 4, !dbg !10379
  %71 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %70) nounwind, !dbg !10379
  %72 = icmp eq %struct.exe_sockaddr_t* %71, null, !dbg !10379
  %73 = load %struct.exe_file_t** %f, align 8, !dbg !10380
  br i1 %72, label %bb19, label %bb20, !dbg !10379

bb19:                                             ; preds = %bb18
  call void @__undo_get_new_fd(%struct.exe_file_t* %73) nounwind, !dbg !10380
  %74 = call i32* @__errno_location() nounwind readnone, !dbg !10381
  store i32 12, i32* %74, align 4, !dbg !10381
  br label %bb28, !dbg !10382

bb20:                                             ; preds = %bb18
  %75 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10383
  %76 = bitcast i8* %75 to %struct.exe_sockaddr_t*, !dbg !10383
  %77 = getelementptr inbounds %struct.exe_file_t* %73, i64 0, i32 5, !dbg !10383
  store %struct.exe_sockaddr_t* %76, %struct.exe_sockaddr_t** %77, align 8, !dbg !10383
  %78 = load %struct.exe_file_t** %f, align 8, !dbg !10384
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10384
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10384
  %81 = icmp eq %struct.exe_sockaddr_t* %80, null, !dbg !10384
  br i1 %81, label %bb21, label %bb22, !dbg !10384

bb21:                                             ; preds = %bb20
  %82 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 4, i32 0, !dbg !10385
  %83 = load %struct.sockaddr_storage** %82, align 8, !dbg !10385
  %84 = bitcast %struct.sockaddr_storage* %83 to i8*, !dbg !10385
  call void @free(i8* %84) nounwind, !dbg !10385
  %85 = load %struct.exe_file_t** %f, align 8, !dbg !10386
  call void @__undo_get_new_fd(%struct.exe_file_t* %85) nounwind, !dbg !10386
  %86 = call i32* @__errno_location() nounwind readnone, !dbg !10387
  store i32 12, i32* %86, align 4, !dbg !10387
  br label %bb28, !dbg !10388

bb22:                                             ; preds = %bb20
  %87 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %80) nounwind, !dbg !10389
  %88 = icmp eq %struct.exe_sockaddr_t* %87, null, !dbg !10389
  %89 = load %struct.exe_file_t** %f, align 8, !dbg !10390
  br i1 %88, label %bb23, label %bb24, !dbg !10389

bb23:                                             ; preds = %bb22
  %90 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 5, !dbg !10390
  %91 = load %struct.exe_sockaddr_t** %90, align 8, !dbg !10390
  %92 = bitcast %struct.exe_sockaddr_t* %91 to i8*, !dbg !10390
  call void @free(i8* %92) nounwind, !dbg !10390
  %93 = load %struct.exe_file_t** %f, align 8, !dbg !10391
  %94 = getelementptr inbounds %struct.exe_file_t* %93, i64 0, i32 4, i32 0, !dbg !10391
  %95 = load %struct.sockaddr_storage** %94, align 8, !dbg !10391
  %96 = bitcast %struct.sockaddr_storage* %95 to i8*, !dbg !10391
  call void @free(i8* %96) nounwind, !dbg !10391
  %97 = load %struct.exe_file_t** %f, align 8, !dbg !10392
  call void @__undo_get_new_fd(%struct.exe_file_t* %97) nounwind, !dbg !10392
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !10393
  store i32 12, i32* %98, align 4, !dbg !10393
  br label %bb28, !dbg !10394

bb24:                                             ; preds = %bb22
  %99 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 3, !dbg !10395
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %99, align 8, !dbg !10395
  %100 = load %struct.exe_file_t** %f, align 8, !dbg !10396
  %101 = getelementptr inbounds %struct.exe_file_t* %100, i64 0, i32 1, !dbg !10396
  %102 = load i32* %101, align 4, !dbg !10396
  %103 = or i32 %102, 12, !dbg !10396
  store i32 %103, i32* %101, align 4, !dbg !10396
  br label %bb28, !dbg !10396

bb25:                                             ; preds = %bb6
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8]* @.str15409, i64 0, i64 0)) nounwind, !dbg !10397
  %104 = call i32* @__errno_location() nounwind readnone, !dbg !10398
  store i32 94, i32* %104, align 4, !dbg !10398
  br label %bb28, !dbg !10399

bb26:                                             ; preds = %bb5
  call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str16410, i64 0, i64 0)) nounwind, !dbg !10400
  %105 = call i32* @__errno_location() nounwind readnone, !dbg !10401
  store i32 93, i32* %105, align 4, !dbg !10401
  br label %bb28, !dbg !10402

bb28:                                             ; preds = %bb26, %bb25, %bb24, %bb23, %bb21, %bb19, %bb16, %bb15, %bb14, %bb12, %bb10, %bb7, %bb4, %bb3, %bb1
  %.0 = phi i32 [ %2, %bb1 ], [ %6, %bb3 ], [ %2, %bb4 ], [ -1, %bb26 ], [ -1, %bb25 ], [ -1, %bb19 ], [ -1, %bb21 ], [ -1, %bb23 ], [ -1, %bb10 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %20, %bb7 ], [ %63, %bb16 ], [ %63, %bb24 ], [ %20, %bb15 ]
  ret i32 %.0, !dbg !10342
}

define i32 @__fd_socket(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10403
  %1 = trunc i64 %0 to i32, !dbg !10403
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10404
  %3 = load i64* %2, align 8, !dbg !10404
  %4 = trunc i64 %3 to i32, !dbg !10404
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10405
  %6 = load i64* %5, align 8, !dbg !10405
  %7 = trunc i64 %6 to i32, !dbg !10405
  %8 = tail call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10406
  ret i32 %8, !dbg !10406
}

define weak i32 @__socketcall(i32 %type, i64* %args) nounwind {
entry:
  %iov.i21 = alloca %struct.iovec, align 8
  %msg.i22 = alloca %struct.msghdr, align 8
  %iov.i = alloca %struct.iovec, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %iov.i.i19 = alloca %struct.iovec, align 8
  %msg.i.i20 = alloca %struct.msghdr, align 8
  %iov.i.i = alloca %struct.iovec, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  switch i32 %type, label %bb16 [
    i32 1, label %bb
    i32 2, label %bb1
    i32 3, label %bb2
    i32 4, label %bb3
    i32 5, label %bb4
    i32 6, label %bb5
    i32 7, label %bb6
    i32 17, label %bb15
    i32 9, label %bb7
    i32 10, label %bb8
    i32 11, label %bb9
    i32 12, label %bb10
    i32 13, label %bb11
    i32 14, label %bb12
    i32 15, label %bb13
    i32 16, label %bb14
  ], !dbg !10407

bb:                                               ; preds = %entry
  %0 = load i64* %args, align 8, !dbg !10409
  %1 = trunc i64 %0 to i32, !dbg !10409
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10411
  %3 = load i64* %2, align 8, !dbg !10411
  %4 = trunc i64 %3 to i32, !dbg !10411
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10412
  %6 = load i64* %5, align 8, !dbg !10412
  %7 = trunc i64 %6 to i32, !dbg !10412
  %8 = call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10413
  br label %bb17, !dbg !10410

bb1:                                              ; preds = %entry
  %9 = load i64* %args, align 8, !dbg !10414
  %10 = trunc i64 %9 to i32, !dbg !10414
  %11 = getelementptr inbounds i64* %args, i64 1, !dbg !10416
  %12 = load i64* %11, align 8, !dbg !10416
  %13 = inttoptr i64 %12 to %struct.sockaddr*, !dbg !10416
  %14 = getelementptr inbounds i64* %args, i64 2, !dbg !10417
  %15 = load i64* %14, align 8, !dbg !10417
  %16 = trunc i64 %15 to i32, !dbg !10417
  %17 = call i32 @bind(i32 %10, %struct.sockaddr* %13, i32 %16) nounwind, !dbg !10418
  br label %bb17, !dbg !10415

bb2:                                              ; preds = %entry
  %18 = load i64* %args, align 8, !dbg !10419
  %19 = trunc i64 %18 to i32, !dbg !10419
  %20 = getelementptr inbounds i64* %args, i64 1, !dbg !10421
  %21 = load i64* %20, align 8, !dbg !10421
  %22 = inttoptr i64 %21 to %struct.sockaddr*, !dbg !10421
  %23 = getelementptr inbounds i64* %args, i64 2, !dbg !10422
  %24 = load i64* %23, align 8, !dbg !10422
  %25 = trunc i64 %24 to i32, !dbg !10422
  %26 = call i32 @connect(i32 %19, %struct.sockaddr* %22, i32 %25) nounwind, !dbg !10423
  br label %bb17, !dbg !10420

bb3:                                              ; preds = %entry
  %27 = load i64* %args, align 8, !dbg !10424
  %28 = trunc i64 %27 to i32, !dbg !10424
  %29 = getelementptr inbounds i64* %args, i64 1, !dbg !10426
  %30 = load i64* %29, align 8, !dbg !10426
  %31 = trunc i64 %30 to i32, !dbg !10426
  %32 = call i32 @listen(i32 %28, i32 %31) nounwind, !dbg !10427
  br label %bb17, !dbg !10425

bb4:                                              ; preds = %entry
  %33 = getelementptr inbounds i64* %args, i64 2, !dbg !10428
  %34 = load i64* %33, align 8, !dbg !10428
  %35 = inttoptr i64 %34 to i32*, !dbg !10428
  %36 = getelementptr inbounds i64* %args, i64 1, !dbg !10428
  %37 = load i64* %36, align 8, !dbg !10428
  %38 = inttoptr i64 %37 to %struct.sockaddr*, !dbg !10428
  %39 = load i64* %args, align 8, !dbg !10428
  %40 = trunc i64 %39 to i32, !dbg !10428
  %41 = call i32 @__fd_accept(i32 %40, %struct.sockaddr* %38, i32* %35) nounwind, !dbg !10428
  br label %bb17, !dbg !10428

bb5:                                              ; preds = %entry
  %42 = load i64* %args, align 8, !dbg !10429
  %43 = trunc i64 %42 to i32, !dbg !10429
  %44 = getelementptr inbounds i64* %args, i64 1, !dbg !10431
  %45 = load i64* %44, align 8, !dbg !10431
  %46 = inttoptr i64 %45 to %struct.sockaddr*, !dbg !10431
  %47 = getelementptr inbounds i64* %args, i64 2, !dbg !10432
  %48 = load i64* %47, align 8, !dbg !10432
  %49 = inttoptr i64 %48 to i32*, !dbg !10432
  %50 = call i32 @getsockname(i32 %43, %struct.sockaddr* %46, i32* %49) nounwind, !dbg !10433
  br label %bb17, !dbg !10430

bb6:                                              ; preds = %entry
  %51 = load i64* %args, align 8, !dbg !10434
  %52 = trunc i64 %51 to i32, !dbg !10434
  %53 = getelementptr inbounds i64* %args, i64 1, !dbg !10436
  %54 = load i64* %53, align 8, !dbg !10436
  %55 = inttoptr i64 %54 to %struct.sockaddr*, !dbg !10436
  %56 = getelementptr inbounds i64* %args, i64 2, !dbg !10437
  %57 = load i64* %56, align 8, !dbg !10437
  %58 = inttoptr i64 %57 to i32*, !dbg !10437
  %59 = call i32 @getpeername(i32 %52, %struct.sockaddr* %55, i32* %58) nounwind, !dbg !10438
  br label %bb17, !dbg !10435

bb7:                                              ; preds = %entry
  %60 = getelementptr inbounds i64* %args, i64 3, !dbg !10439
  %61 = load i64* %60, align 8, !dbg !10439
  %62 = trunc i64 %61 to i32, !dbg !10439
  %63 = getelementptr inbounds i64* %args, i64 2, !dbg !10439
  %64 = load i64* %63, align 8, !dbg !10439
  %65 = getelementptr inbounds i64* %args, i64 1, !dbg !10439
  %66 = load i64* %65, align 8, !dbg !10439
  %67 = inttoptr i64 %66 to i8*, !dbg !10439
  %68 = load i64* %args, align 8, !dbg !10439
  %69 = trunc i64 %68 to i32, !dbg !10439
  %70 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 0, !dbg !10440
  store i8* %67, i8** %70, align 8, !dbg !10440
  %71 = getelementptr inbounds %struct.iovec* %iov.i.i, i64 0, i32 1, !dbg !10442
  store i64 %64, i64* %71, align 8, !dbg !10442
  %72 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10443
  store i8* null, i8** %72, align 8, !dbg !10443
  %73 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10444
  store i32 0, i32* %73, align 8, !dbg !10444
  %74 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10445
  store %struct.iovec* %iov.i.i, %struct.iovec** %74, align 8, !dbg !10445
  %75 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10446
  store i64 1, i64* %75, align 8, !dbg !10446
  %76 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10447
  store i8* null, i8** %76, align 8, !dbg !10447
  %77 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10448
  store i64 0, i64* %77, align 8, !dbg !10448
  %78 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10449
  store i32 %62, i32* %78, align 8, !dbg !10449
  %79 = call i64 @__fd_sendmsg(i32 %69, %struct.msghdr* %msg.i.i, i32 %62) nounwind, !dbg !10450
  %80 = trunc i64 %79 to i32, !dbg !10439
  br label %bb17, !dbg !10439

bb8:                                              ; preds = %entry
  %81 = getelementptr inbounds i64* %args, i64 3, !dbg !10451
  %82 = load i64* %81, align 8, !dbg !10451
  %83 = trunc i64 %82 to i32, !dbg !10451
  %84 = getelementptr inbounds i64* %args, i64 2, !dbg !10451
  %85 = load i64* %84, align 8, !dbg !10451
  %86 = getelementptr inbounds i64* %args, i64 1, !dbg !10451
  %87 = load i64* %86, align 8, !dbg !10451
  %88 = inttoptr i64 %87 to i8*, !dbg !10451
  %89 = load i64* %args, align 8, !dbg !10451
  %90 = trunc i64 %89 to i32, !dbg !10451
  %91 = getelementptr inbounds %struct.iovec* %iov.i.i19, i64 0, i32 0, !dbg !10452
  store i8* %88, i8** %91, align 8, !dbg !10452
  %92 = getelementptr inbounds %struct.iovec* %iov.i.i19, i64 0, i32 1, !dbg !10454
  store i64 %85, i64* %92, align 8, !dbg !10454
  %93 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 0, !dbg !10455
  store i8* null, i8** %93, align 8, !dbg !10455
  %94 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 1, !dbg !10456
  store i32 0, i32* %94, align 8, !dbg !10456
  %95 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 2, !dbg !10457
  store %struct.iovec* %iov.i.i19, %struct.iovec** %95, align 8, !dbg !10457
  %96 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 3, !dbg !10458
  store i64 1, i64* %96, align 8, !dbg !10458
  %97 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 4, !dbg !10459
  store i8* null, i8** %97, align 8, !dbg !10459
  %98 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 5, !dbg !10460
  store i64 0, i64* %98, align 8, !dbg !10460
  %99 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 6, !dbg !10461
  store i32 %83, i32* %99, align 8, !dbg !10461
  %100 = call i64 @__fd_recvmsg(i32 %90, %struct.msghdr* %msg.i.i20, i32 %83) nounwind, !dbg !10462
  %101 = trunc i64 %100 to i32, !dbg !10451
  br label %bb17, !dbg !10451

bb9:                                              ; preds = %entry
  %102 = getelementptr inbounds i64* %args, i64 5, !dbg !10463
  %103 = load i64* %102, align 8, !dbg !10463
  %104 = trunc i64 %103 to i32, !dbg !10463
  %105 = getelementptr inbounds i64* %args, i64 4, !dbg !10463
  %106 = load i64* %105, align 8, !dbg !10463
  %107 = getelementptr inbounds i64* %args, i64 3, !dbg !10463
  %108 = load i64* %107, align 8, !dbg !10463
  %109 = trunc i64 %108 to i32, !dbg !10463
  %110 = getelementptr inbounds i64* %args, i64 2, !dbg !10463
  %111 = load i64* %110, align 8, !dbg !10463
  %112 = getelementptr inbounds i64* %args, i64 1, !dbg !10463
  %113 = load i64* %112, align 8, !dbg !10463
  %114 = inttoptr i64 %113 to i8*, !dbg !10463
  %115 = load i64* %args, align 8, !dbg !10463
  %116 = trunc i64 %115 to i32, !dbg !10463
  %117 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 0, !dbg !10464
  store i8* %114, i8** %117, align 8, !dbg !10464
  %118 = getelementptr inbounds %struct.iovec* %iov.i, i64 0, i32 1, !dbg !10465
  store i64 %111, i64* %118, align 8, !dbg !10465
  %119 = inttoptr i64 %106 to i8*, !dbg !10466
  %120 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10466
  store i8* %119, i8** %120, align 8, !dbg !10466
  %121 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10467
  store i32 %104, i32* %121, align 8, !dbg !10467
  %122 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10468
  store %struct.iovec* %iov.i, %struct.iovec** %122, align 8, !dbg !10468
  %123 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10469
  store i64 1, i64* %123, align 8, !dbg !10469
  %124 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10470
  store i8* null, i8** %124, align 8, !dbg !10470
  %125 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10471
  store i64 0, i64* %125, align 8, !dbg !10471
  %126 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10472
  store i32 %109, i32* %126, align 8, !dbg !10472
  %127 = call i64 @__fd_sendmsg(i32 %116, %struct.msghdr* %msg.i, i32 %109) nounwind, !dbg !10473
  %128 = trunc i64 %127 to i32, !dbg !10463
  br label %bb17, !dbg !10463

bb10:                                             ; preds = %entry
  %129 = getelementptr inbounds i64* %args, i64 5, !dbg !10474
  %130 = load i64* %129, align 8, !dbg !10474
  %131 = inttoptr i64 %130 to i32*, !dbg !10474
  %132 = getelementptr inbounds i64* %args, i64 4, !dbg !10474
  %133 = load i64* %132, align 8, !dbg !10474
  %134 = getelementptr inbounds i64* %args, i64 3, !dbg !10474
  %135 = load i64* %134, align 8, !dbg !10474
  %136 = trunc i64 %135 to i32, !dbg !10474
  %137 = load i64* %args, align 8, !dbg !10474
  %138 = trunc i64 %137 to i32, !dbg !10474
  %139 = icmp ne i64 %133, 0, !dbg !10475
  %140 = icmp eq i64 %130, 0, !dbg !10475
  %141 = and i1 %139, %140, !dbg !10475
  br i1 %141, label %bb.i, label %bb3.i, !dbg !10475

bb.i:                                             ; preds = %bb10
  %142 = call i32* @__errno_location() nounwind readnone, !dbg !10476
  store i32 14, i32* %142, align 4, !dbg !10476
  br label %__fd_recvfrom.exit, !dbg !10477

bb3.i:                                            ; preds = %bb10
  %143 = getelementptr inbounds i64* %args, i64 1, !dbg !10474
  %144 = load i64* %143, align 8, !dbg !10474
  %145 = getelementptr inbounds i64* %args, i64 2, !dbg !10474
  %146 = inttoptr i64 %144 to i8*, !dbg !10474
  %147 = load i64* %145, align 8, !dbg !10474
  %148 = getelementptr inbounds %struct.iovec* %iov.i21, i64 0, i32 0, !dbg !10478
  store i8* %146, i8** %148, align 8, !dbg !10478
  %149 = getelementptr inbounds %struct.iovec* %iov.i21, i64 0, i32 1, !dbg !10479
  store i64 %147, i64* %149, align 8, !dbg !10479
  %150 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 0, !dbg !10480
  %151 = inttoptr i64 %133 to i8*, !dbg !10480
  store i8* %151, i8** %150, align 8, !dbg !10480
  br i1 %140, label %bb6.i, label %bb4.i, !dbg !10481

bb4.i:                                            ; preds = %bb3.i
  %152 = load i32* %131, align 4, !dbg !10481
  br label %bb6.i, !dbg !10481

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %152, %bb4.i ], [ 0, %bb3.i ]
  %153 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 1, !dbg !10481
  store i32 %iftmp.113.0.i, i32* %153, align 8, !dbg !10481
  %154 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 2, !dbg !10482
  store %struct.iovec* %iov.i21, %struct.iovec** %154, align 8, !dbg !10482
  %155 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 3, !dbg !10483
  store i64 1, i64* %155, align 8, !dbg !10483
  %156 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 4, !dbg !10484
  store i8* null, i8** %156, align 8, !dbg !10484
  %157 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 5, !dbg !10485
  store i64 0, i64* %157, align 8, !dbg !10485
  %158 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 6, !dbg !10486
  store i32 %136, i32* %158, align 8, !dbg !10486
  %159 = call i64 @__fd_recvmsg(i32 %138, %struct.msghdr* %msg.i22, i32 %136) nounwind, !dbg !10487
  br i1 %140, label %__fd_recvfrom.exit, label %bb7.i, !dbg !10488

bb7.i:                                            ; preds = %bb6.i
  %160 = load i32* %153, align 8, !dbg !10488
  store i32 %160, i32* %131, align 4, !dbg !10488
  br label %__fd_recvfrom.exit, !dbg !10488

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %159, %bb6.i ], [ %159, %bb7.i ]
  %161 = trunc i64 %.0.i to i32, !dbg !10474
  br label %bb17, !dbg !10474

bb11:                                             ; preds = %entry
  %162 = load i64* %args, align 8, !dbg !10489
  %163 = trunc i64 %162 to i32, !dbg !10489
  %164 = getelementptr inbounds i64* %args, i64 1, !dbg !10491
  %165 = load i64* %164, align 8, !dbg !10491
  %166 = trunc i64 %165 to i32, !dbg !10491
  %167 = call i32 @shutdown(i32 %163, i32 %166) nounwind, !dbg !10492
  br label %bb17, !dbg !10490

bb12:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str17411, i64 0, i64 0)) nounwind, !dbg !10493
  br label %bb17, !dbg !10494

bb13:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str18412, i64 0, i64 0)) nounwind, !dbg !10495
  br label %bb17, !dbg !10496

bb14:                                             ; preds = %entry
  %168 = getelementptr inbounds i64* %args, i64 2, !dbg !10497
  %169 = load i64* %168, align 8, !dbg !10497
  %170 = trunc i64 %169 to i32, !dbg !10497
  %171 = getelementptr inbounds i64* %args, i64 1, !dbg !10497
  %172 = load i64* %171, align 8, !dbg !10497
  %173 = inttoptr i64 %172 to %struct.msghdr*, !dbg !10497
  %174 = load i64* %args, align 8, !dbg !10497
  %175 = trunc i64 %174 to i32, !dbg !10497
  %176 = call i64 @__fd_sendmsg(i32 %175, %struct.msghdr* %173, i32 %170) nounwind, !dbg !10497
  %177 = trunc i64 %176 to i32, !dbg !10497
  br label %bb17, !dbg !10497

bb15:                                             ; preds = %entry
  %178 = getelementptr inbounds i64* %args, i64 2, !dbg !10498
  %179 = load i64* %178, align 8, !dbg !10498
  %180 = trunc i64 %179 to i32, !dbg !10498
  %181 = getelementptr inbounds i64* %args, i64 1, !dbg !10498
  %182 = load i64* %181, align 8, !dbg !10498
  %183 = inttoptr i64 %182 to %struct.msghdr*, !dbg !10498
  %184 = load i64* %args, align 8, !dbg !10498
  %185 = trunc i64 %184 to i32, !dbg !10498
  %186 = call i64 @__fd_recvmsg(i32 %185, %struct.msghdr* %183, i32 %180) nounwind, !dbg !10498
  %187 = trunc i64 %186 to i32, !dbg !10498
  br label %bb17, !dbg !10498

bb16:                                             ; preds = %entry
  %188 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr inbounds ([46 x i8]* @.str19413, i64 0, i64 0), i32 %type) nounwind, !dbg !10499
  %189 = call i32* @__errno_location() nounwind readnone, !dbg !10500
  store i32 38, i32* %189, align 4, !dbg !10500
  br label %bb17, !dbg !10501

bb17:                                             ; preds = %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %__fd_recvfrom.exit, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %bb
  %.0 = phi i32 [ -1, %bb16 ], [ %177, %bb14 ], [ 0, %bb13 ], [ 0, %bb12 ], [ %167, %bb11 ], [ %161, %__fd_recvfrom.exit ], [ %128, %bb9 ], [ %101, %bb8 ], [ %80, %bb7 ], [ %187, %bb15 ], [ %59, %bb6 ], [ %50, %bb5 ], [ %41, %bb4 ], [ %32, %bb3 ], [ %26,
  ret i32 %.0, !dbg !10410
}

define weak i8* @canonicalize_file_name(i8* %name) nounwind {
entry:
  %0 = tail call i8* @realpath(i8* noalias %name, i8* noalias null) nounwind, !dbg !10502
  ret i8* %0, !dbg !10502
}

declare i32 @gettimeofday(%struct.timespec* noalias, %struct.__mbstate_t* noalias) nounwind

define i32 @open(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !10504
  %1 = icmp eq i32 %0, 0, !dbg !10504
  br i1 %1, label %bb8, label %bb, !dbg !10504

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !10505
  call void @llvm.va_start(i8* %ap12), !dbg !10505
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !10506
  %3 = load i32* %2, align 8, !dbg !10506
  %4 = icmp ugt i32 %3, 47, !dbg !10506
  br i1 %4, label %bb4, label %bb3, !dbg !10506

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !10506
  %6 = load i8** %5, align 8, !dbg !10506
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !10506
  %8 = add i64 %7, %tmp, !dbg !10506
  %9 = inttoptr i64 %8 to i8*, !dbg !10506
  %10 = add i32 %3, 8, !dbg !10506
  store i32 %10, i32* %2, align 8, !dbg !10506
  br label %bb5, !dbg !10506

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !10506
  %12 = load i8** %11, align 8, !dbg !10506
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !10506
  store i8* %13, i8** %11, align 8, !dbg !10506
  br label %bb5, !dbg !10506

bb5:                                              ; preds = %bb4, %bb3
  %addr.27.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.27.0 to i32*, !dbg !10506
  %15 = load i32* %14, align 4, !dbg !10506
  call void @llvm.va_end(i8* %ap12), !dbg !10507
  br label %bb8, !dbg !10507

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !10508
  ret i32 %16, !dbg !10508
}

define weak i32 @fstat64(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind, !dbg !10509
  ret i32 %0, !dbg !10509
}

define i32 @fstat(i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !10511
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10512
  %2 = load i64* %1, align 8, !dbg !10512
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10512
  store i64 %2, i64* %3, align 8, !dbg !10512
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10515
  %5 = load i64* %4, align 8, !dbg !10515
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10515
  store i64 %5, i64* %6, align 8, !dbg !10515
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10516
  %8 = load i32* %7, align 8, !dbg !10516
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10516
  store i32 %8, i32* %9, align 8, !dbg !10516
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10517
  %11 = load i64* %10, align 8, !dbg !10517
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10517
  store i64 %11, i64* %12, align 8, !dbg !10517
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10518
  %14 = load i32* %13, align 4, !dbg !10518
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10518
  store i32 %14, i32* %15, align 4, !dbg !10518
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10519
  %17 = load i32* %16, align 8, !dbg !10519
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10519
  store i32 %17, i32* %18, align 8, !dbg !10519
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10520
  %20 = load i64* %19, align 8, !dbg !10520
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10520
  store i64 %20, i64* %21, align 8, !dbg !10520
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10521
  %23 = load i64* %22, align 8, !dbg !10521
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10521
  store i64 %23, i64* %24, align 8, !dbg !10521
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10522
  %26 = load i64* %25, align 8, !dbg !10522
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10522
  store i64 %26, i64* %27, align 8, !dbg !10522
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10523
  %29 = load i64* %28, align 8, !dbg !10523
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10523
  store i64 %29, i64* %30, align 8, !dbg !10523
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10524
  %32 = load i64* %31, align 8, !dbg !10524
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10524
  store i64 %32, i64* %33, align 8, !dbg !10524
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10525
  %35 = load i64* %34, align 8, !dbg !10525
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10525
  store i64 %35, i64* %36, align 8, !dbg !10525
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10526
  %38 = load i64* %37, align 8, !dbg !10526
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10526
  store i64 %38, i64* %39, align 8, !dbg !10526
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10527
  %41 = load i64* %40, align 8, !dbg !10527
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10527
  store i64 %41, i64* %42, align 8, !dbg !10527
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10528
  %44 = load i64* %43, align 8, !dbg !10528
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10528
  store i64 %44, i64* %45, align 8, !dbg !10528
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10529
  %47 = load i64* %46, align 8, !dbg !10529
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10529
  store i64 %47, i64* %48, align 8, !dbg !10529
  ret i32 %0, !dbg !10530
}

define i32 @__fxstat(i32 %vers, i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !10531
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10532
  %2 = load i64* %1, align 8, !dbg !10532
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10532
  store i64 %2, i64* %3, align 8, !dbg !10532
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10534
  %5 = load i64* %4, align 8, !dbg !10534
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10534
  store i64 %5, i64* %6, align 8, !dbg !10534
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10535
  %8 = load i32* %7, align 8, !dbg !10535
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10535
  store i32 %8, i32* %9, align 8, !dbg !10535
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10536
  %11 = load i64* %10, align 8, !dbg !10536
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10536
  store i64 %11, i64* %12, align 8, !dbg !10536
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10537
  %14 = load i32* %13, align 4, !dbg !10537
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10537
  store i32 %14, i32* %15, align 4, !dbg !10537
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10538
  %17 = load i32* %16, align 8, !dbg !10538
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10538
  store i32 %17, i32* %18, align 8, !dbg !10538
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10539
  %20 = load i64* %19, align 8, !dbg !10539
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10539
  store i64 %20, i64* %21, align 8, !dbg !10539
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10540
  %23 = load i64* %22, align 8, !dbg !10540
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10540
  store i64 %23, i64* %24, align 8, !dbg !10540
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10541
  %26 = load i64* %25, align 8, !dbg !10541
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10541
  store i64 %26, i64* %27, align 8, !dbg !10541
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10542
  %29 = load i64* %28, align 8, !dbg !10542
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10542
  store i64 %29, i64* %30, align 8, !dbg !10542
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10543
  %32 = load i64* %31, align 8, !dbg !10543
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10543
  store i64 %32, i64* %33, align 8, !dbg !10543
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10544
  %35 = load i64* %34, align 8, !dbg !10544
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10544
  store i64 %35, i64* %36, align 8, !dbg !10544
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10545
  %38 = load i64* %37, align 8, !dbg !10545
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10545
  store i64 %38, i64* %39, align 8, !dbg !10545
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10546
  %41 = load i64* %40, align 8, !dbg !10546
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10546
  store i64 %41, i64* %42, align 8, !dbg !10546
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10547
  %44 = load i64* %43, align 8, !dbg !10547
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10547
  store i64 %44, i64* %45, align 8, !dbg !10547
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10548
  %47 = load i64* %46, align 8, !dbg !10548
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10548
  store i64 %47, i64* %48, align 8, !dbg !10548
  ret i32 %0, !dbg !10549
}

define weak i32 @lstat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind, !dbg !10550
  ret i32 %0, !dbg !10550
}

define i32 @lstat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10552
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10553
  %2 = load i64* %1, align 8, !dbg !10553
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10553
  store i64 %2, i64* %3, align 8, !dbg !10553
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10555
  %5 = load i64* %4, align 8, !dbg !10555
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10555
  store i64 %5, i64* %6, align 8, !dbg !10555
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10556
  %8 = load i32* %7, align 8, !dbg !10556
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10556
  store i32 %8, i32* %9, align 8, !dbg !10556
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10557
  %11 = load i64* %10, align 8, !dbg !10557
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10557
  store i64 %11, i64* %12, align 8, !dbg !10557
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10558
  %14 = load i32* %13, align 4, !dbg !10558
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10558
  store i32 %14, i32* %15, align 4, !dbg !10558
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10559
  %17 = load i32* %16, align 8, !dbg !10559
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10559
  store i32 %17, i32* %18, align 8, !dbg !10559
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10560
  %20 = load i64* %19, align 8, !dbg !10560
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10560
  store i64 %20, i64* %21, align 8, !dbg !10560
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10561
  %23 = load i64* %22, align 8, !dbg !10561
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10561
  store i64 %23, i64* %24, align 8, !dbg !10561
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10562
  %26 = load i64* %25, align 8, !dbg !10562
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10562
  store i64 %26, i64* %27, align 8, !dbg !10562
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10563
  %29 = load i64* %28, align 8, !dbg !10563
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10563
  store i64 %29, i64* %30, align 8, !dbg !10563
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10564
  %32 = load i64* %31, align 8, !dbg !10564
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10564
  store i64 %32, i64* %33, align 8, !dbg !10564
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10565
  %35 = load i64* %34, align 8, !dbg !10565
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10565
  store i64 %35, i64* %36, align 8, !dbg !10565
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10566
  %38 = load i64* %37, align 8, !dbg !10566
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10566
  store i64 %38, i64* %39, align 8, !dbg !10566
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10567
  %41 = load i64* %40, align 8, !dbg !10567
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10567
  store i64 %41, i64* %42, align 8, !dbg !10567
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10568
  %44 = load i64* %43, align 8, !dbg !10568
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10568
  store i64 %44, i64* %45, align 8, !dbg !10568
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10569
  %47 = load i64* %46, align 8, !dbg !10569
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10569
  store i64 %47, i64* %48, align 8, !dbg !10569
  ret i32 %0, !dbg !10570
}

define i32 @__lxstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10571
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10572
  %2 = load i64* %1, align 8, !dbg !10572
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10572
  store i64 %2, i64* %3, align 8, !dbg !10572
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10574
  %5 = load i64* %4, align 8, !dbg !10574
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10574
  store i64 %5, i64* %6, align 8, !dbg !10574
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10575
  %8 = load i32* %7, align 8, !dbg !10575
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10575
  store i32 %8, i32* %9, align 8, !dbg !10575
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10576
  %11 = load i64* %10, align 8, !dbg !10576
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10576
  store i64 %11, i64* %12, align 8, !dbg !10576
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10577
  %14 = load i32* %13, align 4, !dbg !10577
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10577
  store i32 %14, i32* %15, align 4, !dbg !10577
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10578
  %17 = load i32* %16, align 8, !dbg !10578
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10578
  store i32 %17, i32* %18, align 8, !dbg !10578
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10579
  %20 = load i64* %19, align 8, !dbg !10579
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10579
  store i64 %20, i64* %21, align 8, !dbg !10579
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10580
  %23 = load i64* %22, align 8, !dbg !10580
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10580
  store i64 %23, i64* %24, align 8, !dbg !10580
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10581
  %26 = load i64* %25, align 8, !dbg !10581
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10581
  store i64 %26, i64* %27, align 8, !dbg !10581
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10582
  %29 = load i64* %28, align 8, !dbg !10582
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10582
  store i64 %29, i64* %30, align 8, !dbg !10582
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10583
  %32 = load i64* %31, align 8, !dbg !10583
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10583
  store i64 %32, i64* %33, align 8, !dbg !10583
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10584
  %35 = load i64* %34, align 8, !dbg !10584
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10584
  store i64 %35, i64* %36, align 8, !dbg !10584
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10585
  %38 = load i64* %37, align 8, !dbg !10585
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10585
  store i64 %38, i64* %39, align 8, !dbg !10585
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10586
  %41 = load i64* %40, align 8, !dbg !10586
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10586
  store i64 %41, i64* %42, align 8, !dbg !10586
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10587
  %44 = load i64* %43, align 8, !dbg !10587
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10587
  store i64 %44, i64* %45, align 8, !dbg !10587
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10588
  %47 = load i64* %46, align 8, !dbg !10588
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10588
  store i64 %47, i64* %48, align 8, !dbg !10588
  ret i32 %0, !dbg !10589
}

define weak i32 @stat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind, !dbg !10590
  ret i32 %0, !dbg !10590
}

define i32 @stat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10592
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10593
  %2 = load i64* %1, align 8, !dbg !10593
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10593
  store i64 %2, i64* %3, align 8, !dbg !10593
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10595
  %5 = load i64* %4, align 8, !dbg !10595
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10595
  store i64 %5, i64* %6, align 8, !dbg !10595
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10596
  %8 = load i32* %7, align 8, !dbg !10596
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10596
  store i32 %8, i32* %9, align 8, !dbg !10596
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10597
  %11 = load i64* %10, align 8, !dbg !10597
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10597
  store i64 %11, i64* %12, align 8, !dbg !10597
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10598
  %14 = load i32* %13, align 4, !dbg !10598
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10598
  store i32 %14, i32* %15, align 4, !dbg !10598
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10599
  %17 = load i32* %16, align 8, !dbg !10599
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10599
  store i32 %17, i32* %18, align 8, !dbg !10599
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10600
  %20 = load i64* %19, align 8, !dbg !10600
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10600
  store i64 %20, i64* %21, align 8, !dbg !10600
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10601
  %23 = load i64* %22, align 8, !dbg !10601
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10601
  store i64 %23, i64* %24, align 8, !dbg !10601
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10602
  %26 = load i64* %25, align 8, !dbg !10602
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10602
  store i64 %26, i64* %27, align 8, !dbg !10602
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10603
  %29 = load i64* %28, align 8, !dbg !10603
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10603
  store i64 %29, i64* %30, align 8, !dbg !10603
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10604
  %32 = load i64* %31, align 8, !dbg !10604
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10604
  store i64 %32, i64* %33, align 8, !dbg !10604
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10605
  %35 = load i64* %34, align 8, !dbg !10605
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10605
  store i64 %35, i64* %36, align 8, !dbg !10605
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10606
  %38 = load i64* %37, align 8, !dbg !10606
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10606
  store i64 %38, i64* %39, align 8, !dbg !10606
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10607
  %41 = load i64* %40, align 8, !dbg !10607
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10607
  store i64 %41, i64* %42, align 8, !dbg !10607
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10608
  %44 = load i64* %43, align 8, !dbg !10608
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10608
  store i64 %44, i64* %45, align 8, !dbg !10608
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10609
  %47 = load i64* %46, align 8, !dbg !10609
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10609
  store i64 %47, i64* %48, align 8, !dbg !10609
  ret i32 %0, !dbg !10610
}

define i32 @__xstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10611
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10612
  %2 = load i64* %1, align 8, !dbg !10612
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10612
  store i64 %2, i64* %3, align 8, !dbg !10612
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10614
  %5 = load i64* %4, align 8, !dbg !10614
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10614
  store i64 %5, i64* %6, align 8, !dbg !10614
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10615
  %8 = load i32* %7, align 8, !dbg !10615
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10615
  store i32 %8, i32* %9, align 8, !dbg !10615
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10616
  %11 = load i64* %10, align 8, !dbg !10616
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10616
  store i64 %11, i64* %12, align 8, !dbg !10616
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10617
  %14 = load i32* %13, align 4, !dbg !10617
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10617
  store i32 %14, i32* %15, align 4, !dbg !10617
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10618
  %17 = load i32* %16, align 8, !dbg !10618
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10618
  store i32 %17, i32* %18, align 8, !dbg !10618
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10619
  %20 = load i64* %19, align 8, !dbg !10619
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10619
  store i64 %20, i64* %21, align 8, !dbg !10619
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10620
  %23 = load i64* %22, align 8, !dbg !10620
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10620
  store i64 %23, i64* %24, align 8, !dbg !10620
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10621
  %26 = load i64* %25, align 8, !dbg !10621
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10621
  store i64 %26, i64* %27, align 8, !dbg !10621
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10622
  %29 = load i64* %28, align 8, !dbg !10622
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10622
  store i64 %29, i64* %30, align 8, !dbg !10622
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10623
  %32 = load i64* %31, align 8, !dbg !10623
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10623
  store i64 %32, i64* %33, align 8, !dbg !10623
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10624
  %35 = load i64* %34, align 8, !dbg !10624
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10624
  store i64 %35, i64* %36, align 8, !dbg !10624
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10625
  %38 = load i64* %37, align 8, !dbg !10625
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10625
  store i64 %38, i64* %39, align 8, !dbg !10625
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10626
  %41 = load i64* %40, align 8, !dbg !10626
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10626
  store i64 %41, i64* %42, align 8, !dbg !10626
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10627
  %44 = load i64* %43, align 8, !dbg !10627
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10627
  store i64 %44, i64* %45, align 8, !dbg !10627
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10628
  %47 = load i64* %46, align 8, !dbg !10628
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10628
  store i64 %47, i64* %48, align 8, !dbg !10628
  ret i32 %0, !dbg !10629
}

define weak i64 @lseek64(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !10630
  ret i64 %0, !dbg !10630
}

define i64 @lseek(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !10632
  ret i64 %0, !dbg !10632
}

define weak i32 @open64(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !10634
  %1 = icmp eq i32 %0, 0, !dbg !10634
  br i1 %1, label %bb8, label %bb, !dbg !10634

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !10635
  call void @llvm.va_start(i8* %ap12), !dbg !10635
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !10636
  %3 = load i32* %2, align 8, !dbg !10636
  %4 = icmp ugt i32 %3, 47, !dbg !10636
  br i1 %4, label %bb4, label %bb3, !dbg !10636

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !10636
  %6 = load i8** %5, align 8, !dbg !10636
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !10636
  %8 = add i64 %7, %tmp, !dbg !10636
  %9 = inttoptr i64 %8 to i8*, !dbg !10636
  %10 = add i32 %3, 8, !dbg !10636
  store i32 %10, i32* %2, align 8, !dbg !10636
  br label %bb5, !dbg !10636

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !10636
  %12 = load i8** %11, align 8, !dbg !10636
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !10636
  store i8* %13, i8** %11, align 8, !dbg !10636
  br label %bb5, !dbg !10636

bb5:                                              ; preds = %bb4, %bb3
  %addr.32.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.32.0 to i32*, !dbg !10636
  %15 = load i32* %14, align 4, !dbg !10636
  call void @llvm.va_end(i8* %ap12), !dbg !10637
  br label %bb8, !dbg !10637

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !10638
  ret i32 %16, !dbg !10638
}

define i64 @getdents(i32 %fd, %struct.dirent* %dirp, i64 %nbytes) nounwind {
entry:
  %0 = trunc i64 %nbytes to i32, !dbg !10639
  %1 = tail call i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %0) nounwind, !dbg !10639
  %2 = sext i32 %1 to i64, !dbg !10639
  %3 = icmp sgt i32 %1, 0, !dbg !10640
  br i1 %3, label %bb, label %bb3, !dbg !10640

bb:                                               ; preds = %entry
  %4 = bitcast %struct.dirent* %dirp to i8*, !dbg !10641
  %5 = getelementptr inbounds i8* %4, i64 %2, !dbg !10641
  %6 = bitcast i8* %5 to %struct.dirent*, !dbg !10641
  %7 = icmp ugt %struct.dirent* %6, %dirp, !dbg !10642
  br i1 %7, label %bb1, label %bb3, !dbg !10642

bb1:                                              ; preds = %bb1, %bb
  %dp64.05 = phi %struct.dirent* [ %13, %bb1 ], [ %dirp, %bb ]
  %8 = getelementptr inbounds %struct.dirent* %dp64.05, i64 0, i32 2, !dbg !10643
  %9 = bitcast %struct.dirent* %dp64.05 to i8*, !dbg !10644
  %10 = load i16* %8, align 8, !dbg !10644
  %11 = zext i16 %10 to i64, !dbg !10644
  %12 = getelementptr inbounds i8* %9, i64 %11, !dbg !10644
  %13 = bitcast i8* %12 to %struct.dirent*, !dbg !10644
  %14 = icmp ult i8* %12, %5, !dbg !10642
  br i1 %14, label %bb1, label %bb3, !dbg !10642

bb3:                                              ; preds = %bb1, %bb, %entry
  ret i64 %2, !dbg !10645
}

define i32 @statfs(i8* %path, %struct.statfs* %buf32) nounwind {
entry:
  %0 = tail call i32 @__fd_statfs(i8* %path, %struct.statfs* %buf32) nounwind, !dbg !10646
  ret i32 %0, !dbg !10646
}

define i32 @ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = tail call i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind, !dbg !10648
  ret i32 %0, !dbg !10648
}

declare i32 @__xstat64(i32, i8*, %struct.stat*) nounwind

define i32 @native_read_file(i8* %path, i32 %flags, i8** nocapture %_buf) nounwind {
entry:
  %s = alloca %struct.stat, align 8
  %0 = call i32 @__xstat64(i32 1, i8* %path, %struct.stat* %s) nounwind, !dbg !10650
  %1 = icmp eq i32 %0, -1, !dbg !10652
  br i1 %1, label %bb8, label %bb1, !dbg !10652

bb1:                                              ; preds = %entry
  %2 = getelementptr inbounds %struct.stat* %s, i64 0, i32 8, !dbg !10653
  %3 = load i64* %2, align 8, !dbg !10653
  %4 = call noalias i8* @malloc(i64 %3) nounwind, !dbg !10653
  store i8* %4, i8** %_buf, align 8, !dbg !10653
  %5 = call i64 (i64, ...)* @syscall(i64 2, i8* %path, i32 %flags, i32 0) nounwind, !dbg !10654
  %6 = trunc i64 %5 to i32, !dbg !10654
  %7 = icmp eq i32 %6, -1, !dbg !10655
  br i1 %7, label %bb8, label %bb6, !dbg !10655

bb4:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8* %4, i64 %13, !dbg !10656
  %9 = call i64 (i64, ...)* @syscall(i64 0, i32 %6, i8* %8, i64 %14) nounwind, !dbg !10656
  %10 = trunc i64 %9 to i32, !dbg !10656
  %11 = icmp slt i32 %10, 1, !dbg !10657
  br i1 %11, label %bb7, label %bb5, !dbg !10657

bb5:                                              ; preds = %bb4
  %12 = add nsw i32 %10, %cnt.0, !dbg !10658
  br label %bb6, !dbg !10658

bb6:                                              ; preds = %bb5, %bb1
  %cnt.0 = phi i32 [ %12, %bb5 ], [ 0, %bb1 ]
  %13 = sext i32 %cnt.0 to i64, !dbg !10659
  %14 = load i64* %2, align 8, !dbg !10659
  %15 = icmp slt i64 %13, %14, !dbg !10659
  br i1 %15, label %bb4, label %bb7, !dbg !10659

bb7:                                              ; preds = %bb6, %bb4
  %16 = call i64 (i64, ...)* @syscall(i64 3, i32 %6) nounwind, !dbg !10660
  %17 = load i64* %2, align 8, !dbg !10661
  %18 = trunc i64 %17 to i32, !dbg !10661
  br label %bb8, !dbg !10661

bb8:                                              ; preds = %bb7, %bb1, %entry
  %.0 = phi i32 [ %18, %bb7 ], [ -1, %entry ], [ -1, %bb1 ]
  ret i32 %.0, !dbg !10662
}

define void @__fill_blocks(%struct.exe_disk_file_t* nocapture %dfile, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, i32 %do_memset) nounwind {
entry:
  %file = alloca i8*, align 8
  %0 = icmp eq i32 %do_memset, 0, !dbg !10663
  %1 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10664
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10665
  br label %bb22, !dbg !10666

bb:                                               ; preds = %bb22
  %scevgep40 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 1
  %3 = load i32* %scevgep40, align 4, !dbg !10667
  switch i32 %3, label %bb20 [
    i32 0, label %bb1
    i32 1, label %bb6
    i32 2, label %bb11
  ], !dbg !10667

bb1:                                              ; preds = %bb
  %4 = load i32* %scevgep39, align 8, !dbg !10668
  br i1 %0, label %bb5.preheader, label %bb2, !dbg !10663

bb5.preheader:                                    ; preds = %bb1
  %5 = icmp eq i32 %4, 0, !dbg !10668
  br i1 %5, label %bb21, label %bb4, !dbg !10668

bb2:                                              ; preds = %bb1
  %6 = zext i32 %4 to i64, !dbg !10664
  %7 = load i32* %scevgep3738, align 8, !dbg !10664
  %8 = load i8** %1, align 8, !dbg !10664
  %9 = load i32* %scevgep3536, align 8, !dbg !10664
  %10 = zext i32 %9 to i64, !dbg !10664
  %11 = getelementptr inbounds i8* %8, i64 %10, !dbg !10664
  %12 = trunc i32 %7 to i8, !dbg !10664
  %13 = zext i8 %12 to i32
  %14 = call i8* @memset(i8* %11, i32 %13, i64 %6)
  br label %bb21, !dbg !10664

bb4:                                              ; preds = %bb4, %bb5.preheader
  %j.028 = phi i32 [ %tmp32, %bb4 ], [ 0, %bb5.preheader ]
  %tmp32 = add i32 %j.028, 1
  %15 = load i8** %1, align 8, !dbg !10669
  %16 = load i32* %scevgep3536, align 8, !dbg !10669
  %17 = add i32 %16, %j.028, !dbg !10669
  %18 = zext i32 %17 to i64, !dbg !10669
  %19 = getelementptr inbounds i8* %15, i64 %18, !dbg !10669
  %20 = load i8* %19, align 1, !dbg !10669
  %21 = load i32* %scevgep3738, align 8, !dbg !10669
  %22 = trunc i32 %21 to i8, !dbg !10669
  %23 = icmp eq i8 %20, %22, !dbg !10669
  %24 = zext i1 %23 to i64, !dbg !10669
  call void @klee_assume(i64 %24) nounwind, !dbg !10669
  %25 = load i32* %scevgep39, align 8, !dbg !10668
  %26 = icmp ugt i32 %25, %tmp32, !dbg !10668
  br i1 %26, label %bb4, label %bb21, !dbg !10668

bb6:                                              ; preds = %bb
  %27 = load i32* %scevgep39, align 8, !dbg !10670
  br i1 %0, label %bb10.preheader, label %bb7, !dbg !10671

bb10.preheader:                                   ; preds = %bb6
  %28 = icmp eq i32 %27, 0, !dbg !10670
  br i1 %28, label %bb21, label %bb9, !dbg !10670

bb7:                                              ; preds = %bb6
  %29 = zext i32 %27 to i64, !dbg !10672
  %30 = load i8** %scevgep37, align 8, !dbg !10672
  %31 = load i8** %1, align 8, !dbg !10672
  %32 = load i32* %scevgep3536, align 8, !dbg !10672
  %33 = zext i32 %32 to i64, !dbg !10672
  %34 = getelementptr inbounds i8* %31, i64 %33, !dbg !10672
  %35 = call i8* @memcpy(i8* %34, i8* %30, i64 %29)
  br label %bb21, !dbg !10672

bb9:                                              ; preds = %bb9, %bb10.preheader
  %36 = phi i32 [ %tmp31, %bb9 ], [ 0, %bb10.preheader ]
  %tmp31 = add i32 %36, 1
  %37 = load i8** %1, align 8, !dbg !10673
  %38 = load i32* %scevgep3536, align 8, !dbg !10673
  %39 = add i32 %38, %36, !dbg !10673
  %40 = zext i32 %39 to i64, !dbg !10673
  %41 = getelementptr inbounds i8* %37, i64 %40, !dbg !10673
  %42 = load i8* %41, align 1, !dbg !10673
  %43 = load i8** %scevgep37, align 8, !dbg !10673
  %44 = zext i32 %36 to i64, !dbg !10673
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !10673
  %46 = load i8* %45, align 1, !dbg !10673
  %47 = icmp eq i8 %42, %46, !dbg !10673
  %48 = zext i1 %47 to i64, !dbg !10673
  call void @klee_assume(i64 %48) nounwind, !dbg !10673
  %49 = load i32* %scevgep39, align 8, !dbg !10670
  %50 = icmp ugt i32 %49, %tmp31, !dbg !10670
  br i1 %50, label %bb9, label %bb21, !dbg !10670

bb11:                                             ; preds = %bb
  %51 = load i8** %scevgep37, align 8, !dbg !10674
  %52 = call i32 @native_read_file(i8* %51, i32 0, i8** %file) nounwind, !dbg !10674
  %53 = icmp slt i32 %52, 0, !dbg !10675
  br i1 %53, label %bb12, label %bb13, !dbg !10675

bb12:                                             ; preds = %bb11
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8]* @.str427, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn 
  unreachable, !dbg !10675

bb13:                                             ; preds = %bb11
  %54 = load i32* %2, align 8, !dbg !10665
  %55 = load i32* %scevgep3536, align 8, !dbg !10665
  %56 = add i32 %55, %52, !dbg !10665
  %57 = icmp ult i32 %54, %56, !dbg !10665
  br i1 %57, label %bb14, label %bb15, !dbg !10665

bb14:                                             ; preds = %bb13
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8]* @.str2429, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10665

bb15:                                             ; preds = %bb13
  br i1 %0, label %bb19.preheader, label %bb16, !dbg !10676

bb19.preheader:                                   ; preds = %bb15
  %58 = icmp eq i32 %52, 0, !dbg !10677
  br i1 %58, label %bb21, label %bb18.lr.ph, !dbg !10677

bb18.lr.ph:                                       ; preds = %bb19.preheader
  %59 = load i8** %file, align 8, !dbg !10678
  %60 = load i8** %1, align 8, !dbg !10678
  %61 = zext i32 %55 to i64, !dbg !10678
  %62 = getelementptr inbounds i8* %60, i64 %61, !dbg !10678
  %63 = load i8* %62, align 1, !dbg !10678
  %64 = load i8* %59, align 1, !dbg !10678
  %65 = icmp eq i8 %63, %64, !dbg !10678
  %66 = zext i1 %65 to i64, !dbg !10678
  call void @klee_assume(i64 %66) nounwind, !dbg !10678
  %exitcond3 = icmp eq i32 %52, 1
  br i1 %exitcond3, label %bb21, label %bb18.bb18_crit_edge.lr.ph, !dbg !10677

bb18.bb18_crit_edge.lr.ph:                        ; preds = %bb18.lr.ph
  %tmp8 = zext i32 %52 to i64
  %tmp9 = add i64 %tmp8, -1
  br label %bb18.bb18_crit_edge

bb16:                                             ; preds = %bb15
  %67 = sext i32 %52 to i64, !dbg !10679
  %68 = load i8** %file, align 8, !dbg !10679
  %69 = load i8** %1, align 8, !dbg !10679
  %70 = zext i32 %55 to i64, !dbg !10679
  %71 = getelementptr inbounds i8* %69, i64 %70, !dbg !10679
  %72 = call i8* @memcpy(i8* %71, i8* %68, i64 %67)
  br label %bb21, !dbg !10679

bb18.bb18_crit_edge:                              ; preds = %bb18.bb18_crit_edge, %bb18.bb18_crit_edge.lr.ph
  %indvar = phi i64 [ 0, %bb18.bb18_crit_edge.lr.ph ], [ %tmp, %bb18.bb18_crit_edge ]
  %tmp = add i64 %indvar, 1
  %scevgep = getelementptr i8* %59, i64 %tmp
  %tmp12 = trunc i64 %tmp to i32
  %.pre = load i32* %scevgep3536, align 8
  %73 = load i8** %1, align 8, !dbg !10678
  %tmp30 = add i32 %.pre, %tmp12
  %74 = zext i32 %tmp30 to i64, !dbg !10678
  %75 = getelementptr inbounds i8* %73, i64 %74, !dbg !10678
  %76 = load i8* %75, align 1, !dbg !10678
  %77 = load i8* %scevgep, align 1, !dbg !10678
  %78 = icmp eq i8 %76, %77, !dbg !10678
  %79 = zext i1 %78 to i64, !dbg !10678
  call void @klee_assume(i64 %79) nounwind, !dbg !10678
  %exitcond10 = icmp eq i64 %tmp, %tmp9
  br i1 %exitcond10, label %bb21, label %bb18.bb18_crit_edge, !dbg !10677

bb20:                                             ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8]* @.str3430, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10680

bb21:                                             ; preds = %bb18.bb18_crit_edge, %bb16, %bb18.lr.ph, %bb19.preheader, %bb9, %bb7, %bb10.preheader, %bb4, %bb2, %bb5.preheader
  %indvar.next34 = add i64 %indvar33, 1
  br label %bb22, !dbg !10666

bb22:                                             ; preds = %bb21, %entry
  %indvar33 = phi i64 [ %indvar.next34, %bb21 ], [ 0, %entry ]
  %i.0 = trunc i64 %indvar33 to i32
  %scevgep39 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 2
  %scevgep37 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 3, i32 0
  %scevgep3738 = bitcast i8** %scevgep37 to i32*
  %scevgep3536 = getelementptr inbounds %struct.fill_info_t* %fill_info, i64 %indvar33, i32 0
  %80 = icmp ult i32 %i.0, %n_fill_info, !dbg !10666
  br i1 %80, label %bb, label %return, !dbg !10666

return:                                           ; preds = %bb22
  ret void, !dbg !10681
}

define internal fastcc void @__create_new_dfile(%struct.exe_disk_file_t* nocapture %dfile, i32 %size, i8* %contents, i8* %name, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, %struct.stat* nocapture %defaults, i32 %is_foreign) nounwind {
entry:
  %sname = alloca [256 x i8], align 1
  %src_name = alloca [256 x i8], align 1
  %originalStat = alloca %struct.stat, align 8
  %0 = call noalias i8* @malloc(i64 144) nounwind, !dbg !10682
  %1 = bitcast i8* %0 to %struct.stat*, !dbg !10682
  %2 = load i8* %name, align 1, !dbg !10683
  %3 = icmp eq i8 %2, 0, !dbg !10683
  %4 = getelementptr inbounds [256 x i8]* %sname, i64 0, i64 0, !dbg !10684
  br i1 %3, label %bb2, label %bb, !dbg !10683

bb:                                               ; preds = %bb, %entry
  %indvar57 = phi i64 [ %tmp4, %bb ], [ 0, %entry ]
  %5 = phi i8 [ %6, %bb ], [ %2, %entry ]
  %tmp4 = add i64 %indvar57, 1
  %scevgep6 = getelementptr [256 x i8]* %sname, i64 0, i64 %indvar57
  %scevgep60 = getelementptr i8* %name, i64 %tmp4
  store i8 %5, i8* %scevgep6, align 1, !dbg !10685
  %6 = load i8* %scevgep60, align 1, !dbg !10683
  %7 = icmp eq i8 %6, 0, !dbg !10683
  br i1 %7, label %bb2.loopexit, label %bb, !dbg !10683

bb2.loopexit:                                     ; preds = %bb
  %scevgep5 = getelementptr [256 x i8]* %sname, i64 0, i64 %tmp4
  br label %bb2

bb2:                                              ; preds = %bb2.loopexit, %entry
  %.lcssa50 = phi i8* [ %4, %entry ], [ %scevgep5, %bb2.loopexit ]
  %8 = call i8* @memcpy(i8* %.lcssa50, i8* getelementptr inbounds ([6 x i8]* @.str4431, i64 0, i64 0), i64 6)
  %9 = icmp eq i8* %contents, null, !dbg !10686
  %10 = icmp eq i32 %size, 0, !dbg !10686
  %11 = and i1 %9, %10, !dbg !10686
  br i1 %11, label %bb5, label %bb6, !dbg !10686

bb5:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str5432, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10686

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10687
  store i32 %size, i32* %12, align 8, !dbg !10687
  %13 = zext i32 %size to i64, !dbg !10688
  %14 = call noalias i8* @malloc(i64 %13) nounwind, !dbg !10688
  br i1 %9, label %bb8, label %bb7, !dbg !10689

bb7:                                              ; preds = %bb6
  %15 = call i8* @memcpy(i8* %14, i8* %contents, i64 %13)
  %16 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10690
  store i8* %contents, i8** %16, align 8, !dbg !10690
  br label %bb9, !dbg !10690

bb8:                                              ; preds = %bb6
  %17 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10688
  store i8* %14, i8** %17, align 8, !dbg !10688
  br label %bb9, !dbg !10688

bb9:                                              ; preds = %bb8, %bb7
  %18 = phi i8* [ %contents, %bb7 ], [ %14, %bb8 ]
  %original_file.0 = phi i8* [ %14, %bb7 ], [ null, %bb8 ]
  %19 = icmp eq i32 %n_fill_info, 0, !dbg !10691
  br i1 %19, label %bb12, label %bb10, !dbg !10691

bb10:                                             ; preds = %bb9
  %20 = call i32 @klee_zest_enabled() nounwind, !dbg !10691
  %21 = icmp eq i32 %20, 0, !dbg !10691
  br i1 %21, label %bb10.bb12_crit_edge, label %bb11, !dbg !10691

bb10.bb12_crit_edge:                              ; preds = %bb10
  %.pre = load i32* %12, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1
  %.pre61 = load i8** %.phi.trans.insert, align 8
  br label %bb12

bb11:                                             ; preds = %bb10
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 1) nounwind, !dbg !10692
  %22 = load i32* %12, align 8, !dbg !10693
  %23 = zext i32 %22 to i64, !dbg !10693
  %24 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10693
  %25 = load i8** %24, align 8, !dbg !10693
  call void @klee_make_symbolic(i8* %25, i64 %23, i8* %name) nounwind, !dbg !10693
  br label %bb13, !dbg !10693

bb12:                                             ; preds = %bb10.bb12_crit_edge, %bb9
  %26 = phi i8* [ %.pre61, %bb10.bb12_crit_edge ], [ %18, %bb9 ]
  %27 = phi i32 [ %.pre, %bb10.bb12_crit_edge ], [ %size, %bb9 ]
  %28 = zext i32 %27 to i64, !dbg !10694
  call void @klee_make_symbolic(i8* %26, i64 %28, i8* %name) nounwind, !dbg !10694
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 0) nounwind, !dbg !10695
  br label %bb13, !dbg !10695

bb13:                                             ; preds = %bb12, %bb11
  br i1 %9, label %bb18, label %bb16.preheader, !dbg !10696

bb16.preheader:                                   ; preds = %bb13
  %29 = load i32* %12, align 8, !dbg !10697
  %30 = icmp eq i32 %29, 0, !dbg !10697
  br i1 %30, label %bb17, label %bb15.lr.ph, !dbg !10697

bb15.lr.ph:                                       ; preds = %bb16.preheader
  %31 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10698
  br label %bb15

bb15:                                             ; preds = %bb15, %bb15.lr.ph
  %32 = phi i32 [ 0, %bb15.lr.ph ], [ %tmp, %bb15 ]
  %tmp = add i32 %32, 1
  %33 = load i8** %31, align 8, !dbg !10698
  %34 = zext i32 %32 to i64, !dbg !10698
  %35 = getelementptr inbounds i8* %33, i64 %34, !dbg !10698
  %36 = load i8* %35, align 1, !dbg !10698
  %37 = getelementptr inbounds i8* %original_file.0, i64 %34, !dbg !10698
  %38 = load i8* %37, align 1, !dbg !10698
  %39 = icmp eq i8 %36, %38, !dbg !10698
  %40 = zext i1 %39 to i64, !dbg !10698
  call void @klee_prefer_cex(i8* %33, i64 %40) nounwind, !dbg !10698
  %41 = load i32* %12, align 8, !dbg !10697
  %42 = icmp ugt i32 %41, %tmp, !dbg !10697
  br i1 %42, label %bb15, label %bb17, !dbg !10697

bb17:                                             ; preds = %bb15, %bb16.preheader
  call void @free(i8* %original_file.0) nounwind, !dbg !10699
  br label %bb18, !dbg !10699

bb18:                                             ; preds = %bb17, %bb13
  %43 = call i32 @klee_shadow_enabled() nounwind, !dbg !10700
  %44 = icmp eq i32 %43, 0, !dbg !10700
  br i1 %44, label %bb21, label %bb19, !dbg !10700

bb19:                                             ; preds = %bb18
  %45 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %1) nounwind, !dbg !10701
  %46 = icmp eq i32 %45, -1, !dbg !10702
  br i1 %46, label %bb20, label %bb21, !dbg !10702

bb20:                                             ; preds = %bb19
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8]* @.str6433, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10702

bb21:                                             ; preds = %bb19, %bb18
  %47 = getelementptr inbounds i8* %0, i64 48
  %48 = bitcast i8* %47 to i64*, !dbg !10703
  store i64 %13, i64* %48, align 8, !dbg !10703
  call void @klee_make_symbolic(i8* %0, i64 144, i8* %4) nounwind, !dbg !10704
  %49 = getelementptr inbounds i8* %0, i64 8
  %50 = bitcast i8* %49 to i64*, !dbg !10705
  %51 = load i64* %50, align 8, !dbg !10705
  %52 = call i32 @klee_is_symbolic(i64 %51) nounwind, !dbg !10705
  %53 = icmp eq i32 %52, 0, !dbg !10705
  %54 = load i64* %50, align 8, !dbg !10705
  br i1 %53, label %bb23, label %bb25, !dbg !10705

bb23:                                             ; preds = %bb21
  %55 = and i64 %54, 2147483647, !dbg !10705
  %56 = icmp eq i64 %55, 0, !dbg !10705
  br i1 %56, label %bb24, label %bb25, !dbg !10705

bb24:                                             ; preds = %bb23
  %57 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 1, !dbg !10706
  %58 = load i64* %57, align 8, !dbg !10706
  store i64 %58, i64* %50, align 8, !dbg !10706
  br label %bb25, !dbg !10706

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %59 = phi i64 [ %58, %bb24 ], [ %54, %bb23 ], [ %54, %bb21 ]
  %60 = and i64 %59, 2147483647, !dbg !10707
  %61 = icmp ne i64 %60, 0, !dbg !10707
  %62 = zext i1 %61 to i64, !dbg !10707
  call void @klee_assume(i64 %62) nounwind, !dbg !10707
  %63 = call i32 @klee_shadow_enabled() nounwind, !dbg !10708
  %64 = icmp eq i32 %63, 0, !dbg !10708
  %65 = getelementptr inbounds i8* %0, i64 56
  %66 = bitcast i8* %65 to i64*, !dbg !10709
  %67 = load i64* %66, align 8, !dbg !10709
  br i1 %64, label %bb29, label %bb26, !dbg !10708

bb26:                                             ; preds = %bb25
  %68 = icmp eq i64 %67, 4096, !dbg !10709
  %69 = zext i1 %68 to i64, !dbg !10709
  call void @klee_assume(i64 %69) nounwind, !dbg !10709
  %70 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %originalStat) nounwind, !dbg !10710
  %71 = icmp eq i32 %70, -1, !dbg !10711
  br i1 %71, label %bb27, label %bb28, !dbg !10711

bb27:                                             ; preds = %bb26
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8]* @.str7434, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1428, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10711

bb28:                                             ; preds = %bb26
  %72 = load i64* %50, align 8, !dbg !10712
  %73 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 1, !dbg !10712
  %74 = load i64* %73, align 8, !dbg !10712
  %75 = icmp eq i64 %72, %74, !dbg !10712
  %76 = zext i1 %75 to i64, !dbg !10712
  call void @klee_assume(i64 %76) nounwind, !dbg !10712
  %77 = load i64* %48, align 8, !dbg !10713
  %78 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 8, !dbg !10713
  %79 = load i64* %78, align 8, !dbg !10713
  %80 = icmp eq i64 %77, %79, !dbg !10713
  %81 = zext i1 %80 to i64, !dbg !10713
  call void @klee_assume(i64 %81) nounwind, !dbg !10713
  br label %bb30, !dbg !10713

bb29:                                             ; preds = %bb25
  %82 = icmp ult i64 %67, 65536, !dbg !10714
  %83 = zext i1 %82 to i64, !dbg !10714
  call void @klee_assume(i64 %83) nounwind, !dbg !10714
  br label %bb30, !dbg !10714

bb30:                                             ; preds = %bb29, %bb28
  %84 = bitcast i8* %0 to i64*, !dbg !10715
  %85 = load i64* %84, align 8, !dbg !10715
  %86 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 0, !dbg !10715
  %87 = load i64* %86, align 8, !dbg !10715
  %88 = icmp eq i64 %85, %87, !dbg !10715
  %89 = zext i1 %88 to i64, !dbg !10715
  call void @klee_prefer_cex(i8* %0, i64 %89) nounwind, !dbg !10715
  %90 = getelementptr inbounds i8* %0, i64 40
  %91 = bitcast i8* %90 to i64*, !dbg !10716
  %92 = load i64* %91, align 8, !dbg !10716
  %93 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 7, !dbg !10716
  %94 = load i64* %93, align 8, !dbg !10716
  %95 = icmp eq i64 %92, %94, !dbg !10716
  %96 = zext i1 %95 to i64, !dbg !10716
  call void @klee_prefer_cex(i8* %0, i64 %96) nounwind, !dbg !10716
  %97 = call i32 @klee_shadow_enabled() nounwind, !dbg !10717
  %98 = icmp eq i32 %97, 0, !dbg !10717
  %99 = getelementptr inbounds i8* %0, i64 24
  %100 = bitcast i8* %99 to i32*, !dbg !10718
  %101 = load i32* %100, align 8, !dbg !10718
  br i1 %98, label %bb32, label %bb31, !dbg !10717

bb31:                                             ; preds = %bb30
  %102 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 3, !dbg !10718
  %103 = load i32* %102, align 8, !dbg !10718
  %104 = icmp eq i32 %101, %103, !dbg !10718
  %105 = zext i1 %104 to i64, !dbg !10718
  call void @klee_prefer_cex(i8* %0, i64 %105) nounwind, !dbg !10718
  br label %bb33, !dbg !10718

bb32:                                             ; preds = %bb30
  %106 = and i32 %101, -61952, !dbg !10719
  %107 = icmp eq i32 %106, 0, !dbg !10719
  %108 = zext i1 %107 to i64, !dbg !10719
  call void @klee_prefer_cex(i8* %0, i64 %108) nounwind, !dbg !10719
  %109 = load i32* %100, align 8, !dbg !10720
  %110 = and i32 %109, 448, !dbg !10720
  %111 = icmp eq i32 %110, 384, !dbg !10720
  %112 = zext i1 %111 to i64, !dbg !10720
  call void @klee_prefer_cex(i8* %0, i64 %112) nounwind, !dbg !10720
  %113 = load i32* %100, align 8, !dbg !10721
  %114 = and i32 %113, 56, !dbg !10721
  %115 = icmp eq i32 %114, 16, !dbg !10721
  %116 = zext i1 %115 to i64, !dbg !10721
  call void @klee_prefer_cex(i8* %0, i64 %116) nounwind, !dbg !10721
  %117 = load i32* %100, align 8, !dbg !10722
  %118 = and i32 %117, 7, !dbg !10722
  %119 = icmp eq i32 %118, 2, !dbg !10722
  %120 = zext i1 %119 to i64, !dbg !10722
  call void @klee_prefer_cex(i8* %0, i64 %120) nounwind, !dbg !10722
  %121 = load i32* %100, align 8, !dbg !10723
  %122 = and i32 %121, 61440, !dbg !10723
  %123 = icmp eq i32 %122, 32768, !dbg !10723
  %124 = zext i1 %123 to i64, !dbg !10723
  call void @klee_prefer_cex(i8* %0, i64 %124) nounwind, !dbg !10723
  br label %bb33, !dbg !10723

bb33:                                             ; preds = %bb32, %bb31
  %125 = getelementptr inbounds i8* %0, i64 16
  %126 = bitcast i8* %125 to i64*, !dbg !10724
  %127 = load i64* %126, align 8, !dbg !10724
  %128 = icmp eq i64 %127, 1, !dbg !10724
  %129 = zext i1 %128 to i64, !dbg !10724
  call void @klee_prefer_cex(i8* %0, i64 %129) nounwind, !dbg !10724
  %130 = getelementptr inbounds i8* %0, i64 28
  %131 = bitcast i8* %130 to i32*, !dbg !10725
  %132 = load i32* %131, align 4, !dbg !10725
  %133 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 4, !dbg !10725
  %134 = load i32* %133, align 4, !dbg !10725
  %135 = icmp eq i32 %132, %134, !dbg !10725
  %136 = zext i1 %135 to i64, !dbg !10725
  call void @klee_prefer_cex(i8* %0, i64 %136) nounwind, !dbg !10725
  %137 = getelementptr inbounds i8* %0, i64 32
  %138 = bitcast i8* %137 to i32*, !dbg !10726
  %139 = load i32* %138, align 8, !dbg !10726
  %140 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 5, !dbg !10726
  %141 = load i32* %140, align 8, !dbg !10726
  %142 = icmp eq i32 %139, %141, !dbg !10726
  %143 = zext i1 %142 to i64, !dbg !10726
  call void @klee_prefer_cex(i8* %0, i64 %143) nounwind, !dbg !10726
  %144 = load i64* %66, align 8, !dbg !10727
  %145 = icmp eq i64 %144, 4096, !dbg !10727
  %146 = zext i1 %145 to i64, !dbg !10727
  call void @klee_prefer_cex(i8* %0, i64 %146) nounwind, !dbg !10727
  %147 = getelementptr inbounds i8* %0, i64 72
  %148 = bitcast i8* %147 to i64*, !dbg !10728
  %149 = load i64* %148, align 8, !dbg !10728
  %150 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 11, i32 0, !dbg !10728
  %151 = load i64* %150, align 8, !dbg !10728
  %152 = icmp eq i64 %149, %151, !dbg !10728
  %153 = zext i1 %152 to i64, !dbg !10728
  call void @klee_prefer_cex(i8* %0, i64 %153) nounwind, !dbg !10728
  %154 = getelementptr inbounds i8* %0, i64 88
  %155 = bitcast i8* %154 to i64*, !dbg !10729
  %156 = load i64* %155, align 8, !dbg !10729
  %157 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 12, i32 0, !dbg !10729
  %158 = load i64* %157, align 8, !dbg !10729
  %159 = icmp eq i64 %156, %158, !dbg !10729
  %160 = zext i1 %159 to i64, !dbg !10729
  call void @klee_prefer_cex(i8* %0, i64 %160) nounwind, !dbg !10729
  %161 = getelementptr inbounds i8* %0, i64 104
  %162 = bitcast i8* %161 to i64*, !dbg !10730
  %163 = load i64* %162, align 8, !dbg !10730
  %164 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 13, i32 0, !dbg !10730
  %165 = load i64* %164, align 8, !dbg !10730
  %166 = icmp eq i64 %163, %165, !dbg !10730
  %167 = zext i1 %166 to i64, !dbg !10730
  call void @klee_prefer_cex(i8* %0, i64 %167) nounwind, !dbg !10730
  br i1 %9, label %bb39, label %bb34, !dbg !10731

bb34:                                             ; preds = %bb33
  %168 = load i64* %48, align 8, !dbg !10732
  %169 = icmp sgt i64 %168, %13, !dbg !10732
  %int_cast_to_i64 = bitcast i64 63 to i64
  %170 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %170, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb34
  %.lobit = lshr i64 %168, 63
  %171 = zext i1 %169 to i64
  %172 = or i64 %171, %.lobit
  %iftmp.35.0 = xor i64 %172, 1
  call void @klee_assume(i64 %iftmp.35.0) nounwind, !dbg !10732
  br label %bb40, !dbg !10732

bb39:                                             ; preds = %bb33
  %173 = load i32* %12, align 8, !dbg !10733
  %174 = zext i32 %173 to i64, !dbg !10733
  store i64 %174, i64* %48, align 8, !dbg !10733
  br label %bb40, !dbg !10733

bb40:                                             ; preds = %bb39, %klee_overshift_check.exit
  %175 = getelementptr inbounds i8* %0, i64 64
  %176 = bitcast i8* %175 to i64*, !dbg !10734
  store i64 8, i64* %176, align 8, !dbg !10734
  %177 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 3, !dbg !10735
  store %struct.stat* %1, %struct.stat** %177, align 8, !dbg !10735
  %178 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 4, !dbg !10736
  store %struct.exe_sockaddr_t* null, %struct.exe_sockaddr_t** %178, align 8, !dbg !10736
  %179 = icmp eq i32 %is_foreign, 0, !dbg !10737
  br i1 %179, label %return, label %bb41, !dbg !10737

bb41:                                             ; preds = %bb40
  %180 = load i32* %100, align 8, !dbg !10738
  %181 = and i32 %180, 61440, !dbg !10738
  %182 = icmp eq i32 %181, 49152, !dbg !10738
  %183 = zext i1 %182 to i64, !dbg !10738
  call void @klee_assume(i64 %183) nounwind, !dbg !10738
  %184 = load i8* %name, align 1, !dbg !10739
  %185 = icmp eq i8 %184, 0, !dbg !10739
  %186 = getelementptr inbounds [256 x i8]* %src_name, i64 0, i64 0, !dbg !10740
  br i1 %185, label %bb44, label %bb42, !dbg !10739

bb42:                                             ; preds = %bb42, %bb41
  %indvar = phi i64 [ %tmp10, %bb42 ], [ 0, %bb41 ]
  %187 = phi i8 [ %188, %bb42 ], [ %184, %bb41 ]
  %tmp10 = add i64 %indvar, 1
  %scevgep12 = getelementptr [256 x i8]* %src_name, i64 0, i64 %indvar
  %scevgep = getelementptr i8* %name, i64 %tmp10
  store i8 %187, i8* %scevgep12, align 1, !dbg !10741
  %188 = load i8* %scevgep, align 1, !dbg !10739
  %189 = icmp eq i8 %188, 0, !dbg !10739
  br i1 %189, label %bb44.loopexit, label %bb42, !dbg !10739

bb44.loopexit:                                    ; preds = %bb42
  %scevgep11 = getelementptr [256 x i8]* %src_name, i64 0, i64 %tmp10
  br label %bb44

bb44:                                             ; preds = %bb44.loopexit, %bb41
  %.lcssa = phi i8* [ %186, %bb41 ], [ %scevgep11, %bb44.loopexit ]
  %190 = call i8* @memcpy(i8* %.lcssa, i8* getelementptr inbounds ([5 x i8]* @.str8435, i64 0, i64 0), i64 5)
  %191 = call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10742
  %192 = bitcast i8* %191 to %struct.exe_sockaddr_t*, !dbg !10742
  store %struct.exe_sockaddr_t* %192, %struct.exe_sockaddr_t** %178, align 8, !dbg !10742
  %193 = call noalias i8* @malloc(i64 128) nounwind, !dbg !10743
  %194 = bitcast i8* %193 to %struct.sockaddr_storage*, !dbg !10743
  %195 = bitcast i8* %191 to %struct.sockaddr_storage**, !dbg !10743
  store %struct.sockaddr_storage* %194, %struct.sockaddr_storage** %195, align 8, !dbg !10743
  call void @klee_make_symbolic(i8* %193, i64 128, i8* %186) nounwind, !dbg !10744
  %196 = getelementptr inbounds i8* %193, i64 2
  %197 = bitcast i8* %196 to i16*, !dbg !10745
  %198 = load i16* %197, align 2, !dbg !10745
  %199 = icmp ne i16 %198, 0, !dbg !10745
  %200 = zext i1 %199 to i64, !dbg !10745
  call void @klee_assume(i64 %200) nounwind, !dbg !10745
  %201 = load i16* %197, align 2, !dbg !10746
  %202 = icmp ne i16 %201, 0, !dbg !10746
  %203 = zext i1 %202 to i64, !dbg !10746
  call void @klee_assume(i64 %203) nounwind, !dbg !10746
  br label %return, !dbg !10746

return:                                           ; preds = %bb44, %bb40
  ret void, !dbg !10747
}

define %struct.exe_disk_file_t* @klee_init_cp_file(i8* %path, i32 %flags) nounwind {
entry:
  %def = alloca %struct.stat, align 8
  %buf = alloca i8*, align 8
  %0 = call i32 @native_read_file(i8* %path, i32 %flags, i8** %buf) nounwind, !dbg !10748
  %1 = icmp slt i32 %0, 0, !dbg !10749
  br i1 %1, label %bb7, label %bb1, !dbg !10749

bb1:                                              ; preds = %entry
  %2 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9436, i64 0, i64 0), %struct.stat* %def) nounwind, !dbg !10750
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10752
  %4 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10753
  br label %bb5, !dbg !10752

bb2:                                              ; preds = %bb5
  %scevgep = getelementptr %struct.exe_disk_file_t* %4, i64 %20, i32 3
  %5 = load %struct.stat** %scevgep, align 8, !dbg !10753
  %6 = icmp eq %struct.stat* %5, null, !dbg !10753
  br i1 %6, label %bb3, label %bb4, !dbg !10753

bb3:                                              ; preds = %bb2
  %7 = load i8** %buf, align 8, !dbg !10754
  %8 = getelementptr inbounds %struct.exe_disk_file_t* %4, i64 %20, !dbg !10754
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %8, i32 %0, i8* %7, i8* %path, %struct.fill_info_t* null, i32 0, %struct.stat* %def, i32 0) nounwind, !dbg !10754
  %9 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10755
  %10 = call i64 @strlen(i8* %path) nounwind readonly, !dbg !10755
  %11 = add i64 %10, 1, !dbg !10755
  %12 = call noalias i8* @malloc(i64 %11) nounwind, !dbg !10755
  %13 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 %20, i32 2, !dbg !10755
  store i8* %12, i8** %13, align 8, !dbg !10755
  %14 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10756
  %15 = getelementptr inbounds %struct.exe_disk_file_t* %14, i64 %20, i32 2, !dbg !10756
  %16 = load i8** %15, align 8, !dbg !10756
  %17 = call i8* @strcpy(i8* noalias %16, i8* noalias %path) nounwind, !dbg !10756
  %18 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10757
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 %20, !dbg !10757
  br label %bb7, !dbg !10757

bb4:                                              ; preds = %bb2
  %indvar.next = add i64 %20, 1
  br label %bb5, !dbg !10752

bb5:                                              ; preds = %bb4, %bb1
  %20 = phi i64 [ %indvar.next, %bb4 ], [ 0, %bb1 ]
  %k.0 = trunc i64 %20 to i32
  %21 = icmp ugt i32 %3, %k.0, !dbg !10752
  br i1 %21, label %bb2, label %bb7, !dbg !10752

bb7:                                              ; preds = %bb5, %bb3, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %19, %bb3 ], [ null, %entry ], [ null, %bb5 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !10758
}

define void @klee_init_fds(i32 %n_files, i32 %file_length, i32 %sym_stdout_flag, i32 %save_all_writes_flag, i32 %n_streams, i32 %stream_len, i32 %n_dgrams, i32 %dgram_len, i32 %max_failures, i32 %one_line_streams, %struct.fill_info_t* %stream_fill_info, 
entry:
  %x.i = alloca i32, align 4
  %name = alloca [7 x i8], align 1
  %sname = alloca [8 x i8], align 1
  %dname = alloca [7 x i8], align 1
  %s = alloca %struct.stat, align 8
  %0 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 0, !dbg !10759
  store i8 63, i8* %0, align 1, !dbg !10759
  %1 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 1, !dbg !10759
  store i8 45, i8* %1, align 1, !dbg !10759
  %2 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 2, !dbg !10759
  store i8 100, i8* %2, align 1, !dbg !10759
  %3 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 3, !dbg !10759
  store i8 97, i8* %3, align 1, !dbg !10759
  %4 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 4, !dbg !10759
  store i8 116, i8* %4, align 1, !dbg !10759
  %5 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 5, !dbg !10759
  store i8 97, i8* %5, align 1, !dbg !10759
  %6 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 6, !dbg !10759
  store i8 0, i8* %6, align 1, !dbg !10759
  %7 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 0, !dbg !10760
  store i8 83, i8* %7, align 1, !dbg !10760
  %8 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 1, !dbg !10760
  store i8 84, i8* %8, align 1, !dbg !10760
  %9 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 2, !dbg !10760
  store i8 82, i8* %9, align 1, !dbg !10760
  %10 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 3, !dbg !10760
  store i8 69, i8* %10, align 1, !dbg !10760
  %11 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 4, !dbg !10760
  store i8 65, i8* %11, align 1, !dbg !10760
  %12 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 5, !dbg !10760
  store i8 77, i8* %12, align 1, !dbg !10760
  %13 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 6, !dbg !10760
  store i8 63, i8* %13, align 1, !dbg !10760
  %14 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 7, !dbg !10760
  store i8 0, i8* %14, align 1, !dbg !10760
  %15 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 0, !dbg !10761
  store i8 68, i8* %15, align 1, !dbg !10761
  %16 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 1, !dbg !10761
  store i8 71, i8* %16, align 1, !dbg !10761
  %17 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 2, !dbg !10761
  store i8 82, i8* %17, align 1, !dbg !10761
  %18 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 3, !dbg !10761
  store i8 65, i8* %18, align 1, !dbg !10761
  %19 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 4, !dbg !10761
  store i8 77, i8* %19, align 1, !dbg !10761
  %20 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 5, !dbg !10761
  store i8 63, i8* %20, align 1, !dbg !10761
  %21 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 6, !dbg !10761
  store i8 0, i8* %21, align 1, !dbg !10761
  %22 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9436, i64 0, i64 0), %struct.stat* %s) nounwind, !dbg !10762
  store %struct.fill_info_t* %stream_fill_info, %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10764
  store i32 %n_stream_fill_info, i32* @__n_stream_fill_info, align 4, !dbg !10765
  store %struct.fill_info_t* %dgram_fill_info, %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10766
  store i32 %n_dgram_fill_info, i32* @__n_dgram_fill_info, align 4, !dbg !10767
  store i32 %n_files, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 32, !dbg !10768
  %23 = zext i32 %n_files to i64, !dbg !10769
  %24 = mul i64 %23, 40, !dbg !10769
  %25 = call noalias i8* @malloc(i64 %24) nounwind, !dbg !10769
  %26 = bitcast i8* %25 to %struct.exe_disk_file_t*, !dbg !10769
  store %struct.exe_disk_file_t* %26, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !10769
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 1), align 4, !dbg !10770
  %27 = icmp eq i32 %n_files, 0, !dbg !10771
  br i1 %27, label %bb3, label %bb.preheader, !dbg !10771

bb.preheader:                                     ; preds = %entry
  store i8 65, i8* %0, align 1, !dbg !10772
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %26, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10773
  %exitcond491 = icmp eq i32 %n_files, 1
  br i1 %exitcond491, label %bb3, label %bb.bb_crit_edge.lr.ph, !dbg !10771

bb.bb_crit_edge.lr.ph:                            ; preds = %bb.preheader
  %tmp5 = add i64 %23, -1
  br label %bb.bb_crit_edge

bb.bb_crit_edge:                                  ; preds = %bb.bb_crit_edge, %bb.bb_crit_edge.lr.ph
  %indvar3 = phi i64 [ 0, %bb.bb_crit_edge.lr.ph ], [ %tmp7, %bb.bb_crit_edge ]
  %tmp7 = add i64 %indvar3, 1
  %tmp9 = add i64 %indvar3, 66
  %tmp51 = trunc i64 %tmp9 to i8
  %.pre = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8
  store i8 %tmp51, i8* %0, align 1, !dbg !10772
  %scevgep52 = getelementptr %struct.exe_disk_file_t* %.pre, i64 %tmp7
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep52, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10773
  %exitcond6 = icmp eq i64 %tmp7, %tmp5
  br i1 %exitcond6, label %bb3, label %bb.bb_crit_edge, !dbg !10771

bb3:                                              ; preds = %bb.bb_crit_edge, %bb.preheader, %entry
  store i32 10, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10774
  %28 = call noalias i8* @malloc(i64 400) nounwind, !dbg !10775
  %29 = bitcast i8* %28 to %struct.exe_disk_file_t*, !dbg !10775
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10775
  %30 = call i8* @memset(i8* %28, i32 0, i64 400)
  %31 = icmp eq i32 %file_length, 0, !dbg !10776
  br i1 %31, label %bb5, label %bb4, !dbg !10776

bb4:                                              ; preds = %bb3
  %32 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10777
  %33 = bitcast i8* %32 to %struct.exe_disk_file_t*, !dbg !10777
  store %struct.exe_disk_file_t* %33, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10777
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %33, i32 %file_length, i8* null, i8* getelementptr inbounds ([6 x i8]* @.str13438, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10778
  %34 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10779
  store %struct.exe_disk_file_t* %34, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 3), align 16, !dbg !10779
  br label %bb6, !dbg !10779

bb5:                                              ; preds = %bb3
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10780
  br label %bb6, !dbg !10780

bb6:                                              ; preds = %bb5, %bb4
  store i32 %max_failures, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !10781
  %35 = icmp eq i32 %max_failures, 0, !dbg !10782
  br i1 %35, label %bb8, label %bb7, !dbg !10782

bb7:                                              ; preds = %bb6
  %36 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10783
  %37 = bitcast i8* %36 to i32*, !dbg !10783
  store i32* %37, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 32, !dbg !10783
  %38 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10784
  %39 = bitcast i8* %38 to i32*, !dbg !10784
  store i32* %39, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10784
  %40 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10785
  %41 = bitcast i8* %40 to i32*, !dbg !10785
  store i32* %41, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10785
  %42 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10786
  %43 = bitcast i8* %42 to i32*, !dbg !10786
  store i32* %43, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10786
  %44 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10787
  %45 = bitcast i8* %44 to i32*, !dbg !10787
  store i32* %45, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10787
  call void @klee_make_symbolic(i8* %36, i64 4, i8* getelementptr inbounds ([10 x i8]* @.str14439, i64 0, i64 0)) nounwind, !dbg !10788
  %46 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10789
  %47 = bitcast i32* %46 to i8*, !dbg !10789
  call void @klee_make_symbolic(i8* %47, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str15440, i64 0, i64 0)) nounwind, !dbg !10789
  %48 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10790
  %49 = bitcast i32* %48 to i8*, !dbg !10790
  call void @klee_make_symbolic(i8* %49, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str16441, i64 0, i64 0)) nounwind, !dbg !10790
  %50 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10791
  %51 = bitcast i32* %50 to i8*, !dbg !10791
  call void @klee_make_symbolic(i8* %51, i64 4, i8* getelementptr inbounds ([15 x i8]* @.str17442, i64 0, i64 0)) nounwind, !dbg !10791
  %52 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10792
  %53 = bitcast i32* %52 to i8*, !dbg !10792
  call void @klee_make_symbolic(i8* %53, i64 4, i8* getelementptr inbounds ([12 x i8]* @.str18443, i64 0, i64 0)) nounwind, !dbg !10792
  br label %bb8, !dbg !10792

bb8:                                              ; preds = %bb7, %bb6
  %54 = icmp eq i32 %sym_stdout_flag, 0, !dbg !10793
  br i1 %54, label %bb10, label %bb9, !dbg !10793

bb9:                                              ; preds = %bb8
  %55 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10794
  %56 = bitcast i8* %55 to %struct.exe_disk_file_t*, !dbg !10794
  store %struct.exe_disk_file_t* %56, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10794
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %56, i32 1024, i8* null, i8* getelementptr inbounds ([7 x i8]* @.str19444, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10795
  %57 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10796
  store %struct.exe_disk_file_t* %57, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 3), align 8, !dbg !10796
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 32, !dbg !10797
  br label %bb11, !dbg !10797

bb10:                                             ; preds = %bb8
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10798
  br label %bb11, !dbg !10798

bb11:                                             ; preds = %bb10, %bb9
  store i32 %save_all_writes_flag, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !10799
  %x1.i = bitcast i32* %x.i to i8*, !dbg !10800
  call void @klee_make_symbolic(i8* %x1.i, i64 4, i8* getelementptr inbounds ([14 x i8]* @.str20445, i64 0, i64 0)) nounwind, !dbg !10800
  %58 = load i32* %x.i, align 4, !dbg !10802
  store i32 %58, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10801
  %59 = call i32 @klee_shadow_enabled() nounwind, !dbg !10803
  %60 = icmp eq i32 %59, 0, !dbg !10803
  br i1 %60, label %bb12, label %bb13, !dbg !10803

bb12:                                             ; preds = %bb11
  %61 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10804
  %62 = icmp eq i32 %61, 1, !dbg !10804
  %63 = zext i1 %62 to i64, !dbg !10804
  call void @klee_assume(i64 %63) nounwind, !dbg !10804
  br label %bb13, !dbg !10804

bb13:                                             ; preds = %bb12, %bb11
  store i32 %n_streams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10805
  %64 = zext i32 %n_streams to i64, !dbg !10806
  %65 = mul i64 %64, 40, !dbg !10806
  %66 = call noalias i8* @malloc(i64 %65) nounwind, !dbg !10806
  %67 = bitcast i8* %66 to %struct.exe_disk_file_t*, !dbg !10806
  store %struct.exe_disk_file_t* %67, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10806
  %68 = icmp eq i8* %66, null, !dbg !10807
  br i1 %68, label %bb14, label %bb19.preheader, !dbg !10807

bb14:                                             ; preds = %bb13
  call void @klee_warning(i8* getelementptr inbounds ([37 x i8]* @.str21446, i64 0, i64 0)) nounwind, !dbg !10808
  br label %bb19.preheader, !dbg !10808

bb19.preheader:                                   ; preds = %bb14, %bb13
  %69 = icmp eq i32 %n_streams, 0, !dbg !10809
  br i1 %69, label %bb20, label %bb16, !dbg !10809

bb16:                                             ; preds = %bb16, %bb19.preheader
  %indvar39 = phi i64 [ 0, %bb19.preheader ], [ %indvar.next40, %bb16 ]
  %tmp13 = add i64 %indvar39, 49
  %tmp44 = trunc i64 %tmp13 to i8
  %70 = call i64 @strlen(i8* %7) nounwind readonly, !dbg !10810
  %71 = add i64 %70, -1, !dbg !10810
  %72 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 %71, !dbg !10810
  store i8 %tmp44, i8* %72, align 1, !dbg !10810
  %73 = load i32* @__n_stream_fill_info, align 4, !dbg !10811
  %74 = load %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10811
  %75 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10811
  %scevgep45 = getelementptr %struct.exe_disk_file_t* %75, i64 %indvar39
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep45, i32 %stream_len, i8* null, i8* %7, %struct.fill_info_t* %74, i32 %73, %struct.stat* %s, i32 1) nounwind, !dbg !10811
  %indvar.next40 = add i64 %indvar39, 1
  %exitcond12 = icmp eq i64 %indvar.next40, %64
  br i1 %exitcond12, label %bb20, label %bb16, !dbg !10809

bb20:                                             ; preds = %bb16, %bb19.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10812
  store i32 %n_dgrams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !10813
  %76 = zext i32 %n_dgrams to i64, !dbg !10814
  %77 = mul i64 %76, 40, !dbg !10814
  %78 = call noalias i8* @malloc(i64 %77) nounwind, !dbg !10814
  %79 = bitcast i8* %78 to %struct.exe_disk_file_t*, !dbg !10814
  store %struct.exe_disk_file_t* %79, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10814
  %80 = icmp eq i8* %78, null, !dbg !10815
  br i1 %80, label %bb21, label %bb26.preheader, !dbg !10815

bb21:                                             ; preds = %bb20
  call void @klee_warning(i8* getelementptr inbounds ([36 x i8]* @.str22447, i64 0, i64 0)) nounwind, !dbg !10816
  br label %bb26.preheader, !dbg !10816

bb26.preheader:                                   ; preds = %bb21, %bb20
  %81 = icmp eq i32 %n_dgrams, 0, !dbg !10817
  br i1 %81, label %bb27, label %bb23, !dbg !10817

bb23:                                             ; preds = %bb23, %bb26.preheader
  %indvar = phi i64 [ 0, %bb26.preheader ], [ %indvar.next, %bb23 ]
  %tmp18 = add i64 %indvar, 49
  %tmp38 = trunc i64 %tmp18 to i8
  %82 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !10818
  %83 = add i64 %82, -1, !dbg !10818
  %84 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 %83, !dbg !10818
  store i8 %tmp38, i8* %84, align 1, !dbg !10818
  %85 = load i32* @__n_dgram_fill_info, align 4, !dbg !10819
  %86 = load %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10819
  %87 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10819
  %scevgep = getelementptr %struct.exe_disk_file_t* %87, i64 %indvar
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep, i32 %dgram_len, i8* null, i8* %15, %struct.fill_info_t* %86, i32 %85, %struct.stat* %s, i32 1) nounwind, !dbg !10819
  %indvar.next = add i64 %indvar, 1
  %exitcond17 = icmp eq i64 %indvar.next, %76
  br i1 %exitcond17, label %bb27, label %bb23, !dbg !10817

bb27:                                             ; preds = %bb23, %bb26.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !10820
  %88 = call i64 (i64, ...)* @syscall(i64 8, i32 0, i64 0, i32 1) nounwind, !dbg !10821
  %89 = icmp eq i64 %88, -1, !dbg !10822
  br i1 %89, label %bb30, label %bb29, !dbg !10822

bb29:                                             ; preds = %bb27
  store i64 %88, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 2), align 8, !dbg !10823
  br label %bb30, !dbg !10823

bb30:                                             ; preds = %bb29, %bb27
  %90 = call i64 (i64, ...)* @syscall(i64 8, i32 1, i64 0, i32 1) nounwind, !dbg !10821
  %91 = icmp eq i64 %90, -1, !dbg !10822
  br i1 %91, label %bb30.1, label %bb29.1, !dbg !10822

bb30.1:                                           ; preds = %bb29.1, %bb30
  %92 = call i64 (i64, ...)* @syscall(i64 8, i32 2, i64 0, i32 1) nounwind, !dbg !10821
  %93 = icmp eq i64 %92, -1, !dbg !10822
  br i1 %93, label %bb30.2, label %bb29.2, !dbg !10822

bb29.1:                                           ; preds = %bb30
  store i64 %90, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 2), align 8, !dbg !10823
  br label %bb30.1, !dbg !10823

bb30.2:                                           ; preds = %bb29.2, %bb30.1
  ret void, !dbg !10824

bb29.2:                                           ; preds = %bb30.1
  store i64 %92, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 2, i32 2), align 8, !dbg !10823
  br label %bb30.2, !dbg !10823
}

define void @klee_overshift_check(i64 %bitWidth, i64 %shift) nounwind {
entry:
  %0 = icmp ult i64 %shift, %bitWidth, !dbg !10825
  br i1 %0, label %return, label %bb, !dbg !10825

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str450, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind,
  unreachable, !dbg !10827

return:                                           ; preds = %entry
  ret void, !dbg !10828
}

define void @klee_mark_arg_symbolic(i32 %argc, i8** nocapture %argv) nounwind {
entry:
  %tmpStat = alloca %struct.stat, align 8
  %0 = call i32 @klee_shadow_enabled() nounwind, !dbg !10829
  %1 = call i32 @klee_shadow_replay_standalone() nounwind, !dbg !10830
  %2 = icmp sgt i32 %argc, 1, !dbg !10831
  br i1 %2, label %bb.lr.ph, label %return, !dbg !10831

bb.lr.ph:                                         ; preds = %entry
  %3 = icmp eq i32 %0, 0, !dbg !10832
  %4 = icmp eq i32 %1, 0, !dbg !10833
  %tmp23 = add i32 %argc, -2
  %tmp7 = zext i32 %tmp23 to i64
  %tmp8 = add i64 %tmp7, 1
  br label %bb

bb:                                               ; preds = %bb12, %bb.lr.ph
  %indvar21 = phi i64 [ 0, %bb.lr.ph ], [ %tmp9, %bb12 ]
  %argv_i.117 = phi i8* [ null, %bb.lr.ph ], [ %argv_i.0, %bb12 ]
  %tmp9 = add i64 %indvar21, 1
  %scevgep28 = getelementptr i8** %argv, i64 %tmp9
  %5 = load i8** %scevgep28, align 8, !dbg !10834
  br label %bb.i, !dbg !10835

bb.i:                                             ; preds = %bb.i, %bb
  %6 = phi i64 [ %indvar.next.i, %bb.i ], [ 0, %bb ]
  %scevgep.i = getelementptr i8* %5, i64 %6
  %7 = load i8* %scevgep.i, align 1, !dbg !10836
  %8 = icmp eq i8 %7, 0, !dbg !10836
  %indvar.next.i = add i64 %6, 1
  br i1 %8, label %my_strlen.exit, label %bb.i, !dbg !10836

my_strlen.exit:                                   ; preds = %bb.i
  %i.0.i = trunc i64 %6 to i32
  %.pre29 = add nsw i32 %i.0.i, 1, !dbg !10837
  %.pre30 = sext i32 %.pre29 to i64, !dbg !10837
  br i1 %3, label %bb2, label %bb1, !dbg !10832

bb1:                                              ; preds = %my_strlen.exit
  %9 = call noalias i8* @malloc(i64 %.pre30) nounwind, !dbg !10838
  %10 = call i8* @memcpy(i8* %9, i8* %5, i64 %.pre30)
  br label %bb2, !dbg !10839

bb2:                                              ; preds = %bb1, %my_strlen.exit
  %argv_i.0 = phi i8* [ %9, %bb1 ], [ %argv_i.117, %my_strlen.exit ]
  call void @klee_make_symbolic(i8* %5, i64 %.pre30, i8* getelementptr inbounds ([5 x i8]* @.str454, i64 0, i64 0)) nounwind, !dbg !10837
  %11 = load i8** %scevgep28, align 8, !dbg !10840
  %12 = sext i32 %i.0.i to i64, !dbg !10840
  %13 = getelementptr inbounds i8* %11, i64 %12, !dbg !10840
  %14 = load i8* %13, align 1, !dbg !10840
  %15 = icmp eq i8 %14, 0, !dbg !10840
  %16 = zext i1 %15 to i64, !dbg !10840
  call void @klee_assume(i64 %16) nounwind, !dbg !10840
  br i1 %3, label %bb12, label %bb5.preheader, !dbg !10841

bb5.preheader:                                    ; preds = %bb2
  %17 = icmp sgt i32 %.pre29, 0, !dbg !10842
  br i1 %17, label %bb4.lr.ph, label %bb6, !dbg !10842

bb4.lr.ph:                                        ; preds = %bb5.preheader
  %tmp2 = and i64 %indvar.next.i, 4294967295
  br label %bb4

bb4:                                              ; preds = %bb4, %bb4.lr.ph
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4 ]
  %scevgep = getelementptr i8* %argv_i.0, i64 %indvar
  %18 = load i8** %scevgep28, align 8, !dbg !10843
  %scevgep20 = getelementptr i8* %18, i64 %indvar
  %19 = load i8* %scevgep20, align 1, !dbg !10843
  %20 = load i8* %scevgep, align 1, !dbg !10843
  %21 = icmp eq i8 %19, %20, !dbg !10843
  %22 = zext i1 %21 to i64, !dbg !10843
  call void @klee_prefer_cex(i8* %18, i64 %22) nounwind, !dbg !10843
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp2
  br i1 %exitcond3, label %bb6, label %bb4, !dbg !10842

bb6:                                              ; preds = %bb4, %bb5.preheader
  br i1 %4, label %bb11, label %bb7, !dbg !10833

bb7:                                              ; preds = %bb6
  %23 = call i32 @__xstat64(i32 1, i8* %argv_i.0, %struct.stat* %tmpStat) nounwind, !dbg !10844
  %24 = icmp eq i32 %23, 0, !dbg !10846
  br i1 %24, label %bb9, label %bb11, !dbg !10846

bb9:                                              ; preds = %bb7
  %25 = load i8** %scevgep28, align 8, !dbg !10847
  %26 = call i32 (i8*, i32, ...)* @open(i8* %25, i32 0) nounwind, !dbg !10847
  %27 = icmp eq i32 %26, -1, !dbg !10848
  br i1 %27, label %bb11, label %bb10, !dbg !10848

bb10:                                             ; preds = %bb9
  %28 = call i32 @close(i32 %26) nounwind, !dbg !10849
  br label %bb11, !dbg !10849

bb11:                                             ; preds = %bb10, %bb9, %bb7, %bb6
  call void @free(i8* %argv_i.0) nounwind, !dbg !10850
  br label %bb12, !dbg !10850

bb12:                                             ; preds = %bb11, %bb2
  %exitcond = icmp eq i64 %tmp9, %tmp8
  br i1 %exitcond, label %return, label %bb, !dbg !10831

return:                                           ; preds = %bb12, %entry
  ret void, !dbg !10851
}

declare i32 @klee_shadow_replay_standalone()

define void @klee_div_zero_check(i64 %z) nounwind {
entry:
  %0 = tail call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind, !dbg !10852
  %1 = icmp eq i64 %z, 0, !dbg !10854
  br i1 %1, label %bb, label %bb1, !dbg !10854

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str456, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1457, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2458, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !10855

bb1:                                              ; preds = %entry
  tail call void @klee_disable_symbex() nounwind, !dbg !10856
  ret void, !dbg !10857
}

declare i32 @klee_enable_symbex(...)

declare void @klee_disable_symbex()

define i32 @klee_range(i32 %start, i32 %end, i8* %name) nounwind {
entry:
  %x = alloca i32, align 4
  %0 = icmp slt i32 %start, %end, !dbg !10858
  br i1 %0, label %bb1, label %bb, !dbg !10858

bb:                                               ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([13 x i8]* @.str460, i64 0, i64 0), i32 17, i8* getelementptr inbounds ([14 x i8]* @.str1461, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2462, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !10859

bb1:                                              ; preds = %entry
  %1 = add nsw i32 %start, 1, !dbg !10860
  %2 = icmp eq i32 %1, %end, !dbg !10860
  br i1 %2, label %bb8, label %bb3, !dbg !10860

bb3:                                              ; preds = %bb1
  %x4 = bitcast i32* %x to i8*, !dbg !10861
  call void @klee_make_symbolic(i8* %x4, i64 4, i8* %name) nounwind, !dbg !10861
  %3 = icmp eq i32 %start, 0, !dbg !10862
  %4 = load i32* %x, align 4, !dbg !10863
  br i1 %3, label %bb5, label %bb6, !dbg !10862

bb5:                                              ; preds = %bb3
  %5 = icmp ult i32 %4, %end, !dbg !10863
  %6 = zext i1 %5 to i64, !dbg !10863
  call void @klee_assume(i64 %6) nounwind, !dbg !10863
  br label %bb7, !dbg !10863

bb6:                                              ; preds = %bb3
  %7 = icmp sge i32 %4, %start, !dbg !10864
  %8 = zext i1 %7 to i64, !dbg !10864
  call void @klee_assume(i64 %8) nounwind, !dbg !10864
  %9 = load i32* %x, align 4, !dbg !10865
  %10 = icmp slt i32 %9, %end, !dbg !10865
  %11 = zext i1 %10 to i64, !dbg !10865
  call void @klee_assume(i64 %11) nounwind, !dbg !10865
  br label %bb7, !dbg !10865

bb7:                                              ; preds = %bb6, %bb5
  %12 = load i32* %x, align 4, !dbg !10866
  br label %bb8, !dbg !10866

bb8:                                              ; preds = %bb7, %bb1
  %.0 = phi i32 [ %12, %bb7 ], [ %start, %bb1 ]
  ret i32 %.0, !dbg !10867
}

!llvm.dbg.sp = !{!0, !7, !48, !88, !127, !165, !171, !177, !180, !183, !184, !195, !204, !208, !219, !228, !278, !281, !286, !291, !294, !297, !306, !310, !317, !355, !394, !433, !472, !513, !554, !596, !635, !677, !689, !698, !745, !773, !780, !793, !79
!llvm.dbg.gv = !{!4274, !4279, !4280, !4283, !4284, !4288, !4289, !4290, !4291, !4293, !4294, !4295, !4296, !4297, !4298, !4299, !4301, !4302, !4303, !4304, !4305, !4306, !4307, !4309, !4310, !4311, !4313, !4314, !4315, !4320, !4322, !4356, !4358, !4359,
!llvm.dbg.enum = !{!765, !2676, !4539, !4175}
!llvm.dbg.lv.__get_file = !{!4541, !4542}
!llvm.dbg.lv.umask = !{!4545, !4546}
!llvm.dbg.lv.has_permission = !{!4548, !4549, !4550, !4552, !4553}
!llvm.dbg.lv.sendfile = !{!4554, !4555, !4556, !4557, !4558, !4560, !4561}
!llvm.dbg.lv.sendfile64 = !{!4563, !4564, !4565, !4566}
!llvm.dbg.lv.fsync = !{!4567, !4568, !4570}
!llvm.dbg.lv.chroot = !{!4572}
!llvm.dbg.lv.fstatfs = !{!4573, !4574, !4575, !4577}
!llvm.dbg.lv.fcntl = !{!4579, !4580, !4581, !4583, !4594, !4595, !4597}
!llvm.dbg.lv.futimens = !{!4599, !4600, !4601, !4603}
!llvm.dbg.lv.__df_chown = !{!4604, !4605, !4606}
!llvm.dbg.lv.fchown = !{!4607, !4608, !4609, !4610, !4612}
!llvm.dbg.lv.fchdir = !{!4614, !4615, !4617}
!llvm.dbg.lv.ioctl = !{!4619, !4620, !4621, !4623, !4624, !4625, !4627, !4645, !4655, !4657, !4698, !4700, !4702, !4704, !4712, !4730}
!llvm.dbg.lv.__undo_get_new_fd = !{!4732}
!llvm.dbg.lv.__get_new_fd = !{!4733, !4734}
!llvm.dbg.lv.select = !{!4736, !4737, !4738, !4739, !4740, !4741, !4743, !4744, !4745, !4746, !4747, !4748, !4749, !4750, !4751, !4753, !4755, !4757, !4758}
!llvm.dbg.lv.close = !{!4760, !4761, !4763}
!llvm.dbg.lv.dup2 = !{!4764, !4765, !4766, !4768, !4769, !4770}
!llvm.dbg.lv.dup = !{!4771, !4772, !4774}
!llvm.dbg.lv.__fd_getdents = !{!4776, !4777, !4778, !4779, !4781, !4783, !4784, !4785, !4787, !4789, !4790, !4791, !4793}
!llvm.dbg.lv.__fd_gather_write = !{!4795, !4796, !4797, !4798, !4800, !4802}
!llvm.dbg.lv.writev = !{!4804, !4805, !4806, !4807, !4809}
!llvm.dbg.lv.__fd_fstat = !{!4811, !4812, !4813, !4815}
!llvm.dbg.lv.__fd_scatter_read = !{!4817, !4818, !4819, !4820, !4823, !4825, !4827, !4829, !4830}
!llvm.dbg.lv.munmap = !{!4831, !4832}
!llvm.dbg.lv.pipe = !{!4833, !4834, !4837, !4838}
!llvm.dbg.lv.__concretize_ptr = !{!4839, !4840}
!llvm.dbg.lv.__concretize_string = !{!4842, !4843, !4845, !4846, !4848}
!llvm.dbg.lv.__get_sym_file_internal = !{!4850, !4851, !4852, !4853, !4855, !4856, !4858, !4860, !4861, !4863, !4865, !4866, !4870, !4871, !4873, !4874, !4875, !4877, !4878, !4880}
!llvm.dbg.lv.__get_sym_file = !{!4881}
!llvm.dbg.lv.utime = !{!4882, !4883, !4884, !4886}
!llvm.dbg.lv.readlink = !{!4887, !4888, !4889, !4890, !4892}
!llvm.dbg.lv.utimes = !{!4894, !4895, !4896, !4898}
!llvm.dbg.lv.unlink = !{!4899, !4900, !4902}
!llvm.dbg.lv.rmdir = !{!4904, !4905, !4907}
!llvm.dbg.lv.__fd_statfs = !{!4909, !4910, !4911, !4913}
!llvm.dbg.lv.openat = !{!4915, !4916, !4917, !4918, !4920, !4921, !4922, !4923}
!llvm.dbg.lv.symlink = !{!4925, !4926, !4927, !4929}
!llvm.dbg.lv.link = !{!4930, !4931, !4932, !4934}
!llvm.dbg.lv.futimesat = !{!4935, !4936, !4937, !4938, !4940, !4941}
!llvm.dbg.lv.unlinkat = !{!4942, !4943, !4944, !4945, !4947, !4948}
!llvm.dbg.lv.fstatat = !{!4949, !4950, !4951, !4952, !4953, !4955, !4956}
!llvm.dbg.lv.lchown = !{!4957, !4958, !4959, !4960, !4962}
!llvm.dbg.lv.chown = !{!4964, !4965, !4966, !4967, !4969}
!llvm.dbg.lv.chdir = !{!4971, !4972, !4974}
!llvm.dbg.lv.euidaccess = !{!4976, !4977, !4978, !4980}
!llvm.dbg.lv.access = !{!4982, !4983, !4984, !4986}
!llvm.dbg.lv.__concretize_size = !{!4988, !4989}
!llvm.dbg.lv.getcwd = !{!4991, !4992, !4993}
!llvm.dbg.lv.__fd_ftruncate = !{!4995, !4996, !4997, !4999}
!llvm.dbg.lv.__fd_lseek = !{!5001, !5002, !5003, !5004, !5006}
!llvm.dbg.lv.pread = !{!5007, !5008, !5009, !5010, !5011, !5013}
!llvm.dbg.lv.read = !{!5015, !5016, !5017, !5018, !5020, !5022}
!llvm.dbg.lv.mmap_simple = !{!5023, !5024, !5025, !5026, !5028, !5029}
!llvm.dbg.lv.mmap = !{!5030, !5031, !5032, !5033, !5034, !5035, !5036}
!llvm.dbg.lv.mmap64 = !{!5038, !5039, !5040, !5041, !5042, !5043, !5044}
!llvm.dbg.lv.__concretize_buffer = !{!5046, !5047, !5048, !5050, !5051, !5053}
!llvm.dbg.lv.__df_chmod = !{!5054, !5055}
!llvm.dbg.lv.fchmod = !{!5056, !5057, !5058, !5060}
!llvm.dbg.lv.chmod = !{!5062, !5063, !5064, !5066}
!llvm.dbg.lv.__fd_lstat = !{!5068, !5069, !5070, !5072, !5073}
!llvm.dbg.lv.__fd_stat = !{!5075, !5076, !5077, !5079, !5080}
!llvm.dbg.lv.write = !{!5082, !5083, !5084, !5085, !5087, !5089, !5090}
!llvm.dbg.lv.atoi = !{!5092}
!llvm.dbg.lv.__fd_open = !{!5093, !5094, !5095, !5096, !5098, !5099, !5100, !5102, !5107, !5108, !5109}
!llvm.dbg.lv.__fd_openat = !{!5111, !5112, !5113, !5114, !5115, !5117, !5118, !5119}
!llvm.dbg.lv.execve = !{!5121, !5122, !5123}
!llvm.dbg.lv.execvp = !{!5124, !5125}
!llvm.dbg.lv.execv = !{!5126, !5127}
!llvm.dbg.lv.execle = !{!5128, !5129}
!llvm.dbg.lv.execlp = !{!5130, !5131}
!llvm.dbg.lv.execl = !{!5132, !5133}
!llvm.dbg.lv.kill = !{!5134, !5135}
!llvm.dbg.lv.longjmp = !{!5136, !5137}
!llvm.dbg.lv._setjmp = !{!5138}
!llvm.dbg.lv.__getodigit = !{!5139}
!llvm.dbg.lv.__getxdigit = !{!5140}
!llvm.dbg.lv.__isprint = !{!5141}
!llvm.dbg.lv.__streq = !{!5142, !5143}
!llvm.dbg.lv.__get_sym_str = !{!5144, !5145, !5146, !5148}
!llvm.dbg.lv.__emit_error = !{!5149}
!llvm.dbg.lv.__str_to_int = !{!5150, !5151, !5152, !5154, !5155, !5156}
!llvm.dbg.lv.__convert_escape_sequences = !{!5157, !5158, !5160, !5161}
!llvm.dbg.lv.__add_arg = !{!5164, !5165, !5166, !5167}
!llvm.dbg.lv.klee_init_env = !{!5168, !5169, !5170, !5172, !5173, !5174, !5175, !5177, !5179, !5180, !5181, !5182, !5183, !5184, !5185, !5186, !5187, !5188, !5189, !5190, !5206, !5207, !5208, !5209, !5210, !5211, !5215, !5216, !5217, !5218, !5220, !5222,
!llvm.dbg.lv.gnu_dev_major = !{!5236}
!llvm.dbg.lv.gnu_dev_minor = !{!5237}
!llvm.dbg.lv.gnu_dev_makedev = !{!5238, !5239}
!llvm.dbg.lv.getsockopt = !{!5240, !5241, !5242, !5243, !5244}
!llvm.dbg.lv.setsockopt = !{!5245, !5246, !5247, !5248, !5249}
!llvm.dbg.lv.__fd_attach_dgram = !{!5250}
!llvm.dbg.lv.cap_get_file = !{!5251}
!llvm.dbg.lv.getenv = !{!5252}
!llvm.dbg.lv.setlocale = !{!5253, !5254}
!llvm.dbg.lv.clock_settime = !{!5255, !5256}
!llvm.dbg.lv.__fd_recvmsg = !{!5257, !5258, !5259, !5260}
!llvm.dbg.lv.recvmsg = !{!5264, !5265, !5266}
!llvm.dbg.lv.__fd_recvfrom = !{!5267, !5268, !5269, !5270, !5271, !5272, !5273, !5275, !5276}
!llvm.dbg.lv.recvfrom = !{!5277, !5278, !5279, !5280, !5281, !5282}
!llvm.dbg.lv.__fd_recv = !{!5283, !5284, !5285, !5286}
!llvm.dbg.lv.recv = !{!5287, !5288, !5289, !5290}
!llvm.dbg.lv.__fd_sendmsg = !{!5291, !5292, !5293, !5294}
!llvm.dbg.lv.sendmsg = !{!5296, !5297, !5298}
!llvm.dbg.lv.__fd_sendto = !{!5299, !5300, !5301, !5302, !5303, !5304, !5305, !5307}
!llvm.dbg.lv.sendto = !{!5308, !5309, !5310, !5311, !5312, !5313}
!llvm.dbg.lv.__fd_send = !{!5314, !5315, !5316, !5317}
!llvm.dbg.lv.send = !{!5318, !5319, !5320, !5321}
!llvm.dbg.lv.shutdown = !{!5322, !5323, !5324, !5326}
!llvm.dbg.lv.__fd_shutdown = !{!5328, !5329, !5331}
!llvm.dbg.lv.getpeername = !{!5332, !5333, !5334, !5335, !5337}
!llvm.dbg.lv.__fd_getpeername = !{!5338, !5339, !5341, !5342}
!llvm.dbg.lv.getsockname = !{!5343, !5344, !5345, !5346, !5348}
!llvm.dbg.lv.__fd_getsockname = !{!5349, !5350, !5352, !5353}
!llvm.dbg.lv.listen = !{!5354, !5355, !5356, !5358}
!llvm.dbg.lv.__fd_listen = !{!5359, !5360, !5362}
!llvm.dbg.lv.connect = !{!5363, !5364, !5365, !5366, !5368}
!llvm.dbg.lv.__fd_connect = !{!5369, !5370, !5372, !5373}
!llvm.dbg.lv.bind = !{!5374, !5375, !5376, !5377, !5379}
!llvm.dbg.lv.__fd_bind = !{!5380, !5381, !5383, !5384}
!llvm.dbg.lv.rename = !{!5385, !5386, !5387}
!llvm.dbg.lv.__allocate_sockaddr = !{!5389, !5390}
!llvm.dbg.lv.__fd_accept = !{!5391, !5392, !5393, !5394, !5396, !5397, !5398, !5400, !5401}
!llvm.dbg.lv.accept = !{!5402, !5403, !5404}
!llvm.dbg.lv.socket = !{!5405, !5406, !5407, !5408, !5410, !5411}
!llvm.dbg.lv.__fd_socket = !{!5413, !5414, !5416, !5417}
!llvm.dbg.lv.__socketcall = !{!5418, !5419}
!llvm.dbg.lv.canonicalize_file_name = !{!5420}
!llvm.dbg.lv.strverscmp = !{!5421, !5422, !5423, !5426}
!llvm.dbg.lv.clock_gettime = !{!5427, !5428, !5429}
!llvm.dbg.lv._IO_putc = !{!5437, !5438}
!llvm.dbg.lv._IO_getc = !{!5439}
!llvm.dbg.lv.__syscall_rt_sigaction = !{!5440, !5441, !5442, !5443}
!llvm.dbg.lv.__stat64_to_stat = !{!5444, !5445}
!llvm.dbg.lv.fstat64 = !{!5446, !5447}
!llvm.dbg.lv.fstat = !{!5448, !5449, !5450, !5452}
!llvm.dbg.lv.__fxstat = !{!5453, !5454, !5455, !5456, !5458}
!llvm.dbg.lv.lstat64 = !{!5459, !5460}
!llvm.dbg.lv.lstat = !{!5461, !5462, !5463, !5465}
!llvm.dbg.lv.__lxstat = !{!5466, !5467, !5468, !5469, !5471}
!llvm.dbg.lv.stat64 = !{!5472, !5473, !5474, !5475, !5476, !5477}
!llvm.dbg.lv.stat = !{!5478, !5479, !5480, !5482}
!llvm.dbg.lv.__xstat = !{!5483, !5484, !5485, !5486, !5488}
!llvm.dbg.lv.lseek64 = !{!5489, !5490, !5491}
!llvm.dbg.lv.lseek = !{!5492, !5493, !5494}
!llvm.dbg.lv.open64 = !{!5495, !5496, !5497, !5500}
!llvm.dbg.lv.open = !{!5513, !5514, !5515, !5517}
!llvm.dbg.lv.getdents = !{!5519, !5520, !5521, !5522, !5533, !5534, !5536, !5538}
!llvm.dbg.lv.statfs = !{!5539, !5540}
!llvm.dbg.lv.ftruncate = !{!5541, !5542}
!llvm.dbg.lv.__sym_uint32 = !{!5543, !5544}
!llvm.dbg.lv.native_read_file = !{!5546, !5547, !5548, !5549, !5551, !5552, !5553, !5554}
!llvm.dbg.lv.__fill_blocks = !{!5555, !5556, !5557, !5558, !5559, !5561, !5562, !5563, !5564}
!llvm.dbg.lv.__create_new_dfile = !{!5566, !5567, !5568, !5569, !5570, !5571, !5572, !5573, !5574, !5576, !5577, !5579, !5580, !5581, !5582, !5584}
!llvm.dbg.lv.klee_init_cp_file = !{!5586, !5587, !5588, !5590, !5591, !5592}
!llvm.dbg.lv.klee_init_fds = !{!5593, !5594, !5595, !5596, !5597, !5598, !5599, !5600, !5601, !5602, !5603, !5604, !5605, !5606, !5607, !5609, !5611, !5613, !5614, !5615, !5616}
!llvm.dbg.lv.klee_overshift_check = !{!5618, !5619}
!llvm.dbg.lv.my_strlen = !{!5620, !5621}
!llvm.dbg.lv.klee_mark_arg_symbolic = !{!5623, !5624, !5625, !5627, !5628, !5629, !5630, !5631, !5632, !5653}
!llvm.dbg.lv.klee_div_zero_check = !{!5655}
!llvm.dbg.lv.klee_range = !{!5656, !5657, !5658, !5659}

!0 = metadata !{i32 589870, i32 0, metadata !1, metadata !"__errno_location", metadata !"__errno_location", metadata !"__errno_location", metadata !1, i32 12, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* ()* @__errno_locati
!1 = metadata !{i32 589865, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !2} ; [ DW_TAG_file_type ]
!2 = metadata !{i32 589841, i32 0, i32 1, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!3 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4 = metadata !{metadata !5}
!5 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !6} ; [ DW_TAG_pointer_type ]
!6 = metadata !{i32 589860, metadata !1, metadata !"int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!7 = metadata !{i32 589870, i32 0, metadata !8, metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !10, i32 23, metadata !11, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__fgetc_un
!8 = metadata !{i32 589865, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!9 = metadata !{i32 589841, i32 0, i32 1, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!10 = metadata !{i32 589865, metadata !"fgetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!11 = metadata !{i32 589845, metadata !8, metadata !"", metadata !8, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !12, i32 0, null} ; [ DW_TAG_subroutine_type ]
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{i32 589860, metadata !8, metadata !"int", metadata !8, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!14 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !15} ; [ DW_TAG_pointer_type ]
!15 = metadata !{i32 589846, metadata !16, metadata !"FILE", metadata !16, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !17} ; [ DW_TAG_typedef ]
!16 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!17 = metadata !{i32 589843, metadata !8, metadata !"__STDIO_FILE_STRUCT", metadata !16, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !18, i32 0, null} ; [ DW_TAG_structure_type ]
!18 = metadata !{metadata !19, metadata !22, metadata !27, metadata !28, metadata !30, metadata !31, metadata !32, metadata !33, metadata !34, metadata !35, metadata !37, metadata !41}
!19 = metadata !{i32 589837, metadata !17, metadata !"__modeflags", metadata !20, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !21} ; [ DW_TAG_member ]
!20 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !9} ; [ DW_TAG_file_type ]
!21 = metadata !{i32 589860, metadata !8, metadata !"short unsigned int", metadata !8, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!22 = metadata !{i32 589837, metadata !17, metadata !"__ungot_width", metadata !20, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !23} ; [ DW_TAG_member ]
!23 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !24, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!24 = metadata !{i32 589860, metadata !8, metadata !"unsigned char", metadata !8, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!25 = metadata !{metadata !26}
!26 = metadata !{i32 589857, i64 0, i64 1}        ; [ DW_TAG_subrange_type ]
!27 = metadata !{i32 589837, metadata !17, metadata !"__filedes", metadata !20, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !13} ; [ DW_TAG_member ]
!28 = metadata !{i32 589837, metadata !17, metadata !"__bufstart", metadata !20, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !29} ; [ DW_TAG_member ]
!29 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !24} ; [ DW_TAG_pointer_type ]
!30 = metadata !{i32 589837, metadata !17, metadata !"__bufend", metadata !20, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !29} ; [ DW_TAG_member ]
!31 = metadata !{i32 589837, metadata !17, metadata !"__bufpos", metadata !20, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !29} ; [ DW_TAG_member ]
!32 = metadata !{i32 589837, metadata !17, metadata !"__bufread", metadata !20, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !29} ; [ DW_TAG_member ]
!33 = metadata !{i32 589837, metadata !17, metadata !"__bufgetc_u", metadata !20, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !29} ; [ DW_TAG_member ]
!34 = metadata !{i32 589837, metadata !17, metadata !"__bufputc_u", metadata !20, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !29} ; [ DW_TAG_member ]
!35 = metadata !{i32 589837, metadata !17, metadata !"__nextopen", metadata !20, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !36} ; [ DW_TAG_member ]
!36 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !17} ; [ DW_TAG_pointer_type ]
!37 = metadata !{i32 589837, metadata !17, metadata !"__ungot", metadata !20, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !38} ; [ DW_TAG_member ]
!38 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !39, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!39 = metadata !{i32 589846, metadata !40, metadata !"wchar_t", metadata !40, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !13} ; [ DW_TAG_typedef ]
!40 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !9} ; [ DW_TAG_file_type ]
!41 = metadata !{i32 589837, metadata !17, metadata !"__state", metadata !20, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !42} ; [ DW_TAG_member ]
!42 = metadata !{i32 589846, metadata !43, metadata !"__mbstate_t", metadata !43, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !44} ; [ DW_TAG_typedef ]
!43 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!44 = metadata !{i32 589843, metadata !8, metadata !"", metadata !43, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !45, i32 0, null} ; [ DW_TAG_structure_type ]
!45 = metadata !{metadata !46, metadata !47}
!46 = metadata !{i32 589837, metadata !44, metadata !"__mask", metadata !43, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !39} ; [ DW_TAG_member ]
!47 = metadata !{i32 589837, metadata !44, metadata !"__wc", metadata !43, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !39} ; [ DW_TAG_member ]
!48 = metadata !{i32 589870, i32 0, metadata !49, metadata !"__fpending", metadata !"__fpending", metadata !"__fpending", metadata !49, i32 29, metadata !51, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__fpending} ; [ DW_TAG_sub
!49 = metadata !{i32 589865, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !50} ; [ DW_TAG_file_type ]
!50 = metadata !{i32 589841, i32 0, i32 1, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!51 = metadata !{i32 589845, metadata !49, metadata !"", metadata !49, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !52, i32 0, null} ; [ DW_TAG_subroutine_type ]
!52 = metadata !{metadata !53, metadata !56}
!53 = metadata !{i32 589846, metadata !54, metadata !"size_t", metadata !54, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !55} ; [ DW_TAG_typedef ]
!54 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !50} ; [ DW_TAG_file_type ]
!55 = metadata !{i32 589860, metadata !49, metadata !"long unsigned int", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!56 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !57} ; [ DW_TAG_pointer_type ]
!57 = metadata !{i32 589846, metadata !58, metadata !"FILE", metadata !58, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !59} ; [ DW_TAG_typedef ]
!58 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!59 = metadata !{i32 589843, metadata !49, metadata !"__STDIO_FILE_STRUCT", metadata !58, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !60, i32 0, null} ; [ DW_TAG_structure_type ]
!60 = metadata !{metadata !61, metadata !64, metadata !67, metadata !69, metadata !71, metadata !72, metadata !73, metadata !74, metadata !75, metadata !76, metadata !78, metadata !81}
!61 = metadata !{i32 589837, metadata !59, metadata !"__modeflags", metadata !62, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !63} ; [ DW_TAG_member ]
!62 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !50} ; [ DW_TAG_file_type ]
!63 = metadata !{i32 589860, metadata !49, metadata !"short unsigned int", metadata !49, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!64 = metadata !{i32 589837, metadata !59, metadata !"__ungot_width", metadata !62, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !65} ; [ DW_TAG_member ]
!65 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !66, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!66 = metadata !{i32 589860, metadata !49, metadata !"unsigned char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!67 = metadata !{i32 589837, metadata !59, metadata !"__filedes", metadata !62, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !68} ; [ DW_TAG_member ]
!68 = metadata !{i32 589860, metadata !49, metadata !"int", metadata !49, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!69 = metadata !{i32 589837, metadata !59, metadata !"__bufstart", metadata !62, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !70} ; [ DW_TAG_member ]
!70 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !66} ; [ DW_TAG_pointer_type ]
!71 = metadata !{i32 589837, metadata !59, metadata !"__bufend", metadata !62, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !70} ; [ DW_TAG_member ]
!72 = metadata !{i32 589837, metadata !59, metadata !"__bufpos", metadata !62, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !70} ; [ DW_TAG_member ]
!73 = metadata !{i32 589837, metadata !59, metadata !"__bufread", metadata !62, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !70} ; [ DW_TAG_member ]
!74 = metadata !{i32 589837, metadata !59, metadata !"__bufgetc_u", metadata !62, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !70} ; [ DW_TAG_member ]
!75 = metadata !{i32 589837, metadata !59, metadata !"__bufputc_u", metadata !62, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !70} ; [ DW_TAG_member ]
!76 = metadata !{i32 589837, metadata !59, metadata !"__nextopen", metadata !62, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !77} ; [ DW_TAG_member ]
!77 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !59} ; [ DW_TAG_pointer_type ]
!78 = metadata !{i32 589837, metadata !59, metadata !"__ungot", metadata !62, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !79} ; [ DW_TAG_member ]
!79 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !80, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!80 = metadata !{i32 589846, metadata !54, metadata !"wchar_t", metadata !54, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !68} ; [ DW_TAG_typedef ]
!81 = metadata !{i32 589837, metadata !59, metadata !"__state", metadata !62, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !82} ; [ DW_TAG_member ]
!82 = metadata !{i32 589846, metadata !83, metadata !"__mbstate_t", metadata !83, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ]
!83 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!84 = metadata !{i32 589843, metadata !49, metadata !"", metadata !83, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !85, i32 0, null} ; [ DW_TAG_structure_type ]
!85 = metadata !{metadata !86, metadata !87}
!86 = metadata !{i32 589837, metadata !84, metadata !"__mask", metadata !83, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !80} ; [ DW_TAG_member ]
!87 = metadata !{i32 589837, metadata !84, metadata !"__wc", metadata !83, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !80} ; [ DW_TAG_member ]
!88 = metadata !{i32 589870, i32 0, metadata !89, metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !91, i32 20, metadata !92, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @__f
!89 = metadata !{i32 589865, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!90 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!91 = metadata !{i32 589865, metadata !"fputc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!92 = metadata !{i32 589845, metadata !89, metadata !"", metadata !89, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !93, i32 0, null} ; [ DW_TAG_subroutine_type ]
!93 = metadata !{metadata !94, metadata !94, metadata !95}
!94 = metadata !{i32 589860, metadata !89, metadata !"int", metadata !89, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!95 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !96} ; [ DW_TAG_pointer_type ]
!96 = metadata !{i32 589846, metadata !97, metadata !"FILE", metadata !97, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !98} ; [ DW_TAG_typedef ]
!97 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!98 = metadata !{i32 589843, metadata !89, metadata !"__STDIO_FILE_STRUCT", metadata !97, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !99, i32 0, null} ; [ DW_TAG_structure_type ]
!99 = metadata !{metadata !100, metadata !103, metadata !106, metadata !107, metadata !109, metadata !110, metadata !111, metadata !112, metadata !113, metadata !114, metadata !116, metadata !120}
!100 = metadata !{i32 589837, metadata !98, metadata !"__modeflags", metadata !101, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !102} ; [ DW_TAG_member ]
!101 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !90} ; [ DW_TAG_file_type ]
!102 = metadata !{i32 589860, metadata !89, metadata !"short unsigned int", metadata !89, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!103 = metadata !{i32 589837, metadata !98, metadata !"__ungot_width", metadata !101, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !104} ; [ DW_TAG_member ]
!104 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !105, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!105 = metadata !{i32 589860, metadata !89, metadata !"unsigned char", metadata !89, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!106 = metadata !{i32 589837, metadata !98, metadata !"__filedes", metadata !101, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !94} ; [ DW_TAG_member ]
!107 = metadata !{i32 589837, metadata !98, metadata !"__bufstart", metadata !101, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !108} ; [ DW_TAG_member ]
!108 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !105} ; [ DW_TAG_pointer_type ]
!109 = metadata !{i32 589837, metadata !98, metadata !"__bufend", metadata !101, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !108} ; [ DW_TAG_member ]
!110 = metadata !{i32 589837, metadata !98, metadata !"__bufpos", metadata !101, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !108} ; [ DW_TAG_member ]
!111 = metadata !{i32 589837, metadata !98, metadata !"__bufread", metadata !101, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !108} ; [ DW_TAG_member ]
!112 = metadata !{i32 589837, metadata !98, metadata !"__bufgetc_u", metadata !101, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !108} ; [ DW_TAG_member ]
!113 = metadata !{i32 589837, metadata !98, metadata !"__bufputc_u", metadata !101, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !108} ; [ DW_TAG_member ]
!114 = metadata !{i32 589837, metadata !98, metadata !"__nextopen", metadata !101, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !115} ; [ DW_TAG_member ]
!115 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !98} ; [ DW_TAG_pointer_type ]
!116 = metadata !{i32 589837, metadata !98, metadata !"__ungot", metadata !101, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !117} ; [ DW_TAG_member ]
!117 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !118, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!118 = metadata !{i32 589846, metadata !119, metadata !"wchar_t", metadata !119, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !94} ; [ DW_TAG_typedef ]
!119 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !90} ; [ DW_TAG_file_type ]
!120 = metadata !{i32 589837, metadata !98, metadata !"__state", metadata !101, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !121} ; [ DW_TAG_member ]
!121 = metadata !{i32 589846, metadata !122, metadata !"__mbstate_t", metadata !122, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !123} ; [ DW_TAG_typedef ]
!122 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!123 = metadata !{i32 589843, metadata !89, metadata !"", metadata !122, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !124, i32 0, null} ; [ DW_TAG_structure_type ]
!124 = metadata !{metadata !125, metadata !126}
!125 = metadata !{i32 589837, metadata !123, metadata !"__mask", metadata !122, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !118} ; [ DW_TAG_member ]
!126 = metadata !{i32 589837, metadata !123, metadata !"__wc", metadata !122, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !118} ; [ DW_TAG_member ]
!127 = metadata !{i32 589870, i32 0, metadata !128, metadata !"__freading", metadata !"__freading", metadata !"__freading", metadata !128, i32 16, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__freading} ; [ DW_TAG
!128 = metadata !{i32 589865, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !129} ; [ DW_TAG_file_type ]
!129 = metadata !{i32 589841, i32 0, i32 1, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!130 = metadata !{i32 589845, metadata !128, metadata !"", metadata !128, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !131, i32 0, null} ; [ DW_TAG_subroutine_type ]
!131 = metadata !{metadata !132, metadata !133}
!132 = metadata !{i32 589860, metadata !128, metadata !"int", metadata !128, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!133 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !134} ; [ DW_TAG_pointer_type ]
!134 = metadata !{i32 589846, metadata !135, metadata !"FILE", metadata !135, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !136} ; [ DW_TAG_typedef ]
!135 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!136 = metadata !{i32 589843, metadata !128, metadata !"__STDIO_FILE_STRUCT", metadata !135, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !137, i32 0, null} ; [ DW_TAG_structure_type ]
!137 = metadata !{metadata !138, metadata !141, metadata !144, metadata !145, metadata !147, metadata !148, metadata !149, metadata !150, metadata !151, metadata !152, metadata !154, metadata !158}
!138 = metadata !{i32 589837, metadata !136, metadata !"__modeflags", metadata !139, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !140} ; [ DW_TAG_member ]
!139 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !129} ; [ DW_TAG_file_type ]
!140 = metadata !{i32 589860, metadata !128, metadata !"short unsigned int", metadata !128, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!141 = metadata !{i32 589837, metadata !136, metadata !"__ungot_width", metadata !139, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !142} ; [ DW_TAG_member ]
!142 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !143, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!143 = metadata !{i32 589860, metadata !128, metadata !"unsigned char", metadata !128, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!144 = metadata !{i32 589837, metadata !136, metadata !"__filedes", metadata !139, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !132} ; [ DW_TAG_member ]
!145 = metadata !{i32 589837, metadata !136, metadata !"__bufstart", metadata !139, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !146} ; [ DW_TAG_member ]
!146 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !143} ; [ DW_TAG_pointer_type ]
!147 = metadata !{i32 589837, metadata !136, metadata !"__bufend", metadata !139, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !146} ; [ DW_TAG_member ]
!148 = metadata !{i32 589837, metadata !136, metadata !"__bufpos", metadata !139, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !146} ; [ DW_TAG_member ]
!149 = metadata !{i32 589837, metadata !136, metadata !"__bufread", metadata !139, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !146} ; [ DW_TAG_member ]
!150 = metadata !{i32 589837, metadata !136, metadata !"__bufgetc_u", metadata !139, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !146} ; [ DW_TAG_member ]
!151 = metadata !{i32 589837, metadata !136, metadata !"__bufputc_u", metadata !139, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !146} ; [ DW_TAG_member ]
!152 = metadata !{i32 589837, metadata !136, metadata !"__nextopen", metadata !139, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !153} ; [ DW_TAG_member ]
!153 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !136} ; [ DW_TAG_pointer_type ]
!154 = metadata !{i32 589837, metadata !136, metadata !"__ungot", metadata !139, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !155} ; [ DW_TAG_member ]
!155 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !156, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!156 = metadata !{i32 589846, metadata !157, metadata !"wchar_t", metadata !157, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !132} ; [ DW_TAG_typedef ]
!157 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !129} ; [ DW_TAG_file_type ]
!158 = metadata !{i32 589837, metadata !136, metadata !"__state", metadata !139, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !159} ; [ DW_TAG_member ]
!159 = metadata !{i32 589846, metadata !160, metadata !"__mbstate_t", metadata !160, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !161} ; [ DW_TAG_typedef ]
!160 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!161 = metadata !{i32 589843, metadata !128, metadata !"", metadata !160, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !162, i32 0, null} ; [ DW_TAG_structure_type ]
!162 = metadata !{metadata !163, metadata !164}
!163 = metadata !{i32 589837, metadata !161, metadata !"__mask", metadata !160, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !156} ; [ DW_TAG_member ]
!164 = metadata !{i32 589837, metadata !161, metadata !"__wc", metadata !160, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !156} ; [ DW_TAG_member ]
!165 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_one_fd", metadata !"__check_one_fd", metadata !"", metadata !166, i32 137, metadata !168, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32)* @__check_one_fd} ; 
!166 = metadata !{i32 589865, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !167} ; [ DW_TAG_file_type ]
!167 = metadata !{i32 589841, i32 0, i32 1, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i
!168 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !169, i32 0, null} ; [ DW_TAG_subroutine_type ]
!169 = metadata !{null, metadata !170, metadata !170}
!170 = metadata !{i32 589860, metadata !166, metadata !"int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!171 = metadata !{i32 589870, i32 0, metadata !166, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"", metadata !172, i32 55, metadata !173, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i32)* @gnu_dev_makedev115
!172 = metadata !{i32 589865, metadata !"sysmacros.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !167} ; [ DW_TAG_file_type ]
!173 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !174, i32 0, null} ; [ DW_TAG_subroutine_type ]
!174 = metadata !{metadata !175, metadata !176, metadata !176}
!175 = metadata !{i32 589860, metadata !166, metadata !"long long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!176 = metadata !{i32 589860, metadata !166, metadata !"unsigned int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!177 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_suid", metadata !"__check_suid", metadata !"", metadata !166, i32 156, metadata !178, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @__check_suid} ; [ DW_TAG_subpro
!178 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !179, i32 0, null} ; [ DW_TAG_subroutine_type ]
!179 = metadata !{metadata !170}
!180 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !166, i32 188, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_init}
!181 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!182 = metadata !{null}
!183 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !166, i32 252, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_fini}
!184 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !166, i32 281, metadata !185, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32 (i32, i8**, i8
!185 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !186, i32 0, null} ; [ DW_TAG_subroutine_type ]
!186 = metadata !{null, metadata !187, metadata !170, metadata !190, metadata !193, metadata !193, metadata !193, metadata !194}
!187 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !188} ; [ DW_TAG_pointer_type ]
!188 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !189, i32 0, null} ; [ DW_TAG_subroutine_type ]
!189 = metadata !{metadata !170, metadata !170, metadata !190, metadata !190}
!190 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !191} ; [ DW_TAG_pointer_type ]
!191 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !192} ; [ DW_TAG_pointer_type ]
!192 = metadata !{i32 589860, metadata !166, metadata !"char", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!193 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_pointer_type ]
!194 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!195 = metadata !{i32 589870, i32 0, metadata !196, metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !198, i32 921, metadata !199, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 ()* @
!196 = metadata !{i32 589865, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!197 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 
!198 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!199 = metadata !{i32 589845, metadata !196, metadata !"", metadata !196, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !200, i32 0, null} ; [ DW_TAG_subroutine_type ]
!200 = metadata !{metadata !201}
!201 = metadata !{i32 589846, metadata !202, metadata !"size_t", metadata !202, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !203} ; [ DW_TAG_typedef ]
!202 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !197} ; [ DW_TAG_file_type ]
!203 = metadata !{i32 589860, metadata !196, metadata !"long unsigned int", metadata !196, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!204 = metadata !{i32 589870, i32 0, metadata !205, metadata !"abort", metadata !"abort", metadata !"abort", metadata !205, i32 57, metadata !207, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @abort} ; [ DW_TAG_subprogram ]
!205 = metadata !{i32 589865, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !206} ; [ DW_TAG_file_type ]
!206 = metadata !{i32 589841, i32 0, i32 1, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!207 = metadata !{i32 589845, metadata !205, metadata !"", metadata !205, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!208 = metadata !{i32 589870, i32 0, metadata !209, metadata !"asprintf", metadata !"asprintf", metadata !"asprintf", metadata !209, i32 23, metadata !211, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8**, i8*, ...)* @asprintf} ; [ DW_
!209 = metadata !{i32 589865, metadata !"asprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !210} ; [ DW_TAG_file_type ]
!210 = metadata !{i32 589841, i32 0, i32 1, metadata !"asprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!211 = metadata !{i32 589845, metadata !209, metadata !"", metadata !209, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !212, i32 0, null} ; [ DW_TAG_subroutine_type ]
!212 = metadata !{metadata !213, metadata !214, metadata !217}
!213 = metadata !{i32 589860, metadata !209, metadata !"int", metadata !209, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!214 = metadata !{i32 589839, metadata !209, metadata !"", metadata !209, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !215} ; [ DW_TAG_pointer_type ]
!215 = metadata !{i32 589839, metadata !209, metadata !"", metadata !209, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !216} ; [ DW_TAG_pointer_type ]
!216 = metadata !{i32 589860, metadata !209, metadata !"char", metadata !209, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!217 = metadata !{i32 589839, metadata !209, metadata !"", metadata !209, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !218} ; [ DW_TAG_pointer_type ]
!218 = metadata !{i32 589862, metadata !209, metadata !"", metadata !209, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !216} ; [ DW_TAG_const_type ]
!219 = metadata !{i32 589870, i32 0, metadata !220, metadata !"atexit", metadata !"atexit", metadata !"atexit", metadata !222, i32 112, metadata !223, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void ()*)* @atexit} ; [ DW_TAG_subprogra
!220 = metadata !{i32 589865, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !221} ; [ DW_TAG_file_type ]
!221 = metadata !{i32 589841, i32 0, i32 1, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!222 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !221} ; [ DW_TAG_file_type ]
!223 = metadata !{i32 589845, metadata !220, metadata !"", metadata !220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !224, i32 0, null} ; [ DW_TAG_subroutine_type ]
!224 = metadata !{metadata !225, metadata !226}
!225 = metadata !{i32 589860, metadata !220, metadata !"int", metadata !220, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!226 = metadata !{i32 589839, metadata !220, metadata !"", metadata !220, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !227} ; [ DW_TAG_pointer_type ]
!227 = metadata !{i32 589845, metadata !220, metadata !"", metadata !220, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!228 = metadata !{i32 589870, i32 0, metadata !229, metadata !"getmntent_r", metadata !"getmntent_r", metadata !"getmntent_r", metadata !229, i32 32, metadata !231, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.mntent* (%4*, %struct.m
!229 = metadata !{i32 589865, metadata !"mntent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/mntent", metadata !230} ; [ DW_TAG_file_type ]
!230 = metadata !{i32 589841, i32 0, i32 1, metadata !"mntent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/mntent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!231 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !232, i32 0, null} ; [ DW_TAG_subroutine_type ]
!232 = metadata !{metadata !233, metadata !246, metadata !233, metadata !238, metadata !244}
!233 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !234} ; [ DW_TAG_pointer_type ]
!234 = metadata !{i32 589843, metadata !229, metadata !"mntent", metadata !235, i32 55, i64 320, i64 64, i64 0, i32 0, null, metadata !236, i32 0, null} ; [ DW_TAG_structure_type ]
!235 = metadata !{i32 589865, metadata !"mntent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !230} ; [ DW_TAG_file_type ]
!236 = metadata !{metadata !237, metadata !240, metadata !241, metadata !242, metadata !243, metadata !245}
!237 = metadata !{i32 589837, metadata !234, metadata !"mnt_fsname", metadata !235, i32 56, i64 64, i64 64, i64 0, i32 0, metadata !238} ; [ DW_TAG_member ]
!238 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !239} ; [ DW_TAG_pointer_type ]
!239 = metadata !{i32 589860, metadata !229, metadata !"char", metadata !229, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!240 = metadata !{i32 589837, metadata !234, metadata !"mnt_dir", metadata !235, i32 57, i64 64, i64 64, i64 64, i32 0, metadata !238} ; [ DW_TAG_member ]
!241 = metadata !{i32 589837, metadata !234, metadata !"mnt_type", metadata !235, i32 58, i64 64, i64 64, i64 128, i32 0, metadata !238} ; [ DW_TAG_member ]
!242 = metadata !{i32 589837, metadata !234, metadata !"mnt_opts", metadata !235, i32 59, i64 64, i64 64, i64 192, i32 0, metadata !238} ; [ DW_TAG_member ]
!243 = metadata !{i32 589837, metadata !234, metadata !"mnt_freq", metadata !235, i32 60, i64 32, i64 32, i64 256, i32 0, metadata !244} ; [ DW_TAG_member ]
!244 = metadata !{i32 589860, metadata !229, metadata !"int", metadata !229, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!245 = metadata !{i32 589837, metadata !234, metadata !"mnt_passno", metadata !235, i32 61, i64 32, i64 32, i64 288, i32 0, metadata !244} ; [ DW_TAG_member ]
!246 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !247} ; [ DW_TAG_pointer_type ]
!247 = metadata !{i32 589846, metadata !248, metadata !"FILE", metadata !248, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !249} ; [ DW_TAG_typedef ]
!248 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !230} ; [ DW_TAG_file_type ]
!249 = metadata !{i32 589843, metadata !229, metadata !"__STDIO_FILE_STRUCT", metadata !248, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !250, i32 0, null} ; [ DW_TAG_structure_type ]
!250 = metadata !{metadata !251, metadata !254, metadata !257, metadata !258, metadata !260, metadata !261, metadata !262, metadata !263, metadata !264, metadata !265, metadata !267, metadata !271}
!251 = metadata !{i32 589837, metadata !249, metadata !"__modeflags", metadata !252, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !253} ; [ DW_TAG_member ]
!252 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !230} ; [ DW_TAG_file_type ]
!253 = metadata !{i32 589860, metadata !229, metadata !"short unsigned int", metadata !229, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!254 = metadata !{i32 589837, metadata !249, metadata !"__ungot_width", metadata !252, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !255} ; [ DW_TAG_member ]
!255 = metadata !{i32 589825, metadata !229, metadata !"", metadata !229, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !256, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!256 = metadata !{i32 589860, metadata !229, metadata !"unsigned char", metadata !229, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!257 = metadata !{i32 589837, metadata !249, metadata !"__filedes", metadata !252, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !244} ; [ DW_TAG_member ]
!258 = metadata !{i32 589837, metadata !249, metadata !"__bufstart", metadata !252, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !259} ; [ DW_TAG_member ]
!259 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !256} ; [ DW_TAG_pointer_type ]
!260 = metadata !{i32 589837, metadata !249, metadata !"__bufend", metadata !252, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !259} ; [ DW_TAG_member ]
!261 = metadata !{i32 589837, metadata !249, metadata !"__bufpos", metadata !252, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !259} ; [ DW_TAG_member ]
!262 = metadata !{i32 589837, metadata !249, metadata !"__bufread", metadata !252, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !259} ; [ DW_TAG_member ]
!263 = metadata !{i32 589837, metadata !249, metadata !"__bufgetc_u", metadata !252, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !259} ; [ DW_TAG_member ]
!264 = metadata !{i32 589837, metadata !249, metadata !"__bufputc_u", metadata !252, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !259} ; [ DW_TAG_member ]
!265 = metadata !{i32 589837, metadata !249, metadata !"__nextopen", metadata !252, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !266} ; [ DW_TAG_member ]
!266 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !249} ; [ DW_TAG_pointer_type ]
!267 = metadata !{i32 589837, metadata !249, metadata !"__ungot", metadata !252, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !268} ; [ DW_TAG_member ]
!268 = metadata !{i32 589825, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !269, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!269 = metadata !{i32 589846, metadata !270, metadata !"wchar_t", metadata !270, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !244} ; [ DW_TAG_typedef ]
!270 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !230} ; [ DW_TAG_file_type ]
!271 = metadata !{i32 589837, metadata !249, metadata !"__state", metadata !252, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !272} ; [ DW_TAG_member ]
!272 = metadata !{i32 589846, metadata !273, metadata !"__mbstate_t", metadata !273, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !274} ; [ DW_TAG_typedef ]
!273 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !230} ; [ DW_TAG_file_type ]
!274 = metadata !{i32 589843, metadata !229, metadata !"", metadata !273, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !275, i32 0, null} ; [ DW_TAG_structure_type ]
!275 = metadata !{metadata !276, metadata !277}
!276 = metadata !{i32 589837, metadata !274, metadata !"__mask", metadata !273, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !269} ; [ DW_TAG_member ]
!277 = metadata !{i32 589837, metadata !274, metadata !"__wc", metadata !273, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !269} ; [ DW_TAG_member ]
!278 = metadata !{i32 589870, i32 0, metadata !229, metadata !"getmntent", metadata !"getmntent", metadata !"getmntent", metadata !229, i32 80, metadata !279, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.mntent* (%4*)* @getmntent} ; 
!279 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !280, i32 0, null} ; [ DW_TAG_subroutine_type ]
!280 = metadata !{metadata !233, metadata !246}
!281 = metadata !{i32 589870, i32 0, metadata !229, metadata !"addmntent", metadata !"addmntent", metadata !"addmntent", metadata !229, i32 98, metadata !282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, %struct.mntent*)* @addmnten
!282 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !283, i32 0, null} ; [ DW_TAG_subroutine_type ]
!283 = metadata !{metadata !244, metadata !246, metadata !284}
!284 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !285} ; [ DW_TAG_pointer_type ]
!285 = metadata !{i32 589862, metadata !229, metadata !"", metadata !229, i32 0, i64 320, i64 64, i64 0, i32 0, metadata !234} ; [ DW_TAG_const_type ]
!286 = metadata !{i32 589870, i32 0, metadata !229, metadata !"hasmntopt", metadata !"hasmntopt", metadata !"hasmntopt", metadata !229, i32 110, metadata !287, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (%struct.mntent*, i8*)* @hasmnto
!287 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !288, i32 0, null} ; [ DW_TAG_subroutine_type ]
!288 = metadata !{metadata !238, metadata !284, metadata !289}
!289 = metadata !{i32 589839, metadata !229, metadata !"", metadata !229, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !290} ; [ DW_TAG_pointer_type ]
!290 = metadata !{i32 589862, metadata !229, metadata !"", metadata !229, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !239} ; [ DW_TAG_const_type ]
!291 = metadata !{i32 589870, i32 0, metadata !229, metadata !"setmntent", metadata !"setmntent", metadata !"setmntent", metadata !229, i32 115, metadata !292, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i8*, i8*)* @setmntent} ; [ DW_T
!292 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !293, i32 0, null} ; [ DW_TAG_subroutine_type ]
!293 = metadata !{metadata !246, metadata !289, metadata !289}
!294 = metadata !{i32 589870, i32 0, metadata !229, metadata !"endmntent", metadata !"endmntent", metadata !"endmntent", metadata !229, i32 121, metadata !295, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @endmntent} ; [ DW_TAG_su
!295 = metadata !{i32 589845, metadata !229, metadata !"", metadata !229, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !296, i32 0, null} ; [ DW_TAG_subroutine_type ]
!296 = metadata !{metadata !244, metadata !246}
!297 = metadata !{i32 589870, i32 0, metadata !298, metadata !"__error", metadata !"__error", metadata !"__error", metadata !298, i32 51, metadata !300, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*, ...)* @__error} ; [ DW
!298 = metadata !{i32 589865, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !299} ; [ DW_TAG_file_type ]
!299 = metadata !{i32 589841, i32 0, i32 1, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!300 = metadata !{i32 589845, metadata !298, metadata !"", metadata !298, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !301, i32 0, null} ; [ DW_TAG_subroutine_type ]
!301 = metadata !{null, metadata !302, metadata !302, metadata !303}
!302 = metadata !{i32 589860, metadata !298, metadata !"int", metadata !298, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!303 = metadata !{i32 589839, metadata !298, metadata !"", metadata !298, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !304} ; [ DW_TAG_pointer_type ]
!304 = metadata !{i32 589862, metadata !298, metadata !"", metadata !298, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !305} ; [ DW_TAG_const_type ]
!305 = metadata !{i32 589860, metadata !298, metadata !"char", metadata !298, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!306 = metadata !{i32 589870, i32 0, metadata !298, metadata !"__error_at_line", metadata !"__error_at_line", metadata !"__error_at_line", metadata !298, i32 72, metadata !307, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*
!307 = metadata !{i32 589845, metadata !298, metadata !"", metadata !298, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !308, i32 0, null} ; [ DW_TAG_subroutine_type ]
!308 = metadata !{null, metadata !302, metadata !302, metadata !303, metadata !309, metadata !303}
!309 = metadata !{i32 589860, metadata !298, metadata !"unsigned int", metadata !298, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!310 = metadata !{i32 589870, i32 0, metadata !311, metadata !"exit", metadata !"exit", metadata !"exit", metadata !313, i32 319, metadata !314, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @exit} ; [ DW_TAG_subprogram ]
!311 = metadata !{i32 589865, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !312} ; [ DW_TAG_file_type ]
!312 = metadata !{i32 589841, i32 0, i32 1, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_
!313 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !312} ; [ DW_TAG_file_type ]
!314 = metadata !{i32 589845, metadata !311, metadata !"", metadata !311, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !315, i32 0, null} ; [ DW_TAG_subroutine_type ]
!315 = metadata !{null, metadata !316}
!316 = metadata !{i32 589860, metadata !311, metadata !"int", metadata !311, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!317 = metadata !{i32 589870, i32 0, metadata !318, metadata !"fclose", metadata !"fclose", metadata !"fclose", metadata !318, i32 15, metadata !320, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fclose} ; [ DW_TAG_subprogram ]
!318 = metadata !{i32 589865, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !319} ; [ DW_TAG_file_type ]
!319 = metadata !{i32 589841, i32 0, i32 1, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!320 = metadata !{i32 589845, metadata !318, metadata !"", metadata !318, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !321, i32 0, null} ; [ DW_TAG_subroutine_type ]
!321 = metadata !{metadata !322, metadata !323}
!322 = metadata !{i32 589860, metadata !318, metadata !"int", metadata !318, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!323 = metadata !{i32 589839, metadata !318, metadata !"", metadata !318, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !324} ; [ DW_TAG_pointer_type ]
!324 = metadata !{i32 589846, metadata !325, metadata !"FILE", metadata !325, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !326} ; [ DW_TAG_typedef ]
!325 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !319} ; [ DW_TAG_file_type ]
!326 = metadata !{i32 589843, metadata !318, metadata !"__STDIO_FILE_STRUCT", metadata !325, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !327, i32 0, null} ; [ DW_TAG_structure_type ]
!327 = metadata !{metadata !328, metadata !331, metadata !334, metadata !335, metadata !337, metadata !338, metadata !339, metadata !340, metadata !341, metadata !342, metadata !344, metadata !348}
!328 = metadata !{i32 589837, metadata !326, metadata !"__modeflags", metadata !329, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !330} ; [ DW_TAG_member ]
!329 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !319} ; [ DW_TAG_file_type ]
!330 = metadata !{i32 589860, metadata !318, metadata !"short unsigned int", metadata !318, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!331 = metadata !{i32 589837, metadata !326, metadata !"__ungot_width", metadata !329, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !332} ; [ DW_TAG_member ]
!332 = metadata !{i32 589825, metadata !318, metadata !"", metadata !318, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !333, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!333 = metadata !{i32 589860, metadata !318, metadata !"unsigned char", metadata !318, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!334 = metadata !{i32 589837, metadata !326, metadata !"__filedes", metadata !329, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !322} ; [ DW_TAG_member ]
!335 = metadata !{i32 589837, metadata !326, metadata !"__bufstart", metadata !329, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !336} ; [ DW_TAG_member ]
!336 = metadata !{i32 589839, metadata !318, metadata !"", metadata !318, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !333} ; [ DW_TAG_pointer_type ]
!337 = metadata !{i32 589837, metadata !326, metadata !"__bufend", metadata !329, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !336} ; [ DW_TAG_member ]
!338 = metadata !{i32 589837, metadata !326, metadata !"__bufpos", metadata !329, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !336} ; [ DW_TAG_member ]
!339 = metadata !{i32 589837, metadata !326, metadata !"__bufread", metadata !329, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !336} ; [ DW_TAG_member ]
!340 = metadata !{i32 589837, metadata !326, metadata !"__bufgetc_u", metadata !329, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !336} ; [ DW_TAG_member ]
!341 = metadata !{i32 589837, metadata !326, metadata !"__bufputc_u", metadata !329, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !336} ; [ DW_TAG_member ]
!342 = metadata !{i32 589837, metadata !326, metadata !"__nextopen", metadata !329, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !343} ; [ DW_TAG_member ]
!343 = metadata !{i32 589839, metadata !318, metadata !"", metadata !318, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !326} ; [ DW_TAG_pointer_type ]
!344 = metadata !{i32 589837, metadata !326, metadata !"__ungot", metadata !329, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !345} ; [ DW_TAG_member ]
!345 = metadata !{i32 589825, metadata !318, metadata !"", metadata !318, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !346, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!346 = metadata !{i32 589846, metadata !347, metadata !"wchar_t", metadata !347, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !322} ; [ DW_TAG_typedef ]
!347 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !319} ; [ DW_TAG_file_type ]
!348 = metadata !{i32 589837, metadata !326, metadata !"__state", metadata !329, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !349} ; [ DW_TAG_member ]
!349 = metadata !{i32 589846, metadata !350, metadata !"__mbstate_t", metadata !350, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !351} ; [ DW_TAG_typedef ]
!350 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !319} ; [ DW_TAG_file_type ]
!351 = metadata !{i32 589843, metadata !318, metadata !"", metadata !350, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !352, i32 0, null} ; [ DW_TAG_structure_type ]
!352 = metadata !{metadata !353, metadata !354}
!353 = metadata !{i32 589837, metadata !351, metadata !"__mask", metadata !350, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !346} ; [ DW_TAG_member ]
!354 = metadata !{i32 589837, metadata !351, metadata !"__wc", metadata !350, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !346} ; [ DW_TAG_member ]
!355 = metadata !{i32 589870, i32 0, metadata !356, metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !358, i32 15, metadata !359, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @ferror_
!356 = metadata !{i32 589865, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !357} ; [ DW_TAG_file_type ]
!357 = metadata !{i32 589841, i32 0, i32 1, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!358 = metadata !{i32 589865, metadata !"ferror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !357} ; [ DW_TAG_file_type ]
!359 = metadata !{i32 589845, metadata !356, metadata !"", metadata !356, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !360, i32 0, null} ; [ DW_TAG_subroutine_type ]
!360 = metadata !{metadata !361, metadata !362}
!361 = metadata !{i32 589860, metadata !356, metadata !"int", metadata !356, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!362 = metadata !{i32 589839, metadata !356, metadata !"", metadata !356, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !363} ; [ DW_TAG_pointer_type ]
!363 = metadata !{i32 589846, metadata !364, metadata !"FILE", metadata !364, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !365} ; [ DW_TAG_typedef ]
!364 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !357} ; [ DW_TAG_file_type ]
!365 = metadata !{i32 589843, metadata !356, metadata !"__STDIO_FILE_STRUCT", metadata !364, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !366, i32 0, null} ; [ DW_TAG_structure_type ]
!366 = metadata !{metadata !367, metadata !370, metadata !373, metadata !374, metadata !376, metadata !377, metadata !378, metadata !379, metadata !380, metadata !381, metadata !383, metadata !387}
!367 = metadata !{i32 589837, metadata !365, metadata !"__modeflags", metadata !368, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !369} ; [ DW_TAG_member ]
!368 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !357} ; [ DW_TAG_file_type ]
!369 = metadata !{i32 589860, metadata !356, metadata !"short unsigned int", metadata !356, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!370 = metadata !{i32 589837, metadata !365, metadata !"__ungot_width", metadata !368, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !371} ; [ DW_TAG_member ]
!371 = metadata !{i32 589825, metadata !356, metadata !"", metadata !356, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !372, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!372 = metadata !{i32 589860, metadata !356, metadata !"unsigned char", metadata !356, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!373 = metadata !{i32 589837, metadata !365, metadata !"__filedes", metadata !368, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !361} ; [ DW_TAG_member ]
!374 = metadata !{i32 589837, metadata !365, metadata !"__bufstart", metadata !368, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !375} ; [ DW_TAG_member ]
!375 = metadata !{i32 589839, metadata !356, metadata !"", metadata !356, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !372} ; [ DW_TAG_pointer_type ]
!376 = metadata !{i32 589837, metadata !365, metadata !"__bufend", metadata !368, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !375} ; [ DW_TAG_member ]
!377 = metadata !{i32 589837, metadata !365, metadata !"__bufpos", metadata !368, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !375} ; [ DW_TAG_member ]
!378 = metadata !{i32 589837, metadata !365, metadata !"__bufread", metadata !368, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !375} ; [ DW_TAG_member ]
!379 = metadata !{i32 589837, metadata !365, metadata !"__bufgetc_u", metadata !368, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !375} ; [ DW_TAG_member ]
!380 = metadata !{i32 589837, metadata !365, metadata !"__bufputc_u", metadata !368, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !375} ; [ DW_TAG_member ]
!381 = metadata !{i32 589837, metadata !365, metadata !"__nextopen", metadata !368, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !382} ; [ DW_TAG_member ]
!382 = metadata !{i32 589839, metadata !356, metadata !"", metadata !356, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !365} ; [ DW_TAG_pointer_type ]
!383 = metadata !{i32 589837, metadata !365, metadata !"__ungot", metadata !368, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !384} ; [ DW_TAG_member ]
!384 = metadata !{i32 589825, metadata !356, metadata !"", metadata !356, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !385, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!385 = metadata !{i32 589846, metadata !386, metadata !"wchar_t", metadata !386, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !361} ; [ DW_TAG_typedef ]
!386 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !357} ; [ DW_TAG_file_type ]
!387 = metadata !{i32 589837, metadata !365, metadata !"__state", metadata !368, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !388} ; [ DW_TAG_member ]
!388 = metadata !{i32 589846, metadata !389, metadata !"__mbstate_t", metadata !389, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !390} ; [ DW_TAG_typedef ]
!389 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !357} ; [ DW_TAG_file_type ]
!390 = metadata !{i32 589843, metadata !356, metadata !"", metadata !389, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !391, i32 0, null} ; [ DW_TAG_structure_type ]
!391 = metadata !{metadata !392, metadata !393}
!392 = metadata !{i32 589837, metadata !390, metadata !"__mask", metadata !389, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !385} ; [ DW_TAG_member ]
!393 = metadata !{i32 589837, metadata !390, metadata !"__wc", metadata !389, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !385} ; [ DW_TAG_member ]
!394 = metadata !{i32 589870, i32 0, metadata !395, metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !397, i32 70, metadata !398, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fflush_
!395 = metadata !{i32 589865, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !396} ; [ DW_TAG_file_type ]
!396 = metadata !{i32 589841, i32 0, i32 1, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!397 = metadata !{i32 589865, metadata !"fflush.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !396} ; [ DW_TAG_file_type ]
!398 = metadata !{i32 589845, metadata !395, metadata !"", metadata !395, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !399, i32 0, null} ; [ DW_TAG_subroutine_type ]
!399 = metadata !{metadata !400, metadata !401}
!400 = metadata !{i32 589860, metadata !395, metadata !"int", metadata !395, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!401 = metadata !{i32 589839, metadata !395, metadata !"", metadata !395, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !402} ; [ DW_TAG_pointer_type ]
!402 = metadata !{i32 589846, metadata !403, metadata !"FILE", metadata !403, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !404} ; [ DW_TAG_typedef ]
!403 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !396} ; [ DW_TAG_file_type ]
!404 = metadata !{i32 589843, metadata !395, metadata !"__STDIO_FILE_STRUCT", metadata !403, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !405, i32 0, null} ; [ DW_TAG_structure_type ]
!405 = metadata !{metadata !406, metadata !409, metadata !412, metadata !413, metadata !415, metadata !416, metadata !417, metadata !418, metadata !419, metadata !420, metadata !422, metadata !426}
!406 = metadata !{i32 589837, metadata !404, metadata !"__modeflags", metadata !407, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !408} ; [ DW_TAG_member ]
!407 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !396} ; [ DW_TAG_file_type ]
!408 = metadata !{i32 589860, metadata !395, metadata !"short unsigned int", metadata !395, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!409 = metadata !{i32 589837, metadata !404, metadata !"__ungot_width", metadata !407, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !410} ; [ DW_TAG_member ]
!410 = metadata !{i32 589825, metadata !395, metadata !"", metadata !395, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !411, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!411 = metadata !{i32 589860, metadata !395, metadata !"unsigned char", metadata !395, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!412 = metadata !{i32 589837, metadata !404, metadata !"__filedes", metadata !407, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !400} ; [ DW_TAG_member ]
!413 = metadata !{i32 589837, metadata !404, metadata !"__bufstart", metadata !407, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !414} ; [ DW_TAG_member ]
!414 = metadata !{i32 589839, metadata !395, metadata !"", metadata !395, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !411} ; [ DW_TAG_pointer_type ]
!415 = metadata !{i32 589837, metadata !404, metadata !"__bufend", metadata !407, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !414} ; [ DW_TAG_member ]
!416 = metadata !{i32 589837, metadata !404, metadata !"__bufpos", metadata !407, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !414} ; [ DW_TAG_member ]
!417 = metadata !{i32 589837, metadata !404, metadata !"__bufread", metadata !407, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !414} ; [ DW_TAG_member ]
!418 = metadata !{i32 589837, metadata !404, metadata !"__bufgetc_u", metadata !407, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !414} ; [ DW_TAG_member ]
!419 = metadata !{i32 589837, metadata !404, metadata !"__bufputc_u", metadata !407, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !414} ; [ DW_TAG_member ]
!420 = metadata !{i32 589837, metadata !404, metadata !"__nextopen", metadata !407, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !421} ; [ DW_TAG_member ]
!421 = metadata !{i32 589839, metadata !395, metadata !"", metadata !395, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !404} ; [ DW_TAG_pointer_type ]
!422 = metadata !{i32 589837, metadata !404, metadata !"__ungot", metadata !407, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !423} ; [ DW_TAG_member ]
!423 = metadata !{i32 589825, metadata !395, metadata !"", metadata !395, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !424, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!424 = metadata !{i32 589846, metadata !425, metadata !"wchar_t", metadata !425, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !400} ; [ DW_TAG_typedef ]
!425 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !396} ; [ DW_TAG_file_type ]
!426 = metadata !{i32 589837, metadata !404, metadata !"__state", metadata !407, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !427} ; [ DW_TAG_member ]
!427 = metadata !{i32 589846, metadata !428, metadata !"__mbstate_t", metadata !428, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !429} ; [ DW_TAG_typedef ]
!428 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !396} ; [ DW_TAG_file_type ]
!429 = metadata !{i32 589843, metadata !395, metadata !"", metadata !428, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !430, i32 0, null} ; [ DW_TAG_structure_type ]
!430 = metadata !{metadata !431, metadata !432}
!431 = metadata !{i32 589837, metadata !429, metadata !"__mask", metadata !428, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !424} ; [ DW_TAG_member ]
!432 = metadata !{i32 589837, metadata !429, metadata !"__wc", metadata !428, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !424} ; [ DW_TAG_member ]
!433 = metadata !{i32 589870, i32 0, metadata !434, metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !436, i32 15, metadata !437, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fileno_
!434 = metadata !{i32 589865, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !435} ; [ DW_TAG_file_type ]
!435 = metadata !{i32 589841, i32 0, i32 1, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!436 = metadata !{i32 589865, metadata !"fileno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !435} ; [ DW_TAG_file_type ]
!437 = metadata !{i32 589845, metadata !434, metadata !"", metadata !434, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !438, i32 0, null} ; [ DW_TAG_subroutine_type ]
!438 = metadata !{metadata !439, metadata !440}
!439 = metadata !{i32 589860, metadata !434, metadata !"int", metadata !434, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!440 = metadata !{i32 589839, metadata !434, metadata !"", metadata !434, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !441} ; [ DW_TAG_pointer_type ]
!441 = metadata !{i32 589846, metadata !442, metadata !"FILE", metadata !442, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !443} ; [ DW_TAG_typedef ]
!442 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !435} ; [ DW_TAG_file_type ]
!443 = metadata !{i32 589843, metadata !434, metadata !"__STDIO_FILE_STRUCT", metadata !442, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !444, i32 0, null} ; [ DW_TAG_structure_type ]
!444 = metadata !{metadata !445, metadata !448, metadata !451, metadata !452, metadata !454, metadata !455, metadata !456, metadata !457, metadata !458, metadata !459, metadata !461, metadata !465}
!445 = metadata !{i32 589837, metadata !443, metadata !"__modeflags", metadata !446, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !447} ; [ DW_TAG_member ]
!446 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !435} ; [ DW_TAG_file_type ]
!447 = metadata !{i32 589860, metadata !434, metadata !"short unsigned int", metadata !434, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!448 = metadata !{i32 589837, metadata !443, metadata !"__ungot_width", metadata !446, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !449} ; [ DW_TAG_member ]
!449 = metadata !{i32 589825, metadata !434, metadata !"", metadata !434, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !450, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!450 = metadata !{i32 589860, metadata !434, metadata !"unsigned char", metadata !434, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!451 = metadata !{i32 589837, metadata !443, metadata !"__filedes", metadata !446, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !439} ; [ DW_TAG_member ]
!452 = metadata !{i32 589837, metadata !443, metadata !"__bufstart", metadata !446, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !453} ; [ DW_TAG_member ]
!453 = metadata !{i32 589839, metadata !434, metadata !"", metadata !434, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !450} ; [ DW_TAG_pointer_type ]
!454 = metadata !{i32 589837, metadata !443, metadata !"__bufend", metadata !446, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !453} ; [ DW_TAG_member ]
!455 = metadata !{i32 589837, metadata !443, metadata !"__bufpos", metadata !446, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !453} ; [ DW_TAG_member ]
!456 = metadata !{i32 589837, metadata !443, metadata !"__bufread", metadata !446, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !453} ; [ DW_TAG_member ]
!457 = metadata !{i32 589837, metadata !443, metadata !"__bufgetc_u", metadata !446, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !453} ; [ DW_TAG_member ]
!458 = metadata !{i32 589837, metadata !443, metadata !"__bufputc_u", metadata !446, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !453} ; [ DW_TAG_member ]
!459 = metadata !{i32 589837, metadata !443, metadata !"__nextopen", metadata !446, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !460} ; [ DW_TAG_member ]
!460 = metadata !{i32 589839, metadata !434, metadata !"", metadata !434, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !443} ; [ DW_TAG_pointer_type ]
!461 = metadata !{i32 589837, metadata !443, metadata !"__ungot", metadata !446, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !462} ; [ DW_TAG_member ]
!462 = metadata !{i32 589825, metadata !434, metadata !"", metadata !434, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !463, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!463 = metadata !{i32 589846, metadata !464, metadata !"wchar_t", metadata !464, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !439} ; [ DW_TAG_typedef ]
!464 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !435} ; [ DW_TAG_file_type ]
!465 = metadata !{i32 589837, metadata !443, metadata !"__state", metadata !446, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !466} ; [ DW_TAG_member ]
!466 = metadata !{i32 589846, metadata !467, metadata !"__mbstate_t", metadata !467, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !468} ; [ DW_TAG_typedef ]
!467 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !435} ; [ DW_TAG_file_type ]
!468 = metadata !{i32 589843, metadata !434, metadata !"", metadata !467, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !469, i32 0, null} ; [ DW_TAG_structure_type ]
!469 = metadata !{metadata !470, metadata !471}
!470 = metadata !{i32 589837, metadata !468, metadata !"__mask", metadata !467, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !463} ; [ DW_TAG_member ]
!471 = metadata !{i32 589837, metadata !468, metadata !"__wc", metadata !467, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !463} ; [ DW_TAG_member ]
!472 = metadata !{i32 589870, i32 0, metadata !473, metadata !"fopen", metadata !"fopen", metadata !"fopen", metadata !473, i32 19, metadata !475, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i8*, i8*)* @fopen} ; [ DW_TAG_subprogram ]
!473 = metadata !{i32 589865, metadata !"fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !474} ; [ DW_TAG_file_type ]
!474 = metadata !{i32 589841, i32 0, i32 1, metadata !"fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_
!475 = metadata !{i32 589845, metadata !473, metadata !"", metadata !473, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !476, i32 0, null} ; [ DW_TAG_subroutine_type ]
!476 = metadata !{metadata !477, metadata !510, metadata !510}
!477 = metadata !{i32 589839, metadata !473, metadata !"", metadata !473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !478} ; [ DW_TAG_pointer_type ]
!478 = metadata !{i32 589846, metadata !479, metadata !"FILE", metadata !479, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !480} ; [ DW_TAG_typedef ]
!479 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !474} ; [ DW_TAG_file_type ]
!480 = metadata !{i32 589843, metadata !473, metadata !"__STDIO_FILE_STRUCT", metadata !479, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !481, i32 0, null} ; [ DW_TAG_structure_type ]
!481 = metadata !{metadata !482, metadata !485, metadata !488, metadata !490, metadata !492, metadata !493, metadata !494, metadata !495, metadata !496, metadata !497, metadata !499, metadata !503}
!482 = metadata !{i32 589837, metadata !480, metadata !"__modeflags", metadata !483, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !484} ; [ DW_TAG_member ]
!483 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !474} ; [ DW_TAG_file_type ]
!484 = metadata !{i32 589860, metadata !473, metadata !"short unsigned int", metadata !473, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!485 = metadata !{i32 589837, metadata !480, metadata !"__ungot_width", metadata !483, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !486} ; [ DW_TAG_member ]
!486 = metadata !{i32 589825, metadata !473, metadata !"", metadata !473, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !487, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!487 = metadata !{i32 589860, metadata !473, metadata !"unsigned char", metadata !473, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!488 = metadata !{i32 589837, metadata !480, metadata !"__filedes", metadata !483, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !489} ; [ DW_TAG_member ]
!489 = metadata !{i32 589860, metadata !473, metadata !"int", metadata !473, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!490 = metadata !{i32 589837, metadata !480, metadata !"__bufstart", metadata !483, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !491} ; [ DW_TAG_member ]
!491 = metadata !{i32 589839, metadata !473, metadata !"", metadata !473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !487} ; [ DW_TAG_pointer_type ]
!492 = metadata !{i32 589837, metadata !480, metadata !"__bufend", metadata !483, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !491} ; [ DW_TAG_member ]
!493 = metadata !{i32 589837, metadata !480, metadata !"__bufpos", metadata !483, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !491} ; [ DW_TAG_member ]
!494 = metadata !{i32 589837, metadata !480, metadata !"__bufread", metadata !483, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !491} ; [ DW_TAG_member ]
!495 = metadata !{i32 589837, metadata !480, metadata !"__bufgetc_u", metadata !483, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !491} ; [ DW_TAG_member ]
!496 = metadata !{i32 589837, metadata !480, metadata !"__bufputc_u", metadata !483, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !491} ; [ DW_TAG_member ]
!497 = metadata !{i32 589837, metadata !480, metadata !"__nextopen", metadata !483, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !498} ; [ DW_TAG_member ]
!498 = metadata !{i32 589839, metadata !473, metadata !"", metadata !473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !480} ; [ DW_TAG_pointer_type ]
!499 = metadata !{i32 589837, metadata !480, metadata !"__ungot", metadata !483, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !500} ; [ DW_TAG_member ]
!500 = metadata !{i32 589825, metadata !473, metadata !"", metadata !473, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !501, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!501 = metadata !{i32 589846, metadata !502, metadata !"wchar_t", metadata !502, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !489} ; [ DW_TAG_typedef ]
!502 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !474} ; [ DW_TAG_file_type ]
!503 = metadata !{i32 589837, metadata !480, metadata !"__state", metadata !483, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !504} ; [ DW_TAG_member ]
!504 = metadata !{i32 589846, metadata !505, metadata !"__mbstate_t", metadata !505, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !506} ; [ DW_TAG_typedef ]
!505 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !474} ; [ DW_TAG_file_type ]
!506 = metadata !{i32 589843, metadata !473, metadata !"", metadata !505, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !507, i32 0, null} ; [ DW_TAG_structure_type ]
!507 = metadata !{metadata !508, metadata !509}
!508 = metadata !{i32 589837, metadata !506, metadata !"__mask", metadata !505, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !501} ; [ DW_TAG_member ]
!509 = metadata !{i32 589837, metadata !506, metadata !"__wc", metadata !505, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !501} ; [ DW_TAG_member ]
!510 = metadata !{i32 589839, metadata !473, metadata !"", metadata !473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !511} ; [ DW_TAG_pointer_type ]
!511 = metadata !{i32 589862, metadata !473, metadata !"", metadata !473, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !512} ; [ DW_TAG_const_type ]
!512 = metadata !{i32 589860, metadata !473, metadata !"char", metadata !473, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!513 = metadata !{i32 589870, i32 0, metadata !514, metadata !"fprintf", metadata !"fprintf", metadata !"fprintf", metadata !514, i32 15, metadata !516, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, ...)* @fprintf} ; [ DW_TAG_s
!514 = metadata !{i32 589865, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !515} ; [ DW_TAG_file_type ]
!515 = metadata !{i32 589841, i32 0, i32 1, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!516 = metadata !{i32 589845, metadata !514, metadata !"", metadata !514, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !517, i32 0, null} ; [ DW_TAG_subroutine_type ]
!517 = metadata !{metadata !518, metadata !519, metadata !551}
!518 = metadata !{i32 589860, metadata !514, metadata !"int", metadata !514, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!519 = metadata !{i32 589839, metadata !514, metadata !"", metadata !514, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !520} ; [ DW_TAG_pointer_type ]
!520 = metadata !{i32 589846, metadata !521, metadata !"FILE", metadata !521, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !522} ; [ DW_TAG_typedef ]
!521 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !515} ; [ DW_TAG_file_type ]
!522 = metadata !{i32 589843, metadata !514, metadata !"__STDIO_FILE_STRUCT", metadata !521, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !523, i32 0, null} ; [ DW_TAG_structure_type ]
!523 = metadata !{metadata !524, metadata !527, metadata !530, metadata !531, metadata !533, metadata !534, metadata !535, metadata !536, metadata !537, metadata !538, metadata !540, metadata !544}
!524 = metadata !{i32 589837, metadata !522, metadata !"__modeflags", metadata !525, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !526} ; [ DW_TAG_member ]
!525 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !515} ; [ DW_TAG_file_type ]
!526 = metadata !{i32 589860, metadata !514, metadata !"short unsigned int", metadata !514, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!527 = metadata !{i32 589837, metadata !522, metadata !"__ungot_width", metadata !525, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !528} ; [ DW_TAG_member ]
!528 = metadata !{i32 589825, metadata !514, metadata !"", metadata !514, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !529, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!529 = metadata !{i32 589860, metadata !514, metadata !"unsigned char", metadata !514, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!530 = metadata !{i32 589837, metadata !522, metadata !"__filedes", metadata !525, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !518} ; [ DW_TAG_member ]
!531 = metadata !{i32 589837, metadata !522, metadata !"__bufstart", metadata !525, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !532} ; [ DW_TAG_member ]
!532 = metadata !{i32 589839, metadata !514, metadata !"", metadata !514, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !529} ; [ DW_TAG_pointer_type ]
!533 = metadata !{i32 589837, metadata !522, metadata !"__bufend", metadata !525, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !532} ; [ DW_TAG_member ]
!534 = metadata !{i32 589837, metadata !522, metadata !"__bufpos", metadata !525, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !532} ; [ DW_TAG_member ]
!535 = metadata !{i32 589837, metadata !522, metadata !"__bufread", metadata !525, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !532} ; [ DW_TAG_member ]
!536 = metadata !{i32 589837, metadata !522, metadata !"__bufgetc_u", metadata !525, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !532} ; [ DW_TAG_member ]
!537 = metadata !{i32 589837, metadata !522, metadata !"__bufputc_u", metadata !525, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !532} ; [ DW_TAG_member ]
!538 = metadata !{i32 589837, metadata !522, metadata !"__nextopen", metadata !525, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !539} ; [ DW_TAG_member ]
!539 = metadata !{i32 589839, metadata !514, metadata !"", metadata !514, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !522} ; [ DW_TAG_pointer_type ]
!540 = metadata !{i32 589837, metadata !522, metadata !"__ungot", metadata !525, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !541} ; [ DW_TAG_member ]
!541 = metadata !{i32 589825, metadata !514, metadata !"", metadata !514, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !542, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!542 = metadata !{i32 589846, metadata !543, metadata !"wchar_t", metadata !543, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !518} ; [ DW_TAG_typedef ]
!543 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !515} ; [ DW_TAG_file_type ]
!544 = metadata !{i32 589837, metadata !522, metadata !"__state", metadata !525, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !545} ; [ DW_TAG_member ]
!545 = metadata !{i32 589846, metadata !546, metadata !"__mbstate_t", metadata !546, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !547} ; [ DW_TAG_typedef ]
!546 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !515} ; [ DW_TAG_file_type ]
!547 = metadata !{i32 589843, metadata !514, metadata !"", metadata !546, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !548, i32 0, null} ; [ DW_TAG_structure_type ]
!548 = metadata !{metadata !549, metadata !550}
!549 = metadata !{i32 589837, metadata !547, metadata !"__mask", metadata !546, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !542} ; [ DW_TAG_member ]
!550 = metadata !{i32 589837, metadata !547, metadata !"__wc", metadata !546, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !542} ; [ DW_TAG_member ]
!551 = metadata !{i32 589839, metadata !514, metadata !"", metadata !514, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !552} ; [ DW_TAG_pointer_type ]
!552 = metadata !{i32 589862, metadata !514, metadata !"", metadata !514, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !553} ; [ DW_TAG_const_type ]
!553 = metadata !{i32 589860, metadata !514, metadata !"char", metadata !514, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!554 = metadata !{i32 589870, i32 0, metadata !555, metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !557, i32 24, metadata !558, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %4*)* @fputs
!555 = metadata !{i32 589865, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !556} ; [ DW_TAG_file_type ]
!556 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!557 = metadata !{i32 589865, metadata !"fputs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !556} ; [ DW_TAG_file_type ]
!558 = metadata !{i32 589845, metadata !555, metadata !"", metadata !555, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !559, i32 0, null} ; [ DW_TAG_subroutine_type ]
!559 = metadata !{metadata !560, metadata !561, metadata !564}
!560 = metadata !{i32 589860, metadata !555, metadata !"int", metadata !555, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!561 = metadata !{i32 589839, metadata !555, metadata !"", metadata !555, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !562} ; [ DW_TAG_pointer_type ]
!562 = metadata !{i32 589862, metadata !555, metadata !"", metadata !555, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !563} ; [ DW_TAG_const_type ]
!563 = metadata !{i32 589860, metadata !555, metadata !"char", metadata !555, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!564 = metadata !{i32 589839, metadata !555, metadata !"", metadata !555, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !565} ; [ DW_TAG_pointer_type ]
!565 = metadata !{i32 589846, metadata !566, metadata !"FILE", metadata !566, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !567} ; [ DW_TAG_typedef ]
!566 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !556} ; [ DW_TAG_file_type ]
!567 = metadata !{i32 589843, metadata !555, metadata !"__STDIO_FILE_STRUCT", metadata !566, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !568, i32 0, null} ; [ DW_TAG_structure_type ]
!568 = metadata !{metadata !569, metadata !572, metadata !575, metadata !576, metadata !578, metadata !579, metadata !580, metadata !581, metadata !582, metadata !583, metadata !585, metadata !589}
!569 = metadata !{i32 589837, metadata !567, metadata !"__modeflags", metadata !570, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !571} ; [ DW_TAG_member ]
!570 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !556} ; [ DW_TAG_file_type ]
!571 = metadata !{i32 589860, metadata !555, metadata !"short unsigned int", metadata !555, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!572 = metadata !{i32 589837, metadata !567, metadata !"__ungot_width", metadata !570, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !573} ; [ DW_TAG_member ]
!573 = metadata !{i32 589825, metadata !555, metadata !"", metadata !555, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !574, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!574 = metadata !{i32 589860, metadata !555, metadata !"unsigned char", metadata !555, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!575 = metadata !{i32 589837, metadata !567, metadata !"__filedes", metadata !570, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !560} ; [ DW_TAG_member ]
!576 = metadata !{i32 589837, metadata !567, metadata !"__bufstart", metadata !570, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !577} ; [ DW_TAG_member ]
!577 = metadata !{i32 589839, metadata !555, metadata !"", metadata !555, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !574} ; [ DW_TAG_pointer_type ]
!578 = metadata !{i32 589837, metadata !567, metadata !"__bufend", metadata !570, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !577} ; [ DW_TAG_member ]
!579 = metadata !{i32 589837, metadata !567, metadata !"__bufpos", metadata !570, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !577} ; [ DW_TAG_member ]
!580 = metadata !{i32 589837, metadata !567, metadata !"__bufread", metadata !570, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !577} ; [ DW_TAG_member ]
!581 = metadata !{i32 589837, metadata !567, metadata !"__bufgetc_u", metadata !570, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !577} ; [ DW_TAG_member ]
!582 = metadata !{i32 589837, metadata !567, metadata !"__bufputc_u", metadata !570, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !577} ; [ DW_TAG_member ]
!583 = metadata !{i32 589837, metadata !567, metadata !"__nextopen", metadata !570, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !584} ; [ DW_TAG_member ]
!584 = metadata !{i32 589839, metadata !555, metadata !"", metadata !555, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !567} ; [ DW_TAG_pointer_type ]
!585 = metadata !{i32 589837, metadata !567, metadata !"__ungot", metadata !570, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !586} ; [ DW_TAG_member ]
!586 = metadata !{i32 589825, metadata !555, metadata !"", metadata !555, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !587, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!587 = metadata !{i32 589846, metadata !588, metadata !"wchar_t", metadata !588, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !560} ; [ DW_TAG_typedef ]
!588 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !556} ; [ DW_TAG_file_type ]
!589 = metadata !{i32 589837, metadata !567, metadata !"__state", metadata !570, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !590} ; [ DW_TAG_member ]
!590 = metadata !{i32 589846, metadata !591, metadata !"__mbstate_t", metadata !591, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !592} ; [ DW_TAG_typedef ]
!591 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !556} ; [ DW_TAG_file_type ]
!592 = metadata !{i32 589843, metadata !555, metadata !"", metadata !591, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !593, i32 0, null} ; [ DW_TAG_structure_type ]
!593 = metadata !{metadata !594, metadata !595}
!594 = metadata !{i32 589837, metadata !592, metadata !"__mask", metadata !591, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !587} ; [ DW_TAG_member ]
!595 = metadata !{i32 589837, metadata !592, metadata !"__wc", metadata !591, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !587} ; [ DW_TAG_member ]
!596 = metadata !{i32 589870, i32 0, metadata !597, metadata !"fseek", metadata !"fseek", metadata !"fseek", metadata !597, i32 25, metadata !599, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseek} ; [ DW_TAG_subprogra
!597 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !598} ; [ DW_TAG_file_type ]
!598 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!599 = metadata !{i32 589845, metadata !597, metadata !"", metadata !597, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !600, i32 0, null} ; [ DW_TAG_subroutine_type ]
!600 = metadata !{metadata !601, metadata !602, metadata !634, metadata !601}
!601 = metadata !{i32 589860, metadata !597, metadata !"int", metadata !597, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!602 = metadata !{i32 589839, metadata !597, metadata !"", metadata !597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !603} ; [ DW_TAG_pointer_type ]
!603 = metadata !{i32 589846, metadata !604, metadata !"FILE", metadata !604, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !605} ; [ DW_TAG_typedef ]
!604 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !598} ; [ DW_TAG_file_type ]
!605 = metadata !{i32 589843, metadata !597, metadata !"__STDIO_FILE_STRUCT", metadata !604, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !606, i32 0, null} ; [ DW_TAG_structure_type ]
!606 = metadata !{metadata !607, metadata !610, metadata !613, metadata !614, metadata !616, metadata !617, metadata !618, metadata !619, metadata !620, metadata !621, metadata !623, metadata !627}
!607 = metadata !{i32 589837, metadata !605, metadata !"__modeflags", metadata !608, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !609} ; [ DW_TAG_member ]
!608 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !598} ; [ DW_TAG_file_type ]
!609 = metadata !{i32 589860, metadata !597, metadata !"short unsigned int", metadata !597, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!610 = metadata !{i32 589837, metadata !605, metadata !"__ungot_width", metadata !608, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !611} ; [ DW_TAG_member ]
!611 = metadata !{i32 589825, metadata !597, metadata !"", metadata !597, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !612, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!612 = metadata !{i32 589860, metadata !597, metadata !"unsigned char", metadata !597, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!613 = metadata !{i32 589837, metadata !605, metadata !"__filedes", metadata !608, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !601} ; [ DW_TAG_member ]
!614 = metadata !{i32 589837, metadata !605, metadata !"__bufstart", metadata !608, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !615} ; [ DW_TAG_member ]
!615 = metadata !{i32 589839, metadata !597, metadata !"", metadata !597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !612} ; [ DW_TAG_pointer_type ]
!616 = metadata !{i32 589837, metadata !605, metadata !"__bufend", metadata !608, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !615} ; [ DW_TAG_member ]
!617 = metadata !{i32 589837, metadata !605, metadata !"__bufpos", metadata !608, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !615} ; [ DW_TAG_member ]
!618 = metadata !{i32 589837, metadata !605, metadata !"__bufread", metadata !608, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !615} ; [ DW_TAG_member ]
!619 = metadata !{i32 589837, metadata !605, metadata !"__bufgetc_u", metadata !608, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !615} ; [ DW_TAG_member ]
!620 = metadata !{i32 589837, metadata !605, metadata !"__bufputc_u", metadata !608, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !615} ; [ DW_TAG_member ]
!621 = metadata !{i32 589837, metadata !605, metadata !"__nextopen", metadata !608, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !622} ; [ DW_TAG_member ]
!622 = metadata !{i32 589839, metadata !597, metadata !"", metadata !597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !605} ; [ DW_TAG_pointer_type ]
!623 = metadata !{i32 589837, metadata !605, metadata !"__ungot", metadata !608, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !624} ; [ DW_TAG_member ]
!624 = metadata !{i32 589825, metadata !597, metadata !"", metadata !597, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !625, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!625 = metadata !{i32 589846, metadata !626, metadata !"wchar_t", metadata !626, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !601} ; [ DW_TAG_typedef ]
!626 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !598} ; [ DW_TAG_file_type ]
!627 = metadata !{i32 589837, metadata !605, metadata !"__state", metadata !608, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !628} ; [ DW_TAG_member ]
!628 = metadata !{i32 589846, metadata !629, metadata !"__mbstate_t", metadata !629, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !630} ; [ DW_TAG_typedef ]
!629 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !598} ; [ DW_TAG_file_type ]
!630 = metadata !{i32 589843, metadata !597, metadata !"", metadata !629, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !631, i32 0, null} ; [ DW_TAG_structure_type ]
!631 = metadata !{metadata !632, metadata !633}
!632 = metadata !{i32 589837, metadata !630, metadata !"__mask", metadata !629, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !625} ; [ DW_TAG_member ]
!633 = metadata !{i32 589837, metadata !630, metadata !"__wc", metadata !629, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !625} ; [ DW_TAG_member ]
!634 = metadata !{i32 589860, metadata !597, metadata !"long int", metadata !597, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!635 = metadata !{i32 589870, i32 0, metadata !636, metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !638, i32 16, metadata !639, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i64,
!636 = metadata !{i32 589865, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !637} ; [ DW_TAG_file_type ]
!637 = metadata !{i32 589841, i32 0, i32 1, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!638 = metadata !{i32 589865, metadata !"fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !637} ; [ DW_TAG_file_type ]
!639 = metadata !{i32 589845, metadata !636, metadata !"", metadata !636, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !640, i32 0, null} ; [ DW_TAG_subroutine_type ]
!640 = metadata !{metadata !641, metadata !644, metadata !641, metadata !641, metadata !645}
!641 = metadata !{i32 589846, metadata !642, metadata !"size_t", metadata !642, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !643} ; [ DW_TAG_typedef ]
!642 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !637} ; [ DW_TAG_file_type ]
!643 = metadata !{i32 589860, metadata !636, metadata !"long unsigned int", metadata !636, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!644 = metadata !{i32 589839, metadata !636, metadata !"", metadata !636, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!645 = metadata !{i32 589839, metadata !636, metadata !"", metadata !636, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !646} ; [ DW_TAG_pointer_type ]
!646 = metadata !{i32 589846, metadata !647, metadata !"FILE", metadata !647, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !648} ; [ DW_TAG_typedef ]
!647 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !637} ; [ DW_TAG_file_type ]
!648 = metadata !{i32 589843, metadata !636, metadata !"__STDIO_FILE_STRUCT", metadata !647, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !649, i32 0, null} ; [ DW_TAG_structure_type ]
!649 = metadata !{metadata !650, metadata !653, metadata !656, metadata !658, metadata !660, metadata !661, metadata !662, metadata !663, metadata !664, metadata !665, metadata !667, metadata !670}
!650 = metadata !{i32 589837, metadata !648, metadata !"__modeflags", metadata !651, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !652} ; [ DW_TAG_member ]
!651 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !637} ; [ DW_TAG_file_type ]
!652 = metadata !{i32 589860, metadata !636, metadata !"short unsigned int", metadata !636, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!653 = metadata !{i32 589837, metadata !648, metadata !"__ungot_width", metadata !651, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !654} ; [ DW_TAG_member ]
!654 = metadata !{i32 589825, metadata !636, metadata !"", metadata !636, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !655, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!655 = metadata !{i32 589860, metadata !636, metadata !"unsigned char", metadata !636, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!656 = metadata !{i32 589837, metadata !648, metadata !"__filedes", metadata !651, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !657} ; [ DW_TAG_member ]
!657 = metadata !{i32 589860, metadata !636, metadata !"int", metadata !636, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!658 = metadata !{i32 589837, metadata !648, metadata !"__bufstart", metadata !651, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !659} ; [ DW_TAG_member ]
!659 = metadata !{i32 589839, metadata !636, metadata !"", metadata !636, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !655} ; [ DW_TAG_pointer_type ]
!660 = metadata !{i32 589837, metadata !648, metadata !"__bufend", metadata !651, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !659} ; [ DW_TAG_member ]
!661 = metadata !{i32 589837, metadata !648, metadata !"__bufpos", metadata !651, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !659} ; [ DW_TAG_member ]
!662 = metadata !{i32 589837, metadata !648, metadata !"__bufread", metadata !651, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !659} ; [ DW_TAG_member ]
!663 = metadata !{i32 589837, metadata !648, metadata !"__bufgetc_u", metadata !651, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !659} ; [ DW_TAG_member ]
!664 = metadata !{i32 589837, metadata !648, metadata !"__bufputc_u", metadata !651, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !659} ; [ DW_TAG_member ]
!665 = metadata !{i32 589837, metadata !648, metadata !"__nextopen", metadata !651, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !666} ; [ DW_TAG_member ]
!666 = metadata !{i32 589839, metadata !636, metadata !"", metadata !636, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !648} ; [ DW_TAG_pointer_type ]
!667 = metadata !{i32 589837, metadata !648, metadata !"__ungot", metadata !651, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !668} ; [ DW_TAG_member ]
!668 = metadata !{i32 589825, metadata !636, metadata !"", metadata !636, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !669, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!669 = metadata !{i32 589846, metadata !642, metadata !"wchar_t", metadata !642, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !657} ; [ DW_TAG_typedef ]
!670 = metadata !{i32 589837, metadata !648, metadata !"__state", metadata !651, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !671} ; [ DW_TAG_member ]
!671 = metadata !{i32 589846, metadata !672, metadata !"__mbstate_t", metadata !672, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !673} ; [ DW_TAG_typedef ]
!672 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !637} ; [ DW_TAG_file_type ]
!673 = metadata !{i32 589843, metadata !636, metadata !"", metadata !672, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !674, i32 0, null} ; [ DW_TAG_structure_type ]
!674 = metadata !{metadata !675, metadata !676}
!675 = metadata !{i32 589837, metadata !673, metadata !"__mask", metadata !672, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !669} ; [ DW_TAG_member ]
!676 = metadata !{i32 589837, metadata !673, metadata !"__wc", metadata !672, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !669} ; [ DW_TAG_member ]
!677 = metadata !{i32 589870, i32 0, metadata !678, metadata !"wcswidth", metadata !"wcswidth", metadata !"wcswidth", metadata !680, i32 1136, metadata !681, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32*, i64)* @wcswidth} ; [ DW_TAG
!678 = metadata !{i32 589865, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !679} ; [ DW_TAG_file_type ]
!679 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!680 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !679} ; [ DW_TAG_file_type ]
!681 = metadata !{i32 589845, metadata !678, metadata !"", metadata !678, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !682, i32 0, null} ; [ DW_TAG_subroutine_type ]
!682 = metadata !{metadata !683, metadata !684, metadata !687}
!683 = metadata !{i32 589860, metadata !678, metadata !"int", metadata !678, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!684 = metadata !{i32 589839, metadata !678, metadata !"", metadata !678, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !685} ; [ DW_TAG_pointer_type ]
!685 = metadata !{i32 589846, metadata !686, metadata !"wchar_t", metadata !686, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !683} ; [ DW_TAG_typedef ]
!686 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !679} ; [ DW_TAG_file_type ]
!687 = metadata !{i32 589846, metadata !686, metadata !"size_t", metadata !686, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !688} ; [ DW_TAG_typedef ]
!688 = metadata !{i32 589860, metadata !678, metadata !"long unsigned int", metadata !678, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!689 = metadata !{i32 589870, i32 0, metadata !690, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !690, i32 18, metadata !692, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram ]
!690 = metadata !{i32 589865, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !691} ; [ DW_TAG_file_type ]
!691 = metadata !{i32 589841, i32 0, i32 1, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!692 = metadata !{i32 589845, metadata !690, metadata !"", metadata !690, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !693, i32 0, null} ; [ DW_TAG_subroutine_type ]
!693 = metadata !{metadata !694, metadata !696}
!694 = metadata !{i32 589839, metadata !690, metadata !"", metadata !690, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !695} ; [ DW_TAG_pointer_type ]
!695 = metadata !{i32 589860, metadata !690, metadata !"char", metadata !690, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!696 = metadata !{i32 589839, metadata !690, metadata !"", metadata !690, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !697} ; [ DW_TAG_pointer_type ]
!697 = metadata !{i32 589862, metadata !690, metadata !"", metadata !690, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !695} ; [ DW_TAG_const_type ]
!698 = metadata !{i32 589870, i32 0, metadata !699, metadata !"getline", metadata !"getline", metadata !"getline", metadata !699, i32 19, metadata !701, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8**, i64*, %4*)* @getline} ; [ DW_TAG
!699 = metadata !{i32 589865, metadata !"getline.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !700} ; [ DW_TAG_file_type ]
!700 = metadata !{i32 589841, i32 0, i32 1, metadata !"getline.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!701 = metadata !{i32 589845, metadata !699, metadata !"", metadata !699, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !702, i32 0, null} ; [ DW_TAG_subroutine_type ]
!702 = metadata !{metadata !703, metadata !706, metadata !709, metadata !713}
!703 = metadata !{i32 589846, metadata !704, metadata !"__ssize_t", metadata !704, i32 184, i64 0, i64 0, i64 0, i32 0, metadata !705} ; [ DW_TAG_typedef ]
!704 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !700} ; [ DW_TAG_file_type ]
!705 = metadata !{i32 589860, metadata !699, metadata !"long int", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!706 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !707} ; [ DW_TAG_pointer_type ]
!707 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !708} ; [ DW_TAG_pointer_type ]
!708 = metadata !{i32 589860, metadata !699, metadata !"char", metadata !699, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!709 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !710} ; [ DW_TAG_pointer_type ]
!710 = metadata !{i32 589846, metadata !711, metadata !"size_t", metadata !711, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !712} ; [ DW_TAG_typedef ]
!711 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !700} ; [ DW_TAG_file_type ]
!712 = metadata !{i32 589860, metadata !699, metadata !"long unsigned int", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!713 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !714} ; [ DW_TAG_pointer_type ]
!714 = metadata !{i32 589846, metadata !715, metadata !"FILE", metadata !715, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !716} ; [ DW_TAG_typedef ]
!715 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !700} ; [ DW_TAG_file_type ]
!716 = metadata !{i32 589843, metadata !699, metadata !"__STDIO_FILE_STRUCT", metadata !715, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !717, i32 0, null} ; [ DW_TAG_structure_type ]
!717 = metadata !{metadata !718, metadata !721, metadata !724, metadata !726, metadata !728, metadata !729, metadata !730, metadata !731, metadata !732, metadata !733, metadata !735, metadata !738}
!718 = metadata !{i32 589837, metadata !716, metadata !"__modeflags", metadata !719, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !720} ; [ DW_TAG_member ]
!719 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !700} ; [ DW_TAG_file_type ]
!720 = metadata !{i32 589860, metadata !699, metadata !"short unsigned int", metadata !699, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!721 = metadata !{i32 589837, metadata !716, metadata !"__ungot_width", metadata !719, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !722} ; [ DW_TAG_member ]
!722 = metadata !{i32 589825, metadata !699, metadata !"", metadata !699, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !723, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!723 = metadata !{i32 589860, metadata !699, metadata !"unsigned char", metadata !699, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!724 = metadata !{i32 589837, metadata !716, metadata !"__filedes", metadata !719, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !725} ; [ DW_TAG_member ]
!725 = metadata !{i32 589860, metadata !699, metadata !"int", metadata !699, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!726 = metadata !{i32 589837, metadata !716, metadata !"__bufstart", metadata !719, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !727} ; [ DW_TAG_member ]
!727 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !723} ; [ DW_TAG_pointer_type ]
!728 = metadata !{i32 589837, metadata !716, metadata !"__bufend", metadata !719, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !727} ; [ DW_TAG_member ]
!729 = metadata !{i32 589837, metadata !716, metadata !"__bufpos", metadata !719, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !727} ; [ DW_TAG_member ]
!730 = metadata !{i32 589837, metadata !716, metadata !"__bufread", metadata !719, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !727} ; [ DW_TAG_member ]
!731 = metadata !{i32 589837, metadata !716, metadata !"__bufgetc_u", metadata !719, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !727} ; [ DW_TAG_member ]
!732 = metadata !{i32 589837, metadata !716, metadata !"__bufputc_u", metadata !719, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !727} ; [ DW_TAG_member ]
!733 = metadata !{i32 589837, metadata !716, metadata !"__nextopen", metadata !719, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !734} ; [ DW_TAG_member ]
!734 = metadata !{i32 589839, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !716} ; [ DW_TAG_pointer_type ]
!735 = metadata !{i32 589837, metadata !716, metadata !"__ungot", metadata !719, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !736} ; [ DW_TAG_member ]
!736 = metadata !{i32 589825, metadata !699, metadata !"", metadata !699, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !737, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!737 = metadata !{i32 589846, metadata !711, metadata !"wchar_t", metadata !711, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !725} ; [ DW_TAG_typedef ]
!738 = metadata !{i32 589837, metadata !716, metadata !"__state", metadata !719, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !739} ; [ DW_TAG_member ]
!739 = metadata !{i32 589846, metadata !740, metadata !"__mbstate_t", metadata !740, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !741} ; [ DW_TAG_typedef ]
!740 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !700} ; [ DW_TAG_file_type ]
!741 = metadata !{i32 589843, metadata !699, metadata !"", metadata !740, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !742, i32 0, null} ; [ DW_TAG_structure_type ]
!742 = metadata !{metadata !743, metadata !744}
!743 = metadata !{i32 589837, metadata !741, metadata !"__mask", metadata !740, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !737} ; [ DW_TAG_member ]
!744 = metadata !{i32 589837, metadata !741, metadata !"__wc", metadata !740, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !737} ; [ DW_TAG_member ]
!745 = metadata !{i32 589870, i32 0, metadata !746, metadata !"exchange", metadata !"exchange", metadata !"", metadata !746, i32 220, metadata !748, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8**, %struct._getopt_data*)* @exchange} ;
!746 = metadata !{i32 589865, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !747} ; [ DW_TAG_file_type ]
!747 = metadata !{i32 589841, i32 0, i32 1, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!748 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !749, i32 0, null} ; [ DW_TAG_subroutine_type ]
!749 = metadata !{null, metadata !750, metadata !753}
!750 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !751} ; [ DW_TAG_pointer_type ]
!751 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !752} ; [ DW_TAG_pointer_type ]
!752 = metadata !{i32 589860, metadata !746, metadata !"char", metadata !746, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!753 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !754} ; [ DW_TAG_pointer_type ]
!754 = metadata !{i32 589843, metadata !746, metadata !"_getopt_data", metadata !755, i32 35, i64 448, i64 64, i64 0, i32 0, null, metadata !756, i32 0, null} ; [ DW_TAG_structure_type ]
!755 = metadata !{i32 589865, metadata !"getopt_int.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !747} ; [ DW_TAG_file_type ]
!756 = metadata !{metadata !757, metadata !759, metadata !760, metadata !761, metadata !762, metadata !763, metadata !764, metadata !770, metadata !771, metadata !772}
!757 = metadata !{i32 589837, metadata !754, metadata !"optind", metadata !755, i32 39, i64 32, i64 32, i64 0, i32 0, metadata !758} ; [ DW_TAG_member ]
!758 = metadata !{i32 589860, metadata !746, metadata !"int", metadata !746, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!759 = metadata !{i32 589837, metadata !754, metadata !"opterr", metadata !755, i32 40, i64 32, i64 32, i64 32, i32 0, metadata !758} ; [ DW_TAG_member ]
!760 = metadata !{i32 589837, metadata !754, metadata !"optopt", metadata !755, i32 41, i64 32, i64 32, i64 64, i32 0, metadata !758} ; [ DW_TAG_member ]
!761 = metadata !{i32 589837, metadata !754, metadata !"optarg", metadata !755, i32 42, i64 64, i64 64, i64 128, i32 0, metadata !751} ; [ DW_TAG_member ]
!762 = metadata !{i32 589837, metadata !754, metadata !"__initialized", metadata !755, i32 47, i64 32, i64 32, i64 192, i32 0, metadata !758} ; [ DW_TAG_member ]
!763 = metadata !{i32 589837, metadata !754, metadata !"__nextchar", metadata !755, i32 55, i64 64, i64 64, i64 256, i32 0, metadata !751} ; [ DW_TAG_member ]
!764 = metadata !{i32 589837, metadata !754, metadata !"__ordering", metadata !755, i32 89, i64 32, i64 32, i64 320, i32 0, metadata !765} ; [ DW_TAG_member ]
!765 = metadata !{i32 589828, metadata !746, metadata !"", metadata !755, i32 87, i64 32, i64 32, i64 0, i32 0, null, metadata !766, i32 0, null} ; [ DW_TAG_enumeration_type ]
!766 = metadata !{metadata !767, metadata !768, metadata !769}
!767 = metadata !{i32 589864, metadata !"REQUIRE_ORDER", i64 0} ; [ DW_TAG_enumerator ]
!768 = metadata !{i32 589864, metadata !"PERMUTE", i64 1} ; [ DW_TAG_enumerator ]
!769 = metadata !{i32 589864, metadata !"RETURN_IN_ORDER", i64 2} ; [ DW_TAG_enumerator ]
!770 = metadata !{i32 589837, metadata !754, metadata !"__posixly_correct", metadata !755, i32 92, i64 32, i64 32, i64 352, i32 0, metadata !758} ; [ DW_TAG_member ]
!771 = metadata !{i32 589837, metadata !754, metadata !"__first_nonopt", metadata !755, i32 101, i64 32, i64 32, i64 384, i32 0, metadata !758} ; [ DW_TAG_member ]
!772 = metadata !{i32 589837, metadata !754, metadata !"__last_nonopt", metadata !755, i32 102, i64 32, i64 32, i64 416, i32 0, metadata !758} ; [ DW_TAG_member ]
!773 = metadata !{i32 589870, i32 0, metadata !746, metadata !"_getopt_initialize", metadata !"_getopt_initialize", metadata !"", metadata !746, i32 302, metadata !774, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8**, i8*, %struct
!774 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !775, i32 0, null} ; [ DW_TAG_subroutine_type ]
!775 = metadata !{metadata !776, metadata !758, metadata !778, metadata !776, metadata !753}
!776 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !777} ; [ DW_TAG_pointer_type ]
!777 = metadata !{i32 589862, metadata !746, metadata !"", metadata !746, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !752} ; [ DW_TAG_const_type ]
!778 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !779} ; [ DW_TAG_pointer_type ]
!779 = metadata !{i32 589862, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !751} ; [ DW_TAG_const_type ]
!780 = metadata !{i32 589870, i32 0, metadata !746, metadata !"_getopt_internal_r", metadata !"_getopt_internal_r", metadata !"", metadata !746, i32 423, metadata !781, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct
!781 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !782, i32 0, null} ; [ DW_TAG_subroutine_type ]
!782 = metadata !{metadata !758, metadata !758, metadata !778, metadata !776, metadata !783, metadata !791, metadata !758, metadata !753}
!783 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !784} ; [ DW_TAG_pointer_type ]
!784 = metadata !{i32 589862, metadata !746, metadata !"", metadata !746, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !785} ; [ DW_TAG_const_type ]
!785 = metadata !{i32 589843, metadata !746, metadata !"option", metadata !786, i32 109, i64 256, i64 64, i64 0, i32 0, null, metadata !787, i32 0, null} ; [ DW_TAG_structure_type ]
!786 = metadata !{i32 589865, metadata !"getopt.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !747} ; [ DW_TAG_file_type ]
!787 = metadata !{metadata !788, metadata !789, metadata !790, metadata !792}
!788 = metadata !{i32 589837, metadata !785, metadata !"name", metadata !786, i32 110, i64 64, i64 64, i64 0, i32 0, metadata !776} ; [ DW_TAG_member ]
!789 = metadata !{i32 589837, metadata !785, metadata !"has_arg", metadata !786, i32 113, i64 32, i64 32, i64 64, i32 0, metadata !758} ; [ DW_TAG_member ]
!790 = metadata !{i32 589837, metadata !785, metadata !"flag", metadata !786, i32 114, i64 64, i64 64, i64 128, i32 0, metadata !791} ; [ DW_TAG_member ]
!791 = metadata !{i32 589839, metadata !746, metadata !"", metadata !746, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !758} ; [ DW_TAG_pointer_type ]
!792 = metadata !{i32 589837, metadata !785, metadata !"val", metadata !786, i32 115, i64 32, i64 32, i64 192, i32 0, metadata !758} ; [ DW_TAG_member ]
!793 = metadata !{i32 589870, i32 0, metadata !746, metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !746, i32 1159, metadata !794, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!794 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !795, i32 0, null} ; [ DW_TAG_subroutine_type ]
!795 = metadata !{metadata !758, metadata !758, metadata !778, metadata !776, metadata !783, metadata !791, metadata !758}
!796 = metadata !{i32 589870, i32 0, metadata !746, metadata !"getopt", metadata !"getopt", metadata !"getopt", metadata !746, i32 1177, metadata !797, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*)* @getopt} ; [ DW_TAG_su
!797 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !798, i32 0, null} ; [ DW_TAG_subroutine_type ]
!798 = metadata !{metadata !758, metadata !758, metadata !778, metadata !776}
!799 = metadata !{i32 589870, i32 0, metadata !746, metadata !"getopt_long", metadata !"getopt_long", metadata !"getopt_long", metadata !746, i32 1187, metadata !800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct.
!800 = metadata !{i32 589845, metadata !746, metadata !"", metadata !746, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !801, i32 0, null} ; [ DW_TAG_subroutine_type ]
!801 = metadata !{metadata !758, metadata !758, metadata !778, metadata !776, metadata !783, metadata !791}
!802 = metadata !{i32 589870, i32 0, metadata !746, metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !746, i32 1199, metadata !800, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!803 = metadata !{i32 589870, i32 0, metadata !804, metadata !"__setutent", metadata !"__setutent", metadata !"", metadata !804, i32 46, metadata !806, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__setutent} ; [ DW_TAG_subprogram ]
!804 = metadata !{i32 589865, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !805} ; [ DW_TAG_file_type ]
!805 = metadata !{i32 589841, i32 0, i32 1, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!806 = metadata !{i32 589845, metadata !804, metadata !"", metadata !804, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!807 = metadata !{i32 589870, i32 0, metadata !804, metadata !"setutent", metadata !"setutent", metadata !"setutent", metadata !804, i32 73, metadata !806, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @setutent} ; [ DW_TAG_subprogra
!808 = metadata !{i32 589870, i32 0, metadata !804, metadata !"__getutent", metadata !"__getutent", metadata !"", metadata !804, i32 82, metadata !809, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (i32)* @__getutent} ; [ DW_TAG_
!809 = metadata !{i32 589845, metadata !804, metadata !"", metadata !804, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !810, i32 0, null} ; [ DW_TAG_subroutine_type ]
!810 = metadata !{metadata !811, metadata !820}
!811 = metadata !{i32 589839, metadata !804, metadata !"", metadata !804, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !812} ; [ DW_TAG_pointer_type ]
!812 = metadata !{i32 589843, metadata !804, metadata !"utmp", metadata !813, i32 61, i64 3200, i64 64, i64 0, i32 0, null, metadata !814, i32 0, null} ; [ DW_TAG_structure_type ]
!813 = metadata !{i32 589865, metadata !"utmp.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !805} ; [ DW_TAG_file_type ]
!814 = metadata !{metadata !815, metadata !817, metadata !821, metadata !826, metadata !830, metadata !831, metadata !835, metadata !840, metadata !842, metadata !851, metadata !854}
!815 = metadata !{i32 589837, metadata !812, metadata !"ut_type", metadata !813, i32 62, i64 16, i64 16, i64 0, i32 0, metadata !816} ; [ DW_TAG_member ]
!816 = metadata !{i32 589860, metadata !804, metadata !"short int", metadata !804, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!817 = metadata !{i32 589837, metadata !812, metadata !"ut_pid", metadata !813, i32 63, i64 32, i64 32, i64 32, i32 0, metadata !818} ; [ DW_TAG_member ]
!818 = metadata !{i32 589846, metadata !819, metadata !"pid_t", metadata !819, i32 100, i64 0, i64 0, i64 0, i32 0, metadata !820} ; [ DW_TAG_typedef ]
!819 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !805} ; [ DW_TAG_file_type ]
!820 = metadata !{i32 589860, metadata !804, metadata !"int", metadata !804, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!821 = metadata !{i32 589837, metadata !812, metadata !"ut_line", metadata !813, i32 64, i64 256, i64 8, i64 64, i32 0, metadata !822} ; [ DW_TAG_member ]
!822 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !823, metadata !824, i32 0, null} ; [ DW_TAG_array_type ]
!823 = metadata !{i32 589860, metadata !804, metadata !"char", metadata !804, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!824 = metadata !{metadata !825}
!825 = metadata !{i32 589857, i64 0, i64 31}      ; [ DW_TAG_subrange_type ]
!826 = metadata !{i32 589837, metadata !812, metadata !"ut_id", metadata !813, i32 65, i64 32, i64 8, i64 320, i32 0, metadata !827} ; [ DW_TAG_member ]
!827 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !823, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!828 = metadata !{metadata !829}
!829 = metadata !{i32 589857, i64 0, i64 3}       ; [ DW_TAG_subrange_type ]
!830 = metadata !{i32 589837, metadata !812, metadata !"ut_user", metadata !813, i32 66, i64 256, i64 8, i64 352, i32 0, metadata !822} ; [ DW_TAG_member ]
!831 = metadata !{i32 589837, metadata !812, metadata !"ut_host", metadata !813, i32 67, i64 2048, i64 8, i64 608, i32 0, metadata !832} ; [ DW_TAG_member ]
!832 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !823, metadata !833, i32 0, null} ; [ DW_TAG_array_type ]
!833 = metadata !{metadata !834}
!834 = metadata !{i32 589857, i64 0, i64 255}     ; [ DW_TAG_subrange_type ]
!835 = metadata !{i32 589837, metadata !812, metadata !"ut_exit", metadata !813, i32 68, i64 32, i64 16, i64 2656, i32 0, metadata !836} ; [ DW_TAG_member ]
!836 = metadata !{i32 589843, metadata !804, metadata !"exit_status", metadata !813, i32 53, i64 32, i64 16, i64 0, i32 0, null, metadata !837, i32 0, null} ; [ DW_TAG_structure_type ]
!837 = metadata !{metadata !838, metadata !839}
!838 = metadata !{i32 589837, metadata !836, metadata !"e_termination", metadata !813, i32 54, i64 16, i64 16, i64 0, i32 0, metadata !816} ; [ DW_TAG_member ]
!839 = metadata !{i32 589837, metadata !836, metadata !"e_exit", metadata !813, i32 55, i64 16, i64 16, i64 16, i32 0, metadata !816} ; [ DW_TAG_member ]
!840 = metadata !{i32 589837, metadata !812, metadata !"ut_session", metadata !813, i32 81, i64 64, i64 64, i64 2688, i32 0, metadata !841} ; [ DW_TAG_member ]
!841 = metadata !{i32 589860, metadata !804, metadata !"long int", metadata !804, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!842 = metadata !{i32 589837, metadata !812, metadata !"ut_tv", metadata !813, i32 82, i64 128, i64 64, i64 2752, i32 0, metadata !843} ; [ DW_TAG_member ]
!843 = metadata !{i32 589843, metadata !804, metadata !"timeval", metadata !844, i32 74, i64 128, i64 64, i64 0, i32 0, null, metadata !845, i32 0, null} ; [ DW_TAG_structure_type ]
!844 = metadata !{i32 589865, metadata !"time.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !805} ; [ DW_TAG_file_type ]
!845 = metadata !{metadata !846, metadata !849}
!846 = metadata !{i32 589837, metadata !843, metadata !"tv_sec", metadata !844, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !847} ; [ DW_TAG_member ]
!847 = metadata !{i32 589846, metadata !848, metadata !"__time_t", metadata !848, i32 153, i64 0, i64 0, i64 0, i32 0, metadata !841} ; [ DW_TAG_typedef ]
!848 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !805} ; [ DW_TAG_file_type ]
!849 = metadata !{i32 589837, metadata !843, metadata !"tv_usec", metadata !844, i32 76, i64 64, i64 64, i64 64, i32 0, metadata !850} ; [ DW_TAG_member ]
!850 = metadata !{i32 589846, metadata !848, metadata !"__suseconds_t", metadata !848, i32 155, i64 0, i64 0, i64 0, i32 0, metadata !841} ; [ DW_TAG_typedef ]
!851 = metadata !{i32 589837, metadata !812, metadata !"ut_addr_v6", metadata !813, i32 85, i64 128, i64 32, i64 2880, i32 0, metadata !852} ; [ DW_TAG_member ]
!852 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !853, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!853 = metadata !{i32 589846, metadata !819, metadata !"int32_t", metadata !819, i32 197, i64 0, i64 0, i64 0, i32 0, metadata !820} ; [ DW_TAG_typedef ]
!854 = metadata !{i32 589837, metadata !812, metadata !"__unused", metadata !813, i32 86, i64 160, i64 8, i64 3008, i32 0, metadata !855} ; [ DW_TAG_member ]
!855 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !823, metadata !856, i32 0, null} ; [ DW_TAG_array_type ]
!856 = metadata !{metadata !857}
!857 = metadata !{i32 589857, i64 0, i64 19}      ; [ DW_TAG_subrange_type ]
!858 = metadata !{i32 589870, i32 0, metadata !804, metadata !"endutent", metadata !"endutent", metadata !"endutent", metadata !804, i32 101, metadata !806, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @endutent} ; [ DW_TAG_subprogr
!859 = metadata !{i32 589870, i32 0, metadata !804, metadata !"getutent", metadata !"getutent", metadata !"getutent", metadata !804, i32 110, metadata !860, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* ()* @getutent} ; [ DW_TAG
!860 = metadata !{i32 589845, metadata !804, metadata !"", metadata !804, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !861, i32 0, null} ; [ DW_TAG_subroutine_type ]
!861 = metadata !{metadata !811}
!862 = metadata !{i32 589870, i32 0, metadata !804, metadata !"__getutid", metadata !"__getutid", metadata !"", metadata !804, i32 121, metadata !863, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @__getutid} ; [
!863 = metadata !{i32 589845, metadata !804, metadata !"", metadata !804, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !864, i32 0, null} ; [ DW_TAG_subroutine_type ]
!864 = metadata !{metadata !811, metadata !865}
!865 = metadata !{i32 589839, metadata !804, metadata !"", metadata !804, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !866} ; [ DW_TAG_pointer_type ]
!866 = metadata !{i32 589862, metadata !804, metadata !"", metadata !804, i32 0, i64 3200, i64 64, i64 0, i32 0, metadata !812} ; [ DW_TAG_const_type ]
!867 = metadata !{i32 589870, i32 0, metadata !804, metadata !"getutid", metadata !"getutid", metadata !"getutid", metadata !804, i32 148, metadata !863, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getutid} ;
!868 = metadata !{i32 589870, i32 0, metadata !804, metadata !"getutline", metadata !"getutline", metadata !"getutline", metadata !804, i32 159, metadata !863, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getu
!869 = metadata !{i32 589870, i32 0, metadata !804, metadata !"pututline", metadata !"pututline", metadata !"pututline", metadata !804, i32 174, metadata !863, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @putu
!870 = metadata !{i32 589870, i32 0, metadata !804, metadata !"utmpname", metadata !"utmpname", metadata !"utmpname", metadata !804, i32 192, metadata !871, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*)* @utmpname} ; [ DW_TAG_subpro
!871 = metadata !{i32 589845, metadata !804, metadata !"", metadata !804, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !872, i32 0, null} ; [ DW_TAG_subroutine_type ]
!872 = metadata !{metadata !820, metadata !873}
!873 = metadata !{i32 589839, metadata !804, metadata !"", metadata !804, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !874} ; [ DW_TAG_pointer_type ]
!874 = metadata !{i32 589862, metadata !804, metadata !"", metadata !804, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !823} ; [ DW_TAG_const_type ]
!875 = metadata !{i32 589870, i32 0, metadata !876, metadata !"iswcntrl", metadata !"iswcntrl", metadata !"iswcntrl", metadata !878, i32 235, metadata !879, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswcntrl} ; [ DW_TAG_subpro
!876 = metadata !{i32 589865, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !877} ; [ DW_TAG_file_type ]
!877 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!878 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !877} ; [ DW_TAG_file_type ]
!879 = metadata !{i32 589845, metadata !876, metadata !"", metadata !876, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !880, i32 0, null} ; [ DW_TAG_subroutine_type ]
!880 = metadata !{metadata !881, metadata !882}
!881 = metadata !{i32 589860, metadata !876, metadata !"int", metadata !876, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!882 = metadata !{i32 589846, metadata !883, metadata !"wint_t", metadata !883, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !884} ; [ DW_TAG_typedef ]
!883 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !877} ; [ DW_TAG_file_type ]
!884 = metadata !{i32 589860, metadata !876, metadata !"unsigned int", metadata !876, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!885 = metadata !{i32 589870, i32 0, metadata !886, metadata !"iswprint", metadata !"iswprint", metadata !"iswprint", metadata !888, i32 259, metadata !889, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswprint} ; [ DW_TAG_subpro
!886 = metadata !{i32 589865, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !887} ; [ DW_TAG_file_type ]
!887 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!888 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !887} ; [ DW_TAG_file_type ]
!889 = metadata !{i32 589845, metadata !886, metadata !"", metadata !886, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !890, i32 0, null} ; [ DW_TAG_subroutine_type ]
!890 = metadata !{metadata !891, metadata !892}
!891 = metadata !{i32 589860, metadata !886, metadata !"int", metadata !886, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!892 = metadata !{i32 589846, metadata !893, metadata !"wint_t", metadata !893, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !894} ; [ DW_TAG_typedef ]
!893 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !887} ; [ DW_TAG_file_type ]
!894 = metadata !{i32 589860, metadata !886, metadata !"unsigned int", metadata !886, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!895 = metadata !{i32 589870, i32 0, metadata !896, metadata !"localeconv", metadata !"localeconv", metadata !"localeconv", metadata !898, i32 317, metadata !899, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.lconv* ()* @localeconv} ;
!896 = metadata !{i32 589865, metadata !"localeconv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !897} ; [ DW_TAG_file_type ]
!897 = metadata !{i32 589841, i32 0, i32 1, metadata !"localeconv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!898 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !897} ; [ DW_TAG_file_type ]
!899 = metadata !{i32 589845, metadata !896, metadata !"", metadata !896, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !900, i32 0, null} ; [ DW_TAG_subroutine_type ]
!900 = metadata !{metadata !901}
!901 = metadata !{i32 589839, metadata !896, metadata !"", metadata !896, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !902} ; [ DW_TAG_pointer_type ]
!902 = metadata !{i32 589843, metadata !896, metadata !"lconv", metadata !903, i32 58, i64 768, i64 64, i64 0, i32 0, null, metadata !904, i32 0, null} ; [ DW_TAG_structure_type ]
!903 = metadata !{i32 589865, metadata !"locale.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !897} ; [ DW_TAG_file_type ]
!904 = metadata !{metadata !905, metadata !908, metadata !909, metadata !910, metadata !911, metadata !912, metadata !913, metadata !914, metadata !915, metadata !916, metadata !917, metadata !918, metadata !919, metadata !920, metadata !921, metadata !9
!905 = metadata !{i32 589837, metadata !902, metadata !"decimal_point", metadata !903, i32 61, i64 64, i64 64, i64 0, i32 0, metadata !906} ; [ DW_TAG_member ]
!906 = metadata !{i32 589839, metadata !896, metadata !"", metadata !896, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !907} ; [ DW_TAG_pointer_type ]
!907 = metadata !{i32 589860, metadata !896, metadata !"char", metadata !896, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!908 = metadata !{i32 589837, metadata !902, metadata !"thousands_sep", metadata !903, i32 62, i64 64, i64 64, i64 64, i32 0, metadata !906} ; [ DW_TAG_member ]
!909 = metadata !{i32 589837, metadata !902, metadata !"grouping", metadata !903, i32 68, i64 64, i64 64, i64 128, i32 0, metadata !906} ; [ DW_TAG_member ]
!910 = metadata !{i32 589837, metadata !902, metadata !"int_curr_symbol", metadata !903, i32 74, i64 64, i64 64, i64 192, i32 0, metadata !906} ; [ DW_TAG_member ]
!911 = metadata !{i32 589837, metadata !902, metadata !"currency_symbol", metadata !903, i32 75, i64 64, i64 64, i64 256, i32 0, metadata !906} ; [ DW_TAG_member ]
!912 = metadata !{i32 589837, metadata !902, metadata !"mon_decimal_point", metadata !903, i32 76, i64 64, i64 64, i64 320, i32 0, metadata !906} ; [ DW_TAG_member ]
!913 = metadata !{i32 589837, metadata !902, metadata !"mon_thousands_sep", metadata !903, i32 77, i64 64, i64 64, i64 384, i32 0, metadata !906} ; [ DW_TAG_member ]
!914 = metadata !{i32 589837, metadata !902, metadata !"mon_grouping", metadata !903, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !906} ; [ DW_TAG_member ]
!915 = metadata !{i32 589837, metadata !902, metadata !"positive_sign", metadata !903, i32 79, i64 64, i64 64, i64 512, i32 0, metadata !906} ; [ DW_TAG_member ]
!916 = metadata !{i32 589837, metadata !902, metadata !"negative_sign", metadata !903, i32 80, i64 64, i64 64, i64 576, i32 0, metadata !906} ; [ DW_TAG_member ]
!917 = metadata !{i32 589837, metadata !902, metadata !"int_frac_digits", metadata !903, i32 81, i64 8, i64 8, i64 640, i32 0, metadata !907} ; [ DW_TAG_member ]
!918 = metadata !{i32 589837, metadata !902, metadata !"frac_digits", metadata !903, i32 82, i64 8, i64 8, i64 648, i32 0, metadata !907} ; [ DW_TAG_member ]
!919 = metadata !{i32 589837, metadata !902, metadata !"p_cs_precedes", metadata !903, i32 84, i64 8, i64 8, i64 656, i32 0, metadata !907} ; [ DW_TAG_member ]
!920 = metadata !{i32 589837, metadata !902, metadata !"p_sep_by_space", metadata !903, i32 86, i64 8, i64 8, i64 664, i32 0, metadata !907} ; [ DW_TAG_member ]
!921 = metadata !{i32 589837, metadata !902, metadata !"n_cs_precedes", metadata !903, i32 88, i64 8, i64 8, i64 672, i32 0, metadata !907} ; [ DW_TAG_member ]
!922 = metadata !{i32 589837, metadata !902, metadata !"n_sep_by_space", metadata !903, i32 90, i64 8, i64 8, i64 680, i32 0, metadata !907} ; [ DW_TAG_member ]
!923 = metadata !{i32 589837, metadata !902, metadata !"p_sign_posn", metadata !903, i32 97, i64 8, i64 8, i64 688, i32 0, metadata !907} ; [ DW_TAG_member ]
!924 = metadata !{i32 589837, metadata !902, metadata !"n_sign_posn", metadata !903, i32 98, i64 8, i64 8, i64 696, i32 0, metadata !907} ; [ DW_TAG_member ]
!925 = metadata !{i32 589837, metadata !902, metadata !"int_p_cs_precedes", metadata !903, i32 101, i64 8, i64 8, i64 704, i32 0, metadata !907} ; [ DW_TAG_member ]
!926 = metadata !{i32 589837, metadata !902, metadata !"int_p_sep_by_space", metadata !903, i32 103, i64 8, i64 8, i64 712, i32 0, metadata !907} ; [ DW_TAG_member ]
!927 = metadata !{i32 589837, metadata !902, metadata !"int_n_cs_precedes", metadata !903, i32 105, i64 8, i64 8, i64 720, i32 0, metadata !907} ; [ DW_TAG_member ]
!928 = metadata !{i32 589837, metadata !902, metadata !"int_n_sep_by_space", metadata !903, i32 107, i64 8, i64 8, i64 728, i32 0, metadata !907} ; [ DW_TAG_member ]
!929 = metadata !{i32 589837, metadata !902, metadata !"int_p_sign_posn", metadata !903, i32 114, i64 8, i64 8, i64 736, i32 0, metadata !907} ; [ DW_TAG_member ]
!930 = metadata !{i32 589837, metadata !902, metadata !"int_n_sign_posn", metadata !903, i32 115, i64 8, i64 8, i64 744, i32 0, metadata !907} ; [ DW_TAG_member ]
!931 = metadata !{i32 589870, i32 0, metadata !932, metadata !"mbrtowc", metadata !"mbrtowc", metadata !"mbrtowc", metadata !934, i32 280, metadata !935, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8*, i64, %struct.__mbstate_t*)
!932 = metadata !{i32 589865, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !933} ; [ DW_TAG_file_type ]
!933 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!934 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !933} ; [ DW_TAG_file_type ]
!935 = metadata !{i32 589845, metadata !932, metadata !"", metadata !932, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !936, i32 0, null} ; [ DW_TAG_subroutine_type ]
!936 = metadata !{metadata !937, metadata !940, metadata !943, metadata !937, metadata !946}
!937 = metadata !{i32 589846, metadata !938, metadata !"size_t", metadata !938, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !939} ; [ DW_TAG_typedef ]
!938 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !933} ; [ DW_TAG_file_type ]
!939 = metadata !{i32 589860, metadata !932, metadata !"long unsigned int", metadata !932, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!940 = metadata !{i32 589839, metadata !932, metadata !"", metadata !932, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !941} ; [ DW_TAG_pointer_type ]
!941 = metadata !{i32 589846, metadata !938, metadata !"wchar_t", metadata !938, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !942} ; [ DW_TAG_typedef ]
!942 = metadata !{i32 589860, metadata !932, metadata !"int", metadata !932, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!943 = metadata !{i32 589839, metadata !932, metadata !"", metadata !932, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !944} ; [ DW_TAG_pointer_type ]
!944 = metadata !{i32 589862, metadata !932, metadata !"", metadata !932, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !945} ; [ DW_TAG_const_type ]
!945 = metadata !{i32 589860, metadata !932, metadata !"char", metadata !932, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!946 = metadata !{i32 589839, metadata !932, metadata !"", metadata !932, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !947} ; [ DW_TAG_pointer_type ]
!947 = metadata !{i32 589846, metadata !948, metadata !"mbstate_t", metadata !948, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !949} ; [ DW_TAG_typedef ]
!948 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !933} ; [ DW_TAG_file_type ]
!949 = metadata !{i32 589843, metadata !932, metadata !"", metadata !948, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !950, i32 0, null} ; [ DW_TAG_structure_type ]
!950 = metadata !{metadata !951, metadata !952}
!951 = metadata !{i32 589837, metadata !949, metadata !"__mask", metadata !948, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !941} ; [ DW_TAG_member ]
!952 = metadata !{i32 589837, metadata !949, metadata !"__wc", metadata !948, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !941} ; [ DW_TAG_member ]
!953 = metadata !{i32 589870, i32 0, metadata !954, metadata !"mbsinit", metadata !"mbsinit", metadata !"mbsinit", metadata !956, i32 251, metadata !957, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__mbstate_t*)* @mbsinit} ; [ 
!954 = metadata !{i32 589865, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !955} ; [ DW_TAG_file_type ]
!955 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!956 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !955} ; [ DW_TAG_file_type ]
!957 = metadata !{i32 589845, metadata !954, metadata !"", metadata !954, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !958, i32 0, null} ; [ DW_TAG_subroutine_type ]
!958 = metadata !{metadata !959, metadata !960}
!959 = metadata !{i32 589860, metadata !954, metadata !"int", metadata !954, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!960 = metadata !{i32 589839, metadata !954, metadata !"", metadata !954, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !961} ; [ DW_TAG_pointer_type ]
!961 = metadata !{i32 589846, metadata !962, metadata !"mbstate_t", metadata !962, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !963} ; [ DW_TAG_typedef ]
!962 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !955} ; [ DW_TAG_file_type ]
!963 = metadata !{i32 589843, metadata !954, metadata !"", metadata !962, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !964, i32 0, null} ; [ DW_TAG_structure_type ]
!964 = metadata !{metadata !965, metadata !968}
!965 = metadata !{i32 589837, metadata !963, metadata !"__mask", metadata !962, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !966} ; [ DW_TAG_member ]
!966 = metadata !{i32 589846, metadata !967, metadata !"wchar_t", metadata !967, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !959} ; [ DW_TAG_typedef ]
!967 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !955} ; [ DW_TAG_file_type ]
!968 = metadata !{i32 589837, metadata !963, metadata !"__wc", metadata !962, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !966} ; [ DW_TAG_member ]
!969 = metadata !{i32 589870, i32 0, metadata !970, metadata !"mbstowcs", metadata !"mbstowcs", metadata !"mbstowcs", metadata !972, i32 1018, metadata !973, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8*, i64)* @mbstowcs} ; [ D
!970 = metadata !{i32 589865, metadata !"mbstowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !971} ; [ DW_TAG_file_type ]
!971 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbstowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!972 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !971} ; [ DW_TAG_file_type ]
!973 = metadata !{i32 589845, metadata !970, metadata !"", metadata !970, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !974, i32 0, null} ; [ DW_TAG_subroutine_type ]
!974 = metadata !{metadata !975, metadata !978, metadata !981, metadata !975}
!975 = metadata !{i32 589846, metadata !976, metadata !"size_t", metadata !976, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !977} ; [ DW_TAG_typedef ]
!976 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !971} ; [ DW_TAG_file_type ]
!977 = metadata !{i32 589860, metadata !970, metadata !"long unsigned int", metadata !970, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!978 = metadata !{i32 589839, metadata !970, metadata !"", metadata !970, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !979} ; [ DW_TAG_pointer_type ]
!979 = metadata !{i32 589846, metadata !976, metadata !"wchar_t", metadata !976, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !980} ; [ DW_TAG_typedef ]
!980 = metadata !{i32 589860, metadata !970, metadata !"int", metadata !970, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!981 = metadata !{i32 589839, metadata !970, metadata !"", metadata !970, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !982} ; [ DW_TAG_pointer_type ]
!982 = metadata !{i32 589862, metadata !970, metadata !"", metadata !970, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !983} ; [ DW_TAG_const_type ]
!983 = metadata !{i32 589860, metadata !970, metadata !"char", metadata !970, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!984 = metadata !{i32 589870, i32 0, metadata !985, metadata !"memchr", metadata !"memchr", metadata !"memchr", metadata !985, i32 19, metadata !987, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memchr} ; [ DW_TAG_subpr
!985 = metadata !{i32 589865, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !986} ; [ DW_TAG_file_type ]
!986 = metadata !{i32 589841, i32 0, i32 1, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!987 = metadata !{i32 589845, metadata !985, metadata !"", metadata !985, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !988, i32 0, null} ; [ DW_TAG_subroutine_type ]
!988 = metadata !{metadata !989, metadata !989, metadata !990, metadata !991}
!989 = metadata !{i32 589839, metadata !985, metadata !"", metadata !985, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!990 = metadata !{i32 589860, metadata !985, metadata !"int", metadata !985, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!991 = metadata !{i32 589846, metadata !992, metadata !"size_t", metadata !992, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !993} ; [ DW_TAG_typedef ]
!992 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !986} ; [ DW_TAG_file_type ]
!993 = metadata !{i32 589860, metadata !985, metadata !"long unsigned int", metadata !985, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!994 = metadata !{i32 589870, i32 0, metadata !995, metadata !"memcmp", metadata !"memcmp", metadata !"memcmp", metadata !995, i32 18, metadata !997, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @memcmp} ; [ DW_TAG_subpr
!995 = metadata !{i32 589865, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !996} ; [ DW_TAG_file_type ]
!996 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!997 = metadata !{i32 589845, metadata !995, metadata !"", metadata !995, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !998, i32 0, null} ; [ DW_TAG_subroutine_type ]
!998 = metadata !{metadata !999, metadata !1000, metadata !1000, metadata !1001}
!999 = metadata !{i32 589860, metadata !995, metadata !"int", metadata !995, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1000 = metadata !{i32 589839, metadata !995, metadata !"", metadata !995, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1001 = metadata !{i32 589846, metadata !1002, metadata !"size_t", metadata !1002, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1003} ; [ DW_TAG_typedef ]
!1002 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !996} ; [ DW_TAG_file_type ]
!1003 = metadata !{i32 589860, metadata !995, metadata !"long unsigned int", metadata !995, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1004 = metadata !{i32 589870, i32 0, metadata !1005, metadata !"mempcpy", metadata !"mempcpy", metadata !"mempcpy", metadata !1005, i32 21, metadata !1007, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @mempcpy} ; [ DW_T
!1005 = metadata !{i32 589865, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1006} ; [ DW_TAG_file_type ]
!1006 = metadata !{i32 589841, i32 0, i32 1, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1007 = metadata !{i32 589845, metadata !1005, metadata !"", metadata !1005, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1008, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1008 = metadata !{metadata !1009, metadata !1009, metadata !1009, metadata !1010}
!1009 = metadata !{i32 589839, metadata !1005, metadata !"", metadata !1005, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1010 = metadata !{i32 589846, metadata !1011, metadata !"size_t", metadata !1011, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1012} ; [ DW_TAG_typedef ]
!1011 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1006} ; [ DW_TAG_file_type ]
!1012 = metadata !{i32 589860, metadata !1005, metadata !"long unsigned int", metadata !1005, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1013 = metadata !{i32 589870, i32 0, metadata !1014, metadata !"memrchr", metadata !"memrchr", metadata !"memrchr", metadata !1014, i32 15, metadata !1016, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memrchr} ; [ DW_T
!1014 = metadata !{i32 589865, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1015} ; [ DW_TAG_file_type ]
!1015 = metadata !{i32 589841, i32 0, i32 1, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1016 = metadata !{i32 589845, metadata !1014, metadata !"", metadata !1014, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1017, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1017 = metadata !{metadata !1018, metadata !1018, metadata !1019, metadata !1020}
!1018 = metadata !{i32 589839, metadata !1014, metadata !"", metadata !1014, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1019 = metadata !{i32 589860, metadata !1014, metadata !"int", metadata !1014, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1020 = metadata !{i32 589846, metadata !1021, metadata !"size_t", metadata !1021, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1022} ; [ DW_TAG_typedef ]
!1021 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1015} ; [ DW_TAG_file_type ]
!1022 = metadata !{i32 589860, metadata !1014, metadata !"long unsigned int", metadata !1014, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1023 = metadata !{i32 589870, i32 0, metadata !1024, metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !1026, i32 1031, metadata !1027, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @nl_langinfo} 
!1024 = metadata !{i32 589865, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1025} ; [ DW_TAG_file_type ]
!1025 = metadata !{i32 589841, i32 0, i32 1, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!1026 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1025} ; [ DW_TAG_file_type ]
!1027 = metadata !{i32 589845, metadata !1024, metadata !"", metadata !1024, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1028, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1028 = metadata !{metadata !1029, metadata !1031}
!1029 = metadata !{i32 589839, metadata !1024, metadata !"", metadata !1024, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1030} ; [ DW_TAG_pointer_type ]
!1030 = metadata !{i32 589860, metadata !1024, metadata !"char", metadata !1024, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1031 = metadata !{i32 589846, metadata !1032, metadata !"nl_item", metadata !1032, i32 41, i64 0, i64 0, i64 0, i32 0, metadata !1033} ; [ DW_TAG_typedef ]
!1032 = metadata !{i32 589865, metadata !"nl_types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1025} ; [ DW_TAG_file_type ]
!1033 = metadata !{i32 589860, metadata !1024, metadata !"int", metadata !1024, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1034 = metadata !{i32 589870, i32 0, metadata !1035, metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !1037, i32 17, metadata !1038, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @
!1035 = metadata !{i32 589865, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1036} ; [ DW_TAG_file_type ]
!1036 = metadata !{i32 589841, i32 0, i32 1, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!1037 = metadata !{i32 589865, metadata !"putchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1036} ; [ DW_TAG_file_type ]
!1038 = metadata !{i32 589845, metadata !1035, metadata !"", metadata !1035, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1039, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1039 = metadata !{metadata !1040, metadata !1040}
!1040 = metadata !{i32 589860, metadata !1035, metadata !"int", metadata !1035, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1041 = metadata !{i32 589870, i32 0, metadata !1042, metadata !"realpath", metadata !"realpath", metadata !"realpath", metadata !1042, i32 52, metadata !1044, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @realpath} ; [ DW_TA
!1042 = metadata !{i32 589865, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1043} ; [ DW_TAG_file_type ]
!1043 = metadata !{i32 589841, i32 0, i32 1, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1044 = metadata !{i32 589845, metadata !1042, metadata !"", metadata !1042, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1045, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1045 = metadata !{metadata !1046, metadata !1048, metadata !1046}
!1046 = metadata !{i32 589839, metadata !1042, metadata !"", metadata !1042, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1047} ; [ DW_TAG_pointer_type ]
!1047 = metadata !{i32 589860, metadata !1042, metadata !"char", metadata !1042, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1048 = metadata !{i32 589839, metadata !1042, metadata !"", metadata !1042, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1049} ; [ DW_TAG_pointer_type ]
!1049 = metadata !{i32 589862, metadata !1042, metadata !"", metadata !1042, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1047} ; [ DW_TAG_const_type ]
!1050 = metadata !{i32 589870, i32 0, metadata !1051, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !1053, i32 162, metadata !1054, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @setlocale} ; [ 
!1051 = metadata !{i32 589865, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1052} ; [ DW_TAG_file_type ]
!1052 = metadata !{i32 589841, i32 0, i32 1, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1053 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1052} ; [ DW_TAG_file_type ]
!1054 = metadata !{i32 589845, metadata !1051, metadata !"", metadata !1051, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1055, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1055 = metadata !{metadata !1056, metadata !1058, metadata !1059}
!1056 = metadata !{i32 589839, metadata !1051, metadata !"", metadata !1051, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1057} ; [ DW_TAG_pointer_type ]
!1057 = metadata !{i32 589860, metadata !1051, metadata !"char", metadata !1051, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1058 = metadata !{i32 589860, metadata !1051, metadata !"int", metadata !1051, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1059 = metadata !{i32 589839, metadata !1051, metadata !"", metadata !1051, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1060} ; [ DW_TAG_pointer_type ]
!1060 = metadata !{i32 589862, metadata !1051, metadata !"", metadata !1051, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1057} ; [ DW_TAG_const_type ]
!1061 = metadata !{i32 589870, i32 0, metadata !1062, metadata !"sprintf", metadata !"sprintf", metadata !"sprintf", metadata !1062, i32 19, metadata !1064, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, ...)* @sprintf} ; [ DW_T
!1062 = metadata !{i32 589865, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1063} ; [ DW_TAG_file_type ]
!1063 = metadata !{i32 589841, i32 0, i32 1, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1064 = metadata !{i32 589845, metadata !1062, metadata !"", metadata !1062, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1065, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1065 = metadata !{metadata !1066, metadata !1067, metadata !1069}
!1066 = metadata !{i32 589860, metadata !1062, metadata !"int", metadata !1062, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1067 = metadata !{i32 589839, metadata !1062, metadata !"", metadata !1062, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1068} ; [ DW_TAG_pointer_type ]
!1068 = metadata !{i32 589860, metadata !1062, metadata !"char", metadata !1062, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1069 = metadata !{i32 589839, metadata !1062, metadata !"", metadata !1062, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1070} ; [ DW_TAG_pointer_type ]
!1070 = metadata !{i32 589862, metadata !1062, metadata !"", metadata !1062, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1068} ; [ DW_TAG_const_type ]
!1071 = metadata !{i32 589870, i32 0, metadata !1072, metadata !"sscanf", metadata !"sscanf", metadata !"sscanf", metadata !1074, i32 209, metadata !1075, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, ...)* @sscanf} ; [ DW_TAG_
!1072 = metadata !{i32 589865, metadata !"sscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1073} ; [ DW_TAG_file_type ]
!1073 = metadata !{i32 589841, i32 0, i32 1, metadata !"sscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1074 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1073} ; [ DW_TAG_file_type ]
!1075 = metadata !{i32 589845, metadata !1072, metadata !"", metadata !1072, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1076, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1076 = metadata !{metadata !1077, metadata !1078, metadata !1078}
!1077 = metadata !{i32 589860, metadata !1072, metadata !"int", metadata !1072, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1078 = metadata !{i32 589839, metadata !1072, metadata !"", metadata !1072, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1079} ; [ DW_TAG_pointer_type ]
!1079 = metadata !{i32 589862, metadata !1072, metadata !"", metadata !1072, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1080} ; [ DW_TAG_const_type ]
!1080 = metadata !{i32 589860, metadata !1072, metadata !"char", metadata !1072, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1081 = metadata !{i32 589870, i32 0, metadata !1082, metadata !"statvfs", metadata !"statvfs", metadata !"statvfs", metadata !1082, i32 41, metadata !1084, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %struct.statvfs*)* @statvfs} 
!1082 = metadata !{i32 589865, metadata !"statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !1083} ; [ DW_TAG_file_type ]
!1083 = metadata !{i32 589841, i32 0, i32 1, metadata !"statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1084 = metadata !{i32 589845, metadata !1082, metadata !"", metadata !1082, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1085, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1085 = metadata !{metadata !1086, metadata !1087, metadata !1090}
!1086 = metadata !{i32 589860, metadata !1082, metadata !"int", metadata !1082, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1087 = metadata !{i32 589839, metadata !1082, metadata !"", metadata !1082, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1088} ; [ DW_TAG_pointer_type ]
!1088 = metadata !{i32 589862, metadata !1082, metadata !"", metadata !1082, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1089} ; [ DW_TAG_const_type ]
!1089 = metadata !{i32 589860, metadata !1082, metadata !"char", metadata !1082, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1090 = metadata !{i32 589839, metadata !1082, metadata !"", metadata !1082, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1091} ; [ DW_TAG_pointer_type ]
!1091 = metadata !{i32 589843, metadata !1082, metadata !"statvfs", metadata !1092, i32 30, i64 896, i64 64, i64 0, i32 0, null, metadata !1093, i32 0, null} ; [ DW_TAG_structure_type ]
!1092 = metadata !{i32 589865, metadata !"statvfs.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1083} ; [ DW_TAG_file_type ]
!1093 = metadata !{metadata !1094, metadata !1096, metadata !1097, metadata !1100, metadata !1101, metadata !1102, metadata !1104, metadata !1105, metadata !1106, metadata !1107, metadata !1108, metadata !1109}
!1094 = metadata !{i32 589837, metadata !1091, metadata !"f_bsize", metadata !1092, i32 31, i64 64, i64 64, i64 0, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1095 = metadata !{i32 589860, metadata !1082, metadata !"long unsigned int", metadata !1082, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1096 = metadata !{i32 589837, metadata !1091, metadata !"f_frsize", metadata !1092, i32 32, i64 64, i64 64, i64 64, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1097 = metadata !{i32 589837, metadata !1091, metadata !"f_blocks", metadata !1092, i32 34, i64 64, i64 64, i64 128, i32 0, metadata !1098} ; [ DW_TAG_member ]
!1098 = metadata !{i32 589846, metadata !1099, metadata !"__fsblkcnt_t", metadata !1099, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !1095} ; [ DW_TAG_typedef ]
!1099 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1083} ; [ DW_TAG_file_type ]
!1100 = metadata !{i32 589837, metadata !1091, metadata !"f_bfree", metadata !1092, i32 35, i64 64, i64 64, i64 192, i32 0, metadata !1098} ; [ DW_TAG_member ]
!1101 = metadata !{i32 589837, metadata !1091, metadata !"f_bavail", metadata !1092, i32 36, i64 64, i64 64, i64 256, i32 0, metadata !1098} ; [ DW_TAG_member ]
!1102 = metadata !{i32 589837, metadata !1091, metadata !"f_files", metadata !1092, i32 37, i64 64, i64 64, i64 320, i32 0, metadata !1103} ; [ DW_TAG_member ]
!1103 = metadata !{i32 589846, metadata !1099, metadata !"__fsfilcnt_t", metadata !1099, i32 181, i64 0, i64 0, i64 0, i32 0, metadata !1095} ; [ DW_TAG_typedef ]
!1104 = metadata !{i32 589837, metadata !1091, metadata !"f_ffree", metadata !1092, i32 38, i64 64, i64 64, i64 384, i32 0, metadata !1103} ; [ DW_TAG_member ]
!1105 = metadata !{i32 589837, metadata !1091, metadata !"f_favail", metadata !1092, i32 39, i64 64, i64 64, i64 448, i32 0, metadata !1103} ; [ DW_TAG_member ]
!1106 = metadata !{i32 589837, metadata !1091, metadata !"f_fsid", metadata !1092, i32 48, i64 64, i64 64, i64 512, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1107 = metadata !{i32 589837, metadata !1091, metadata !"f_flag", metadata !1092, i32 52, i64 64, i64 64, i64 576, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1108 = metadata !{i32 589837, metadata !1091, metadata !"f_namemax", metadata !1092, i32 53, i64 64, i64 64, i64 640, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1109 = metadata !{i32 589837, metadata !1091, metadata !"__f_spare", metadata !1092, i32 54, i64 192, i64 32, i64 704, i32 0, metadata !1110} ; [ DW_TAG_member ]
!1110 = metadata !{i32 589825, metadata !1082, metadata !"", metadata !1082, i32 0, i64 192, i64 32, i64 0, i32 0, metadata !1086, metadata !1111, i32 0, null} ; [ DW_TAG_array_type ]
!1111 = metadata !{metadata !1112}
!1112 = metadata !{i32 589857, i64 0, i64 5}      ; [ DW_TAG_subrange_type ]
!1113 = metadata !{i32 589870, i32 0, metadata !1114, metadata !"_stdio_term", metadata !"_stdio_term", metadata !"_stdio_term", metadata !1114, i32 211, metadata !1116, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_term} ; [
!1114 = metadata !{i32 589865, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1115} ; [ DW_TAG_file_type ]
!1115 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1116 = metadata !{i32 589845, metadata !1114, metadata !"", metadata !1114, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1117 = metadata !{i32 589870, i32 0, metadata !1114, metadata !"_stdio_init", metadata !"_stdio_init", metadata !"_stdio_init", metadata !1114, i32 278, metadata !1116, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_init} ; [
!1118 = metadata !{i32 589870, i32 0, metadata !1119, metadata !"strchr", metadata !"strchr", metadata !"strchr", metadata !1119, i32 19, metadata !1121, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strchr} ; [ DW_TAG_subpro
!1119 = metadata !{i32 589865, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1120} ; [ DW_TAG_file_type ]
!1120 = metadata !{i32 589841, i32 0, i32 1, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1121 = metadata !{i32 589845, metadata !1119, metadata !"", metadata !1119, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1122, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1122 = metadata !{metadata !1123, metadata !1125, metadata !1127}
!1123 = metadata !{i32 589839, metadata !1119, metadata !"", metadata !1119, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1124} ; [ DW_TAG_pointer_type ]
!1124 = metadata !{i32 589860, metadata !1119, metadata !"char", metadata !1119, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1125 = metadata !{i32 589839, metadata !1119, metadata !"", metadata !1119, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1126} ; [ DW_TAG_pointer_type ]
!1126 = metadata !{i32 589862, metadata !1119, metadata !"", metadata !1119, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1124} ; [ DW_TAG_const_type ]
!1127 = metadata !{i32 589860, metadata !1119, metadata !"int", metadata !1119, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1128 = metadata !{i32 589870, i32 0, metadata !1129, metadata !"strcmp", metadata !"strcmp", metadata !"strcmp", metadata !1129, i32 21, metadata !1131, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*)* @strcmp} ; [ DW_TAG_subpro
!1129 = metadata !{i32 589865, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1130} ; [ DW_TAG_file_type ]
!1130 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1131 = metadata !{i32 589845, metadata !1129, metadata !"", metadata !1129, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1132, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1132 = metadata !{metadata !1133, metadata !1134, metadata !1134}
!1133 = metadata !{i32 589860, metadata !1129, metadata !"int", metadata !1129, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1134 = metadata !{i32 589839, metadata !1129, metadata !"", metadata !1129, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1135} ; [ DW_TAG_pointer_type ]
!1135 = metadata !{i32 589862, metadata !1129, metadata !"", metadata !1129, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1136} ; [ DW_TAG_const_type ]
!1136 = metadata !{i32 589860, metadata !1129, metadata !"char", metadata !1129, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1137 = metadata !{i32 589870, i32 0, metadata !1138, metadata !"strdup", metadata !"strdup", metadata !"strdup", metadata !1138, i32 24, metadata !1140, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @strdup} ; [ DW_TAG_subprogram 
!1138 = metadata !{i32 589865, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1139} ; [ DW_TAG_file_type ]
!1139 = metadata !{i32 589841, i32 0, i32 1, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1140 = metadata !{i32 589845, metadata !1138, metadata !"", metadata !1138, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1141, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1141 = metadata !{metadata !1142, metadata !1144}
!1142 = metadata !{i32 589839, metadata !1138, metadata !"", metadata !1138, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1143} ; [ DW_TAG_pointer_type ]
!1143 = metadata !{i32 589860, metadata !1138, metadata !"char", metadata !1138, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1144 = metadata !{i32 589839, metadata !1138, metadata !"", metadata !1138, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1145} ; [ DW_TAG_pointer_type ]
!1145 = metadata !{i32 589862, metadata !1138, metadata !"", metadata !1138, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1143} ; [ DW_TAG_const_type ]
!1146 = metadata !{i32 589870, i32 0, metadata !1147, metadata !"strlen", metadata !"strlen", metadata !"strlen", metadata !1147, i32 19, metadata !1149, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @strlen} ; [ DW_TAG_subprogram 
!1147 = metadata !{i32 589865, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1148} ; [ DW_TAG_file_type ]
!1148 = metadata !{i32 589841, i32 0, i32 1, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1149 = metadata !{i32 589845, metadata !1147, metadata !"", metadata !1147, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1150, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1150 = metadata !{metadata !1151, metadata !1154}
!1151 = metadata !{i32 589846, metadata !1152, metadata !"size_t", metadata !1152, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1153} ; [ DW_TAG_typedef ]
!1152 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1148} ; [ DW_TAG_file_type ]
!1153 = metadata !{i32 589860, metadata !1147, metadata !"long unsigned int", metadata !1147, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1154 = metadata !{i32 589839, metadata !1147, metadata !"", metadata !1147, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1155} ; [ DW_TAG_pointer_type ]
!1155 = metadata !{i32 589862, metadata !1147, metadata !"", metadata !1147, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1156} ; [ DW_TAG_const_type ]
!1156 = metadata !{i32 589860, metadata !1147, metadata !"char", metadata !1147, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1157 = metadata !{i32 589870, i32 0, metadata !1158, metadata !"strncmp", metadata !"strncmp", metadata !"strncmp", metadata !1158, i32 18, metadata !1160, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @strncmp} ; [ DW_T
!1158 = metadata !{i32 589865, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1159} ; [ DW_TAG_file_type ]
!1159 = metadata !{i32 589841, i32 0, i32 1, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1160 = metadata !{i32 589845, metadata !1158, metadata !"", metadata !1158, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1161, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1161 = metadata !{metadata !1162, metadata !1163, metadata !1163, metadata !1166}
!1162 = metadata !{i32 589860, metadata !1158, metadata !"int", metadata !1158, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1163 = metadata !{i32 589839, metadata !1158, metadata !"", metadata !1158, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1164} ; [ DW_TAG_pointer_type ]
!1164 = metadata !{i32 589862, metadata !1158, metadata !"", metadata !1158, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1165} ; [ DW_TAG_const_type ]
!1165 = metadata !{i32 589860, metadata !1158, metadata !"char", metadata !1158, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1166 = metadata !{i32 589846, metadata !1167, metadata !"size_t", metadata !1167, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1168} ; [ DW_TAG_typedef ]
!1167 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1159} ; [ DW_TAG_file_type ]
!1168 = metadata !{i32 589860, metadata !1158, metadata !"long unsigned int", metadata !1158, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1169 = metadata !{i32 589870, i32 0, metadata !1170, metadata !"strrchr", metadata !"strrchr", metadata !"strrchr", metadata !1170, i32 18, metadata !1172, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strrchr} ; [ DW_TAG_su
!1170 = metadata !{i32 589865, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1171} ; [ DW_TAG_file_type ]
!1171 = metadata !{i32 589841, i32 0, i32 1, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1172 = metadata !{i32 589845, metadata !1170, metadata !"", metadata !1170, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1173, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1173 = metadata !{metadata !1174, metadata !1176, metadata !1178}
!1174 = metadata !{i32 589839, metadata !1170, metadata !"", metadata !1170, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1175} ; [ DW_TAG_pointer_type ]
!1175 = metadata !{i32 589860, metadata !1170, metadata !"char", metadata !1170, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1176 = metadata !{i32 589839, metadata !1170, metadata !"", metadata !1170, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1177} ; [ DW_TAG_pointer_type ]
!1177 = metadata !{i32 589862, metadata !1170, metadata !"", metadata !1170, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1175} ; [ DW_TAG_const_type ]
!1178 = metadata !{i32 589860, metadata !1170, metadata !"int", metadata !1170, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1179 = metadata !{i32 589870, i32 0, metadata !1180, metadata !"strspn", metadata !"strspn", metadata !"strspn", metadata !1180, i32 19, metadata !1182, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8*)* @strspn} ; [ DW_TAG_subpro
!1180 = metadata !{i32 589865, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1181} ; [ DW_TAG_file_type ]
!1181 = metadata !{i32 589841, i32 0, i32 1, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1182 = metadata !{i32 589845, metadata !1180, metadata !"", metadata !1180, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1183, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1183 = metadata !{metadata !1184, metadata !1187, metadata !1187}
!1184 = metadata !{i32 589846, metadata !1185, metadata !"size_t", metadata !1185, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1186} ; [ DW_TAG_typedef ]
!1185 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1181} ; [ DW_TAG_file_type ]
!1186 = metadata !{i32 589860, metadata !1180, metadata !"long unsigned int", metadata !1180, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1187 = metadata !{i32 589839, metadata !1180, metadata !"", metadata !1180, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1188} ; [ DW_TAG_pointer_type ]
!1188 = metadata !{i32 589862, metadata !1180, metadata !"", metadata !1180, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1189} ; [ DW_TAG_const_type ]
!1189 = metadata !{i32 589860, metadata !1180, metadata !"char", metadata !1180, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1190 = metadata !{i32 589870, i32 0, metadata !1191, metadata !"strstr", metadata !"strstr", metadata !"strstr", metadata !1191, i32 20, metadata !1193, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strstr} ; [ DW_TAG_subpro
!1191 = metadata !{i32 589865, metadata !"strstr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1192} ; [ DW_TAG_file_type ]
!1192 = metadata !{i32 589841, i32 0, i32 1, metadata !"strstr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1193 = metadata !{i32 589845, metadata !1191, metadata !"", metadata !1191, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1194, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1194 = metadata !{metadata !1195, metadata !1197, metadata !1197}
!1195 = metadata !{i32 589839, metadata !1191, metadata !"", metadata !1191, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1196} ; [ DW_TAG_pointer_type ]
!1196 = metadata !{i32 589860, metadata !1191, metadata !"char", metadata !1191, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1197 = metadata !{i32 589839, metadata !1191, metadata !"", metadata !1191, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1198} ; [ DW_TAG_pointer_type ]
!1198 = metadata !{i32 589862, metadata !1191, metadata !"", metadata !1191, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1196} ; [ DW_TAG_const_type ]
!1199 = metadata !{i32 589870, i32 0, metadata !1200, metadata !"strtoul", metadata !"strtoul", metadata !"strtoul", metadata !1202, i32 385, metadata !1203, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i32)* @strtoul} ; [ DW
!1200 = metadata !{i32 589865, metadata !"strtoul.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1201} ; [ DW_TAG_file_type ]
!1201 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtoul.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1202 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1201} ; [ DW_TAG_file_type ]
!1203 = metadata !{i32 589845, metadata !1200, metadata !"", metadata !1200, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1204, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1204 = metadata !{metadata !1205, metadata !1206, metadata !1209, metadata !1211}
!1205 = metadata !{i32 589860, metadata !1200, metadata !"long unsigned int", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1206 = metadata !{i32 589839, metadata !1200, metadata !"", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1207} ; [ DW_TAG_pointer_type ]
!1207 = metadata !{i32 589862, metadata !1200, metadata !"", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1208} ; [ DW_TAG_const_type ]
!1208 = metadata !{i32 589860, metadata !1200, metadata !"char", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1209 = metadata !{i32 589839, metadata !1200, metadata !"", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1210} ; [ DW_TAG_pointer_type ]
!1210 = metadata !{i32 589839, metadata !1200, metadata !"", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1208} ; [ DW_TAG_pointer_type ]
!1211 = metadata !{i32 589860, metadata !1200, metadata !"int", metadata !1200, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1212 = metadata !{i32 589870, i32 0, metadata !1213, metadata !"wcstombs", metadata !"wcstombs", metadata !"wcstombs", metadata !1215, i32 1035, metadata !1216, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32*, i64)* @wcstombs} ;
!1213 = metadata !{i32 589865, metadata !"wcstombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1214} ; [ DW_TAG_file_type ]
!1214 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcstombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1215 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1214} ; [ DW_TAG_file_type ]
!1216 = metadata !{i32 589845, metadata !1213, metadata !"", metadata !1213, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1217, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1217 = metadata !{metadata !1218, metadata !1221, metadata !1223, metadata !1218}
!1218 = metadata !{i32 589846, metadata !1219, metadata !"size_t", metadata !1219, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1220} ; [ DW_TAG_typedef ]
!1219 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1214} ; [ DW_TAG_file_type ]
!1220 = metadata !{i32 589860, metadata !1213, metadata !"long unsigned int", metadata !1213, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1221 = metadata !{i32 589839, metadata !1213, metadata !"", metadata !1213, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1222} ; [ DW_TAG_pointer_type ]
!1222 = metadata !{i32 589860, metadata !1213, metadata !"char", metadata !1213, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1223 = metadata !{i32 589839, metadata !1213, metadata !"", metadata !1213, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1224} ; [ DW_TAG_pointer_type ]
!1224 = metadata !{i32 589846, metadata !1219, metadata !"wchar_t", metadata !1219, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1225} ; [ DW_TAG_typedef ]
!1225 = metadata !{i32 589860, metadata !1213, metadata !"int", metadata !1213, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1226 = metadata !{i32 589870, i32 0, metadata !1227, metadata !"wcwidth", metadata !"wcwidth", metadata !"wcwidth", metadata !1229, i32 1167, metadata !1230, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @wcwidth} ; [ DW_TAG_subpr
!1227 = metadata !{i32 589865, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1228} ; [ DW_TAG_file_type ]
!1228 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!1229 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1228} ; [ DW_TAG_file_type ]
!1230 = metadata !{i32 589845, metadata !1227, metadata !"", metadata !1227, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1231, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1231 = metadata !{metadata !1232, metadata !1233}
!1232 = metadata !{i32 589860, metadata !1227, metadata !"int", metadata !1227, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1233 = metadata !{i32 589846, metadata !1234, metadata !"wchar_t", metadata !1234, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1232} ; [ DW_TAG_typedef ]
!1234 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1228} ; [ DW_TAG_file_type ]
!1235 = metadata !{i32 589870, i32 0, metadata !1236, metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !1236, i32 11, metadata !1238, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* (
!1236 = metadata !{i32 589865, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !1237} ; [ DW_TAG_file_type ]
!1237 = metadata !{i32 589841, i32 0, i32 1, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata 
!1238 = metadata !{i32 589845, metadata !1236, metadata !"", metadata !1236, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1239, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1239 = metadata !{metadata !1240}
!1240 = metadata !{i32 589839, metadata !1236, metadata !"", metadata !1236, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1241} ; [ DW_TAG_pointer_type ]
!1241 = metadata !{i32 589860, metadata !1236, metadata !"int", metadata !1236, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1242 = metadata !{i32 589870, i32 0, metadata !1243, metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !1245, i32 158, metadata !1246, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void (i8*)*, i8*, 
!1243 = metadata !{i32 589865, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1244} ; [ DW_TAG_file_type ]
!1244 = metadata !{i32 589841, i32 0, i32 1, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1245 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1244} ; [ DW_TAG_file_type ]
!1246 = metadata !{i32 589845, metadata !1243, metadata !"", metadata !1243, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1247, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1247 = metadata !{metadata !1248, metadata !1249, metadata !1253, metadata !1253}
!1248 = metadata !{i32 589860, metadata !1243, metadata !"int", metadata !1243, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1249 = metadata !{i32 589846, metadata !1245, metadata !"cxaefuncp", metadata !1245, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !1250} ; [ DW_TAG_typedef ]
!1250 = metadata !{i32 589839, metadata !1243, metadata !"", metadata !1243, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1251} ; [ DW_TAG_pointer_type ]
!1251 = metadata !{i32 589845, metadata !1243, metadata !"", metadata !1243, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1252, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1252 = metadata !{null, metadata !1253}
!1253 = metadata !{i32 589839, metadata !1243, metadata !"", metadata !1243, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1254 = metadata !{i32 589870, i32 0, metadata !1255, metadata !"__sigismember", metadata !"__sigismember", metadata !"__sigismember", metadata !1257, i32 117, metadata !1258, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigse
!1255 = metadata !{i32 589865, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1256} ; [ DW_TAG_file_type ]
!1256 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1257 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1256} ; [ DW_TAG_file_type ]
!1258 = metadata !{i32 589845, metadata !1255, metadata !"", metadata !1255, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1259, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1259 = metadata !{metadata !1260, metadata !1261, metadata !1260}
!1260 = metadata !{i32 589860, metadata !1255, metadata !"int", metadata !1255, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1261 = metadata !{i32 589839, metadata !1255, metadata !"", metadata !1255, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1262} ; [ DW_TAG_pointer_type ]
!1262 = metadata !{i32 589846, metadata !1257, metadata !"__sigset_t", metadata !1257, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1263} ; [ DW_TAG_typedef ]
!1263 = metadata !{i32 589843, metadata !1255, metadata !"", metadata !1257, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1264, i32 0, null} ; [ DW_TAG_structure_type ]
!1264 = metadata !{metadata !1265}
!1265 = metadata !{i32 589837, metadata !1263, metadata !"__val", metadata !1257, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1266} ; [ DW_TAG_member ]
!1266 = metadata !{i32 589825, metadata !1255, metadata !"", metadata !1255, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1267, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!1267 = metadata !{i32 589860, metadata !1255, metadata !"long unsigned int", metadata !1255, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1268 = metadata !{metadata !1269}
!1269 = metadata !{i32 589857, i64 0, i64 15}     ; [ DW_TAG_subrange_type ]
!1270 = metadata !{i32 589870, i32 0, metadata !1255, metadata !"__sigaddset", metadata !"__sigaddset", metadata !"__sigaddset", metadata !1257, i32 118, metadata !1258, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1271 = metadata !{i32 589870, i32 0, metadata !1255, metadata !"__sigdelset", metadata !"__sigdelset", metadata !"__sigdelset", metadata !1257, i32 119, metadata !1258, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1272 = metadata !{i32 589870, i32 0, metadata !1273, metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !1273, i32 28, metadata !1275, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* @__
!1273 = metadata !{i32 589865, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1274} ; [ DW_TAG_file_type ]
!1274 = metadata !{i32 589841, i32 0, i32 1, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1275 = metadata !{i32 589845, metadata !1273, metadata !"", metadata !1273, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1276, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1276 = metadata !{metadata !1277, metadata !1280, metadata !1294, metadata !1277}
!1277 = metadata !{i32 589846, metadata !1278, metadata !"size_t", metadata !1278, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1279} ; [ DW_TAG_typedef ]
!1278 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1274} ; [ DW_TAG_file_type ]
!1279 = metadata !{i32 589860, metadata !1273, metadata !"long unsigned int", metadata !1273, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1280 = metadata !{i32 589839, metadata !1273, metadata !"", metadata !1273, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1281} ; [ DW_TAG_pointer_type ]
!1281 = metadata !{i32 589846, metadata !1282, metadata !"FILE", metadata !1282, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1283} ; [ DW_TAG_typedef ]
!1282 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1274} ; [ DW_TAG_file_type ]
!1283 = metadata !{i32 589843, metadata !1273, metadata !"__STDIO_FILE_STRUCT", metadata !1282, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1284, i32 0, null} ; [ DW_TAG_structure_type ]
!1284 = metadata !{metadata !1285, metadata !1288, metadata !1291, metadata !1293, metadata !1295, metadata !1296, metadata !1297, metadata !1298, metadata !1299, metadata !1300, metadata !1302, metadata !1305}
!1285 = metadata !{i32 589837, metadata !1283, metadata !"__modeflags", metadata !1286, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1287} ; [ DW_TAG_member ]
!1286 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1274} ; [ DW_TAG_file_type ]
!1287 = metadata !{i32 589860, metadata !1273, metadata !"short unsigned int", metadata !1273, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1288 = metadata !{i32 589837, metadata !1283, metadata !"__ungot_width", metadata !1286, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1289} ; [ DW_TAG_member ]
!1289 = metadata !{i32 589825, metadata !1273, metadata !"", metadata !1273, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1290, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1290 = metadata !{i32 589860, metadata !1273, metadata !"unsigned char", metadata !1273, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1291 = metadata !{i32 589837, metadata !1283, metadata !"__filedes", metadata !1286, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1292} ; [ DW_TAG_member ]
!1292 = metadata !{i32 589860, metadata !1273, metadata !"int", metadata !1273, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1293 = metadata !{i32 589837, metadata !1283, metadata !"__bufstart", metadata !1286, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1294 = metadata !{i32 589839, metadata !1273, metadata !"", metadata !1273, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1290} ; [ DW_TAG_pointer_type ]
!1295 = metadata !{i32 589837, metadata !1283, metadata !"__bufend", metadata !1286, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1296 = metadata !{i32 589837, metadata !1283, metadata !"__bufpos", metadata !1286, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1297 = metadata !{i32 589837, metadata !1283, metadata !"__bufread", metadata !1286, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1298 = metadata !{i32 589837, metadata !1283, metadata !"__bufgetc_u", metadata !1286, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1299 = metadata !{i32 589837, metadata !1283, metadata !"__bufputc_u", metadata !1286, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1294} ; [ DW_TAG_member ]
!1300 = metadata !{i32 589837, metadata !1283, metadata !"__nextopen", metadata !1286, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1301} ; [ DW_TAG_member ]
!1301 = metadata !{i32 589839, metadata !1273, metadata !"", metadata !1273, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1283} ; [ DW_TAG_pointer_type ]
!1302 = metadata !{i32 589837, metadata !1283, metadata !"__ungot", metadata !1286, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1303} ; [ DW_TAG_member ]
!1303 = metadata !{i32 589825, metadata !1273, metadata !"", metadata !1273, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1304, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1304 = metadata !{i32 589846, metadata !1278, metadata !"wchar_t", metadata !1278, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1292} ; [ DW_TAG_typedef ]
!1305 = metadata !{i32 589837, metadata !1283, metadata !"__state", metadata !1286, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1306} ; [ DW_TAG_member ]
!1306 = metadata !{i32 589846, metadata !1307, metadata !"__mbstate_t", metadata !1307, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1308} ; [ DW_TAG_typedef ]
!1307 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1274} ; [ DW_TAG_file_type ]
!1308 = metadata !{i32 589843, metadata !1273, metadata !"", metadata !1307, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1309, i32 0, null} ; [ DW_TAG_structure_type ]
!1309 = metadata !{metadata !1310, metadata !1311}
!1310 = metadata !{i32 589837, metadata !1308, metadata !"__mask", metadata !1307, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1304} ; [ DW_TAG_member ]
!1311 = metadata !{i32 589837, metadata !1308, metadata !"__wc", metadata !1307, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1304} ; [ DW_TAG_member ]
!1312 = metadata !{i32 589870, i32 0, metadata !1313, metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !1313, i32 35, metadata !1315, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* 
!1313 = metadata !{i32 589865, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1314} ; [ DW_TAG_file_type ]
!1314 = metadata !{i32 589841, i32 0, i32 1, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1315 = metadata !{i32 589845, metadata !1313, metadata !"", metadata !1313, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1316, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1316 = metadata !{metadata !1317, metadata !1320, metadata !1352, metadata !1317}
!1317 = metadata !{i32 589846, metadata !1318, metadata !"size_t", metadata !1318, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1319} ; [ DW_TAG_typedef ]
!1318 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1314} ; [ DW_TAG_file_type ]
!1319 = metadata !{i32 589860, metadata !1313, metadata !"long unsigned int", metadata !1313, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1320 = metadata !{i32 589839, metadata !1313, metadata !"", metadata !1313, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1321} ; [ DW_TAG_pointer_type ]
!1321 = metadata !{i32 589846, metadata !1322, metadata !"FILE", metadata !1322, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1323} ; [ DW_TAG_typedef ]
!1322 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1314} ; [ DW_TAG_file_type ]
!1323 = metadata !{i32 589843, metadata !1313, metadata !"__STDIO_FILE_STRUCT", metadata !1322, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1324, i32 0, null} ; [ DW_TAG_structure_type ]
!1324 = metadata !{metadata !1325, metadata !1328, metadata !1331, metadata !1333, metadata !1335, metadata !1336, metadata !1337, metadata !1338, metadata !1339, metadata !1340, metadata !1342, metadata !1345}
!1325 = metadata !{i32 589837, metadata !1323, metadata !"__modeflags", metadata !1326, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1327} ; [ DW_TAG_member ]
!1326 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1314} ; [ DW_TAG_file_type ]
!1327 = metadata !{i32 589860, metadata !1313, metadata !"short unsigned int", metadata !1313, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1328 = metadata !{i32 589837, metadata !1323, metadata !"__ungot_width", metadata !1326, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1329} ; [ DW_TAG_member ]
!1329 = metadata !{i32 589825, metadata !1313, metadata !"", metadata !1313, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1330, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1330 = metadata !{i32 589860, metadata !1313, metadata !"unsigned char", metadata !1313, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1331 = metadata !{i32 589837, metadata !1323, metadata !"__filedes", metadata !1326, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1332} ; [ DW_TAG_member ]
!1332 = metadata !{i32 589860, metadata !1313, metadata !"int", metadata !1313, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1333 = metadata !{i32 589837, metadata !1323, metadata !"__bufstart", metadata !1326, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1334 = metadata !{i32 589839, metadata !1313, metadata !"", metadata !1313, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1330} ; [ DW_TAG_pointer_type ]
!1335 = metadata !{i32 589837, metadata !1323, metadata !"__bufend", metadata !1326, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1336 = metadata !{i32 589837, metadata !1323, metadata !"__bufpos", metadata !1326, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1337 = metadata !{i32 589837, metadata !1323, metadata !"__bufread", metadata !1326, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1338 = metadata !{i32 589837, metadata !1323, metadata !"__bufgetc_u", metadata !1326, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1339 = metadata !{i32 589837, metadata !1323, metadata !"__bufputc_u", metadata !1326, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1334} ; [ DW_TAG_member ]
!1340 = metadata !{i32 589837, metadata !1323, metadata !"__nextopen", metadata !1326, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1341} ; [ DW_TAG_member ]
!1341 = metadata !{i32 589839, metadata !1313, metadata !"", metadata !1313, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1323} ; [ DW_TAG_pointer_type ]
!1342 = metadata !{i32 589837, metadata !1323, metadata !"__ungot", metadata !1326, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1343} ; [ DW_TAG_member ]
!1343 = metadata !{i32 589825, metadata !1313, metadata !"", metadata !1313, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1344, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1344 = metadata !{i32 589846, metadata !1318, metadata !"wchar_t", metadata !1318, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1332} ; [ DW_TAG_typedef ]
!1345 = metadata !{i32 589837, metadata !1323, metadata !"__state", metadata !1326, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1346} ; [ DW_TAG_member ]
!1346 = metadata !{i32 589846, metadata !1347, metadata !"__mbstate_t", metadata !1347, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1348} ; [ DW_TAG_typedef ]
!1347 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1314} ; [ DW_TAG_file_type ]
!1348 = metadata !{i32 589843, metadata !1313, metadata !"", metadata !1347, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1349, i32 0, null} ; [ DW_TAG_structure_type ]
!1349 = metadata !{metadata !1350, metadata !1351}
!1350 = metadata !{i32 589837, metadata !1348, metadata !"__mask", metadata !1347, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1344} ; [ DW_TAG_member ]
!1351 = metadata !{i32 589837, metadata !1348, metadata !"__wc", metadata !1347, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1344} ; [ DW_TAG_member ]
!1352 = metadata !{i32 589839, metadata !1313, metadata !"", metadata !1313, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1353} ; [ DW_TAG_pointer_type ]
!1353 = metadata !{i32 589862, metadata !1313, metadata !"", metadata !1313, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1330} ; [ DW_TAG_const_type ]
!1354 = metadata !{i32 589870, i32 0, metadata !1355, metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !1355, i32 21, metadata !1357, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, %4*
!1355 = metadata !{i32 589865, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1356} ; [ DW_TAG_file_type ]
!1356 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1357 = metadata !{i32 589845, metadata !1355, metadata !"", metadata !1355, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1358, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1358 = metadata !{metadata !1359, metadata !1362, metadata !1359, metadata !1365}
!1359 = metadata !{i32 589846, metadata !1360, metadata !"size_t", metadata !1360, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1361} ; [ DW_TAG_typedef ]
!1360 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1356} ; [ DW_TAG_file_type ]
!1361 = metadata !{i32 589860, metadata !1355, metadata !"long unsigned int", metadata !1355, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1362 = metadata !{i32 589839, metadata !1355, metadata !"", metadata !1355, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1363} ; [ DW_TAG_pointer_type ]
!1363 = metadata !{i32 589862, metadata !1355, metadata !"", metadata !1355, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1364} ; [ DW_TAG_const_type ]
!1364 = metadata !{i32 589860, metadata !1355, metadata !"unsigned char", metadata !1355, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1365 = metadata !{i32 589839, metadata !1355, metadata !"", metadata !1355, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1366} ; [ DW_TAG_pointer_type ]
!1366 = metadata !{i32 589846, metadata !1367, metadata !"FILE", metadata !1367, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1368} ; [ DW_TAG_typedef ]
!1367 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1356} ; [ DW_TAG_file_type ]
!1368 = metadata !{i32 589843, metadata !1355, metadata !"__STDIO_FILE_STRUCT", metadata !1367, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1369, i32 0, null} ; [ DW_TAG_structure_type ]
!1369 = metadata !{metadata !1370, metadata !1373, metadata !1375, metadata !1377, metadata !1379, metadata !1380, metadata !1381, metadata !1382, metadata !1383, metadata !1384, metadata !1386, metadata !1389}
!1370 = metadata !{i32 589837, metadata !1368, metadata !"__modeflags", metadata !1371, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1372} ; [ DW_TAG_member ]
!1371 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1356} ; [ DW_TAG_file_type ]
!1372 = metadata !{i32 589860, metadata !1355, metadata !"short unsigned int", metadata !1355, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1373 = metadata !{i32 589837, metadata !1368, metadata !"__ungot_width", metadata !1371, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1374} ; [ DW_TAG_member ]
!1374 = metadata !{i32 589825, metadata !1355, metadata !"", metadata !1355, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1364, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1375 = metadata !{i32 589837, metadata !1368, metadata !"__filedes", metadata !1371, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1376} ; [ DW_TAG_member ]
!1376 = metadata !{i32 589860, metadata !1355, metadata !"int", metadata !1355, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1377 = metadata !{i32 589837, metadata !1368, metadata !"__bufstart", metadata !1371, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1378 = metadata !{i32 589839, metadata !1355, metadata !"", metadata !1355, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1364} ; [ DW_TAG_pointer_type ]
!1379 = metadata !{i32 589837, metadata !1368, metadata !"__bufend", metadata !1371, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1380 = metadata !{i32 589837, metadata !1368, metadata !"__bufpos", metadata !1371, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1381 = metadata !{i32 589837, metadata !1368, metadata !"__bufread", metadata !1371, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1382 = metadata !{i32 589837, metadata !1368, metadata !"__bufgetc_u", metadata !1371, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1383 = metadata !{i32 589837, metadata !1368, metadata !"__bufputc_u", metadata !1371, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1378} ; [ DW_TAG_member ]
!1384 = metadata !{i32 589837, metadata !1368, metadata !"__nextopen", metadata !1371, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1385} ; [ DW_TAG_member ]
!1385 = metadata !{i32 589839, metadata !1355, metadata !"", metadata !1355, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1368} ; [ DW_TAG_pointer_type ]
!1386 = metadata !{i32 589837, metadata !1368, metadata !"__ungot", metadata !1371, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1387} ; [ DW_TAG_member ]
!1387 = metadata !{i32 589825, metadata !1355, metadata !"", metadata !1355, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1388, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1388 = metadata !{i32 589846, metadata !1360, metadata !"wchar_t", metadata !1360, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1376} ; [ DW_TAG_typedef ]
!1389 = metadata !{i32 589837, metadata !1368, metadata !"__state", metadata !1371, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1390} ; [ DW_TAG_member ]
!1390 = metadata !{i32 589846, metadata !1391, metadata !"__mbstate_t", metadata !1391, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1392} ; [ DW_TAG_typedef ]
!1391 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1356} ; [ DW_TAG_file_type ]
!1392 = metadata !{i32 589843, metadata !1355, metadata !"", metadata !1391, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1393, i32 0, null} ; [ DW_TAG_structure_type ]
!1393 = metadata !{metadata !1394, metadata !1395}
!1394 = metadata !{i32 589837, metadata !1392, metadata !"__mask", metadata !1391, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1388} ; [ DW_TAG_member ]
!1395 = metadata !{i32 589837, metadata !1392, metadata !"__wc", metadata !1391, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1388} ; [ DW_TAG_member ]
!1396 = metadata !{i32 589870, i32 0, metadata !1397, metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !1397, i32 23, metadata !1399, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__stdio_r
!1397 = metadata !{i32 589865, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1398} ; [ DW_TAG_file_type ]
!1398 = metadata !{i32 589841, i32 0, i32 1, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1399 = metadata !{i32 589845, metadata !1397, metadata !"", metadata !1397, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1400, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1400 = metadata !{metadata !1401, metadata !1404}
!1401 = metadata !{i32 589846, metadata !1402, metadata !"size_t", metadata !1402, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1403} ; [ DW_TAG_typedef ]
!1402 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1398} ; [ DW_TAG_file_type ]
!1403 = metadata !{i32 589860, metadata !1397, metadata !"long unsigned int", metadata !1397, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1404 = metadata !{i32 589839, metadata !1397, metadata !"", metadata !1397, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1405} ; [ DW_TAG_pointer_type ]
!1405 = metadata !{i32 589846, metadata !1406, metadata !"FILE", metadata !1406, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1407} ; [ DW_TAG_typedef ]
!1406 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1398} ; [ DW_TAG_file_type ]
!1407 = metadata !{i32 589843, metadata !1397, metadata !"__STDIO_FILE_STRUCT", metadata !1406, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1408, i32 0, null} ; [ DW_TAG_structure_type ]
!1408 = metadata !{metadata !1409, metadata !1412, metadata !1415, metadata !1417, metadata !1419, metadata !1420, metadata !1421, metadata !1422, metadata !1423, metadata !1424, metadata !1426, metadata !1429}
!1409 = metadata !{i32 589837, metadata !1407, metadata !"__modeflags", metadata !1410, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1411} ; [ DW_TAG_member ]
!1410 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1398} ; [ DW_TAG_file_type ]
!1411 = metadata !{i32 589860, metadata !1397, metadata !"short unsigned int", metadata !1397, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1412 = metadata !{i32 589837, metadata !1407, metadata !"__ungot_width", metadata !1410, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1413} ; [ DW_TAG_member ]
!1413 = metadata !{i32 589825, metadata !1397, metadata !"", metadata !1397, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1414, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1414 = metadata !{i32 589860, metadata !1397, metadata !"unsigned char", metadata !1397, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1415 = metadata !{i32 589837, metadata !1407, metadata !"__filedes", metadata !1410, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1416} ; [ DW_TAG_member ]
!1416 = metadata !{i32 589860, metadata !1397, metadata !"int", metadata !1397, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1417 = metadata !{i32 589837, metadata !1407, metadata !"__bufstart", metadata !1410, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1418 = metadata !{i32 589839, metadata !1397, metadata !"", metadata !1397, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1414} ; [ DW_TAG_pointer_type ]
!1419 = metadata !{i32 589837, metadata !1407, metadata !"__bufend", metadata !1410, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1420 = metadata !{i32 589837, metadata !1407, metadata !"__bufpos", metadata !1410, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1421 = metadata !{i32 589837, metadata !1407, metadata !"__bufread", metadata !1410, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1422 = metadata !{i32 589837, metadata !1407, metadata !"__bufgetc_u", metadata !1410, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1423 = metadata !{i32 589837, metadata !1407, metadata !"__bufputc_u", metadata !1410, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1418} ; [ DW_TAG_member ]
!1424 = metadata !{i32 589837, metadata !1407, metadata !"__nextopen", metadata !1410, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1425} ; [ DW_TAG_member ]
!1425 = metadata !{i32 589839, metadata !1397, metadata !"", metadata !1397, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1407} ; [ DW_TAG_pointer_type ]
!1426 = metadata !{i32 589837, metadata !1407, metadata !"__ungot", metadata !1410, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1427} ; [ DW_TAG_member ]
!1427 = metadata !{i32 589825, metadata !1397, metadata !"", metadata !1397, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1428, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1428 = metadata !{i32 589846, metadata !1402, metadata !"wchar_t", metadata !1402, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1416} ; [ DW_TAG_typedef ]
!1429 = metadata !{i32 589837, metadata !1407, metadata !"__state", metadata !1410, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1430} ; [ DW_TAG_member ]
!1430 = metadata !{i32 589846, metadata !1431, metadata !"__mbstate_t", metadata !1431, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1432} ; [ DW_TAG_typedef ]
!1431 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1398} ; [ DW_TAG_file_type ]
!1432 = metadata !{i32 589843, metadata !1397, metadata !"", metadata !1431, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1433, i32 0, null} ; [ DW_TAG_structure_type ]
!1433 = metadata !{metadata !1434, metadata !1435}
!1434 = metadata !{i32 589837, metadata !1432, metadata !"__mask", metadata !1431, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1428} ; [ DW_TAG_member ]
!1435 = metadata !{i32 589837, metadata !1432, metadata !"__wc", metadata !1431, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1428} ; [ DW_TAG_member ]
!1436 = metadata !{i32 589870, i32 0, metadata !1437, metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !1437, i32 29, metadata !1439, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1437 = metadata !{i32 589865, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1438} ; [ DW_TAG_file_type ]
!1438 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1439 = metadata !{i32 589845, metadata !1437, metadata !"", metadata !1437, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1440, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1440 = metadata !{metadata !1441, metadata !1442, metadata !1441}
!1441 = metadata !{i32 589860, metadata !1437, metadata !"int", metadata !1437, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1442 = metadata !{i32 589839, metadata !1437, metadata !"", metadata !1437, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1443} ; [ DW_TAG_pointer_type ]
!1443 = metadata !{i32 589846, metadata !1444, metadata !"FILE", metadata !1444, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1445} ; [ DW_TAG_typedef ]
!1444 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1438} ; [ DW_TAG_file_type ]
!1445 = metadata !{i32 589843, metadata !1437, metadata !"__STDIO_FILE_STRUCT", metadata !1444, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1446, i32 0, null} ; [ DW_TAG_structure_type ]
!1446 = metadata !{metadata !1447, metadata !1450, metadata !1453, metadata !1454, metadata !1456, metadata !1457, metadata !1458, metadata !1459, metadata !1460, metadata !1461, metadata !1463, metadata !1467}
!1447 = metadata !{i32 589837, metadata !1445, metadata !"__modeflags", metadata !1448, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1449} ; [ DW_TAG_member ]
!1448 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1438} ; [ DW_TAG_file_type ]
!1449 = metadata !{i32 589860, metadata !1437, metadata !"short unsigned int", metadata !1437, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1450 = metadata !{i32 589837, metadata !1445, metadata !"__ungot_width", metadata !1448, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1451} ; [ DW_TAG_member ]
!1451 = metadata !{i32 589825, metadata !1437, metadata !"", metadata !1437, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1452, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1452 = metadata !{i32 589860, metadata !1437, metadata !"unsigned char", metadata !1437, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1453 = metadata !{i32 589837, metadata !1445, metadata !"__filedes", metadata !1448, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1441} ; [ DW_TAG_member ]
!1454 = metadata !{i32 589837, metadata !1445, metadata !"__bufstart", metadata !1448, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1455 = metadata !{i32 589839, metadata !1437, metadata !"", metadata !1437, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1452} ; [ DW_TAG_pointer_type ]
!1456 = metadata !{i32 589837, metadata !1445, metadata !"__bufend", metadata !1448, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1457 = metadata !{i32 589837, metadata !1445, metadata !"__bufpos", metadata !1448, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1458 = metadata !{i32 589837, metadata !1445, metadata !"__bufread", metadata !1448, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1459 = metadata !{i32 589837, metadata !1445, metadata !"__bufgetc_u", metadata !1448, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1460 = metadata !{i32 589837, metadata !1445, metadata !"__bufputc_u", metadata !1448, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1455} ; [ DW_TAG_member ]
!1461 = metadata !{i32 589837, metadata !1445, metadata !"__nextopen", metadata !1448, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1462} ; [ DW_TAG_member ]
!1462 = metadata !{i32 589839, metadata !1437, metadata !"", metadata !1437, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1445} ; [ DW_TAG_pointer_type ]
!1463 = metadata !{i32 589837, metadata !1445, metadata !"__ungot", metadata !1448, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1464} ; [ DW_TAG_member ]
!1464 = metadata !{i32 589825, metadata !1437, metadata !"", metadata !1437, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1465, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1465 = metadata !{i32 589846, metadata !1466, metadata !"wchar_t", metadata !1466, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1441} ; [ DW_TAG_typedef ]
!1466 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1438} ; [ DW_TAG_file_type ]
!1467 = metadata !{i32 589837, metadata !1445, metadata !"__state", metadata !1448, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1468} ; [ DW_TAG_member ]
!1468 = metadata !{i32 589846, metadata !1469, metadata !"__mbstate_t", metadata !1469, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1470} ; [ DW_TAG_typedef ]
!1469 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1438} ; [ DW_TAG_file_type ]
!1470 = metadata !{i32 589843, metadata !1437, metadata !"", metadata !1469, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1471, i32 0, null} ; [ DW_TAG_structure_type ]
!1471 = metadata !{metadata !1472, metadata !1473}
!1472 = metadata !{i32 589837, metadata !1470, metadata !"__mask", metadata !1469, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1465} ; [ DW_TAG_member ]
!1473 = metadata !{i32 589837, metadata !1470, metadata !"__wc", metadata !1469, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1465} ; [ DW_TAG_member ]
!1474 = metadata !{i32 589870, i32 0, metadata !1475, metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !1475, i32 30, metadata !1477, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1475 = metadata !{i32 589865, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1476} ; [ DW_TAG_file_type ]
!1476 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1477 = metadata !{i32 589845, metadata !1475, metadata !"", metadata !1475, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1478, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1478 = metadata !{metadata !1479, metadata !1480, metadata !1479}
!1479 = metadata !{i32 589860, metadata !1475, metadata !"int", metadata !1475, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1480 = metadata !{i32 589839, metadata !1475, metadata !"", metadata !1475, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1481} ; [ DW_TAG_pointer_type ]
!1481 = metadata !{i32 589846, metadata !1482, metadata !"FILE", metadata !1482, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1483} ; [ DW_TAG_typedef ]
!1482 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1476} ; [ DW_TAG_file_type ]
!1483 = metadata !{i32 589843, metadata !1475, metadata !"__STDIO_FILE_STRUCT", metadata !1482, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1484, i32 0, null} ; [ DW_TAG_structure_type ]
!1484 = metadata !{metadata !1485, metadata !1488, metadata !1491, metadata !1492, metadata !1494, metadata !1495, metadata !1496, metadata !1497, metadata !1498, metadata !1499, metadata !1501, metadata !1505}
!1485 = metadata !{i32 589837, metadata !1483, metadata !"__modeflags", metadata !1486, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1487} ; [ DW_TAG_member ]
!1486 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1476} ; [ DW_TAG_file_type ]
!1487 = metadata !{i32 589860, metadata !1475, metadata !"short unsigned int", metadata !1475, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1488 = metadata !{i32 589837, metadata !1483, metadata !"__ungot_width", metadata !1486, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1489} ; [ DW_TAG_member ]
!1489 = metadata !{i32 589825, metadata !1475, metadata !"", metadata !1475, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1490, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1490 = metadata !{i32 589860, metadata !1475, metadata !"unsigned char", metadata !1475, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1491 = metadata !{i32 589837, metadata !1483, metadata !"__filedes", metadata !1486, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1479} ; [ DW_TAG_member ]
!1492 = metadata !{i32 589837, metadata !1483, metadata !"__bufstart", metadata !1486, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1493 = metadata !{i32 589839, metadata !1475, metadata !"", metadata !1475, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1490} ; [ DW_TAG_pointer_type ]
!1494 = metadata !{i32 589837, metadata !1483, metadata !"__bufend", metadata !1486, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1495 = metadata !{i32 589837, metadata !1483, metadata !"__bufpos", metadata !1486, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1496 = metadata !{i32 589837, metadata !1483, metadata !"__bufread", metadata !1486, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1497 = metadata !{i32 589837, metadata !1483, metadata !"__bufgetc_u", metadata !1486, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1498 = metadata !{i32 589837, metadata !1483, metadata !"__bufputc_u", metadata !1486, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1493} ; [ DW_TAG_member ]
!1499 = metadata !{i32 589837, metadata !1483, metadata !"__nextopen", metadata !1486, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1500} ; [ DW_TAG_member ]
!1500 = metadata !{i32 589839, metadata !1475, metadata !"", metadata !1475, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1483} ; [ DW_TAG_pointer_type ]
!1501 = metadata !{i32 589837, metadata !1483, metadata !"__ungot", metadata !1486, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1502} ; [ DW_TAG_member ]
!1502 = metadata !{i32 589825, metadata !1475, metadata !"", metadata !1475, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1503, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1503 = metadata !{i32 589846, metadata !1504, metadata !"wchar_t", metadata !1504, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1479} ; [ DW_TAG_typedef ]
!1504 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1476} ; [ DW_TAG_file_type ]
!1505 = metadata !{i32 589837, metadata !1483, metadata !"__state", metadata !1486, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1506} ; [ DW_TAG_member ]
!1506 = metadata !{i32 589846, metadata !1507, metadata !"__mbstate_t", metadata !1507, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1508} ; [ DW_TAG_typedef ]
!1507 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1476} ; [ DW_TAG_file_type ]
!1508 = metadata !{i32 589843, metadata !1475, metadata !"", metadata !1507, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1509, i32 0, null} ; [ DW_TAG_structure_type ]
!1509 = metadata !{metadata !1510, metadata !1511}
!1510 = metadata !{i32 589837, metadata !1508, metadata !"__mask", metadata !1507, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1503} ; [ DW_TAG_member ]
!1511 = metadata !{i32 589837, metadata !1508, metadata !"__wc", metadata !1507, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1503} ; [ DW_TAG_member ]
!1512 = metadata !{i32 589870, i32 0, metadata !1513, metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !1513, i32 18, metadata !1515, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__s
!1513 = metadata !{i32 589865, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1514} ; [ DW_TAG_file_type ]
!1514 = metadata !{i32 589841, i32 0, i32 1, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1515 = metadata !{i32 589845, metadata !1513, metadata !"", metadata !1513, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1516, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1516 = metadata !{metadata !1517, metadata !1520}
!1517 = metadata !{i32 589846, metadata !1518, metadata !"size_t", metadata !1518, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1519} ; [ DW_TAG_typedef ]
!1518 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1514} ; [ DW_TAG_file_type ]
!1519 = metadata !{i32 589860, metadata !1513, metadata !"long unsigned int", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1520 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1521} ; [ DW_TAG_pointer_type ]
!1521 = metadata !{i32 589846, metadata !1522, metadata !"FILE", metadata !1522, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1523} ; [ DW_TAG_typedef ]
!1522 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1514} ; [ DW_TAG_file_type ]
!1523 = metadata !{i32 589843, metadata !1513, metadata !"__STDIO_FILE_STRUCT", metadata !1522, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1524, i32 0, null} ; [ DW_TAG_structure_type ]
!1524 = metadata !{metadata !1525, metadata !1528, metadata !1531, metadata !1533, metadata !1535, metadata !1536, metadata !1537, metadata !1538, metadata !1539, metadata !1540, metadata !1542, metadata !1545}
!1525 = metadata !{i32 589837, metadata !1523, metadata !"__modeflags", metadata !1526, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1527} ; [ DW_TAG_member ]
!1526 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1514} ; [ DW_TAG_file_type ]
!1527 = metadata !{i32 589860, metadata !1513, metadata !"short unsigned int", metadata !1513, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1528 = metadata !{i32 589837, metadata !1523, metadata !"__ungot_width", metadata !1526, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1529} ; [ DW_TAG_member ]
!1529 = metadata !{i32 589825, metadata !1513, metadata !"", metadata !1513, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1530, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1530 = metadata !{i32 589860, metadata !1513, metadata !"unsigned char", metadata !1513, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1531 = metadata !{i32 589837, metadata !1523, metadata !"__filedes", metadata !1526, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1532} ; [ DW_TAG_member ]
!1532 = metadata !{i32 589860, metadata !1513, metadata !"int", metadata !1513, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1533 = metadata !{i32 589837, metadata !1523, metadata !"__bufstart", metadata !1526, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1534 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1530} ; [ DW_TAG_pointer_type ]
!1535 = metadata !{i32 589837, metadata !1523, metadata !"__bufend", metadata !1526, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1536 = metadata !{i32 589837, metadata !1523, metadata !"__bufpos", metadata !1526, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1537 = metadata !{i32 589837, metadata !1523, metadata !"__bufread", metadata !1526, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1538 = metadata !{i32 589837, metadata !1523, metadata !"__bufgetc_u", metadata !1526, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1539 = metadata !{i32 589837, metadata !1523, metadata !"__bufputc_u", metadata !1526, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1534} ; [ DW_TAG_member ]
!1540 = metadata !{i32 589837, metadata !1523, metadata !"__nextopen", metadata !1526, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1541} ; [ DW_TAG_member ]
!1541 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1523} ; [ DW_TAG_pointer_type ]
!1542 = metadata !{i32 589837, metadata !1523, metadata !"__ungot", metadata !1526, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1543} ; [ DW_TAG_member ]
!1543 = metadata !{i32 589825, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1544, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1544 = metadata !{i32 589846, metadata !1518, metadata !"wchar_t", metadata !1518, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1532} ; [ DW_TAG_typedef ]
!1545 = metadata !{i32 589837, metadata !1523, metadata !"__state", metadata !1526, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1546} ; [ DW_TAG_member ]
!1546 = metadata !{i32 589846, metadata !1547, metadata !"__mbstate_t", metadata !1547, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1548} ; [ DW_TAG_typedef ]
!1547 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1514} ; [ DW_TAG_file_type ]
!1548 = metadata !{i32 589843, metadata !1513, metadata !"", metadata !1547, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1549, i32 0, null} ; [ DW_TAG_structure_type ]
!1549 = metadata !{metadata !1550, metadata !1551}
!1550 = metadata !{i32 589837, metadata !1548, metadata !"__mask", metadata !1547, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1544} ; [ DW_TAG_member ]
!1551 = metadata !{i32 589837, metadata !1548, metadata !"__wc", metadata !1547, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1544} ; [ DW_TAG_member ]
!1552 = metadata !{i32 589870, i32 0, metadata !1553, metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !1553, i32 44, metadata !1555, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i64, i8*, %4*, i32)
!1553 = metadata !{i32 589865, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1554} ; [ DW_TAG_file_type ]
!1554 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1555 = metadata !{i32 589845, metadata !1553, metadata !"", metadata !1553, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1556, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1556 = metadata !{metadata !1557, metadata !1590, metadata !1593, metadata !1557, metadata !1569}
!1557 = metadata !{i32 589839, metadata !1553, metadata !"", metadata !1553, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1558} ; [ DW_TAG_pointer_type ]
!1558 = metadata !{i32 589846, metadata !1559, metadata !"FILE", metadata !1559, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1560} ; [ DW_TAG_typedef ]
!1559 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1554} ; [ DW_TAG_file_type ]
!1560 = metadata !{i32 589843, metadata !1553, metadata !"__STDIO_FILE_STRUCT", metadata !1559, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1561, i32 0, null} ; [ DW_TAG_structure_type ]
!1561 = metadata !{metadata !1562, metadata !1565, metadata !1568, metadata !1570, metadata !1572, metadata !1573, metadata !1574, metadata !1575, metadata !1576, metadata !1577, metadata !1579, metadata !1583}
!1562 = metadata !{i32 589837, metadata !1560, metadata !"__modeflags", metadata !1563, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1564} ; [ DW_TAG_member ]
!1563 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1554} ; [ DW_TAG_file_type ]
!1564 = metadata !{i32 589860, metadata !1553, metadata !"short unsigned int", metadata !1553, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1565 = metadata !{i32 589837, metadata !1560, metadata !"__ungot_width", metadata !1563, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1566} ; [ DW_TAG_member ]
!1566 = metadata !{i32 589825, metadata !1553, metadata !"", metadata !1553, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1567, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1567 = metadata !{i32 589860, metadata !1553, metadata !"unsigned char", metadata !1553, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1568 = metadata !{i32 589837, metadata !1560, metadata !"__filedes", metadata !1563, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1569 = metadata !{i32 589860, metadata !1553, metadata !"int", metadata !1553, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1570 = metadata !{i32 589837, metadata !1560, metadata !"__bufstart", metadata !1563, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1571 = metadata !{i32 589839, metadata !1553, metadata !"", metadata !1553, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1567} ; [ DW_TAG_pointer_type ]
!1572 = metadata !{i32 589837, metadata !1560, metadata !"__bufend", metadata !1563, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1573 = metadata !{i32 589837, metadata !1560, metadata !"__bufpos", metadata !1563, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1574 = metadata !{i32 589837, metadata !1560, metadata !"__bufread", metadata !1563, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1575 = metadata !{i32 589837, metadata !1560, metadata !"__bufgetc_u", metadata !1563, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1576 = metadata !{i32 589837, metadata !1560, metadata !"__bufputc_u", metadata !1563, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1571} ; [ DW_TAG_member ]
!1577 = metadata !{i32 589837, metadata !1560, metadata !"__nextopen", metadata !1563, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1578} ; [ DW_TAG_member ]
!1578 = metadata !{i32 589839, metadata !1553, metadata !"", metadata !1553, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1560} ; [ DW_TAG_pointer_type ]
!1579 = metadata !{i32 589837, metadata !1560, metadata !"__ungot", metadata !1563, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1580} ; [ DW_TAG_member ]
!1580 = metadata !{i32 589825, metadata !1553, metadata !"", metadata !1553, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1581, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1581 = metadata !{i32 589846, metadata !1582, metadata !"wchar_t", metadata !1582, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1569} ; [ DW_TAG_typedef ]
!1582 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1554} ; [ DW_TAG_file_type ]
!1583 = metadata !{i32 589837, metadata !1560, metadata !"__state", metadata !1563, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1584} ; [ DW_TAG_member ]
!1584 = metadata !{i32 589846, metadata !1585, metadata !"__mbstate_t", metadata !1585, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1586} ; [ DW_TAG_typedef ]
!1585 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1554} ; [ DW_TAG_file_type ]
!1586 = metadata !{i32 589843, metadata !1553, metadata !"", metadata !1585, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1587, i32 0, null} ; [ DW_TAG_structure_type ]
!1587 = metadata !{metadata !1588, metadata !1589}
!1588 = metadata !{i32 589837, metadata !1586, metadata !"__mask", metadata !1585, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1581} ; [ DW_TAG_member ]
!1589 = metadata !{i32 589837, metadata !1586, metadata !"__wc", metadata !1585, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1581} ; [ DW_TAG_member ]
!1590 = metadata !{i32 589846, metadata !1591, metadata !"intptr_t", metadata !1591, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !1592} ; [ DW_TAG_typedef ]
!1591 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1554} ; [ DW_TAG_file_type ]
!1592 = metadata !{i32 589860, metadata !1553, metadata !"long int", metadata !1553, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1593 = metadata !{i32 589839, metadata !1553, metadata !"", metadata !1553, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1594} ; [ DW_TAG_pointer_type ]
!1594 = metadata !{i32 589862, metadata !1553, metadata !"", metadata !1553, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1595} ; [ DW_TAG_const_type ]
!1595 = metadata !{i32 589860, metadata !1553, metadata !"char", metadata !1553, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1596 = metadata !{i32 589870, i32 0, metadata !1597, metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !1599, i32 512, metadata !1600, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**
!1597 = metadata !{i32 589865, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1598} ; [ DW_TAG_file_type ]
!1598 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!1599 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1598} ; [ DW_TAG_file_type ]
!1600 = metadata !{i32 589845, metadata !1597, metadata !"", metadata !1597, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1601, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1601 = metadata !{metadata !1602, metadata !1603, metadata !1606, metadata !1608, metadata !1608}
!1602 = metadata !{i32 589860, metadata !1597, metadata !"long unsigned int", metadata !1597, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1603 = metadata !{i32 589839, metadata !1597, metadata !"", metadata !1597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1604} ; [ DW_TAG_pointer_type ]
!1604 = metadata !{i32 589862, metadata !1597, metadata !"", metadata !1597, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1605} ; [ DW_TAG_const_type ]
!1605 = metadata !{i32 589860, metadata !1597, metadata !"char", metadata !1597, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1606 = metadata !{i32 589839, metadata !1597, metadata !"", metadata !1597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1607} ; [ DW_TAG_pointer_type ]
!1607 = metadata !{i32 589839, metadata !1597, metadata !"", metadata !1597, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1605} ; [ DW_TAG_pointer_type ]
!1608 = metadata !{i32 589860, metadata !1597, metadata !"int", metadata !1597, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1609 = metadata !{i32 589870, i32 0, metadata !1610, metadata !"atoi", metadata !"atoi", metadata !"atoi", metadata !1612, i32 275, metadata !1613, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*)* @atoi} ; [ DW_TAG_subprogram ]
!1610 = metadata !{i32 589865, metadata !"atoi.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1611} ; [ DW_TAG_file_type ]
!1611 = metadata !{i32 589841, i32 0, i32 1, metadata !"atoi.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1612 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1611} ; [ DW_TAG_file_type ]
!1613 = metadata !{i32 589845, metadata !1610, metadata !"", metadata !1610, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1614, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1614 = metadata !{metadata !1615, metadata !1616}
!1615 = metadata !{i32 589860, metadata !1610, metadata !"int", metadata !1610, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1616 = metadata !{i32 589839, metadata !1610, metadata !"", metadata !1610, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1617} ; [ DW_TAG_pointer_type ]
!1617 = metadata !{i32 589862, metadata !1610, metadata !"", metadata !1610, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1618} ; [ DW_TAG_const_type ]
!1618 = metadata !{i32 589860, metadata !1610, metadata !"char", metadata !1610, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1619 = metadata !{i32 589870, i32 0, metadata !1620, metadata !"fgets_unlocked", metadata !"fgets_unlocked", metadata !"fgets_unlocked", metadata !1622, i32 18, metadata !1623, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, %4*
!1620 = metadata !{i32 589865, metadata !"fgets_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1621} ; [ DW_TAG_file_type ]
!1621 = metadata !{i32 589841, i32 0, i32 1, metadata !"fgets_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1622 = metadata !{i32 589865, metadata !"fgets.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1621} ; [ DW_TAG_file_type ]
!1623 = metadata !{i32 589845, metadata !1620, metadata !"", metadata !1620, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1624, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1624 = metadata !{metadata !1625, metadata !1625, metadata !1627, metadata !1628}
!1625 = metadata !{i32 589839, metadata !1620, metadata !"", metadata !1620, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1626} ; [ DW_TAG_pointer_type ]
!1626 = metadata !{i32 589860, metadata !1620, metadata !"char", metadata !1620, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1627 = metadata !{i32 589860, metadata !1620, metadata !"int", metadata !1620, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1628 = metadata !{i32 589839, metadata !1620, metadata !"", metadata !1620, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1629} ; [ DW_TAG_pointer_type ]
!1629 = metadata !{i32 589846, metadata !1630, metadata !"FILE", metadata !1630, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1631} ; [ DW_TAG_typedef ]
!1630 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1621} ; [ DW_TAG_file_type ]
!1631 = metadata !{i32 589843, metadata !1620, metadata !"__STDIO_FILE_STRUCT", metadata !1630, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1632, i32 0, null} ; [ DW_TAG_structure_type ]
!1632 = metadata !{metadata !1633, metadata !1636, metadata !1639, metadata !1640, metadata !1642, metadata !1643, metadata !1644, metadata !1645, metadata !1646, metadata !1647, metadata !1649, metadata !1653}
!1633 = metadata !{i32 589837, metadata !1631, metadata !"__modeflags", metadata !1634, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1635} ; [ DW_TAG_member ]
!1634 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1621} ; [ DW_TAG_file_type ]
!1635 = metadata !{i32 589860, metadata !1620, metadata !"short unsigned int", metadata !1620, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1636 = metadata !{i32 589837, metadata !1631, metadata !"__ungot_width", metadata !1634, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1637} ; [ DW_TAG_member ]
!1637 = metadata !{i32 589825, metadata !1620, metadata !"", metadata !1620, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1638, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1638 = metadata !{i32 589860, metadata !1620, metadata !"unsigned char", metadata !1620, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1639 = metadata !{i32 589837, metadata !1631, metadata !"__filedes", metadata !1634, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1627} ; [ DW_TAG_member ]
!1640 = metadata !{i32 589837, metadata !1631, metadata !"__bufstart", metadata !1634, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1641 = metadata !{i32 589839, metadata !1620, metadata !"", metadata !1620, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1638} ; [ DW_TAG_pointer_type ]
!1642 = metadata !{i32 589837, metadata !1631, metadata !"__bufend", metadata !1634, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1643 = metadata !{i32 589837, metadata !1631, metadata !"__bufpos", metadata !1634, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1644 = metadata !{i32 589837, metadata !1631, metadata !"__bufread", metadata !1634, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1645 = metadata !{i32 589837, metadata !1631, metadata !"__bufgetc_u", metadata !1634, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1646 = metadata !{i32 589837, metadata !1631, metadata !"__bufputc_u", metadata !1634, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1641} ; [ DW_TAG_member ]
!1647 = metadata !{i32 589837, metadata !1631, metadata !"__nextopen", metadata !1634, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1648} ; [ DW_TAG_member ]
!1648 = metadata !{i32 589839, metadata !1620, metadata !"", metadata !1620, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1631} ; [ DW_TAG_pointer_type ]
!1649 = metadata !{i32 589837, metadata !1631, metadata !"__ungot", metadata !1634, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1650} ; [ DW_TAG_member ]
!1650 = metadata !{i32 589825, metadata !1620, metadata !"", metadata !1620, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1651, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1651 = metadata !{i32 589846, metadata !1652, metadata !"wchar_t", metadata !1652, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1627} ; [ DW_TAG_typedef ]
!1652 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1621} ; [ DW_TAG_file_type ]
!1653 = metadata !{i32 589837, metadata !1631, metadata !"__state", metadata !1634, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1654} ; [ DW_TAG_member ]
!1654 = metadata !{i32 589846, metadata !1655, metadata !"__mbstate_t", metadata !1655, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1656} ; [ DW_TAG_typedef ]
!1655 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1621} ; [ DW_TAG_file_type ]
!1656 = metadata !{i32 589843, metadata !1620, metadata !"", metadata !1655, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1657, i32 0, null} ; [ DW_TAG_structure_type ]
!1657 = metadata !{metadata !1658, metadata !1659}
!1658 = metadata !{i32 589837, metadata !1656, metadata !"__mask", metadata !1655, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1651} ; [ DW_TAG_member ]
!1659 = metadata !{i32 589837, metadata !1656, metadata !"__wc", metadata !1655, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1651} ; [ DW_TAG_member ]
!1660 = metadata !{i32 589870, i32 0, metadata !1661, metadata !"fseeko64", metadata !"fseeko64", metadata !"fseeko64", metadata !1663, i32 25, metadata !1664, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseeko64} ; [ 
!1661 = metadata !{i32 589865, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1662} ; [ DW_TAG_file_type ]
!1662 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1663 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1662} ; [ DW_TAG_file_type ]
!1664 = metadata !{i32 589845, metadata !1661, metadata !"", metadata !1661, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1665, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1665 = metadata !{metadata !1666, metadata !1667, metadata !1699, metadata !1666}
!1666 = metadata !{i32 589860, metadata !1661, metadata !"int", metadata !1661, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1667 = metadata !{i32 589839, metadata !1661, metadata !"", metadata !1661, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1668} ; [ DW_TAG_pointer_type ]
!1668 = metadata !{i32 589846, metadata !1669, metadata !"FILE", metadata !1669, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1670} ; [ DW_TAG_typedef ]
!1669 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1662} ; [ DW_TAG_file_type ]
!1670 = metadata !{i32 589843, metadata !1661, metadata !"__STDIO_FILE_STRUCT", metadata !1669, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1671, i32 0, null} ; [ DW_TAG_structure_type ]
!1671 = metadata !{metadata !1672, metadata !1675, metadata !1678, metadata !1679, metadata !1681, metadata !1682, metadata !1683, metadata !1684, metadata !1685, metadata !1686, metadata !1688, metadata !1692}
!1672 = metadata !{i32 589837, metadata !1670, metadata !"__modeflags", metadata !1673, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1674} ; [ DW_TAG_member ]
!1673 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1662} ; [ DW_TAG_file_type ]
!1674 = metadata !{i32 589860, metadata !1661, metadata !"short unsigned int", metadata !1661, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1675 = metadata !{i32 589837, metadata !1670, metadata !"__ungot_width", metadata !1673, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1676} ; [ DW_TAG_member ]
!1676 = metadata !{i32 589825, metadata !1661, metadata !"", metadata !1661, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1677, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1677 = metadata !{i32 589860, metadata !1661, metadata !"unsigned char", metadata !1661, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1678 = metadata !{i32 589837, metadata !1670, metadata !"__filedes", metadata !1673, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1666} ; [ DW_TAG_member ]
!1679 = metadata !{i32 589837, metadata !1670, metadata !"__bufstart", metadata !1673, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1680 = metadata !{i32 589839, metadata !1661, metadata !"", metadata !1661, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1677} ; [ DW_TAG_pointer_type ]
!1681 = metadata !{i32 589837, metadata !1670, metadata !"__bufend", metadata !1673, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1682 = metadata !{i32 589837, metadata !1670, metadata !"__bufpos", metadata !1673, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1683 = metadata !{i32 589837, metadata !1670, metadata !"__bufread", metadata !1673, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1684 = metadata !{i32 589837, metadata !1670, metadata !"__bufgetc_u", metadata !1673, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1685 = metadata !{i32 589837, metadata !1670, metadata !"__bufputc_u", metadata !1673, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1680} ; [ DW_TAG_member ]
!1686 = metadata !{i32 589837, metadata !1670, metadata !"__nextopen", metadata !1673, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1687} ; [ DW_TAG_member ]
!1687 = metadata !{i32 589839, metadata !1661, metadata !"", metadata !1661, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1670} ; [ DW_TAG_pointer_type ]
!1688 = metadata !{i32 589837, metadata !1670, metadata !"__ungot", metadata !1673, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1689} ; [ DW_TAG_member ]
!1689 = metadata !{i32 589825, metadata !1661, metadata !"", metadata !1661, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1690, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1690 = metadata !{i32 589846, metadata !1691, metadata !"wchar_t", metadata !1691, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1666} ; [ DW_TAG_typedef ]
!1691 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1662} ; [ DW_TAG_file_type ]
!1692 = metadata !{i32 589837, metadata !1670, metadata !"__state", metadata !1673, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1693} ; [ DW_TAG_member ]
!1693 = metadata !{i32 589846, metadata !1694, metadata !"__mbstate_t", metadata !1694, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1695} ; [ DW_TAG_typedef ]
!1694 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1662} ; [ DW_TAG_file_type ]
!1695 = metadata !{i32 589843, metadata !1661, metadata !"", metadata !1694, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1696, i32 0, null} ; [ DW_TAG_structure_type ]
!1696 = metadata !{metadata !1697, metadata !1698}
!1697 = metadata !{i32 589837, metadata !1695, metadata !"__mask", metadata !1694, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1690} ; [ DW_TAG_member ]
!1698 = metadata !{i32 589837, metadata !1695, metadata !"__wc", metadata !1694, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1690} ; [ DW_TAG_member ]
!1699 = metadata !{i32 589846, metadata !1700, metadata !"__off64_t", metadata !1700, i32 146, i64 0, i64 0, i64 0, i32 0, metadata !1701} ; [ DW_TAG_typedef ]
!1700 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1662} ; [ DW_TAG_file_type ]
!1701 = metadata !{i32 589860, metadata !1661, metadata !"long int", metadata !1661, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1702 = metadata !{i32 589870, i32 0, metadata !1703, metadata !"getdelim", metadata !"getdelim", metadata !"getdelim", metadata !1703, i32 32, metadata !1705, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8**, i64*, i32, %4*)* @getdeli
!1703 = metadata !{i32 589865, metadata !"getdelim.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1704} ; [ DW_TAG_file_type ]
!1704 = metadata !{i32 589841, i32 0, i32 1, metadata !"getdelim.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1705 = metadata !{i32 589845, metadata !1703, metadata !"", metadata !1703, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1706, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1706 = metadata !{metadata !1707, metadata !1710, metadata !1713, metadata !1717, metadata !1718}
!1707 = metadata !{i32 589846, metadata !1708, metadata !"__ssize_t", metadata !1708, i32 184, i64 0, i64 0, i64 0, i32 0, metadata !1709} ; [ DW_TAG_typedef ]
!1708 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1704} ; [ DW_TAG_file_type ]
!1709 = metadata !{i32 589860, metadata !1703, metadata !"long int", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1710 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1711} ; [ DW_TAG_pointer_type ]
!1711 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1712} ; [ DW_TAG_pointer_type ]
!1712 = metadata !{i32 589860, metadata !1703, metadata !"char", metadata !1703, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1713 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1714} ; [ DW_TAG_pointer_type ]
!1714 = metadata !{i32 589846, metadata !1715, metadata !"size_t", metadata !1715, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1716} ; [ DW_TAG_typedef ]
!1715 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1704} ; [ DW_TAG_file_type ]
!1716 = metadata !{i32 589860, metadata !1703, metadata !"long unsigned int", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1717 = metadata !{i32 589860, metadata !1703, metadata !"int", metadata !1703, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1718 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1719} ; [ DW_TAG_pointer_type ]
!1719 = metadata !{i32 589846, metadata !1720, metadata !"FILE", metadata !1720, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1721} ; [ DW_TAG_typedef ]
!1720 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1704} ; [ DW_TAG_file_type ]
!1721 = metadata !{i32 589843, metadata !1703, metadata !"__STDIO_FILE_STRUCT", metadata !1720, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1722, i32 0, null} ; [ DW_TAG_structure_type ]
!1722 = metadata !{metadata !1723, metadata !1726, metadata !1729, metadata !1730, metadata !1732, metadata !1733, metadata !1734, metadata !1735, metadata !1736, metadata !1737, metadata !1739, metadata !1742}
!1723 = metadata !{i32 589837, metadata !1721, metadata !"__modeflags", metadata !1724, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1725} ; [ DW_TAG_member ]
!1724 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1704} ; [ DW_TAG_file_type ]
!1725 = metadata !{i32 589860, metadata !1703, metadata !"short unsigned int", metadata !1703, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1726 = metadata !{i32 589837, metadata !1721, metadata !"__ungot_width", metadata !1724, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1727} ; [ DW_TAG_member ]
!1727 = metadata !{i32 589825, metadata !1703, metadata !"", metadata !1703, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1728, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1728 = metadata !{i32 589860, metadata !1703, metadata !"unsigned char", metadata !1703, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1729 = metadata !{i32 589837, metadata !1721, metadata !"__filedes", metadata !1724, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1717} ; [ DW_TAG_member ]
!1730 = metadata !{i32 589837, metadata !1721, metadata !"__bufstart", metadata !1724, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1731 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1728} ; [ DW_TAG_pointer_type ]
!1732 = metadata !{i32 589837, metadata !1721, metadata !"__bufend", metadata !1724, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1733 = metadata !{i32 589837, metadata !1721, metadata !"__bufpos", metadata !1724, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1734 = metadata !{i32 589837, metadata !1721, metadata !"__bufread", metadata !1724, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1735 = metadata !{i32 589837, metadata !1721, metadata !"__bufgetc_u", metadata !1724, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1736 = metadata !{i32 589837, metadata !1721, metadata !"__bufputc_u", metadata !1724, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1731} ; [ DW_TAG_member ]
!1737 = metadata !{i32 589837, metadata !1721, metadata !"__nextopen", metadata !1724, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1738} ; [ DW_TAG_member ]
!1738 = metadata !{i32 589839, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1721} ; [ DW_TAG_pointer_type ]
!1739 = metadata !{i32 589837, metadata !1721, metadata !"__ungot", metadata !1724, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1740} ; [ DW_TAG_member ]
!1740 = metadata !{i32 589825, metadata !1703, metadata !"", metadata !1703, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1741, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1741 = metadata !{i32 589846, metadata !1715, metadata !"wchar_t", metadata !1715, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1717} ; [ DW_TAG_typedef ]
!1742 = metadata !{i32 589837, metadata !1721, metadata !"__state", metadata !1724, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1743 = metadata !{i32 589846, metadata !1744, metadata !"__mbstate_t", metadata !1744, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1745} ; [ DW_TAG_typedef ]
!1744 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1704} ; [ DW_TAG_file_type ]
!1745 = metadata !{i32 589843, metadata !1703, metadata !"", metadata !1744, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1746, i32 0, null} ; [ DW_TAG_structure_type ]
!1746 = metadata !{metadata !1747, metadata !1748}
!1747 = metadata !{i32 589837, metadata !1745, metadata !"__mask", metadata !1744, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1741} ; [ DW_TAG_member ]
!1748 = metadata !{i32 589837, metadata !1745, metadata !"__wc", metadata !1744, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1741} ; [ DW_TAG_member ]
!1749 = metadata !{i32 589870, i32 0, metadata !1750, metadata !"isatty", metadata !"isatty", metadata !"isatty", metadata !1750, i32 27, metadata !1752, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @isatty} ; [ DW_TAG_subprogram 
!1750 = metadata !{i32 589865, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !1751} ; [ DW_TAG_file_type ]
!1751 = metadata !{i32 589841, i32 0, i32 1, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1752 = metadata !{i32 589845, metadata !1750, metadata !"", metadata !1750, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1753, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1753 = metadata !{metadata !1754, metadata !1754}
!1754 = metadata !{i32 589860, metadata !1750, metadata !"int", metadata !1750, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1755 = metadata !{i32 589870, i32 0, metadata !1756, metadata !"iswctype", metadata !"iswctype", metadata !"iswctype", metadata !1758, i32 593, metadata !1759, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @iswctype} ; [ DW_T
!1756 = metadata !{i32 589865, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1757} ; [ DW_TAG_file_type ]
!1757 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1758 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1757} ; [ DW_TAG_file_type ]
!1759 = metadata !{i32 589845, metadata !1756, metadata !"", metadata !1756, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1760, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1760 = metadata !{metadata !1761, metadata !1762, metadata !1765}
!1761 = metadata !{i32 589860, metadata !1756, metadata !"int", metadata !1756, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1762 = metadata !{i32 589846, metadata !1763, metadata !"wint_t", metadata !1763, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !1764} ; [ DW_TAG_typedef ]
!1763 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1757} ; [ DW_TAG_file_type ]
!1764 = metadata !{i32 589860, metadata !1756, metadata !"unsigned int", metadata !1756, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1765 = metadata !{i32 589846, metadata !1766, metadata !"wctype_t", metadata !1766, i32 71, i64 0, i64 0, i64 0, i32 0, metadata !1764} ; [ DW_TAG_typedef ]
!1766 = metadata !{i32 589865, metadata !"wctype.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1757} ; [ DW_TAG_file_type ]
!1767 = metadata !{i32 589870, i32 0, metadata !1768, metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !1770, i32 698, metadata !1771, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8**, i64, i64, %s
!1768 = metadata !{i32 589865, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1769} ; [ DW_TAG_file_type ]
!1769 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1770 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1769} ; [ DW_TAG_file_type ]
!1771 = metadata !{i32 589845, metadata !1768, metadata !"", metadata !1768, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1772, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1772 = metadata !{metadata !1773, metadata !1776, metadata !1779, metadata !1773, metadata !1773, metadata !1783}
!1773 = metadata !{i32 589846, metadata !1774, metadata !"size_t", metadata !1774, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1775} ; [ DW_TAG_typedef ]
!1774 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1769} ; [ DW_TAG_file_type ]
!1775 = metadata !{i32 589860, metadata !1768, metadata !"long unsigned int", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1776 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1777} ; [ DW_TAG_pointer_type ]
!1777 = metadata !{i32 589846, metadata !1774, metadata !"wchar_t", metadata !1774, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1778} ; [ DW_TAG_typedef ]
!1778 = metadata !{i32 589860, metadata !1768, metadata !"int", metadata !1768, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1779 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1780} ; [ DW_TAG_pointer_type ]
!1780 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1781} ; [ DW_TAG_pointer_type ]
!1781 = metadata !{i32 589862, metadata !1768, metadata !"", metadata !1768, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1782} ; [ DW_TAG_const_type ]
!1782 = metadata !{i32 589860, metadata !1768, metadata !"char", metadata !1768, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1783 = metadata !{i32 589839, metadata !1768, metadata !"", metadata !1768, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1784} ; [ DW_TAG_pointer_type ]
!1784 = metadata !{i32 589846, metadata !1785, metadata !"mbstate_t", metadata !1785, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !1786} ; [ DW_TAG_typedef ]
!1785 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1769} ; [ DW_TAG_file_type ]
!1786 = metadata !{i32 589843, metadata !1768, metadata !"", metadata !1785, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1787, i32 0, null} ; [ DW_TAG_structure_type ]
!1787 = metadata !{metadata !1788, metadata !1789}
!1788 = metadata !{i32 589837, metadata !1786, metadata !"__mask", metadata !1785, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1777} ; [ DW_TAG_member ]
!1789 = metadata !{i32 589837, metadata !1786, metadata !"__wc", metadata !1785, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1777} ; [ DW_TAG_member ]
!1790 = metadata !{i32 589870, i32 0, metadata !1791, metadata !"mbsrtowcs", metadata !"mbsrtowcs", metadata !"mbsrtowcs", metadata !1793, i32 373, metadata !1794, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8**, i64, %struct.__
!1791 = metadata !{i32 589865, metadata !"mbsrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1792} ; [ DW_TAG_file_type ]
!1792 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1793 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1792} ; [ DW_TAG_file_type ]
!1794 = metadata !{i32 589845, metadata !1791, metadata !"", metadata !1791, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1795, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1795 = metadata !{metadata !1796, metadata !1799, metadata !1802, metadata !1796, metadata !1806}
!1796 = metadata !{i32 589846, metadata !1797, metadata !"size_t", metadata !1797, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1798} ; [ DW_TAG_typedef ]
!1797 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1792} ; [ DW_TAG_file_type ]
!1798 = metadata !{i32 589860, metadata !1791, metadata !"long unsigned int", metadata !1791, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1799 = metadata !{i32 589839, metadata !1791, metadata !"", metadata !1791, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1800} ; [ DW_TAG_pointer_type ]
!1800 = metadata !{i32 589846, metadata !1797, metadata !"wchar_t", metadata !1797, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1801} ; [ DW_TAG_typedef ]
!1801 = metadata !{i32 589860, metadata !1791, metadata !"int", metadata !1791, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1802 = metadata !{i32 589839, metadata !1791, metadata !"", metadata !1791, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1803} ; [ DW_TAG_pointer_type ]
!1803 = metadata !{i32 589839, metadata !1791, metadata !"", metadata !1791, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1804} ; [ DW_TAG_pointer_type ]
!1804 = metadata !{i32 589862, metadata !1791, metadata !"", metadata !1791, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1805} ; [ DW_TAG_const_type ]
!1805 = metadata !{i32 589860, metadata !1791, metadata !"char", metadata !1791, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1806 = metadata !{i32 589839, metadata !1791, metadata !"", metadata !1791, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1807} ; [ DW_TAG_pointer_type ]
!1807 = metadata !{i32 589846, metadata !1808, metadata !"mbstate_t", metadata !1808, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !1809} ; [ DW_TAG_typedef ]
!1808 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1792} ; [ DW_TAG_file_type ]
!1809 = metadata !{i32 589843, metadata !1791, metadata !"", metadata !1808, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1810, i32 0, null} ; [ DW_TAG_structure_type ]
!1810 = metadata !{metadata !1811, metadata !1812}
!1811 = metadata !{i32 589837, metadata !1809, metadata !"__mask", metadata !1808, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1800} ; [ DW_TAG_member ]
!1812 = metadata !{i32 589837, metadata !1809, metadata !"__wc", metadata !1808, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1800} ; [ DW_TAG_member ]
!1813 = metadata !{i32 589870, i32 0, metadata !1814, metadata !"memcpy", metadata !"memcpy", metadata !"memcpy", metadata !1814, i32 19, metadata !1816, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memcpy} ; [ DW_TAG_s
!1814 = metadata !{i32 589865, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1815} ; [ DW_TAG_file_type ]
!1815 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1816 = metadata !{i32 589845, metadata !1814, metadata !"", metadata !1814, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1817, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1817 = metadata !{metadata !1818, metadata !1818, metadata !1818, metadata !1819}
!1818 = metadata !{i32 589839, metadata !1814, metadata !"", metadata !1814, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1819 = metadata !{i32 589846, metadata !1820, metadata !"size_t", metadata !1820, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1821} ; [ DW_TAG_typedef ]
!1820 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1815} ; [ DW_TAG_file_type ]
!1821 = metadata !{i32 589860, metadata !1814, metadata !"long unsigned int", metadata !1814, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1822 = metadata !{i32 589870, i32 0, metadata !1823, metadata !"memmove", metadata !"memmove", metadata !"memmove", metadata !1823, i32 18, metadata !1825, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memmove} ; [ DW_T
!1823 = metadata !{i32 589865, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1824} ; [ DW_TAG_file_type ]
!1824 = metadata !{i32 589841, i32 0, i32 1, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1825 = metadata !{i32 589845, metadata !1823, metadata !"", metadata !1823, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1826, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1826 = metadata !{metadata !1827, metadata !1827, metadata !1827, metadata !1828}
!1827 = metadata !{i32 589839, metadata !1823, metadata !"", metadata !1823, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1828 = metadata !{i32 589846, metadata !1829, metadata !"size_t", metadata !1829, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1830} ; [ DW_TAG_typedef ]
!1829 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1824} ; [ DW_TAG_file_type ]
!1830 = metadata !{i32 589860, metadata !1823, metadata !"long unsigned int", metadata !1823, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1831 = metadata !{i32 589870, i32 0, metadata !1832, metadata !"memset", metadata !"memset", metadata !"memset", metadata !1832, i32 18, metadata !1834, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memset} ; [ DW_TAG_s
!1832 = metadata !{i32 589865, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1833} ; [ DW_TAG_file_type ]
!1833 = metadata !{i32 589841, i32 0, i32 1, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1834 = metadata !{i32 589845, metadata !1832, metadata !"", metadata !1832, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1835, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1835 = metadata !{metadata !1836, metadata !1836, metadata !1837, metadata !1838}
!1836 = metadata !{i32 589839, metadata !1832, metadata !"", metadata !1832, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1837 = metadata !{i32 589860, metadata !1832, metadata !"int", metadata !1832, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1838 = metadata !{i32 589846, metadata !1839, metadata !"size_t", metadata !1839, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1840} ; [ DW_TAG_typedef ]
!1839 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1833} ; [ DW_TAG_file_type ]
!1840 = metadata !{i32 589860, metadata !1832, metadata !"long unsigned int", metadata !1832, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1841 = metadata !{i32 589870, i32 0, metadata !1842, metadata !"__raise", metadata !"__raise", metadata !"__raise", metadata !1842, i32 16, metadata !1844, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @__raise} ; [ DW_TAG_subprog
!1842 = metadata !{i32 589865, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1843} ; [ DW_TAG_file_type ]
!1843 = metadata !{i32 589841, i32 0, i32 1, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1844 = metadata !{i32 589845, metadata !1842, metadata !"", metadata !1842, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1845, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1845 = metadata !{metadata !1846, metadata !1846}
!1846 = metadata !{i32 589860, metadata !1842, metadata !"int", metadata !1842, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1847 = metadata !{i32 589870, i32 0, metadata !1848, metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !1848, i32 43, metadata !1850, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %s
!1848 = metadata !{i32 589865, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1849} ; [ DW_TAG_file_type ]
!1849 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1850 = metadata !{i32 589845, metadata !1848, metadata !"", metadata !1848, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1851, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1851 = metadata !{metadata !1852, metadata !1852, metadata !1853, metadata !1944}
!1852 = metadata !{i32 589860, metadata !1848, metadata !"int", metadata !1848, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1853 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1854} ; [ DW_TAG_pointer_type ]
!1854 = metadata !{i32 589862, metadata !1848, metadata !"", metadata !1848, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !1855} ; [ DW_TAG_const_type ]
!1855 = metadata !{i32 589843, metadata !1848, metadata !"sigaction", metadata !1856, i32 26, i64 1216, i64 64, i64 0, i32 0, null, metadata !1857, i32 0, null} ; [ DW_TAG_structure_type ]
!1856 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1849} ; [ DW_TAG_file_type ]
!1857 = metadata !{metadata !1858, metadata !1932, metadata !1940, metadata !1941}
!1858 = metadata !{i32 589837, metadata !1855, metadata !"__sigaction_handler", metadata !1856, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1859} ; [ DW_TAG_member ]
!1859 = metadata !{i32 589847, metadata !1848, metadata !"", metadata !1856, i32 30, i64 64, i64 64, i64 0, i32 0, null, metadata !1860, i32 0, null} ; [ DW_TAG_union_type ]
!1860 = metadata !{metadata !1861, metadata !1867}
!1861 = metadata !{i32 589837, metadata !1859, metadata !"sa_handler", metadata !1856, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !1862} ; [ DW_TAG_member ]
!1862 = metadata !{i32 589846, metadata !1863, metadata !"__sighandler_t", metadata !1863, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !1864} ; [ DW_TAG_typedef ]
!1863 = metadata !{i32 589865, metadata !"signal.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1849} ; [ DW_TAG_file_type ]
!1864 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1865} ; [ DW_TAG_pointer_type ]
!1865 = metadata !{i32 589845, metadata !1848, metadata !"", metadata !1848, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1866, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1866 = metadata !{null, metadata !1852}
!1867 = metadata !{i32 589837, metadata !1859, metadata !"sa_sigaction", metadata !1856, i32 34, i64 64, i64 64, i64 0, i32 0, metadata !1868} ; [ DW_TAG_member ]
!1868 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1869} ; [ DW_TAG_pointer_type ]
!1869 = metadata !{i32 589845, metadata !1848, metadata !"", metadata !1848, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1870, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1870 = metadata !{null, metadata !1852, metadata !1871, metadata !1906}
!1871 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1872} ; [ DW_TAG_pointer_type ]
!1872 = metadata !{i32 589846, metadata !1873, metadata !"siginfo_t", metadata !1873, i32 108, i64 0, i64 0, i64 0, i32 0, metadata !1874} ; [ DW_TAG_typedef ]
!1873 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1849} ; [ DW_TAG_file_type ]
!1874 = metadata !{i32 589843, metadata !1848, metadata !"siginfo", metadata !1873, i32 52, i64 1024, i64 64, i64 0, i32 0, null, metadata !1875, i32 0, null} ; [ DW_TAG_structure_type ]
!1875 = metadata !{metadata !1876, metadata !1877, metadata !1878, metadata !1879}
!1876 = metadata !{i32 589837, metadata !1874, metadata !"si_signo", metadata !1873, i32 53, i64 32, i64 32, i64 0, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1877 = metadata !{i32 589837, metadata !1874, metadata !"si_errno", metadata !1873, i32 54, i64 32, i64 32, i64 32, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1878 = metadata !{i32 589837, metadata !1874, metadata !"si_code", metadata !1873, i32 56, i64 32, i64 32, i64 64, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1879 = metadata !{i32 589837, metadata !1874, metadata !"_sifields", metadata !1873, i32 107, i64 896, i64 64, i64 128, i32 0, metadata !1880} ; [ DW_TAG_member ]
!1880 = metadata !{i32 589847, metadata !1848, metadata !"", metadata !1873, i32 59, i64 896, i64 64, i64 0, i32 0, null, metadata !1881, i32 0, null} ; [ DW_TAG_union_type ]
!1881 = metadata !{metadata !1882, metadata !1886, metadata !1895, metadata !1907, metadata !1913, metadata !1923, metadata !1927}
!1882 = metadata !{i32 589837, metadata !1880, metadata !"_pad", metadata !1873, i32 60, i64 896, i64 32, i64 0, i32 0, metadata !1883} ; [ DW_TAG_member ]
!1883 = metadata !{i32 589825, metadata !1848, metadata !"", metadata !1848, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !1852, metadata !1884, i32 0, null} ; [ DW_TAG_array_type ]
!1884 = metadata !{metadata !1885}
!1885 = metadata !{i32 589857, i64 0, i64 27}     ; [ DW_TAG_subrange_type ]
!1886 = metadata !{i32 589837, metadata !1880, metadata !"_kill", metadata !1873, i32 67, i64 64, i64 32, i64 0, i32 0, metadata !1887} ; [ DW_TAG_member ]
!1887 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 64, i64 64, i64 32, i64 0, i32 0, null, metadata !1888, i32 0, null} ; [ DW_TAG_structure_type ]
!1888 = metadata !{metadata !1889, metadata !1892}
!1889 = metadata !{i32 589837, metadata !1887, metadata !"si_pid", metadata !1873, i32 65, i64 32, i64 32, i64 0, i32 0, metadata !1890} ; [ DW_TAG_member ]
!1890 = metadata !{i32 589846, metadata !1891, metadata !"__pid_t", metadata !1891, i32 147, i64 0, i64 0, i64 0, i32 0, metadata !1852} ; [ DW_TAG_typedef ]
!1891 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1849} ; [ DW_TAG_file_type ]
!1892 = metadata !{i32 589837, metadata !1887, metadata !"si_uid", metadata !1873, i32 66, i64 32, i64 32, i64 32, i32 0, metadata !1893} ; [ DW_TAG_member ]
!1893 = metadata !{i32 589846, metadata !1891, metadata !"__uid_t", metadata !1891, i32 139, i64 0, i64 0, i64 0, i32 0, metadata !1894} ; [ DW_TAG_typedef ]
!1894 = metadata !{i32 589860, metadata !1848, metadata !"unsigned int", metadata !1848, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1895 = metadata !{i32 589837, metadata !1880, metadata !"_timer", metadata !1873, i32 75, i64 128, i64 64, i64 0, i32 0, metadata !1896} ; [ DW_TAG_member ]
!1896 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 71, i64 128, i64 64, i64 0, i32 0, null, metadata !1897, i32 0, null} ; [ DW_TAG_structure_type ]
!1897 = metadata !{metadata !1898, metadata !1899, metadata !1900}
!1898 = metadata !{i32 589837, metadata !1896, metadata !"si_tid", metadata !1873, i32 72, i64 32, i64 32, i64 0, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1899 = metadata !{i32 589837, metadata !1896, metadata !"si_overrun", metadata !1873, i32 73, i64 32, i64 32, i64 32, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1900 = metadata !{i32 589837, metadata !1896, metadata !"si_sigval", metadata !1873, i32 74, i64 64, i64 64, i64 64, i32 0, metadata !1901} ; [ DW_TAG_member ]
!1901 = metadata !{i32 589846, metadata !1873, metadata !"sigval_t", metadata !1873, i32 37, i64 0, i64 0, i64 0, i32 0, metadata !1902} ; [ DW_TAG_typedef ]
!1902 = metadata !{i32 589847, metadata !1848, metadata !"sigval", metadata !1873, i32 34, i64 64, i64 64, i64 0, i32 0, null, metadata !1903, i32 0, null} ; [ DW_TAG_union_type ]
!1903 = metadata !{metadata !1904, metadata !1905}
!1904 = metadata !{i32 589837, metadata !1902, metadata !"sival_int", metadata !1873, i32 35, i64 32, i64 32, i64 0, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1905 = metadata !{i32 589837, metadata !1902, metadata !"sival_ptr", metadata !1873, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1906} ; [ DW_TAG_member ]
!1906 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1907 = metadata !{i32 589837, metadata !1880, metadata !"_rt", metadata !1873, i32 83, i64 128, i64 64, i64 0, i32 0, metadata !1908} ; [ DW_TAG_member ]
!1908 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 79, i64 128, i64 64, i64 0, i32 0, null, metadata !1909, i32 0, null} ; [ DW_TAG_structure_type ]
!1909 = metadata !{metadata !1910, metadata !1911, metadata !1912}
!1910 = metadata !{i32 589837, metadata !1908, metadata !"si_pid", metadata !1873, i32 80, i64 32, i64 32, i64 0, i32 0, metadata !1890} ; [ DW_TAG_member ]
!1911 = metadata !{i32 589837, metadata !1908, metadata !"si_uid", metadata !1873, i32 81, i64 32, i64 32, i64 32, i32 0, metadata !1893} ; [ DW_TAG_member ]
!1912 = metadata !{i32 589837, metadata !1908, metadata !"si_sigval", metadata !1873, i32 82, i64 64, i64 64, i64 64, i32 0, metadata !1901} ; [ DW_TAG_member ]
!1913 = metadata !{i32 589837, metadata !1880, metadata !"_sigchld", metadata !1873, i32 93, i64 256, i64 64, i64 0, i32 0, metadata !1914} ; [ DW_TAG_member ]
!1914 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 87, i64 256, i64 64, i64 0, i32 0, null, metadata !1915, i32 0, null} ; [ DW_TAG_structure_type ]
!1915 = metadata !{metadata !1916, metadata !1917, metadata !1918, metadata !1919, metadata !1922}
!1916 = metadata !{i32 589837, metadata !1914, metadata !"si_pid", metadata !1873, i32 88, i64 32, i64 32, i64 0, i32 0, metadata !1890} ; [ DW_TAG_member ]
!1917 = metadata !{i32 589837, metadata !1914, metadata !"si_uid", metadata !1873, i32 89, i64 32, i64 32, i64 32, i32 0, metadata !1893} ; [ DW_TAG_member ]
!1918 = metadata !{i32 589837, metadata !1914, metadata !"si_status", metadata !1873, i32 90, i64 32, i64 32, i64 64, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1919 = metadata !{i32 589837, metadata !1914, metadata !"si_utime", metadata !1873, i32 91, i64 64, i64 64, i64 128, i32 0, metadata !1920} ; [ DW_TAG_member ]
!1920 = metadata !{i32 589846, metadata !1891, metadata !"__clock_t", metadata !1891, i32 149, i64 0, i64 0, i64 0, i32 0, metadata !1921} ; [ DW_TAG_typedef ]
!1921 = metadata !{i32 589860, metadata !1848, metadata !"long int", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1922 = metadata !{i32 589837, metadata !1914, metadata !"si_stime", metadata !1873, i32 92, i64 64, i64 64, i64 192, i32 0, metadata !1920} ; [ DW_TAG_member ]
!1923 = metadata !{i32 589837, metadata !1880, metadata !"_sigfault", metadata !1873, i32 99, i64 64, i64 64, i64 0, i32 0, metadata !1924} ; [ DW_TAG_member ]
!1924 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 97, i64 64, i64 64, i64 0, i32 0, null, metadata !1925, i32 0, null} ; [ DW_TAG_structure_type ]
!1925 = metadata !{metadata !1926}
!1926 = metadata !{i32 589837, metadata !1924, metadata !"si_addr", metadata !1873, i32 98, i64 64, i64 64, i64 0, i32 0, metadata !1906} ; [ DW_TAG_member ]
!1927 = metadata !{i32 589837, metadata !1880, metadata !"_sigpoll", metadata !1873, i32 106, i64 128, i64 64, i64 0, i32 0, metadata !1928} ; [ DW_TAG_member ]
!1928 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1873, i32 103, i64 128, i64 64, i64 0, i32 0, null, metadata !1929, i32 0, null} ; [ DW_TAG_structure_type ]
!1929 = metadata !{metadata !1930, metadata !1931}
!1930 = metadata !{i32 589837, metadata !1928, metadata !"si_band", metadata !1873, i32 104, i64 64, i64 64, i64 0, i32 0, metadata !1921} ; [ DW_TAG_member ]
!1931 = metadata !{i32 589837, metadata !1928, metadata !"si_fd", metadata !1873, i32 105, i64 32, i64 32, i64 64, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1932 = metadata !{i32 589837, metadata !1855, metadata !"sa_mask", metadata !1856, i32 44, i64 1024, i64 64, i64 64, i32 0, metadata !1933} ; [ DW_TAG_member ]
!1933 = metadata !{i32 589846, metadata !1934, metadata !"__sigset_t", metadata !1934, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1935} ; [ DW_TAG_typedef ]
!1934 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1849} ; [ DW_TAG_file_type ]
!1935 = metadata !{i32 589843, metadata !1848, metadata !"", metadata !1934, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1936, i32 0, null} ; [ DW_TAG_structure_type ]
!1936 = metadata !{metadata !1937}
!1937 = metadata !{i32 589837, metadata !1935, metadata !"__val", metadata !1934, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1938} ; [ DW_TAG_member ]
!1938 = metadata !{i32 589825, metadata !1848, metadata !"", metadata !1848, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1939, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!1939 = metadata !{i32 589860, metadata !1848, metadata !"long unsigned int", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1940 = metadata !{i32 589837, metadata !1855, metadata !"sa_flags", metadata !1856, i32 47, i64 32, i64 32, i64 1088, i32 0, metadata !1852} ; [ DW_TAG_member ]
!1941 = metadata !{i32 589837, metadata !1855, metadata !"sa_restorer", metadata !1856, i32 50, i64 64, i64 64, i64 1152, i32 0, metadata !1942} ; [ DW_TAG_member ]
!1942 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1943} ; [ DW_TAG_pointer_type ]
!1943 = metadata !{i32 589845, metadata !1848, metadata !"", metadata !1848, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1944 = metadata !{i32 589839, metadata !1848, metadata !"", metadata !1848, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1855} ; [ DW_TAG_pointer_type ]
!1945 = metadata !{i32 589870, i32 0, metadata !1946, metadata !"strcpy", metadata !"strcpy", metadata !"strcpy", metadata !1946, i32 19, metadata !1948, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strcpy} ; [ DW_TAG_subpro
!1946 = metadata !{i32 589865, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1947} ; [ DW_TAG_file_type ]
!1947 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1948 = metadata !{i32 589845, metadata !1946, metadata !"", metadata !1946, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1949, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1949 = metadata !{metadata !1950, metadata !1950, metadata !1952}
!1950 = metadata !{i32 589839, metadata !1946, metadata !"", metadata !1946, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1951} ; [ DW_TAG_pointer_type ]
!1951 = metadata !{i32 589860, metadata !1946, metadata !"char", metadata !1946, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1952 = metadata !{i32 589839, metadata !1946, metadata !"", metadata !1946, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1953} ; [ DW_TAG_pointer_type ]
!1953 = metadata !{i32 589862, metadata !1946, metadata !"", metadata !1946, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1951} ; [ DW_TAG_const_type ]
!1954 = metadata !{i32 589870, i32 0, metadata !1955, metadata !"strerror", metadata !"strerror", metadata !"strerror", metadata !1955, i32 16, metadata !1957, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @strerror} ; [ DW_TAG_sub
!1955 = metadata !{i32 589865, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1956} ; [ DW_TAG_file_type ]
!1956 = metadata !{i32 589841, i32 0, i32 1, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1957 = metadata !{i32 589845, metadata !1955, metadata !"", metadata !1955, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1958, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1958 = metadata !{metadata !1959, metadata !1961}
!1959 = metadata !{i32 589839, metadata !1955, metadata !"", metadata !1955, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1960} ; [ DW_TAG_pointer_type ]
!1960 = metadata !{i32 589860, metadata !1955, metadata !"char", metadata !1955, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1961 = metadata !{i32 589860, metadata !1955, metadata !"int", metadata !1955, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1962 = metadata !{i32 589870, i32 0, metadata !1963, metadata !"strsep", metadata !"strsep", metadata !"strsep", metadata !1963, i32 17, metadata !1965, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8**, i8*)* @strsep} ; [ DW_TAG_subpr
!1963 = metadata !{i32 589865, metadata !"strsep.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1964} ; [ DW_TAG_file_type ]
!1964 = metadata !{i32 589841, i32 0, i32 1, metadata !"strsep.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1965 = metadata !{i32 589845, metadata !1963, metadata !"", metadata !1963, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1966, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1966 = metadata !{metadata !1967, metadata !1969, metadata !1970}
!1967 = metadata !{i32 589839, metadata !1963, metadata !"", metadata !1963, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1968} ; [ DW_TAG_pointer_type ]
!1968 = metadata !{i32 589860, metadata !1963, metadata !"char", metadata !1963, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1969 = metadata !{i32 589839, metadata !1963, metadata !"", metadata !1963, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1967} ; [ DW_TAG_pointer_type ]
!1970 = metadata !{i32 589839, metadata !1963, metadata !"", metadata !1963, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1971} ; [ DW_TAG_pointer_type ]
!1971 = metadata !{i32 589862, metadata !1963, metadata !"", metadata !1963, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1968} ; [ DW_TAG_const_type ]
!1972 = metadata !{i32 589870, i32 0, metadata !1973, metadata !"strtok_r", metadata !"strtok_r", metadata !"strtok_r", metadata !1973, i32 27, metadata !1975, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i8**)* @strtok_r} ; [
!1973 = metadata !{i32 589865, metadata !"strtok_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1974} ; [ DW_TAG_file_type ]
!1974 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtok_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1975 = metadata !{i32 589845, metadata !1973, metadata !"", metadata !1973, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1976, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1976 = metadata !{metadata !1977, metadata !1977, metadata !1979, metadata !1981}
!1977 = metadata !{i32 589839, metadata !1973, metadata !"", metadata !1973, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1978} ; [ DW_TAG_pointer_type ]
!1978 = metadata !{i32 589860, metadata !1973, metadata !"char", metadata !1973, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1979 = metadata !{i32 589839, metadata !1973, metadata !"", metadata !1973, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1980} ; [ DW_TAG_pointer_type ]
!1980 = metadata !{i32 589862, metadata !1973, metadata !"", metadata !1973, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1978} ; [ DW_TAG_const_type ]
!1981 = metadata !{i32 589839, metadata !1973, metadata !"", metadata !1973, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1977} ; [ DW_TAG_pointer_type ]
!1982 = metadata !{i32 589870, i32 0, metadata !1983, metadata !"vasprintf", metadata !"vasprintf", metadata !"vasprintf", metadata !1983, i32 36, metadata !1985, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8**, i8*, %struct.__va_list
!1983 = metadata !{i32 589865, metadata !"vasprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1984} ; [ DW_TAG_file_type ]
!1984 = metadata !{i32 589841, i32 0, i32 1, metadata !"vasprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1985 = metadata !{i32 589845, metadata !1983, metadata !"", metadata !1983, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1986, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1986 = metadata !{metadata !1987, metadata !1988, metadata !1991, metadata !1993}
!1987 = metadata !{i32 589860, metadata !1983, metadata !"int", metadata !1983, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1988 = metadata !{i32 589839, metadata !1983, metadata !"", metadata !1983, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1989} ; [ DW_TAG_pointer_type ]
!1989 = metadata !{i32 589839, metadata !1983, metadata !"", metadata !1983, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1990} ; [ DW_TAG_pointer_type ]
!1990 = metadata !{i32 589860, metadata !1983, metadata !"char", metadata !1983, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1991 = metadata !{i32 589839, metadata !1983, metadata !"", metadata !1983, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1992} ; [ DW_TAG_pointer_type ]
!1992 = metadata !{i32 589862, metadata !1983, metadata !"", metadata !1983, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1990} ; [ DW_TAG_const_type ]
!1993 = metadata !{i32 589839, metadata !1983, metadata !"", metadata !1983, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1994} ; [ DW_TAG_pointer_type ]
!1994 = metadata !{i32 589843, metadata !1983, metadata !"__va_list_tag", metadata !1995, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !1996, i32 0, null} ; [ DW_TAG_structure_type ]
!1995 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !1984} ; [ DW_TAG_file_type ]
!1996 = metadata !{metadata !1997, metadata !1999, metadata !2000, metadata !2002}
!1997 = metadata !{i32 589837, metadata !1994, metadata !"gp_offset", metadata !1995, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !1998} ; [ DW_TAG_member ]
!1998 = metadata !{i32 589860, metadata !1983, metadata !"unsigned int", metadata !1983, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1999 = metadata !{i32 589837, metadata !1994, metadata !"fp_offset", metadata !1995, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !1998} ; [ DW_TAG_member ]
!2000 = metadata !{i32 589837, metadata !1994, metadata !"overflow_arg_area", metadata !1995, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2001} ; [ DW_TAG_member ]
!2001 = metadata !{i32 589839, metadata !1983, metadata !"", metadata !1983, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2002 = metadata !{i32 589837, metadata !1994, metadata !"reg_save_area", metadata !1995, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2001} ; [ DW_TAG_member ]
!2003 = metadata !{i32 589870, i32 0, metadata !2004, metadata !"_fp_out_narrow", metadata !"_fp_out_narrow", metadata !"", metadata !2006, i32 1225, metadata !2007, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i64, i64, i64)* @_fp_
!2004 = metadata !{i32 589865, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2005} ; [ DW_TAG_file_type ]
!2005 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!2006 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2005} ; [ DW_TAG_file_type ]
!2007 = metadata !{i32 589845, metadata !2004, metadata !"", metadata !2004, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2008, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2008 = metadata !{metadata !2009, metadata !2012, metadata !2044, metadata !2044, metadata !2044}
!2009 = metadata !{i32 589846, metadata !2010, metadata !"size_t", metadata !2010, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2011} ; [ DW_TAG_typedef ]
!2010 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2005} ; [ DW_TAG_file_type ]
!2011 = metadata !{i32 589860, metadata !2004, metadata !"long unsigned int", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2012 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2013} ; [ DW_TAG_pointer_type ]
!2013 = metadata !{i32 589846, metadata !2014, metadata !"FILE", metadata !2014, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2015} ; [ DW_TAG_typedef ]
!2014 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2005} ; [ DW_TAG_file_type ]
!2015 = metadata !{i32 589843, metadata !2004, metadata !"__STDIO_FILE_STRUCT", metadata !2014, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2016, i32 0, null} ; [ DW_TAG_structure_type ]
!2016 = metadata !{metadata !2017, metadata !2020, metadata !2023, metadata !2025, metadata !2027, metadata !2028, metadata !2029, metadata !2030, metadata !2031, metadata !2032, metadata !2034, metadata !2037}
!2017 = metadata !{i32 589837, metadata !2015, metadata !"__modeflags", metadata !2018, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2019} ; [ DW_TAG_member ]
!2018 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2005} ; [ DW_TAG_file_type ]
!2019 = metadata !{i32 589860, metadata !2004, metadata !"short unsigned int", metadata !2004, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2020 = metadata !{i32 589837, metadata !2015, metadata !"__ungot_width", metadata !2018, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2021} ; [ DW_TAG_member ]
!2021 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2022, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2022 = metadata !{i32 589860, metadata !2004, metadata !"unsigned char", metadata !2004, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2023 = metadata !{i32 589837, metadata !2015, metadata !"__filedes", metadata !2018, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2024} ; [ DW_TAG_member ]
!2024 = metadata !{i32 589860, metadata !2004, metadata !"int", metadata !2004, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2025 = metadata !{i32 589837, metadata !2015, metadata !"__bufstart", metadata !2018, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2026 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2022} ; [ DW_TAG_pointer_type ]
!2027 = metadata !{i32 589837, metadata !2015, metadata !"__bufend", metadata !2018, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2028 = metadata !{i32 589837, metadata !2015, metadata !"__bufpos", metadata !2018, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2029 = metadata !{i32 589837, metadata !2015, metadata !"__bufread", metadata !2018, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2030 = metadata !{i32 589837, metadata !2015, metadata !"__bufgetc_u", metadata !2018, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2031 = metadata !{i32 589837, metadata !2015, metadata !"__bufputc_u", metadata !2018, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2026} ; [ DW_TAG_member ]
!2032 = metadata !{i32 589837, metadata !2015, metadata !"__nextopen", metadata !2018, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2033} ; [ DW_TAG_member ]
!2033 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2015} ; [ DW_TAG_pointer_type ]
!2034 = metadata !{i32 589837, metadata !2015, metadata !"__ungot", metadata !2018, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2035} ; [ DW_TAG_member ]
!2035 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2036, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2036 = metadata !{i32 589846, metadata !2010, metadata !"wchar_t", metadata !2010, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2024} ; [ DW_TAG_typedef ]
!2037 = metadata !{i32 589837, metadata !2015, metadata !"__state", metadata !2018, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2038} ; [ DW_TAG_member ]
!2038 = metadata !{i32 589846, metadata !2039, metadata !"__mbstate_t", metadata !2039, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2040} ; [ DW_TAG_typedef ]
!2039 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2005} ; [ DW_TAG_file_type ]
!2040 = metadata !{i32 589843, metadata !2004, metadata !"", metadata !2039, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2041, i32 0, null} ; [ DW_TAG_structure_type ]
!2041 = metadata !{metadata !2042, metadata !2043}
!2042 = metadata !{i32 589837, metadata !2040, metadata !"__mask", metadata !2039, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2036} ; [ DW_TAG_member ]
!2043 = metadata !{i32 589837, metadata !2040, metadata !"__wc", metadata !2039, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2036} ; [ DW_TAG_member ]
!2044 = metadata !{i32 589846, metadata !2045, metadata !"intptr_t", metadata !2045, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !2046} ; [ DW_TAG_typedef ]
!2045 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2005} ; [ DW_TAG_file_type ]
!2046 = metadata !{i32 589860, metadata !2004, metadata !"long int", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2047 = metadata !{i32 589870, i32 0, metadata !2004, metadata !"_charpad", metadata !"_charpad", metadata !"", metadata !2006, i32 1423, metadata !2048, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i32, i64)* @_charpad} ; [ DW_TAG_
!2048 = metadata !{i32 589845, metadata !2004, metadata !"", metadata !2004, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2049, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2049 = metadata !{metadata !2009, metadata !2012, metadata !2024, metadata !2009}
!2050 = metadata !{i32 589870, i32 0, metadata !2004, metadata !"_do_one_spec", metadata !"_do_one_spec", metadata !"", metadata !2006, i32 1440, metadata !2051, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, %struct.ppfs_t*, i32*)* @
!2051 = metadata !{i32 589845, metadata !2004, metadata !"", metadata !2004, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2052, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2052 = metadata !{metadata !2024, metadata !2012, metadata !2053, metadata !2109}
!2053 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2054} ; [ DW_TAG_pointer_type ]
!2054 = metadata !{i32 589846, metadata !2006, metadata !"ppfs_t", metadata !2006, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2055} ; [ DW_TAG_typedef ]
!2055 = metadata !{i32 589843, metadata !2004, metadata !"", metadata !2006, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2056, i32 0, null} ; [ DW_TAG_structure_type ]
!2056 = metadata !{metadata !2057, metadata !2061, metadata !2071, metadata !2072, metadata !2073, metadata !2074, metadata !2076, metadata !2080, metadata !2094}
!2057 = metadata !{i32 589837, metadata !2055, metadata !"fmtpos", metadata !2006, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2058} ; [ DW_TAG_member ]
!2058 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2059} ; [ DW_TAG_pointer_type ]
!2059 = metadata !{i32 589862, metadata !2004, metadata !"", metadata !2004, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2060} ; [ DW_TAG_const_type ]
!2060 = metadata !{i32 589860, metadata !2004, metadata !"char", metadata !2004, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2061 = metadata !{i32 589837, metadata !2055, metadata !"info", metadata !2006, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2062} ; [ DW_TAG_member ]
!2062 = metadata !{i32 589843, metadata !2004, metadata !"printf_info", metadata !2063, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2064, i32 0, null} ; [ DW_TAG_structure_type ]
!2063 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2005} ; [ DW_TAG_file_type ]
!2064 = metadata !{metadata !2065, metadata !2066, metadata !2067, metadata !2068, metadata !2070}
!2065 = metadata !{i32 589837, metadata !2062, metadata !"prec", metadata !2063, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2024} ; [ DW_TAG_member ]
!2066 = metadata !{i32 589837, metadata !2062, metadata !"width", metadata !2063, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2024} ; [ DW_TAG_member ]
!2067 = metadata !{i32 589837, metadata !2062, metadata !"spec", metadata !2063, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2036} ; [ DW_TAG_member ]
!2068 = metadata !{i32 589837, metadata !2062, metadata !"_flags", metadata !2063, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2069} ; [ DW_TAG_member ]
!2069 = metadata !{i32 589860, metadata !2004, metadata !"unsigned int", metadata !2004, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2070 = metadata !{i32 589837, metadata !2062, metadata !"pad", metadata !2063, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2036} ; [ DW_TAG_member ]
!2071 = metadata !{i32 589837, metadata !2055, metadata !"maxposarg", metadata !2006, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2024} ; [ DW_TAG_member ]
!2072 = metadata !{i32 589837, metadata !2055, metadata !"num_data_args", metadata !2006, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2024} ; [ DW_TAG_member ]
!2073 = metadata !{i32 589837, metadata !2055, metadata !"conv_num", metadata !2006, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2069} ; [ DW_TAG_member ]
!2074 = metadata !{i32 589837, metadata !2055, metadata !"argnumber", metadata !2006, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2075} ; [ DW_TAG_member ]
!2075 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2022, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!2076 = metadata !{i32 589837, metadata !2055, metadata !"argtype", metadata !2006, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2077} ; [ DW_TAG_member ]
!2077 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2024, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2078 = metadata !{metadata !2079}
!2079 = metadata !{i32 589857, i64 0, i64 8}      ; [ DW_TAG_subrange_type ]
!2080 = metadata !{i32 589837, metadata !2055, metadata !"arg", metadata !2006, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2081} ; [ DW_TAG_member ]
!2081 = metadata !{i32 589846, metadata !2082, metadata !"va_list", metadata !2082, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2083} ; [ DW_TAG_typedef ]
!2082 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2005} ; [ DW_TAG_file_type ]
!2083 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2084, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!2084 = metadata !{i32 589843, metadata !2004, metadata !"__va_list_tag", metadata !2085, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2086, i32 0, null} ; [ DW_TAG_structure_type ]
!2085 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2005} ; [ DW_TAG_file_type ]
!2086 = metadata !{metadata !2087, metadata !2088, metadata !2089, metadata !2091}
!2087 = metadata !{i32 589837, metadata !2084, metadata !"gp_offset", metadata !2085, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2069} ; [ DW_TAG_member ]
!2088 = metadata !{i32 589837, metadata !2084, metadata !"fp_offset", metadata !2085, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2069} ; [ DW_TAG_member ]
!2089 = metadata !{i32 589837, metadata !2084, metadata !"overflow_arg_area", metadata !2085, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2090} ; [ DW_TAG_member ]
!2090 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2091 = metadata !{i32 589837, metadata !2084, metadata !"reg_save_area", metadata !2085, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2090} ; [ DW_TAG_member ]
!2092 = metadata !{metadata !2093}
!2093 = metadata !{i32 589857, i64 0, i64 0}      ; [ DW_TAG_subrange_type ]
!2094 = metadata !{i32 589837, metadata !2055, metadata !"argvalue", metadata !2006, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2095} ; [ DW_TAG_member ]
!2095 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2096, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2096 = metadata !{i32 589846, metadata !2006, metadata !"argvalue_t", metadata !2006, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2097} ; [ DW_TAG_typedef ]
!2097 = metadata !{i32 589847, metadata !2004, metadata !"", metadata !2006, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2098, i32 0, null} ; [ DW_TAG_union_type ]
!2098 = metadata !{metadata !2099, metadata !2100, metadata !2101, metadata !2102, metadata !2104, metadata !2106, metadata !2108}
!2099 = metadata !{i32 589837, metadata !2097, metadata !"wc", metadata !2006, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2036} ; [ DW_TAG_member ]
!2100 = metadata !{i32 589837, metadata !2097, metadata !"u", metadata !2006, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2069} ; [ DW_TAG_member ]
!2101 = metadata !{i32 589837, metadata !2097, metadata !"ul", metadata !2006, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2011} ; [ DW_TAG_member ]
!2102 = metadata !{i32 589837, metadata !2097, metadata !"ull", metadata !2006, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2103} ; [ DW_TAG_member ]
!2103 = metadata !{i32 589860, metadata !2004, metadata !"long long unsigned int", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2104 = metadata !{i32 589837, metadata !2097, metadata !"d", metadata !2006, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2105} ; [ DW_TAG_member ]
!2105 = metadata !{i32 589860, metadata !2004, metadata !"double", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2106 = metadata !{i32 589837, metadata !2097, metadata !"ld", metadata !2006, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2107} ; [ DW_TAG_member ]
!2107 = metadata !{i32 589860, metadata !2004, metadata !"long double", metadata !2004, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2108 = metadata !{i32 589837, metadata !2097, metadata !"p", metadata !2006, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2090} ; [ DW_TAG_member ]
!2109 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2024} ; [ DW_TAG_pointer_type ]
!2110 = metadata !{i32 589870, i32 0, metadata !2004, metadata !"vfprintf", metadata !"vfprintf", metadata !"vfprintf", metadata !2006, i32 1867, metadata !2111, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_t
!2111 = metadata !{i32 589845, metadata !2004, metadata !"", metadata !2004, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2112, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2112 = metadata !{metadata !2024, metadata !2012, metadata !2058, metadata !2113}
!2113 = metadata !{i32 589839, metadata !2004, metadata !"", metadata !2004, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2084} ; [ DW_TAG_pointer_type ]
!2114 = metadata !{i32 589870, i32 0, metadata !2115, metadata !"vsnprintf", metadata !"vsnprintf", metadata !"vsnprintf", metadata !2115, i32 23, metadata !2117, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i64, i8*, %struct.__va_
!2115 = metadata !{i32 589865, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2116} ; [ DW_TAG_file_type ]
!2116 = metadata !{i32 589841, i32 0, i32 1, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2117 = metadata !{i32 589845, metadata !2115, metadata !"", metadata !2115, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2118, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2118 = metadata !{metadata !2119, metadata !2120, metadata !2122, metadata !2125, metadata !2127}
!2119 = metadata !{i32 589860, metadata !2115, metadata !"int", metadata !2115, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2120 = metadata !{i32 589839, metadata !2115, metadata !"", metadata !2115, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2121} ; [ DW_TAG_pointer_type ]
!2121 = metadata !{i32 589860, metadata !2115, metadata !"char", metadata !2115, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2122 = metadata !{i32 589846, metadata !2123, metadata !"size_t", metadata !2123, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2124} ; [ DW_TAG_typedef ]
!2123 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2116} ; [ DW_TAG_file_type ]
!2124 = metadata !{i32 589860, metadata !2115, metadata !"long unsigned int", metadata !2115, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2125 = metadata !{i32 589839, metadata !2115, metadata !"", metadata !2115, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2126} ; [ DW_TAG_pointer_type ]
!2126 = metadata !{i32 589862, metadata !2115, metadata !"", metadata !2115, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2121} ; [ DW_TAG_const_type ]
!2127 = metadata !{i32 589839, metadata !2115, metadata !"", metadata !2115, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2128} ; [ DW_TAG_pointer_type ]
!2128 = metadata !{i32 589843, metadata !2115, metadata !"__va_list_tag", metadata !2129, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2130, i32 0, null} ; [ DW_TAG_structure_type ]
!2129 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2116} ; [ DW_TAG_file_type ]
!2130 = metadata !{metadata !2131, metadata !2133, metadata !2134, metadata !2136}
!2131 = metadata !{i32 589837, metadata !2128, metadata !"gp_offset", metadata !2129, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2132} ; [ DW_TAG_member ]
!2132 = metadata !{i32 589860, metadata !2115, metadata !"unsigned int", metadata !2115, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2133 = metadata !{i32 589837, metadata !2128, metadata !"fp_offset", metadata !2129, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2132} ; [ DW_TAG_member ]
!2134 = metadata !{i32 589837, metadata !2128, metadata !"overflow_arg_area", metadata !2129, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2135} ; [ DW_TAG_member ]
!2135 = metadata !{i32 589839, metadata !2115, metadata !"", metadata !2115, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2136 = metadata !{i32 589837, metadata !2128, metadata !"reg_save_area", metadata !2129, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2135} ; [ DW_TAG_member ]
!2137 = metadata !{i32 589870, i32 0, metadata !2138, metadata !"vsscanf", metadata !"vsscanf", metadata !"vsscanf", metadata !2140, i32 247, metadata !2141, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, %struct.__va_list_tag*)
!2138 = metadata !{i32 589865, metadata !"vsscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2139} ; [ DW_TAG_file_type ]
!2139 = metadata !{i32 589841, i32 0, i32 1, metadata !"vsscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2140 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2139} ; [ DW_TAG_file_type ]
!2141 = metadata !{i32 589845, metadata !2138, metadata !"", metadata !2138, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2142, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2142 = metadata !{metadata !2143, metadata !2144, metadata !2144, metadata !2147}
!2143 = metadata !{i32 589860, metadata !2138, metadata !"int", metadata !2138, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2144 = metadata !{i32 589839, metadata !2138, metadata !"", metadata !2138, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2145} ; [ DW_TAG_pointer_type ]
!2145 = metadata !{i32 589862, metadata !2138, metadata !"", metadata !2138, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2146} ; [ DW_TAG_const_type ]
!2146 = metadata !{i32 589860, metadata !2138, metadata !"char", metadata !2138, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2147 = metadata !{i32 589839, metadata !2138, metadata !"", metadata !2138, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2148} ; [ DW_TAG_pointer_type ]
!2148 = metadata !{i32 589843, metadata !2138, metadata !"__va_list_tag", metadata !2149, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2150, i32 0, null} ; [ DW_TAG_structure_type ]
!2149 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2139} ; [ DW_TAG_file_type ]
!2150 = metadata !{metadata !2151, metadata !2153, metadata !2154, metadata !2156}
!2151 = metadata !{i32 589837, metadata !2148, metadata !"gp_offset", metadata !2149, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2152} ; [ DW_TAG_member ]
!2152 = metadata !{i32 589860, metadata !2138, metadata !"unsigned int", metadata !2138, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2153 = metadata !{i32 589837, metadata !2148, metadata !"fp_offset", metadata !2149, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2152} ; [ DW_TAG_member ]
!2154 = metadata !{i32 589837, metadata !2148, metadata !"overflow_arg_area", metadata !2149, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2155} ; [ DW_TAG_member ]
!2155 = metadata !{i32 589839, metadata !2138, metadata !"", metadata !2138, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2156 = metadata !{i32 589837, metadata !2148, metadata !"reg_save_area", metadata !2149, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2155} ; [ DW_TAG_member ]
!2157 = metadata !{i32 589870, i32 0, metadata !2158, metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !2160, i32 394, metadata !2161, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, %struct.__
!2158 = metadata !{i32 589865, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2159} ; [ DW_TAG_file_type ]
!2159 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2160 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2159} ; [ DW_TAG_file_type ]
!2161 = metadata !{i32 589845, metadata !2158, metadata !"", metadata !2158, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2162, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2162 = metadata !{metadata !2163, metadata !2166, metadata !2168, metadata !2163, metadata !2172}
!2163 = metadata !{i32 589846, metadata !2164, metadata !"size_t", metadata !2164, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2165} ; [ DW_TAG_typedef ]
!2164 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2159} ; [ DW_TAG_file_type ]
!2165 = metadata !{i32 589860, metadata !2158, metadata !"long unsigned int", metadata !2158, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2166 = metadata !{i32 589839, metadata !2158, metadata !"", metadata !2158, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2167} ; [ DW_TAG_pointer_type ]
!2167 = metadata !{i32 589860, metadata !2158, metadata !"char", metadata !2158, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2168 = metadata !{i32 589839, metadata !2158, metadata !"", metadata !2158, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2169} ; [ DW_TAG_pointer_type ]
!2169 = metadata !{i32 589839, metadata !2158, metadata !"", metadata !2158, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2170} ; [ DW_TAG_pointer_type ]
!2170 = metadata !{i32 589846, metadata !2164, metadata !"wchar_t", metadata !2164, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2171} ; [ DW_TAG_typedef ]
!2171 = metadata !{i32 589860, metadata !2158, metadata !"int", metadata !2158, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2172 = metadata !{i32 589839, metadata !2158, metadata !"", metadata !2158, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2173} ; [ DW_TAG_pointer_type ]
!2173 = metadata !{i32 589846, metadata !2174, metadata !"mbstate_t", metadata !2174, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2175} ; [ DW_TAG_typedef ]
!2174 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2159} ; [ DW_TAG_file_type ]
!2175 = metadata !{i32 589843, metadata !2158, metadata !"", metadata !2174, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2176, i32 0, null} ; [ DW_TAG_structure_type ]
!2176 = metadata !{metadata !2177, metadata !2178}
!2177 = metadata !{i32 589837, metadata !2175, metadata !"__mask", metadata !2174, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2170} ; [ DW_TAG_member ]
!2178 = metadata !{i32 589837, metadata !2175, metadata !"__wc", metadata !2174, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2170} ; [ DW_TAG_member ]
!2179 = metadata !{i32 589870, i32 0, metadata !2180, metadata !"_store_inttype", metadata !"_store_inttype", metadata !"_store_inttype", metadata !2180, i32 33, metadata !2182, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i32, i6
!2180 = metadata !{i32 589865, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2181} ; [ DW_TAG_file_type ]
!2181 = metadata !{i32 589841, i32 0, i32 1, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2182 = metadata !{i32 589845, metadata !2180, metadata !"", metadata !2180, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2183, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2183 = metadata !{null, metadata !2184, metadata !2185, metadata !2186}
!2184 = metadata !{i32 589839, metadata !2180, metadata !"", metadata !2180, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2185 = metadata !{i32 589860, metadata !2180, metadata !"int", metadata !2180, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2186 = metadata !{i32 589846, metadata !2187, metadata !"uintmax_t", metadata !2187, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2188} ; [ DW_TAG_typedef ]
!2187 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2181} ; [ DW_TAG_file_type ]
!2188 = metadata !{i32 589860, metadata !2180, metadata !"long unsigned int", metadata !2180, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2189 = metadata !{i32 589870, i32 0, metadata !2190, metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !2190, i32 166, metadata !2192, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i
!2190 = metadata !{i32 589865, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2191} ; [ DW_TAG_file_type ]
!2191 = metadata !{i32 589841, i32 0, i32 1, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2192 = metadata !{i32 589845, metadata !2190, metadata !"", metadata !2190, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2193, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2193 = metadata !{metadata !2194, metadata !2194, metadata !2195, metadata !2197}
!2194 = metadata !{i32 589860, metadata !2190, metadata !"int", metadata !2190, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2195 = metadata !{i32 589839, metadata !2190, metadata !"", metadata !2190, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2196} ; [ DW_TAG_pointer_type ]
!2196 = metadata !{i32 589860, metadata !2190, metadata !"char", metadata !2190, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2197 = metadata !{i32 589846, metadata !2198, metadata !"size_t", metadata !2198, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2199} ; [ DW_TAG_typedef ]
!2198 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2191} ; [ DW_TAG_file_type ]
!2199 = metadata !{i32 589860, metadata !2190, metadata !"long unsigned int", metadata !2190, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2200 = metadata !{i32 589870, i32 0, metadata !2201, metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !2201, i32 21, metadata !2203, i1 false, i1 true, i32 0, i32 0, null, i32 256, i
!2201 = metadata !{i32 589865, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2202} ; [ DW_TAG_file_type ]
!2202 = metadata !{i32 589841, i32 0, i32 1, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2203 = metadata !{i32 589845, metadata !2201, metadata !"", metadata !2201, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2204, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2204 = metadata !{metadata !2205, metadata !2206, metadata !2238}
!2205 = metadata !{i32 589860, metadata !2201, metadata !"int", metadata !2201, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2206 = metadata !{i32 589839, metadata !2201, metadata !"", metadata !2201, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2207} ; [ DW_TAG_pointer_type ]
!2207 = metadata !{i32 589846, metadata !2208, metadata !"FILE", metadata !2208, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2209} ; [ DW_TAG_typedef ]
!2208 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2202} ; [ DW_TAG_file_type ]
!2209 = metadata !{i32 589843, metadata !2201, metadata !"__STDIO_FILE_STRUCT", metadata !2208, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2210, i32 0, null} ; [ DW_TAG_structure_type ]
!2210 = metadata !{metadata !2211, metadata !2214, metadata !2217, metadata !2218, metadata !2220, metadata !2221, metadata !2222, metadata !2223, metadata !2224, metadata !2225, metadata !2227, metadata !2231}
!2211 = metadata !{i32 589837, metadata !2209, metadata !"__modeflags", metadata !2212, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2213} ; [ DW_TAG_member ]
!2212 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2202} ; [ DW_TAG_file_type ]
!2213 = metadata !{i32 589860, metadata !2201, metadata !"short unsigned int", metadata !2201, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2214 = metadata !{i32 589837, metadata !2209, metadata !"__ungot_width", metadata !2212, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2215} ; [ DW_TAG_member ]
!2215 = metadata !{i32 589825, metadata !2201, metadata !"", metadata !2201, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2216, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2216 = metadata !{i32 589860, metadata !2201, metadata !"unsigned char", metadata !2201, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2217 = metadata !{i32 589837, metadata !2209, metadata !"__filedes", metadata !2212, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2205} ; [ DW_TAG_member ]
!2218 = metadata !{i32 589837, metadata !2209, metadata !"__bufstart", metadata !2212, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2219 = metadata !{i32 589839, metadata !2201, metadata !"", metadata !2201, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2216} ; [ DW_TAG_pointer_type ]
!2220 = metadata !{i32 589837, metadata !2209, metadata !"__bufend", metadata !2212, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2221 = metadata !{i32 589837, metadata !2209, metadata !"__bufpos", metadata !2212, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2222 = metadata !{i32 589837, metadata !2209, metadata !"__bufread", metadata !2212, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2223 = metadata !{i32 589837, metadata !2209, metadata !"__bufgetc_u", metadata !2212, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2224 = metadata !{i32 589837, metadata !2209, metadata !"__bufputc_u", metadata !2212, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2219} ; [ DW_TAG_member ]
!2225 = metadata !{i32 589837, metadata !2209, metadata !"__nextopen", metadata !2212, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2226} ; [ DW_TAG_member ]
!2226 = metadata !{i32 589839, metadata !2201, metadata !"", metadata !2201, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2209} ; [ DW_TAG_pointer_type ]
!2227 = metadata !{i32 589837, metadata !2209, metadata !"__ungot", metadata !2212, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2228} ; [ DW_TAG_member ]
!2228 = metadata !{i32 589825, metadata !2201, metadata !"", metadata !2201, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2229, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2229 = metadata !{i32 589846, metadata !2230, metadata !"wchar_t", metadata !2230, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2205} ; [ DW_TAG_typedef ]
!2230 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2202} ; [ DW_TAG_file_type ]
!2231 = metadata !{i32 589837, metadata !2209, metadata !"__state", metadata !2212, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2232} ; [ DW_TAG_member ]
!2232 = metadata !{i32 589846, metadata !2233, metadata !"__mbstate_t", metadata !2233, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2234} ; [ DW_TAG_typedef ]
!2233 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2202} ; [ DW_TAG_file_type ]
!2234 = metadata !{i32 589843, metadata !2201, metadata !"", metadata !2233, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2235, i32 0, null} ; [ DW_TAG_structure_type ]
!2235 = metadata !{metadata !2236, metadata !2237}
!2236 = metadata !{i32 589837, metadata !2234, metadata !"__mask", metadata !2233, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2229} ; [ DW_TAG_member ]
!2237 = metadata !{i32 589837, metadata !2234, metadata !"__wc", metadata !2233, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2229} ; [ DW_TAG_member ]
!2238 = metadata !{i32 589839, metadata !2201, metadata !"", metadata !2201, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2239} ; [ DW_TAG_pointer_type ]
!2239 = metadata !{i32 589846, metadata !2212, metadata !"__offmax_t", metadata !2212, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2240} ; [ DW_TAG_typedef ]
!2240 = metadata !{i32 589860, metadata !2201, metadata !"long int", metadata !2201, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2241 = metadata !{i32 589870, i32 0, metadata !2242, metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !2244, i32 239, metadata !2245, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.exit_function* 
!2242 = metadata !{i32 589865, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2243} ; [ DW_TAG_file_type ]
!2243 = metadata !{i32 589841, i32 0, i32 1, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2244 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2243} ; [ DW_TAG_file_type ]
!2245 = metadata !{i32 589845, metadata !2242, metadata !"", metadata !2242, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2246, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2246 = metadata !{metadata !2247}
!2247 = metadata !{i32 589839, metadata !2242, metadata !"", metadata !2242, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2248} ; [ DW_TAG_pointer_type ]
!2248 = metadata !{i32 589843, metadata !2242, metadata !"exit_function", metadata !2244, i32 70, i64 256, i64 64, i64 0, i32 0, null, metadata !2249, i32 0, null} ; [ DW_TAG_structure_type ]
!2249 = metadata !{metadata !2250, metadata !2252}
!2250 = metadata !{i32 589837, metadata !2248, metadata !"type", metadata !2244, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !2251} ; [ DW_TAG_member ]
!2251 = metadata !{i32 589860, metadata !2242, metadata !"long int", metadata !2242, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2252 = metadata !{i32 589837, metadata !2248, metadata !"funcs", metadata !2244, i32 86, i64 192, i64 64, i64 64, i32 0, metadata !2253} ; [ DW_TAG_member ]
!2253 = metadata !{i32 589847, metadata !2242, metadata !"", metadata !2244, i32 76, i64 192, i64 64, i64 0, i32 0, null, metadata !2254, i32 0, null} ; [ DW_TAG_union_type ]
!2254 = metadata !{metadata !2255, metadata !2266}
!2255 = metadata !{i32 589837, metadata !2253, metadata !"on_exit", metadata !2244, i32 80, i64 128, i64 64, i64 0, i32 0, metadata !2256} ; [ DW_TAG_member ]
!2256 = metadata !{i32 589843, metadata !2242, metadata !"", metadata !2244, i32 77, i64 128, i64 64, i64 0, i32 0, null, metadata !2257, i32 0, null} ; [ DW_TAG_structure_type ]
!2257 = metadata !{metadata !2258, metadata !2265}
!2258 = metadata !{i32 589837, metadata !2256, metadata !"func", metadata !2244, i32 78, i64 64, i64 64, i64 0, i32 0, metadata !2259} ; [ DW_TAG_member ]
!2259 = metadata !{i32 589846, metadata !2244, metadata !"oefuncp", metadata !2244, i32 54, i64 0, i64 0, i64 0, i32 0, metadata !2260} ; [ DW_TAG_typedef ]
!2260 = metadata !{i32 589839, metadata !2242, metadata !"", metadata !2242, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2261} ; [ DW_TAG_pointer_type ]
!2261 = metadata !{i32 589845, metadata !2242, metadata !"", metadata !2242, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2262, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2262 = metadata !{null, metadata !2263, metadata !2264}
!2263 = metadata !{i32 589860, metadata !2242, metadata !"int", metadata !2242, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2264 = metadata !{i32 589839, metadata !2242, metadata !"", metadata !2242, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2265 = metadata !{i32 589837, metadata !2256, metadata !"arg", metadata !2244, i32 79, i64 64, i64 64, i64 64, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2266 = metadata !{i32 589837, metadata !2253, metadata !"cxa_atexit", metadata !2244, i32 85, i64 192, i64 64, i64 0, i32 0, metadata !2267} ; [ DW_TAG_member ]
!2267 = metadata !{i32 589843, metadata !2242, metadata !"", metadata !2244, i32 81, i64 192, i64 64, i64 0, i32 0, null, metadata !2268, i32 0, null} ; [ DW_TAG_structure_type ]
!2268 = metadata !{metadata !2269, metadata !2274, metadata !2275}
!2269 = metadata !{i32 589837, metadata !2267, metadata !"func", metadata !2244, i32 82, i64 64, i64 64, i64 0, i32 0, metadata !2270} ; [ DW_TAG_member ]
!2270 = metadata !{i32 589846, metadata !2244, metadata !"cxaefuncp", metadata !2244, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !2271} ; [ DW_TAG_typedef ]
!2271 = metadata !{i32 589839, metadata !2242, metadata !"", metadata !2242, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2272} ; [ DW_TAG_pointer_type ]
!2272 = metadata !{i32 589845, metadata !2242, metadata !"", metadata !2242, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2273, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2273 = metadata !{null, metadata !2264}
!2274 = metadata !{i32 589837, metadata !2267, metadata !"arg", metadata !2244, i32 83, i64 64, i64 64, i64 64, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2275 = metadata !{i32 589837, metadata !2267, metadata !"dso_handle", metadata !2244, i32 84, i64 64, i64 64, i64 128, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2276 = metadata !{i32 589870, i32 0, metadata !2242, metadata !"__exit_handler", metadata !"__exit_handler", metadata !"__exit_handler", metadata !2244, i32 279, metadata !2277, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @__ex
!2277 = metadata !{i32 589845, metadata !2242, metadata !"", metadata !2242, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2278, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2278 = metadata !{null, metadata !2263}
!2279 = metadata !{i32 589870, i32 0, metadata !2280, metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !2280, i32 62, metadata !2282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64*, i32)* @_
!2280 = metadata !{i32 589865, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2281} ; [ DW_TAG_file_type ]
!2281 = metadata !{i32 589841, i32 0, i32 1, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2282 = metadata !{i32 589845, metadata !2280, metadata !"", metadata !2280, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2283, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2283 = metadata !{metadata !2284, metadata !2285, metadata !2317, metadata !2284}
!2284 = metadata !{i32 589860, metadata !2280, metadata !"int", metadata !2280, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2285 = metadata !{i32 589839, metadata !2280, metadata !"", metadata !2280, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2286} ; [ DW_TAG_pointer_type ]
!2286 = metadata !{i32 589846, metadata !2287, metadata !"FILE", metadata !2287, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2288} ; [ DW_TAG_typedef ]
!2287 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2281} ; [ DW_TAG_file_type ]
!2288 = metadata !{i32 589843, metadata !2280, metadata !"__STDIO_FILE_STRUCT", metadata !2287, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2289, i32 0, null} ; [ DW_TAG_structure_type ]
!2289 = metadata !{metadata !2290, metadata !2293, metadata !2296, metadata !2297, metadata !2299, metadata !2300, metadata !2301, metadata !2302, metadata !2303, metadata !2304, metadata !2306, metadata !2310}
!2290 = metadata !{i32 589837, metadata !2288, metadata !"__modeflags", metadata !2291, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2292} ; [ DW_TAG_member ]
!2291 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2281} ; [ DW_TAG_file_type ]
!2292 = metadata !{i32 589860, metadata !2280, metadata !"short unsigned int", metadata !2280, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2293 = metadata !{i32 589837, metadata !2288, metadata !"__ungot_width", metadata !2291, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2294} ; [ DW_TAG_member ]
!2294 = metadata !{i32 589825, metadata !2280, metadata !"", metadata !2280, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2295, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2295 = metadata !{i32 589860, metadata !2280, metadata !"unsigned char", metadata !2280, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2296 = metadata !{i32 589837, metadata !2288, metadata !"__filedes", metadata !2291, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2284} ; [ DW_TAG_member ]
!2297 = metadata !{i32 589837, metadata !2288, metadata !"__bufstart", metadata !2291, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2298 = metadata !{i32 589839, metadata !2280, metadata !"", metadata !2280, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2295} ; [ DW_TAG_pointer_type ]
!2299 = metadata !{i32 589837, metadata !2288, metadata !"__bufend", metadata !2291, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2300 = metadata !{i32 589837, metadata !2288, metadata !"__bufpos", metadata !2291, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2301 = metadata !{i32 589837, metadata !2288, metadata !"__bufread", metadata !2291, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2302 = metadata !{i32 589837, metadata !2288, metadata !"__bufgetc_u", metadata !2291, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2303 = metadata !{i32 589837, metadata !2288, metadata !"__bufputc_u", metadata !2291, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2304 = metadata !{i32 589837, metadata !2288, metadata !"__nextopen", metadata !2291, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2305} ; [ DW_TAG_member ]
!2305 = metadata !{i32 589839, metadata !2280, metadata !"", metadata !2280, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2288} ; [ DW_TAG_pointer_type ]
!2306 = metadata !{i32 589837, metadata !2288, metadata !"__ungot", metadata !2291, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2307} ; [ DW_TAG_member ]
!2307 = metadata !{i32 589825, metadata !2280, metadata !"", metadata !2280, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2308, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2308 = metadata !{i32 589846, metadata !2309, metadata !"wchar_t", metadata !2309, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2284} ; [ DW_TAG_typedef ]
!2309 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2281} ; [ DW_TAG_file_type ]
!2310 = metadata !{i32 589837, metadata !2288, metadata !"__state", metadata !2291, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2311} ; [ DW_TAG_member ]
!2311 = metadata !{i32 589846, metadata !2312, metadata !"__mbstate_t", metadata !2312, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2313} ; [ DW_TAG_typedef ]
!2312 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2281} ; [ DW_TAG_file_type ]
!2313 = metadata !{i32 589843, metadata !2280, metadata !"", metadata !2312, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2314, i32 0, null} ; [ DW_TAG_structure_type ]
!2314 = metadata !{metadata !2315, metadata !2316}
!2315 = metadata !{i32 589837, metadata !2313, metadata !"__mask", metadata !2312, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2308} ; [ DW_TAG_member ]
!2316 = metadata !{i32 589837, metadata !2313, metadata !"__wc", metadata !2312, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2308} ; [ DW_TAG_member ]
!2317 = metadata !{i32 589839, metadata !2280, metadata !"", metadata !2280, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2318} ; [ DW_TAG_pointer_type ]
!2318 = metadata !{i32 589846, metadata !2291, metadata !"__offmax_t", metadata !2291, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2319} ; [ DW_TAG_typedef ]
!2319 = metadata !{i32 589860, metadata !2280, metadata !"long int", metadata !2280, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2320 = metadata !{i32 589870, i32 0, metadata !2321, metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !2321, i32 207, metadata !2323, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, x86_fp80, %struc
!2321 = metadata !{i32 589865, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2322} ; [ DW_TAG_file_type ]
!2322 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2323 = metadata !{i32 589845, metadata !2321, metadata !"", metadata !2321, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2324, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2324 = metadata !{metadata !2325, metadata !2328, metadata !2361, metadata !2364, metadata !2386}
!2325 = metadata !{i32 589846, metadata !2326, metadata !"ssize_t", metadata !2326, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !2327} ; [ DW_TAG_typedef ]
!2326 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !2322} ; [ DW_TAG_file_type ]
!2327 = metadata !{i32 589860, metadata !2321, metadata !"long int", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2328 = metadata !{i32 589839, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2329} ; [ DW_TAG_pointer_type ]
!2329 = metadata !{i32 589846, metadata !2330, metadata !"FILE", metadata !2330, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2331} ; [ DW_TAG_typedef ]
!2330 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2322} ; [ DW_TAG_file_type ]
!2331 = metadata !{i32 589843, metadata !2321, metadata !"__STDIO_FILE_STRUCT", metadata !2330, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2332, i32 0, null} ; [ DW_TAG_structure_type ]
!2332 = metadata !{metadata !2333, metadata !2336, metadata !2339, metadata !2341, metadata !2343, metadata !2344, metadata !2345, metadata !2346, metadata !2347, metadata !2348, metadata !2350, metadata !2354}
!2333 = metadata !{i32 589837, metadata !2331, metadata !"__modeflags", metadata !2334, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2335} ; [ DW_TAG_member ]
!2334 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2322} ; [ DW_TAG_file_type ]
!2335 = metadata !{i32 589860, metadata !2321, metadata !"short unsigned int", metadata !2321, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2336 = metadata !{i32 589837, metadata !2331, metadata !"__ungot_width", metadata !2334, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2337} ; [ DW_TAG_member ]
!2337 = metadata !{i32 589825, metadata !2321, metadata !"", metadata !2321, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2338, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2338 = metadata !{i32 589860, metadata !2321, metadata !"unsigned char", metadata !2321, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2339 = metadata !{i32 589837, metadata !2331, metadata !"__filedes", metadata !2334, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2340} ; [ DW_TAG_member ]
!2340 = metadata !{i32 589860, metadata !2321, metadata !"int", metadata !2321, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2341 = metadata !{i32 589837, metadata !2331, metadata !"__bufstart", metadata !2334, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2342 = metadata !{i32 589839, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2338} ; [ DW_TAG_pointer_type ]
!2343 = metadata !{i32 589837, metadata !2331, metadata !"__bufend", metadata !2334, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2344 = metadata !{i32 589837, metadata !2331, metadata !"__bufpos", metadata !2334, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2345 = metadata !{i32 589837, metadata !2331, metadata !"__bufread", metadata !2334, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2346 = metadata !{i32 589837, metadata !2331, metadata !"__bufgetc_u", metadata !2334, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2347 = metadata !{i32 589837, metadata !2331, metadata !"__bufputc_u", metadata !2334, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2348 = metadata !{i32 589837, metadata !2331, metadata !"__nextopen", metadata !2334, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2349} ; [ DW_TAG_member ]
!2349 = metadata !{i32 589839, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2331} ; [ DW_TAG_pointer_type ]
!2350 = metadata !{i32 589837, metadata !2331, metadata !"__ungot", metadata !2334, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2351} ; [ DW_TAG_member ]
!2351 = metadata !{i32 589825, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2352, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2352 = metadata !{i32 589846, metadata !2353, metadata !"wchar_t", metadata !2353, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2340} ; [ DW_TAG_typedef ]
!2353 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2322} ; [ DW_TAG_file_type ]
!2354 = metadata !{i32 589837, metadata !2331, metadata !"__state", metadata !2334, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2355} ; [ DW_TAG_member ]
!2355 = metadata !{i32 589846, metadata !2356, metadata !"__mbstate_t", metadata !2356, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2357} ; [ DW_TAG_typedef ]
!2356 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2322} ; [ DW_TAG_file_type ]
!2357 = metadata !{i32 589843, metadata !2321, metadata !"", metadata !2356, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2358, i32 0, null} ; [ DW_TAG_structure_type ]
!2358 = metadata !{metadata !2359, metadata !2360}
!2359 = metadata !{i32 589837, metadata !2357, metadata !"__mask", metadata !2356, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2352} ; [ DW_TAG_member ]
!2360 = metadata !{i32 589837, metadata !2357, metadata !"__wc", metadata !2356, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2352} ; [ DW_TAG_member ]
!2361 = metadata !{i32 589846, metadata !2362, metadata !"__fpmax_t", metadata !2362, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2363} ; [ DW_TAG_typedef ]
!2362 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2322} ; [ DW_TAG_file_type ]
!2363 = metadata !{i32 589860, metadata !2321, metadata !"long double", metadata !2321, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2364 = metadata !{i32 589839, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2365} ; [ DW_TAG_pointer_type ]
!2365 = metadata !{i32 589843, metadata !2321, metadata !"printf_info", metadata !2366, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2367, i32 0, null} ; [ DW_TAG_structure_type ]
!2366 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2322} ; [ DW_TAG_file_type ]
!2367 = metadata !{metadata !2368, metadata !2369, metadata !2370, metadata !2371, metadata !2373, metadata !2374, metadata !2375, metadata !2376, metadata !2377, metadata !2378, metadata !2379, metadata !2380, metadata !2381, metadata !2382, metadata !2
!2368 = metadata !{i32 589837, metadata !2365, metadata !"prec", metadata !2366, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2340} ; [ DW_TAG_member ]
!2369 = metadata !{i32 589837, metadata !2365, metadata !"width", metadata !2366, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2340} ; [ DW_TAG_member ]
!2370 = metadata !{i32 589837, metadata !2365, metadata !"spec", metadata !2366, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2352} ; [ DW_TAG_member ]
!2371 = metadata !{i32 589837, metadata !2365, metadata !"space", metadata !2366, i32 66, i64 1, i64 32, i64 96, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2372 = metadata !{i32 589860, metadata !2321, metadata !"unsigned int", metadata !2321, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2373 = metadata !{i32 589837, metadata !2365, metadata !"showsign", metadata !2366, i32 67, i64 1, i64 32, i64 97, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2374 = metadata !{i32 589837, metadata !2365, metadata !"extra", metadata !2366, i32 68, i64 1, i64 32, i64 98, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2375 = metadata !{i32 589837, metadata !2365, metadata !"left", metadata !2366, i32 69, i64 1, i64 32, i64 99, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2376 = metadata !{i32 589837, metadata !2365, metadata !"alt", metadata !2366, i32 70, i64 1, i64 32, i64 100, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2377 = metadata !{i32 589837, metadata !2365, metadata !"group", metadata !2366, i32 71, i64 1, i64 32, i64 101, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2378 = metadata !{i32 589837, metadata !2365, metadata !"i18n", metadata !2366, i32 72, i64 1, i64 32, i64 102, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2379 = metadata !{i32 589837, metadata !2365, metadata !"wide", metadata !2366, i32 73, i64 1, i64 32, i64 103, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2380 = metadata !{i32 589837, metadata !2365, metadata !"is_char", metadata !2366, i32 74, i64 1, i64 32, i64 104, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2381 = metadata !{i32 589837, metadata !2365, metadata !"is_short", metadata !2366, i32 75, i64 1, i64 32, i64 105, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2382 = metadata !{i32 589837, metadata !2365, metadata !"is_long", metadata !2366, i32 76, i64 1, i64 32, i64 106, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2383 = metadata !{i32 589837, metadata !2365, metadata !"is_long_double", metadata !2366, i32 77, i64 1, i64 32, i64 107, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2384 = metadata !{i32 589837, metadata !2365, metadata !"__padding", metadata !2366, i32 78, i64 20, i64 32, i64 108, i32 0, metadata !2372} ; [ DW_TAG_member ]
!2385 = metadata !{i32 589837, metadata !2365, metadata !"pad", metadata !2366, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2352} ; [ DW_TAG_member ]
!2386 = metadata !{i32 589839, metadata !2321, metadata !"", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2387} ; [ DW_TAG_pointer_type ]
!2387 = metadata !{i32 589846, metadata !2321, metadata !"__fp_outfunc_t", metadata !2321, i32 17, i64 0, i64 0, i64 0, i32 0, metadata !2388} ; [ DW_TAG_typedef ]
!2388 = metadata !{i32 589845, metadata !2321, metadata !"", metadata !2321, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2389, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2389 = metadata !{metadata !2390, metadata !2328, metadata !2392, metadata !2392, metadata !2392}
!2390 = metadata !{i32 589846, metadata !2353, metadata !"size_t", metadata !2353, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2391} ; [ DW_TAG_typedef ]
!2391 = metadata !{i32 589860, metadata !2321, metadata !"long unsigned int", metadata !2321, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2392 = metadata !{i32 589846, metadata !2393, metadata !"intptr_t", metadata !2393, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !2327} ; [ DW_TAG_typedef ]
!2393 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2322} ; [ DW_TAG_file_type ]
!2394 = metadata !{i32 589870, i32 0, metadata !2395, metadata !"_load_inttype", metadata !"_load_inttype", metadata !"_load_inttype", metadata !2395, i32 13, metadata !2397, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i8*, i32)* 
!2395 = metadata !{i32 589865, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2396} ; [ DW_TAG_file_type ]
!2396 = metadata !{i32 589841, i32 0, i32 1, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2397 = metadata !{i32 589845, metadata !2395, metadata !"", metadata !2395, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2398, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2398 = metadata !{metadata !2399, metadata !2402, metadata !2403, metadata !2402}
!2399 = metadata !{i32 589846, metadata !2400, metadata !"uintmax_t", metadata !2400, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2401} ; [ DW_TAG_typedef ]
!2400 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2396} ; [ DW_TAG_file_type ]
!2401 = metadata !{i32 589860, metadata !2395, metadata !"long unsigned int", metadata !2395, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2402 = metadata !{i32 589860, metadata !2395, metadata !"int", metadata !2395, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2403 = metadata !{i32 589839, metadata !2395, metadata !"", metadata !2395, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2404 = metadata !{i32 589870, i32 0, metadata !2405, metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !2407, i32 516, metadata !2408, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.ppfs_t*, i8*)* @
!2405 = metadata !{i32 589865, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2406} ; [ DW_TAG_file_type ]
!2406 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!2407 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2406} ; [ DW_TAG_file_type ]
!2408 = metadata !{i32 589845, metadata !2405, metadata !"", metadata !2405, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2409, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2409 = metadata !{metadata !2410, metadata !2411, metadata !2416}
!2410 = metadata !{i32 589860, metadata !2405, metadata !"int", metadata !2405, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2411 = metadata !{i32 589839, metadata !2405, metadata !"", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2412} ; [ DW_TAG_pointer_type ]
!2412 = metadata !{i32 589846, metadata !2407, metadata !"ppfs_t", metadata !2407, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2413} ; [ DW_TAG_typedef ]
!2413 = metadata !{i32 589843, metadata !2405, metadata !"", metadata !2407, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2414, i32 0, null} ; [ DW_TAG_structure_type ]
!2414 = metadata !{metadata !2415, metadata !2419, metadata !2431, metadata !2432, metadata !2433, metadata !2434, metadata !2437, metadata !2439, metadata !2451}
!2415 = metadata !{i32 589837, metadata !2413, metadata !"fmtpos", metadata !2407, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2416 = metadata !{i32 589839, metadata !2405, metadata !"", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2417} ; [ DW_TAG_pointer_type ]
!2417 = metadata !{i32 589862, metadata !2405, metadata !"", metadata !2405, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2418} ; [ DW_TAG_const_type ]
!2418 = metadata !{i32 589860, metadata !2405, metadata !"char", metadata !2405, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2419 = metadata !{i32 589837, metadata !2413, metadata !"info", metadata !2407, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2420} ; [ DW_TAG_member ]
!2420 = metadata !{i32 589843, metadata !2405, metadata !"printf_info", metadata !2421, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2422, i32 0, null} ; [ DW_TAG_structure_type ]
!2421 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2406} ; [ DW_TAG_file_type ]
!2422 = metadata !{metadata !2423, metadata !2424, metadata !2425, metadata !2428, metadata !2430}
!2423 = metadata !{i32 589837, metadata !2420, metadata !"prec", metadata !2421, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2424 = metadata !{i32 589837, metadata !2420, metadata !"width", metadata !2421, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2425 = metadata !{i32 589837, metadata !2420, metadata !"spec", metadata !2421, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2426} ; [ DW_TAG_member ]
!2426 = metadata !{i32 589846, metadata !2427, metadata !"wchar_t", metadata !2427, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2410} ; [ DW_TAG_typedef ]
!2427 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2406} ; [ DW_TAG_file_type ]
!2428 = metadata !{i32 589837, metadata !2420, metadata !"_flags", metadata !2421, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2429 = metadata !{i32 589860, metadata !2405, metadata !"unsigned int", metadata !2405, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2430 = metadata !{i32 589837, metadata !2420, metadata !"pad", metadata !2421, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2426} ; [ DW_TAG_member ]
!2431 = metadata !{i32 589837, metadata !2413, metadata !"maxposarg", metadata !2407, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2432 = metadata !{i32 589837, metadata !2413, metadata !"num_data_args", metadata !2407, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2433 = metadata !{i32 589837, metadata !2413, metadata !"conv_num", metadata !2407, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2434 = metadata !{i32 589837, metadata !2413, metadata !"argnumber", metadata !2407, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2435} ; [ DW_TAG_member ]
!2435 = metadata !{i32 589825, metadata !2405, metadata !"", metadata !2405, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2436, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!2436 = metadata !{i32 589860, metadata !2405, metadata !"unsigned char", metadata !2405, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2437 = metadata !{i32 589837, metadata !2413, metadata !"argtype", metadata !2407, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2438} ; [ DW_TAG_member ]
!2438 = metadata !{i32 589825, metadata !2405, metadata !"", metadata !2405, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2410, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2439 = metadata !{i32 589837, metadata !2413, metadata !"arg", metadata !2407, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2440} ; [ DW_TAG_member ]
!2440 = metadata !{i32 589846, metadata !2441, metadata !"va_list", metadata !2441, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2442} ; [ DW_TAG_typedef ]
!2441 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2406} ; [ DW_TAG_file_type ]
!2442 = metadata !{i32 589825, metadata !2405, metadata !"", metadata !2405, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2443, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!2443 = metadata !{i32 589843, metadata !2405, metadata !"__va_list_tag", metadata !2444, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2445, i32 0, null} ; [ DW_TAG_structure_type ]
!2444 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2406} ; [ DW_TAG_file_type ]
!2445 = metadata !{metadata !2446, metadata !2447, metadata !2448, metadata !2450}
!2446 = metadata !{i32 589837, metadata !2443, metadata !"gp_offset", metadata !2444, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2447 = metadata !{i32 589837, metadata !2443, metadata !"fp_offset", metadata !2444, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2448 = metadata !{i32 589837, metadata !2443, metadata !"overflow_arg_area", metadata !2444, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2449} ; [ DW_TAG_member ]
!2449 = metadata !{i32 589839, metadata !2405, metadata !"", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2450 = metadata !{i32 589837, metadata !2443, metadata !"reg_save_area", metadata !2444, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2449} ; [ DW_TAG_member ]
!2451 = metadata !{i32 589837, metadata !2413, metadata !"argvalue", metadata !2407, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2452} ; [ DW_TAG_member ]
!2452 = metadata !{i32 589825, metadata !2405, metadata !"", metadata !2405, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2453, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2453 = metadata !{i32 589846, metadata !2407, metadata !"argvalue_t", metadata !2407, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2454} ; [ DW_TAG_typedef ]
!2454 = metadata !{i32 589847, metadata !2405, metadata !"", metadata !2407, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2455, i32 0, null} ; [ DW_TAG_union_type ]
!2455 = metadata !{metadata !2456, metadata !2457, metadata !2458, metadata !2460, metadata !2462, metadata !2464, metadata !2466}
!2456 = metadata !{i32 589837, metadata !2454, metadata !"wc", metadata !2407, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2426} ; [ DW_TAG_member ]
!2457 = metadata !{i32 589837, metadata !2454, metadata !"u", metadata !2407, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2458 = metadata !{i32 589837, metadata !2454, metadata !"ul", metadata !2407, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2459} ; [ DW_TAG_member ]
!2459 = metadata !{i32 589860, metadata !2405, metadata !"long unsigned int", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2460 = metadata !{i32 589837, metadata !2454, metadata !"ull", metadata !2407, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2461} ; [ DW_TAG_member ]
!2461 = metadata !{i32 589860, metadata !2405, metadata !"long long unsigned int", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2462 = metadata !{i32 589837, metadata !2454, metadata !"d", metadata !2407, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2463} ; [ DW_TAG_member ]
!2463 = metadata !{i32 589860, metadata !2405, metadata !"double", metadata !2405, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2464 = metadata !{i32 589837, metadata !2454, metadata !"ld", metadata !2407, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2465} ; [ DW_TAG_member ]
!2465 = metadata !{i32 589860, metadata !2405, metadata !"long double", metadata !2405, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2466 = metadata !{i32 589837, metadata !2454, metadata !"p", metadata !2407, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2449} ; [ DW_TAG_member ]
!2467 = metadata !{i32 589870, i32 0, metadata !2468, metadata !"_promoted_size", metadata !"_promoted_size", metadata !"", metadata !2470, i32 801, metadata !2471, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @_promoted_size} ; [ 
!2468 = metadata !{i32 589865, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2469} ; [ DW_TAG_file_type ]
!2469 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2470 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2469} ; [ DW_TAG_file_type ]
!2471 = metadata !{i32 589845, metadata !2468, metadata !"", metadata !2468, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2472, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2472 = metadata !{metadata !2473, metadata !2473}
!2473 = metadata !{i32 589860, metadata !2468, metadata !"int", metadata !2468, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2474 = metadata !{i32 589870, i32 0, metadata !2468, metadata !"_is_equal_or_bigger_arg", metadata !"_is_equal_or_bigger_arg", metadata !"", metadata !2470, i32 816, metadata !2475, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)
!2475 = metadata !{i32 589845, metadata !2468, metadata !"", metadata !2468, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2476, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2476 = metadata !{metadata !2473, metadata !2473, metadata !2473}
!2477 = metadata !{i32 589870, i32 0, metadata !2468, metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !2470, i32 845, metadata !2478, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.p
!2478 = metadata !{i32 589845, metadata !2468, metadata !"", metadata !2468, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2479, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2479 = metadata !{metadata !2473, metadata !2480}
!2480 = metadata !{i32 589839, metadata !2468, metadata !"", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2481} ; [ DW_TAG_pointer_type ]
!2481 = metadata !{i32 589846, metadata !2470, metadata !"ppfs_t", metadata !2470, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2482} ; [ DW_TAG_typedef ]
!2482 = metadata !{i32 589843, metadata !2468, metadata !"", metadata !2470, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2483, i32 0, null} ; [ DW_TAG_structure_type ]
!2483 = metadata !{metadata !2484, metadata !2488, metadata !2500, metadata !2501, metadata !2502, metadata !2503, metadata !2506, metadata !2508, metadata !2520}
!2484 = metadata !{i32 589837, metadata !2482, metadata !"fmtpos", metadata !2470, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2485} ; [ DW_TAG_member ]
!2485 = metadata !{i32 589839, metadata !2468, metadata !"", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2486} ; [ DW_TAG_pointer_type ]
!2486 = metadata !{i32 589862, metadata !2468, metadata !"", metadata !2468, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2487} ; [ DW_TAG_const_type ]
!2487 = metadata !{i32 589860, metadata !2468, metadata !"char", metadata !2468, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2488 = metadata !{i32 589837, metadata !2482, metadata !"info", metadata !2470, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2489} ; [ DW_TAG_member ]
!2489 = metadata !{i32 589843, metadata !2468, metadata !"printf_info", metadata !2490, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2491, i32 0, null} ; [ DW_TAG_structure_type ]
!2490 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2469} ; [ DW_TAG_file_type ]
!2491 = metadata !{metadata !2492, metadata !2493, metadata !2494, metadata !2497, metadata !2499}
!2492 = metadata !{i32 589837, metadata !2489, metadata !"prec", metadata !2490, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2473} ; [ DW_TAG_member ]
!2493 = metadata !{i32 589837, metadata !2489, metadata !"width", metadata !2490, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2473} ; [ DW_TAG_member ]
!2494 = metadata !{i32 589837, metadata !2489, metadata !"spec", metadata !2490, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2495} ; [ DW_TAG_member ]
!2495 = metadata !{i32 589846, metadata !2496, metadata !"wchar_t", metadata !2496, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2473} ; [ DW_TAG_typedef ]
!2496 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2469} ; [ DW_TAG_file_type ]
!2497 = metadata !{i32 589837, metadata !2489, metadata !"_flags", metadata !2490, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2498} ; [ DW_TAG_member ]
!2498 = metadata !{i32 589860, metadata !2468, metadata !"unsigned int", metadata !2468, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2499 = metadata !{i32 589837, metadata !2489, metadata !"pad", metadata !2490, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2495} ; [ DW_TAG_member ]
!2500 = metadata !{i32 589837, metadata !2482, metadata !"maxposarg", metadata !2470, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2473} ; [ DW_TAG_member ]
!2501 = metadata !{i32 589837, metadata !2482, metadata !"num_data_args", metadata !2470, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2473} ; [ DW_TAG_member ]
!2502 = metadata !{i32 589837, metadata !2482, metadata !"conv_num", metadata !2470, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2498} ; [ DW_TAG_member ]
!2503 = metadata !{i32 589837, metadata !2482, metadata !"argnumber", metadata !2470, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2504} ; [ DW_TAG_member ]
!2504 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2505, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!2505 = metadata !{i32 589860, metadata !2468, metadata !"unsigned char", metadata !2468, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2506 = metadata !{i32 589837, metadata !2482, metadata !"argtype", metadata !2470, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2507} ; [ DW_TAG_member ]
!2507 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2473, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2508 = metadata !{i32 589837, metadata !2482, metadata !"arg", metadata !2470, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2509} ; [ DW_TAG_member ]
!2509 = metadata !{i32 589846, metadata !2510, metadata !"va_list", metadata !2510, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2511} ; [ DW_TAG_typedef ]
!2510 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2469} ; [ DW_TAG_file_type ]
!2511 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2512, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!2512 = metadata !{i32 589843, metadata !2468, metadata !"__va_list_tag", metadata !2513, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2514, i32 0, null} ; [ DW_TAG_structure_type ]
!2513 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2469} ; [ DW_TAG_file_type ]
!2514 = metadata !{metadata !2515, metadata !2516, metadata !2517, metadata !2519}
!2515 = metadata !{i32 589837, metadata !2512, metadata !"gp_offset", metadata !2513, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2498} ; [ DW_TAG_member ]
!2516 = metadata !{i32 589837, metadata !2512, metadata !"fp_offset", metadata !2513, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2498} ; [ DW_TAG_member ]
!2517 = metadata !{i32 589837, metadata !2512, metadata !"overflow_arg_area", metadata !2513, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2518} ; [ DW_TAG_member ]
!2518 = metadata !{i32 589839, metadata !2468, metadata !"", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2519 = metadata !{i32 589837, metadata !2512, metadata !"reg_save_area", metadata !2513, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2518} ; [ DW_TAG_member ]
!2520 = metadata !{i32 589837, metadata !2482, metadata !"argvalue", metadata !2470, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2521} ; [ DW_TAG_member ]
!2521 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2522, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2522 = metadata !{i32 589846, metadata !2470, metadata !"argvalue_t", metadata !2470, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2523} ; [ DW_TAG_typedef ]
!2523 = metadata !{i32 589847, metadata !2468, metadata !"", metadata !2470, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2524, i32 0, null} ; [ DW_TAG_union_type ]
!2524 = metadata !{metadata !2525, metadata !2526, metadata !2527, metadata !2529, metadata !2531, metadata !2533, metadata !2535}
!2525 = metadata !{i32 589837, metadata !2523, metadata !"wc", metadata !2470, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2495} ; [ DW_TAG_member ]
!2526 = metadata !{i32 589837, metadata !2523, metadata !"u", metadata !2470, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2498} ; [ DW_TAG_member ]
!2527 = metadata !{i32 589837, metadata !2523, metadata !"ul", metadata !2470, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2528} ; [ DW_TAG_member ]
!2528 = metadata !{i32 589860, metadata !2468, metadata !"long unsigned int", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2529 = metadata !{i32 589837, metadata !2523, metadata !"ull", metadata !2470, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2530} ; [ DW_TAG_member ]
!2530 = metadata !{i32 589860, metadata !2468, metadata !"long long unsigned int", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2531 = metadata !{i32 589837, metadata !2523, metadata !"d", metadata !2470, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2532} ; [ DW_TAG_member ]
!2532 = metadata !{i32 589860, metadata !2468, metadata !"double", metadata !2468, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2533 = metadata !{i32 589837, metadata !2523, metadata !"ld", metadata !2470, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2534} ; [ DW_TAG_member ]
!2534 = metadata !{i32 589860, metadata !2468, metadata !"long double", metadata !2468, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2535 = metadata !{i32 589837, metadata !2523, metadata !"p", metadata !2470, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2518} ; [ DW_TAG_member ]
!2536 = metadata !{i32 589870, i32 0, metadata !2537, metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !2539, i32 606, metadata !2540, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppf
!2537 = metadata !{i32 589865, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2538} ; [ DW_TAG_file_type ]
!2538 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2539 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2538} ; [ DW_TAG_file_type ]
!2540 = metadata !{i32 589845, metadata !2537, metadata !"", metadata !2537, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2541, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2541 = metadata !{null, metadata !2542, metadata !2599}
!2542 = metadata !{i32 589839, metadata !2537, metadata !"", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2543} ; [ DW_TAG_pointer_type ]
!2543 = metadata !{i32 589846, metadata !2539, metadata !"ppfs_t", metadata !2539, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2544} ; [ DW_TAG_typedef ]
!2544 = metadata !{i32 589843, metadata !2537, metadata !"", metadata !2539, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2545, i32 0, null} ; [ DW_TAG_structure_type ]
!2545 = metadata !{metadata !2546, metadata !2550, metadata !2563, metadata !2564, metadata !2565, metadata !2566, metadata !2569, metadata !2571, metadata !2583}
!2546 = metadata !{i32 589837, metadata !2544, metadata !"fmtpos", metadata !2539, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2547} ; [ DW_TAG_member ]
!2547 = metadata !{i32 589839, metadata !2537, metadata !"", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2548} ; [ DW_TAG_pointer_type ]
!2548 = metadata !{i32 589862, metadata !2537, metadata !"", metadata !2537, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2549} ; [ DW_TAG_const_type ]
!2549 = metadata !{i32 589860, metadata !2537, metadata !"char", metadata !2537, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2550 = metadata !{i32 589837, metadata !2544, metadata !"info", metadata !2539, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2551} ; [ DW_TAG_member ]
!2551 = metadata !{i32 589843, metadata !2537, metadata !"printf_info", metadata !2552, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2553, i32 0, null} ; [ DW_TAG_structure_type ]
!2552 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2538} ; [ DW_TAG_file_type ]
!2553 = metadata !{metadata !2554, metadata !2556, metadata !2557, metadata !2560, metadata !2562}
!2554 = metadata !{i32 589837, metadata !2551, metadata !"prec", metadata !2552, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2555} ; [ DW_TAG_member ]
!2555 = metadata !{i32 589860, metadata !2537, metadata !"int", metadata !2537, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2556 = metadata !{i32 589837, metadata !2551, metadata !"width", metadata !2552, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2555} ; [ DW_TAG_member ]
!2557 = metadata !{i32 589837, metadata !2551, metadata !"spec", metadata !2552, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2558} ; [ DW_TAG_member ]
!2558 = metadata !{i32 589846, metadata !2559, metadata !"wchar_t", metadata !2559, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2555} ; [ DW_TAG_typedef ]
!2559 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2538} ; [ DW_TAG_file_type ]
!2560 = metadata !{i32 589837, metadata !2551, metadata !"_flags", metadata !2552, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2561} ; [ DW_TAG_member ]
!2561 = metadata !{i32 589860, metadata !2537, metadata !"unsigned int", metadata !2537, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2562 = metadata !{i32 589837, metadata !2551, metadata !"pad", metadata !2552, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2558} ; [ DW_TAG_member ]
!2563 = metadata !{i32 589837, metadata !2544, metadata !"maxposarg", metadata !2539, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2555} ; [ DW_TAG_member ]
!2564 = metadata !{i32 589837, metadata !2544, metadata !"num_data_args", metadata !2539, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2555} ; [ DW_TAG_member ]
!2565 = metadata !{i32 589837, metadata !2544, metadata !"conv_num", metadata !2539, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2561} ; [ DW_TAG_member ]
!2566 = metadata !{i32 589837, metadata !2544, metadata !"argnumber", metadata !2539, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2567} ; [ DW_TAG_member ]
!2567 = metadata !{i32 589825, metadata !2537, metadata !"", metadata !2537, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2568, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!2568 = metadata !{i32 589860, metadata !2537, metadata !"unsigned char", metadata !2537, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2569 = metadata !{i32 589837, metadata !2544, metadata !"argtype", metadata !2539, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2570} ; [ DW_TAG_member ]
!2570 = metadata !{i32 589825, metadata !2537, metadata !"", metadata !2537, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2555, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2571 = metadata !{i32 589837, metadata !2544, metadata !"arg", metadata !2539, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2572} ; [ DW_TAG_member ]
!2572 = metadata !{i32 589846, metadata !2573, metadata !"va_list", metadata !2573, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2574} ; [ DW_TAG_typedef ]
!2573 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2538} ; [ DW_TAG_file_type ]
!2574 = metadata !{i32 589825, metadata !2537, metadata !"", metadata !2537, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2575, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!2575 = metadata !{i32 589843, metadata !2537, metadata !"__va_list_tag", metadata !2576, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2577, i32 0, null} ; [ DW_TAG_structure_type ]
!2576 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2538} ; [ DW_TAG_file_type ]
!2577 = metadata !{metadata !2578, metadata !2579, metadata !2580, metadata !2582}
!2578 = metadata !{i32 589837, metadata !2575, metadata !"gp_offset", metadata !2576, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2561} ; [ DW_TAG_member ]
!2579 = metadata !{i32 589837, metadata !2575, metadata !"fp_offset", metadata !2576, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2561} ; [ DW_TAG_member ]
!2580 = metadata !{i32 589837, metadata !2575, metadata !"overflow_arg_area", metadata !2576, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2581} ; [ DW_TAG_member ]
!2581 = metadata !{i32 589839, metadata !2537, metadata !"", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2582 = metadata !{i32 589837, metadata !2575, metadata !"reg_save_area", metadata !2576, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2581} ; [ DW_TAG_member ]
!2583 = metadata !{i32 589837, metadata !2544, metadata !"argvalue", metadata !2539, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2584} ; [ DW_TAG_member ]
!2584 = metadata !{i32 589825, metadata !2537, metadata !"", metadata !2537, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2585, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2585 = metadata !{i32 589846, metadata !2539, metadata !"argvalue_t", metadata !2539, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2586} ; [ DW_TAG_typedef ]
!2586 = metadata !{i32 589847, metadata !2537, metadata !"", metadata !2539, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2587, i32 0, null} ; [ DW_TAG_union_type ]
!2587 = metadata !{metadata !2588, metadata !2589, metadata !2590, metadata !2592, metadata !2594, metadata !2596, metadata !2598}
!2588 = metadata !{i32 589837, metadata !2586, metadata !"wc", metadata !2539, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2558} ; [ DW_TAG_member ]
!2589 = metadata !{i32 589837, metadata !2586, metadata !"u", metadata !2539, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2561} ; [ DW_TAG_member ]
!2590 = metadata !{i32 589837, metadata !2586, metadata !"ul", metadata !2539, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2591} ; [ DW_TAG_member ]
!2591 = metadata !{i32 589860, metadata !2537, metadata !"long unsigned int", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2592 = metadata !{i32 589837, metadata !2586, metadata !"ull", metadata !2539, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2593} ; [ DW_TAG_member ]
!2593 = metadata !{i32 589860, metadata !2537, metadata !"long long unsigned int", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2594 = metadata !{i32 589837, metadata !2586, metadata !"d", metadata !2539, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2595} ; [ DW_TAG_member ]
!2595 = metadata !{i32 589860, metadata !2537, metadata !"double", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2596 = metadata !{i32 589837, metadata !2586, metadata !"ld", metadata !2539, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2597} ; [ DW_TAG_member ]
!2597 = metadata !{i32 589860, metadata !2537, metadata !"long double", metadata !2537, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2598 = metadata !{i32 589837, metadata !2586, metadata !"p", metadata !2539, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2581} ; [ DW_TAG_member ]
!2599 = metadata !{i32 589839, metadata !2537, metadata !"", metadata !2537, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2575} ; [ DW_TAG_pointer_type ]
!2600 = metadata !{i32 589870, i32 0, metadata !2601, metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !2603, i32 625, metadata !2604, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppfs_t
!2601 = metadata !{i32 589865, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2602} ; [ DW_TAG_file_type ]
!2602 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2603 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2602} ; [ DW_TAG_file_type ]
!2604 = metadata !{i32 589845, metadata !2601, metadata !"", metadata !2601, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2605, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2605 = metadata !{null, metadata !2606}
!2606 = metadata !{i32 589839, metadata !2601, metadata !"", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2607} ; [ DW_TAG_pointer_type ]
!2607 = metadata !{i32 589846, metadata !2603, metadata !"ppfs_t", metadata !2603, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2608} ; [ DW_TAG_typedef ]
!2608 = metadata !{i32 589843, metadata !2601, metadata !"", metadata !2603, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2609, i32 0, null} ; [ DW_TAG_structure_type ]
!2609 = metadata !{metadata !2610, metadata !2614, metadata !2627, metadata !2628, metadata !2629, metadata !2630, metadata !2633, metadata !2635, metadata !2647}
!2610 = metadata !{i32 589837, metadata !2608, metadata !"fmtpos", metadata !2603, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2611} ; [ DW_TAG_member ]
!2611 = metadata !{i32 589839, metadata !2601, metadata !"", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2612} ; [ DW_TAG_pointer_type ]
!2612 = metadata !{i32 589862, metadata !2601, metadata !"", metadata !2601, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2613} ; [ DW_TAG_const_type ]
!2613 = metadata !{i32 589860, metadata !2601, metadata !"char", metadata !2601, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2614 = metadata !{i32 589837, metadata !2608, metadata !"info", metadata !2603, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2615} ; [ DW_TAG_member ]
!2615 = metadata !{i32 589843, metadata !2601, metadata !"printf_info", metadata !2616, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2617, i32 0, null} ; [ DW_TAG_structure_type ]
!2616 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2602} ; [ DW_TAG_file_type ]
!2617 = metadata !{metadata !2618, metadata !2620, metadata !2621, metadata !2624, metadata !2626}
!2618 = metadata !{i32 589837, metadata !2615, metadata !"prec", metadata !2616, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2619 = metadata !{i32 589860, metadata !2601, metadata !"int", metadata !2601, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2620 = metadata !{i32 589837, metadata !2615, metadata !"width", metadata !2616, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2621 = metadata !{i32 589837, metadata !2615, metadata !"spec", metadata !2616, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2622 = metadata !{i32 589846, metadata !2623, metadata !"wchar_t", metadata !2623, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2619} ; [ DW_TAG_typedef ]
!2623 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2602} ; [ DW_TAG_file_type ]
!2624 = metadata !{i32 589837, metadata !2615, metadata !"_flags", metadata !2616, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2625 = metadata !{i32 589860, metadata !2601, metadata !"unsigned int", metadata !2601, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2626 = metadata !{i32 589837, metadata !2615, metadata !"pad", metadata !2616, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2627 = metadata !{i32 589837, metadata !2608, metadata !"maxposarg", metadata !2603, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2628 = metadata !{i32 589837, metadata !2608, metadata !"num_data_args", metadata !2603, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2629 = metadata !{i32 589837, metadata !2608, metadata !"conv_num", metadata !2603, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2630 = metadata !{i32 589837, metadata !2608, metadata !"argnumber", metadata !2603, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2631} ; [ DW_TAG_member ]
!2631 = metadata !{i32 589825, metadata !2601, metadata !"", metadata !2601, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2632, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!2632 = metadata !{i32 589860, metadata !2601, metadata !"unsigned char", metadata !2601, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2633 = metadata !{i32 589837, metadata !2608, metadata !"argtype", metadata !2603, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2634} ; [ DW_TAG_member ]
!2634 = metadata !{i32 589825, metadata !2601, metadata !"", metadata !2601, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2619, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2635 = metadata !{i32 589837, metadata !2608, metadata !"arg", metadata !2603, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2636} ; [ DW_TAG_member ]
!2636 = metadata !{i32 589846, metadata !2637, metadata !"va_list", metadata !2637, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2638} ; [ DW_TAG_typedef ]
!2637 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2602} ; [ DW_TAG_file_type ]
!2638 = metadata !{i32 589825, metadata !2601, metadata !"", metadata !2601, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2639, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!2639 = metadata !{i32 589843, metadata !2601, metadata !"__va_list_tag", metadata !2640, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2641, i32 0, null} ; [ DW_TAG_structure_type ]
!2640 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2602} ; [ DW_TAG_file_type ]
!2641 = metadata !{metadata !2642, metadata !2643, metadata !2644, metadata !2646}
!2642 = metadata !{i32 589837, metadata !2639, metadata !"gp_offset", metadata !2640, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2643 = metadata !{i32 589837, metadata !2639, metadata !"fp_offset", metadata !2640, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2644 = metadata !{i32 589837, metadata !2639, metadata !"overflow_arg_area", metadata !2640, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2645} ; [ DW_TAG_member ]
!2645 = metadata !{i32 589839, metadata !2601, metadata !"", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2646 = metadata !{i32 589837, metadata !2639, metadata !"reg_save_area", metadata !2640, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2645} ; [ DW_TAG_member ]
!2647 = metadata !{i32 589837, metadata !2608, metadata !"argvalue", metadata !2603, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2648} ; [ DW_TAG_member ]
!2648 = metadata !{i32 589825, metadata !2601, metadata !"", metadata !2601, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2649, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2649 = metadata !{i32 589846, metadata !2603, metadata !"argvalue_t", metadata !2603, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2650} ; [ DW_TAG_typedef ]
!2650 = metadata !{i32 589847, metadata !2601, metadata !"", metadata !2603, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2651, i32 0, null} ; [ DW_TAG_union_type ]
!2651 = metadata !{metadata !2652, metadata !2653, metadata !2654, metadata !2656, metadata !2658, metadata !2660, metadata !2662}
!2652 = metadata !{i32 589837, metadata !2650, metadata !"wc", metadata !2603, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2653 = metadata !{i32 589837, metadata !2650, metadata !"u", metadata !2603, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2625} ; [ DW_TAG_member ]
!2654 = metadata !{i32 589837, metadata !2650, metadata !"ul", metadata !2603, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2655} ; [ DW_TAG_member ]
!2655 = metadata !{i32 589860, metadata !2601, metadata !"long unsigned int", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2656 = metadata !{i32 589837, metadata !2650, metadata !"ull", metadata !2603, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2657} ; [ DW_TAG_member ]
!2657 = metadata !{i32 589860, metadata !2601, metadata !"long long unsigned int", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2658 = metadata !{i32 589837, metadata !2650, metadata !"d", metadata !2603, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2659} ; [ DW_TAG_member ]
!2659 = metadata !{i32 589860, metadata !2601, metadata !"double", metadata !2601, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2660 = metadata !{i32 589837, metadata !2650, metadata !"ld", metadata !2603, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2661} ; [ DW_TAG_member ]
!2661 = metadata !{i32 589860, metadata !2601, metadata !"long double", metadata !2601, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2662 = metadata !{i32 589837, metadata !2650, metadata !"p", metadata !2603, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2645} ; [ DW_TAG_member ]
!2663 = metadata !{i32 589870, i32 0, metadata !2664, metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !2664, i32 24, metadata !2666, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i32, i
!2664 = metadata !{i32 589865, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2665} ; [ DW_TAG_file_type ]
!2665 = metadata !{i32 589841, i32 0, i32 1, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2666 = metadata !{i32 589845, metadata !2664, metadata !"", metadata !2664, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2667, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2667 = metadata !{metadata !2668, metadata !2668, metadata !2670, metadata !2673, metadata !2674}
!2668 = metadata !{i32 589839, metadata !2664, metadata !"", metadata !2664, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2669} ; [ DW_TAG_pointer_type ]
!2669 = metadata !{i32 589860, metadata !2664, metadata !"char", metadata !2664, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2670 = metadata !{i32 589846, metadata !2671, metadata !"uintmax_t", metadata !2671, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2672} ; [ DW_TAG_typedef ]
!2671 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2665} ; [ DW_TAG_file_type ]
!2672 = metadata !{i32 589860, metadata !2664, metadata !"long unsigned int", metadata !2664, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2673 = metadata !{i32 589860, metadata !2664, metadata !"int", metadata !2664, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2674 = metadata !{i32 589846, metadata !2675, metadata !"__UIM_CASE", metadata !2675, i32 84, i64 0, i64 0, i64 0, i32 0, metadata !2676} ; [ DW_TAG_typedef ]
!2675 = metadata !{i32 589865, metadata !"uClibc_uintmaxtostr.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2665} ; [ DW_TAG_file_type ]
!2676 = metadata !{i32 589828, metadata !2664, metadata !"", metadata !2675, i32 79, i64 32, i64 32, i64 0, i32 0, null, metadata !2677, i32 0, null} ; [ DW_TAG_enumeration_type ]
!2677 = metadata !{metadata !2678, metadata !2679, metadata !2680, metadata !2681}
!2678 = metadata !{i32 589864, metadata !"__UIM_DECIMAL", i64 0} ; [ DW_TAG_enumerator ]
!2679 = metadata !{i32 589864, metadata !"__UIM_GROUP", i64 44} ; [ DW_TAG_enumerator ]
!2680 = metadata !{i32 589864, metadata !"__UIM_LOWER", i64 87} ; [ DW_TAG_enumerator ]
!2681 = metadata !{i32 589864, metadata !"__UIM_UPPER", i64 55} ; [ DW_TAG_enumerator ]
!2682 = metadata !{i32 589870, i32 0, metadata !2683, metadata !"strnlen", metadata !"strnlen", metadata !"strnlen", metadata !2683, i32 21, metadata !2685, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @strnlen} ; [ DW_TAG_su
!2683 = metadata !{i32 589865, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2684} ; [ DW_TAG_file_type ]
!2684 = metadata !{i32 589841, i32 0, i32 1, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!2685 = metadata !{i32 589845, metadata !2683, metadata !"", metadata !2683, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2686, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2686 = metadata !{metadata !2687, metadata !2690, metadata !2687}
!2687 = metadata !{i32 589846, metadata !2688, metadata !"size_t", metadata !2688, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2689} ; [ DW_TAG_typedef ]
!2688 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2684} ; [ DW_TAG_file_type ]
!2689 = metadata !{i32 589860, metadata !2683, metadata !"long unsigned int", metadata !2683, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2690 = metadata !{i32 589839, metadata !2683, metadata !"", metadata !2683, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2691} ; [ DW_TAG_pointer_type ]
!2691 = metadata !{i32 589862, metadata !2683, metadata !"", metadata !2683, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2692} ; [ DW_TAG_const_type ]
!2692 = metadata !{i32 589860, metadata !2683, metadata !"char", metadata !2683, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2693 = metadata !{i32 589870, i32 0, metadata !2694, metadata !"strpbrk", metadata !"strpbrk", metadata !"strpbrk", metadata !2694, i32 19, metadata !2696, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strpbrk} ; [ DW_TAG_su
!2694 = metadata !{i32 589865, metadata !"strpbrk.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2695} ; [ DW_TAG_file_type ]
!2695 = metadata !{i32 589841, i32 0, i32 1, metadata !"strpbrk.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!2696 = metadata !{i32 589845, metadata !2694, metadata !"", metadata !2694, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2697, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2697 = metadata !{metadata !2698, metadata !2700, metadata !2700}
!2698 = metadata !{i32 589839, metadata !2694, metadata !"", metadata !2694, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2699} ; [ DW_TAG_pointer_type ]
!2699 = metadata !{i32 589860, metadata !2694, metadata !"char", metadata !2694, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2700 = metadata !{i32 589839, metadata !2694, metadata !"", metadata !2694, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2701} ; [ DW_TAG_pointer_type ]
!2701 = metadata !{i32 589862, metadata !2694, metadata !"", metadata !2694, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2699} ; [ DW_TAG_const_type ]
!2702 = metadata !{i32 589870, i32 0, metadata !2703, metadata !"strtol", metadata !"strtol", metadata !"strtol", metadata !2705, i32 331, metadata !2706, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**, i32)* @strtol} ; [ DW_TAG
!2703 = metadata !{i32 589865, metadata !"strtol.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2704} ; [ DW_TAG_file_type ]
!2704 = metadata !{i32 589841, i32 0, i32 1, metadata !"strtol.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2705 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2704} ; [ DW_TAG_file_type ]
!2706 = metadata !{i32 589845, metadata !2703, metadata !"", metadata !2703, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2707, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2707 = metadata !{metadata !2708, metadata !2709, metadata !2712, metadata !2714}
!2708 = metadata !{i32 589860, metadata !2703, metadata !"long int", metadata !2703, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2709 = metadata !{i32 589839, metadata !2703, metadata !"", metadata !2703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2710} ; [ DW_TAG_pointer_type ]
!2710 = metadata !{i32 589862, metadata !2703, metadata !"", metadata !2703, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2711} ; [ DW_TAG_const_type ]
!2711 = metadata !{i32 589860, metadata !2703, metadata !"char", metadata !2703, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2712 = metadata !{i32 589839, metadata !2703, metadata !"", metadata !2703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2713} ; [ DW_TAG_pointer_type ]
!2713 = metadata !{i32 589839, metadata !2703, metadata !"", metadata !2703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2711} ; [ DW_TAG_pointer_type ]
!2714 = metadata !{i32 589860, metadata !2703, metadata !"int", metadata !2703, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2715 = metadata !{i32 589870, i32 0, metadata !2716, metadata !"tcgetattr", metadata !"tcgetattr", metadata !"tcgetattr", metadata !2716, i32 39, metadata !2718, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.termios*)* @tcg
!2716 = metadata !{i32 589865, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !2717} ; [ DW_TAG_file_type ]
!2717 = metadata !{i32 589841, i32 0, i32 1, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2718 = metadata !{i32 589845, metadata !2716, metadata !"", metadata !2716, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2719, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2719 = metadata !{metadata !2720, metadata !2720, metadata !2721}
!2720 = metadata !{i32 589860, metadata !2716, metadata !"int", metadata !2716, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2721 = metadata !{i32 589839, metadata !2716, metadata !"", metadata !2716, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2722} ; [ DW_TAG_pointer_type ]
!2722 = metadata !{i32 589843, metadata !2716, metadata !"termios", metadata !2723, i32 31, i64 480, i64 32, i64 0, i32 0, null, metadata !2724, i32 0, null} ; [ DW_TAG_structure_type ]
!2723 = metadata !{i32 589865, metadata !"termios.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2717} ; [ DW_TAG_file_type ]
!2724 = metadata !{metadata !2725, metadata !2728, metadata !2729, metadata !2730, metadata !2731, metadata !2734, metadata !2736, metadata !2738}
!2725 = metadata !{i32 589837, metadata !2722, metadata !"c_iflag", metadata !2723, i32 32, i64 32, i64 32, i64 0, i32 0, metadata !2726} ; [ DW_TAG_member ]
!2726 = metadata !{i32 589846, metadata !2723, metadata !"tcflag_t", metadata !2723, i32 27, i64 0, i64 0, i64 0, i32 0, metadata !2727} ; [ DW_TAG_typedef ]
!2727 = metadata !{i32 589860, metadata !2716, metadata !"unsigned int", metadata !2716, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2728 = metadata !{i32 589837, metadata !2722, metadata !"c_oflag", metadata !2723, i32 33, i64 32, i64 32, i64 32, i32 0, metadata !2726} ; [ DW_TAG_member ]
!2729 = metadata !{i32 589837, metadata !2722, metadata !"c_cflag", metadata !2723, i32 34, i64 32, i64 32, i64 64, i32 0, metadata !2726} ; [ DW_TAG_member ]
!2730 = metadata !{i32 589837, metadata !2722, metadata !"c_lflag", metadata !2723, i32 35, i64 32, i64 32, i64 96, i32 0, metadata !2726} ; [ DW_TAG_member ]
!2731 = metadata !{i32 589837, metadata !2722, metadata !"c_line", metadata !2723, i32 36, i64 8, i64 8, i64 128, i32 0, metadata !2732} ; [ DW_TAG_member ]
!2732 = metadata !{i32 589846, metadata !2723, metadata !"cc_t", metadata !2723, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !2733} ; [ DW_TAG_typedef ]
!2733 = metadata !{i32 589860, metadata !2716, metadata !"unsigned char", metadata !2716, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2734 = metadata !{i32 589837, metadata !2722, metadata !"c_cc", metadata !2723, i32 37, i64 256, i64 8, i64 136, i32 0, metadata !2735} ; [ DW_TAG_member ]
!2735 = metadata !{i32 589825, metadata !2716, metadata !"", metadata !2716, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !2732, metadata !824, i32 0, null} ; [ DW_TAG_array_type ]
!2736 = metadata !{i32 589837, metadata !2722, metadata !"c_ispeed", metadata !2723, i32 38, i64 32, i64 32, i64 416, i32 0, metadata !2737} ; [ DW_TAG_member ]
!2737 = metadata !{i32 589846, metadata !2723, metadata !"speed_t", metadata !2723, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2727} ; [ DW_TAG_typedef ]
!2738 = metadata !{i32 589837, metadata !2722, metadata !"c_ospeed", metadata !2723, i32 39, i64 32, i64 32, i64 448, i32 0, metadata !2737} ; [ DW_TAG_member ]
!2739 = metadata !{i32 589870, i32 0, metadata !2740, metadata !"sc_getc", metadata !"sc_getc", metadata !"", metadata !2742, i32 987, metadata !2743, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @sc_getc} ; [ DW_T
!2740 = metadata !{i32 589865, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2741} ; [ DW_TAG_file_type ]
!2741 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2742 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2741} ; [ DW_TAG_file_type ]
!2743 = metadata !{i32 589845, metadata !2740, metadata !"", metadata !2740, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2744, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2744 = metadata !{metadata !2745, metadata !2746}
!2745 = metadata !{i32 589860, metadata !2740, metadata !"int", metadata !2740, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2746 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2747} ; [ DW_TAG_pointer_type ]
!2747 = metadata !{i32 589843, metadata !2740, metadata !"scan_cookie", metadata !2742, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2748, i32 0, null} ; [ DW_TAG_structure_type ]
!2748 = metadata !{metadata !2749, metadata !2750, metadata !2751, metadata !2784, metadata !2785, metadata !2786, metadata !2787, metadata !2788, metadata !2790, metadata !2791, metadata !2792, metadata !2794, metadata !2797, metadata !2798, metadata !2
!2749 = metadata !{i32 589837, metadata !2747, metadata !"cc", metadata !2742, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2750 = metadata !{i32 589837, metadata !2747, metadata !"ungot_char", metadata !2742, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2751 = metadata !{i32 589837, metadata !2747, metadata !"fp", metadata !2742, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2752} ; [ DW_TAG_member ]
!2752 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2753} ; [ DW_TAG_pointer_type ]
!2753 = metadata !{i32 589846, metadata !2754, metadata !"FILE", metadata !2754, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2755} ; [ DW_TAG_typedef ]
!2754 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2741} ; [ DW_TAG_file_type ]
!2755 = metadata !{i32 589843, metadata !2740, metadata !"__STDIO_FILE_STRUCT", metadata !2754, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2756, i32 0, null} ; [ DW_TAG_structure_type ]
!2756 = metadata !{metadata !2757, metadata !2760, metadata !2763, metadata !2764, metadata !2766, metadata !2767, metadata !2768, metadata !2769, metadata !2770, metadata !2771, metadata !2773, metadata !2777}
!2757 = metadata !{i32 589837, metadata !2755, metadata !"__modeflags", metadata !2758, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2759} ; [ DW_TAG_member ]
!2758 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2741} ; [ DW_TAG_file_type ]
!2759 = metadata !{i32 589860, metadata !2740, metadata !"short unsigned int", metadata !2740, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2760 = metadata !{i32 589837, metadata !2755, metadata !"__ungot_width", metadata !2758, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2761} ; [ DW_TAG_member ]
!2761 = metadata !{i32 589825, metadata !2740, metadata !"", metadata !2740, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2762, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2762 = metadata !{i32 589860, metadata !2740, metadata !"unsigned char", metadata !2740, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2763 = metadata !{i32 589837, metadata !2755, metadata !"__filedes", metadata !2758, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2764 = metadata !{i32 589837, metadata !2755, metadata !"__bufstart", metadata !2758, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2765 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2762} ; [ DW_TAG_pointer_type ]
!2766 = metadata !{i32 589837, metadata !2755, metadata !"__bufend", metadata !2758, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2767 = metadata !{i32 589837, metadata !2755, metadata !"__bufpos", metadata !2758, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2768 = metadata !{i32 589837, metadata !2755, metadata !"__bufread", metadata !2758, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2769 = metadata !{i32 589837, metadata !2755, metadata !"__bufgetc_u", metadata !2758, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2770 = metadata !{i32 589837, metadata !2755, metadata !"__bufputc_u", metadata !2758, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2771 = metadata !{i32 589837, metadata !2755, metadata !"__nextopen", metadata !2758, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2772} ; [ DW_TAG_member ]
!2772 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2755} ; [ DW_TAG_pointer_type ]
!2773 = metadata !{i32 589837, metadata !2755, metadata !"__ungot", metadata !2758, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2774} ; [ DW_TAG_member ]
!2774 = metadata !{i32 589825, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2775, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2775 = metadata !{i32 589846, metadata !2776, metadata !"wchar_t", metadata !2776, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2745} ; [ DW_TAG_typedef ]
!2776 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2741} ; [ DW_TAG_file_type ]
!2777 = metadata !{i32 589837, metadata !2755, metadata !"__state", metadata !2758, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2778} ; [ DW_TAG_member ]
!2778 = metadata !{i32 589846, metadata !2779, metadata !"__mbstate_t", metadata !2779, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2780} ; [ DW_TAG_typedef ]
!2779 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2741} ; [ DW_TAG_file_type ]
!2780 = metadata !{i32 589843, metadata !2740, metadata !"", metadata !2779, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2781, i32 0, null} ; [ DW_TAG_structure_type ]
!2781 = metadata !{metadata !2782, metadata !2783}
!2782 = metadata !{i32 589837, metadata !2780, metadata !"__mask", metadata !2779, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2775} ; [ DW_TAG_member ]
!2783 = metadata !{i32 589837, metadata !2780, metadata !"__wc", metadata !2779, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2775} ; [ DW_TAG_member ]
!2784 = metadata !{i32 589837, metadata !2747, metadata !"nread", metadata !2742, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2785 = metadata !{i32 589837, metadata !2747, metadata !"width", metadata !2742, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2786 = metadata !{i32 589837, metadata !2747, metadata !"app_ungot", metadata !2742, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2775} ; [ DW_TAG_member ]
!2787 = metadata !{i32 589837, metadata !2747, metadata !"ungot_wchar_width", metadata !2742, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2762} ; [ DW_TAG_member ]
!2788 = metadata !{i32 589837, metadata !2747, metadata !"ungot_flag", metadata !2742, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2789 = metadata !{i32 589860, metadata !2740, metadata !"char", metadata !2740, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2790 = metadata !{i32 589837, metadata !2747, metadata !"ungot_wflag", metadata !2742, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2791 = metadata !{i32 589837, metadata !2747, metadata !"mb_fail", metadata !2742, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2792 = metadata !{i32 589837, metadata !2747, metadata !"mbstate", metadata !2742, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2793} ; [ DW_TAG_member ]
!2793 = metadata !{i32 589846, metadata !2779, metadata !"mbstate_t", metadata !2779, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2780} ; [ DW_TAG_typedef ]
!2794 = metadata !{i32 589837, metadata !2747, metadata !"wc", metadata !2742, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2795 = metadata !{i32 589846, metadata !2776, metadata !"wint_t", metadata !2776, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2796} ; [ DW_TAG_typedef ]
!2796 = metadata !{i32 589860, metadata !2740, metadata !"unsigned int", metadata !2740, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2797 = metadata !{i32 589837, metadata !2747, metadata !"ungot_wchar", metadata !2742, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2798 = metadata !{i32 589837, metadata !2747, metadata !"sc_getc", metadata !2742, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2799} ; [ DW_TAG_member ]
!2799 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2743} ; [ DW_TAG_pointer_type ]
!2800 = metadata !{i32 589837, metadata !2747, metadata !"decpt", metadata !2742, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2801} ; [ DW_TAG_member ]
!2801 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2802} ; [ DW_TAG_pointer_type ]
!2802 = metadata !{i32 589862, metadata !2740, metadata !"", metadata !2740, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2762} ; [ DW_TAG_const_type ]
!2803 = metadata !{i32 589837, metadata !2747, metadata !"decpt_len", metadata !2742, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2745} ; [ DW_TAG_member ]
!2804 = metadata !{i32 589837, metadata !2747, metadata !"decpt_wc", metadata !2742, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2775} ; [ DW_TAG_member ]
!2805 = metadata !{i32 589837, metadata !2747, metadata !"fake_decpt", metadata !2742, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2801} ; [ DW_TAG_member ]
!2806 = metadata !{i32 589870, i32 0, metadata !2740, metadata !"scan_getwc", metadata !"scan_getwc", metadata !"", metadata !2742, i32 994, metadata !2743, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @scan_getwc}
!2807 = metadata !{i32 589870, i32 0, metadata !2740, metadata !"vfscanf", metadata !"vfscanf", metadata !"vfscanf", metadata !2742, i32 1180, metadata !2808, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_tag*
!2808 = metadata !{i32 589845, metadata !2740, metadata !"", metadata !2740, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2809, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2809 = metadata !{metadata !2745, metadata !2752, metadata !2810, metadata !2812}
!2810 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2811} ; [ DW_TAG_pointer_type ]
!2811 = metadata !{i32 589862, metadata !2740, metadata !"", metadata !2740, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2789} ; [ DW_TAG_const_type ]
!2812 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2813} ; [ DW_TAG_pointer_type ]
!2813 = metadata !{i32 589843, metadata !2740, metadata !"__va_list_tag", metadata !2814, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2815, i32 0, null} ; [ DW_TAG_structure_type ]
!2814 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2741} ; [ DW_TAG_file_type ]
!2815 = metadata !{metadata !2816, metadata !2817, metadata !2818, metadata !2820}
!2816 = metadata !{i32 589837, metadata !2813, metadata !"gp_offset", metadata !2814, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2796} ; [ DW_TAG_member ]
!2817 = metadata !{i32 589837, metadata !2813, metadata !"fp_offset", metadata !2814, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2796} ; [ DW_TAG_member ]
!2818 = metadata !{i32 589837, metadata !2813, metadata !"overflow_arg_area", metadata !2814, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2819} ; [ DW_TAG_member ]
!2819 = metadata !{i32 589839, metadata !2740, metadata !"", metadata !2740, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2820 = metadata !{i32 589837, metadata !2813, metadata !"reg_save_area", metadata !2814, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2819} ; [ DW_TAG_member ]
!2821 = metadata !{i32 589870, i32 0, metadata !2740, metadata !"kill_scan_cookie", metadata !"kill_scan_cookie", metadata !"", metadata !2742, i32 1131, metadata !2822, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_cookie*)
!2822 = metadata !{i32 589845, metadata !2740, metadata !"", metadata !2740, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2823, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2823 = metadata !{null, metadata !2746}
!2824 = metadata !{i32 589870, i32 0, metadata !2825, metadata !"wcrtomb", metadata !"wcrtomb", metadata !"wcrtomb", metadata !2827, i32 342, metadata !2828, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32, %struct.__mbstate_t*)* 
!2825 = metadata !{i32 589865, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2826} ; [ DW_TAG_file_type ]
!2826 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!2827 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2826} ; [ DW_TAG_file_type ]
!2828 = metadata !{i32 589845, metadata !2825, metadata !"", metadata !2825, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2829, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2829 = metadata !{metadata !2830, metadata !2833, metadata !2835, metadata !2837}
!2830 = metadata !{i32 589846, metadata !2831, metadata !"size_t", metadata !2831, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2832} ; [ DW_TAG_typedef ]
!2831 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2826} ; [ DW_TAG_file_type ]
!2832 = metadata !{i32 589860, metadata !2825, metadata !"long unsigned int", metadata !2825, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2833 = metadata !{i32 589839, metadata !2825, metadata !"", metadata !2825, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2834} ; [ DW_TAG_pointer_type ]
!2834 = metadata !{i32 589860, metadata !2825, metadata !"char", metadata !2825, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2835 = metadata !{i32 589846, metadata !2831, metadata !"wchar_t", metadata !2831, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2836} ; [ DW_TAG_typedef ]
!2836 = metadata !{i32 589860, metadata !2825, metadata !"int", metadata !2825, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2837 = metadata !{i32 589839, metadata !2825, metadata !"", metadata !2825, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2838} ; [ DW_TAG_pointer_type ]
!2838 = metadata !{i32 589846, metadata !2839, metadata !"mbstate_t", metadata !2839, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2840} ; [ DW_TAG_typedef ]
!2839 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2826} ; [ DW_TAG_file_type ]
!2840 = metadata !{i32 589843, metadata !2825, metadata !"", metadata !2839, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2841, i32 0, null} ; [ DW_TAG_structure_type ]
!2841 = metadata !{metadata !2842, metadata !2843}
!2842 = metadata !{i32 589837, metadata !2840, metadata !"__mask", metadata !2839, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2835} ; [ DW_TAG_member ]
!2843 = metadata !{i32 589837, metadata !2840, metadata !"__wc", metadata !2839, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2835} ; [ DW_TAG_member ]
!2844 = metadata !{i32 589870, i32 0, metadata !2845, metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !2847, i32 808, metadata !2848, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, i64, %s
!2845 = metadata !{i32 589865, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2846} ; [ DW_TAG_file_type ]
!2846 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2847 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2846} ; [ DW_TAG_file_type ]
!2848 = metadata !{i32 589845, metadata !2845, metadata !"", metadata !2845, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2849, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2849 = metadata !{metadata !2850, metadata !2853, metadata !2855, metadata !2850, metadata !2850, metadata !2859}
!2850 = metadata !{i32 589846, metadata !2851, metadata !"size_t", metadata !2851, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2852} ; [ DW_TAG_typedef ]
!2851 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2846} ; [ DW_TAG_file_type ]
!2852 = metadata !{i32 589860, metadata !2845, metadata !"long unsigned int", metadata !2845, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2853 = metadata !{i32 589839, metadata !2845, metadata !"", metadata !2845, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2854} ; [ DW_TAG_pointer_type ]
!2854 = metadata !{i32 589860, metadata !2845, metadata !"char", metadata !2845, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2855 = metadata !{i32 589839, metadata !2845, metadata !"", metadata !2845, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2856} ; [ DW_TAG_pointer_type ]
!2856 = metadata !{i32 589839, metadata !2845, metadata !"", metadata !2845, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2857} ; [ DW_TAG_pointer_type ]
!2857 = metadata !{i32 589846, metadata !2851, metadata !"wchar_t", metadata !2851, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2858} ; [ DW_TAG_typedef ]
!2858 = metadata !{i32 589860, metadata !2845, metadata !"int", metadata !2845, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2859 = metadata !{i32 589839, metadata !2845, metadata !"", metadata !2845, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2860} ; [ DW_TAG_pointer_type ]
!2860 = metadata !{i32 589846, metadata !2861, metadata !"mbstate_t", metadata !2861, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2862} ; [ DW_TAG_typedef ]
!2861 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2846} ; [ DW_TAG_file_type ]
!2862 = metadata !{i32 589843, metadata !2845, metadata !"", metadata !2861, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2863, i32 0, null} ; [ DW_TAG_structure_type ]
!2863 = metadata !{metadata !2864, metadata !2865}
!2864 = metadata !{i32 589837, metadata !2862, metadata !"__mask", metadata !2861, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2857} ; [ DW_TAG_member ]
!2865 = metadata !{i32 589837, metadata !2862, metadata !"__wc", metadata !2861, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2857} ; [ DW_TAG_member ]
!2866 = metadata !{i32 589870, i32 0, metadata !2867, metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !2869, i32 716, metadata !2870, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void 
!2867 = metadata !{i32 589865, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2868} ; [ DW_TAG_file_type ]
!2868 = metadata !{i32 589841, i32 0, i32 1, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2869 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2868} ; [ DW_TAG_file_type ]
!2870 = metadata !{i32 589845, metadata !2867, metadata !"", metadata !2867, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2871, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2871 = metadata !{null, metadata !2872, metadata !2879}
!2872 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2873} ; [ DW_TAG_pointer_type ]
!2873 = metadata !{i32 589843, metadata !2867, metadata !"scan_cookie", metadata !2869, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2874, i32 0, null} ; [ DW_TAG_structure_type ]
!2874 = metadata !{metadata !2875, metadata !2877, metadata !2878, metadata !2911, metadata !2912, metadata !2913, metadata !2914, metadata !2915, metadata !2917, metadata !2918, metadata !2919, metadata !2921, metadata !2924, metadata !2925, metadata !2
!2875 = metadata !{i32 589837, metadata !2873, metadata !"cc", metadata !2869, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2876 = metadata !{i32 589860, metadata !2867, metadata !"int", metadata !2867, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2877 = metadata !{i32 589837, metadata !2873, metadata !"ungot_char", metadata !2869, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2878 = metadata !{i32 589837, metadata !2873, metadata !"fp", metadata !2869, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2879} ; [ DW_TAG_member ]
!2879 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2880} ; [ DW_TAG_pointer_type ]
!2880 = metadata !{i32 589846, metadata !2881, metadata !"FILE", metadata !2881, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2882} ; [ DW_TAG_typedef ]
!2881 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2868} ; [ DW_TAG_file_type ]
!2882 = metadata !{i32 589843, metadata !2867, metadata !"__STDIO_FILE_STRUCT", metadata !2881, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2883, i32 0, null} ; [ DW_TAG_structure_type ]
!2883 = metadata !{metadata !2884, metadata !2887, metadata !2890, metadata !2891, metadata !2893, metadata !2894, metadata !2895, metadata !2896, metadata !2897, metadata !2898, metadata !2900, metadata !2904}
!2884 = metadata !{i32 589837, metadata !2882, metadata !"__modeflags", metadata !2885, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2886} ; [ DW_TAG_member ]
!2885 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2868} ; [ DW_TAG_file_type ]
!2886 = metadata !{i32 589860, metadata !2867, metadata !"short unsigned int", metadata !2867, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2887 = metadata !{i32 589837, metadata !2882, metadata !"__ungot_width", metadata !2885, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2888} ; [ DW_TAG_member ]
!2888 = metadata !{i32 589825, metadata !2867, metadata !"", metadata !2867, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2889, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2889 = metadata !{i32 589860, metadata !2867, metadata !"unsigned char", metadata !2867, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2890 = metadata !{i32 589837, metadata !2882, metadata !"__filedes", metadata !2885, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2891 = metadata !{i32 589837, metadata !2882, metadata !"__bufstart", metadata !2885, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2892 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2889} ; [ DW_TAG_pointer_type ]
!2893 = metadata !{i32 589837, metadata !2882, metadata !"__bufend", metadata !2885, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2894 = metadata !{i32 589837, metadata !2882, metadata !"__bufpos", metadata !2885, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2895 = metadata !{i32 589837, metadata !2882, metadata !"__bufread", metadata !2885, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2896 = metadata !{i32 589837, metadata !2882, metadata !"__bufgetc_u", metadata !2885, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2897 = metadata !{i32 589837, metadata !2882, metadata !"__bufputc_u", metadata !2885, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2892} ; [ DW_TAG_member ]
!2898 = metadata !{i32 589837, metadata !2882, metadata !"__nextopen", metadata !2885, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2899} ; [ DW_TAG_member ]
!2899 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2882} ; [ DW_TAG_pointer_type ]
!2900 = metadata !{i32 589837, metadata !2882, metadata !"__ungot", metadata !2885, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2901} ; [ DW_TAG_member ]
!2901 = metadata !{i32 589825, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2902, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2902 = metadata !{i32 589846, metadata !2903, metadata !"wchar_t", metadata !2903, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2876} ; [ DW_TAG_typedef ]
!2903 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2868} ; [ DW_TAG_file_type ]
!2904 = metadata !{i32 589837, metadata !2882, metadata !"__state", metadata !2885, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2905} ; [ DW_TAG_member ]
!2905 = metadata !{i32 589846, metadata !2906, metadata !"__mbstate_t", metadata !2906, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2907} ; [ DW_TAG_typedef ]
!2906 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2868} ; [ DW_TAG_file_type ]
!2907 = metadata !{i32 589843, metadata !2867, metadata !"", metadata !2906, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2908, i32 0, null} ; [ DW_TAG_structure_type ]
!2908 = metadata !{metadata !2909, metadata !2910}
!2909 = metadata !{i32 589837, metadata !2907, metadata !"__mask", metadata !2906, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2902} ; [ DW_TAG_member ]
!2910 = metadata !{i32 589837, metadata !2907, metadata !"__wc", metadata !2906, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2902} ; [ DW_TAG_member ]
!2911 = metadata !{i32 589837, metadata !2873, metadata !"nread", metadata !2869, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2912 = metadata !{i32 589837, metadata !2873, metadata !"width", metadata !2869, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2913 = metadata !{i32 589837, metadata !2873, metadata !"app_ungot", metadata !2869, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2902} ; [ DW_TAG_member ]
!2914 = metadata !{i32 589837, metadata !2873, metadata !"ungot_wchar_width", metadata !2869, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2889} ; [ DW_TAG_member ]
!2915 = metadata !{i32 589837, metadata !2873, metadata !"ungot_flag", metadata !2869, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2916} ; [ DW_TAG_member ]
!2916 = metadata !{i32 589860, metadata !2867, metadata !"char", metadata !2867, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2917 = metadata !{i32 589837, metadata !2873, metadata !"ungot_wflag", metadata !2869, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2916} ; [ DW_TAG_member ]
!2918 = metadata !{i32 589837, metadata !2873, metadata !"mb_fail", metadata !2869, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2916} ; [ DW_TAG_member ]
!2919 = metadata !{i32 589837, metadata !2873, metadata !"mbstate", metadata !2869, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2920} ; [ DW_TAG_member ]
!2920 = metadata !{i32 589846, metadata !2906, metadata !"mbstate_t", metadata !2906, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2907} ; [ DW_TAG_typedef ]
!2921 = metadata !{i32 589837, metadata !2873, metadata !"wc", metadata !2869, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2922} ; [ DW_TAG_member ]
!2922 = metadata !{i32 589846, metadata !2903, metadata !"wint_t", metadata !2903, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2923} ; [ DW_TAG_typedef ]
!2923 = metadata !{i32 589860, metadata !2867, metadata !"unsigned int", metadata !2867, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2924 = metadata !{i32 589837, metadata !2873, metadata !"ungot_wchar", metadata !2869, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2922} ; [ DW_TAG_member ]
!2925 = metadata !{i32 589837, metadata !2873, metadata !"sc_getc", metadata !2869, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2926} ; [ DW_TAG_member ]
!2926 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2927} ; [ DW_TAG_pointer_type ]
!2927 = metadata !{i32 589845, metadata !2867, metadata !"", metadata !2867, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2928, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2928 = metadata !{metadata !2876, metadata !2872}
!2929 = metadata !{i32 589837, metadata !2873, metadata !"decpt", metadata !2869, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2930} ; [ DW_TAG_member ]
!2930 = metadata !{i32 589839, metadata !2867, metadata !"", metadata !2867, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2931} ; [ DW_TAG_pointer_type ]
!2931 = metadata !{i32 589862, metadata !2867, metadata !"", metadata !2867, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2889} ; [ DW_TAG_const_type ]
!2932 = metadata !{i32 589837, metadata !2873, metadata !"decpt_len", metadata !2869, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2876} ; [ DW_TAG_member ]
!2933 = metadata !{i32 589837, metadata !2873, metadata !"decpt_wc", metadata !2869, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2902} ; [ DW_TAG_member ]
!2934 = metadata !{i32 589837, metadata !2873, metadata !"fake_decpt", metadata !2869, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2930} ; [ DW_TAG_member ]
!2935 = metadata !{i32 589870, i32 0, metadata !2867, metadata !"__scan_getc", metadata !"__scan_getc", metadata !"__scan_getc", metadata !2869, i32 756, metadata !2927, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)
!2936 = metadata !{i32 589870, i32 0, metadata !2867, metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !2869, i32 804, metadata !2937, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_c
!2937 = metadata !{i32 589845, metadata !2867, metadata !"", metadata !2867, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2938, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2938 = metadata !{null, metadata !2872}
!2939 = metadata !{i32 589870, i32 0, metadata !2940, metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !2942, i32 1791, metadata !2943, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%s
!2940 = metadata !{i32 589865, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2941} ; [ DW_TAG_file_type ]
!2941 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2942 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2941} ; [ DW_TAG_file_type ]
!2943 = metadata !{i32 589845, metadata !2940, metadata !"", metadata !2940, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2944, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2944 = metadata !{metadata !2945, metadata !2946, metadata !2966}
!2945 = metadata !{i32 589860, metadata !2940, metadata !"int", metadata !2940, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2946 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2947} ; [ DW_TAG_pointer_type ]
!2947 = metadata !{i32 589846, metadata !2942, metadata !"psfs_t", metadata !2942, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !2948} ; [ DW_TAG_typedef ]
!2948 = metadata !{i32 589843, metadata !2940, metadata !"", metadata !2942, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !2949, i32 0, null} ; [ DW_TAG_structure_type ]
!2949 = metadata !{metadata !2950, metadata !2953, metadata !2954, metadata !2955, metadata !2956, metadata !2960, metadata !2961, metadata !2962, metadata !2963, metadata !2964, metadata !2965}
!2950 = metadata !{i32 589837, metadata !2948, metadata !"pos_args", metadata !2942, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !2951} ; [ DW_TAG_member ]
!2951 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !2952, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!2952 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2953 = metadata !{i32 589837, metadata !2948, metadata !"num_pos_args", metadata !2942, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2954 = metadata !{i32 589837, metadata !2948, metadata !"cur_pos_arg", metadata !2942, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2955 = metadata !{i32 589837, metadata !2948, metadata !"cur_ptr", metadata !2942, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !2952} ; [ DW_TAG_member ]
!2956 = metadata !{i32 589837, metadata !2948, metadata !"fmt", metadata !2942, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !2957} ; [ DW_TAG_member ]
!2957 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2958} ; [ DW_TAG_pointer_type ]
!2958 = metadata !{i32 589862, metadata !2940, metadata !"", metadata !2940, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2959} ; [ DW_TAG_const_type ]
!2959 = metadata !{i32 589860, metadata !2940, metadata !"unsigned char", metadata !2940, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2960 = metadata !{i32 589837, metadata !2948, metadata !"cnt", metadata !2942, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2961 = metadata !{i32 589837, metadata !2948, metadata !"dataargtype", metadata !2942, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2962 = metadata !{i32 589837, metadata !2948, metadata !"conv_num", metadata !2942, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2963 = metadata !{i32 589837, metadata !2948, metadata !"max_width", metadata !2942, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2964 = metadata !{i32 589837, metadata !2948, metadata !"store", metadata !2942, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !2959} ; [ DW_TAG_member ]
!2965 = metadata !{i32 589837, metadata !2948, metadata !"flags", metadata !2942, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !2959} ; [ DW_TAG_member ]
!2966 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2967} ; [ DW_TAG_pointer_type ]
!2967 = metadata !{i32 589843, metadata !2940, metadata !"scan_cookie", metadata !2942, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2968, i32 0, null} ; [ DW_TAG_structure_type ]
!2968 = metadata !{metadata !2969, metadata !2970, metadata !2971, metadata !3003, metadata !3004, metadata !3005, metadata !3006, metadata !3007, metadata !3009, metadata !3010, metadata !3011, metadata !3013, metadata !3016, metadata !3017, metadata !3
!2969 = metadata !{i32 589837, metadata !2967, metadata !"cc", metadata !2942, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2970 = metadata !{i32 589837, metadata !2967, metadata !"ungot_char", metadata !2942, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2971 = metadata !{i32 589837, metadata !2967, metadata !"fp", metadata !2942, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2972} ; [ DW_TAG_member ]
!2972 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2973} ; [ DW_TAG_pointer_type ]
!2973 = metadata !{i32 589846, metadata !2974, metadata !"FILE", metadata !2974, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2975} ; [ DW_TAG_typedef ]
!2974 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2941} ; [ DW_TAG_file_type ]
!2975 = metadata !{i32 589843, metadata !2940, metadata !"__STDIO_FILE_STRUCT", metadata !2974, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2976, i32 0, null} ; [ DW_TAG_structure_type ]
!2976 = metadata !{metadata !2977, metadata !2980, metadata !2982, metadata !2983, metadata !2985, metadata !2986, metadata !2987, metadata !2988, metadata !2989, metadata !2990, metadata !2992, metadata !2996}
!2977 = metadata !{i32 589837, metadata !2975, metadata !"__modeflags", metadata !2978, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2979} ; [ DW_TAG_member ]
!2978 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2941} ; [ DW_TAG_file_type ]
!2979 = metadata !{i32 589860, metadata !2940, metadata !"short unsigned int", metadata !2940, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2980 = metadata !{i32 589837, metadata !2975, metadata !"__ungot_width", metadata !2978, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2981} ; [ DW_TAG_member ]
!2981 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2959, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2982 = metadata !{i32 589837, metadata !2975, metadata !"__filedes", metadata !2978, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2945} ; [ DW_TAG_member ]
!2983 = metadata !{i32 589837, metadata !2975, metadata !"__bufstart", metadata !2978, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2984 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2959} ; [ DW_TAG_pointer_type ]
!2985 = metadata !{i32 589837, metadata !2975, metadata !"__bufend", metadata !2978, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2986 = metadata !{i32 589837, metadata !2975, metadata !"__bufpos", metadata !2978, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2987 = metadata !{i32 589837, metadata !2975, metadata !"__bufread", metadata !2978, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2988 = metadata !{i32 589837, metadata !2975, metadata !"__bufgetc_u", metadata !2978, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2989 = metadata !{i32 589837, metadata !2975, metadata !"__bufputc_u", metadata !2978, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2984} ; [ DW_TAG_member ]
!2990 = metadata !{i32 589837, metadata !2975, metadata !"__nextopen", metadata !2978, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2991} ; [ DW_TAG_member ]
!2991 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2975} ; [ DW_TAG_pointer_type ]
!2992 = metadata !{i32 589837, metadata !2975, metadata !"__ungot", metadata !2978, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2993} ; [ DW_TAG_member ]
!2993 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2994, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2994 = metadata !{i32 589846, metadata !2995, metadata !"wchar_t", metadata !2995, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2945} ; [ DW_TAG_typedef ]
!2995 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2941} ; [ DW_TAG_file_type ]
!2996 = metadata !{i32 589837, metadata !2975, metadata !"__state", metadata !2978, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2997} ; [ DW_TAG_member ]
!2997 = metadata !{i32 589846, metadata !2998, metadata !"__mbstate_t", metadata !2998, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2999} ; [ DW_TAG_typedef ]
!2998 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2941} ; [ DW_TAG_file_type ]
!2999 = metadata !{i32 589843, metadata !2940, metadata !"", metadata !2998, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !3000, i32 0, null} ; [ DW_TAG_structure_type ]
!3000 = metadata !{metadata !3001, metadata !3002}
!3001 = metadata !{i32 589837, metadata !2999, metadata !"__mask", metadata !2998, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2994} ; [ DW_TAG_member ]
!3002 = metadata !{i32 589837, metadata !2999, metadata !"__wc", metadata !2998, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2994} ; [ DW_TAG_member ]
!3003 = metadata !{i32 589837, metadata !2967, metadata !"nread", metadata !2942, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2945} ; [ DW_TAG_member ]
!3004 = metadata !{i32 589837, metadata !2967, metadata !"width", metadata !2942, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2945} ; [ DW_TAG_member ]
!3005 = metadata !{i32 589837, metadata !2967, metadata !"app_ungot", metadata !2942, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2994} ; [ DW_TAG_member ]
!3006 = metadata !{i32 589837, metadata !2967, metadata !"ungot_wchar_width", metadata !2942, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2959} ; [ DW_TAG_member ]
!3007 = metadata !{i32 589837, metadata !2967, metadata !"ungot_flag", metadata !2942, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !3008} ; [ DW_TAG_member ]
!3008 = metadata !{i32 589860, metadata !2940, metadata !"char", metadata !2940, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3009 = metadata !{i32 589837, metadata !2967, metadata !"ungot_wflag", metadata !2942, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !3008} ; [ DW_TAG_member ]
!3010 = metadata !{i32 589837, metadata !2967, metadata !"mb_fail", metadata !2942, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !3008} ; [ DW_TAG_member ]
!3011 = metadata !{i32 589837, metadata !2967, metadata !"mbstate", metadata !2942, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !3012} ; [ DW_TAG_member ]
!3012 = metadata !{i32 589846, metadata !2998, metadata !"mbstate_t", metadata !2998, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2999} ; [ DW_TAG_typedef ]
!3013 = metadata !{i32 589837, metadata !2967, metadata !"wc", metadata !2942, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !3014} ; [ DW_TAG_member ]
!3014 = metadata !{i32 589846, metadata !2995, metadata !"wint_t", metadata !2995, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !3015} ; [ DW_TAG_typedef ]
!3015 = metadata !{i32 589860, metadata !2940, metadata !"unsigned int", metadata !2940, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3016 = metadata !{i32 589837, metadata !2967, metadata !"ungot_wchar", metadata !2942, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !3014} ; [ DW_TAG_member ]
!3017 = metadata !{i32 589837, metadata !2967, metadata !"sc_getc", metadata !2942, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !3018} ; [ DW_TAG_member ]
!3018 = metadata !{i32 589839, metadata !2940, metadata !"", metadata !2940, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3019} ; [ DW_TAG_pointer_type ]
!3019 = metadata !{i32 589845, metadata !2940, metadata !"", metadata !2940, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3020, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3020 = metadata !{metadata !2945, metadata !2966}
!3021 = metadata !{i32 589837, metadata !2967, metadata !"decpt", metadata !2942, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2957} ; [ DW_TAG_member ]
!3022 = metadata !{i32 589837, metadata !2967, metadata !"decpt_len", metadata !2942, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2945} ; [ DW_TAG_member ]
!3023 = metadata !{i32 589837, metadata !2967, metadata !"decpt_wc", metadata !2942, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2994} ; [ DW_TAG_member ]
!3024 = metadata !{i32 589837, metadata !2967, metadata !"fake_decpt", metadata !2942, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2957} ; [ DW_TAG_member ]
!3025 = metadata !{i32 589870, i32 0, metadata !3026, metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !3028, i32 830, metadata !3029, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%st
!3026 = metadata !{i32 589865, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !3027} ; [ DW_TAG_file_type ]
!3027 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!3028 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !3027} ; [ DW_TAG_file_type ]
!3029 = metadata !{i32 589845, metadata !3026, metadata !"", metadata !3026, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3030, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3030 = metadata !{metadata !3031, metadata !3032}
!3031 = metadata !{i32 589860, metadata !3026, metadata !"int", metadata !3026, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3032 = metadata !{i32 589839, metadata !3026, metadata !"", metadata !3026, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3033} ; [ DW_TAG_pointer_type ]
!3033 = metadata !{i32 589846, metadata !3028, metadata !"psfs_t", metadata !3028, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !3034} ; [ DW_TAG_typedef ]
!3034 = metadata !{i32 589843, metadata !3026, metadata !"", metadata !3028, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !3035, i32 0, null} ; [ DW_TAG_structure_type ]
!3035 = metadata !{metadata !3036, metadata !3039, metadata !3040, metadata !3041, metadata !3042, metadata !3046, metadata !3047, metadata !3048, metadata !3049, metadata !3050, metadata !3051}
!3036 = metadata !{i32 589837, metadata !3034, metadata !"pos_args", metadata !3028, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !3037} ; [ DW_TAG_member ]
!3037 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !3038, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!3038 = metadata !{i32 589839, metadata !3026, metadata !"", metadata !3026, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3039 = metadata !{i32 589837, metadata !3034, metadata !"num_pos_args", metadata !3028, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3040 = metadata !{i32 589837, metadata !3034, metadata !"cur_pos_arg", metadata !3028, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3041 = metadata !{i32 589837, metadata !3034, metadata !"cur_ptr", metadata !3028, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !3038} ; [ DW_TAG_member ]
!3042 = metadata !{i32 589837, metadata !3034, metadata !"fmt", metadata !3028, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !3043} ; [ DW_TAG_member ]
!3043 = metadata !{i32 589839, metadata !3026, metadata !"", metadata !3026, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3044} ; [ DW_TAG_pointer_type ]
!3044 = metadata !{i32 589862, metadata !3026, metadata !"", metadata !3026, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3045} ; [ DW_TAG_const_type ]
!3045 = metadata !{i32 589860, metadata !3026, metadata !"unsigned char", metadata !3026, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3046 = metadata !{i32 589837, metadata !3034, metadata !"cnt", metadata !3028, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3047 = metadata !{i32 589837, metadata !3034, metadata !"dataargtype", metadata !3028, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3048 = metadata !{i32 589837, metadata !3034, metadata !"conv_num", metadata !3028, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3049 = metadata !{i32 589837, metadata !3034, metadata !"max_width", metadata !3028, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !3031} ; [ DW_TAG_member ]
!3050 = metadata !{i32 589837, metadata !3034, metadata !"store", metadata !3028, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !3045} ; [ DW_TAG_member ]
!3051 = metadata !{i32 589837, metadata !3034, metadata !"flags", metadata !3028, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !3045} ; [ DW_TAG_member ]
!3052 = metadata !{i32 589870, i32 0, metadata !3053, metadata !"ungetc", metadata !"ungetc", metadata !"ungetc", metadata !3053, i32 29, metadata !3055, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @ungetc} ; [ DW_TAG_subpro
!3053 = metadata !{i32 589865, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !3054} ; [ DW_TAG_file_type ]
!3054 = metadata !{i32 589841, i32 0, i32 1, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!3055 = metadata !{i32 589845, metadata !3053, metadata !"", metadata !3053, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3056, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3056 = metadata !{metadata !3057, metadata !3057, metadata !3058}
!3057 = metadata !{i32 589860, metadata !3053, metadata !"int", metadata !3053, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3058 = metadata !{i32 589839, metadata !3053, metadata !"", metadata !3053, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3059} ; [ DW_TAG_pointer_type ]
!3059 = metadata !{i32 589846, metadata !3060, metadata !"FILE", metadata !3060, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !3061} ; [ DW_TAG_typedef ]
!3060 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !3054} ; [ DW_TAG_file_type ]
!3061 = metadata !{i32 589843, metadata !3053, metadata !"__STDIO_FILE_STRUCT", metadata !3060, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !3062, i32 0, null} ; [ DW_TAG_structure_type ]
!3062 = metadata !{metadata !3063, metadata !3066, metadata !3069, metadata !3070, metadata !3072, metadata !3073, metadata !3074, metadata !3075, metadata !3076, metadata !3077, metadata !3079, metadata !3083}
!3063 = metadata !{i32 589837, metadata !3061, metadata !"__modeflags", metadata !3064, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !3065} ; [ DW_TAG_member ]
!3064 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !3054} ; [ DW_TAG_file_type ]
!3065 = metadata !{i32 589860, metadata !3053, metadata !"short unsigned int", metadata !3053, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3066 = metadata !{i32 589837, metadata !3061, metadata !"__ungot_width", metadata !3064, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !3067} ; [ DW_TAG_member ]
!3067 = metadata !{i32 589825, metadata !3053, metadata !"", metadata !3053, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !3068, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3068 = metadata !{i32 589860, metadata !3053, metadata !"unsigned char", metadata !3053, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3069 = metadata !{i32 589837, metadata !3061, metadata !"__filedes", metadata !3064, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !3057} ; [ DW_TAG_member ]
!3070 = metadata !{i32 589837, metadata !3061, metadata !"__bufstart", metadata !3064, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3071 = metadata !{i32 589839, metadata !3053, metadata !"", metadata !3053, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3068} ; [ DW_TAG_pointer_type ]
!3072 = metadata !{i32 589837, metadata !3061, metadata !"__bufend", metadata !3064, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3073 = metadata !{i32 589837, metadata !3061, metadata !"__bufpos", metadata !3064, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3074 = metadata !{i32 589837, metadata !3061, metadata !"__bufread", metadata !3064, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3075 = metadata !{i32 589837, metadata !3061, metadata !"__bufgetc_u", metadata !3064, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3076 = metadata !{i32 589837, metadata !3061, metadata !"__bufputc_u", metadata !3064, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !3071} ; [ DW_TAG_member ]
!3077 = metadata !{i32 589837, metadata !3061, metadata !"__nextopen", metadata !3064, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !3078} ; [ DW_TAG_member ]
!3078 = metadata !{i32 589839, metadata !3053, metadata !"", metadata !3053, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3061} ; [ DW_TAG_pointer_type ]
!3079 = metadata !{i32 589837, metadata !3061, metadata !"__ungot", metadata !3064, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !3080} ; [ DW_TAG_member ]
!3080 = metadata !{i32 589825, metadata !3053, metadata !"", metadata !3053, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3081, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3081 = metadata !{i32 589846, metadata !3082, metadata !"wchar_t", metadata !3082, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3057} ; [ DW_TAG_typedef ]
!3082 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3054} ; [ DW_TAG_file_type ]
!3083 = metadata !{i32 589837, metadata !3061, metadata !"__state", metadata !3064, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !3084} ; [ DW_TAG_member ]
!3084 = metadata !{i32 589846, metadata !3085, metadata !"__mbstate_t", metadata !3085, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !3086} ; [ DW_TAG_typedef ]
!3085 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !3054} ; [ DW_TAG_file_type ]
!3086 = metadata !{i32 589843, metadata !3053, metadata !"", metadata !3085, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !3087, i32 0, null} ; [ DW_TAG_structure_type ]
!3087 = metadata !{metadata !3088, metadata !3089}
!3088 = metadata !{i32 589837, metadata !3086, metadata !"__mask", metadata !3085, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3081} ; [ DW_TAG_member ]
!3089 = metadata !{i32 589837, metadata !3086, metadata !"__wc", metadata !3085, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3081} ; [ DW_TAG_member ]
!3090 = metadata !{i32 589870, i32 0, metadata !3091, metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !3093, i32 222, metadata !3094, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, x86_fp80 (i8*, i8**, i3
!3091 = metadata !{i32 589865, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !3092} ; [ DW_TAG_file_type ]
!3092 = metadata !{i32 589841, i32 0, i32 1, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!3093 = metadata !{i32 589865, metadata !"_strtod.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !3092} ; [ DW_TAG_file_type ]
!3094 = metadata !{i32 589845, metadata !3091, metadata !"", metadata !3091, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3095, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3095 = metadata !{metadata !3096, metadata !3099, metadata !3102, metadata !3104}
!3096 = metadata !{i32 589846, metadata !3097, metadata !"__fpmax_t", metadata !3097, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3098} ; [ DW_TAG_typedef ]
!3097 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !3092} ; [ DW_TAG_file_type ]
!3098 = metadata !{i32 589860, metadata !3091, metadata !"long double", metadata !3091, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!3099 = metadata !{i32 589839, metadata !3091, metadata !"", metadata !3091, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3100} ; [ DW_TAG_pointer_type ]
!3100 = metadata !{i32 589862, metadata !3091, metadata !"", metadata !3091, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3101} ; [ DW_TAG_const_type ]
!3101 = metadata !{i32 589860, metadata !3091, metadata !"char", metadata !3091, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3102 = metadata !{i32 589839, metadata !3091, metadata !"", metadata !3091, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3103} ; [ DW_TAG_pointer_type ]
!3103 = metadata !{i32 589839, metadata !3091, metadata !"", metadata !3091, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3101} ; [ DW_TAG_pointer_type ]
!3104 = metadata !{i32 589860, metadata !3091, metadata !"int", metadata !3091, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3105 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__get_file", metadata !"__get_file", metadata !"__get_file", metadata !3106, i32 143, metadata !3108, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_file_t* (i32)* @__
!3106 = metadata !{i32 589865, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3107} ; [ DW_TAG_file_type ]
!3107 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile_un
!3108 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3109, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3109 = metadata !{metadata !3110, metadata !3116}
!3110 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3111} ; [ DW_TAG_pointer_type ]
!3111 = metadata !{i32 589846, metadata !3112, metadata !"exe_file_t", metadata !3112, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3113} ; [ DW_TAG_typedef ]
!3112 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3107} ; [ DW_TAG_file_type ]
!3113 = metadata !{i32 589843, metadata !3106, metadata !"exe_file_t", metadata !3112, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !3114, i32 0, null} ; [ DW_TAG_structure_type ]
!3114 = metadata !{metadata !3115, metadata !3117, metadata !3119, metadata !3123, metadata !3195, metadata !3196, metadata !3197}
!3115 = metadata !{i32 589837, metadata !3113, metadata !"fd", metadata !3112, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3116 = metadata !{i32 589860, metadata !3106, metadata !"int", metadata !3106, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3117 = metadata !{i32 589837, metadata !3113, metadata !"flags", metadata !3112, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3118} ; [ DW_TAG_member ]
!3118 = metadata !{i32 589860, metadata !3106, metadata !"unsigned int", metadata !3106, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3119 = metadata !{i32 589837, metadata !3113, metadata !"off", metadata !3112, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3120} ; [ DW_TAG_member ]
!3120 = metadata !{i32 589846, metadata !3121, metadata !"off64_t", metadata !3121, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3121 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3107} ; [ DW_TAG_file_type ]
!3122 = metadata !{i32 589860, metadata !3106, metadata !"long int", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3123 = metadata !{i32 589837, metadata !3113, metadata !"dfile", metadata !3112, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3124} ; [ DW_TAG_member ]
!3124 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3125} ; [ DW_TAG_pointer_type ]
!3125 = metadata !{i32 589846, metadata !3112, metadata !"exe_disk_file_t", metadata !3112, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3126} ; [ DW_TAG_typedef ]
!3126 = metadata !{i32 589843, metadata !3106, metadata !"", metadata !3112, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3127, i32 0, null} ; [ DW_TAG_structure_type ]
!3127 = metadata !{metadata !3128, metadata !3129, metadata !3132, metadata !3133, metadata !3174}
!3128 = metadata !{i32 589837, metadata !3126, metadata !"size", metadata !3112, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3118} ; [ DW_TAG_member ]
!3129 = metadata !{i32 589837, metadata !3126, metadata !"contents", metadata !3112, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3130 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3131} ; [ DW_TAG_pointer_type ]
!3131 = metadata !{i32 589860, metadata !3106, metadata !"char", metadata !3106, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3132 = metadata !{i32 589837, metadata !3126, metadata !"path", metadata !3112, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3133 = metadata !{i32 589837, metadata !3126, metadata !"stat", metadata !3112, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3134} ; [ DW_TAG_member ]
!3134 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3135} ; [ DW_TAG_pointer_type ]
!3135 = metadata !{i32 589843, metadata !3106, metadata !"stat64", metadata !3112, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3136, i32 0, null} ; [ DW_TAG_structure_type ]
!3136 = metadata !{metadata !3137, metadata !3142, metadata !3144, metadata !3146, metadata !3148, metadata !3150, metadata !3152, metadata !3153, metadata !3154, metadata !3156, metadata !3158, metadata !3160, metadata !3168, metadata !3169, metadata !3
!3137 = metadata !{i32 589837, metadata !3135, metadata !"st_dev", metadata !3138, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3139} ; [ DW_TAG_member ]
!3138 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3139 = metadata !{i32 589846, metadata !3140, metadata !"__dev_t", metadata !3140, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3140 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3141 = metadata !{i32 589860, metadata !3106, metadata !"long unsigned int", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3142 = metadata !{i32 589837, metadata !3135, metadata !"st_ino", metadata !3138, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3143} ; [ DW_TAG_member ]
!3143 = metadata !{i32 589846, metadata !3140, metadata !"__ino64_t", metadata !3140, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3144 = metadata !{i32 589837, metadata !3135, metadata !"st_nlink", metadata !3138, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3145} ; [ DW_TAG_member ]
!3145 = metadata !{i32 589846, metadata !3140, metadata !"__nlink_t", metadata !3140, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3146 = metadata !{i32 589837, metadata !3135, metadata !"st_mode", metadata !3138, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3147} ; [ DW_TAG_member ]
!3147 = metadata !{i32 589846, metadata !3140, metadata !"__mode_t", metadata !3140, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3148 = metadata !{i32 589837, metadata !3135, metadata !"st_uid", metadata !3138, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3149} ; [ DW_TAG_member ]
!3149 = metadata !{i32 589846, metadata !3140, metadata !"__uid_t", metadata !3140, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3150 = metadata !{i32 589837, metadata !3135, metadata !"st_gid", metadata !3138, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3151} ; [ DW_TAG_member ]
!3151 = metadata !{i32 589846, metadata !3140, metadata !"__gid_t", metadata !3140, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3152 = metadata !{i32 589837, metadata !3135, metadata !"__pad0", metadata !3138, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3153 = metadata !{i32 589837, metadata !3135, metadata !"st_rdev", metadata !3138, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3139} ; [ DW_TAG_member ]
!3154 = metadata !{i32 589837, metadata !3135, metadata !"st_size", metadata !3138, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3155} ; [ DW_TAG_member ]
!3155 = metadata !{i32 589846, metadata !3140, metadata !"__off_t", metadata !3140, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3156 = metadata !{i32 589837, metadata !3135, metadata !"st_blksize", metadata !3138, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3157} ; [ DW_TAG_member ]
!3157 = metadata !{i32 589846, metadata !3140, metadata !"__blksize_t", metadata !3140, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3158 = metadata !{i32 589837, metadata !3135, metadata !"st_blocks", metadata !3138, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3159} ; [ DW_TAG_member ]
!3159 = metadata !{i32 589846, metadata !3140, metadata !"__blkcnt64_t", metadata !3140, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3160 = metadata !{i32 589837, metadata !3135, metadata !"st_atim", metadata !3138, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3161 = metadata !{i32 589843, metadata !3106, metadata !"timespec", metadata !3162, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3163, i32 0, null} ; [ DW_TAG_structure_type ]
!3162 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3107} ; [ DW_TAG_file_type ]
!3163 = metadata !{metadata !3164, metadata !3166}
!3164 = metadata !{i32 589837, metadata !3161, metadata !"tv_sec", metadata !3162, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3165} ; [ DW_TAG_member ]
!3165 = metadata !{i32 589846, metadata !3140, metadata !"__time_t", metadata !3140, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3166 = metadata !{i32 589837, metadata !3161, metadata !"tv_nsec", metadata !3162, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3167} ; [ DW_TAG_member ]
!3167 = metadata !{i32 589846, metadata !3140, metadata !"__syscall_slong_t", metadata !3140, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3168 = metadata !{i32 589837, metadata !3135, metadata !"st_mtim", metadata !3138, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3169 = metadata !{i32 589837, metadata !3135, metadata !"st_ctim", metadata !3138, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3170 = metadata !{i32 589837, metadata !3135, metadata !"__glibc_reserved", metadata !3138, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3171} ; [ DW_TAG_member ]
!3171 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3167, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!3172 = metadata !{metadata !3173}
!3173 = metadata !{i32 589857, i64 0, i64 2}      ; [ DW_TAG_subrange_type ]
!3174 = metadata !{i32 589837, metadata !3126, metadata !"src", metadata !3112, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3175} ; [ DW_TAG_member ]
!3175 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3176} ; [ DW_TAG_pointer_type ]
!3176 = metadata !{i32 589846, metadata !3112, metadata !"exe_sockaddr_t", metadata !3112, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3177} ; [ DW_TAG_typedef ]
!3177 = metadata !{i32 589843, metadata !3106, metadata !"", metadata !3112, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3178, i32 0, null} ; [ DW_TAG_structure_type ]
!3178 = metadata !{metadata !3179, metadata !3192}
!3179 = metadata !{i32 589837, metadata !3177, metadata !"addr", metadata !3112, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3180} ; [ DW_TAG_member ]
!3180 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3181} ; [ DW_TAG_pointer_type ]
!3181 = metadata !{i32 589843, metadata !3106, metadata !"sockaddr_storage", metadata !3182, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3183, i32 0, null} ; [ DW_TAG_structure_type ]
!3182 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3183 = metadata !{metadata !3184, metadata !3187, metadata !3188}
!3184 = metadata !{i32 589837, metadata !3181, metadata !"ss_family", metadata !3182, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3185} ; [ DW_TAG_member ]
!3185 = metadata !{i32 589846, metadata !3182, metadata !"sa_family_t", metadata !3182, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3186} ; [ DW_TAG_typedef ]
!3186 = metadata !{i32 589860, metadata !3106, metadata !"short unsigned int", metadata !3106, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3187 = metadata !{i32 589837, metadata !3181, metadata !"__ss_align", metadata !3182, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3141} ; [ DW_TAG_member ]
!3188 = metadata !{i32 589837, metadata !3181, metadata !"__ss_padding", metadata !3182, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3189} ; [ DW_TAG_member ]
!3189 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3131, metadata !3190, i32 0, null} ; [ DW_TAG_array_type ]
!3190 = metadata !{metadata !3191}
!3191 = metadata !{i32 589857, i64 0, i64 111}    ; [ DW_TAG_subrange_type ]
!3192 = metadata !{i32 589837, metadata !3177, metadata !"addrlen", metadata !3112, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3193} ; [ DW_TAG_member ]
!3193 = metadata !{i32 589846, metadata !3194, metadata !"socklen_t", metadata !3194, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3194 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3195 = metadata !{i32 589837, metadata !3113, metadata !"local", metadata !3112, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3176} ; [ DW_TAG_member ]
!3196 = metadata !{i32 589837, metadata !3113, metadata !"foreign", metadata !3112, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3175} ; [ DW_TAG_member ]
!3197 = metadata !{i32 589837, metadata !3113, metadata !"domain", metadata !3112, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3198 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"umask", metadata !"umask", metadata !"umask", metadata !3106, i32 203, metadata !3199, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @umask} ; [ DW_TAG_subprogram ]
!3199 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3200, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3200 = metadata !{metadata !3201, metadata !3201}
!3201 = metadata !{i32 589846, metadata !3121, metadata !"mode_t", metadata !3121, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3202 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"has_permission", metadata !"has_permission", metadata !"", metadata !3106, i32 212, metadata !3203, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3203 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3204, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3204 = metadata !{metadata !3116, metadata !3116, metadata !3134}
!3205 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"sendfile", metadata !"sendfile", metadata !"sendfile", metadata !3106, i32 2483, metadata !3206, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @sendfil
!3206 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3207, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3207 = metadata !{metadata !3208, metadata !3116, metadata !3116, metadata !3209, metadata !3211}
!3208 = metadata !{i32 589846, metadata !3121, metadata !"ssize_t", metadata !3121, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3209 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3210} ; [ DW_TAG_pointer_type ]
!3210 = metadata !{i32 589846, metadata !3121, metadata !"off_t", metadata !3121, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3211 = metadata !{i32 589846, metadata !3121, metadata !"size_t", metadata !3121, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3212 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"sendfile64", metadata !"sendfile64", metadata !"sendfile64", metadata !3106, i32 2499, metadata !3206, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @s
!3213 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fsync", metadata !"fsync", metadata !"fsync", metadata !3106, i32 1715, metadata !3214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fsync} ; [ DW_TAG_subprogram ]
!3214 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3215, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3215 = metadata !{metadata !3116, metadata !3116}
!3216 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"chroot", metadata !"chroot", metadata !"chroot", metadata !3106, i32 2075, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chroot} ; [ DW_TAG_subprogram
!3217 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3218, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3218 = metadata !{metadata !3116, metadata !3219}
!3219 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3220} ; [ DW_TAG_pointer_type ]
!3220 = metadata !{i32 589862, metadata !3106, metadata !"", metadata !3106, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3131} ; [ DW_TAG_const_type ]
!3221 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fstatfs", metadata !"fstatfs", metadata !"fstatfs", metadata !3106, i32 1695, metadata !3222, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.statfs*)* @fstatfs} 
!3222 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3223, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3223 = metadata !{metadata !3116, metadata !3116, metadata !3224}
!3224 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3225} ; [ DW_TAG_pointer_type ]
!3225 = metadata !{i32 589843, metadata !3106, metadata !"statfs", metadata !3226, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !3227, i32 0, null} ; [ DW_TAG_structure_type ]
!3226 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3227 = metadata !{metadata !3228, metadata !3230, metadata !3231, metadata !3233, metadata !3234, metadata !3235, metadata !3237, metadata !3238, metadata !3244, metadata !3245, metadata !3246, metadata !3247}
!3228 = metadata !{i32 589837, metadata !3225, metadata !"f_type", metadata !3226, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !3229} ; [ DW_TAG_member ]
!3229 = metadata !{i32 589846, metadata !3140, metadata !"__fsword_t", metadata !3140, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3230 = metadata !{i32 589837, metadata !3225, metadata !"f_bsize", metadata !3226, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !3229} ; [ DW_TAG_member ]
!3231 = metadata !{i32 589837, metadata !3225, metadata !"f_blocks", metadata !3226, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3232} ; [ DW_TAG_member ]
!3232 = metadata !{i32 589846, metadata !3140, metadata !"__fsblkcnt_t", metadata !3140, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3233 = metadata !{i32 589837, metadata !3225, metadata !"f_bfree", metadata !3226, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3232} ; [ DW_TAG_member ]
!3234 = metadata !{i32 589837, metadata !3225, metadata !"f_bavail", metadata !3226, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3232} ; [ DW_TAG_member ]
!3235 = metadata !{i32 589837, metadata !3225, metadata !"f_files", metadata !3226, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !3236} ; [ DW_TAG_member ]
!3236 = metadata !{i32 589846, metadata !3140, metadata !"__fsfilcnt_t", metadata !3140, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3237 = metadata !{i32 589837, metadata !3225, metadata !"f_ffree", metadata !3226, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !3236} ; [ DW_TAG_member ]
!3238 = metadata !{i32 589837, metadata !3225, metadata !"f_fsid", metadata !3226, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !3239} ; [ DW_TAG_member ]
!3239 = metadata !{i32 589846, metadata !3140, metadata !"__fsid_t", metadata !3140, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !3240} ; [ DW_TAG_typedef ]
!3240 = metadata !{i32 589843, metadata !3106, metadata !"", metadata !3140, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !3241, i32 0, null} ; [ DW_TAG_structure_type ]
!3241 = metadata !{metadata !3242}
!3242 = metadata !{i32 589837, metadata !3240, metadata !"__val", metadata !3140, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !3243} ; [ DW_TAG_member ]
!3243 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3116, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3244 = metadata !{i32 589837, metadata !3225, metadata !"f_namelen", metadata !3226, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !3229} ; [ DW_TAG_member ]
!3245 = metadata !{i32 589837, metadata !3225, metadata !"f_frsize", metadata !3226, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !3229} ; [ DW_TAG_member ]
!3246 = metadata !{i32 589837, metadata !3225, metadata !"f_flags", metadata !3226, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !3229} ; [ DW_TAG_member ]
!3247 = metadata !{i32 589837, metadata !3225, metadata !"f_spare", metadata !3226, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !3248} ; [ DW_TAG_member ]
!3248 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !3229, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!3249 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fcntl", metadata !"fcntl", metadata !"fcntl", metadata !3106, i32 1611, metadata !3250, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, ...)* @fcntl} ; [ DW_TAG_subp
!3250 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3251, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3251 = metadata !{metadata !3116, metadata !3116, metadata !3116}
!3252 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"futimens", metadata !"futimens", metadata !"futimens", metadata !3106, i32 1169, metadata !3253, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.timespec*)* @futi
!3253 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3254, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3254 = metadata !{metadata !3116, metadata !3116, metadata !3255}
!3255 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3256} ; [ DW_TAG_pointer_type ]
!3256 = metadata !{i32 589862, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3161} ; [ DW_TAG_const_type ]
!3257 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__df_chown", metadata !"__df_chown", metadata !"", metadata !3106, i32 977, metadata !3258, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3258 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3259, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3259 = metadata !{metadata !3116, metadata !3124, metadata !3260, metadata !3261}
!3260 = metadata !{i32 589846, metadata !3121, metadata !"uid_t", metadata !3121, i32 86, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3261 = metadata !{i32 589846, metadata !3121, metadata !"gid_t", metadata !3121, i32 70, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!3262 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fchown", metadata !"fchown", metadata !"fchown", metadata !3106, i32 996, metadata !3263, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @fchown} ; [ DW_TAG_s
!3263 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3264, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3264 = metadata !{metadata !3116, metadata !3116, metadata !3260, metadata !3261}
!3265 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fchdir", metadata !"fchdir", metadata !"fchdir", metadata !3106, i32 811, metadata !3214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fchdir} ; [ DW_TAG_subprogram 
!3266 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"ioctl", metadata !"ioctl", metadata !"ioctl", metadata !3106, i32 2303, metadata !3267, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64, ...)* @ioctl} ; [ DW_TAG_subp
!3267 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3268, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3268 = metadata !{metadata !3116, metadata !3116, metadata !3141}
!3269 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !3106, i32 2149, metadata !3270, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%s
!3270 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3271, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3271 = metadata !{null, metadata !3110}
!3272 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !3106, i32 2127, metadata !3273, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.exe_file_t
!3273 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3274, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3274 = metadata !{metadata !3116, metadata !3275}
!3275 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3110} ; [ DW_TAG_pointer_type ]
!3276 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"select", metadata !"select", metadata !"select", metadata !3106, i32 1875, metadata !3277, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.__sigset_t*, %struct.__
!3277 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3278, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3278 = metadata !{metadata !3116, metadata !3116, metadata !3279, metadata !3279, metadata !3279, metadata !3287}
!3279 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3280} ; [ DW_TAG_pointer_type ]
!3280 = metadata !{i32 589846, metadata !3281, metadata !"fd_set", metadata !3281, i32 82, i64 0, i64 0, i64 0, i32 0, metadata !3282} ; [ DW_TAG_typedef ]
!3281 = metadata !{i32 589865, metadata !"select.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3107} ; [ DW_TAG_file_type ]
!3282 = metadata !{i32 589843, metadata !3106, metadata !"", metadata !3281, i32 65, i64 1024, i64 64, i64 0, i32 0, null, metadata !3283, i32 0, null} ; [ DW_TAG_structure_type ]
!3283 = metadata !{metadata !3284}
!3284 = metadata !{i32 589837, metadata !3282, metadata !"fds_bits", metadata !3281, i32 69, i64 1024, i64 64, i64 0, i32 0, metadata !3285} ; [ DW_TAG_member ]
!3285 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3286, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!3286 = metadata !{i32 589846, metadata !3281, metadata !"__fd_mask", metadata !3281, i32 65, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3287 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3288} ; [ DW_TAG_pointer_type ]
!3288 = metadata !{i32 589843, metadata !3106, metadata !"timeval", metadata !3289, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !3290, i32 0, null} ; [ DW_TAG_structure_type ]
!3289 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3290 = metadata !{metadata !3291, metadata !3292}
!3291 = metadata !{i32 589837, metadata !3288, metadata !"tv_sec", metadata !3289, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3165} ; [ DW_TAG_member ]
!3292 = metadata !{i32 589837, metadata !3288, metadata !"tv_usec", metadata !3289, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !3293} ; [ DW_TAG_member ]
!3293 = metadata !{i32 589846, metadata !3140, metadata !"__suseconds_t", metadata !3140, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3294 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"close", metadata !"close", metadata !"close", metadata !3106, i32 412, metadata !3214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @close} ; [ DW_TAG_subprogram ]
!3295 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"dup2", metadata !"dup2", metadata !"dup2", metadata !3106, i32 1731, metadata !3250, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @dup2} ; [ DW_TAG_subprogram ]
!3296 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"dup", metadata !"dup", metadata !"dup", metadata !3106, i32 1779, metadata !3214, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @dup} ; [ DW_TAG_subprogram ]
!3297 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !3106, i32 1367, metadata !3298, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.di
!3298 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3299, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3299 = metadata !{metadata !3116, metadata !3118, metadata !3300, metadata !3118}
!3300 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3301} ; [ DW_TAG_pointer_type ]
!3301 = metadata !{i32 589843, metadata !3106, metadata !"dirent64", metadata !3302, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !3303, i32 0, null} ; [ DW_TAG_structure_type ]
!3302 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3303 = metadata !{metadata !3304, metadata !3305, metadata !3307, metadata !3308, metadata !3310}
!3304 = metadata !{i32 589837, metadata !3301, metadata !"d_ino", metadata !3302, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3143} ; [ DW_TAG_member ]
!3305 = metadata !{i32 589837, metadata !3301, metadata !"d_off", metadata !3302, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !3306} ; [ DW_TAG_member ]
!3306 = metadata !{i32 589846, metadata !3140, metadata !"__off64_t", metadata !3140, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3307 = metadata !{i32 589837, metadata !3301, metadata !"d_reclen", metadata !3302, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !3186} ; [ DW_TAG_member ]
!3308 = metadata !{i32 589837, metadata !3301, metadata !"d_type", metadata !3302, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !3309} ; [ DW_TAG_member ]
!3309 = metadata !{i32 589860, metadata !3106, metadata !"unsigned char", metadata !3106, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3310 = metadata !{i32 589837, metadata !3301, metadata !"d_name", metadata !3302, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !3311} ; [ DW_TAG_member ]
!3311 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3131, metadata !833, i32 0, null} ; [ DW_TAG_array_type ]
!3312 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !3106, i32 2232, metadata !3313, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3313 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3314, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3314 = metadata !{metadata !3208, metadata !3110, metadata !3315, metadata !3116}
!3315 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3316} ; [ DW_TAG_pointer_type ]
!3316 = metadata !{i32 589862, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3317} ; [ DW_TAG_const_type ]
!3317 = metadata !{i32 589843, metadata !3106, metadata !"iovec", metadata !3318, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3319, i32 0, null} ; [ DW_TAG_structure_type ]
!3318 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!3319 = metadata !{metadata !3320, metadata !3322}
!3320 = metadata !{i32 589837, metadata !3317, metadata !"iov_base", metadata !3318, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3321} ; [ DW_TAG_member ]
!3321 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3322 = metadata !{i32 589837, metadata !3317, metadata !"iov_len", metadata !3318, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3211} ; [ DW_TAG_member ]
!3323 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"writev", metadata !"writev", metadata !"writev", metadata !3106, i32 2278, metadata !3324, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.iovec*, i32)* @writev} 
!3324 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3325, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3325 = metadata !{metadata !3208, metadata !3116, metadata !3315, metadata !3116}
!3326 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !3106, i32 1028, metadata !3203, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @__
!3327 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !3106, i32 2181, metadata !3313, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3328 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"munmap", metadata !"munmap", metadata !"munmap", metadata !3106, i32 909, metadata !3329, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i64)* @munmap} ; [ DW_TAG_subpro
!3329 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3330, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3330 = metadata !{metadata !3116, metadata !3321, metadata !3211}
!3331 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"pipe", metadata !"pipe", metadata !"pipe", metadata !3106, i32 2154, metadata !3332, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32*)* @pipe} ; [ DW_TAG_subprogram ]
!3332 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3333, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3333 = metadata !{metadata !3116, metadata !3334}
!3334 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3116} ; [ DW_TAG_pointer_type ]
!3335 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__concretize_ptr", metadata !"__concretize_ptr", metadata !"", metadata !3106, i32 2019, metadata !3336, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram 
!3336 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3337, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3337 = metadata !{metadata !3321, metadata !3321}
!3338 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__concretize_string", metadata !"__concretize_string", metadata !"", metadata !3106, i32 2032, metadata !3339, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3339 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3340, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3340 = metadata !{metadata !3219, metadata !3219}
!3341 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__get_sym_file_internal", metadata !"__get_sym_file_internal", metadata !"", metadata !3106, i32 61, metadata !3342, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_disk
!3342 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3343, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3343 = metadata !{metadata !3124, metadata !3219, metadata !3116, metadata !3344}
!3344 = metadata !{i32 589860, metadata !3106, metadata !"_Bool", metadata !3106, i32 0, i64 8, i64 8, i64 0, i32 0, i32 2} ; [ DW_TAG_base_type ]
!3345 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__get_sym_file", metadata !"__get_sym_file", metadata !"", metadata !3106, i32 56, metadata !3346, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3346 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3347, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3347 = metadata !{metadata !3124, metadata !3219}
!3348 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"utime", metadata !"utime", metadata !"utime", metadata !3106, i32 2108, metadata !3349, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @utime} ; [ DW_TAG_subprogra
!3349 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3350, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3350 = metadata !{metadata !3116, metadata !3219, metadata !3321}
!3351 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"readlink", metadata !"readlink", metadata !"readlink", metadata !3106, i32 1842, metadata !3352, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*, i8*, i64)* @readlink} ; [
!3352 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3353, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3353 = metadata !{metadata !3208, metadata !3219, metadata !3130, metadata !3211}
!3354 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"utimes", metadata !"utimes", metadata !"utimes", metadata !3106, i32 2090, metadata !3355, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.timespec*)* @utimes} ; 
!3355 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3356, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3356 = metadata !{metadata !3116, metadata !3219, metadata !3357}
!3357 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3358} ; [ DW_TAG_pointer_type ]
!3358 = metadata !{i32 589862, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3288} ; [ DW_TAG_const_type ]
!3359 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"unlink", metadata !"unlink", metadata !"unlink", metadata !3106, i32 1820, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @unlink} ; [ DW_TAG_subprogram
!3360 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"rmdir", metadata !"rmdir", metadata !"rmdir", metadata !3106, i32 1801, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @rmdir} ; [ DW_TAG_subprogram ]
!3361 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !3106, i32 1678, metadata !3362, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.statfs*)
!3362 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3363, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3363 = metadata !{metadata !3116, metadata !3219, metadata !3224}
!3364 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"openat", metadata !"openat", metadata !"openat", metadata !3106, i32 1228, metadata !3365, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, ...)* @openat} ; [ DW
!3365 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3366, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3366 = metadata !{metadata !3116, metadata !3116, metadata !3219, metadata !3116}
!3367 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"symlink", metadata !"symlink", metadata !"symlink", metadata !3106, i32 1209, metadata !3368, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @symlink} ; [ DW_TAG_s
!3368 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3369, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3369 = metadata !{metadata !3116, metadata !3219, metadata !3219}
!3370 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"link", metadata !"link", metadata !"link", metadata !3106, i32 1190, metadata !3368, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @link} ; [ DW_TAG_subprogram ]
!3371 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"futimesat", metadata !"futimesat", metadata !"futimesat", metadata !3106, i32 1139, metadata !3372, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.timespec*
!3372 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3373, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3373 = metadata !{metadata !3116, metadata !3116, metadata !3219, metadata !3357}
!3374 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"unlinkat", metadata !"unlinkat", metadata !"unlinkat", metadata !3106, i32 1106, metadata !3365, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32)* @unlinkat} ; [
!3375 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fstatat", metadata !"fstatat", metadata !"fstatat", metadata !3106, i32 1065, metadata !3376, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*, i32)* @f
!3376 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3377, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3377 = metadata !{metadata !3116, metadata !3116, metadata !3219, metadata !3378, metadata !3116}
!3378 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3379} ; [ DW_TAG_pointer_type ]
!3379 = metadata !{i32 589843, metadata !3106, metadata !"stat", metadata !3138, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3380, i32 0, null} ; [ DW_TAG_structure_type ]
!3380 = metadata !{metadata !3381, metadata !3382, metadata !3384, metadata !3385, metadata !3386, metadata !3387, metadata !3388, metadata !3389, metadata !3390, metadata !3391, metadata !3392, metadata !3394, metadata !3395, metadata !3396, metadata !3
!3381 = metadata !{i32 589837, metadata !3379, metadata !"st_dev", metadata !3138, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3139} ; [ DW_TAG_member ]
!3382 = metadata !{i32 589837, metadata !3379, metadata !"st_ino", metadata !3138, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3383} ; [ DW_TAG_member ]
!3383 = metadata !{i32 589846, metadata !3140, metadata !"__ino_t", metadata !3140, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3141} ; [ DW_TAG_typedef ]
!3384 = metadata !{i32 589837, metadata !3379, metadata !"st_nlink", metadata !3138, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3145} ; [ DW_TAG_member ]
!3385 = metadata !{i32 589837, metadata !3379, metadata !"st_mode", metadata !3138, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3147} ; [ DW_TAG_member ]
!3386 = metadata !{i32 589837, metadata !3379, metadata !"st_uid", metadata !3138, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3149} ; [ DW_TAG_member ]
!3387 = metadata !{i32 589837, metadata !3379, metadata !"st_gid", metadata !3138, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3151} ; [ DW_TAG_member ]
!3388 = metadata !{i32 589837, metadata !3379, metadata !"__pad0", metadata !3138, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3389 = metadata !{i32 589837, metadata !3379, metadata !"st_rdev", metadata !3138, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3139} ; [ DW_TAG_member ]
!3390 = metadata !{i32 589837, metadata !3379, metadata !"st_size", metadata !3138, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3155} ; [ DW_TAG_member ]
!3391 = metadata !{i32 589837, metadata !3379, metadata !"st_blksize", metadata !3138, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3157} ; [ DW_TAG_member ]
!3392 = metadata !{i32 589837, metadata !3379, metadata !"st_blocks", metadata !3138, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3393} ; [ DW_TAG_member ]
!3393 = metadata !{i32 589846, metadata !3140, metadata !"__blkcnt_t", metadata !3140, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3122} ; [ DW_TAG_typedef ]
!3394 = metadata !{i32 589837, metadata !3379, metadata !"st_atim", metadata !3138, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3395 = metadata !{i32 589837, metadata !3379, metadata !"st_mtim", metadata !3138, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3396 = metadata !{i32 589837, metadata !3379, metadata !"st_ctim", metadata !3138, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3161} ; [ DW_TAG_member ]
!3397 = metadata !{i32 589837, metadata !3379, metadata !"__glibc_reserved", metadata !3138, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3171} ; [ DW_TAG_member ]
!3398 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"lchown", metadata !"lchown", metadata !"lchown", metadata !3106, i32 1014, metadata !3399, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @lchown} ; [ DW_TAG_
!3399 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3400, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3400 = metadata !{metadata !3116, metadata !3219, metadata !3260, metadata !3261}
!3401 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"chown", metadata !"chown", metadata !"chown", metadata !3106, i32 983, metadata !3399, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @chown} ; [ DW_TAG_subpr
!3402 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"chdir", metadata !"chdir", metadata !"chdir", metadata !3106, i32 793, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chdir} ; [ DW_TAG_subprogram ]
!3403 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"euidaccess", metadata !"euidaccess", metadata !"euidaccess", metadata !3106, i32 184, metadata !3404, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @euidaccess} ;
!3404 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3405, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3405 = metadata !{metadata !3116, metadata !3219, metadata !3116}
!3406 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"access", metadata !"access", metadata !"access", metadata !3106, i32 166, metadata !3404, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @access} ; [ DW_TAG_subpro
!3407 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__concretize_size", metadata !"__concretize_size", metadata !"", metadata !3106, i32 2026, metadata !3408, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogra
!3408 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3409, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3409 = metadata !{metadata !3211, metadata !3211}
!3410 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"getcwd", metadata !"getcwd", metadata !"getcwd", metadata !3106, i32 1984, metadata !3411, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64)* @getcwd} ; [ DW_TAG_subpr
!3411 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3412, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3412 = metadata !{metadata !3130, metadata !3130, metadata !3211}
!3413 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !3106, i32 1333, metadata !3414, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @
!3414 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3415, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3415 = metadata !{metadata !3116, metadata !3116, metadata !3120}
!3416 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !3106, i32 685, metadata !3417, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @__fd_lse
!3417 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3418, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3418 = metadata !{metadata !3120, metadata !3116, metadata !3120, metadata !3116}
!3419 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"pread", metadata !"pread", metadata !"pread", metadata !3106, i32 540, metadata !3420, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i64)* @pread} ; [ DW_TAG_
!3420 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3421, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3421 = metadata !{metadata !3208, metadata !3116, metadata !3321, metadata !3211, metadata !3210}
!3422 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"read", metadata !"read", metadata !"read", metadata !3106, i32 455, metadata !3423, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @read} ; [ DW_TAG_subprogra
!3423 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3424, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3424 = metadata !{metadata !3208, metadata !3116, metadata !3321, metadata !3211}
!3425 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"mmap_simple", metadata !"mmap_simple", metadata !"mmap_simple", metadata !3106, i32 831, metadata !3426, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i64, i64)* @mmap_
!3426 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3427, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3427 = metadata !{metadata !3321, metadata !3116, metadata !3211, metadata !3210}
!3428 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"mmap", metadata !"mmap", metadata !"mmap", metadata !3106, i32 881, metadata !3429, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap} ; [ D
!3429 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3430, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3430 = metadata !{metadata !3321, metadata !3321, metadata !3211, metadata !3116, metadata !3116, metadata !3116, metadata !3210}
!3431 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"mmap64", metadata !"mmap64", metadata !"mmap64", metadata !3106, i32 853, metadata !3432, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap6
!3432 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3433, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3433 = metadata !{metadata !3321, metadata !3321, metadata !3211, metadata !3116, metadata !3116, metadata !3116, metadata !3120}
!3434 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__concretize_buffer", metadata !"__concretize_buffer", metadata !"", metadata !3106, i32 2056, metadata !3435, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3435 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3436, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3436 = metadata !{metadata !3219, metadata !3219, metadata !3118}
!3437 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__df_chmod", metadata !"__df_chmod", metadata !"", metadata !3106, i32 915, metadata !3438, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3438 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3439, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3439 = metadata !{metadata !3116, metadata !3124, metadata !3201}
!3440 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"fchmod", metadata !"fchmod", metadata !"fchmod", metadata !3106, i32 950, metadata !3441, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @fchmod} ; [ DW_TAG_subpro
!3441 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3442, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3442 = metadata !{metadata !3116, metadata !3116, metadata !3201}
!3443 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"chmod", metadata !"chmod", metadata !"chmod", metadata !3106, i32 928, metadata !3444, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @chmod} ; [ DW_TAG_subprogram
!3444 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3445, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3445 = metadata !{metadata !3116, metadata !3219, metadata !3201}
!3446 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !3106, i32 771, metadata !3447, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__f
!3447 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3448, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3448 = metadata !{metadata !3116, metadata !3219, metadata !3134}
!3449 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_stat", metadata !"__fd_stat", metadata !"__fd_stat", metadata !3106, i32 742, metadata !3447, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__fd_s
!3450 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"write", metadata !"write", metadata !"write", metadata !3106, i32 605, metadata !3423, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @write} ; [ DW_TAG_subpr
!3451 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"atoi", metadata !"atoi", metadata !"atoi", metadata !3452, i32 279, metadata !3217, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3452 = metadata !{i32 589865, metadata !"stdlib.h", metadata !"/usr/include", metadata !3107} ; [ DW_TAG_file_type ]
!3453 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_open", metadata !"__fd_open", metadata !"__fd_open", metadata !3106, i32 242, metadata !3454, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @__fd_open} 
!3454 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3455, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3455 = metadata !{metadata !3116, metadata !3219, metadata !3116, metadata !3201}
!3456 = metadata !{i32 589870, i32 0, metadata !3106, metadata !"__fd_openat", metadata !"__fd_openat", metadata !"__fd_openat", metadata !3106, i32 358, metadata !3457, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, i32)* @
!3457 = metadata !{i32 589845, metadata !3106, metadata !"", metadata !3106, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3458, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3458 = metadata !{metadata !3116, metadata !3116, metadata !3219, metadata !3116, metadata !3201}
!3459 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"fork", metadata !"fork", metadata !"fork", metadata !3460, i32 62, metadata !3462, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @fork} ; [ DW_TAG_subprogram ]
!3460 = metadata !{i32 589865, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3461} ; [ DW_TAG_file_type ]
!3461 = metadata !{i32 589841, i32 0, i32 1, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!3462 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3463, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3463 = metadata !{metadata !3464}
!3464 = metadata !{i32 589846, metadata !3465, metadata !"pid_t", metadata !3465, i32 267, i64 0, i64 0, i64 0, i32 0, metadata !3466} ; [ DW_TAG_typedef ]
!3465 = metadata !{i32 589865, metadata !"unistd.h", metadata !"/usr/include", metadata !3461} ; [ DW_TAG_file_type ]
!3466 = metadata !{i32 589860, metadata !3460, metadata !"int", metadata !3460, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3467 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"vfork", metadata !"vfork", metadata !"vfork", metadata !3460, i32 68, metadata !3462, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @vfork} ; [ DW_TAG_subprogram ]
!3468 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execve", metadata !"execve", metadata !"execve", metadata !3460, i32 60, metadata !3469, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**, i8**)* @execve} ; [ DW_TAG_
!3469 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3470, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3470 = metadata !{metadata !3466, metadata !3471, metadata !3474, metadata !3474}
!3471 = metadata !{i32 589839, metadata !3460, metadata !"", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3472} ; [ DW_TAG_pointer_type ]
!3472 = metadata !{i32 589862, metadata !3460, metadata !"", metadata !3460, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3473} ; [ DW_TAG_const_type ]
!3473 = metadata !{i32 589860, metadata !3460, metadata !"char", metadata !3460, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3474 = metadata !{i32 589839, metadata !3460, metadata !"", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3475} ; [ DW_TAG_pointer_type ]
!3475 = metadata !{i32 589862, metadata !3460, metadata !"", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3476} ; [ DW_TAG_const_type ]
!3476 = metadata !{i32 589839, metadata !3460, metadata !"", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3473} ; [ DW_TAG_pointer_type ]
!3477 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execvp", metadata !"execvp", metadata !"execvp", metadata !3460, i32 59, metadata !3478, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execvp} ; [ DW_TAG_subpro
!3478 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3479, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3479 = metadata !{metadata !3466, metadata !3471, metadata !3474}
!3480 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execv", metadata !"execv", metadata !"execv", metadata !3460, i32 58, metadata !3478, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execv} ; [ DW_TAG_subprogram
!3481 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execle", metadata !"execle", metadata !"execle", metadata !3460, i32 57, metadata !3482, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execle} ; [ DW_TAG_su
!3482 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3483, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3483 = metadata !{metadata !3466, metadata !3471, metadata !3471}
!3484 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execlp", metadata !"execlp", metadata !"execlp", metadata !3460, i32 56, metadata !3482, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execlp} ; [ DW_TAG_su
!3485 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"execl", metadata !"execl", metadata !"execl", metadata !3460, i32 55, metadata !3482, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execl} ; [ DW_TAG_subpro
!3486 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"kill", metadata !"kill", metadata !"kill", metadata !3460, i32 22, metadata !3487, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @kill} ; [ DW_TAG_subprogram ]
!3487 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3488, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3488 = metadata !{metadata !3466, metadata !3464, metadata !3466}
!3489 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"longjmp", metadata !"longjmp", metadata !"longjmp", metadata !3460, i32 34, metadata !3490, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.__jmp_buf_tag*, i32)* @lon
!3490 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3491, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3491 = metadata !{null, metadata !3492, metadata !3466}
!3492 = metadata !{i32 589839, metadata !3460, metadata !"", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3493} ; [ DW_TAG_pointer_type ]
!3493 = metadata !{i32 589843, metadata !3460, metadata !"__jmp_buf_tag", metadata !3494, i32 35, i64 1600, i64 64, i64 0, i32 0, null, metadata !3495, i32 0, null} ; [ DW_TAG_structure_type ]
!3494 = metadata !{i32 589865, metadata !"setjmp.h", metadata !"/usr/include", metadata !3461} ; [ DW_TAG_file_type ]
!3495 = metadata !{metadata !3496, metadata !3502, metadata !3503}
!3496 = metadata !{i32 589837, metadata !3493, metadata !"__jmpbuf", metadata !3494, i32 40, i64 512, i64 64, i64 0, i32 0, metadata !3497} ; [ DW_TAG_member ]
!3497 = metadata !{i32 589846, metadata !3494, metadata !"__jmp_buf", metadata !3494, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !3498} ; [ DW_TAG_typedef ]
!3498 = metadata !{i32 589825, metadata !3460, metadata !"", metadata !3460, i32 0, i64 512, i64 64, i64 0, i32 0, metadata !3499, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!3499 = metadata !{i32 589860, metadata !3460, metadata !"long int", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3500 = metadata !{metadata !3501}
!3501 = metadata !{i32 589857, i64 0, i64 7}      ; [ DW_TAG_subrange_type ]
!3502 = metadata !{i32 589837, metadata !3493, metadata !"__mask_was_saved", metadata !3494, i32 41, i64 32, i64 32, i64 512, i32 0, metadata !3466} ; [ DW_TAG_member ]
!3503 = metadata !{i32 589837, metadata !3493, metadata !"__saved_mask", metadata !3494, i32 42, i64 1024, i64 64, i64 576, i32 0, metadata !3504} ; [ DW_TAG_member ]
!3504 = metadata !{i32 589846, metadata !3505, metadata !"__sigset_t", metadata !3505, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !3506} ; [ DW_TAG_typedef ]
!3505 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3461} ; [ DW_TAG_file_type ]
!3506 = metadata !{i32 589843, metadata !3460, metadata !"", metadata !3507, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !3508, i32 0, null} ; [ DW_TAG_structure_type ]
!3507 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3461} ; [ DW_TAG_file_type ]
!3508 = metadata !{metadata !3509}
!3509 = metadata !{i32 589837, metadata !3506, metadata !"__val", metadata !3507, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !3510} ; [ DW_TAG_member ]
!3510 = metadata !{i32 589825, metadata !3460, metadata !"", metadata !3460, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3511, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!3511 = metadata !{i32 589860, metadata !3460, metadata !"long unsigned int", metadata !3460, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3512 = metadata !{i32 589870, i32 0, metadata !3460, metadata !"_setjmp", metadata !"_setjmp", metadata !"_setjmp", metadata !3460, i32 29, metadata !3513, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.__jmp_buf_tag*)* @_setjmp} 
!3513 = metadata !{i32 589845, metadata !3460, metadata !"", metadata !3460, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3514, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3514 = metadata !{metadata !3466, metadata !3492}
!3515 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__getodigit", metadata !"__getodigit", metadata !"", metadata !3516, i32 27, metadata !3518, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3516 = metadata !{i32 589865, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3517} ; [ DW_TAG_file_type ]
!3517 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG
!3518 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3519, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3519 = metadata !{metadata !3520, metadata !3521}
!3520 = metadata !{i32 589860, metadata !3516, metadata !"int", metadata !3516, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3521 = metadata !{i32 589862, metadata !3516, metadata !"", metadata !3516, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3522} ; [ DW_TAG_const_type ]
!3522 = metadata !{i32 589860, metadata !3516, metadata !"char", metadata !3516, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3523 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__getxdigit", metadata !"__getxdigit", metadata !"", metadata !3516, i32 31, metadata !3518, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3524 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__isprint", metadata !"__isprint", metadata !"", metadata !3516, i32 124, metadata !3518, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3525 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__streq", metadata !"__streq", metadata !"", metadata !3516, i32 129, metadata !3526, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3526 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3527, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3527 = metadata !{metadata !3520, metadata !3528, metadata !3528}
!3528 = metadata !{i32 589839, metadata !3516, metadata !"", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3521} ; [ DW_TAG_pointer_type ]
!3529 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__get_sym_str", metadata !"__get_sym_str", metadata !"", metadata !3516, i32 139, metadata !3530, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @__get_sym_str} ; [
!3530 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3531, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3531 = metadata !{metadata !3532, metadata !3520, metadata !3532}
!3532 = metadata !{i32 589839, metadata !3516, metadata !"", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3522} ; [ DW_TAG_pointer_type ]
!3533 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__emit_error", metadata !"__emit_error", metadata !"", metadata !3516, i32 23, metadata !3534, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3534 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3535, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3535 = metadata !{null, metadata !3528}
!3536 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__str_to_int", metadata !"__str_to_int", metadata !"", metadata !3516, i32 40, metadata !3537, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3537 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3538, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3538 = metadata !{metadata !3539, metadata !3532, metadata !3528}
!3539 = metadata !{i32 589860, metadata !3516, metadata !"long int", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3540 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__convert_escape_sequences", metadata !"__convert_escape_sequences", metadata !"", metadata !3516, i32 65, metadata !3541, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*)*
!3541 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3542, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3542 = metadata !{metadata !3543, metadata !3532}
!3543 = metadata !{i32 589846, metadata !3544, metadata !"size_t", metadata !3544, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3545} ; [ DW_TAG_typedef ]
!3544 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3517} ; [ DW_TAG_file_type ]
!3545 = metadata !{i32 589860, metadata !3516, metadata !"long unsigned int", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3546 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"__add_arg", metadata !"__add_arg", metadata !"", metadata !3516, i32 152, metadata !3547, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3547 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3548, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3548 = metadata !{null, metadata !3549, metadata !3550, metadata !3532, metadata !3520}
!3549 = metadata !{i32 589839, metadata !3516, metadata !"", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3520} ; [ DW_TAG_pointer_type ]
!3550 = metadata !{i32 589839, metadata !3516, metadata !"", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3532} ; [ DW_TAG_pointer_type ]
!3551 = metadata !{i32 589870, i32 0, metadata !3516, metadata !"klee_init_env", metadata !"klee_init_env", metadata !"klee_init_env", metadata !3516, i32 161, metadata !3552, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32*, i8***)* @
!3552 = metadata !{i32 589845, metadata !3516, metadata !"", metadata !3516, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3553, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3553 = metadata !{null, metadata !3549, metadata !3554}
!3554 = metadata !{i32 589839, metadata !3516, metadata !"", metadata !3516, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3550} ; [ DW_TAG_pointer_type ]
!3555 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !3556, i32 248, metadata !3558, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3556 = metadata !{i32 589865, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3557} ; [ DW_TAG_file_type ]
!3557 = metadata !{i32 589841, i32 0, i32 1, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3558 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3559, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3559 = metadata !{metadata !3560, metadata !3561}
!3560 = metadata !{i32 589860, metadata !3556, metadata !"unsigned int", metadata !3556, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3561 = metadata !{i32 589860, metadata !3556, metadata !"long long unsigned int", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3562 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !3556, i32 253, metadata !3558, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3563 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !3556, i32 258, metadata !3564, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32)*
!3564 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3565, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3565 = metadata !{metadata !3561, metadata !3560, metadata !3560}
!3566 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__get_sym_stream", metadata !"__get_sym_stream", metadata !"", metadata !3567, i32 88, metadata !3568, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3567 = metadata !{i32 589865, metadata !"sockets.c.inc", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3557} ; [ DW_TAG_file_type ]
!3568 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3569, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3569 = metadata !{metadata !3570}
!3570 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3571} ; [ DW_TAG_pointer_type ]
!3571 = metadata !{i32 589846, metadata !3572, metadata !"exe_disk_file_t", metadata !3572, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3573} ; [ DW_TAG_typedef ]
!3572 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3557} ; [ DW_TAG_file_type ]
!3573 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3572, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3574, i32 0, null} ; [ DW_TAG_structure_type ]
!3574 = metadata !{metadata !3575, metadata !3576, metadata !3579, metadata !3580, metadata !3621}
!3575 = metadata !{i32 589837, metadata !3573, metadata !"size", metadata !3572, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3560} ; [ DW_TAG_member ]
!3576 = metadata !{i32 589837, metadata !3573, metadata !"contents", metadata !3572, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3577 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3578} ; [ DW_TAG_pointer_type ]
!3578 = metadata !{i32 589860, metadata !3556, metadata !"char", metadata !3556, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3579 = metadata !{i32 589837, metadata !3573, metadata !"path", metadata !3572, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3580 = metadata !{i32 589837, metadata !3573, metadata !"stat", metadata !3572, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3581} ; [ DW_TAG_member ]
!3581 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3582} ; [ DW_TAG_pointer_type ]
!3582 = metadata !{i32 589843, metadata !3556, metadata !"stat64", metadata !3583, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !3584, i32 0, null} ; [ DW_TAG_structure_type ]
!3583 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3584 = metadata !{metadata !3585, metadata !3589, metadata !3591, metadata !3593, metadata !3595, metadata !3597, metadata !3599, metadata !3601, metadata !3602, metadata !3605, metadata !3607, metadata !3609, metadata !3617, metadata !3618, metadata !3
!3585 = metadata !{i32 589837, metadata !3582, metadata !"st_dev", metadata !3583, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3586} ; [ DW_TAG_member ]
!3586 = metadata !{i32 589846, metadata !3587, metadata !"__dev_t", metadata !3587, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3588} ; [ DW_TAG_typedef ]
!3587 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3588 = metadata !{i32 589860, metadata !3556, metadata !"long unsigned int", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3589 = metadata !{i32 589837, metadata !3582, metadata !"st_ino", metadata !3583, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3590} ; [ DW_TAG_member ]
!3590 = metadata !{i32 589846, metadata !3587, metadata !"__ino64_t", metadata !3587, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3588} ; [ DW_TAG_typedef ]
!3591 = metadata !{i32 589837, metadata !3582, metadata !"st_nlink", metadata !3583, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3592} ; [ DW_TAG_member ]
!3592 = metadata !{i32 589846, metadata !3587, metadata !"__nlink_t", metadata !3587, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3588} ; [ DW_TAG_typedef ]
!3593 = metadata !{i32 589837, metadata !3582, metadata !"st_mode", metadata !3583, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3594} ; [ DW_TAG_member ]
!3594 = metadata !{i32 589846, metadata !3587, metadata !"__mode_t", metadata !3587, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3560} ; [ DW_TAG_typedef ]
!3595 = metadata !{i32 589837, metadata !3582, metadata !"st_uid", metadata !3583, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3596} ; [ DW_TAG_member ]
!3596 = metadata !{i32 589846, metadata !3587, metadata !"__uid_t", metadata !3587, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3560} ; [ DW_TAG_typedef ]
!3597 = metadata !{i32 589837, metadata !3582, metadata !"st_gid", metadata !3583, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3598} ; [ DW_TAG_member ]
!3598 = metadata !{i32 589846, metadata !3587, metadata !"__gid_t", metadata !3587, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3560} ; [ DW_TAG_typedef ]
!3599 = metadata !{i32 589837, metadata !3582, metadata !"__pad0", metadata !3583, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3600 = metadata !{i32 589860, metadata !3556, metadata !"int", metadata !3556, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3601 = metadata !{i32 589837, metadata !3582, metadata !"st_rdev", metadata !3583, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3586} ; [ DW_TAG_member ]
!3602 = metadata !{i32 589837, metadata !3582, metadata !"st_size", metadata !3583, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3603} ; [ DW_TAG_member ]
!3603 = metadata !{i32 589846, metadata !3587, metadata !"__off_t", metadata !3587, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3604 = metadata !{i32 589860, metadata !3556, metadata !"long int", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3605 = metadata !{i32 589837, metadata !3582, metadata !"st_blksize", metadata !3583, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3606} ; [ DW_TAG_member ]
!3606 = metadata !{i32 589846, metadata !3587, metadata !"__blksize_t", metadata !3587, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3607 = metadata !{i32 589837, metadata !3582, metadata !"st_blocks", metadata !3583, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3608} ; [ DW_TAG_member ]
!3608 = metadata !{i32 589846, metadata !3587, metadata !"__blkcnt64_t", metadata !3587, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3609 = metadata !{i32 589837, metadata !3582, metadata !"st_atim", metadata !3583, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3610} ; [ DW_TAG_member ]
!3610 = metadata !{i32 589843, metadata !3556, metadata !"timespec", metadata !3611, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3612, i32 0, null} ; [ DW_TAG_structure_type ]
!3611 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3557} ; [ DW_TAG_file_type ]
!3612 = metadata !{metadata !3613, metadata !3615}
!3613 = metadata !{i32 589837, metadata !3610, metadata !"tv_sec", metadata !3611, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3614} ; [ DW_TAG_member ]
!3614 = metadata !{i32 589846, metadata !3587, metadata !"__time_t", metadata !3587, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3615 = metadata !{i32 589837, metadata !3610, metadata !"tv_nsec", metadata !3611, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3616} ; [ DW_TAG_member ]
!3616 = metadata !{i32 589846, metadata !3587, metadata !"__syscall_slong_t", metadata !3587, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3617 = metadata !{i32 589837, metadata !3582, metadata !"st_mtim", metadata !3583, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3610} ; [ DW_TAG_member ]
!3618 = metadata !{i32 589837, metadata !3582, metadata !"st_ctim", metadata !3583, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3610} ; [ DW_TAG_member ]
!3619 = metadata !{i32 589837, metadata !3582, metadata !"__glibc_reserved", metadata !3583, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3620} ; [ DW_TAG_member ]
!3620 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3616, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!3621 = metadata !{i32 589837, metadata !3573, metadata !"src", metadata !3572, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3622} ; [ DW_TAG_member ]
!3622 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3623} ; [ DW_TAG_pointer_type ]
!3623 = metadata !{i32 589846, metadata !3572, metadata !"exe_sockaddr_t", metadata !3572, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3624} ; [ DW_TAG_typedef ]
!3624 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3572, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3625, i32 0, null} ; [ DW_TAG_structure_type ]
!3625 = metadata !{metadata !3626, metadata !3637}
!3626 = metadata !{i32 589837, metadata !3624, metadata !"addr", metadata !3572, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3627} ; [ DW_TAG_member ]
!3627 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3628} ; [ DW_TAG_pointer_type ]
!3628 = metadata !{i32 589843, metadata !3556, metadata !"sockaddr_storage", metadata !3629, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3630, i32 0, null} ; [ DW_TAG_structure_type ]
!3629 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3630 = metadata !{metadata !3631, metadata !3634, metadata !3635}
!3631 = metadata !{i32 589837, metadata !3628, metadata !"ss_family", metadata !3629, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3632} ; [ DW_TAG_member ]
!3632 = metadata !{i32 589846, metadata !3629, metadata !"sa_family_t", metadata !3629, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3633} ; [ DW_TAG_typedef ]
!3633 = metadata !{i32 589860, metadata !3556, metadata !"short unsigned int", metadata !3556, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3634 = metadata !{i32 589837, metadata !3628, metadata !"__ss_align", metadata !3629, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3588} ; [ DW_TAG_member ]
!3635 = metadata !{i32 589837, metadata !3628, metadata !"__ss_padding", metadata !3629, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3636} ; [ DW_TAG_member ]
!3636 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3578, metadata !3190, i32 0, null} ; [ DW_TAG_array_type ]
!3637 = metadata !{i32 589837, metadata !3624, metadata !"addrlen", metadata !3572, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3638} ; [ DW_TAG_member ]
!3638 = metadata !{i32 589846, metadata !3639, metadata !"socklen_t", metadata !3639, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3560} ; [ DW_TAG_typedef ]
!3639 = metadata !{i32 589865, metadata !"confname.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3640 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__get_sym_dgram", metadata !"__get_sym_dgram", metadata !"", metadata !3567, i32 99, metadata !3568, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3641 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"getsockopt", metadata !"getsockopt", metadata !"getsockopt", metadata !3567, i32 861, metadata !3642, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32*)
!3642 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3643, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3643 = metadata !{metadata !3600, metadata !3600, metadata !3600, metadata !3600, metadata !3644, metadata !3645}
!3644 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3645 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3638} ; [ DW_TAG_pointer_type ]
!3646 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"setsockopt", metadata !"setsockopt", metadata !"setsockopt", metadata !3567, i32 867, metadata !3647, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32)*
!3647 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3648, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3648 = metadata !{metadata !3600, metadata !3600, metadata !3600, metadata !3600, metadata !3644, metadata !3638}
!3649 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !3567, i32 838, metadata !3650, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%str
!3650 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3651, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3651 = metadata !{metadata !3652, metadata !3654}
!3652 = metadata !{i32 589846, metadata !3653, metadata !"ssize_t", metadata !3653, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3653 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3557} ; [ DW_TAG_file_type ]
!3654 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3655} ; [ DW_TAG_pointer_type ]
!3655 = metadata !{i32 589843, metadata !3556, metadata !"exe_file_t", metadata !3656, i32 8, i64 448, i64 64, i64 0, i32 0, null, metadata !3657, i32 0, null} ; [ DW_TAG_structure_type ]
!3656 = metadata !{i32 589865, metadata !"sockets.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3557} ; [ DW_TAG_file_type ]
!3657 = metadata !{metadata !3658, metadata !3659, metadata !3660, metadata !3662, metadata !3663, metadata !3664, metadata !3665}
!3658 = metadata !{i32 589837, metadata !3655, metadata !"fd", metadata !3572, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3659 = metadata !{i32 589837, metadata !3655, metadata !"flags", metadata !3572, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3560} ; [ DW_TAG_member ]
!3660 = metadata !{i32 589837, metadata !3655, metadata !"off", metadata !3572, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3661} ; [ DW_TAG_member ]
!3661 = metadata !{i32 589846, metadata !3653, metadata !"off64_t", metadata !3653, i32 102, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3662 = metadata !{i32 589837, metadata !3655, metadata !"dfile", metadata !3572, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3570} ; [ DW_TAG_member ]
!3663 = metadata !{i32 589837, metadata !3655, metadata !"local", metadata !3572, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3623} ; [ DW_TAG_member ]
!3664 = metadata !{i32 589837, metadata !3655, metadata !"foreign", metadata !3572, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3622} ; [ DW_TAG_member ]
!3665 = metadata !{i32 589837, metadata !3655, metadata !"domain", metadata !3572, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3666 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"cap_get_file", metadata !"cap_get_file", metadata !"cap_get_file", metadata !3556, i32 592, metadata !3667, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct._cap_struct* (i8
!3667 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3668, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3668 = metadata !{metadata !3669, metadata !3673}
!3669 = metadata !{i32 589846, metadata !3670, metadata !"cap_t", metadata !3670, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3671} ; [ DW_TAG_typedef ]
!3670 = metadata !{i32 589865, metadata !"capability.h", metadata !"/usr/include/sys", metadata !3557} ; [ DW_TAG_file_type ]
!3671 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3672} ; [ DW_TAG_pointer_type ]
!3672 = metadata !{i32 589843, metadata !3556, metadata !"_cap_struct", metadata !3670, i32 41, i64 0, i64 0, i64 0, i32 4, null, null, i32 0, null} ; [ DW_TAG_structure_type ]
!3673 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3674} ; [ DW_TAG_pointer_type ]
!3674 = metadata !{i32 589862, metadata !3556, metadata !"", metadata !3556, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3578} ; [ DW_TAG_const_type ]
!3675 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !3556, i32 585, metadata !3676, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram 
!3676 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3677, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3677 = metadata !{metadata !3577, metadata !3673}
!3678 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !3556, i32 579, metadata !3679, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @setlocale} ; [ D
!3679 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3680, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3680 = metadata !{metadata !3577, metadata !3600, metadata !3577}
!3681 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"clock_settime", metadata !"clock_settime", metadata !"clock_settime", metadata !3556, i32 171, metadata !3682, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3682 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3683, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3683 = metadata !{metadata !3600, metadata !3684, metadata !3685}
!3684 = metadata !{i32 589846, metadata !3611, metadata !"clockid_t", metadata !3611, i32 103, i64 0, i64 0, i64 0, i32 0, metadata !3600} ; [ DW_TAG_typedef ]
!3685 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3686} ; [ DW_TAG_pointer_type ]
!3686 = metadata !{i32 589862, metadata !3556, metadata !"", metadata !3556, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3610} ; [ DW_TAG_const_type ]
!3687 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !3567, i32 799, metadata !3688, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3688 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3689, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3689 = metadata !{metadata !3652, metadata !3600, metadata !3690, metadata !3600}
!3690 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3691} ; [ DW_TAG_pointer_type ]
!3691 = metadata !{i32 589843, metadata !3556, metadata !"msghdr", metadata !3629, i32 225, i64 448, i64 64, i64 0, i32 0, null, metadata !3692, i32 0, null} ; [ DW_TAG_structure_type ]
!3692 = metadata !{metadata !3693, metadata !3694, metadata !3695, metadata !3704, metadata !3705, metadata !3706, metadata !3707}
!3693 = metadata !{i32 589837, metadata !3691, metadata !"msg_name", metadata !3629, i32 226, i64 64, i64 64, i64 0, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3694 = metadata !{i32 589837, metadata !3691, metadata !"msg_namelen", metadata !3629, i32 227, i64 32, i64 32, i64 64, i32 0, metadata !3638} ; [ DW_TAG_member ]
!3695 = metadata !{i32 589837, metadata !3691, metadata !"msg_iov", metadata !3629, i32 229, i64 64, i64 64, i64 128, i32 0, metadata !3696} ; [ DW_TAG_member ]
!3696 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3697} ; [ DW_TAG_pointer_type ]
!3697 = metadata !{i32 589843, metadata !3556, metadata !"iovec", metadata !3698, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3699, i32 0, null} ; [ DW_TAG_structure_type ]
!3698 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3699 = metadata !{metadata !3700, metadata !3701}
!3700 = metadata !{i32 589837, metadata !3697, metadata !"iov_base", metadata !3698, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3701 = metadata !{i32 589837, metadata !3697, metadata !"iov_len", metadata !3698, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3702} ; [ DW_TAG_member ]
!3702 = metadata !{i32 589846, metadata !3703, metadata !"size_t", metadata !3703, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3588} ; [ DW_TAG_typedef ]
!3703 = metadata !{i32 589865, metadata !"sigstack.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3704 = metadata !{i32 589837, metadata !3691, metadata !"msg_iovlen", metadata !3629, i32 230, i64 64, i64 64, i64 192, i32 0, metadata !3702} ; [ DW_TAG_member ]
!3705 = metadata !{i32 589837, metadata !3691, metadata !"msg_control", metadata !3629, i32 232, i64 64, i64 64, i64 256, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3706 = metadata !{i32 589837, metadata !3691, metadata !"msg_controllen", metadata !3629, i32 233, i64 64, i64 64, i64 320, i32 0, metadata !3702} ; [ DW_TAG_member ]
!3707 = metadata !{i32 589837, metadata !3691, metadata !"msg_flags", metadata !3629, i32 238, i64 32, i64 32, i64 384, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3708 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"recvmsg", metadata !"recvmsg", metadata !"recvmsg", metadata !3567, i32 794, metadata !3688, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @recvm
!3709 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !3567, i32 706, metadata !3710, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i
!3710 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3711, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3711 = metadata !{metadata !3652, metadata !3600, metadata !3644, metadata !3702, metadata !3600, metadata !3712, metadata !3645}
!3712 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3713} ; [ DW_TAG_pointer_type ]
!3713 = metadata !{i32 589843, metadata !3556, metadata !"sockaddr", metadata !3629, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !3714, i32 0, null} ; [ DW_TAG_structure_type ]
!3714 = metadata !{metadata !3715, metadata !3716}
!3715 = metadata !{i32 589837, metadata !3713, metadata !"sa_family", metadata !3629, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3632} ; [ DW_TAG_member ]
!3716 = metadata !{i32 589837, metadata !3713, metadata !"sa_data", metadata !3629, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !3717} ; [ DW_TAG_member ]
!3717 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3578, metadata !3718, i32 0, null} ; [ DW_TAG_array_type ]
!3718 = metadata !{metadata !3719}
!3719 = metadata !{i32 589857, i64 0, i64 13}     ; [ DW_TAG_subrange_type ]
!3720 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"recvfrom", metadata !"recvfrom", metadata !"recvfrom", metadata !3567, i32 701, metadata !3710, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.soc
!3721 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_recv", metadata !"__fd_recv", metadata !"__fd_recv", metadata !3567, i32 672, metadata !3722, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_r
!3722 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3723, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3723 = metadata !{metadata !3652, metadata !3600, metadata !3644, metadata !3702, metadata !3600}
!3724 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"recv", metadata !"recv", metadata !"recv", metadata !3567, i32 667, metadata !3722, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @recv} ; [ DW_TAG_subp
!3725 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !3567, i32 740, metadata !3726, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3726 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3727, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3727 = metadata !{metadata !3652, metadata !3600, metadata !3728, metadata !3600}
!3728 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3729} ; [ DW_TAG_pointer_type ]
!3729 = metadata !{i32 589862, metadata !3556, metadata !"", metadata !3556, i32 0, i64 448, i64 64, i64 0, i32 0, metadata !3691} ; [ DW_TAG_const_type ]
!3730 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"sendmsg", metadata !"sendmsg", metadata !"sendmsg", metadata !3567, i32 735, metadata !3726, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @sendm
!3731 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !3567, i32 682, metadata !3732, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %s
!3732 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3733, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3733 = metadata !{metadata !3652, metadata !3600, metadata !3644, metadata !3702, metadata !3600, metadata !3734, metadata !3638}
!3734 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3735} ; [ DW_TAG_pointer_type ]
!3735 = metadata !{i32 589862, metadata !3556, metadata !"", metadata !3556, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !3713} ; [ DW_TAG_const_type ]
!3736 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"sendto", metadata !"sendto", metadata !"sendto", metadata !3567, i32 677, metadata !3732, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.sockaddr*
!3737 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_send", metadata !"__fd_send", metadata !"__fd_send", metadata !3567, i32 663, metadata !3722, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_s
!3738 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"send", metadata !"send", metadata !"send", metadata !3567, i32 658, metadata !3722, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @send} ; [ DW_TAG_subp
!3739 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"shutdown", metadata !"shutdown", metadata !"shutdown", metadata !3567, i32 615, metadata !3740, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @shutdown} ; [ DW_TA
!3740 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3741, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3741 = metadata !{metadata !3600, metadata !3600, metadata !3600}
!3742 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !3567, i32 609, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_shu
!3743 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3744, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3744 = metadata !{metadata !3600, metadata !3745}
!3745 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3588} ; [ DW_TAG_pointer_type ]
!3746 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"getpeername", metadata !"getpeername", metadata !"getpeername", metadata !3567, i32 571, metadata !3747, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3747 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3748, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3748 = metadata !{metadata !3600, metadata !3600, metadata !3712, metadata !3645}
!3749 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !3567, i32 564, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3750 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"getsockname", metadata !"getsockname", metadata !"getsockname", metadata !3567, i32 527, metadata !3747, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3751 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !3567, i32 519, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3752 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"listen", metadata !"listen", metadata !"listen", metadata !3567, i32 375, metadata !3740, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @listen} ; [ DW_TAG_subpro
!3753 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_listen", metadata !"__fd_listen", metadata !"__fd_listen", metadata !3567, i32 368, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_listen} ;
!3754 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"connect", metadata !"connect", metadata !"connect", metadata !3567, i32 319, metadata !3755, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @con
!3755 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3756, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3756 = metadata !{metadata !3600, metadata !3600, metadata !3734, metadata !3638}
!3757 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_connect", metadata !"__fd_connect", metadata !"__fd_connect", metadata !3567, i32 312, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_connec
!3758 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"bind", metadata !"bind", metadata !"bind", metadata !3567, i32 267, metadata !3755, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @bind} ; [ DW
!3759 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_bind", metadata !"__fd_bind", metadata !"__fd_bind", metadata !3567, i32 259, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_bind} ; [ DW_TA
!3760 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"rename", metadata !"rename", metadata !"rename", metadata !3556, i32 144, metadata !3761, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @rename} ; [ DW_TAG_subpro
!3761 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3762, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3762 = metadata !{metadata !3600, metadata !3673, metadata !3673}
!3763 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__allocate_sockaddr", metadata !"__allocate_sockaddr", metadata !"", metadata !3567, i32 106, metadata !3764, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_sockaddr_t*
!3764 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3765, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3765 = metadata !{metadata !3622, metadata !3600, metadata !3622}
!3766 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_accept", metadata !"__fd_accept", metadata !"__fd_accept", metadata !3567, i32 413, metadata !3747, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3767 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"accept", metadata !"accept", metadata !"accept", metadata !3567, i32 409, metadata !3747, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32*)* @accep
!3768 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"socket", metadata !"socket", metadata !"socket", metadata !3567, i32 141, metadata !3769, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @socket} ; [ DW_TAG_s
!3769 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3770, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3770 = metadata !{metadata !3600, metadata !3600, metadata !3600, metadata !3600}
!3771 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__fd_socket", metadata !"__fd_socket", metadata !"__fd_socket", metadata !3567, i32 132, metadata !3743, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_socket} ;
!3772 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__socketcall", metadata !"__socketcall", metadata !"__socketcall", metadata !3567, i32 25, metadata !3773, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64*)* @__socke
!3773 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3774, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3774 = metadata !{metadata !3600, metadata !3600, metadata !3745}
!3775 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !3556, i32 265, metadata !3676, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 
!3776 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"strverscmp", metadata !"strverscmp", metadata !"strverscmp", metadata !3556, i32 243, metadata !3761, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @strverscmp} ;
!3777 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"clock_gettime", metadata !"clock_gettime", metadata !"clock_gettime", metadata !3556, i32 162, metadata !3778, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3778 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3779, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3779 = metadata !{metadata !3600, metadata !3684, metadata !3780}
!3780 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3610} ; [ DW_TAG_pointer_type ]
!3781 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"_IO_putc", metadata !"_IO_putc", metadata !"_IO_putc", metadata !3556, i32 96, metadata !3782, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.FILE*)* @_IO_putc} 
!3782 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3783, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3783 = metadata !{metadata !3600, metadata !3600, metadata !3784}
!3784 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3785} ; [ DW_TAG_pointer_type ]
!3785 = metadata !{i32 589846, metadata !3653, metadata !"FILE", metadata !3653, i32 64, i64 0, i64 0, i64 0, i32 0, metadata !3786} ; [ DW_TAG_typedef ]
!3786 = metadata !{i32 589843, metadata !3556, metadata !"_IO_FILE", metadata !3653, i32 44, i64 1728, i64 64, i64 0, i32 0, null, metadata !3787, i32 0, null} ; [ DW_TAG_structure_type ]
!3787 = metadata !{metadata !3788, metadata !3790, metadata !3791, metadata !3792, metadata !3793, metadata !3794, metadata !3795, metadata !3796, metadata !3797, metadata !3798, metadata !3799, metadata !3800, metadata !3801, metadata !3809, metadata !3
!3788 = metadata !{i32 589837, metadata !3786, metadata !"_flags", metadata !3789, i32 246, i64 32, i64 32, i64 0, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3789 = metadata !{i32 589865, metadata !"libio.h", metadata !"/usr/include", metadata !3557} ; [ DW_TAG_file_type ]
!3790 = metadata !{i32 589837, metadata !3786, metadata !"_IO_read_ptr", metadata !3789, i32 251, i64 64, i64 64, i64 64, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3791 = metadata !{i32 589837, metadata !3786, metadata !"_IO_read_end", metadata !3789, i32 252, i64 64, i64 64, i64 128, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3792 = metadata !{i32 589837, metadata !3786, metadata !"_IO_read_base", metadata !3789, i32 253, i64 64, i64 64, i64 192, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3793 = metadata !{i32 589837, metadata !3786, metadata !"_IO_write_base", metadata !3789, i32 254, i64 64, i64 64, i64 256, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3794 = metadata !{i32 589837, metadata !3786, metadata !"_IO_write_ptr", metadata !3789, i32 255, i64 64, i64 64, i64 320, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3795 = metadata !{i32 589837, metadata !3786, metadata !"_IO_write_end", metadata !3789, i32 256, i64 64, i64 64, i64 384, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3796 = metadata !{i32 589837, metadata !3786, metadata !"_IO_buf_base", metadata !3789, i32 257, i64 64, i64 64, i64 448, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3797 = metadata !{i32 589837, metadata !3786, metadata !"_IO_buf_end", metadata !3789, i32 258, i64 64, i64 64, i64 512, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3798 = metadata !{i32 589837, metadata !3786, metadata !"_IO_save_base", metadata !3789, i32 260, i64 64, i64 64, i64 576, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3799 = metadata !{i32 589837, metadata !3786, metadata !"_IO_backup_base", metadata !3789, i32 261, i64 64, i64 64, i64 640, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3800 = metadata !{i32 589837, metadata !3786, metadata !"_IO_save_end", metadata !3789, i32 262, i64 64, i64 64, i64 704, i32 0, metadata !3577} ; [ DW_TAG_member ]
!3801 = metadata !{i32 589837, metadata !3786, metadata !"_markers", metadata !3789, i32 264, i64 64, i64 64, i64 768, i32 0, metadata !3802} ; [ DW_TAG_member ]
!3802 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3803} ; [ DW_TAG_pointer_type ]
!3803 = metadata !{i32 589843, metadata !3556, metadata !"_IO_marker", metadata !3789, i32 160, i64 192, i64 64, i64 0, i32 0, null, metadata !3804, i32 0, null} ; [ DW_TAG_structure_type ]
!3804 = metadata !{metadata !3805, metadata !3806, metadata !3808}
!3805 = metadata !{i32 589837, metadata !3803, metadata !"_next", metadata !3789, i32 161, i64 64, i64 64, i64 0, i32 0, metadata !3802} ; [ DW_TAG_member ]
!3806 = metadata !{i32 589837, metadata !3803, metadata !"_sbuf", metadata !3789, i32 162, i64 64, i64 64, i64 64, i32 0, metadata !3807} ; [ DW_TAG_member ]
!3807 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3786} ; [ DW_TAG_pointer_type ]
!3808 = metadata !{i32 589837, metadata !3803, metadata !"_pos", metadata !3789, i32 166, i64 32, i64 32, i64 128, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3809 = metadata !{i32 589837, metadata !3786, metadata !"_chain", metadata !3789, i32 266, i64 64, i64 64, i64 832, i32 0, metadata !3807} ; [ DW_TAG_member ]
!3810 = metadata !{i32 589837, metadata !3786, metadata !"_fileno", metadata !3789, i32 268, i64 32, i64 32, i64 896, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3811 = metadata !{i32 589837, metadata !3786, metadata !"_flags2", metadata !3789, i32 272, i64 32, i64 32, i64 928, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3812 = metadata !{i32 589837, metadata !3786, metadata !"_old_offset", metadata !3789, i32 274, i64 64, i64 64, i64 960, i32 0, metadata !3603} ; [ DW_TAG_member ]
!3813 = metadata !{i32 589837, metadata !3786, metadata !"_cur_column", metadata !3789, i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !3633} ; [ DW_TAG_member ]
!3814 = metadata !{i32 589837, metadata !3786, metadata !"_vtable_offset", metadata !3789, i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !3815} ; [ DW_TAG_member ]
!3815 = metadata !{i32 589860, metadata !3556, metadata !"signed char", metadata !3556, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3816 = metadata !{i32 589837, metadata !3786, metadata !"_shortbuf", metadata !3789, i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !3817} ; [ DW_TAG_member ]
!3817 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3578, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!3818 = metadata !{i32 589837, metadata !3786, metadata !"_lock", metadata !3789, i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3819 = metadata !{i32 589837, metadata !3786, metadata !"_offset", metadata !3789, i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !3820} ; [ DW_TAG_member ]
!3820 = metadata !{i32 589846, metadata !3587, metadata !"__off64_t", metadata !3587, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3821 = metadata !{i32 589837, metadata !3786, metadata !"__pad1", metadata !3789, i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3822 = metadata !{i32 589837, metadata !3786, metadata !"__pad2", metadata !3789, i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3823 = metadata !{i32 589837, metadata !3786, metadata !"__pad3", metadata !3789, i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3824 = metadata !{i32 589837, metadata !3786, metadata !"__pad4", metadata !3789, i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3825 = metadata !{i32 589837, metadata !3786, metadata !"__pad5", metadata !3789, i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !3702} ; [ DW_TAG_member ]
!3826 = metadata !{i32 589837, metadata !3786, metadata !"_mode", metadata !3789, i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3827 = metadata !{i32 589837, metadata !3786, metadata !"_unused2", metadata !3789, i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !3828} ; [ DW_TAG_member ]
!3828 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !3578, metadata !856, i32 0, null} ; [ DW_TAG_array_type ]
!3829 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"_IO_getc", metadata !"_IO_getc", metadata !"_IO_getc", metadata !3556, i32 91, metadata !3830, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.FILE*)* @_IO_getc} ; [ D
!3830 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3831, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3831 = metadata !{metadata !3600, metadata !3784}
!3832 = metadata !{i32 589870, i32 0, metadata !3556, metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !3556, i32 44, metadata !3833, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!3833 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3834, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3834 = metadata !{metadata !3600, metadata !3600, metadata !3835, metadata !3926, metadata !3702}
!3835 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3836} ; [ DW_TAG_pointer_type ]
!3836 = metadata !{i32 589862, metadata !3556, metadata !"", metadata !3556, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !3837} ; [ DW_TAG_const_type ]
!3837 = metadata !{i32 589843, metadata !3556, metadata !"sigaction", metadata !3838, i32 25, i64 1216, i64 64, i64 0, i32 0, null, metadata !3839, i32 0, null} ; [ DW_TAG_structure_type ]
!3838 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3839 = metadata !{metadata !3840, metadata !3915, metadata !3922, metadata !3923}
!3840 = metadata !{i32 589837, metadata !3837, metadata !"__sigaction_handler", metadata !3838, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3841} ; [ DW_TAG_member ]
!3841 = metadata !{i32 589847, metadata !3556, metadata !"", metadata !3838, i32 29, i64 64, i64 64, i64 0, i32 0, null, metadata !3842, i32 0, null} ; [ DW_TAG_union_type ]
!3842 = metadata !{metadata !3843, metadata !3849}
!3843 = metadata !{i32 589837, metadata !3841, metadata !"sa_handler", metadata !3838, i32 31, i64 64, i64 64, i64 0, i32 0, metadata !3844} ; [ DW_TAG_member ]
!3844 = metadata !{i32 589846, metadata !3845, metadata !"__sighandler_t", metadata !3845, i32 204, i64 0, i64 0, i64 0, i32 0, metadata !3846} ; [ DW_TAG_typedef ]
!3845 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3557} ; [ DW_TAG_file_type ]
!3846 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3847} ; [ DW_TAG_pointer_type ]
!3847 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3848, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3848 = metadata !{null, metadata !3600}
!3849 = metadata !{i32 589837, metadata !3841, metadata !"sa_sigaction", metadata !3838, i32 33, i64 64, i64 64, i64 0, i32 0, metadata !3850} ; [ DW_TAG_member ]
!3850 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3851} ; [ DW_TAG_pointer_type ]
!3851 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3852, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3852 = metadata !{null, metadata !3600, metadata !3853, metadata !3644}
!3853 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3854} ; [ DW_TAG_pointer_type ]
!3854 = metadata !{i32 589846, metadata !3855, metadata !"siginfo_t", metadata !3855, i32 154, i64 0, i64 0, i64 0, i32 0, metadata !3856} ; [ DW_TAG_typedef ]
!3855 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3856 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 63, i64 1024, i64 64, i64 0, i32 0, null, metadata !3857, i32 0, null} ; [ DW_TAG_structure_type ]
!3857 = metadata !{metadata !3858, metadata !3859, metadata !3860, metadata !3861}
!3858 = metadata !{i32 589837, metadata !3856, metadata !"si_signo", metadata !3855, i32 64, i64 32, i64 32, i64 0, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3859 = metadata !{i32 589837, metadata !3856, metadata !"si_errno", metadata !3855, i32 65, i64 32, i64 32, i64 32, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3860 = metadata !{i32 589837, metadata !3856, metadata !"si_code", metadata !3855, i32 67, i64 32, i64 32, i64 64, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3861 = metadata !{i32 589837, metadata !3856, metadata !"_sifields", metadata !3855, i32 127, i64 896, i64 64, i64 128, i32 0, metadata !3862} ; [ DW_TAG_member ]
!3862 = metadata !{i32 589847, metadata !3556, metadata !"", metadata !3855, i32 70, i64 896, i64 64, i64 0, i32 0, null, metadata !3863, i32 0, null} ; [ DW_TAG_union_type ]
!3863 = metadata !{metadata !3864, metadata !3866, metadata !3872, metadata !3883, metadata !3889, metadata !3898, metadata !3904, metadata !3909}
!3864 = metadata !{i32 589837, metadata !3862, metadata !"_pad", metadata !3855, i32 71, i64 896, i64 32, i64 0, i32 0, metadata !3865} ; [ DW_TAG_member ]
!3865 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !3600, metadata !1884, i32 0, null} ; [ DW_TAG_array_type ]
!3866 = metadata !{i32 589837, metadata !3862, metadata !"_kill", metadata !3855, i32 78, i64 64, i64 32, i64 0, i32 0, metadata !3867} ; [ DW_TAG_member ]
!3867 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 75, i64 64, i64 32, i64 0, i32 0, null, metadata !3868, i32 0, null} ; [ DW_TAG_structure_type ]
!3868 = metadata !{metadata !3869, metadata !3871}
!3869 = metadata !{i32 589837, metadata !3867, metadata !"si_pid", metadata !3855, i32 76, i64 32, i64 32, i64 0, i32 0, metadata !3870} ; [ DW_TAG_member ]
!3870 = metadata !{i32 589846, metadata !3587, metadata !"__pid_t", metadata !3587, i32 134, i64 0, i64 0, i64 0, i32 0, metadata !3600} ; [ DW_TAG_typedef ]
!3871 = metadata !{i32 589837, metadata !3867, metadata !"si_uid", metadata !3855, i32 77, i64 32, i64 32, i64 32, i32 0, metadata !3596} ; [ DW_TAG_member ]
!3872 = metadata !{i32 589837, metadata !3862, metadata !"_timer", metadata !3855, i32 86, i64 128, i64 64, i64 0, i32 0, metadata !3873} ; [ DW_TAG_member ]
!3873 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 82, i64 128, i64 64, i64 0, i32 0, null, metadata !3874, i32 0, null} ; [ DW_TAG_structure_type ]
!3874 = metadata !{metadata !3875, metadata !3876, metadata !3877}
!3875 = metadata !{i32 589837, metadata !3873, metadata !"si_tid", metadata !3855, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3876 = metadata !{i32 589837, metadata !3873, metadata !"si_overrun", metadata !3855, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3877 = metadata !{i32 589837, metadata !3873, metadata !"si_sigval", metadata !3855, i32 85, i64 64, i64 64, i64 64, i32 0, metadata !3878} ; [ DW_TAG_member ]
!3878 = metadata !{i32 589846, metadata !3855, metadata !"sigval_t", metadata !3855, i32 58, i64 0, i64 0, i64 0, i32 0, metadata !3879} ; [ DW_TAG_typedef ]
!3879 = metadata !{i32 589847, metadata !3556, metadata !"sigval", metadata !3855, i32 33, i64 64, i64 64, i64 0, i32 0, null, metadata !3880, i32 0, null} ; [ DW_TAG_union_type ]
!3880 = metadata !{metadata !3881, metadata !3882}
!3881 = metadata !{i32 589837, metadata !3879, metadata !"sival_int", metadata !3855, i32 34, i64 32, i64 32, i64 0, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3882 = metadata !{i32 589837, metadata !3879, metadata !"sival_ptr", metadata !3855, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3883 = metadata !{i32 589837, metadata !3862, metadata !"_rt", metadata !3855, i32 94, i64 128, i64 64, i64 0, i32 0, metadata !3884} ; [ DW_TAG_member ]
!3884 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 90, i64 128, i64 64, i64 0, i32 0, null, metadata !3885, i32 0, null} ; [ DW_TAG_structure_type ]
!3885 = metadata !{metadata !3886, metadata !3887, metadata !3888}
!3886 = metadata !{i32 589837, metadata !3884, metadata !"si_pid", metadata !3855, i32 91, i64 32, i64 32, i64 0, i32 0, metadata !3870} ; [ DW_TAG_member ]
!3887 = metadata !{i32 589837, metadata !3884, metadata !"si_uid", metadata !3855, i32 92, i64 32, i64 32, i64 32, i32 0, metadata !3596} ; [ DW_TAG_member ]
!3888 = metadata !{i32 589837, metadata !3884, metadata !"si_sigval", metadata !3855, i32 93, i64 64, i64 64, i64 64, i32 0, metadata !3878} ; [ DW_TAG_member ]
!3889 = metadata !{i32 589837, metadata !3862, metadata !"_sigchld", metadata !3855, i32 104, i64 256, i64 64, i64 0, i32 0, metadata !3890} ; [ DW_TAG_member ]
!3890 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 98, i64 256, i64 64, i64 0, i32 0, null, metadata !3891, i32 0, null} ; [ DW_TAG_structure_type ]
!3891 = metadata !{metadata !3892, metadata !3893, metadata !3894, metadata !3895, metadata !3897}
!3892 = metadata !{i32 589837, metadata !3890, metadata !"si_pid", metadata !3855, i32 99, i64 32, i64 32, i64 0, i32 0, metadata !3870} ; [ DW_TAG_member ]
!3893 = metadata !{i32 589837, metadata !3890, metadata !"si_uid", metadata !3855, i32 100, i64 32, i64 32, i64 32, i32 0, metadata !3596} ; [ DW_TAG_member ]
!3894 = metadata !{i32 589837, metadata !3890, metadata !"si_status", metadata !3855, i32 101, i64 32, i64 32, i64 64, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3895 = metadata !{i32 589837, metadata !3890, metadata !"si_utime", metadata !3855, i32 102, i64 64, i64 64, i64 128, i32 0, metadata !3896} ; [ DW_TAG_member ]
!3896 = metadata !{i32 589846, metadata !3855, metadata !"__sigchld_clock_t", metadata !3855, i32 63, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!3897 = metadata !{i32 589837, metadata !3890, metadata !"si_stime", metadata !3855, i32 103, i64 64, i64 64, i64 192, i32 0, metadata !3896} ; [ DW_TAG_member ]
!3898 = metadata !{i32 589837, metadata !3862, metadata !"_sigfault", metadata !3855, i32 111, i64 128, i64 64, i64 0, i32 0, metadata !3899} ; [ DW_TAG_member ]
!3899 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 108, i64 128, i64 64, i64 0, i32 0, null, metadata !3900, i32 0, null} ; [ DW_TAG_structure_type ]
!3900 = metadata !{metadata !3901, metadata !3902}
!3901 = metadata !{i32 589837, metadata !3899, metadata !"si_addr", metadata !3855, i32 109, i64 64, i64 64, i64 0, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3902 = metadata !{i32 589837, metadata !3899, metadata !"si_addr_lsb", metadata !3855, i32 110, i64 16, i64 16, i64 64, i32 0, metadata !3903} ; [ DW_TAG_member ]
!3903 = metadata !{i32 589860, metadata !3556, metadata !"short int", metadata !3556, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3904 = metadata !{i32 589837, metadata !3862, metadata !"_sigpoll", metadata !3855, i32 118, i64 128, i64 64, i64 0, i32 0, metadata !3905} ; [ DW_TAG_member ]
!3905 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 115, i64 128, i64 64, i64 0, i32 0, null, metadata !3906, i32 0, null} ; [ DW_TAG_structure_type ]
!3906 = metadata !{metadata !3907, metadata !3908}
!3907 = metadata !{i32 589837, metadata !3905, metadata !"si_band", metadata !3855, i32 116, i64 64, i64 64, i64 0, i32 0, metadata !3604} ; [ DW_TAG_member ]
!3908 = metadata !{i32 589837, metadata !3905, metadata !"si_fd", metadata !3855, i32 117, i64 32, i64 32, i64 64, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3909 = metadata !{i32 589837, metadata !3862, metadata !"_sigsys", metadata !3855, i32 126, i64 128, i64 64, i64 0, i32 0, metadata !3910} ; [ DW_TAG_member ]
!3910 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3855, i32 122, i64 128, i64 64, i64 0, i32 0, null, metadata !3911, i32 0, null} ; [ DW_TAG_structure_type ]
!3911 = metadata !{metadata !3912, metadata !3913, metadata !3914}
!3912 = metadata !{i32 589837, metadata !3910, metadata !"_call_addr", metadata !3855, i32 123, i64 64, i64 64, i64 0, i32 0, metadata !3644} ; [ DW_TAG_member ]
!3913 = metadata !{i32 589837, metadata !3910, metadata !"_syscall", metadata !3855, i32 124, i64 32, i64 32, i64 64, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3914 = metadata !{i32 589837, metadata !3910, metadata !"_arch", metadata !3855, i32 125, i64 32, i64 32, i64 96, i32 0, metadata !3560} ; [ DW_TAG_member ]
!3915 = metadata !{i32 589837, metadata !3837, metadata !"sa_mask", metadata !3838, i32 43, i64 1024, i64 64, i64 64, i32 0, metadata !3916} ; [ DW_TAG_member ]
!3916 = metadata !{i32 589846, metadata !3845, metadata !"__sigset_t", metadata !3845, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !3917} ; [ DW_TAG_typedef ]
!3917 = metadata !{i32 589843, metadata !3556, metadata !"", metadata !3918, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !3919, i32 0, null} ; [ DW_TAG_structure_type ]
!3918 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!3919 = metadata !{metadata !3920}
!3920 = metadata !{i32 589837, metadata !3917, metadata !"__val", metadata !3918, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !3921} ; [ DW_TAG_member ]
!3921 = metadata !{i32 589825, metadata !3556, metadata !"", metadata !3556, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3588, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!3922 = metadata !{i32 589837, metadata !3837, metadata !"sa_flags", metadata !3838, i32 46, i64 32, i64 32, i64 1088, i32 0, metadata !3600} ; [ DW_TAG_member ]
!3923 = metadata !{i32 589837, metadata !3837, metadata !"sa_restorer", metadata !3838, i32 49, i64 64, i64 64, i64 1152, i32 0, metadata !3924} ; [ DW_TAG_member ]
!3924 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3925} ; [ DW_TAG_pointer_type ]
!3925 = metadata !{i32 589845, metadata !3556, metadata !"", metadata !3556, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3926 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3837} ; [ DW_TAG_pointer_type ]
!3927 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"__stat64_to_stat", metadata !"__stat64_to_stat", metadata !"", metadata !3928, i32 42, metadata !3930, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3928 = metadata !{i32 589865, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3929} ; [ DW_TAG_file_type ]
!3929 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3930 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3931, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3931 = metadata !{null, metadata !3932, metadata !3974}
!3932 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3933} ; [ DW_TAG_pointer_type ]
!3933 = metadata !{i32 589843, metadata !3928, metadata !"stat64", metadata !3934, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3935, i32 0, null} ; [ DW_TAG_structure_type ]
!3934 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3929} ; [ DW_TAG_file_type ]
!3935 = metadata !{metadata !3936, metadata !3941, metadata !3943, metadata !3945, metadata !3948, metadata !3950, metadata !3952, metadata !3954, metadata !3955, metadata !3958, metadata !3960, metadata !3962, metadata !3970, metadata !3971, metadata !3
!3936 = metadata !{i32 589837, metadata !3933, metadata !"st_dev", metadata !3937, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3938} ; [ DW_TAG_member ]
!3937 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3929} ; [ DW_TAG_file_type ]
!3938 = metadata !{i32 589846, metadata !3939, metadata !"__dev_t", metadata !3939, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!3939 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3929} ; [ DW_TAG_file_type ]
!3940 = metadata !{i32 589860, metadata !3928, metadata !"long unsigned int", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3941 = metadata !{i32 589837, metadata !3933, metadata !"st_ino", metadata !3937, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3942} ; [ DW_TAG_member ]
!3942 = metadata !{i32 589846, metadata !3939, metadata !"__ino64_t", metadata !3939, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!3943 = metadata !{i32 589837, metadata !3933, metadata !"st_nlink", metadata !3937, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3944} ; [ DW_TAG_member ]
!3944 = metadata !{i32 589846, metadata !3939, metadata !"__nlink_t", metadata !3939, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!3945 = metadata !{i32 589837, metadata !3933, metadata !"st_mode", metadata !3937, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3946} ; [ DW_TAG_member ]
!3946 = metadata !{i32 589846, metadata !3939, metadata !"__mode_t", metadata !3939, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3947} ; [ DW_TAG_typedef ]
!3947 = metadata !{i32 589860, metadata !3928, metadata !"unsigned int", metadata !3928, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3948 = metadata !{i32 589837, metadata !3933, metadata !"st_uid", metadata !3937, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3949} ; [ DW_TAG_member ]
!3949 = metadata !{i32 589846, metadata !3939, metadata !"__uid_t", metadata !3939, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3947} ; [ DW_TAG_typedef ]
!3950 = metadata !{i32 589837, metadata !3933, metadata !"st_gid", metadata !3937, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3951} ; [ DW_TAG_member ]
!3951 = metadata !{i32 589846, metadata !3939, metadata !"__gid_t", metadata !3939, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3947} ; [ DW_TAG_typedef ]
!3952 = metadata !{i32 589837, metadata !3933, metadata !"__pad0", metadata !3937, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3953} ; [ DW_TAG_member ]
!3953 = metadata !{i32 589860, metadata !3928, metadata !"int", metadata !3928, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3954 = metadata !{i32 589837, metadata !3933, metadata !"st_rdev", metadata !3937, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3938} ; [ DW_TAG_member ]
!3955 = metadata !{i32 589837, metadata !3933, metadata !"st_size", metadata !3937, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3956} ; [ DW_TAG_member ]
!3956 = metadata !{i32 589846, metadata !3939, metadata !"__off_t", metadata !3939, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3957 = metadata !{i32 589860, metadata !3928, metadata !"long int", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3958 = metadata !{i32 589837, metadata !3933, metadata !"st_blksize", metadata !3937, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3959} ; [ DW_TAG_member ]
!3959 = metadata !{i32 589846, metadata !3939, metadata !"__blksize_t", metadata !3939, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3960 = metadata !{i32 589837, metadata !3933, metadata !"st_blocks", metadata !3937, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3961} ; [ DW_TAG_member ]
!3961 = metadata !{i32 589846, metadata !3939, metadata !"__blkcnt64_t", metadata !3939, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3962 = metadata !{i32 589837, metadata !3933, metadata !"st_atim", metadata !3937, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3963 = metadata !{i32 589843, metadata !3928, metadata !"timespec", metadata !3964, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3965, i32 0, null} ; [ DW_TAG_structure_type ]
!3964 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3929} ; [ DW_TAG_file_type ]
!3965 = metadata !{metadata !3966, metadata !3968}
!3966 = metadata !{i32 589837, metadata !3963, metadata !"tv_sec", metadata !3964, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3967} ; [ DW_TAG_member ]
!3967 = metadata !{i32 589846, metadata !3939, metadata !"__time_t", metadata !3939, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3968 = metadata !{i32 589837, metadata !3963, metadata !"tv_nsec", metadata !3964, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3969} ; [ DW_TAG_member ]
!3969 = metadata !{i32 589846, metadata !3939, metadata !"__syscall_slong_t", metadata !3939, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3970 = metadata !{i32 589837, metadata !3933, metadata !"st_mtim", metadata !3937, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3971 = metadata !{i32 589837, metadata !3933, metadata !"st_ctim", metadata !3937, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3972 = metadata !{i32 589837, metadata !3933, metadata !"__glibc_reserved", metadata !3937, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3973} ; [ DW_TAG_member ]
!3973 = metadata !{i32 589825, metadata !3928, metadata !"", metadata !3928, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3969, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!3974 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3975} ; [ DW_TAG_pointer_type ]
!3975 = metadata !{i32 589843, metadata !3928, metadata !"stat", metadata !3937, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3976, i32 0, null} ; [ DW_TAG_structure_type ]
!3976 = metadata !{metadata !3977, metadata !3978, metadata !3980, metadata !3981, metadata !3982, metadata !3983, metadata !3984, metadata !3985, metadata !3986, metadata !3987, metadata !3988, metadata !3990, metadata !3991, metadata !3992, metadata !3
!3977 = metadata !{i32 589837, metadata !3975, metadata !"st_dev", metadata !3937, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3938} ; [ DW_TAG_member ]
!3978 = metadata !{i32 589837, metadata !3975, metadata !"st_ino", metadata !3937, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3979} ; [ DW_TAG_member ]
!3979 = metadata !{i32 589846, metadata !3939, metadata !"__ino_t", metadata !3939, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!3980 = metadata !{i32 589837, metadata !3975, metadata !"st_nlink", metadata !3937, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3944} ; [ DW_TAG_member ]
!3981 = metadata !{i32 589837, metadata !3975, metadata !"st_mode", metadata !3937, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3946} ; [ DW_TAG_member ]
!3982 = metadata !{i32 589837, metadata !3975, metadata !"st_uid", metadata !3937, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3949} ; [ DW_TAG_member ]
!3983 = metadata !{i32 589837, metadata !3975, metadata !"st_gid", metadata !3937, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3951} ; [ DW_TAG_member ]
!3984 = metadata !{i32 589837, metadata !3975, metadata !"__pad0", metadata !3937, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3953} ; [ DW_TAG_member ]
!3985 = metadata !{i32 589837, metadata !3975, metadata !"st_rdev", metadata !3937, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3938} ; [ DW_TAG_member ]
!3986 = metadata !{i32 589837, metadata !3975, metadata !"st_size", metadata !3937, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3956} ; [ DW_TAG_member ]
!3987 = metadata !{i32 589837, metadata !3975, metadata !"st_blksize", metadata !3937, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3959} ; [ DW_TAG_member ]
!3988 = metadata !{i32 589837, metadata !3975, metadata !"st_blocks", metadata !3937, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3989} ; [ DW_TAG_member ]
!3989 = metadata !{i32 589846, metadata !3939, metadata !"__blkcnt_t", metadata !3939, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!3990 = metadata !{i32 589837, metadata !3975, metadata !"st_atim", metadata !3937, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3991 = metadata !{i32 589837, metadata !3975, metadata !"st_mtim", metadata !3937, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3992 = metadata !{i32 589837, metadata !3975, metadata !"st_ctim", metadata !3937, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3963} ; [ DW_TAG_member ]
!3993 = metadata !{i32 589837, metadata !3975, metadata !"__glibc_reserved", metadata !3937, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3973} ; [ DW_TAG_member ]
!3994 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"fstat64", metadata !"fstat64", metadata !"fstat64", metadata !3928, i32 207, metadata !3995, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat64} ; [
!3995 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3996, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3996 = metadata !{metadata !3953, metadata !3953, metadata !3932}
!3997 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"fstat", metadata !"fstat", metadata !"fstat", metadata !3928, i32 119, metadata !3998, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat} ; [ DW_TAG_
!3998 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3999, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3999 = metadata !{metadata !3953, metadata !3953, metadata !3974}
!4000 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"__fxstat", metadata !"__fxstat", metadata !"__fxstat", metadata !3928, i32 112, metadata !4001, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, %struct.stat*)* @__fx
!4001 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4002, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4002 = metadata !{metadata !3953, metadata !3953, metadata !3953, metadata !3974}
!4003 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"lstat64", metadata !"lstat64", metadata !"lstat64", metadata !3928, i32 203, metadata !4004, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat64} ; [
!4004 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4005, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4005 = metadata !{metadata !3953, metadata !4006, metadata !3932}
!4006 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4007} ; [ DW_TAG_pointer_type ]
!4007 = metadata !{i32 589862, metadata !3928, metadata !"", metadata !3928, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4008} ; [ DW_TAG_const_type ]
!4008 = metadata !{i32 589860, metadata !3928, metadata !"char", metadata !3928, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4009 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"lstat", metadata !"lstat", metadata !"lstat", metadata !3928, i32 105, metadata !4010, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat} ; [ DW_TAG_
!4010 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4011, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4011 = metadata !{metadata !3953, metadata !4006, metadata !3974}
!4012 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"__lxstat", metadata !"__lxstat", metadata !"__lxstat", metadata !3928, i32 98, metadata !4013, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__lxs
!4013 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4014, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4014 = metadata !{metadata !3953, metadata !3953, metadata !4006, metadata !3974}
!4015 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !3928, i32 199, metadata !4004, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat64} ; [ DW_
!4016 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"stat", metadata !"stat", metadata !"stat", metadata !3928, i32 91, metadata !4010, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat} ; [ DW_TAG_subpr
!4017 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"__xstat", metadata !"__xstat", metadata !"__xstat", metadata !3928, i32 84, metadata !4013, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__xstat}
!4018 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"lseek64", metadata !"lseek64", metadata !"lseek64", metadata !3928, i32 195, metadata !4019, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek64} ; [ DW_T
!4019 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4020, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4020 = metadata !{metadata !4021, metadata !3953, metadata !4021, metadata !3953}
!4021 = metadata !{i32 589846, metadata !4022, metadata !"off64_t", metadata !4022, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!4022 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3929} ; [ DW_TAG_file_type ]
!4023 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"lseek", metadata !"lseek", metadata !"lseek", metadata !3928, i32 80, metadata !4024, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek} ; [ DW_TAG_subpro
!4024 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4025, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4025 = metadata !{metadata !4026, metadata !3953, metadata !4026, metadata !3953}
!4026 = metadata !{i32 589846, metadata !4022, metadata !"off_t", metadata !4022, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!4027 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"open64", metadata !"open64", metadata !"open64", metadata !3928, i32 181, metadata !4028, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open64} ; [ DW_TAG_s
!4028 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4029, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4029 = metadata !{metadata !3953, metadata !4006, metadata !3953}
!4030 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"open", metadata !"open", metadata !"open", metadata !3928, i32 66, metadata !4028, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open} ; [ DW_TAG_subprogram
!4031 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"getdents", metadata !"getdents", metadata !"getdents", metadata !3928, i32 155, metadata !4032, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.dirent*, i64)* @ge
!4032 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4033, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4033 = metadata !{metadata !4034, metadata !3953, metadata !4035, metadata !4047}
!4034 = metadata !{i32 589846, metadata !4022, metadata !"ssize_t", metadata !4022, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!4035 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4036} ; [ DW_TAG_pointer_type ]
!4036 = metadata !{i32 589843, metadata !3928, metadata !"dirent", metadata !4037, i32 23, i64 2240, i64 64, i64 0, i32 0, null, metadata !4038, i32 0, null} ; [ DW_TAG_structure_type ]
!4037 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3929} ; [ DW_TAG_file_type ]
!4038 = metadata !{metadata !4039, metadata !4040, metadata !4041, metadata !4043, metadata !4045}
!4039 = metadata !{i32 589837, metadata !4036, metadata !"d_ino", metadata !4037, i32 25, i64 64, i64 64, i64 0, i32 0, metadata !3979} ; [ DW_TAG_member ]
!4040 = metadata !{i32 589837, metadata !4036, metadata !"d_off", metadata !4037, i32 26, i64 64, i64 64, i64 64, i32 0, metadata !3956} ; [ DW_TAG_member ]
!4041 = metadata !{i32 589837, metadata !4036, metadata !"d_reclen", metadata !4037, i32 31, i64 16, i64 16, i64 128, i32 0, metadata !4042} ; [ DW_TAG_member ]
!4042 = metadata !{i32 589860, metadata !3928, metadata !"short unsigned int", metadata !3928, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4043 = metadata !{i32 589837, metadata !4036, metadata !"d_type", metadata !4037, i32 32, i64 8, i64 8, i64 144, i32 0, metadata !4044} ; [ DW_TAG_member ]
!4044 = metadata !{i32 589860, metadata !3928, metadata !"unsigned char", metadata !3928, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4045 = metadata !{i32 589837, metadata !4036, metadata !"d_name", metadata !4037, i32 33, i64 2048, i64 8, i64 152, i32 0, metadata !4046} ; [ DW_TAG_member ]
!4046 = metadata !{i32 589825, metadata !3928, metadata !"", metadata !3928, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !4008, metadata !833, i32 0, null} ; [ DW_TAG_array_type ]
!4047 = metadata !{i32 589846, metadata !4022, metadata !"size_t", metadata !4022, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!4048 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"statfs", metadata !"statfs", metadata !"statfs", metadata !3928, i32 130, metadata !4049, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.statfs*)* @statfs} ; [ D
!4049 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4050, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4050 = metadata !{metadata !3953, metadata !4006, metadata !4051}
!4051 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4052} ; [ DW_TAG_pointer_type ]
!4052 = metadata !{i32 589843, metadata !3928, metadata !"statfs", metadata !4053, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !4054, i32 0, null} ; [ DW_TAG_structure_type ]
!4053 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3929} ; [ DW_TAG_file_type ]
!4054 = metadata !{metadata !4055, metadata !4057, metadata !4058, metadata !4060, metadata !4061, metadata !4062, metadata !4064, metadata !4065, metadata !4071, metadata !4072, metadata !4073, metadata !4074}
!4055 = metadata !{i32 589837, metadata !4052, metadata !"f_type", metadata !4053, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !4056} ; [ DW_TAG_member ]
!4056 = metadata !{i32 589846, metadata !3939, metadata !"__fsword_t", metadata !3939, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!4057 = metadata !{i32 589837, metadata !4052, metadata !"f_bsize", metadata !4053, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !4056} ; [ DW_TAG_member ]
!4058 = metadata !{i32 589837, metadata !4052, metadata !"f_blocks", metadata !4053, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !4059} ; [ DW_TAG_member ]
!4059 = metadata !{i32 589846, metadata !3939, metadata !"__fsblkcnt_t", metadata !3939, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!4060 = metadata !{i32 589837, metadata !4052, metadata !"f_bfree", metadata !4053, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !4059} ; [ DW_TAG_member ]
!4061 = metadata !{i32 589837, metadata !4052, metadata !"f_bavail", metadata !4053, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !4059} ; [ DW_TAG_member ]
!4062 = metadata !{i32 589837, metadata !4052, metadata !"f_files", metadata !4053, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !4063} ; [ DW_TAG_member ]
!4063 = metadata !{i32 589846, metadata !3939, metadata !"__fsfilcnt_t", metadata !3939, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!4064 = metadata !{i32 589837, metadata !4052, metadata !"f_ffree", metadata !4053, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !4063} ; [ DW_TAG_member ]
!4065 = metadata !{i32 589837, metadata !4052, metadata !"f_fsid", metadata !4053, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !4066} ; [ DW_TAG_member ]
!4066 = metadata !{i32 589846, metadata !3939, metadata !"__fsid_t", metadata !3939, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !4067} ; [ DW_TAG_typedef ]
!4067 = metadata !{i32 589843, metadata !3928, metadata !"", metadata !3939, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !4068, i32 0, null} ; [ DW_TAG_structure_type ]
!4068 = metadata !{metadata !4069}
!4069 = metadata !{i32 589837, metadata !4067, metadata !"__val", metadata !3939, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !4070} ; [ DW_TAG_member ]
!4070 = metadata !{i32 589825, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3953, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4071 = metadata !{i32 589837, metadata !4052, metadata !"f_namelen", metadata !4053, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !4056} ; [ DW_TAG_member ]
!4072 = metadata !{i32 589837, metadata !4052, metadata !"f_frsize", metadata !4053, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !4056} ; [ DW_TAG_member ]
!4073 = metadata !{i32 589837, metadata !4052, metadata !"f_flags", metadata !4053, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !4056} ; [ DW_TAG_member ]
!4074 = metadata !{i32 589837, metadata !4052, metadata !"f_spare", metadata !4053, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !4075} ; [ DW_TAG_member ]
!4075 = metadata !{i32 589825, metadata !3928, metadata !"", metadata !3928, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !4056, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!4076 = metadata !{i32 589870, i32 0, metadata !3928, metadata !"ftruncate", metadata !"ftruncate", metadata !"ftruncate", metadata !3928, i32 126, metadata !4077, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @ftruncate} ; [ D
!4077 = metadata !{i32 589845, metadata !3928, metadata !"", metadata !3928, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4078, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4078 = metadata !{metadata !3953, metadata !3953, metadata !4026}
!4079 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !4082, i32 503, metadata !4083, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4080 = metadata !{i32 589865, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !4081} ; [ DW_TAG_file_type ]
!4081 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!4082 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4081} ; [ DW_TAG_file_type ]
!4083 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4084, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4084 = metadata !{metadata !4085, metadata !4086, metadata !4089}
!4085 = metadata !{i32 589860, metadata !4080, metadata !"int", metadata !4080, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4086 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4087} ; [ DW_TAG_pointer_type ]
!4087 = metadata !{i32 589862, metadata !4080, metadata !"", metadata !4080, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4088} ; [ DW_TAG_const_type ]
!4088 = metadata !{i32 589860, metadata !4080, metadata !"char", metadata !4080, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4089 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4090} ; [ DW_TAG_pointer_type ]
!4090 = metadata !{i32 589843, metadata !4080, metadata !"stat64", metadata !4091, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !4092, i32 0, null} ; [ DW_TAG_structure_type ]
!4091 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !4081} ; [ DW_TAG_file_type ]
!4092 = metadata !{metadata !4093, metadata !4098, metadata !4100, metadata !4102, metadata !4105, metadata !4107, metadata !4109, metadata !4110, metadata !4111, metadata !4114, metadata !4116, metadata !4118, metadata !4126, metadata !4127, metadata !4
!4093 = metadata !{i32 589837, metadata !4090, metadata !"st_dev", metadata !4094, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !4095} ; [ DW_TAG_member ]
!4094 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4081} ; [ DW_TAG_file_type ]
!4095 = metadata !{i32 589846, metadata !4096, metadata !"__dev_t", metadata !4096, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !4097} ; [ DW_TAG_typedef ]
!4096 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4081} ; [ DW_TAG_file_type ]
!4097 = metadata !{i32 589860, metadata !4080, metadata !"long unsigned int", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4098 = metadata !{i32 589837, metadata !4090, metadata !"st_ino", metadata !4094, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4099} ; [ DW_TAG_member ]
!4099 = metadata !{i32 589846, metadata !4096, metadata !"__ino64_t", metadata !4096, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !4097} ; [ DW_TAG_typedef ]
!4100 = metadata !{i32 589837, metadata !4090, metadata !"st_nlink", metadata !4094, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !4101} ; [ DW_TAG_member ]
!4101 = metadata !{i32 589846, metadata !4096, metadata !"__nlink_t", metadata !4096, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !4097} ; [ DW_TAG_typedef ]
!4102 = metadata !{i32 589837, metadata !4090, metadata !"st_mode", metadata !4094, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !4103} ; [ DW_TAG_member ]
!4103 = metadata !{i32 589846, metadata !4096, metadata !"__mode_t", metadata !4096, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !4104} ; [ DW_TAG_typedef ]
!4104 = metadata !{i32 589860, metadata !4080, metadata !"unsigned int", metadata !4080, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4105 = metadata !{i32 589837, metadata !4090, metadata !"st_uid", metadata !4094, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !4106} ; [ DW_TAG_member ]
!4106 = metadata !{i32 589846, metadata !4096, metadata !"__uid_t", metadata !4096, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !4104} ; [ DW_TAG_typedef ]
!4107 = metadata !{i32 589837, metadata !4090, metadata !"st_gid", metadata !4094, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !4108} ; [ DW_TAG_member ]
!4108 = metadata !{i32 589846, metadata !4096, metadata !"__gid_t", metadata !4096, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !4104} ; [ DW_TAG_typedef ]
!4109 = metadata !{i32 589837, metadata !4090, metadata !"__pad0", metadata !4094, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4110 = metadata !{i32 589837, metadata !4090, metadata !"st_rdev", metadata !4094, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !4095} ; [ DW_TAG_member ]
!4111 = metadata !{i32 589837, metadata !4090, metadata !"st_size", metadata !4094, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !4112} ; [ DW_TAG_member ]
!4112 = metadata !{i32 589846, metadata !4096, metadata !"__off_t", metadata !4096, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4113 = metadata !{i32 589860, metadata !4080, metadata !"long int", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4114 = metadata !{i32 589837, metadata !4090, metadata !"st_blksize", metadata !4094, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !4115} ; [ DW_TAG_member ]
!4115 = metadata !{i32 589846, metadata !4096, metadata !"__blksize_t", metadata !4096, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4116 = metadata !{i32 589837, metadata !4090, metadata !"st_blocks", metadata !4094, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !4117} ; [ DW_TAG_member ]
!4117 = metadata !{i32 589846, metadata !4096, metadata !"__blkcnt64_t", metadata !4096, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4118 = metadata !{i32 589837, metadata !4090, metadata !"st_atim", metadata !4094, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !4119} ; [ DW_TAG_member ]
!4119 = metadata !{i32 589843, metadata !4080, metadata !"timespec", metadata !4120, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !4121, i32 0, null} ; [ DW_TAG_structure_type ]
!4120 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !4081} ; [ DW_TAG_file_type ]
!4121 = metadata !{metadata !4122, metadata !4124}
!4122 = metadata !{i32 589837, metadata !4119, metadata !"tv_sec", metadata !4120, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !4123} ; [ DW_TAG_member ]
!4123 = metadata !{i32 589846, metadata !4096, metadata !"__time_t", metadata !4096, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4124 = metadata !{i32 589837, metadata !4119, metadata !"tv_nsec", metadata !4120, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4125} ; [ DW_TAG_member ]
!4125 = metadata !{i32 589846, metadata !4096, metadata !"__syscall_slong_t", metadata !4096, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4126 = metadata !{i32 589837, metadata !4090, metadata !"st_mtim", metadata !4094, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !4119} ; [ DW_TAG_member ]
!4127 = metadata !{i32 589837, metadata !4090, metadata !"st_ctim", metadata !4094, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !4119} ; [ DW_TAG_member ]
!4128 = metadata !{i32 589837, metadata !4090, metadata !"__glibc_reserved", metadata !4094, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4129} ; [ DW_TAG_member ]
!4129 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4125, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!4130 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"__sym_uint32", metadata !"__sym_uint32", metadata !"", metadata !4080, i32 227, metadata !4131, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4131 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4132, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4132 = metadata !{metadata !4104, metadata !4086}
!4133 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"native_read_file", metadata !"native_read_file", metadata !"native_read_file", metadata !4080, i32 349, metadata !4134, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i3
!4134 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4135, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4135 = metadata !{metadata !4085, metadata !4086, metadata !4085, metadata !4136}
!4136 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4137} ; [ DW_TAG_pointer_type ]
!4137 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4088} ; [ DW_TAG_pointer_type ]
!4138 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !4080, i32 55, metadata !4139, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk
!4139 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4140, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4140 = metadata !{null, metadata !4141, metadata !4168, metadata !4104, metadata !4085}
!4141 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4142} ; [ DW_TAG_pointer_type ]
!4142 = metadata !{i32 589846, metadata !4091, metadata !"exe_disk_file_t", metadata !4091, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !4143} ; [ DW_TAG_typedef ]
!4143 = metadata !{i32 589843, metadata !4080, metadata !"", metadata !4091, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !4144, i32 0, null} ; [ DW_TAG_structure_type ]
!4144 = metadata !{metadata !4145, metadata !4146, metadata !4147, metadata !4148, metadata !4149}
!4145 = metadata !{i32 589837, metadata !4143, metadata !"size", metadata !4091, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4146 = metadata !{i32 589837, metadata !4143, metadata !"contents", metadata !4091, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !4137} ; [ DW_TAG_member ]
!4147 = metadata !{i32 589837, metadata !4143, metadata !"path", metadata !4091, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !4137} ; [ DW_TAG_member ]
!4148 = metadata !{i32 589837, metadata !4143, metadata !"stat", metadata !4091, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !4089} ; [ DW_TAG_member ]
!4149 = metadata !{i32 589837, metadata !4143, metadata !"src", metadata !4091, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !4150} ; [ DW_TAG_member ]
!4150 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4151} ; [ DW_TAG_pointer_type ]
!4151 = metadata !{i32 589846, metadata !4091, metadata !"exe_sockaddr_t", metadata !4091, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !4152} ; [ DW_TAG_typedef ]
!4152 = metadata !{i32 589843, metadata !4080, metadata !"", metadata !4091, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !4153, i32 0, null} ; [ DW_TAG_structure_type ]
!4153 = metadata !{metadata !4154, metadata !4165}
!4154 = metadata !{i32 589837, metadata !4152, metadata !"addr", metadata !4091, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !4155} ; [ DW_TAG_member ]
!4155 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4156} ; [ DW_TAG_pointer_type ]
!4156 = metadata !{i32 589843, metadata !4080, metadata !"sockaddr_storage", metadata !4157, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !4158, i32 0, null} ; [ DW_TAG_structure_type ]
!4157 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4081} ; [ DW_TAG_file_type ]
!4158 = metadata !{metadata !4159, metadata !4162, metadata !4163}
!4159 = metadata !{i32 589837, metadata !4156, metadata !"ss_family", metadata !4157, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !4160} ; [ DW_TAG_member ]
!4160 = metadata !{i32 589846, metadata !4157, metadata !"sa_family_t", metadata !4157, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !4161} ; [ DW_TAG_typedef ]
!4161 = metadata !{i32 589860, metadata !4080, metadata !"short unsigned int", metadata !4080, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4162 = metadata !{i32 589837, metadata !4156, metadata !"__ss_align", metadata !4157, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !4097} ; [ DW_TAG_member ]
!4163 = metadata !{i32 589837, metadata !4156, metadata !"__ss_padding", metadata !4157, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !4164} ; [ DW_TAG_member ]
!4164 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !4088, metadata !3190, i32 0, null} ; [ DW_TAG_array_type ]
!4165 = metadata !{i32 589837, metadata !4152, metadata !"addrlen", metadata !4091, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !4166} ; [ DW_TAG_member ]
!4166 = metadata !{i32 589846, metadata !4167, metadata !"socklen_t", metadata !4167, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !4104} ; [ DW_TAG_typedef ]
!4167 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4081} ; [ DW_TAG_file_type ]
!4168 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4169} ; [ DW_TAG_pointer_type ]
!4169 = metadata !{i32 589846, metadata !4170, metadata !"fill_info_t", metadata !4170, i32 152, i64 0, i64 0, i64 0, i32 0, metadata !4171} ; [ DW_TAG_typedef ]
!4170 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !4081} ; [ DW_TAG_file_type ]
!4171 = metadata !{i32 589843, metadata !4080, metadata !"", metadata !4091, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !4172, i32 0, null} ; [ DW_TAG_structure_type ]
!4172 = metadata !{metadata !4173, metadata !4174, metadata !4180, metadata !4181}
!4173 = metadata !{i32 589837, metadata !4171, metadata !"offset", metadata !4091, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4174 = metadata !{i32 589837, metadata !4171, metadata !"fill_method", metadata !4091, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4175} ; [ DW_TAG_member ]
!4175 = metadata !{i32 589828, metadata !4080, metadata !"", metadata !4091, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4176, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4176 = metadata !{metadata !4177, metadata !4178, metadata !4179}
!4177 = metadata !{i32 589864, metadata !"fill_set", i64 0} ; [ DW_TAG_enumerator ]
!4178 = metadata !{i32 589864, metadata !"fill_copy", i64 1} ; [ DW_TAG_enumerator ]
!4179 = metadata !{i32 589864, metadata !"fill_file", i64 2} ; [ DW_TAG_enumerator ]
!4180 = metadata !{i32 589837, metadata !4171, metadata !"length", metadata !4091, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4181 = metadata !{i32 589837, metadata !4171, metadata !"arg", metadata !4091, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !4182} ; [ DW_TAG_member ]
!4182 = metadata !{i32 589847, metadata !4080, metadata !"", metadata !4091, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !4183, i32 0, null} ; [ DW_TAG_union_type ]
!4183 = metadata !{metadata !4184, metadata !4185}
!4184 = metadata !{i32 589837, metadata !4182, metadata !"value", metadata !4091, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4185 = metadata !{i32 589837, metadata !4182, metadata !"string", metadata !4091, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !4137} ; [ DW_TAG_member ]
!4186 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"__create_new_dfile", metadata !"__create_new_dfile", metadata !"", metadata !4080, i32 104, metadata !4187, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk_fi
!4187 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4188, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4188 = metadata !{null, metadata !4141, metadata !4104, metadata !4137, metadata !4086, metadata !4168, metadata !4104, metadata !4089, metadata !4085}
!4189 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !4080, i32 370, metadata !4190, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.e
!4190 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4191, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4191 = metadata !{metadata !4141, metadata !4086, metadata !4085}
!4192 = metadata !{i32 589870, i32 0, metadata !4080, metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !4080, i32 249, metadata !4193, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i32, i32, 
!4193 = metadata !{i32 589845, metadata !4080, metadata !"", metadata !4080, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4194, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4194 = metadata !{null, metadata !4104, metadata !4104, metadata !4085, metadata !4085, metadata !4104, metadata !4104, metadata !4104, metadata !4104, metadata !4104, metadata !4085, metadata !4168, metadata !4104, metadata !4168, metadata !4104}
!4195 = metadata !{i32 589870, i32 0, metadata !4196, metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !4196, i32 20, metadata !4198, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, v
!4196 = metadata !{i32 589865, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4197} ; [ DW_TAG_file_type ]
!4197 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0}
!4198 = metadata !{i32 589845, metadata !4196, metadata !"", metadata !4196, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4199, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4199 = metadata !{null, metadata !4200, metadata !4200}
!4200 = metadata !{i32 589860, metadata !4196, metadata !"long long unsigned int", metadata !4196, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4201 = metadata !{i32 589870, i32 0, metadata !4202, metadata !"my_strlen", metadata !"my_strlen", metadata !"", metadata !4202, i32 19, metadata !4204, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4202 = metadata !{i32 589865, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4203} ; [ DW_TAG_file_type ]
!4203 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 
!4204 = metadata !{i32 589845, metadata !4202, metadata !"", metadata !4202, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4205, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4205 = metadata !{metadata !4206, metadata !4207}
!4206 = metadata !{i32 589860, metadata !4202, metadata !"int", metadata !4202, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4207 = metadata !{i32 589839, metadata !4202, metadata !"", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4208} ; [ DW_TAG_pointer_type ]
!4208 = metadata !{i32 589860, metadata !4202, metadata !"char", metadata !4202, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4209 = metadata !{i32 589870, i32 0, metadata !4202, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !4210, i32 503, metadata !4211, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4210 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4203} ; [ DW_TAG_file_type ]
!4211 = metadata !{i32 589845, metadata !4202, metadata !"", metadata !4202, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4212, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4212 = metadata !{metadata !4206, metadata !4213, metadata !4215}
!4213 = metadata !{i32 589839, metadata !4202, metadata !"", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4214} ; [ DW_TAG_pointer_type ]
!4214 = metadata !{i32 589862, metadata !4202, metadata !"", metadata !4202, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4208} ; [ DW_TAG_const_type ]
!4215 = metadata !{i32 589839, metadata !4202, metadata !"", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4216} ; [ DW_TAG_pointer_type ]
!4216 = metadata !{i32 589843, metadata !4202, metadata !"stat64", metadata !4217, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !4218, i32 0, null} ; [ DW_TAG_structure_type ]
!4217 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4203} ; [ DW_TAG_file_type ]
!4218 = metadata !{metadata !4219, metadata !4223, metadata !4225, metadata !4227, metadata !4230, metadata !4232, metadata !4234, metadata !4235, metadata !4236, metadata !4239, metadata !4241, metadata !4243, metadata !4251, metadata !4252, metadata !4
!4219 = metadata !{i32 589837, metadata !4216, metadata !"st_dev", metadata !4217, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !4220} ; [ DW_TAG_member ]
!4220 = metadata !{i32 589846, metadata !4221, metadata !"__dev_t", metadata !4221, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !4222} ; [ DW_TAG_typedef ]
!4221 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4203} ; [ DW_TAG_file_type ]
!4222 = metadata !{i32 589860, metadata !4202, metadata !"long unsigned int", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4223 = metadata !{i32 589837, metadata !4216, metadata !"st_ino", metadata !4217, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4224} ; [ DW_TAG_member ]
!4224 = metadata !{i32 589846, metadata !4221, metadata !"__ino64_t", metadata !4221, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !4222} ; [ DW_TAG_typedef ]
!4225 = metadata !{i32 589837, metadata !4216, metadata !"st_nlink", metadata !4217, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !4226} ; [ DW_TAG_member ]
!4226 = metadata !{i32 589846, metadata !4221, metadata !"__nlink_t", metadata !4221, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !4222} ; [ DW_TAG_typedef ]
!4227 = metadata !{i32 589837, metadata !4216, metadata !"st_mode", metadata !4217, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !4228} ; [ DW_TAG_member ]
!4228 = metadata !{i32 589846, metadata !4221, metadata !"__mode_t", metadata !4221, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !4229} ; [ DW_TAG_typedef ]
!4229 = metadata !{i32 589860, metadata !4202, metadata !"unsigned int", metadata !4202, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4230 = metadata !{i32 589837, metadata !4216, metadata !"st_uid", metadata !4217, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !4231} ; [ DW_TAG_member ]
!4231 = metadata !{i32 589846, metadata !4221, metadata !"__uid_t", metadata !4221, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !4229} ; [ DW_TAG_typedef ]
!4232 = metadata !{i32 589837, metadata !4216, metadata !"st_gid", metadata !4217, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !4233} ; [ DW_TAG_member ]
!4233 = metadata !{i32 589846, metadata !4221, metadata !"__gid_t", metadata !4221, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !4229} ; [ DW_TAG_typedef ]
!4234 = metadata !{i32 589837, metadata !4216, metadata !"__pad0", metadata !4217, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !4206} ; [ DW_TAG_member ]
!4235 = metadata !{i32 589837, metadata !4216, metadata !"st_rdev", metadata !4217, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !4220} ; [ DW_TAG_member ]
!4236 = metadata !{i32 589837, metadata !4216, metadata !"st_size", metadata !4217, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !4237} ; [ DW_TAG_member ]
!4237 = metadata !{i32 589846, metadata !4221, metadata !"__off_t", metadata !4221, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!4238 = metadata !{i32 589860, metadata !4202, metadata !"long int", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4239 = metadata !{i32 589837, metadata !4216, metadata !"st_blksize", metadata !4217, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !4240} ; [ DW_TAG_member ]
!4240 = metadata !{i32 589846, metadata !4221, metadata !"__blksize_t", metadata !4221, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!4241 = metadata !{i32 589837, metadata !4216, metadata !"st_blocks", metadata !4217, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !4242} ; [ DW_TAG_member ]
!4242 = metadata !{i32 589846, metadata !4221, metadata !"__blkcnt64_t", metadata !4221, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!4243 = metadata !{i32 589837, metadata !4216, metadata !"st_atim", metadata !4217, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !4244} ; [ DW_TAG_member ]
!4244 = metadata !{i32 589843, metadata !4202, metadata !"timespec", metadata !4245, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !4246, i32 0, null} ; [ DW_TAG_structure_type ]
!4245 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !4203} ; [ DW_TAG_file_type ]
!4246 = metadata !{metadata !4247, metadata !4249}
!4247 = metadata !{i32 589837, metadata !4244, metadata !"tv_sec", metadata !4245, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !4248} ; [ DW_TAG_member ]
!4248 = metadata !{i32 589846, metadata !4221, metadata !"__time_t", metadata !4221, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!4249 = metadata !{i32 589837, metadata !4244, metadata !"tv_nsec", metadata !4245, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4250} ; [ DW_TAG_member ]
!4250 = metadata !{i32 589846, metadata !4221, metadata !"__syscall_slong_t", metadata !4221, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!4251 = metadata !{i32 589837, metadata !4216, metadata !"st_mtim", metadata !4217, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !4244} ; [ DW_TAG_member ]
!4252 = metadata !{i32 589837, metadata !4216, metadata !"st_ctim", metadata !4217, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !4244} ; [ DW_TAG_member ]
!4253 = metadata !{i32 589837, metadata !4216, metadata !"__glibc_reserved", metadata !4217, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4254} ; [ DW_TAG_member ]
!4254 = metadata !{i32 589825, metadata !4202, metadata !"", metadata !4202, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4250, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!4255 = metadata !{i32 589870, i32 0, metadata !4202, metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !4202, i32 25, metadata !4256, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!4256 = metadata !{i32 589845, metadata !4202, metadata !"", metadata !4202, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4257, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4257 = metadata !{null, metadata !4206, metadata !4258}
!4258 = metadata !{i32 589839, metadata !4202, metadata !"", metadata !4202, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4207} ; [ DW_TAG_pointer_type ]
!4259 = metadata !{i32 589870, i32 0, metadata !4260, metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !4260, i32 12, metadata !4262, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void
!4260 = metadata !{i32 589865, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4261} ; [ DW_TAG_file_type ]
!4261 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} 
!4262 = metadata !{i32 589845, metadata !4260, metadata !"", metadata !4260, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4263, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4263 = metadata !{null, metadata !4264}
!4264 = metadata !{i32 589860, metadata !4260, metadata !"long long int", metadata !4260, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4265 = metadata !{i32 589870, i32 0, metadata !4266, metadata !"klee_range", metadata !"klee_range", metadata !"klee_range", metadata !4266, i32 13, metadata !4268, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i8*)* @klee_rang
!4266 = metadata !{i32 589865, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4267} ; [ DW_TAG_file_type ]
!4267 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TA
!4268 = metadata !{i32 589845, metadata !4266, metadata !"", metadata !4266, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4269, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4269 = metadata !{metadata !4270, metadata !4270, metadata !4270, metadata !4271}
!4270 = metadata !{i32 589860, metadata !4266, metadata !"int", metadata !4266, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4271 = metadata !{i32 589839, metadata !4266, metadata !"", metadata !4266, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4272} ; [ DW_TAG_pointer_type ]
!4272 = metadata !{i32 589862, metadata !4266, metadata !"", metadata !4266, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4273} ; [ DW_TAG_const_type ]
!4273 = metadata !{i32 589860, metadata !4266, metadata !"char", metadata !4266, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4274 = metadata !{i32 589876, i32 0, metadata !49, metadata !"__evoke_link_warning___fpending", metadata !"__evoke_link_warning___fpending", metadata !"", metadata !49, i32 24, metadata !4275, i1 true, i1 true, [167 x i8]* @__evoke_link_warning___fpendi
!4275 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 1336, i64 8, i64 0, i32 0, metadata !4276, metadata !4277, i32 0, null} ; [ DW_TAG_array_type ]
!4276 = metadata !{i32 589860, metadata !49, metadata !"char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4277 = metadata !{metadata !4278}
!4278 = metadata !{i32 589857, i64 0, i64 166}    ; [ DW_TAG_subrange_type ]
!4279 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__libc_stack_end", metadata !"__libc_stack_end", metadata !"", metadata !166, i32 52, metadata !194, i1 false, i1 true, i8** @__libc_stack_end} ; [ DW_TAG_variable ]
!4280 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__uclibc_progname", metadata !"__uclibc_progname", metadata !"", metadata !166, i32 110, metadata !4281, i1 false, i1 true, i8** @__uclibc_progname} ; [ DW_TAG_variable ]
!4281 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4282} ; [ DW_TAG_pointer_type ]
!4282 = metadata !{i32 589862, metadata !166, metadata !"", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !192} ; [ DW_TAG_const_type ]
!4283 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__environ", metadata !"__environ", metadata !"", metadata !166, i32 125, metadata !190, i1 false, i1 true, i8*** @__environ} ; [ DW_TAG_variable ]
!4284 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__pagesize", metadata !"__pagesize", metadata !"", metadata !166, i32 129, metadata !4285, i1 false, i1 true, i64* @__pagesize} ; [ DW_TAG_variable ]
!4285 = metadata !{i32 589846, metadata !4286, metadata !"size_t", metadata !4286, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !4287} ; [ DW_TAG_typedef ]
!4286 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !167} ; [ DW_TAG_file_type ]
!4287 = metadata !{i32 589860, metadata !166, metadata !"long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4288 = metadata !{i32 589876, i32 0, metadata !180, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !166, i32 189, metadata !170, i1 true, i1 true, i32* @been_there_done_that.2848} ; [ DW_TAG_variable ]
!4289 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__app_fini", metadata !"__app_fini", metadata !"", metadata !166, i32 244, metadata !193, i1 false, i1 true, void ()** @__app_fini} ; [ DW_TAG_variable ]
!4290 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__rtld_fini", metadata !"__rtld_fini", metadata !"", metadata !166, i32 247, metadata !193, i1 false, i1 true, void ()** @__rtld_fini} ; [ DW_TAG_variable ]
!4291 = metadata !{i32 589876, i32 0, metadata !205, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !205, i32 49, metadata !4292, i1 true, i1 true, i32* @been_there_done_that} ; [ DW_TAG_variable ]
!4292 = metadata !{i32 589860, metadata !205, metadata !"int", metadata !205, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4293 = metadata !{i32 589876, i32 0, metadata !278, metadata !"buff", metadata !"buff", metadata !"", metadata !229, i32 82, metadata !238, i1 true, i1 true, i8** @buff.2072} ; [ DW_TAG_variable ]
!4294 = metadata !{i32 589876, i32 0, metadata !278, metadata !"mnt", metadata !"mnt", metadata !"", metadata !229, i32 83, metadata !234, i1 true, i1 true, %struct.mntent* @mnt.2073} ; [ DW_TAG_variable ]
!4295 = metadata !{i32 589876, i32 0, metadata !298, metadata !"error_message_count", metadata !"error_message_count", metadata !"", metadata !298, i32 40, metadata !309, i1 false, i1 true, i32* @error_message_count} ; [ DW_TAG_variable ]
!4296 = metadata !{i32 589876, i32 0, metadata !306, metadata !"old_line_number", metadata !"old_line_number", metadata !"", metadata !298, i32 77, metadata !309, i1 true, i1 true, i32* @old_line_number.2047} ; [ DW_TAG_variable ]
!4297 = metadata !{i32 589876, i32 0, metadata !306, metadata !"old_file_name", metadata !"old_file_name", metadata !"", metadata !298, i32 76, metadata !303, i1 true, i1 true, i8** @old_file_name.2046} ; [ DW_TAG_variable ]
!4298 = metadata !{i32 589876, i32 0, metadata !298, metadata !"error_one_per_line", metadata !"error_one_per_line", metadata !"", metadata !298, i32 43, metadata !302, i1 false, i1 true, i32* @error_one_per_line} ; [ DW_TAG_variable ]
!4299 = metadata !{i32 589876, i32 0, metadata !313, metadata !"__exit_cleanup", metadata !"__exit_cleanup", metadata !"", metadata !313, i32 309, metadata !4300, i1 false, i1 true, void (i32)** @__exit_cleanup} ; [ DW_TAG_variable ]
!4300 = metadata !{i32 589839, metadata !311, metadata !"", metadata !311, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !314} ; [ DW_TAG_pointer_type ]
!4301 = metadata !{i32 589876, i32 0, metadata !746, metadata !"optind", metadata !"optind", metadata !"", metadata !746, i32 152, metadata !758, i1 false, i1 true, i32* @optind} ; [ DW_TAG_variable ]
!4302 = metadata !{i32 589876, i32 0, metadata !746, metadata !"opterr", metadata !"opterr", metadata !"", metadata !746, i32 157, metadata !758, i1 false, i1 true, i32* @opterr} ; [ DW_TAG_variable ]
!4303 = metadata !{i32 589876, i32 0, metadata !746, metadata !"optopt", metadata !"optopt", metadata !"", metadata !746, i32 163, metadata !758, i1 false, i1 true, i32* @optopt} ; [ DW_TAG_variable ]
!4304 = metadata !{i32 589876, i32 0, metadata !746, metadata !"getopt_data", metadata !"getopt_data", metadata !"", metadata !746, i32 167, metadata !754, i1 true, i1 true, %struct._getopt_data* @getopt_data} ; [ DW_TAG_variable ]
!4305 = metadata !{i32 589876, i32 0, metadata !746, metadata !"optarg", metadata !"optarg", metadata !"", metadata !746, i32 137, metadata !751, i1 false, i1 true, i8** @optarg} ; [ DW_TAG_variable ]
!4306 = metadata !{i32 589876, i32 0, metadata !804, metadata !"static_fd", metadata !"static_fd", metadata !"", metadata !804, i32 39, metadata !820, i1 true, i1 true, i32* @static_fd} ; [ DW_TAG_variable ]
!4307 = metadata !{i32 589876, i32 0, metadata !804, metadata !"default_file_name", metadata !"default_file_name", metadata !"", metadata !804, i32 41, metadata !4308, i1 true, i1 true, [14 x i8]* @default_file_name} ; [ DW_TAG_variable ]
!4308 = metadata !{i32 589825, metadata !804, metadata !"", metadata !804, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !823, metadata !3718, i32 0, null} ; [ DW_TAG_array_type ]
!4309 = metadata !{i32 589876, i32 0, metadata !804, metadata !"static_ut_name", metadata !"static_ut_name", metadata !"", metadata !804, i32 42, metadata !873, i1 true, i1 true, i8** @static_ut_name} ; [ DW_TAG_variable ]
!4310 = metadata !{i32 589876, i32 0, metadata !804, metadata !"static_utmp", metadata !"static_utmp", metadata !"", metadata !804, i32 40, metadata !812, i1 true, i1 true, %struct.utmp* @static_utmp} ; [ DW_TAG_variable ]
!4311 = metadata !{i32 589876, i32 0, metadata !898, metadata !"decpt", metadata !"decpt", metadata !"", metadata !898, i32 314, metadata !4312, i1 true, i1 true, [2 x i8]* @decpt} ; [ DW_TAG_variable ]
!4312 = metadata !{i32 589825, metadata !896, metadata !"", metadata !896, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !907, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4313 = metadata !{i32 589876, i32 0, metadata !898, metadata !"the_lconv", metadata !"the_lconv", metadata !"", metadata !898, i32 312, metadata !902, i1 true, i1 true, %struct.lconv* @the_lconv} ; [ DW_TAG_variable ]
!4314 = metadata !{i32 589876, i32 0, metadata !931, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !934, i32 281, metadata !947, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2221} ; [ DW_TAG_variable ]
!4315 = metadata !{i32 589876, i32 0, metadata !1026, metadata !"nl_data", metadata !"nl_data", metadata !"", metadata !1026, i32 968, metadata !4316, i1 true, i1 true, [417 x i8]* @nl_data} ; [ DW_TAG_variable ]
!4316 = metadata !{i32 589825, metadata !1024, metadata !"", metadata !1024, i32 0, i64 3336, i64 8, i64 0, i32 0, metadata !4317, metadata !4318, i32 0, null} ; [ DW_TAG_array_type ]
!4317 = metadata !{i32 589860, metadata !1024, metadata !"unsigned char", metadata !1024, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4318 = metadata !{metadata !4319}
!4319 = metadata !{i32 589857, i64 0, i64 416}    ; [ DW_TAG_subrange_type ]
!4320 = metadata !{i32 589876, i32 0, metadata !1053, metadata !"C_string", metadata !"C_string", metadata !"", metadata !1053, i32 159, metadata !4321, i1 true, i1 true, [2 x i8]* @C_string} ; [ DW_TAG_variable ]
!4321 = metadata !{i32 589825, metadata !1051, metadata !"", metadata !1051, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1057, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4322 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"_stdio_streams", metadata !"_stdio_streams", metadata !"", metadata !1114, i32 131, metadata !4323, i1 true, i1 true, [3 x %4]* @_stdio_streams} ; [ DW_TAG_variable ]
!4323 = metadata !{i32 589825, metadata !1114, metadata !"", metadata !1114, i32 0, i64 1920, i64 64, i64 0, i32 0, metadata !4324, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!4324 = metadata !{i32 589846, metadata !4325, metadata !"FILE", metadata !4325, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !4326} ; [ DW_TAG_typedef ]
!4325 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1115} ; [ DW_TAG_file_type ]
!4326 = metadata !{i32 589843, metadata !1114, metadata !"__STDIO_FILE_STRUCT", metadata !4325, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !4327, i32 0, null} ; [ DW_TAG_structure_type ]
!4327 = metadata !{metadata !4328, metadata !4331, metadata !4334, metadata !4336, metadata !4338, metadata !4339, metadata !4340, metadata !4341, metadata !4342, metadata !4343, metadata !4345, metadata !4349}
!4328 = metadata !{i32 589837, metadata !4326, metadata !"__modeflags", metadata !4329, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !4330} ; [ DW_TAG_member ]
!4329 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1115} ; [ DW_TAG_file_type ]
!4330 = metadata !{i32 589860, metadata !1114, metadata !"short unsigned int", metadata !1114, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4331 = metadata !{i32 589837, metadata !4326, metadata !"__ungot_width", metadata !4329, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !4332} ; [ DW_TAG_member ]
!4332 = metadata !{i32 589825, metadata !1114, metadata !"", metadata !1114, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !4333, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4333 = metadata !{i32 589860, metadata !1114, metadata !"unsigned char", metadata !1114, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4334 = metadata !{i32 589837, metadata !4326, metadata !"__filedes", metadata !4329, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !4335} ; [ DW_TAG_member ]
!4335 = metadata !{i32 589860, metadata !1114, metadata !"int", metadata !1114, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4336 = metadata !{i32 589837, metadata !4326, metadata !"__bufstart", metadata !4329, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4337 = metadata !{i32 589839, metadata !1114, metadata !"", metadata !1114, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4333} ; [ DW_TAG_pointer_type ]
!4338 = metadata !{i32 589837, metadata !4326, metadata !"__bufend", metadata !4329, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4339 = metadata !{i32 589837, metadata !4326, metadata !"__bufpos", metadata !4329, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4340 = metadata !{i32 589837, metadata !4326, metadata !"__bufread", metadata !4329, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4341 = metadata !{i32 589837, metadata !4326, metadata !"__bufgetc_u", metadata !4329, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4342 = metadata !{i32 589837, metadata !4326, metadata !"__bufputc_u", metadata !4329, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !4337} ; [ DW_TAG_member ]
!4343 = metadata !{i32 589837, metadata !4326, metadata !"__nextopen", metadata !4329, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !4344} ; [ DW_TAG_member ]
!4344 = metadata !{i32 589839, metadata !1114, metadata !"", metadata !1114, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4326} ; [ DW_TAG_pointer_type ]
!4345 = metadata !{i32 589837, metadata !4326, metadata !"__ungot", metadata !4329, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !4346} ; [ DW_TAG_member ]
!4346 = metadata !{i32 589825, metadata !1114, metadata !"", metadata !1114, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !4347, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4347 = metadata !{i32 589846, metadata !4348, metadata !"wchar_t", metadata !4348, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !4335} ; [ DW_TAG_typedef ]
!4348 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1115} ; [ DW_TAG_file_type ]
!4349 = metadata !{i32 589837, metadata !4326, metadata !"__state", metadata !4329, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !4350} ; [ DW_TAG_member ]
!4350 = metadata !{i32 589846, metadata !4351, metadata !"__mbstate_t", metadata !4351, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !4352} ; [ DW_TAG_typedef ]
!4351 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1115} ; [ DW_TAG_file_type ]
!4352 = metadata !{i32 589843, metadata !1114, metadata !"", metadata !4351, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !4353, i32 0, null} ; [ DW_TAG_structure_type ]
!4353 = metadata !{metadata !4354, metadata !4355}
!4354 = metadata !{i32 589837, metadata !4352, metadata !"__mask", metadata !4351, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !4347} ; [ DW_TAG_member ]
!4355 = metadata !{i32 589837, metadata !4352, metadata !"__wc", metadata !4351, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !4347} ; [ DW_TAG_member ]
!4356 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"stdin", metadata !"stdin", metadata !"", metadata !1114, i32 154, metadata !4357, i1 false, i1 true, %4** @stdin} ; [ DW_TAG_variable ]
!4357 = metadata !{i32 589839, metadata !1114, metadata !"", metadata !1114, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4324} ; [ DW_TAG_pointer_type ]
!4358 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"stdout", metadata !"stdout", metadata !"", metadata !1114, i32 155, metadata !4357, i1 false, i1 true, %4** @stdout} ; [ DW_TAG_variable ]
!4359 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"stderr", metadata !"stderr", metadata !"", metadata !1114, i32 156, metadata !4357, i1 false, i1 true, %4** @stderr} ; [ DW_TAG_variable ]
!4360 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"__stdin", metadata !"__stdin", metadata !"", metadata !1114, i32 159, metadata !4357, i1 false, i1 true, %4** @__stdin} ; [ DW_TAG_variable ]
!4361 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"__stdout", metadata !"__stdout", metadata !"", metadata !1114, i32 162, metadata !4357, i1 false, i1 true, %4** @__stdout} ; [ DW_TAG_variable ]
!4362 = metadata !{i32 589876, i32 0, metadata !1114, metadata !"_stdio_openlist", metadata !"_stdio_openlist", metadata !"", metadata !1114, i32 180, metadata !4344, i1 false, i1 true, %4** @_stdio_openlist} ; [ DW_TAG_variable ]
!4363 = metadata !{i32 589876, i32 0, metadata !4364, metadata !"errno", metadata !"errno", metadata !"", metadata !4364, i32 7, metadata !4366, i1 false, i1 true, i32* @errno} ; [ DW_TAG_variable ]
!4364 = metadata !{i32 589865, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !4365} ; [ DW_TAG_file_type ]
!4365 = metadata !{i32 589841, i32 0, i32 1, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!4366 = metadata !{i32 589860, metadata !4364, metadata !"int", metadata !4364, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4367 = metadata !{i32 589876, i32 0, metadata !4364, metadata !"h_errno", metadata !"h_errno", metadata !"", metadata !4364, i32 8, metadata !4366, i1 false, i1 true, i32* @h_errno} ; [ DW_TAG_variable ]
!4368 = metadata !{i32 589876, i32 0, metadata !1758, metadata !"desc2flag", metadata !"desc2flag", metadata !"", metadata !1758, i32 569, metadata !4369, i1 true, i1 true, [13 x i16]* @desc2flag} ; [ DW_TAG_variable ]
!4369 = metadata !{i32 589825, metadata !1756, metadata !"", metadata !1756, i32 0, i64 208, i64 16, i64 0, i32 0, metadata !4370, metadata !4371, i32 0, null} ; [ DW_TAG_array_type ]
!4370 = metadata !{i32 589860, metadata !1756, metadata !"short unsigned int", metadata !1756, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4371 = metadata !{metadata !4372}
!4372 = metadata !{i32 589857, i64 0, i64 12}     ; [ DW_TAG_subrange_type ]
!4373 = metadata !{i32 589876, i32 0, metadata !1767, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !1770, i32 699, metadata !1784, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2222} ; [ DW_TAG_variable ]
!4374 = metadata !{i32 589876, i32 0, metadata !1790, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !1793, i32 374, metadata !1807, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2221231} ; [ DW_TAG_variable ]
!4375 = metadata !{i32 589876, i32 0, metadata !1954, metadata !"buf", metadata !"buf", metadata !"", metadata !1955, i32 17, metadata !4376, i1 true, i1 true, [50 x i8]* @buf.1212} ; [ DW_TAG_variable ]
!4376 = metadata !{i32 589825, metadata !1955, metadata !"", metadata !1955, i32 0, i64 400, i64 8, i64 0, i32 0, metadata !1960, metadata !4377, i32 0, null} ; [ DW_TAG_array_type ]
!4377 = metadata !{metadata !4378}
!4378 = metadata !{i32 589857, i64 0, i64 49}     ; [ DW_TAG_subrange_type ]
!4379 = metadata !{i32 589876, i32 0, metadata !2050, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !2006, i32 1441, metadata !4380, i1 true, i1 true, [7 x i8]* @spec_base.3674} ; [ DW_TAG_variable ]
!4380 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !2060, metadata !4381, i32 0, null} ; [ DW_TAG_array_type ]
!4381 = metadata !{metadata !4382}
!4382 = metadata !{i32 589857, i64 0, i64 6}      ; [ DW_TAG_subrange_type ]
!4383 = metadata !{i32 589876, i32 0, metadata !2050, metadata !"prefix", metadata !"prefix", metadata !"", metadata !2006, i32 1443, metadata !4384, i1 true, i1 true, [12 x i8]* @prefix.3675} ; [ DW_TAG_variable ]
!4384 = metadata !{i32 589825, metadata !2004, metadata !"", metadata !2004, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !2060, metadata !4385, i32 0, null} ; [ DW_TAG_array_type ]
!4385 = metadata !{metadata !4386}
!4386 = metadata !{i32 589857, i64 0, i64 11}     ; [ DW_TAG_subrange_type ]
!4387 = metadata !{i32 589876, i32 0, metadata !4388, metadata !"__C_ctype_b_data", metadata !"__C_ctype_b_data", metadata !"", metadata !4388, i32 471, metadata !4390, i1 false, i1 true, [384 x i16]* @__C_ctype_b_data} ; [ DW_TAG_variable ]
!4388 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4389} ; [ DW_TAG_file_type ]
!4389 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!4390 = metadata !{i32 589825, metadata !4391, metadata !"", metadata !4391, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4392, metadata !4395, i32 0, null} ; [ DW_TAG_array_type ]
!4391 = metadata !{i32 589865, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4389} ; [ DW_TAG_file_type ]
!4392 = metadata !{i32 589846, metadata !4393, metadata !"__ctype_mask_t", metadata !4393, i32 38, i64 0, i64 0, i64 0, i32 0, metadata !4394} ; [ DW_TAG_typedef ]
!4393 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4389} ; [ DW_TAG_file_type ]
!4394 = metadata !{i32 589860, metadata !4391, metadata !"short unsigned int", metadata !4391, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4395 = metadata !{metadata !4396}
!4396 = metadata !{i32 589857, i64 0, i64 383}    ; [ DW_TAG_subrange_type ]
!4397 = metadata !{i32 589876, i32 0, metadata !4388, metadata !"__C_ctype_b", metadata !"__C_ctype_b", metadata !"", metadata !4388, i32 862, metadata !4398, i1 false, i1 true, i16** @__C_ctype_b} ; [ DW_TAG_variable ]
!4398 = metadata !{i32 589839, metadata !4391, metadata !"", metadata !4391, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4392} ; [ DW_TAG_pointer_type ]
!4399 = metadata !{i32 589876, i32 0, metadata !4388, metadata !"__ctype_b", metadata !"__ctype_b", metadata !"", metadata !4388, i32 867, metadata !4398, i1 false, i1 true, i16** @__ctype_b} ; [ DW_TAG_variable ]
!4400 = metadata !{i32 589876, i32 0, metadata !2189, metadata !"unknown", metadata !"unknown", metadata !"", metadata !2190, i32 170, metadata !4401, i1 true, i1 true, [14 x i8]* @unknown.1225} ; [ DW_TAG_variable ]
!4401 = metadata !{i32 589825, metadata !2190, metadata !"", metadata !2190, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !2196, metadata !3718, i32 0, null} ; [ DW_TAG_array_type ]
!4402 = metadata !{i32 589876, i32 0, metadata !2244, metadata !"__exit_count", metadata !"__exit_count", metadata !"", metadata !2244, i32 226, metadata !2263, i1 false, i1 true, i32* @__exit_count} ; [ DW_TAG_variable ]
!4403 = metadata !{i32 589876, i32 0, metadata !2244, metadata !"__exit_function_table", metadata !"__exit_function_table", metadata !"", metadata !2244, i32 228, metadata !2247, i1 false, i1 true, %struct.exit_function** @__exit_function_table} ; [ DW_T
!4404 = metadata !{i32 589876, i32 0, metadata !2244, metadata !"__exit_slots", metadata !"__exit_slots", metadata !"", metadata !2244, i32 229, metadata !2263, i1 false, i1 true, i32* @__exit_slots} ; [ DW_TAG_variable ]
!4405 = metadata !{i32 589876, i32 0, metadata !2321, metadata !"fmt", metadata !"fmt", metadata !"", metadata !2321, i32 102, metadata !4406, i1 true, i1 true, [20 x i8]* @fmt} ; [ DW_TAG_variable ]
!4406 = metadata !{i32 589825, metadata !2321, metadata !"", metadata !2321, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !4407, metadata !856, i32 0, null} ; [ DW_TAG_array_type ]
!4407 = metadata !{i32 589860, metadata !2321, metadata !"char", metadata !2321, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4408 = metadata !{i32 589876, i32 0, metadata !2321, metadata !"exp10_table", metadata !"exp10_table", metadata !"", metadata !2321, i32 116, metadata !4409, i1 true, i1 true, [13 x x86_fp80]* @exp10_table} ; [ DW_TAG_variable ]
!4409 = metadata !{i32 589825, metadata !2321, metadata !"", metadata !2321, i32 0, i64 1664, i64 128, i64 0, i32 0, metadata !2361, metadata !4371, i32 0, null} ; [ DW_TAG_array_type ]
!4410 = metadata !{i32 589876, i32 0, metadata !2470, metadata !"type_codes", metadata !"type_codes", metadata !"", metadata !2470, i32 759, metadata !4411, i1 true, i1 true, [12 x i16]* @type_codes} ; [ DW_TAG_variable ]
!4411 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 192, i64 16, i64 0, i32 0, metadata !4412, metadata !4385, i32 0, null} ; [ DW_TAG_array_type ]
!4412 = metadata !{i32 589860, metadata !2468, metadata !"short int", metadata !2468, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4413 = metadata !{i32 589876, i32 0, metadata !2470, metadata !"type_sizes", metadata !"type_sizes", metadata !"", metadata !2470, i32 777, metadata !4414, i1 true, i1 true, [12 x i8]* @type_sizes} ; [ DW_TAG_variable ]
!4414 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !2505, metadata !4385, i32 0, null} ; [ DW_TAG_array_type ]
!4415 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !2470, i32 861, metadata !4416, i1 true, i1 true, [8 x i8]* @spec_flags.3665} ; [ DW_TAG_variable ]
!4416 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !2487, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!4417 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !2470, i32 866, metadata !4418, i1 true, i1 true, [20 x i8]* @qual_chars.3670} ; [ DW_TAG_variable ]
!4418 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !2487, metadata !856, i32 0, null} ; [ DW_TAG_array_type ]
!4419 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !2470, i32 862, metadata !4420, i1 true, i1 true, [21 x i8]* @spec_chars.3666} ; [ DW_TAG_variable ]
!4420 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !2487, metadata !4421, i32 0, null} ; [ DW_TAG_array_type ]
!4421 = metadata !{metadata !4422}
!4422 = metadata !{i32 589857, i64 0, i64 20}     ; [ DW_TAG_subrange_type ]
!4423 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !2470, i32 863, metadata !4424, i1 true, i1 true, [9 x i8]* @spec_ranges.3667} ; [ DW_TAG_variable ]
!4424 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 72, i64 8, i64 0, i32 0, metadata !2487, metadata !2078, i32 0, null} ; [ DW_TAG_array_type ]
!4425 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"spec_or_mask", metadata !"spec_or_mask", metadata !"", metadata !2470, i32 864, metadata !4426, i1 true, i1 true, [8 x i16]* @spec_or_mask.3668} ; [ DW_TAG_variable ]
!4426 = metadata !{i32 589825, metadata !2468, metadata !"", metadata !2468, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4412, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!4427 = metadata !{i32 589876, i32 0, metadata !2477, metadata !"spec_and_mask", metadata !"spec_and_mask", metadata !"", metadata !2470, i32 865, metadata !4426, i1 true, i1 true, [8 x i16]* @spec_and_mask.3669} ; [ DW_TAG_variable ]
!4428 = metadata !{i32 589876, i32 0, metadata !2869, metadata !"decpt_str", metadata !"decpt_str", metadata !"", metadata !2869, i32 711, metadata !4429, i1 true, i1 true, [2 x i8]* @decpt_str} ; [ DW_TAG_variable ]
!4429 = metadata !{i32 589825, metadata !2867, metadata !"", metadata !2867, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2916, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4430 = metadata !{i32 589876, i32 0, metadata !2942, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !2942, i32 1787, metadata !4431, i1 true, i1 true, [15 x i8]* @spec_base} ; [ DW_TAG_variable ]
!4431 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 120, i64 8, i64 0, i32 0, metadata !2959, metadata !4432, i32 0, null} ; [ DW_TAG_array_type ]
!4432 = metadata !{metadata !4433}
!4433 = metadata !{i32 589857, i64 0, i64 14}     ; [ DW_TAG_subrange_type ]
!4434 = metadata !{i32 589876, i32 0, metadata !2942, metadata !"nil_string", metadata !"nil_string", metadata !"", metadata !2942, i32 1788, metadata !4435, i1 true, i1 true, [6 x i8]* @nil_string} ; [ DW_TAG_variable ]
!4435 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 48, i64 8, i64 0, i32 0, metadata !2959, metadata !1111, i32 0, null} ; [ DW_TAG_array_type ]
!4436 = metadata !{i32 589876, i32 0, metadata !2939, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !2942, i32 2154, metadata !4437, i1 true, i1 true, [11 x i8]* @nan_inf_str.3836} ; [ DW_TAG_variable ]
!4437 = metadata !{i32 589825, metadata !2940, metadata !"", metadata !2940, i32 0, i64 88, i64 8, i64 0, i32 0, metadata !2959, metadata !4438, i32 0, null} ; [ DW_TAG_array_type ]
!4438 = metadata !{metadata !4439}
!4439 = metadata !{i32 589857, i64 0, i64 10}     ; [ DW_TAG_subrange_type ]
!4440 = metadata !{i32 589876, i32 0, metadata !3028, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !3028, i32 822, metadata !4441, i1 true, i1 true, [4 x i8]* @spec_flags} ; [ DW_TAG_variable ]
!4441 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !3045, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!4442 = metadata !{i32 589876, i32 0, metadata !3028, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !3028, i32 824, metadata !4443, i1 true, i1 true, [23 x i8]* @spec_chars} ; [ DW_TAG_variable ]
!4443 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 184, i64 8, i64 0, i32 0, metadata !3045, metadata !4444, i32 0, null} ; [ DW_TAG_array_type ]
!4444 = metadata !{metadata !4445}
!4445 = metadata !{i32 589857, i64 0, i64 22}     ; [ DW_TAG_subrange_type ]
!4446 = metadata !{i32 589876, i32 0, metadata !3028, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !3028, i32 825, metadata !4447, i1 true, i1 true, [18 x i8]* @qual_chars} ; [ DW_TAG_variable ]
!4447 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 144, i64 8, i64 0, i32 0, metadata !3045, metadata !4448, i32 0, null} ; [ DW_TAG_array_type ]
!4448 = metadata !{metadata !4449}
!4449 = metadata !{i32 589857, i64 0, i64 17}     ; [ DW_TAG_subrange_type ]
!4450 = metadata !{i32 589876, i32 0, metadata !3028, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !3028, i32 826, metadata !4451, i1 true, i1 true, [8 x i8]* @spec_ranges} ; [ DW_TAG_variable ]
!4451 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !3045, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!4452 = metadata !{i32 589876, i32 0, metadata !3028, metadata !"spec_allowed", metadata !"spec_allowed", metadata !"", metadata !3028, i32 827, metadata !4453, i1 true, i1 true, [8 x i16]* @spec_allowed} ; [ DW_TAG_variable ]
!4453 = metadata !{i32 589825, metadata !3026, metadata !"", metadata !3026, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4454, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!4454 = metadata !{i32 589860, metadata !3026, metadata !"short unsigned int", metadata !3026, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4455 = metadata !{i32 589876, i32 0, metadata !4456, metadata !"_string_syserrmsgs", metadata !"_string_syserrmsgs", metadata !"", metadata !4456, i32 13, metadata !4458, i1 false, i1 true, [2906 x i8]* @_string_syserrmsgs} ; [ DW_TAG_variable ]
!4456 = metadata !{i32 589865, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !4457} ; [ DW_TAG_file_type ]
!4457 = metadata !{i32 589841, i32 0, i32 1, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32
!4458 = metadata !{i32 589825, metadata !4456, metadata !"", metadata !4456, i32 0, i64 23248, i64 8, i64 0, i32 0, metadata !4459, metadata !4460, i32 0, null} ; [ DW_TAG_array_type ]
!4459 = metadata !{i32 589860, metadata !4456, metadata !"char", metadata !4456, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4460 = metadata !{metadata !4461}
!4461 = metadata !{i32 589857, i64 0, i64 2905}   ; [ DW_TAG_subrange_type ]
!4462 = metadata !{i32 589876, i32 0, metadata !3090, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !3093, i32 348, metadata !4463, i1 true, i1 true, [21 x i8]* @nan_inf_str.2180} ; [ DW_TAG_variable ]
!4463 = metadata !{i32 589825, metadata !3091, metadata !"", metadata !3091, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !3101, metadata !4421, i32 0, null} ; [ DW_TAG_array_type ]
!4464 = metadata !{i32 589876, i32 0, metadata !4465, metadata !"__C_ctype_tolower_data", metadata !"__C_ctype_tolower_data", metadata !"", metadata !4465, i32 878, metadata !4467, i1 false, i1 true, [384 x i16]* @__C_ctype_tolower_data} ; [ DW_TAG_varia
!4465 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4466} ; [ DW_TAG_file_type ]
!4466 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!4467 = metadata !{i32 589825, metadata !4468, metadata !"", metadata !4468, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4469, metadata !4395, i32 0, null} ; [ DW_TAG_array_type ]
!4468 = metadata !{i32 589865, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4466} ; [ DW_TAG_file_type ]
!4469 = metadata !{i32 589846, metadata !4470, metadata !"__ctype_touplow_t", metadata !4470, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !4471} ; [ DW_TAG_typedef ]
!4470 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4466} ; [ DW_TAG_file_type ]
!4471 = metadata !{i32 589860, metadata !4468, metadata !"short int", metadata !4468, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4472 = metadata !{i32 589876, i32 0, metadata !4465, metadata !"__C_ctype_tolower", metadata !"__C_ctype_tolower", metadata !"", metadata !4465, i32 981, metadata !4473, i1 false, i1 true, i16** @__C_ctype_tolower} ; [ DW_TAG_variable ]
!4473 = metadata !{i32 589839, metadata !4468, metadata !"", metadata !4468, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4469} ; [ DW_TAG_pointer_type ]
!4474 = metadata !{i32 589876, i32 0, metadata !4465, metadata !"__ctype_tolower", metadata !"__ctype_tolower", metadata !"", metadata !4465, i32 988, metadata !4473, i1 false, i1 true, i16** @__ctype_tolower} ; [ DW_TAG_variable ]
!4475 = metadata !{i32 589876, i32 0, metadata !3294, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 413, metadata !3116, i1 true, i1 true, i32* @n_calls.5871} ; [ DW_TAG_variable ]
!4476 = metadata !{i32 589876, i32 0, metadata !3410, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 1985, metadata !3116, i1 true, i1 true, i32* @n_calls.7064} ; [ DW_TAG_variable ]
!4477 = metadata !{i32 589876, i32 0, metadata !3413, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 1334, metadata !3116, i1 true, i1 true, i32* @n_calls.6554} ; [ DW_TAG_variable ]
!4478 = metadata !{i32 589876, i32 0, metadata !3419, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 541, metadata !3116, i1 true, i1 true, i32* @n_calls.5974} ; [ DW_TAG_variable ]
!4479 = metadata !{i32 589876, i32 0, metadata !3422, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 456, metadata !3116, i1 true, i1 true, i32* @n_calls.5898} ; [ DW_TAG_variable ]
!4480 = metadata !{i32 589876, i32 0, metadata !3440, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 951, metadata !3116, i1 true, i1 true, i32* @n_calls.6299} ; [ DW_TAG_variable ]
!4481 = metadata !{i32 589876, i32 0, metadata !3443, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 929, metadata !3116, i1 true, i1 true, i32* @n_calls.6276} ; [ DW_TAG_variable ]
!4482 = metadata !{i32 589876, i32 0, metadata !3450, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3106, i32 606, metadata !3116, i1 true, i1 true, i32* @n_calls.6018} ; [ DW_TAG_variable ]
!4483 = metadata !{i32 589876, i32 0, metadata !3106, metadata !"UseConcretePath", metadata !"UseConcretePath", metadata !"", metadata !3106, i32 42, metadata !3344, i1 false, i1 true, i8* @UseConcretePath} ; [ DW_TAG_variable ]
!4484 = metadata !{i32 589876, i32 0, metadata !3567, metadata !"dummy_dfile", metadata !"dummy_dfile", metadata !"", metadata !3567, i32 85, metadata !3571, i1 true, i1 true, %struct.exe_disk_file_t* @dummy_dfile} ; [ DW_TAG_variable ]
!4485 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__one_line_streams", metadata !"__one_line_streams", metadata !"", metadata !4080, i32 49, metadata !4085, i1 true, i1 true, null} ; [ DW_TAG_variable ]
!4486 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__stream_fill_info", metadata !"__stream_fill_info", metadata !"", metadata !4080, i32 50, metadata !4168, i1 true, i1 true, %struct.fill_info_t** @__stream_fill_info} ; [ DW_TAG_variable ]
!4487 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__n_stream_fill_info", metadata !"__n_stream_fill_info", metadata !"", metadata !4080, i32 51, metadata !4104, i1 true, i1 true, i32* @__n_stream_fill_info} ; [ DW_TAG_variable ]
!4488 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__dgram_fill_info", metadata !"__dgram_fill_info", metadata !"", metadata !4080, i32 52, metadata !4168, i1 true, i1 true, %struct.fill_info_t** @__dgram_fill_info} ; [ DW_TAG_variable ]
!4489 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__n_dgram_fill_info", metadata !"__n_dgram_fill_info", metadata !"", metadata !4080, i32 53, metadata !4104, i1 true, i1 true, i32* @__n_dgram_fill_info} ; [ DW_TAG_variable ]
!4490 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__exe_env", metadata !"__exe_env", metadata !"", metadata !4080, i32 39, metadata !4491, i1 false, i1 true, %struct.exe_sym_env_t* @__exe_env} ; [ DW_TAG_variable ]
!4491 = metadata !{i32 589846, metadata !4091, metadata !"exe_sym_env_t", metadata !4091, i32 101, i64 0, i64 0, i64 0, i32 0, metadata !4492} ; [ DW_TAG_typedef ]
!4492 = metadata !{i32 589843, metadata !4080, metadata !"", metadata !4091, i32 88, i64 14464, i64 64, i64 0, i32 0, null, metadata !4493, i32 0, null} ; [ DW_TAG_structure_type ]
!4493 = metadata !{metadata !4494, metadata !4508, metadata !4510, metadata !4511}
!4494 = metadata !{i32 589837, metadata !4492, metadata !"fds", metadata !4091, i32 89, i64 14336, i64 64, i64 0, i32 0, metadata !4495} ; [ DW_TAG_member ]
!4495 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 14336, i64 64, i64 0, i32 0, metadata !4496, metadata !824, i32 0, null} ; [ DW_TAG_array_type ]
!4496 = metadata !{i32 589846, metadata !4091, metadata !"exe_file_t", metadata !4091, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !4497} ; [ DW_TAG_typedef ]
!4497 = metadata !{i32 589843, metadata !4080, metadata !"exe_file_t", metadata !4091, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !4498, i32 0, null} ; [ DW_TAG_structure_type ]
!4498 = metadata !{metadata !4499, metadata !4500, metadata !4501, metadata !4504, metadata !4505, metadata !4506, metadata !4507}
!4499 = metadata !{i32 589837, metadata !4497, metadata !"fd", metadata !4091, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4500 = metadata !{i32 589837, metadata !4497, metadata !"flags", metadata !4091, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4501 = metadata !{i32 589837, metadata !4497, metadata !"off", metadata !4091, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !4502} ; [ DW_TAG_member ]
!4502 = metadata !{i32 589846, metadata !4503, metadata !"off64_t", metadata !4503, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!4503 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4081} ; [ DW_TAG_file_type ]
!4504 = metadata !{i32 589837, metadata !4497, metadata !"dfile", metadata !4091, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4505 = metadata !{i32 589837, metadata !4497, metadata !"local", metadata !4091, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !4151} ; [ DW_TAG_member ]
!4506 = metadata !{i32 589837, metadata !4497, metadata !"foreign", metadata !4091, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !4150} ; [ DW_TAG_member ]
!4507 = metadata !{i32 589837, metadata !4497, metadata !"domain", metadata !4091, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4508 = metadata !{i32 589837, metadata !4492, metadata !"umask", metadata !4091, i32 90, i64 32, i64 32, i64 14336, i32 0, metadata !4509} ; [ DW_TAG_member ]
!4509 = metadata !{i32 589846, metadata !4503, metadata !"mode_t", metadata !4503, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !4104} ; [ DW_TAG_typedef ]
!4510 = metadata !{i32 589837, metadata !4492, metadata !"version", metadata !4091, i32 91, i64 32, i64 32, i64 14368, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4511 = metadata !{i32 589837, metadata !4492, metadata !"save_all_writes", metadata !4091, i32 95, i64 32, i64 32, i64 14400, i32 0, metadata !4085} ; [ DW_TAG_member ]
!4512 = metadata !{i32 589876, i32 0, metadata !4080, metadata !"__exe_fs", metadata !"__exe_fs", metadata !"", metadata !4080, i32 26, metadata !4513, i1 false, i1 true, %struct.exe_file_system_t* @__exe_fs} ; [ DW_TAG_variable ]
!4513 = metadata !{i32 589846, metadata !4091, metadata !"exe_file_system_t", metadata !4091, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !4514} ; [ DW_TAG_typedef ]
!4514 = metadata !{i32 589843, metadata !4080, metadata !"", metadata !4091, i32 59, i64 1216, i64 64, i64 0, i32 0, null, metadata !4515, i32 0, null} ; [ DW_TAG_structure_type ]
!4515 = metadata !{metadata !4516, metadata !4517, metadata !4518, metadata !4519, metadata !4520, metadata !4521, metadata !4522, metadata !4523, metadata !4524, metadata !4525, metadata !4526, metadata !4527, metadata !4528, metadata !4529, metadata !4
!4516 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_files", metadata !4091, i32 60, i64 32, i64 32, i64 0, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4517 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_files_used", metadata !4091, i32 61, i64 32, i64 32, i64 32, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4518 = metadata !{i32 589837, metadata !4514, metadata !"n_cp_files", metadata !4091, i32 62, i64 32, i64 32, i64 64, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4519 = metadata !{i32 589837, metadata !4514, metadata !"sym_stdin", metadata !4091, i32 63, i64 64, i64 64, i64 128, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4520 = metadata !{i32 589837, metadata !4514, metadata !"sym_stdout", metadata !4091, i32 63, i64 64, i64 64, i64 192, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4521 = metadata !{i32 589837, metadata !4514, metadata !"stdout_writes", metadata !4091, i32 64, i64 32, i64 32, i64 256, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4522 = metadata !{i32 589837, metadata !4514, metadata !"sym_files", metadata !4091, i32 65, i64 64, i64 64, i64 320, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4523 = metadata !{i32 589837, metadata !4514, metadata !"cp_files", metadata !4091, i32 66, i64 64, i64 64, i64 384, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4524 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_streams", metadata !4091, i32 68, i64 32, i64 32, i64 448, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4525 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_streams_used", metadata !4091, i32 69, i64 32, i64 32, i64 480, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4526 = metadata !{i32 589837, metadata !4514, metadata !"sym_streams", metadata !4091, i32 70, i64 64, i64 64, i64 512, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4527 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_dgrams", metadata !4091, i32 72, i64 32, i64 32, i64 576, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4528 = metadata !{i32 589837, metadata !4514, metadata !"n_sym_dgrams_used", metadata !4091, i32 73, i64 32, i64 32, i64 608, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4529 = metadata !{i32 589837, metadata !4514, metadata !"sym_dgrams", metadata !4091, i32 74, i64 64, i64 64, i64 640, i32 0, metadata !4141} ; [ DW_TAG_member ]
!4530 = metadata !{i32 589837, metadata !4514, metadata !"max_failures", metadata !4091, i32 76, i64 32, i64 32, i64 704, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4531 = metadata !{i32 589837, metadata !4514, metadata !"read_fail", metadata !4091, i32 79, i64 64, i64 64, i64 768, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4532 = metadata !{i32 589839, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4085} ; [ DW_TAG_pointer_type ]
!4533 = metadata !{i32 589837, metadata !4514, metadata !"write_fail", metadata !4091, i32 79, i64 64, i64 64, i64 832, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4534 = metadata !{i32 589837, metadata !4514, metadata !"close_fail", metadata !4091, i32 79, i64 64, i64 64, i64 896, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4535 = metadata !{i32 589837, metadata !4514, metadata !"ftruncate_fail", metadata !4091, i32 79, i64 64, i64 64, i64 960, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4536 = metadata !{i32 589837, metadata !4514, metadata !"getcwd_fail", metadata !4091, i32 79, i64 64, i64 64, i64 1024, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4537 = metadata !{i32 589837, metadata !4514, metadata !"chmod_fail", metadata !4091, i32 80, i64 64, i64 64, i64 1088, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4538 = metadata !{i32 589837, metadata !4514, metadata !"fchmod_fail", metadata !4091, i32 80, i64 64, i64 64, i64 1152, i32 0, metadata !4532} ; [ DW_TAG_member ]
!4539 = metadata !{i32 589828, metadata !3516, metadata !"", metadata !4540, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4176, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4540 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3517} ; [ DW_TAG_file_type ]
!4541 = metadata !{i32 590081, metadata !3105, metadata !"fd", metadata !3106, i32 143, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4542 = metadata !{i32 590080, metadata !4543, metadata !"f", metadata !3106, i32 157, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4543 = metadata !{i32 589835, metadata !4544, i32 143, i32 0, metadata !3106, i32 1} ; [ DW_TAG_lexical_block ]
!4544 = metadata !{i32 589835, metadata !3105, i32 143, i32 0, metadata !3106, i32 0} ; [ DW_TAG_lexical_block ]
!4545 = metadata !{i32 590081, metadata !3198, metadata !"mask", metadata !3106, i32 203, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!4546 = metadata !{i32 590080, metadata !4547, metadata !"r", metadata !3106, i32 204, metadata !3201, i32 0} ; [ DW_TAG_auto_variable ]
!4547 = metadata !{i32 589835, metadata !3198, i32 203, i32 0, metadata !3106, i32 2} ; [ DW_TAG_lexical_block ]
!4548 = metadata !{i32 590081, metadata !3202, metadata !"flags", metadata !3106, i32 212, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4549 = metadata !{i32 590081, metadata !3202, metadata !"s", metadata !3106, i32 212, metadata !3134, i32 0} ; [ DW_TAG_arg_variable ]
!4550 = metadata !{i32 590080, metadata !4551, metadata !"write_access", metadata !3106, i32 213, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4551 = metadata !{i32 589835, metadata !3202, i32 212, i32 0, metadata !3106, i32 3} ; [ DW_TAG_lexical_block ]
!4552 = metadata !{i32 590080, metadata !4551, metadata !"read_access", metadata !3106, i32 213, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4553 = metadata !{i32 590080, metadata !4551, metadata !"mode", metadata !3106, i32 214, metadata !3201, i32 0} ; [ DW_TAG_auto_variable ]
!4554 = metadata !{i32 590081, metadata !3205, metadata !"out_fd", metadata !3106, i32 2482, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4555 = metadata !{i32 590081, metadata !3205, metadata !"in_fd", metadata !3106, i32 2482, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4556 = metadata !{i32 590081, metadata !3205, metadata !"offset", metadata !3106, i32 2482, metadata !3209, i32 0} ; [ DW_TAG_arg_variable ]
!4557 = metadata !{i32 590081, metadata !3205, metadata !"count", metadata !3106, i32 2482, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4558 = metadata !{i32 590080, metadata !4559, metadata !"out_f", metadata !3106, i32 2484, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4559 = metadata !{i32 589835, metadata !3205, i32 2483, i32 0, metadata !3106, i32 4} ; [ DW_TAG_lexical_block ]
!4560 = metadata !{i32 590080, metadata !4559, metadata !"in_f", metadata !3106, i32 2485, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4561 = metadata !{i32 590080, metadata !4562, metadata !"os", metadata !3106, i32 2491, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!4562 = metadata !{i32 589835, metadata !4559, i32 2491, i32 0, metadata !3106, i32 5} ; [ DW_TAG_lexical_block ]
!4563 = metadata !{i32 590081, metadata !3212, metadata !"out_fd", metadata !3106, i32 2498, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4564 = metadata !{i32 590081, metadata !3212, metadata !"in_fd", metadata !3106, i32 2498, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4565 = metadata !{i32 590081, metadata !3212, metadata !"offset", metadata !3106, i32 2498, metadata !3209, i32 0} ; [ DW_TAG_arg_variable ]
!4566 = metadata !{i32 590081, metadata !3212, metadata !"count", metadata !3106, i32 2498, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4567 = metadata !{i32 590081, metadata !3213, metadata !"fd", metadata !3106, i32 1715, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4568 = metadata !{i32 590080, metadata !4569, metadata !"f", metadata !3106, i32 1716, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4569 = metadata !{i32 589835, metadata !3213, i32 1715, i32 0, metadata !3106, i32 7} ; [ DW_TAG_lexical_block ]
!4570 = metadata !{i32 590080, metadata !4571, metadata !"r", metadata !3106, i32 1724, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4571 = metadata !{i32 589835, metadata !4569, i32 1724, i32 0, metadata !3106, i32 8} ; [ DW_TAG_lexical_block ]
!4572 = metadata !{i32 590081, metadata !3216, metadata !"path", metadata !3106, i32 2075, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4573 = metadata !{i32 590081, metadata !3221, metadata !"fd", metadata !3106, i32 1695, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4574 = metadata !{i32 590081, metadata !3221, metadata !"buf", metadata !3106, i32 1695, metadata !3224, i32 0} ; [ DW_TAG_arg_variable ]
!4575 = metadata !{i32 590080, metadata !4576, metadata !"f", metadata !3106, i32 1696, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4576 = metadata !{i32 589835, metadata !3221, i32 1695, i32 0, metadata !3106, i32 10} ; [ DW_TAG_lexical_block ]
!4577 = metadata !{i32 590080, metadata !4578, metadata !"r", metadata !3106, i32 1708, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4578 = metadata !{i32 589835, metadata !4576, i32 1708, i32 0, metadata !3106, i32 11} ; [ DW_TAG_lexical_block ]
!4579 = metadata !{i32 590081, metadata !3249, metadata !"fd", metadata !3106, i32 1611, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4580 = metadata !{i32 590081, metadata !3249, metadata !"cmd", metadata !3106, i32 1611, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4581 = metadata !{i32 590080, metadata !4582, metadata !"f", metadata !3106, i32 1612, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4582 = metadata !{i32 589835, metadata !3249, i32 1611, i32 0, metadata !3106, i32 12} ; [ DW_TAG_lexical_block ]
!4583 = metadata !{i32 590080, metadata !4582, metadata !"ap", metadata !3106, i32 1613, metadata !4584, i32 0} ; [ DW_TAG_auto_variable ]
!4584 = metadata !{i32 589846, metadata !4585, metadata !"va_list", metadata !4585, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !4586} ; [ DW_TAG_typedef ]
!4585 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3107} ; [ DW_TAG_file_type ]
!4586 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4587, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!4587 = metadata !{i32 589843, metadata !3106, metadata !"__va_list_tag", metadata !4588, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !4589, i32 0, null} ; [ DW_TAG_structure_type ]
!4588 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3107} ; [ DW_TAG_file_type ]
!4589 = metadata !{metadata !4590, metadata !4591, metadata !4592, metadata !4593}
!4590 = metadata !{i32 589837, metadata !4587, metadata !"gp_offset", metadata !4588, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3118} ; [ DW_TAG_member ]
!4591 = metadata !{i32 589837, metadata !4587, metadata !"fp_offset", metadata !4588, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3118} ; [ DW_TAG_member ]
!4592 = metadata !{i32 589837, metadata !4587, metadata !"overflow_arg_area", metadata !4588, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !3321} ; [ DW_TAG_member ]
!4593 = metadata !{i32 589837, metadata !4587, metadata !"reg_save_area", metadata !4588, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !3321} ; [ DW_TAG_member ]
!4594 = metadata !{i32 590080, metadata !4582, metadata !"arg", metadata !3106, i32 1614, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!4595 = metadata !{i32 590080, metadata !4596, metadata !"flags", metadata !3106, i32 1644, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4596 = metadata !{i32 589835, metadata !4582, i32 1644, i32 0, metadata !3106, i32 13} ; [ DW_TAG_lexical_block ]
!4597 = metadata !{i32 590080, metadata !4598, metadata !"r", metadata !3106, i32 1671, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4598 = metadata !{i32 589835, metadata !4582, i32 1671, i32 0, metadata !3106, i32 14} ; [ DW_TAG_lexical_block ]
!4599 = metadata !{i32 590081, metadata !3252, metadata !"fd", metadata !3106, i32 1169, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4600 = metadata !{i32 590081, metadata !3252, metadata !"times", metadata !3106, i32 1169, metadata !3255, i32 0} ; [ DW_TAG_arg_variable ]
!4601 = metadata !{i32 590080, metadata !4602, metadata !"f", metadata !3106, i32 1170, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4602 = metadata !{i32 589835, metadata !3252, i32 1169, i32 0, metadata !3106, i32 15} ; [ DW_TAG_lexical_block ]
!4603 = metadata !{i32 590080, metadata !4602, metadata !"r", metadata !3106, i32 1182, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4604 = metadata !{i32 590081, metadata !3257, metadata !"df", metadata !3106, i32 977, metadata !3124, i32 0} ; [ DW_TAG_arg_variable ]
!4605 = metadata !{i32 590081, metadata !3257, metadata !"owner", metadata !3106, i32 977, metadata !3260, i32 0} ; [ DW_TAG_arg_variable ]
!4606 = metadata !{i32 590081, metadata !3257, metadata !"group", metadata !3106, i32 977, metadata !3261, i32 0} ; [ DW_TAG_arg_variable ]
!4607 = metadata !{i32 590081, metadata !3262, metadata !"fd", metadata !3106, i32 996, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4608 = metadata !{i32 590081, metadata !3262, metadata !"owner", metadata !3106, i32 996, metadata !3260, i32 0} ; [ DW_TAG_arg_variable ]
!4609 = metadata !{i32 590081, metadata !3262, metadata !"group", metadata !3106, i32 996, metadata !3261, i32 0} ; [ DW_TAG_arg_variable ]
!4610 = metadata !{i32 590080, metadata !4611, metadata !"f", metadata !3106, i32 997, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4611 = metadata !{i32 589835, metadata !3262, i32 996, i32 0, metadata !3106, i32 17} ; [ DW_TAG_lexical_block ]
!4612 = metadata !{i32 590080, metadata !4613, metadata !"r", metadata !3106, i32 1007, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4613 = metadata !{i32 589835, metadata !4611, i32 1007, i32 0, metadata !3106, i32 18} ; [ DW_TAG_lexical_block ]
!4614 = metadata !{i32 590081, metadata !3265, metadata !"fd", metadata !3106, i32 811, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4615 = metadata !{i32 590080, metadata !4616, metadata !"f", metadata !3106, i32 812, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4616 = metadata !{i32 589835, metadata !3265, i32 811, i32 0, metadata !3106, i32 19} ; [ DW_TAG_lexical_block ]
!4617 = metadata !{i32 590080, metadata !4618, metadata !"r", metadata !3106, i32 824, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4618 = metadata !{i32 589835, metadata !4616, i32 824, i32 0, metadata !3106, i32 20} ; [ DW_TAG_lexical_block ]
!4619 = metadata !{i32 590081, metadata !3266, metadata !"fd", metadata !3106, i32 2303, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4620 = metadata !{i32 590081, metadata !3266, metadata !"request", metadata !3106, i32 2303, metadata !3141, i32 0} ; [ DW_TAG_arg_variable ]
!4621 = metadata !{i32 590080, metadata !4622, metadata !"f", metadata !3106, i32 2304, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4622 = metadata !{i32 589835, metadata !3266, i32 2303, i32 0, metadata !3106, i32 21} ; [ DW_TAG_lexical_block ]
!4623 = metadata !{i32 590080, metadata !4622, metadata !"ap", metadata !3106, i32 2305, metadata !4584, i32 0} ; [ DW_TAG_auto_variable ]
!4624 = metadata !{i32 590080, metadata !4622, metadata !"buf", metadata !3106, i32 2306, metadata !3321, i32 0} ; [ DW_TAG_auto_variable ]
!4625 = metadata !{i32 590080, metadata !4626, metadata !"stat", metadata !3106, i32 2322, metadata !3378, i32 0} ; [ DW_TAG_auto_variable ]
!4626 = metadata !{i32 589835, metadata !4622, i32 2322, i32 0, metadata !3106, i32 22} ; [ DW_TAG_lexical_block ]
!4627 = metadata !{i32 590080, metadata !4628, metadata !"ts", metadata !3106, i32 2326, metadata !4629, i32 0} ; [ DW_TAG_auto_variable ]
!4628 = metadata !{i32 589835, metadata !4626, i32 2326, i32 0, metadata !3106, i32 23} ; [ DW_TAG_lexical_block ]
!4629 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4630} ; [ DW_TAG_pointer_type ]
!4630 = metadata !{i32 589843, metadata !3106, metadata !"termios", metadata !4631, i32 29, i64 480, i64 32, i64 0, i32 0, null, metadata !4632, i32 0, null} ; [ DW_TAG_structure_type ]
!4631 = metadata !{i32 589865, metadata !"termios.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!4632 = metadata !{metadata !4633, metadata !4635, metadata !4636, metadata !4637, metadata !4638, metadata !4640, metadata !4642, metadata !4644}
!4633 = metadata !{i32 589837, metadata !4630, metadata !"c_iflag", metadata !4631, i32 30, i64 32, i64 32, i64 0, i32 0, metadata !4634} ; [ DW_TAG_member ]
!4634 = metadata !{i32 589846, metadata !4631, metadata !"tcflag_t", metadata !4631, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!4635 = metadata !{i32 589837, metadata !4630, metadata !"c_oflag", metadata !4631, i32 31, i64 32, i64 32, i64 32, i32 0, metadata !4634} ; [ DW_TAG_member ]
!4636 = metadata !{i32 589837, metadata !4630, metadata !"c_cflag", metadata !4631, i32 32, i64 32, i64 32, i64 64, i32 0, metadata !4634} ; [ DW_TAG_member ]
!4637 = metadata !{i32 589837, metadata !4630, metadata !"c_lflag", metadata !4631, i32 33, i64 32, i64 32, i64 96, i32 0, metadata !4634} ; [ DW_TAG_member ]
!4638 = metadata !{i32 589837, metadata !4630, metadata !"c_line", metadata !4631, i32 34, i64 8, i64 8, i64 128, i32 0, metadata !4639} ; [ DW_TAG_member ]
!4639 = metadata !{i32 589846, metadata !4631, metadata !"cc_t", metadata !4631, i32 24, i64 0, i64 0, i64 0, i32 0, metadata !3309} ; [ DW_TAG_typedef ]
!4640 = metadata !{i32 589837, metadata !4630, metadata !"c_cc", metadata !4631, i32 35, i64 256, i64 8, i64 136, i32 0, metadata !4641} ; [ DW_TAG_member ]
!4641 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !4639, metadata !824, i32 0, null} ; [ DW_TAG_array_type ]
!4642 = metadata !{i32 589837, metadata !4630, metadata !"c_ispeed", metadata !4631, i32 36, i64 32, i64 32, i64 416, i32 0, metadata !4643} ; [ DW_TAG_member ]
!4643 = metadata !{i32 589846, metadata !4631, metadata !"speed_t", metadata !4631, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!4644 = metadata !{i32 589837, metadata !4630, metadata !"c_ospeed", metadata !4631, i32 37, i64 32, i64 32, i64 448, i32 0, metadata !4643} ; [ DW_TAG_member ]
!4645 = metadata !{i32 590080, metadata !4646, metadata !"ws", metadata !3106, i32 2395, metadata !4647, i32 0} ; [ DW_TAG_auto_variable ]
!4646 = metadata !{i32 589835, metadata !4626, i32 2395, i32 0, metadata !3106, i32 24} ; [ DW_TAG_lexical_block ]
!4647 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4648} ; [ DW_TAG_pointer_type ]
!4648 = metadata !{i32 589843, metadata !3106, metadata !"winsize", metadata !4649, i32 28, i64 64, i64 16, i64 0, i32 0, null, metadata !4650, i32 0, null} ; [ DW_TAG_structure_type ]
!4649 = metadata !{i32 589865, metadata !"ioctl-types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3107} ; [ DW_TAG_file_type ]
!4650 = metadata !{metadata !4651, metadata !4652, metadata !4653, metadata !4654}
!4651 = metadata !{i32 589837, metadata !4648, metadata !"ws_row", metadata !4649, i32 29, i64 16, i64 16, i64 0, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4652 = metadata !{i32 589837, metadata !4648, metadata !"ws_col", metadata !4649, i32 30, i64 16, i64 16, i64 16, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4653 = metadata !{i32 589837, metadata !4648, metadata !"ws_xpixel", metadata !4649, i32 31, i64 16, i64 16, i64 32, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4654 = metadata !{i32 589837, metadata !4648, metadata !"ws_ypixel", metadata !4649, i32 32, i64 16, i64 16, i64 48, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4655 = metadata !{i32 590080, metadata !4656, metadata !"res", metadata !3106, i32 2418, metadata !3334, i32 0} ; [ DW_TAG_auto_variable ]
!4656 = metadata !{i32 589835, metadata !4626, i32 2418, i32 0, metadata !3106, i32 25} ; [ DW_TAG_lexical_block ]
!4657 = metadata !{i32 590080, metadata !4658, metadata !"ifr", metadata !3106, i32 2438, metadata !4659, i32 0} ; [ DW_TAG_auto_variable ]
!4658 = metadata !{i32 589835, metadata !4626, i32 2438, i32 0, metadata !3106, i32 26} ; [ DW_TAG_lexical_block ]
!4659 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4660} ; [ DW_TAG_pointer_type ]
!4660 = metadata !{i32 589843, metadata !3106, metadata !"ifreq", metadata !4661, i32 127, i64 320, i64 64, i64 0, i32 0, null, metadata !4662, i32 0, null} ; [ DW_TAG_structure_type ]
!4661 = metadata !{i32 589865, metadata !"if.h", metadata !"/usr/include/net", metadata !3107} ; [ DW_TAG_file_type ]
!4662 = metadata !{metadata !4663, metadata !4668}
!4663 = metadata !{i32 589837, metadata !4660, metadata !"ifr_ifrn", metadata !4661, i32 133, i64 128, i64 8, i64 0, i32 0, metadata !4664} ; [ DW_TAG_member ]
!4664 = metadata !{i32 589847, metadata !3106, metadata !"", metadata !4661, i32 131, i64 128, i64 8, i64 0, i32 0, null, metadata !4665, i32 0, null} ; [ DW_TAG_union_type ]
!4665 = metadata !{metadata !4666}
!4666 = metadata !{i32 589837, metadata !4664, metadata !"ifrn_name", metadata !4661, i32 132, i64 128, i64 8, i64 0, i32 0, metadata !4667} ; [ DW_TAG_member ]
!4667 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !3131, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!4668 = metadata !{i32 589837, metadata !4660, metadata !"ifr_ifru", metadata !4661, i32 149, i64 192, i64 64, i64 128, i32 0, metadata !4669} ; [ DW_TAG_member ]
!4669 = metadata !{i32 589847, metadata !3106, metadata !"", metadata !4661, i32 136, i64 192, i64 64, i64 0, i32 0, null, metadata !4670, i32 0, null} ; [ DW_TAG_union_type ]
!4670 = metadata !{metadata !4671, metadata !4677, metadata !4678, metadata !4679, metadata !4680, metadata !4681, metadata !4683, metadata !4684, metadata !4685, metadata !4694, metadata !4695, metadata !4696}
!4671 = metadata !{i32 589837, metadata !4669, metadata !"ifru_addr", metadata !4661, i32 137, i64 128, i64 16, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4672 = metadata !{i32 589843, metadata !3106, metadata !"sockaddr", metadata !3182, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !4673, i32 0, null} ; [ DW_TAG_structure_type ]
!4673 = metadata !{metadata !4674, metadata !4675}
!4674 = metadata !{i32 589837, metadata !4672, metadata !"sa_family", metadata !3182, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3185} ; [ DW_TAG_member ]
!4675 = metadata !{i32 589837, metadata !4672, metadata !"sa_data", metadata !3182, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !4676} ; [ DW_TAG_member ]
!4676 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3131, metadata !3718, i32 0, null} ; [ DW_TAG_array_type ]
!4677 = metadata !{i32 589837, metadata !4669, metadata !"ifru_dstaddr", metadata !4661, i32 138, i64 128, i64 16, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4678 = metadata !{i32 589837, metadata !4669, metadata !"ifru_broadaddr", metadata !4661, i32 139, i64 128, i64 16, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4679 = metadata !{i32 589837, metadata !4669, metadata !"ifru_netmask", metadata !4661, i32 140, i64 128, i64 16, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4680 = metadata !{i32 589837, metadata !4669, metadata !"ifru_hwaddr", metadata !4661, i32 141, i64 128, i64 16, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4681 = metadata !{i32 589837, metadata !4669, metadata !"ifru_flags", metadata !4661, i32 142, i64 16, i64 16, i64 0, i32 0, metadata !4682} ; [ DW_TAG_member ]
!4682 = metadata !{i32 589860, metadata !3106, metadata !"short int", metadata !3106, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4683 = metadata !{i32 589837, metadata !4669, metadata !"ifru_ivalue", metadata !4661, i32 143, i64 32, i64 32, i64 0, i32 0, metadata !3116} ; [ DW_TAG_member ]
!4684 = metadata !{i32 589837, metadata !4669, metadata !"ifru_mtu", metadata !4661, i32 144, i64 32, i64 32, i64 0, i32 0, metadata !3116} ; [ DW_TAG_member ]
!4685 = metadata !{i32 589837, metadata !4669, metadata !"ifru_map", metadata !4661, i32 145, i64 192, i64 64, i64 0, i32 0, metadata !4686} ; [ DW_TAG_member ]
!4686 = metadata !{i32 589843, metadata !3106, metadata !"ifmap", metadata !4661, i32 112, i64 192, i64 64, i64 0, i32 0, null, metadata !4687, i32 0, null} ; [ DW_TAG_structure_type ]
!4687 = metadata !{metadata !4688, metadata !4689, metadata !4690, metadata !4691, metadata !4692, metadata !4693}
!4688 = metadata !{i32 589837, metadata !4686, metadata !"mem_start", metadata !4661, i32 113, i64 64, i64 64, i64 0, i32 0, metadata !3141} ; [ DW_TAG_member ]
!4689 = metadata !{i32 589837, metadata !4686, metadata !"mem_end", metadata !4661, i32 114, i64 64, i64 64, i64 64, i32 0, metadata !3141} ; [ DW_TAG_member ]
!4690 = metadata !{i32 589837, metadata !4686, metadata !"base_addr", metadata !4661, i32 115, i64 16, i64 16, i64 128, i32 0, metadata !3186} ; [ DW_TAG_member ]
!4691 = metadata !{i32 589837, metadata !4686, metadata !"irq", metadata !4661, i32 116, i64 8, i64 8, i64 144, i32 0, metadata !3309} ; [ DW_TAG_member ]
!4692 = metadata !{i32 589837, metadata !4686, metadata !"dma", metadata !4661, i32 117, i64 8, i64 8, i64 152, i32 0, metadata !3309} ; [ DW_TAG_member ]
!4693 = metadata !{i32 589837, metadata !4686, metadata !"port", metadata !4661, i32 118, i64 8, i64 8, i64 160, i32 0, metadata !3309} ; [ DW_TAG_member ]
!4694 = metadata !{i32 589837, metadata !4669, metadata !"ifru_slave", metadata !4661, i32 146, i64 128, i64 8, i64 0, i32 0, metadata !4667} ; [ DW_TAG_member ]
!4695 = metadata !{i32 589837, metadata !4669, metadata !"ifru_newname", metadata !4661, i32 147, i64 128, i64 8, i64 0, i32 0, metadata !4667} ; [ DW_TAG_member ]
!4696 = metadata !{i32 589837, metadata !4669, metadata !"ifru_data", metadata !4661, i32 148, i64 64, i64 64, i64 0, i32 0, metadata !4697} ; [ DW_TAG_member ]
!4697 = metadata !{i32 589846, metadata !3140, metadata !"__caddr_t", metadata !3140, i32 186, i64 0, i64 0, i64 0, i32 0, metadata !3130} ; [ DW_TAG_typedef ]
!4698 = metadata !{i32 590080, metadata !4699, metadata !"ifr", metadata !3106, i32 2443, metadata !4659, i32 0} ; [ DW_TAG_auto_variable ]
!4699 = metadata !{i32 589835, metadata !4626, i32 2443, i32 0, metadata !3106, i32 27} ; [ DW_TAG_lexical_block ]
!4700 = metadata !{i32 590080, metadata !4699, metadata !"ia", metadata !3106, i32 2444, metadata !4701, i32 0} ; [ DW_TAG_auto_variable ]
!4701 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4676} ; [ DW_TAG_pointer_type ]
!4702 = metadata !{i32 590080, metadata !4703, metadata !"ifr", metadata !3106, i32 2450, metadata !4659, i32 0} ; [ DW_TAG_auto_variable ]
!4703 = metadata !{i32 589835, metadata !4626, i32 2450, i32 0, metadata !3106, i32 28} ; [ DW_TAG_lexical_block ]
!4704 = metadata !{i32 590080, metadata !4705, metadata !"ia", metadata !3106, i32 2456, metadata !4706, i32 0} ; [ DW_TAG_auto_variable ]
!4705 = metadata !{i32 589835, metadata !4703, i32 2456, i32 0, metadata !3106, i32 29} ; [ DW_TAG_lexical_block ]
!4706 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4707} ; [ DW_TAG_pointer_type ]
!4707 = metadata !{i32 589843, metadata !3106, metadata !"in_addr", metadata !4708, i32 32, i64 32, i64 32, i64 0, i32 0, null, metadata !4709, i32 0, null} ; [ DW_TAG_structure_type ]
!4708 = metadata !{i32 589865, metadata !"in.h", metadata !"/usr/include/netinet", metadata !3107} ; [ DW_TAG_file_type ]
!4709 = metadata !{metadata !4710}
!4710 = metadata !{i32 589837, metadata !4707, metadata !"s_addr", metadata !4708, i32 33, i64 32, i64 32, i64 0, i32 0, metadata !4711} ; [ DW_TAG_member ]
!4711 = metadata !{i32 589846, metadata !4708, metadata !"in_addr_t", metadata !4708, i32 32, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!4712 = metadata !{i32 590080, metadata !4713, metadata !"ia", metadata !3106, i32 2462, metadata !4714, i32 0} ; [ DW_TAG_auto_variable ]
!4713 = metadata !{i32 589835, metadata !4703, i32 2462, i32 0, metadata !3106, i32 30} ; [ DW_TAG_lexical_block ]
!4714 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4715} ; [ DW_TAG_pointer_type ]
!4715 = metadata !{i32 589843, metadata !3106, metadata !"in6_addr", metadata !4708, i32 210, i64 128, i64 32, i64 0, i32 0, null, metadata !4716, i32 0, null} ; [ DW_TAG_structure_type ]
!4716 = metadata !{metadata !4717}
!4717 = metadata !{i32 589837, metadata !4715, metadata !"__in6_u", metadata !4708, i32 218, i64 128, i64 32, i64 0, i32 0, metadata !4718} ; [ DW_TAG_member ]
!4718 = metadata !{i32 589847, metadata !3106, metadata !"", metadata !4708, i32 212, i64 128, i64 32, i64 0, i32 0, null, metadata !4719, i32 0, null} ; [ DW_TAG_union_type ]
!4719 = metadata !{metadata !4720, metadata !4724, metadata !4727}
!4720 = metadata !{i32 589837, metadata !4718, metadata !"__u6_addr8", metadata !4708, i32 213, i64 128, i64 8, i64 0, i32 0, metadata !4721} ; [ DW_TAG_member ]
!4721 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !4722, metadata !1268, i32 0, null} ; [ DW_TAG_array_type ]
!4722 = metadata !{i32 589846, metadata !4723, metadata !"uint8_t", metadata !4723, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3309} ; [ DW_TAG_typedef ]
!4723 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/usr/include", metadata !3107} ; [ DW_TAG_file_type ]
!4724 = metadata !{i32 589837, metadata !4718, metadata !"__u6_addr16", metadata !4708, i32 215, i64 128, i64 16, i64 0, i32 0, metadata !4725} ; [ DW_TAG_member ]
!4725 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4726, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!4726 = metadata !{i32 589846, metadata !4723, metadata !"uint16_t", metadata !4723, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !3186} ; [ DW_TAG_typedef ]
!4727 = metadata !{i32 589837, metadata !4718, metadata !"__u6_addr32", metadata !4708, i32 216, i64 128, i64 32, i64 0, i32 0, metadata !4728} ; [ DW_TAG_member ]
!4728 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !4729, metadata !828, i32 0, null} ; [ DW_TAG_array_type ]
!4729 = metadata !{i32 589846, metadata !4723, metadata !"uint32_t", metadata !4723, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !3118} ; [ DW_TAG_typedef ]
!4730 = metadata !{i32 590080, metadata !4731, metadata !"r", metadata !3106, i32 2475, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4731 = metadata !{i32 589835, metadata !4622, i32 2475, i32 0, metadata !3106, i32 31} ; [ DW_TAG_lexical_block ]
!4732 = metadata !{i32 590081, metadata !3269, metadata !"f", metadata !3106, i32 2149, metadata !3110, i32 0} ; [ DW_TAG_arg_variable ]
!4733 = metadata !{i32 590081, metadata !3272, metadata !"pf", metadata !3106, i32 2127, metadata !3275, i32 0} ; [ DW_TAG_arg_variable ]
!4734 = metadata !{i32 590080, metadata !4735, metadata !"fd", metadata !3106, i32 2128, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4735 = metadata !{i32 589835, metadata !3272, i32 2127, i32 0, metadata !3106, i32 33} ; [ DW_TAG_lexical_block ]
!4736 = metadata !{i32 590081, metadata !3276, metadata !"nfds", metadata !3106, i32 1874, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4737 = metadata !{i32 590081, metadata !3276, metadata !"read", metadata !3106, i32 1874, metadata !3279, i32 0} ; [ DW_TAG_arg_variable ]
!4738 = metadata !{i32 590081, metadata !3276, metadata !"write", metadata !3106, i32 1874, metadata !3279, i32 0} ; [ DW_TAG_arg_variable ]
!4739 = metadata !{i32 590081, metadata !3276, metadata !"except", metadata !3106, i32 1875, metadata !3279, i32 0} ; [ DW_TAG_arg_variable ]
!4740 = metadata !{i32 590081, metadata !3276, metadata !"timeout", metadata !3106, i32 1875, metadata !3287, i32 0} ; [ DW_TAG_arg_variable ]
!4741 = metadata !{i32 590080, metadata !4742, metadata !"in_read", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4742 = metadata !{i32 589835, metadata !3276, i32 1875, i32 0, metadata !3106, i32 34} ; [ DW_TAG_lexical_block ]
!4743 = metadata !{i32 590080, metadata !4742, metadata !"in_write", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4744 = metadata !{i32 590080, metadata !4742, metadata !"in_except", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4745 = metadata !{i32 590080, metadata !4742, metadata !"os_read", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4746 = metadata !{i32 590080, metadata !4742, metadata !"os_write", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4747 = metadata !{i32 590080, metadata !4742, metadata !"os_except", metadata !3106, i32 1876, metadata !3280, i32 0} ; [ DW_TAG_auto_variable ]
!4748 = metadata !{i32 590080, metadata !4742, metadata !"i", metadata !3106, i32 1877, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4749 = metadata !{i32 590080, metadata !4742, metadata !"count", metadata !3106, i32 1877, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4750 = metadata !{i32 590080, metadata !4742, metadata !"os_nfds", metadata !3106, i32 1877, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4751 = metadata !{i32 590080, metadata !4752, metadata !"f", metadata !3106, i32 1913, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4752 = metadata !{i32 589835, metadata !4742, i32 1913, i32 0, metadata !3106, i32 35} ; [ DW_TAG_lexical_block ]
!4753 = metadata !{i32 590080, metadata !4754, metadata !"flags", metadata !3106, i32 1919, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!4754 = metadata !{i32 589835, metadata !4752, i32 1919, i32 0, metadata !3106, i32 36} ; [ DW_TAG_lexical_block ]
!4755 = metadata !{i32 590080, metadata !4756, metadata !"tv", metadata !3106, i32 1952, metadata !3288, i32 0} ; [ DW_TAG_auto_variable ]
!4756 = metadata !{i32 589835, metadata !4742, i32 1952, i32 0, metadata !3106, i32 37} ; [ DW_TAG_lexical_block ]
!4757 = metadata !{i32 590080, metadata !4756, metadata !"r", metadata !3106, i32 1953, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4758 = metadata !{i32 590080, metadata !4759, metadata !"f", metadata !3106, i32 1968, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4759 = metadata !{i32 589835, metadata !4756, i32 1968, i32 0, metadata !3106, i32 38} ; [ DW_TAG_lexical_block ]
!4760 = metadata !{i32 590081, metadata !3294, metadata !"fd", metadata !3106, i32 412, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4761 = metadata !{i32 590080, metadata !4762, metadata !"f", metadata !3106, i32 414, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4762 = metadata !{i32 589835, metadata !3294, i32 412, i32 0, metadata !3106, i32 39} ; [ DW_TAG_lexical_block ]
!4763 = metadata !{i32 590080, metadata !4762, metadata !"r", metadata !3106, i32 415, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4764 = metadata !{i32 590081, metadata !3295, metadata !"oldfd", metadata !3106, i32 1731, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4765 = metadata !{i32 590081, metadata !3295, metadata !"newfd", metadata !3106, i32 1731, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4766 = metadata !{i32 590080, metadata !4767, metadata !"f", metadata !3106, i32 1732, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4767 = metadata !{i32 589835, metadata !3295, i32 1731, i32 0, metadata !3106, i32 40} ; [ DW_TAG_lexical_block ]
!4768 = metadata !{i32 590080, metadata !4767, metadata !"i", metadata !3106, i32 1742, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4769 = metadata !{i32 590080, metadata !4767, metadata !"idx", metadata !3106, i32 1742, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4770 = metadata !{i32 590080, metadata !4767, metadata !"f2", metadata !3106, i32 1756, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4771 = metadata !{i32 590081, metadata !3296, metadata !"oldfd", metadata !3106, i32 1779, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4772 = metadata !{i32 590080, metadata !4773, metadata !"f", metadata !3106, i32 1780, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4773 = metadata !{i32 589835, metadata !3296, i32 1779, i32 0, metadata !3106, i32 41} ; [ DW_TAG_lexical_block ]
!4774 = metadata !{i32 590080, metadata !4775, metadata !"fd", metadata !3106, i32 1788, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4775 = metadata !{i32 589835, metadata !4773, i32 1789, i32 0, metadata !3106, i32 42} ; [ DW_TAG_lexical_block ]
!4776 = metadata !{i32 590081, metadata !3297, metadata !"fd", metadata !3106, i32 1367, metadata !3118, i32 0} ; [ DW_TAG_arg_variable ]
!4777 = metadata !{i32 590081, metadata !3297, metadata !"dirp", metadata !3106, i32 1367, metadata !3300, i32 0} ; [ DW_TAG_arg_variable ]
!4778 = metadata !{i32 590081, metadata !3297, metadata !"count", metadata !3106, i32 1367, metadata !3118, i32 0} ; [ DW_TAG_arg_variable ]
!4779 = metadata !{i32 590080, metadata !4780, metadata !"f", metadata !3106, i32 1368, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4780 = metadata !{i32 589835, metadata !3297, i32 1367, i32 0, metadata !3106, i32 43} ; [ DW_TAG_lexical_block ]
!4781 = metadata !{i32 590080, metadata !4782, metadata !"i", metadata !3106, i32 1387, metadata !3120, i32 0} ; [ DW_TAG_auto_variable ]
!4782 = metadata !{i32 589835, metadata !4780, i32 1387, i32 0, metadata !3106, i32 44} ; [ DW_TAG_lexical_block ]
!4783 = metadata !{i32 590080, metadata !4782, metadata !"pad", metadata !3106, i32 1387, metadata !3120, i32 0} ; [ DW_TAG_auto_variable ]
!4784 = metadata !{i32 590080, metadata !4782, metadata !"bytes", metadata !3106, i32 1387, metadata !3120, i32 0} ; [ DW_TAG_auto_variable ]
!4785 = metadata !{i32 590080, metadata !4786, metadata !"df", metadata !3106, i32 1397, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4786 = metadata !{i32 589835, metadata !4782, i32 1397, i32 0, metadata !3106, i32 45} ; [ DW_TAG_lexical_block ]
!4787 = metadata !{i32 590080, metadata !4788, metadata !"os_pos", metadata !3106, i32 1421, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!4788 = metadata !{i32 589835, metadata !4780, i32 1421, i32 0, metadata !3106, i32 46} ; [ DW_TAG_lexical_block ]
!4789 = metadata !{i32 590080, metadata !4788, metadata !"res", metadata !3106, i32 1423, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4790 = metadata !{i32 590080, metadata !4788, metadata !"s", metadata !3106, i32 1434, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4791 = metadata !{i32 590080, metadata !4792, metadata !"pos", metadata !3106, i32 1443, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4792 = metadata !{i32 589835, metadata !4788, i32 1443, i32 0, metadata !3106, i32 47} ; [ DW_TAG_lexical_block ]
!4793 = metadata !{i32 590080, metadata !4794, metadata !"dp", metadata !3106, i32 1449, metadata !3300, i32 0} ; [ DW_TAG_auto_variable ]
!4794 = metadata !{i32 589835, metadata !4792, i32 1449, i32 0, metadata !3106, i32 48} ; [ DW_TAG_lexical_block ]
!4795 = metadata !{i32 590081, metadata !3312, metadata !"f", metadata !3106, i32 2231, metadata !3110, i32 0} ; [ DW_TAG_arg_variable ]
!4796 = metadata !{i32 590081, metadata !3312, metadata !"iov", metadata !3106, i32 2231, metadata !3315, i32 0} ; [ DW_TAG_arg_variable ]
!4797 = metadata !{i32 590081, metadata !3312, metadata !"iovcnt", metadata !3106, i32 2231, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4798 = metadata !{i32 590080, metadata !4799, metadata !"total", metadata !3106, i32 2233, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!4799 = metadata !{i32 589835, metadata !3312, i32 2232, i32 0, metadata !3106, i32 49} ; [ DW_TAG_lexical_block ]
!4800 = metadata !{i32 590080, metadata !4801, metadata !"this_len", metadata !3106, i32 2237, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4801 = metadata !{i32 589835, metadata !4799, i32 2237, i32 0, metadata !3106, i32 50} ; [ DW_TAG_lexical_block ]
!4802 = metadata !{i32 590080, metadata !4803, metadata !"os", metadata !3106, i32 2271, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4803 = metadata !{i32 589835, metadata !4799, i32 2271, i32 0, metadata !3106, i32 51} ; [ DW_TAG_lexical_block ]
!4804 = metadata !{i32 590081, metadata !3323, metadata !"fd", metadata !3106, i32 2278, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4805 = metadata !{i32 590081, metadata !3323, metadata !"iov", metadata !3106, i32 2278, metadata !3315, i32 0} ; [ DW_TAG_arg_variable ]
!4806 = metadata !{i32 590081, metadata !3323, metadata !"iovcnt", metadata !3106, i32 2278, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4807 = metadata !{i32 590080, metadata !4808, metadata !"f", metadata !3106, i32 2279, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4808 = metadata !{i32 589835, metadata !3323, i32 2278, i32 0, metadata !3106, i32 52} ; [ DW_TAG_lexical_block ]
!4809 = metadata !{i32 590080, metadata !4810, metadata !"r", metadata !3106, i32 2289, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4810 = metadata !{i32 589835, metadata !4808, i32 2290, i32 0, metadata !3106, i32 53} ; [ DW_TAG_lexical_block ]
!4811 = metadata !{i32 590081, metadata !3326, metadata !"fd", metadata !3106, i32 1028, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4812 = metadata !{i32 590081, metadata !3326, metadata !"buf", metadata !3106, i32 1028, metadata !3134, i32 0} ; [ DW_TAG_arg_variable ]
!4813 = metadata !{i32 590080, metadata !4814, metadata !"f", metadata !3106, i32 1029, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4814 = metadata !{i32 589835, metadata !3326, i32 1028, i32 0, metadata !3106, i32 54} ; [ DW_TAG_lexical_block ]
!4815 = metadata !{i32 590080, metadata !4816, metadata !"r", metadata !3106, i32 1045, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4816 = metadata !{i32 589835, metadata !4814, i32 1045, i32 0, metadata !3106, i32 55} ; [ DW_TAG_lexical_block ]
!4817 = metadata !{i32 590081, metadata !3327, metadata !"f", metadata !3106, i32 2180, metadata !3110, i32 0} ; [ DW_TAG_arg_variable ]
!4818 = metadata !{i32 590081, metadata !3327, metadata !"iov", metadata !3106, i32 2180, metadata !3315, i32 0} ; [ DW_TAG_arg_variable ]
!4819 = metadata !{i32 590081, metadata !3327, metadata !"iovcnt", metadata !3106, i32 2180, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4820 = metadata !{i32 590080, metadata !4821, metadata !"total", metadata !3106, i32 2184, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!4821 = metadata !{i32 589835, metadata !4822, i32 2184, i32 0, metadata !3106, i32 57} ; [ DW_TAG_lexical_block ]
!4822 = metadata !{i32 589835, metadata !3327, i32 2181, i32 0, metadata !3106, i32 56} ; [ DW_TAG_lexical_block ]
!4823 = metadata !{i32 590080, metadata !4824, metadata !"this_len", metadata !3106, i32 2191, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4824 = metadata !{i32 589835, metadata !4821, i32 2191, i32 0, metadata !3106, i32 58} ; [ DW_TAG_lexical_block ]
!4825 = metadata !{i32 590080, metadata !4826, metadata !"os", metadata !3106, i32 2201, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!4826 = metadata !{i32 589835, metadata !4822, i32 2201, i32 0, metadata !3106, i32 59} ; [ DW_TAG_lexical_block ]
!4827 = metadata !{i32 590080, metadata !4828, metadata !"p", metadata !3106, i32 2205, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4828 = metadata !{i32 589835, metadata !4826, i32 2206, i32 0, metadata !3106, i32 60} ; [ DW_TAG_lexical_block ]
!4829 = metadata !{i32 590080, metadata !4828, metadata !"cb", metadata !3106, i32 2206, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!4830 = metadata !{i32 590080, metadata !4828, metadata !"this_len", metadata !3106, i32 2207, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4831 = metadata !{i32 590081, metadata !3328, metadata !"addr", metadata !3106, i32 908, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!4832 = metadata !{i32 590081, metadata !3328, metadata !"length", metadata !3106, i32 908, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4833 = metadata !{i32 590081, metadata !3331, metadata !"filedes", metadata !3106, i32 2154, metadata !3334, i32 0} ; [ DW_TAG_arg_variable ]
!4834 = metadata !{i32 590080, metadata !4835, metadata !"f", metadata !3106, i32 2155, metadata !4836, i32 0} ; [ DW_TAG_auto_variable ]
!4835 = metadata !{i32 589835, metadata !3331, i32 2154, i32 0, metadata !3106, i32 62} ; [ DW_TAG_lexical_block ]
!4836 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3110, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4837 = metadata !{i32 590080, metadata !4835, metadata !"os_filedes", metadata !3106, i32 2156, metadata !3243, i32 0} ; [ DW_TAG_auto_variable ]
!4838 = metadata !{i32 590080, metadata !4835, metadata !"r", metadata !3106, i32 2157, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4839 = metadata !{i32 590081, metadata !3335, metadata !"p", metadata !3106, i32 2019, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!4840 = metadata !{i32 590080, metadata !4841, metadata !"pc", metadata !3106, i32 2021, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4841 = metadata !{i32 589835, metadata !3335, i32 2019, i32 0, metadata !3106, i32 63} ; [ DW_TAG_lexical_block ]
!4842 = metadata !{i32 590081, metadata !3338, metadata !"s", metadata !3106, i32 2032, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4843 = metadata !{i32 590080, metadata !4844, metadata !"sc", metadata !3106, i32 2033, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4844 = metadata !{i32 589835, metadata !3338, i32 2032, i32 0, metadata !3106, i32 64} ; [ DW_TAG_lexical_block ]
!4845 = metadata !{i32 590080, metadata !4844, metadata !"i", metadata !3106, i32 2034, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!4846 = metadata !{i32 590080, metadata !4847, metadata !"c", metadata !3106, i32 2037, metadata !3131, i32 0} ; [ DW_TAG_auto_variable ]
!4847 = metadata !{i32 589835, metadata !4844, i32 2037, i32 0, metadata !3106, i32 65} ; [ DW_TAG_lexical_block ]
!4848 = metadata !{i32 590080, metadata !4849, metadata !"cc", metadata !3106, i32 2046, metadata !3131, i32 0} ; [ DW_TAG_auto_variable ]
!4849 = metadata !{i32 589835, metadata !4847, i32 2046, i32 0, metadata !3106, i32 66} ; [ DW_TAG_lexical_block ]
!4850 = metadata !{i32 590081, metadata !3341, metadata !"pathname", metadata !3106, i32 61, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4851 = metadata !{i32 590081, metadata !3341, metadata !"flags", metadata !3106, i32 61, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4852 = metadata !{i32 590081, metadata !3341, metadata !"cp_treat_symbolic", metadata !3106, i32 61, metadata !3344, i32 0} ; [ DW_TAG_arg_variable ]
!4853 = metadata !{i32 590080, metadata !4854, metadata !"c", metadata !3106, i32 62, metadata !3131, i32 0} ; [ DW_TAG_auto_variable ]
!4854 = metadata !{i32 589835, metadata !3341, i32 61, i32 0, metadata !3106, i32 67} ; [ DW_TAG_lexical_block ]
!4855 = metadata !{i32 590080, metadata !4854, metadata !"i", metadata !3106, i32 63, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!4856 = metadata !{i32 590080, metadata !4857, metadata !"df", metadata !3106, i32 73, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4857 = metadata !{i32 589835, metadata !4854, i32 73, i32 0, metadata !3106, i32 68} ; [ DW_TAG_lexical_block ]
!4858 = metadata !{i32 590080, metadata !4859, metadata !"df", metadata !3106, i32 80, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4859 = metadata !{i32 589835, metadata !4854, i32 80, i32 0, metadata !3106, i32 69} ; [ DW_TAG_lexical_block ]
!4860 = metadata !{i32 590080, metadata !4859, metadata !"file_check", metadata !3106, i32 81, metadata !3344, i32 0} ; [ DW_TAG_auto_variable ]
!4861 = metadata !{i32 590080, metadata !4862, metadata !"dot", metadata !3106, i32 90, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4862 = metadata !{i32 589835, metadata !4859, i32 90, i32 0, metadata !3106, i32 70} ; [ DW_TAG_lexical_block ]
!4863 = metadata !{i32 590080, metadata !4864, metadata !"__s1_len", metadata !3106, i32 91, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4864 = metadata !{i32 589835, metadata !4862, i32 91, i32 0, metadata !3106, i32 71} ; [ DW_TAG_lexical_block ]
!4865 = metadata !{i32 590080, metadata !4864, metadata !"__s2_len", metadata !3106, i32 91, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4866 = metadata !{i32 590080, metadata !4867, metadata !"__s2", metadata !3106, i32 91, metadata !4868, i32 0} ; [ DW_TAG_auto_variable ]
!4867 = metadata !{i32 589835, metadata !4864, i32 91, i32 0, metadata !3106, i32 72} ; [ DW_TAG_lexical_block ]
!4868 = metadata !{i32 589839, metadata !3106, metadata !"", metadata !3106, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4869} ; [ DW_TAG_pointer_type ]
!4869 = metadata !{i32 589862, metadata !3106, metadata !"", metadata !3106, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3309} ; [ DW_TAG_const_type ]
!4870 = metadata !{i32 590080, metadata !4867, metadata !"__result", metadata !3106, i32 91, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4871 = metadata !{i32 590080, metadata !4872, metadata !"shadow", metadata !3106, i32 97, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4872 = metadata !{i32 589835, metadata !4859, i32 97, i32 0, metadata !3106, i32 73} ; [ DW_TAG_lexical_block ]
!4873 = metadata !{i32 590080, metadata !4872, metadata !"toConcretize", metadata !3106, i32 98, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4874 = metadata !{i32 590080, metadata !4872, metadata !"concrete_path", metadata !3106, i32 113, metadata !3219, i32 0} ; [ DW_TAG_auto_variable ]
!4875 = metadata !{i32 590080, metadata !4876, metadata !"len", metadata !3106, i32 106, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4876 = metadata !{i32 589835, metadata !4872, i32 106, i32 0, metadata !3106, i32 74} ; [ DW_TAG_lexical_block ]
!4877 = metadata !{i32 590080, metadata !4876, metadata !"pathCopy", metadata !3106, i32 107, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!4878 = metadata !{i32 590080, metadata !4879, metadata !"__s1_len", metadata !3106, i32 115, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4879 = metadata !{i32 589835, metadata !4872, i32 115, i32 0, metadata !3106, i32 75} ; [ DW_TAG_lexical_block ]
!4880 = metadata !{i32 590080, metadata !4879, metadata !"__s2_len", metadata !3106, i32 115, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4881 = metadata !{i32 590081, metadata !3345, metadata !"pathname", metadata !3106, i32 56, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4882 = metadata !{i32 590081, metadata !3348, metadata !"path", metadata !3106, i32 2108, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4883 = metadata !{i32 590081, metadata !3348, metadata !"times", metadata !3106, i32 2108, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!4884 = metadata !{i32 590080, metadata !4885, metadata !"dfile", metadata !3106, i32 2109, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4885 = metadata !{i32 589835, metadata !3348, i32 2108, i32 0, metadata !3106, i32 77} ; [ DW_TAG_lexical_block ]
!4886 = metadata !{i32 590080, metadata !4885, metadata !"r", metadata !3106, i32 2118, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4887 = metadata !{i32 590081, metadata !3351, metadata !"path", metadata !3106, i32 1842, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4888 = metadata !{i32 590081, metadata !3351, metadata !"buf", metadata !3106, i32 1842, metadata !3130, i32 0} ; [ DW_TAG_arg_variable ]
!4889 = metadata !{i32 590081, metadata !3351, metadata !"bufsize", metadata !3106, i32 1842, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4890 = metadata !{i32 590080, metadata !4891, metadata !"dfile", metadata !3106, i32 1843, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4891 = metadata !{i32 589835, metadata !3351, i32 1842, i32 0, metadata !3106, i32 78} ; [ DW_TAG_lexical_block ]
!4892 = metadata !{i32 590080, metadata !4893, metadata !"r", metadata !3106, i32 1859, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4893 = metadata !{i32 589835, metadata !4891, i32 1859, i32 0, metadata !3106, i32 79} ; [ DW_TAG_lexical_block ]
!4894 = metadata !{i32 590081, metadata !3354, metadata !"path", metadata !3106, i32 2090, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4895 = metadata !{i32 590081, metadata !3354, metadata !"times", metadata !3106, i32 2090, metadata !3357, i32 0} ; [ DW_TAG_arg_variable ]
!4896 = metadata !{i32 590080, metadata !4897, metadata !"dfile", metadata !3106, i32 2091, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4897 = metadata !{i32 589835, metadata !3354, i32 2090, i32 0, metadata !3106, i32 80} ; [ DW_TAG_lexical_block ]
!4898 = metadata !{i32 590080, metadata !4897, metadata !"r", metadata !3106, i32 2101, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4899 = metadata !{i32 590081, metadata !3359, metadata !"pathname", metadata !3106, i32 1820, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4900 = metadata !{i32 590080, metadata !4901, metadata !"dfile", metadata !3106, i32 1821, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4901 = metadata !{i32 589835, metadata !3359, i32 1820, i32 0, metadata !3106, i32 81} ; [ DW_TAG_lexical_block ]
!4902 = metadata !{i32 590080, metadata !4903, metadata !"r", metadata !3106, i32 1835, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4903 = metadata !{i32 589835, metadata !4901, i32 1835, i32 0, metadata !3106, i32 82} ; [ DW_TAG_lexical_block ]
!4904 = metadata !{i32 590081, metadata !3360, metadata !"pathname", metadata !3106, i32 1801, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4905 = metadata !{i32 590080, metadata !4906, metadata !"dfile", metadata !3106, i32 1802, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4906 = metadata !{i32 589835, metadata !3360, i32 1801, i32 0, metadata !3106, i32 83} ; [ DW_TAG_lexical_block ]
!4907 = metadata !{i32 590080, metadata !4908, metadata !"r", metadata !3106, i32 1813, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4908 = metadata !{i32 589835, metadata !4906, i32 1813, i32 0, metadata !3106, i32 84} ; [ DW_TAG_lexical_block ]
!4909 = metadata !{i32 590081, metadata !3361, metadata !"path", metadata !3106, i32 1678, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4910 = metadata !{i32 590081, metadata !3361, metadata !"buf", metadata !3106, i32 1678, metadata !3224, i32 0} ; [ DW_TAG_arg_variable ]
!4911 = metadata !{i32 590080, metadata !4912, metadata !"dfile", metadata !3106, i32 1679, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4912 = metadata !{i32 589835, metadata !3361, i32 1678, i32 0, metadata !3106, i32 85} ; [ DW_TAG_lexical_block ]
!4913 = metadata !{i32 590080, metadata !4914, metadata !"r", metadata !3106, i32 1688, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4914 = metadata !{i32 589835, metadata !4912, i32 1688, i32 0, metadata !3106, i32 86} ; [ DW_TAG_lexical_block ]
!4915 = metadata !{i32 590081, metadata !3364, metadata !"fd", metadata !3106, i32 1228, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4916 = metadata !{i32 590081, metadata !3364, metadata !"path", metadata !3106, i32 1228, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4917 = metadata !{i32 590081, metadata !3364, metadata !"flags", metadata !3106, i32 1228, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4918 = metadata !{i32 590080, metadata !4919, metadata !"f", metadata !3106, i32 1231, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4919 = metadata !{i32 589835, metadata !3364, i32 1228, i32 0, metadata !3106, i32 87} ; [ DW_TAG_lexical_block ]
!4920 = metadata !{i32 590080, metadata !4919, metadata !"fd_idx", metadata !3106, i32 1232, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4921 = metadata !{i32 590080, metadata !4919, metadata !"ap", metadata !3106, i32 1257, metadata !4584, i32 0} ; [ DW_TAG_auto_variable ]
!4922 = metadata !{i32 590080, metadata !4919, metadata !"mode", metadata !3106, i32 1258, metadata !3201, i32 0} ; [ DW_TAG_auto_variable ]
!4923 = metadata !{i32 590080, metadata !4924, metadata !"os_fd", metadata !3106, i32 1305, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4924 = metadata !{i32 589835, metadata !4919, i32 1305, i32 0, metadata !3106, i32 88} ; [ DW_TAG_lexical_block ]
!4925 = metadata !{i32 590081, metadata !3367, metadata !"oldpath", metadata !3106, i32 1209, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4926 = metadata !{i32 590081, metadata !3367, metadata !"newpath", metadata !3106, i32 1209, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4927 = metadata !{i32 590080, metadata !4928, metadata !"dfile", metadata !3106, i32 1210, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4928 = metadata !{i32 589835, metadata !3367, i32 1209, i32 0, metadata !3106, i32 89} ; [ DW_TAG_lexical_block ]
!4929 = metadata !{i32 590080, metadata !4928, metadata !"r", metadata !3106, i32 1222, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4930 = metadata !{i32 590081, metadata !3370, metadata !"oldpath", metadata !3106, i32 1190, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4931 = metadata !{i32 590081, metadata !3370, metadata !"newpath", metadata !3106, i32 1190, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4932 = metadata !{i32 590080, metadata !4933, metadata !"dfile", metadata !3106, i32 1191, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4933 = metadata !{i32 589835, metadata !3370, i32 1190, i32 0, metadata !3106, i32 90} ; [ DW_TAG_lexical_block ]
!4934 = metadata !{i32 590080, metadata !4933, metadata !"r", metadata !3106, i32 1203, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4935 = metadata !{i32 590081, metadata !3371, metadata !"fd", metadata !3106, i32 1139, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4936 = metadata !{i32 590081, metadata !3371, metadata !"path", metadata !3106, i32 1139, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4937 = metadata !{i32 590081, metadata !3371, metadata !"times", metadata !3106, i32 1139, metadata !3357, i32 0} ; [ DW_TAG_arg_variable ]
!4938 = metadata !{i32 590080, metadata !4939, metadata !"dfile", metadata !3106, i32 1140, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4939 = metadata !{i32 589835, metadata !3371, i32 1139, i32 0, metadata !3106, i32 91} ; [ DW_TAG_lexical_block ]
!4940 = metadata !{i32 590080, metadata !4939, metadata !"f", metadata !3106, i32 1146, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4941 = metadata !{i32 590080, metadata !4939, metadata !"r", metadata !3106, i32 1156, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4942 = metadata !{i32 590081, metadata !3374, metadata !"fd", metadata !3106, i32 1106, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4943 = metadata !{i32 590081, metadata !3374, metadata !"path", metadata !3106, i32 1106, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4944 = metadata !{i32 590081, metadata !3374, metadata !"flags", metadata !3106, i32 1106, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4945 = metadata !{i32 590080, metadata !4946, metadata !"dfile", metadata !3106, i32 1107, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4946 = metadata !{i32 589835, metadata !3374, i32 1106, i32 0, metadata !3106, i32 92} ; [ DW_TAG_lexical_block ]
!4947 = metadata !{i32 590080, metadata !4946, metadata !"f", metadata !3106, i32 1113, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4948 = metadata !{i32 590080, metadata !4946, metadata !"r", metadata !3106, i32 1126, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4949 = metadata !{i32 590081, metadata !3375, metadata !"fd", metadata !3106, i32 1065, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4950 = metadata !{i32 590081, metadata !3375, metadata !"path", metadata !3106, i32 1065, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4951 = metadata !{i32 590081, metadata !3375, metadata !"buf", metadata !3106, i32 1065, metadata !3378, i32 0} ; [ DW_TAG_arg_variable ]
!4952 = metadata !{i32 590081, metadata !3375, metadata !"flags", metadata !3106, i32 1065, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4953 = metadata !{i32 590080, metadata !4954, metadata !"dfile", metadata !3106, i32 1066, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4954 = metadata !{i32 589835, metadata !3375, i32 1065, i32 0, metadata !3106, i32 93} ; [ DW_TAG_lexical_block ]
!4955 = metadata !{i32 590080, metadata !4954, metadata !"f", metadata !3106, i32 1072, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4956 = metadata !{i32 590080, metadata !4954, metadata !"r", metadata !3106, i32 1088, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4957 = metadata !{i32 590081, metadata !3398, metadata !"path", metadata !3106, i32 1014, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4958 = metadata !{i32 590081, metadata !3398, metadata !"owner", metadata !3106, i32 1014, metadata !3260, i32 0} ; [ DW_TAG_arg_variable ]
!4959 = metadata !{i32 590081, metadata !3398, metadata !"group", metadata !3106, i32 1014, metadata !3261, i32 0} ; [ DW_TAG_arg_variable ]
!4960 = metadata !{i32 590080, metadata !4961, metadata !"df", metadata !3106, i32 1016, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4961 = metadata !{i32 589835, metadata !3398, i32 1014, i32 0, metadata !3106, i32 94} ; [ DW_TAG_lexical_block ]
!4962 = metadata !{i32 590080, metadata !4963, metadata !"r", metadata !3106, i32 1021, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4963 = metadata !{i32 589835, metadata !4961, i32 1021, i32 0, metadata !3106, i32 95} ; [ DW_TAG_lexical_block ]
!4964 = metadata !{i32 590081, metadata !3401, metadata !"path", metadata !3106, i32 983, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4965 = metadata !{i32 590081, metadata !3401, metadata !"owner", metadata !3106, i32 983, metadata !3260, i32 0} ; [ DW_TAG_arg_variable ]
!4966 = metadata !{i32 590081, metadata !3401, metadata !"group", metadata !3106, i32 983, metadata !3261, i32 0} ; [ DW_TAG_arg_variable ]
!4967 = metadata !{i32 590080, metadata !4968, metadata !"df", metadata !3106, i32 984, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4968 = metadata !{i32 589835, metadata !3401, i32 983, i32 0, metadata !3106, i32 96} ; [ DW_TAG_lexical_block ]
!4969 = metadata !{i32 590080, metadata !4970, metadata !"r", metadata !3106, i32 989, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4970 = metadata !{i32 589835, metadata !4968, i32 989, i32 0, metadata !3106, i32 97} ; [ DW_TAG_lexical_block ]
!4971 = metadata !{i32 590081, metadata !3402, metadata !"path", metadata !3106, i32 793, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4972 = metadata !{i32 590080, metadata !4973, metadata !"dfile", metadata !3106, i32 794, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4973 = metadata !{i32 589835, metadata !3402, i32 793, i32 0, metadata !3106, i32 98} ; [ DW_TAG_lexical_block ]
!4974 = metadata !{i32 590080, metadata !4975, metadata !"r", metadata !3106, i32 804, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4975 = metadata !{i32 589835, metadata !4973, i32 804, i32 0, metadata !3106, i32 99} ; [ DW_TAG_lexical_block ]
!4976 = metadata !{i32 590081, metadata !3403, metadata !"pathname", metadata !3106, i32 184, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4977 = metadata !{i32 590081, metadata !3403, metadata !"mode", metadata !3106, i32 184, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4978 = metadata !{i32 590080, metadata !4979, metadata !"dfile", metadata !3106, i32 185, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4979 = metadata !{i32 589835, metadata !3403, i32 184, i32 0, metadata !3106, i32 100} ; [ DW_TAG_lexical_block ]
!4980 = metadata !{i32 590080, metadata !4981, metadata !"r", metadata !3106, i32 195, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4981 = metadata !{i32 589835, metadata !4979, i32 195, i32 0, metadata !3106, i32 101} ; [ DW_TAG_lexical_block ]
!4982 = metadata !{i32 590081, metadata !3406, metadata !"pathname", metadata !3106, i32 166, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!4983 = metadata !{i32 590081, metadata !3406, metadata !"mode", metadata !3106, i32 166, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4984 = metadata !{i32 590080, metadata !4985, metadata !"dfile", metadata !3106, i32 167, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!4985 = metadata !{i32 589835, metadata !3406, i32 166, i32 0, metadata !3106, i32 102} ; [ DW_TAG_lexical_block ]
!4986 = metadata !{i32 590080, metadata !4987, metadata !"r", metadata !3106, i32 177, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4987 = metadata !{i32 589835, metadata !4985, i32 177, i32 0, metadata !3106, i32 103} ; [ DW_TAG_lexical_block ]
!4988 = metadata !{i32 590081, metadata !3407, metadata !"s", metadata !3106, i32 2026, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4989 = metadata !{i32 590080, metadata !4990, metadata !"sc", metadata !3106, i32 2027, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!4990 = metadata !{i32 589835, metadata !3407, i32 2026, i32 0, metadata !3106, i32 104} ; [ DW_TAG_lexical_block ]
!4991 = metadata !{i32 590081, metadata !3410, metadata !"buf", metadata !3106, i32 1984, metadata !3130, i32 0} ; [ DW_TAG_arg_variable ]
!4992 = metadata !{i32 590081, metadata !3410, metadata !"size", metadata !3106, i32 1984, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!4993 = metadata !{i32 590080, metadata !4994, metadata !"r", metadata !3106, i32 1986, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!4994 = metadata !{i32 589835, metadata !3410, i32 1984, i32 0, metadata !3106, i32 105} ; [ DW_TAG_lexical_block ]
!4995 = metadata !{i32 590081, metadata !3413, metadata !"fd", metadata !3106, i32 1333, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!4996 = metadata !{i32 590081, metadata !3413, metadata !"length", metadata !3106, i32 1333, metadata !3120, i32 0} ; [ DW_TAG_arg_variable ]
!4997 = metadata !{i32 590080, metadata !4998, metadata !"f", metadata !3106, i32 1335, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!4998 = metadata !{i32 589835, metadata !3413, i32 1333, i32 0, metadata !3106, i32 106} ; [ DW_TAG_lexical_block ]
!4999 = metadata !{i32 590080, metadata !5000, metadata !"r", metadata !3106, i32 1357, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5000 = metadata !{i32 589835, metadata !4998, i32 1355, i32 0, metadata !3106, i32 107} ; [ DW_TAG_lexical_block ]
!5001 = metadata !{i32 590081, metadata !3416, metadata !"fd", metadata !3106, i32 685, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5002 = metadata !{i32 590081, metadata !3416, metadata !"offset", metadata !3106, i32 685, metadata !3120, i32 0} ; [ DW_TAG_arg_variable ]
!5003 = metadata !{i32 590081, metadata !3416, metadata !"whence", metadata !3106, i32 685, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5004 = metadata !{i32 590080, metadata !5005, metadata !"new_off", metadata !3106, i32 686, metadata !3120, i32 0} ; [ DW_TAG_auto_variable ]
!5005 = metadata !{i32 589835, metadata !3416, i32 685, i32 0, metadata !3106, i32 108} ; [ DW_TAG_lexical_block ]
!5006 = metadata !{i32 590080, metadata !5005, metadata !"f", metadata !3106, i32 687, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5007 = metadata !{i32 590081, metadata !3419, metadata !"fd", metadata !3106, i32 540, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5008 = metadata !{i32 590081, metadata !3419, metadata !"buf", metadata !3106, i32 540, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!5009 = metadata !{i32 590081, metadata !3419, metadata !"count", metadata !3106, i32 540, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5010 = metadata !{i32 590081, metadata !3419, metadata !"offset", metadata !3106, i32 540, metadata !3210, i32 0} ; [ DW_TAG_arg_variable ]
!5011 = metadata !{i32 590080, metadata !5012, metadata !"f", metadata !3106, i32 542, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5012 = metadata !{i32 589835, metadata !3419, i32 540, i32 0, metadata !3106, i32 109} ; [ DW_TAG_lexical_block ]
!5013 = metadata !{i32 590080, metadata !5014, metadata !"r", metadata !3106, i32 573, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5014 = metadata !{i32 589835, metadata !5012, i32 574, i32 0, metadata !3106, i32 110} ; [ DW_TAG_lexical_block ]
!5015 = metadata !{i32 590081, metadata !3422, metadata !"fd", metadata !3106, i32 455, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5016 = metadata !{i32 590081, metadata !3422, metadata !"buf", metadata !3106, i32 455, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!5017 = metadata !{i32 590081, metadata !3422, metadata !"count", metadata !3106, i32 455, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5018 = metadata !{i32 590080, metadata !5019, metadata !"f", metadata !3106, i32 457, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5019 = metadata !{i32 589835, metadata !3422, i32 455, i32 0, metadata !3106, i32 111} ; [ DW_TAG_lexical_block ]
!5020 = metadata !{i32 590080, metadata !5021, metadata !"r", metadata !3106, i32 484, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5021 = metadata !{i32 589835, metadata !5019, i32 485, i32 0, metadata !3106, i32 112} ; [ DW_TAG_lexical_block ]
!5022 = metadata !{i32 590080, metadata !5021, metadata !"incoming", metadata !3106, i32 491, metadata !3321, i32 0} ; [ DW_TAG_auto_variable ]
!5023 = metadata !{i32 590081, metadata !3425, metadata !"fd", metadata !3106, i32 831, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5024 = metadata !{i32 590081, metadata !3425, metadata !"length", metadata !3106, i32 831, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5025 = metadata !{i32 590081, metadata !3425, metadata !"off", metadata !3106, i32 831, metadata !3210, i32 0} ; [ DW_TAG_arg_variable ]
!5026 = metadata !{i32 590080, metadata !5027, metadata !"buffer", metadata !3106, i32 832, metadata !3321, i32 0} ; [ DW_TAG_auto_variable ]
!5027 = metadata !{i32 589835, metadata !3425, i32 831, i32 0, metadata !3106, i32 113} ; [ DW_TAG_lexical_block ]
!5028 = metadata !{i32 590080, metadata !5027, metadata !"count", metadata !3106, i32 835, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!5029 = metadata !{i32 590080, metadata !5027, metadata !"r", metadata !3106, i32 836, metadata !3208, i32 0} ; [ DW_TAG_auto_variable ]
!5030 = metadata !{i32 590081, metadata !3428, metadata !"addr", metadata !3106, i32 880, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!5031 = metadata !{i32 590081, metadata !3428, metadata !"length", metadata !3106, i32 880, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5032 = metadata !{i32 590081, metadata !3428, metadata !"prot", metadata !3106, i32 880, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5033 = metadata !{i32 590081, metadata !3428, metadata !"flags", metadata !3106, i32 881, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5034 = metadata !{i32 590081, metadata !3428, metadata !"fd", metadata !3106, i32 881, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5035 = metadata !{i32 590081, metadata !3428, metadata !"off", metadata !3106, i32 881, metadata !3210, i32 0} ; [ DW_TAG_arg_variable ]
!5036 = metadata !{i32 590080, metadata !5037, metadata !"f", metadata !3106, i32 889, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5037 = metadata !{i32 589835, metadata !3428, i32 881, i32 0, metadata !3106, i32 114} ; [ DW_TAG_lexical_block ]
!5038 = metadata !{i32 590081, metadata !3431, metadata !"addr", metadata !3106, i32 852, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!5039 = metadata !{i32 590081, metadata !3431, metadata !"length", metadata !3106, i32 852, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5040 = metadata !{i32 590081, metadata !3431, metadata !"prot", metadata !3106, i32 852, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5041 = metadata !{i32 590081, metadata !3431, metadata !"flags", metadata !3106, i32 853, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5042 = metadata !{i32 590081, metadata !3431, metadata !"fd", metadata !3106, i32 853, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5043 = metadata !{i32 590081, metadata !3431, metadata !"off", metadata !3106, i32 853, metadata !3120, i32 0} ; [ DW_TAG_arg_variable ]
!5044 = metadata !{i32 590080, metadata !5045, metadata !"f", metadata !3106, i32 860, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5045 = metadata !{i32 589835, metadata !3431, i32 853, i32 0, metadata !3106, i32 115} ; [ DW_TAG_lexical_block ]
!5046 = metadata !{i32 590081, metadata !3434, metadata !"s", metadata !3106, i32 2056, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5047 = metadata !{i32 590081, metadata !3434, metadata !"size", metadata !3106, i32 2056, metadata !3118, i32 0} ; [ DW_TAG_arg_variable ]
!5048 = metadata !{i32 590080, metadata !5049, metadata !"sc", metadata !3106, i32 2057, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!5049 = metadata !{i32 589835, metadata !3434, i32 2056, i32 0, metadata !3106, i32 116} ; [ DW_TAG_lexical_block ]
!5050 = metadata !{i32 590080, metadata !5049, metadata !"i", metadata !3106, i32 2058, metadata !3118, i32 0} ; [ DW_TAG_auto_variable ]
!5051 = metadata !{i32 590080, metadata !5052, metadata !"c", metadata !3106, i32 2061, metadata !3131, i32 0} ; [ DW_TAG_auto_variable ]
!5052 = metadata !{i32 589835, metadata !5049, i32 2061, i32 0, metadata !3106, i32 117} ; [ DW_TAG_lexical_block ]
!5053 = metadata !{i32 590080, metadata !5052, metadata !"cc", metadata !3106, i32 2062, metadata !3131, i32 0} ; [ DW_TAG_auto_variable ]
!5054 = metadata !{i32 590081, metadata !3437, metadata !"df", metadata !3106, i32 915, metadata !3124, i32 0} ; [ DW_TAG_arg_variable ]
!5055 = metadata !{i32 590081, metadata !3437, metadata !"mode", metadata !3106, i32 915, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!5056 = metadata !{i32 590081, metadata !3440, metadata !"fd", metadata !3106, i32 950, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5057 = metadata !{i32 590081, metadata !3440, metadata !"mode", metadata !3106, i32 950, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!5058 = metadata !{i32 590080, metadata !5059, metadata !"f", metadata !3106, i32 953, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5059 = metadata !{i32 589835, metadata !3440, i32 950, i32 0, metadata !3106, i32 119} ; [ DW_TAG_lexical_block ]
!5060 = metadata !{i32 590080, metadata !5061, metadata !"r", metadata !3106, i32 970, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5061 = metadata !{i32 589835, metadata !5059, i32 970, i32 0, metadata !3106, i32 120} ; [ DW_TAG_lexical_block ]
!5062 = metadata !{i32 590081, metadata !3443, metadata !"path", metadata !3106, i32 928, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5063 = metadata !{i32 590081, metadata !3443, metadata !"mode", metadata !3106, i32 928, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!5064 = metadata !{i32 590080, metadata !5065, metadata !"dfile", metadata !3106, i32 931, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!5065 = metadata !{i32 589835, metadata !3443, i32 928, i32 0, metadata !3106, i32 121} ; [ DW_TAG_lexical_block ]
!5066 = metadata !{i32 590080, metadata !5067, metadata !"r", metadata !3106, i32 943, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5067 = metadata !{i32 589835, metadata !5065, i32 943, i32 0, metadata !3106, i32 122} ; [ DW_TAG_lexical_block ]
!5068 = metadata !{i32 590081, metadata !3446, metadata !"path", metadata !3106, i32 771, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5069 = metadata !{i32 590081, metadata !3446, metadata !"buf", metadata !3106, i32 771, metadata !3134, i32 0} ; [ DW_TAG_arg_variable ]
!5070 = metadata !{i32 590080, metadata !5071, metadata !"dfile", metadata !3106, i32 772, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!5071 = metadata !{i32 589835, metadata !3446, i32 771, i32 0, metadata !3106, i32 123} ; [ DW_TAG_lexical_block ]
!5072 = metadata !{i32 590080, metadata !5071, metadata !"pathcpy", metadata !3106, i32 778, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!5073 = metadata !{i32 590080, metadata !5074, metadata !"r", metadata !3106, i32 782, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5074 = metadata !{i32 589835, metadata !5071, i32 782, i32 0, metadata !3106, i32 124} ; [ DW_TAG_lexical_block ]
!5075 = metadata !{i32 590081, metadata !3449, metadata !"path", metadata !3106, i32 742, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5076 = metadata !{i32 590081, metadata !3449, metadata !"buf", metadata !3106, i32 742, metadata !3134, i32 0} ; [ DW_TAG_arg_variable ]
!5077 = metadata !{i32 590080, metadata !5078, metadata !"dfile", metadata !3106, i32 743, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!5078 = metadata !{i32 589835, metadata !3449, i32 742, i32 0, metadata !3106, i32 125} ; [ DW_TAG_lexical_block ]
!5079 = metadata !{i32 590080, metadata !5078, metadata !"pathcpy", metadata !3106, i32 751, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!5080 = metadata !{i32 590080, metadata !5081, metadata !"r", metadata !3106, i32 755, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5081 = metadata !{i32 589835, metadata !5078, i32 755, i32 0, metadata !3106, i32 126} ; [ DW_TAG_lexical_block ]
!5082 = metadata !{i32 590081, metadata !3450, metadata !"fd", metadata !3106, i32 605, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5083 = metadata !{i32 590081, metadata !3450, metadata !"buf", metadata !3106, i32 605, metadata !3321, i32 0} ; [ DW_TAG_arg_variable ]
!5084 = metadata !{i32 590081, metadata !3450, metadata !"count", metadata !3106, i32 605, metadata !3211, i32 0} ; [ DW_TAG_arg_variable ]
!5085 = metadata !{i32 590080, metadata !5086, metadata !"f", metadata !3106, i32 607, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5086 = metadata !{i32 589835, metadata !3450, i32 605, i32 0, metadata !3106, i32 127} ; [ DW_TAG_lexical_block ]
!5087 = metadata !{i32 590080, metadata !5088, metadata !"r", metadata !3106, i32 624, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5088 = metadata !{i32 589835, metadata !5086, i32 625, i32 0, metadata !3106, i32 128} ; [ DW_TAG_lexical_block ]
!5089 = metadata !{i32 590080, metadata !5088, metadata !"cbuf", metadata !3106, i32 625, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!5090 = metadata !{i32 590080, metadata !5091, metadata !"actual_count", metadata !3106, i32 658, metadata !3211, i32 0} ; [ DW_TAG_auto_variable ]
!5091 = metadata !{i32 589835, metadata !5086, i32 658, i32 0, metadata !3106, i32 129} ; [ DW_TAG_lexical_block ]
!5092 = metadata !{i32 590081, metadata !3451, metadata !"__nptr", metadata !3452, i32 278, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5093 = metadata !{i32 590081, metadata !3453, metadata !"pathname", metadata !3106, i32 242, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5094 = metadata !{i32 590081, metadata !3453, metadata !"flags", metadata !3106, i32 242, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5095 = metadata !{i32 590081, metadata !3453, metadata !"mode", metadata !3106, i32 242, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!5096 = metadata !{i32 590080, metadata !5097, metadata !"df", metadata !3106, i32 243, metadata !3124, i32 0} ; [ DW_TAG_auto_variable ]
!5097 = metadata !{i32 589835, metadata !3453, i32 242, i32 0, metadata !3106, i32 131} ; [ DW_TAG_lexical_block ]
!5098 = metadata !{i32 590080, metadata !5097, metadata !"f", metadata !3106, i32 244, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5099 = metadata !{i32 590080, metadata !5097, metadata !"fd", metadata !3106, i32 245, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5100 = metadata !{i32 590080, metadata !5101, metadata !"os_fd", metadata !3106, i32 305, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5101 = metadata !{i32 589835, metadata !5097, i32 306, i32 0, metadata !3106, i32 132} ; [ DW_TAG_lexical_block ]
!5102 = metadata !{i32 590080, metadata !5103, metadata !"buffer", metadata !3106, i32 311, metadata !5104, i32 0} ; [ DW_TAG_auto_variable ]
!5103 = metadata !{i32 589835, metadata !5101, i32 312, i32 0, metadata !3106, i32 133} ; [ DW_TAG_lexical_block ]
!5104 = metadata !{i32 589825, metadata !3106, metadata !"", metadata !3106, i32 0, i64 8192, i64 8, i64 0, i32 0, metadata !3131, metadata !5105, i32 0, null} ; [ DW_TAG_array_type ]
!5105 = metadata !{metadata !5106}
!5106 = metadata !{i32 589857, i64 0, i64 1023}   ; [ DW_TAG_subrange_type ]
!5107 = metadata !{i32 590080, metadata !5103, metadata !"runtime_fd", metadata !3106, i32 312, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5108 = metadata !{i32 590080, metadata !5103, metadata !"f", metadata !3106, i32 313, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5109 = metadata !{i32 590080, metadata !5110, metadata !"pathtail", metadata !3106, i32 315, metadata !3130, i32 0} ; [ DW_TAG_auto_variable ]
!5110 = metadata !{i32 589835, metadata !5103, i32 315, i32 0, metadata !3106, i32 134} ; [ DW_TAG_lexical_block ]
!5111 = metadata !{i32 590081, metadata !3456, metadata !"basefd", metadata !3106, i32 358, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5112 = metadata !{i32 590081, metadata !3456, metadata !"pathname", metadata !3106, i32 358, metadata !3219, i32 0} ; [ DW_TAG_arg_variable ]
!5113 = metadata !{i32 590081, metadata !3456, metadata !"flags", metadata !3106, i32 358, metadata !3116, i32 0} ; [ DW_TAG_arg_variable ]
!5114 = metadata !{i32 590081, metadata !3456, metadata !"mode", metadata !3106, i32 358, metadata !3201, i32 0} ; [ DW_TAG_arg_variable ]
!5115 = metadata !{i32 590080, metadata !5116, metadata !"f", metadata !3106, i32 359, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5116 = metadata !{i32 589835, metadata !3456, i32 358, i32 0, metadata !3106, i32 135} ; [ DW_TAG_lexical_block ]
!5117 = metadata !{i32 590080, metadata !5116, metadata !"fd", metadata !3106, i32 360, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5118 = metadata !{i32 590080, metadata !5116, metadata !"os_fd", metadata !3106, i32 393, metadata !3116, i32 0} ; [ DW_TAG_auto_variable ]
!5119 = metadata !{i32 590080, metadata !5120, metadata !"bf", metadata !3106, i32 362, metadata !3110, i32 0} ; [ DW_TAG_auto_variable ]
!5120 = metadata !{i32 589835, metadata !5116, i32 362, i32 0, metadata !3106, i32 136} ; [ DW_TAG_lexical_block ]
!5121 = metadata !{i32 590081, metadata !3468, metadata !"file", metadata !3460, i32 60, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5122 = metadata !{i32 590081, metadata !3468, metadata !"argv", metadata !3460, i32 60, metadata !3474, i32 0} ; [ DW_TAG_arg_variable ]
!5123 = metadata !{i32 590081, metadata !3468, metadata !"envp", metadata !3460, i32 60, metadata !3474, i32 0} ; [ DW_TAG_arg_variable ]
!5124 = metadata !{i32 590081, metadata !3477, metadata !"file", metadata !3460, i32 59, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5125 = metadata !{i32 590081, metadata !3477, metadata !"argv", metadata !3460, i32 59, metadata !3474, i32 0} ; [ DW_TAG_arg_variable ]
!5126 = metadata !{i32 590081, metadata !3480, metadata !"path", metadata !3460, i32 58, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5127 = metadata !{i32 590081, metadata !3480, metadata !"argv", metadata !3460, i32 58, metadata !3474, i32 0} ; [ DW_TAG_arg_variable ]
!5128 = metadata !{i32 590081, metadata !3481, metadata !"path", metadata !3460, i32 57, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5129 = metadata !{i32 590081, metadata !3481, metadata !"arg", metadata !3460, i32 57, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5130 = metadata !{i32 590081, metadata !3484, metadata !"file", metadata !3460, i32 56, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5131 = metadata !{i32 590081, metadata !3484, metadata !"arg", metadata !3460, i32 56, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5132 = metadata !{i32 590081, metadata !3485, metadata !"path", metadata !3460, i32 55, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5133 = metadata !{i32 590081, metadata !3485, metadata !"arg", metadata !3460, i32 55, metadata !3471, i32 0} ; [ DW_TAG_arg_variable ]
!5134 = metadata !{i32 590081, metadata !3486, metadata !"pid", metadata !3460, i32 22, metadata !3464, i32 0} ; [ DW_TAG_arg_variable ]
!5135 = metadata !{i32 590081, metadata !3486, metadata !"sig", metadata !3460, i32 22, metadata !3466, i32 0} ; [ DW_TAG_arg_variable ]
!5136 = metadata !{i32 590081, metadata !3489, metadata !"env", metadata !3460, i32 34, metadata !3492, i32 0} ; [ DW_TAG_arg_variable ]
!5137 = metadata !{i32 590081, metadata !3489, metadata !"val", metadata !3460, i32 34, metadata !3466, i32 0} ; [ DW_TAG_arg_variable ]
!5138 = metadata !{i32 590081, metadata !3512, metadata !"__env", metadata !3460, i32 29, metadata !3492, i32 0} ; [ DW_TAG_arg_variable ]
!5139 = metadata !{i32 590081, metadata !3515, metadata !"c", metadata !3516, i32 27, metadata !3521, i32 0} ; [ DW_TAG_arg_variable ]
!5140 = metadata !{i32 590081, metadata !3523, metadata !"c", metadata !3516, i32 31, metadata !3521, i32 0} ; [ DW_TAG_arg_variable ]
!5141 = metadata !{i32 590081, metadata !3524, metadata !"c", metadata !3516, i32 124, metadata !3521, i32 0} ; [ DW_TAG_arg_variable ]
!5142 = metadata !{i32 590081, metadata !3525, metadata !"a", metadata !3516, i32 129, metadata !3528, i32 0} ; [ DW_TAG_arg_variable ]
!5143 = metadata !{i32 590081, metadata !3525, metadata !"b", metadata !3516, i32 129, metadata !3528, i32 0} ; [ DW_TAG_arg_variable ]
!5144 = metadata !{i32 590081, metadata !3529, metadata !"numChars", metadata !3516, i32 139, metadata !3520, i32 0} ; [ DW_TAG_arg_variable ]
!5145 = metadata !{i32 590081, metadata !3529, metadata !"name", metadata !3516, i32 139, metadata !3532, i32 0} ; [ DW_TAG_arg_variable ]
!5146 = metadata !{i32 590080, metadata !5147, metadata !"i", metadata !3516, i32 140, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5147 = metadata !{i32 589835, metadata !3529, i32 139, i32 0, metadata !3516, i32 4} ; [ DW_TAG_lexical_block ]
!5148 = metadata !{i32 590080, metadata !5147, metadata !"s", metadata !3516, i32 141, metadata !3532, i32 0} ; [ DW_TAG_auto_variable ]
!5149 = metadata !{i32 590081, metadata !3533, metadata !"msg", metadata !3516, i32 23, metadata !3528, i32 0} ; [ DW_TAG_arg_variable ]
!5150 = metadata !{i32 590081, metadata !3536, metadata !"s", metadata !3516, i32 40, metadata !3532, i32 0} ; [ DW_TAG_arg_variable ]
!5151 = metadata !{i32 590081, metadata !3536, metadata !"error_msg", metadata !3516, i32 40, metadata !3528, i32 0} ; [ DW_TAG_arg_variable ]
!5152 = metadata !{i32 590080, metadata !5153, metadata !"res", metadata !3516, i32 41, metadata !3539, i32 0} ; [ DW_TAG_auto_variable ]
!5153 = metadata !{i32 589835, metadata !3536, i32 40, i32 0, metadata !3516, i32 6} ; [ DW_TAG_lexical_block ]
!5154 = metadata !{i32 590080, metadata !5153, metadata !"c", metadata !3516, i32 42, metadata !3522, i32 0} ; [ DW_TAG_auto_variable ]
!5155 = metadata !{i32 590080, metadata !5153, metadata !"d", metadata !3516, i32 43, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5156 = metadata !{i32 590080, metadata !5153, metadata !"base", metadata !3516, i32 44, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5157 = metadata !{i32 590081, metadata !3540, metadata !"s", metadata !3516, i32 64, metadata !3532, i32 0} ; [ DW_TAG_arg_variable ]
!5158 = metadata !{i32 590080, metadata !5159, metadata !"d0", metadata !3516, i32 66, metadata !3532, i32 0} ; [ DW_TAG_auto_variable ]
!5159 = metadata !{i32 589835, metadata !3540, i32 65, i32 0, metadata !3516, i32 7} ; [ DW_TAG_lexical_block ]
!5160 = metadata !{i32 590080, metadata !5159, metadata !"d", metadata !3516, i32 66, metadata !3532, i32 0} ; [ DW_TAG_auto_variable ]
!5161 = metadata !{i32 590080, metadata !5162, metadata !"n", metadata !3516, i32 74, metadata !5163, i32 0} ; [ DW_TAG_auto_variable ]
!5162 = metadata !{i32 589835, metadata !5159, i32 75, i32 0, metadata !3516, i32 8} ; [ DW_TAG_lexical_block ]
!5163 = metadata !{i32 589825, metadata !3516, metadata !"", metadata !3516, i32 0, i64 96, i64 32, i64 0, i32 0, metadata !3520, metadata !3172, i32 0, null} ; [ DW_TAG_array_type ]
!5164 = metadata !{i32 590081, metadata !3546, metadata !"argc", metadata !3516, i32 152, metadata !3549, i32 0} ; [ DW_TAG_arg_variable ]
!5165 = metadata !{i32 590081, metadata !3546, metadata !"argv", metadata !3516, i32 152, metadata !3550, i32 0} ; [ DW_TAG_arg_variable ]
!5166 = metadata !{i32 590081, metadata !3546, metadata !"arg", metadata !3516, i32 152, metadata !3532, i32 0} ; [ DW_TAG_arg_variable ]
!5167 = metadata !{i32 590081, metadata !3546, metadata !"argcMax", metadata !3516, i32 152, metadata !3520, i32 0} ; [ DW_TAG_arg_variable ]
!5168 = metadata !{i32 590081, metadata !3551, metadata !"argcPtr", metadata !3516, i32 161, metadata !3549, i32 0} ; [ DW_TAG_arg_variable ]
!5169 = metadata !{i32 590081, metadata !3551, metadata !"argvPtr", metadata !3516, i32 161, metadata !3554, i32 0} ; [ DW_TAG_arg_variable ]
!5170 = metadata !{i32 590080, metadata !5171, metadata !"argc", metadata !3516, i32 162, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5171 = metadata !{i32 589835, metadata !3551, i32 161, i32 0, metadata !3516, i32 10} ; [ DW_TAG_lexical_block ]
!5172 = metadata !{i32 590080, metadata !5171, metadata !"argv", metadata !3516, i32 163, metadata !3550, i32 0} ; [ DW_TAG_auto_variable ]
!5173 = metadata !{i32 590080, metadata !5171, metadata !"new_argc", metadata !3516, i32 165, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5174 = metadata !{i32 590080, metadata !5171, metadata !"n_args", metadata !3516, i32 165, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5175 = metadata !{i32 590080, metadata !5171, metadata !"new_argv", metadata !3516, i32 166, metadata !5176, i32 0} ; [ DW_TAG_auto_variable ]
!5176 = metadata !{i32 589825, metadata !3516, metadata !"", metadata !3516, i32 0, i64 65536, i64 64, i64 0, i32 0, metadata !3532, metadata !5105, i32 0, null} ; [ DW_TAG_array_type ]
!5177 = metadata !{i32 590080, metadata !5171, metadata !"max_len", metadata !3516, i32 167, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5178 = metadata !{i32 589860, metadata !3516, metadata !"unsigned int", metadata !3516, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!5179 = metadata !{i32 590080, metadata !5171, metadata !"min_argvs", metadata !3516, i32 167, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5180 = metadata !{i32 590080, metadata !5171, metadata !"max_argvs", metadata !3516, i32 167, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5181 = metadata !{i32 590080, metadata !5171, metadata !"sym_files", metadata !3516, i32 168, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5182 = metadata !{i32 590080, metadata !5171, metadata !"sym_file_len", metadata !3516, i32 168, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5183 = metadata !{i32 590080, metadata !5171, metadata !"sym_streams", metadata !3516, i32 169, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5184 = metadata !{i32 590080, metadata !5171, metadata !"sym_stream_len", metadata !3516, i32 169, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5185 = metadata !{i32 590080, metadata !5171, metadata !"sym_dgrams", metadata !3516, i32 170, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5186 = metadata !{i32 590080, metadata !5171, metadata !"sym_dgram_len", metadata !3516, i32 170, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5187 = metadata !{i32 590080, metadata !5171, metadata !"sym_stdout_flag", metadata !3516, i32 172, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5188 = metadata !{i32 590080, metadata !5171, metadata !"save_all_writes_flag", metadata !3516, i32 173, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5189 = metadata !{i32 590080, metadata !5171, metadata !"one_line_streams_flag", metadata !3516, i32 174, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5190 = metadata !{i32 590080, metadata !5171, metadata !"stream_fill_info", metadata !3516, i32 175, metadata !5191, i32 0} ; [ DW_TAG_auto_variable ]
!5191 = metadata !{i32 589825, metadata !3516, metadata !"", metadata !3516, i32 0, i64 19200, i64 64, i64 0, i32 0, metadata !5192, metadata !5204, i32 0, null} ; [ DW_TAG_array_type ]
!5192 = metadata !{i32 589846, metadata !5193, metadata !"fill_info_t", metadata !5193, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !5194} ; [ DW_TAG_typedef ]
!5193 = metadata !{i32 589865, metadata !"waitflags.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3517} ; [ DW_TAG_file_type ]
!5194 = metadata !{i32 589843, metadata !3516, metadata !"", metadata !4540, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !5195, i32 0, null} ; [ DW_TAG_structure_type ]
!5195 = metadata !{metadata !5196, metadata !5197, metadata !5198, metadata !5199}
!5196 = metadata !{i32 589837, metadata !5194, metadata !"offset", metadata !4540, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !5178} ; [ DW_TAG_member ]
!5197 = metadata !{i32 589837, metadata !5194, metadata !"fill_method", metadata !4540, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4539} ; [ DW_TAG_member ]
!5198 = metadata !{i32 589837, metadata !5194, metadata !"length", metadata !4540, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !5178} ; [ DW_TAG_member ]
!5199 = metadata !{i32 589837, metadata !5194, metadata !"arg", metadata !4540, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !5200} ; [ DW_TAG_member ]
!5200 = metadata !{i32 589847, metadata !3516, metadata !"", metadata !4540, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !5201, i32 0, null} ; [ DW_TAG_union_type ]
!5201 = metadata !{metadata !5202, metadata !5203}
!5202 = metadata !{i32 589837, metadata !5200, metadata !"value", metadata !4540, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !3520} ; [ DW_TAG_member ]
!5203 = metadata !{i32 589837, metadata !5200, metadata !"string", metadata !4540, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !3532} ; [ DW_TAG_member ]
!5204 = metadata !{metadata !5205}
!5205 = metadata !{i32 589857, i64 0, i64 99}     ; [ DW_TAG_subrange_type ]
!5206 = metadata !{i32 590080, metadata !5171, metadata !"n_stream_fill_info", metadata !3516, i32 176, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5207 = metadata !{i32 590080, metadata !5171, metadata !"dgram_fill_info", metadata !3516, i32 177, metadata !5191, i32 0} ; [ DW_TAG_auto_variable ]
!5208 = metadata !{i32 590080, metadata !5171, metadata !"n_dgram_fill_info", metadata !3516, i32 178, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5209 = metadata !{i32 590080, metadata !5171, metadata !"fd_fail", metadata !3516, i32 180, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5210 = metadata !{i32 590080, metadata !5171, metadata !"final_argv", metadata !3516, i32 181, metadata !3550, i32 0} ; [ DW_TAG_auto_variable ]
!5211 = metadata !{i32 590080, metadata !5171, metadata !"sym_arg_name", metadata !3516, i32 182, metadata !5212, i32 0} ; [ DW_TAG_auto_variable ]
!5212 = metadata !{i32 589825, metadata !3516, metadata !"", metadata !3516, i32 0, i64 40, i64 8, i64 0, i32 0, metadata !3522, metadata !5213, i32 0, null} ; [ DW_TAG_array_type ]
!5213 = metadata !{metadata !5214}
!5214 = metadata !{i32 589857, i64 0, i64 4}      ; [ DW_TAG_subrange_type ]
!5215 = metadata !{i32 590080, metadata !5171, metadata !"sym_arg_num", metadata !3516, i32 183, metadata !5178, i32 0} ; [ DW_TAG_auto_variable ]
!5216 = metadata !{i32 590080, metadata !5171, metadata !"k", metadata !3516, i32 184, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5217 = metadata !{i32 590080, metadata !5171, metadata !"i", metadata !3516, i32 184, metadata !3520, i32 0} ; [ DW_TAG_auto_variable ]
!5218 = metadata !{i32 590080, metadata !5219, metadata !"msg", metadata !3516, i32 204, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5219 = metadata !{i32 589835, metadata !5171, i32 204, i32 0, metadata !3516, i32 11} ; [ DW_TAG_lexical_block ]
!5220 = metadata !{i32 590080, metadata !5221, metadata !"msg", metadata !3516, i32 215, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5221 = metadata !{i32 589835, metadata !5171, i32 216, i32 0, metadata !3516, i32 12} ; [ DW_TAG_lexical_block ]
!5222 = metadata !{i32 590080, metadata !5223, metadata !"msg", metadata !3516, i32 235, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5223 = metadata !{i32 589835, metadata !5171, i32 235, i32 0, metadata !3516, i32 13} ; [ DW_TAG_lexical_block ]
!5224 = metadata !{i32 590080, metadata !5225, metadata !"msg", metadata !3516, i32 258, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5225 = metadata !{i32 589835, metadata !5171, i32 258, i32 0, metadata !3516, i32 14} ; [ DW_TAG_lexical_block ]
!5226 = metadata !{i32 590080, metadata !5227, metadata !"msg", metadata !3516, i32 265, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5227 = metadata !{i32 589835, metadata !5171, i32 265, i32 0, metadata !3516, i32 15} ; [ DW_TAG_lexical_block ]
!5228 = metadata !{i32 590080, metadata !5229, metadata !"msg", metadata !3516, i32 275, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5229 = metadata !{i32 589835, metadata !5171, i32 275, i32 0, metadata !3516, i32 16} ; [ DW_TAG_lexical_block ]
!5230 = metadata !{i32 590080, metadata !5231, metadata !"msg", metadata !3516, i32 289, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5231 = metadata !{i32 589835, metadata !5171, i32 289, i32 0, metadata !3516, i32 17} ; [ DW_TAG_lexical_block ]
!5232 = metadata !{i32 590080, metadata !5231, metadata !"msg2", metadata !3516, i32 290, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5233 = metadata !{i32 590080, metadata !5234, metadata !"msg", metadata !3516, i32 330, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5234 = metadata !{i32 589835, metadata !5171, i32 330, i32 0, metadata !3516, i32 18} ; [ DW_TAG_lexical_block ]
!5235 = metadata !{i32 590080, metadata !5234, metadata !"msg2", metadata !3516, i32 331, metadata !3528, i32 0} ; [ DW_TAG_auto_variable ]
!5236 = metadata !{i32 590081, metadata !3555, metadata !"__dev", metadata !3556, i32 248, metadata !3561, i32 0} ; [ DW_TAG_arg_variable ]
!5237 = metadata !{i32 590081, metadata !3562, metadata !"__dev", metadata !3556, i32 253, metadata !3561, i32 0} ; [ DW_TAG_arg_variable ]
!5238 = metadata !{i32 590081, metadata !3563, metadata !"__major", metadata !3556, i32 258, metadata !3560, i32 0} ; [ DW_TAG_arg_variable ]
!5239 = metadata !{i32 590081, metadata !3563, metadata !"__minor", metadata !3556, i32 258, metadata !3560, i32 0} ; [ DW_TAG_arg_variable ]
!5240 = metadata !{i32 590081, metadata !3641, metadata !"sockfd", metadata !3567, i32 859, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5241 = metadata !{i32 590081, metadata !3641, metadata !"level", metadata !3567, i32 859, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5242 = metadata !{i32 590081, metadata !3641, metadata !"optname", metadata !3567, i32 859, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5243 = metadata !{i32 590081, metadata !3641, metadata !"optval", metadata !3567, i32 860, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5244 = metadata !{i32 590081, metadata !3641, metadata !"optlen", metadata !3567, i32 860, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5245 = metadata !{i32 590081, metadata !3646, metadata !"sockfd", metadata !3567, i32 865, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5246 = metadata !{i32 590081, metadata !3646, metadata !"level", metadata !3567, i32 865, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5247 = metadata !{i32 590081, metadata !3646, metadata !"optname", metadata !3567, i32 865, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5248 = metadata !{i32 590081, metadata !3646, metadata !"optval", metadata !3567, i32 866, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5249 = metadata !{i32 590081, metadata !3646, metadata !"optlen", metadata !3567, i32 866, metadata !3638, i32 0} ; [ DW_TAG_arg_variable ]
!5250 = metadata !{i32 590081, metadata !3649, metadata !"f", metadata !3567, i32 837, metadata !3654, i32 0} ; [ DW_TAG_arg_variable ]
!5251 = metadata !{i32 590081, metadata !3666, metadata !"path_p", metadata !3556, i32 592, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5252 = metadata !{i32 590081, metadata !3675, metadata !"b", metadata !3556, i32 585, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5253 = metadata !{i32 590081, metadata !3678, metadata !"a", metadata !3556, i32 579, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5254 = metadata !{i32 590081, metadata !3678, metadata !"b", metadata !3556, i32 579, metadata !3577, i32 0} ; [ DW_TAG_arg_variable ]
!5255 = metadata !{i32 590081, metadata !3681, metadata !"clk_id", metadata !3556, i32 171, metadata !3684, i32 0} ; [ DW_TAG_arg_variable ]
!5256 = metadata !{i32 590081, metadata !3681, metadata !"res", metadata !3556, i32 171, metadata !3685, i32 0} ; [ DW_TAG_arg_variable ]
!5257 = metadata !{i32 590081, metadata !3687, metadata !"fd", metadata !3567, i32 798, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5258 = metadata !{i32 590081, metadata !3687, metadata !"msg", metadata !3567, i32 798, metadata !3690, i32 0} ; [ DW_TAG_arg_variable ]
!5259 = metadata !{i32 590081, metadata !3687, metadata !"flags", metadata !3567, i32 798, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5260 = metadata !{i32 590080, metadata !5261, metadata !"f", metadata !3567, i32 800, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5261 = metadata !{i32 589835, metadata !3687, i32 799, i32 0, metadata !3567, i32 12} ; [ DW_TAG_lexical_block ]
!5262 = metadata !{i32 589839, metadata !3556, metadata !"", metadata !3556, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5263} ; [ DW_TAG_pointer_type ]
!5263 = metadata !{i32 589846, metadata !3572, metadata !"exe_file_t", metadata !3572, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3655} ; [ DW_TAG_typedef ]
!5264 = metadata !{i32 590081, metadata !3708, metadata !"fd", metadata !3567, i32 793, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5265 = metadata !{i32 590081, metadata !3708, metadata !"msg", metadata !3567, i32 793, metadata !3690, i32 0} ; [ DW_TAG_arg_variable ]
!5266 = metadata !{i32 590081, metadata !3708, metadata !"flags", metadata !3567, i32 793, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5267 = metadata !{i32 590081, metadata !3709, metadata !"fd", metadata !3567, i32 705, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5268 = metadata !{i32 590081, metadata !3709, metadata !"buf", metadata !3567, i32 705, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5269 = metadata !{i32 590081, metadata !3709, metadata !"len", metadata !3567, i32 705, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5270 = metadata !{i32 590081, metadata !3709, metadata !"flags", metadata !3567, i32 705, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5271 = metadata !{i32 590081, metadata !3709, metadata !"from", metadata !3567, i32 705, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5272 = metadata !{i32 590081, metadata !3709, metadata !"fromlen", metadata !3567, i32 705, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5273 = metadata !{i32 590080, metadata !5274, metadata !"iov", metadata !3567, i32 707, metadata !3697, i32 0} ; [ DW_TAG_auto_variable ]
!5274 = metadata !{i32 589835, metadata !3709, i32 706, i32 0, metadata !3567, i32 14} ; [ DW_TAG_lexical_block ]
!5275 = metadata !{i32 590080, metadata !5274, metadata !"msg", metadata !3567, i32 708, metadata !3691, i32 0} ; [ DW_TAG_auto_variable ]
!5276 = metadata !{i32 590080, metadata !5274, metadata !"s", metadata !3567, i32 709, metadata !3652, i32 0} ; [ DW_TAG_auto_variable ]
!5277 = metadata !{i32 590081, metadata !3720, metadata !"fd", metadata !3567, i32 700, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5278 = metadata !{i32 590081, metadata !3720, metadata !"buf", metadata !3567, i32 700, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5279 = metadata !{i32 590081, metadata !3720, metadata !"len", metadata !3567, i32 700, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5280 = metadata !{i32 590081, metadata !3720, metadata !"flags", metadata !3567, i32 700, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5281 = metadata !{i32 590081, metadata !3720, metadata !"from", metadata !3567, i32 700, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5282 = metadata !{i32 590081, metadata !3720, metadata !"fromlen", metadata !3567, i32 700, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5283 = metadata !{i32 590081, metadata !3721, metadata !"fd", metadata !3567, i32 671, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5284 = metadata !{i32 590081, metadata !3721, metadata !"buf", metadata !3567, i32 671, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5285 = metadata !{i32 590081, metadata !3721, metadata !"len", metadata !3567, i32 671, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5286 = metadata !{i32 590081, metadata !3721, metadata !"flags", metadata !3567, i32 671, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5287 = metadata !{i32 590081, metadata !3724, metadata !"fd", metadata !3567, i32 667, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5288 = metadata !{i32 590081, metadata !3724, metadata !"buf", metadata !3567, i32 667, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5289 = metadata !{i32 590081, metadata !3724, metadata !"len", metadata !3567, i32 667, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5290 = metadata !{i32 590081, metadata !3724, metadata !"flags", metadata !3567, i32 667, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5291 = metadata !{i32 590081, metadata !3725, metadata !"fd", metadata !3567, i32 739, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5292 = metadata !{i32 590081, metadata !3725, metadata !"msg", metadata !3567, i32 739, metadata !3728, i32 0} ; [ DW_TAG_arg_variable ]
!5293 = metadata !{i32 590081, metadata !3725, metadata !"flags", metadata !3567, i32 739, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5294 = metadata !{i32 590080, metadata !5295, metadata !"f", metadata !3567, i32 741, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5295 = metadata !{i32 589835, metadata !3725, i32 740, i32 0, metadata !3567, i32 18} ; [ DW_TAG_lexical_block ]
!5296 = metadata !{i32 590081, metadata !3730, metadata !"fd", metadata !3567, i32 734, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5297 = metadata !{i32 590081, metadata !3730, metadata !"msg", metadata !3567, i32 734, metadata !3728, i32 0} ; [ DW_TAG_arg_variable ]
!5298 = metadata !{i32 590081, metadata !3730, metadata !"flags", metadata !3567, i32 734, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5299 = metadata !{i32 590081, metadata !3731, metadata !"fd", metadata !3567, i32 681, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5300 = metadata !{i32 590081, metadata !3731, metadata !"buf", metadata !3567, i32 681, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5301 = metadata !{i32 590081, metadata !3731, metadata !"len", metadata !3567, i32 681, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5302 = metadata !{i32 590081, metadata !3731, metadata !"flags", metadata !3567, i32 681, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5303 = metadata !{i32 590081, metadata !3731, metadata !"to", metadata !3567, i32 681, metadata !3734, i32 0} ; [ DW_TAG_arg_variable ]
!5304 = metadata !{i32 590081, metadata !3731, metadata !"tolen", metadata !3567, i32 681, metadata !3638, i32 0} ; [ DW_TAG_arg_variable ]
!5305 = metadata !{i32 590080, metadata !5306, metadata !"iov", metadata !3567, i32 683, metadata !3697, i32 0} ; [ DW_TAG_auto_variable ]
!5306 = metadata !{i32 589835, metadata !3731, i32 682, i32 0, metadata !3567, i32 20} ; [ DW_TAG_lexical_block ]
!5307 = metadata !{i32 590080, metadata !5306, metadata !"msg", metadata !3567, i32 684, metadata !3691, i32 0} ; [ DW_TAG_auto_variable ]
!5308 = metadata !{i32 590081, metadata !3736, metadata !"fd", metadata !3567, i32 676, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5309 = metadata !{i32 590081, metadata !3736, metadata !"buf", metadata !3567, i32 676, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5310 = metadata !{i32 590081, metadata !3736, metadata !"len", metadata !3567, i32 676, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5311 = metadata !{i32 590081, metadata !3736, metadata !"flags", metadata !3567, i32 676, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5312 = metadata !{i32 590081, metadata !3736, metadata !"to", metadata !3567, i32 676, metadata !3734, i32 0} ; [ DW_TAG_arg_variable ]
!5313 = metadata !{i32 590081, metadata !3736, metadata !"tolen", metadata !3567, i32 676, metadata !3638, i32 0} ; [ DW_TAG_arg_variable ]
!5314 = metadata !{i32 590081, metadata !3737, metadata !"fd", metadata !3567, i32 662, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5315 = metadata !{i32 590081, metadata !3737, metadata !"buf", metadata !3567, i32 662, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5316 = metadata !{i32 590081, metadata !3737, metadata !"len", metadata !3567, i32 662, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5317 = metadata !{i32 590081, metadata !3737, metadata !"flags", metadata !3567, i32 662, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5318 = metadata !{i32 590081, metadata !3738, metadata !"fd", metadata !3567, i32 658, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5319 = metadata !{i32 590081, metadata !3738, metadata !"buf", metadata !3567, i32 658, metadata !3644, i32 0} ; [ DW_TAG_arg_variable ]
!5320 = metadata !{i32 590081, metadata !3738, metadata !"len", metadata !3567, i32 658, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5321 = metadata !{i32 590081, metadata !3738, metadata !"flags", metadata !3567, i32 658, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5322 = metadata !{i32 590081, metadata !3739, metadata !"sockfd", metadata !3567, i32 615, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5323 = metadata !{i32 590081, metadata !3739, metadata !"how", metadata !3567, i32 615, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5324 = metadata !{i32 590080, metadata !5325, metadata !"f", metadata !3567, i32 616, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5325 = metadata !{i32 589835, metadata !3739, i32 615, i32 0, metadata !3567, i32 24} ; [ DW_TAG_lexical_block ]
!5326 = metadata !{i32 590080, metadata !5327, metadata !"os_r", metadata !3567, i32 645, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5327 = metadata !{i32 589835, metadata !5325, i32 647, i32 0, metadata !3567, i32 25} ; [ DW_TAG_lexical_block ]
!5328 = metadata !{i32 590081, metadata !3742, metadata !"args", metadata !3567, i32 609, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5329 = metadata !{i32 590080, metadata !5330, metadata !"sockfd", metadata !3567, i32 610, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5330 = metadata !{i32 589835, metadata !3742, i32 609, i32 0, metadata !3567, i32 26} ; [ DW_TAG_lexical_block ]
!5331 = metadata !{i32 590080, metadata !5330, metadata !"how", metadata !3567, i32 611, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5332 = metadata !{i32 590081, metadata !3746, metadata !"sockfd", metadata !3567, i32 571, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5333 = metadata !{i32 590081, metadata !3746, metadata !"addr", metadata !3567, i32 571, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5334 = metadata !{i32 590081, metadata !3746, metadata !"addrlen", metadata !3567, i32 571, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5335 = metadata !{i32 590080, metadata !5336, metadata !"os_r", metadata !3567, i32 572, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5336 = metadata !{i32 589835, metadata !3746, i32 571, i32 0, metadata !3567, i32 27} ; [ DW_TAG_lexical_block ]
!5337 = metadata !{i32 590080, metadata !5336, metadata !"f", metadata !3567, i32 573, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5338 = metadata !{i32 590081, metadata !3749, metadata !"args", metadata !3567, i32 563, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5339 = metadata !{i32 590080, metadata !5340, metadata !"sockfd", metadata !3567, i32 565, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5340 = metadata !{i32 589835, metadata !3749, i32 564, i32 0, metadata !3567, i32 28} ; [ DW_TAG_lexical_block ]
!5341 = metadata !{i32 590080, metadata !5340, metadata !"addr", metadata !3567, i32 566, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5342 = metadata !{i32 590080, metadata !5340, metadata !"addrlen", metadata !3567, i32 567, metadata !3645, i32 0} ; [ DW_TAG_auto_variable ]
!5343 = metadata !{i32 590081, metadata !3750, metadata !"sockfd", metadata !3567, i32 527, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5344 = metadata !{i32 590081, metadata !3750, metadata !"addr", metadata !3567, i32 527, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5345 = metadata !{i32 590081, metadata !3750, metadata !"addrlen", metadata !3567, i32 527, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5346 = metadata !{i32 590080, metadata !5347, metadata !"f", metadata !3567, i32 528, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5347 = metadata !{i32 589835, metadata !3750, i32 527, i32 0, metadata !3567, i32 29} ; [ DW_TAG_lexical_block ]
!5348 = metadata !{i32 590080, metadata !5347, metadata !"os_r", metadata !3567, i32 529, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5349 = metadata !{i32 590081, metadata !3751, metadata !"args", metadata !3567, i32 518, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5350 = metadata !{i32 590080, metadata !5351, metadata !"sockfd", metadata !3567, i32 520, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5351 = metadata !{i32 589835, metadata !3751, i32 519, i32 0, metadata !3567, i32 30} ; [ DW_TAG_lexical_block ]
!5352 = metadata !{i32 590080, metadata !5351, metadata !"addr", metadata !3567, i32 521, metadata !3712, i32 0} ; [ DW_TAG_auto_variable ]
!5353 = metadata !{i32 590080, metadata !5351, metadata !"addrlen", metadata !3567, i32 522, metadata !3645, i32 0} ; [ DW_TAG_auto_variable ]
!5354 = metadata !{i32 590081, metadata !3752, metadata !"sockfd", metadata !3567, i32 375, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5355 = metadata !{i32 590081, metadata !3752, metadata !"backlog", metadata !3567, i32 375, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5356 = metadata !{i32 590080, metadata !5357, metadata !"os_r", metadata !3567, i32 376, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5357 = metadata !{i32 589835, metadata !3752, i32 375, i32 0, metadata !3567, i32 31} ; [ DW_TAG_lexical_block ]
!5358 = metadata !{i32 590080, metadata !5357, metadata !"f", metadata !3567, i32 377, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5359 = metadata !{i32 590081, metadata !3753, metadata !"args", metadata !3567, i32 368, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5360 = metadata !{i32 590080, metadata !5361, metadata !"sockfd", metadata !3567, i32 369, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5361 = metadata !{i32 589835, metadata !3753, i32 368, i32 0, metadata !3567, i32 32} ; [ DW_TAG_lexical_block ]
!5362 = metadata !{i32 590080, metadata !5361, metadata !"backlog", metadata !3567, i32 370, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5363 = metadata !{i32 590081, metadata !3754, metadata !"sockfd", metadata !3567, i32 319, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5364 = metadata !{i32 590081, metadata !3754, metadata !"addr", metadata !3567, i32 319, metadata !3734, i32 0} ; [ DW_TAG_arg_variable ]
!5365 = metadata !{i32 590081, metadata !3754, metadata !"addrlen", metadata !3567, i32 319, metadata !3638, i32 0} ; [ DW_TAG_arg_variable ]
!5366 = metadata !{i32 590080, metadata !5367, metadata !"os_r", metadata !3567, i32 320, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5367 = metadata !{i32 589835, metadata !3754, i32 319, i32 0, metadata !3567, i32 33} ; [ DW_TAG_lexical_block ]
!5368 = metadata !{i32 590080, metadata !5367, metadata !"f", metadata !3567, i32 321, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5369 = metadata !{i32 590081, metadata !3757, metadata !"args", metadata !3567, i32 312, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5370 = metadata !{i32 590080, metadata !5371, metadata !"sockfd", metadata !3567, i32 313, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5371 = metadata !{i32 589835, metadata !3757, i32 312, i32 0, metadata !3567, i32 34} ; [ DW_TAG_lexical_block ]
!5372 = metadata !{i32 590080, metadata !5371, metadata !"addr", metadata !3567, i32 314, metadata !3734, i32 0} ; [ DW_TAG_auto_variable ]
!5373 = metadata !{i32 590080, metadata !5371, metadata !"addrlen", metadata !3567, i32 315, metadata !3638, i32 0} ; [ DW_TAG_auto_variable ]
!5374 = metadata !{i32 590081, metadata !3758, metadata !"sockfd", metadata !3567, i32 267, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5375 = metadata !{i32 590081, metadata !3758, metadata !"addr", metadata !3567, i32 267, metadata !3734, i32 0} ; [ DW_TAG_arg_variable ]
!5376 = metadata !{i32 590081, metadata !3758, metadata !"addrlen", metadata !3567, i32 267, metadata !3638, i32 0} ; [ DW_TAG_arg_variable ]
!5377 = metadata !{i32 590080, metadata !5378, metadata !"os_r", metadata !3567, i32 268, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5378 = metadata !{i32 589835, metadata !3758, i32 267, i32 0, metadata !3567, i32 35} ; [ DW_TAG_lexical_block ]
!5379 = metadata !{i32 590080, metadata !5378, metadata !"f", metadata !3567, i32 269, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5380 = metadata !{i32 590081, metadata !3759, metadata !"args", metadata !3567, i32 259, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5381 = metadata !{i32 590080, metadata !5382, metadata !"sockfd", metadata !3567, i32 260, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5382 = metadata !{i32 589835, metadata !3759, i32 259, i32 0, metadata !3567, i32 36} ; [ DW_TAG_lexical_block ]
!5383 = metadata !{i32 590080, metadata !5382, metadata !"addr", metadata !3567, i32 261, metadata !3734, i32 0} ; [ DW_TAG_auto_variable ]
!5384 = metadata !{i32 590080, metadata !5382, metadata !"addrlen", metadata !3567, i32 262, metadata !3638, i32 0} ; [ DW_TAG_auto_variable ]
!5385 = metadata !{i32 590081, metadata !3760, metadata !"oldpath", metadata !3556, i32 144, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5386 = metadata !{i32 590081, metadata !3760, metadata !"newpath", metadata !3556, i32 144, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5387 = metadata !{i32 590080, metadata !5388, metadata !"r", metadata !3556, i32 147, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5388 = metadata !{i32 589835, metadata !3760, i32 144, i32 0, metadata !3556, i32 37} ; [ DW_TAG_lexical_block ]
!5389 = metadata !{i32 590081, metadata !3763, metadata !"domain", metadata !3567, i32 106, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5390 = metadata !{i32 590081, metadata !3763, metadata !"a", metadata !3567, i32 106, metadata !3622, i32 0} ; [ DW_TAG_arg_variable ]
!5391 = metadata !{i32 590081, metadata !3766, metadata !"sockfd", metadata !3567, i32 413, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5392 = metadata !{i32 590081, metadata !3766, metadata !"addr", metadata !3567, i32 413, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5393 = metadata !{i32 590081, metadata !3766, metadata !"addrlen", metadata !3567, i32 413, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5394 = metadata !{i32 590080, metadata !5395, metadata !"connfd", metadata !3567, i32 414, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5395 = metadata !{i32 589835, metadata !3766, i32 413, i32 0, metadata !3567, i32 39} ; [ DW_TAG_lexical_block ]
!5396 = metadata !{i32 590080, metadata !5395, metadata !"connf", metadata !3567, i32 415, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5397 = metadata !{i32 590080, metadata !5395, metadata !"f", metadata !3567, i32 416, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5398 = metadata !{i32 590080, metadata !5399, metadata !"fchild", metadata !3567, i32 498, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5399 = metadata !{i32 589835, metadata !5395, i32 499, i32 0, metadata !3567, i32 40} ; [ DW_TAG_lexical_block ]
!5400 = metadata !{i32 590080, metadata !5399, metadata !"fd", metadata !3567, i32 499, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5401 = metadata !{i32 590080, metadata !5399, metadata !"os_r", metadata !3567, i32 504, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5402 = metadata !{i32 590081, metadata !3767, metadata !"sockfd", metadata !3567, i32 409, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5403 = metadata !{i32 590081, metadata !3767, metadata !"addr", metadata !3567, i32 409, metadata !3712, i32 0} ; [ DW_TAG_arg_variable ]
!5404 = metadata !{i32 590081, metadata !3767, metadata !"addrlen", metadata !3567, i32 409, metadata !3645, i32 0} ; [ DW_TAG_arg_variable ]
!5405 = metadata !{i32 590081, metadata !3768, metadata !"domain", metadata !3567, i32 141, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5406 = metadata !{i32 590081, metadata !3768, metadata !"type", metadata !3567, i32 141, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5407 = metadata !{i32 590081, metadata !3768, metadata !"protocol", metadata !3567, i32 141, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5408 = metadata !{i32 590080, metadata !5409, metadata !"fd", metadata !3567, i32 142, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5409 = metadata !{i32 589835, metadata !3768, i32 141, i32 0, metadata !3567, i32 42} ; [ DW_TAG_lexical_block ]
!5410 = metadata !{i32 590080, metadata !5409, metadata !"f", metadata !3567, i32 143, metadata !5262, i32 0} ; [ DW_TAG_auto_variable ]
!5411 = metadata !{i32 590080, metadata !5412, metadata !"os_r", metadata !3567, i32 153, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5412 = metadata !{i32 589835, metadata !5409, i32 146, i32 0, metadata !3567, i32 43} ; [ DW_TAG_lexical_block ]
!5413 = metadata !{i32 590081, metadata !3771, metadata !"args", metadata !3567, i32 132, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5414 = metadata !{i32 590080, metadata !5415, metadata !"domain", metadata !3567, i32 134, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5415 = metadata !{i32 589835, metadata !3771, i32 132, i32 0, metadata !3567, i32 44} ; [ DW_TAG_lexical_block ]
!5416 = metadata !{i32 590080, metadata !5415, metadata !"type", metadata !3567, i32 135, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5417 = metadata !{i32 590080, metadata !5415, metadata !"protocol", metadata !3567, i32 136, metadata !3600, i32 0} ; [ DW_TAG_auto_variable ]
!5418 = metadata !{i32 590081, metadata !3772, metadata !"type", metadata !3567, i32 25, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5419 = metadata !{i32 590081, metadata !3772, metadata !"args", metadata !3567, i32 25, metadata !3745, i32 0} ; [ DW_TAG_arg_variable ]
!5420 = metadata !{i32 590081, metadata !3775, metadata !"name", metadata !3556, i32 265, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5421 = metadata !{i32 590081, metadata !3776, metadata !"__s1", metadata !3556, i32 243, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5422 = metadata !{i32 590081, metadata !3776, metadata !"__s2", metadata !3556, i32 243, metadata !3673, i32 0} ; [ DW_TAG_arg_variable ]
!5423 = metadata !{i32 590080, metadata !5424, metadata !"__s1_len", metadata !3556, i32 244, metadata !3702, i32 0} ; [ DW_TAG_auto_variable ]
!5424 = metadata !{i32 589835, metadata !5425, i32 243, i32 0, metadata !3556, i32 48} ; [ DW_TAG_lexical_block ]
!5425 = metadata !{i32 589835, metadata !3776, i32 243, i32 0, metadata !3556, i32 47} ; [ DW_TAG_lexical_block ]
!5426 = metadata !{i32 590080, metadata !5424, metadata !"__s2_len", metadata !3556, i32 244, metadata !3702, i32 0} ; [ DW_TAG_auto_variable ]
!5427 = metadata !{i32 590081, metadata !3777, metadata !"clk_id", metadata !3556, i32 162, metadata !3684, i32 0} ; [ DW_TAG_arg_variable ]
!5428 = metadata !{i32 590081, metadata !3777, metadata !"res", metadata !3556, i32 162, metadata !3780, i32 0} ; [ DW_TAG_arg_variable ]
!5429 = metadata !{i32 590080, metadata !5430, metadata !"tv", metadata !3556, i32 163, metadata !5431, i32 0} ; [ DW_TAG_auto_variable ]
!5430 = metadata !{i32 589835, metadata !3777, i32 162, i32 0, metadata !3556, i32 49} ; [ DW_TAG_lexical_block ]
!5431 = metadata !{i32 589843, metadata !3556, metadata !"timeval", metadata !5432, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !5433, i32 0, null} ; [ DW_TAG_structure_type ]
!5432 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3557} ; [ DW_TAG_file_type ]
!5433 = metadata !{metadata !5434, metadata !5435}
!5434 = metadata !{i32 589837, metadata !5431, metadata !"tv_sec", metadata !5432, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3614} ; [ DW_TAG_member ]
!5435 = metadata !{i32 589837, metadata !5431, metadata !"tv_usec", metadata !5432, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !5436} ; [ DW_TAG_member ]
!5436 = metadata !{i32 589846, metadata !3587, metadata !"__suseconds_t", metadata !3587, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3604} ; [ DW_TAG_typedef ]
!5437 = metadata !{i32 590081, metadata !3781, metadata !"c", metadata !3556, i32 96, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5438 = metadata !{i32 590081, metadata !3781, metadata !"f", metadata !3556, i32 96, metadata !3784, i32 0} ; [ DW_TAG_arg_variable ]
!5439 = metadata !{i32 590081, metadata !3829, metadata !"f", metadata !3556, i32 91, metadata !3784, i32 0} ; [ DW_TAG_arg_variable ]
!5440 = metadata !{i32 590081, metadata !3832, metadata !"signum", metadata !3556, i32 43, metadata !3600, i32 0} ; [ DW_TAG_arg_variable ]
!5441 = metadata !{i32 590081, metadata !3832, metadata !"act", metadata !3556, i32 43, metadata !3835, i32 0} ; [ DW_TAG_arg_variable ]
!5442 = metadata !{i32 590081, metadata !3832, metadata !"oldact", metadata !3556, i32 44, metadata !3926, i32 0} ; [ DW_TAG_arg_variable ]
!5443 = metadata !{i32 590081, metadata !3832, metadata !"_something", metadata !3556, i32 44, metadata !3702, i32 0} ; [ DW_TAG_arg_variable ]
!5444 = metadata !{i32 590081, metadata !3927, metadata !"a", metadata !3928, i32 42, metadata !3932, i32 0} ; [ DW_TAG_arg_variable ]
!5445 = metadata !{i32 590081, metadata !3927, metadata !"b", metadata !3928, i32 42, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5446 = metadata !{i32 590081, metadata !3994, metadata !"fd", metadata !3928, i32 207, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5447 = metadata !{i32 590081, metadata !3994, metadata !"buf", metadata !3928, i32 207, metadata !3932, i32 0} ; [ DW_TAG_arg_variable ]
!5448 = metadata !{i32 590081, metadata !3997, metadata !"fd", metadata !3928, i32 119, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5449 = metadata !{i32 590081, metadata !3997, metadata !"buf", metadata !3928, i32 119, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5450 = metadata !{i32 590080, metadata !5451, metadata !"tmp", metadata !3928, i32 120, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5451 = metadata !{i32 589835, metadata !3997, i32 119, i32 0, metadata !3928, i32 2} ; [ DW_TAG_lexical_block ]
!5452 = metadata !{i32 590080, metadata !5451, metadata !"res", metadata !3928, i32 121, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5453 = metadata !{i32 590081, metadata !4000, metadata !"vers", metadata !3928, i32 112, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5454 = metadata !{i32 590081, metadata !4000, metadata !"fd", metadata !3928, i32 112, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5455 = metadata !{i32 590081, metadata !4000, metadata !"buf", metadata !3928, i32 112, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5456 = metadata !{i32 590080, metadata !5457, metadata !"tmp", metadata !3928, i32 113, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5457 = metadata !{i32 589835, metadata !4000, i32 112, i32 0, metadata !3928, i32 3} ; [ DW_TAG_lexical_block ]
!5458 = metadata !{i32 590080, metadata !5457, metadata !"res", metadata !3928, i32 114, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5459 = metadata !{i32 590081, metadata !4003, metadata !"path", metadata !3928, i32 203, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5460 = metadata !{i32 590081, metadata !4003, metadata !"buf", metadata !3928, i32 203, metadata !3932, i32 0} ; [ DW_TAG_arg_variable ]
!5461 = metadata !{i32 590081, metadata !4009, metadata !"path", metadata !3928, i32 105, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5462 = metadata !{i32 590081, metadata !4009, metadata !"buf", metadata !3928, i32 105, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5463 = metadata !{i32 590080, metadata !5464, metadata !"tmp", metadata !3928, i32 106, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5464 = metadata !{i32 589835, metadata !4009, i32 105, i32 0, metadata !3928, i32 5} ; [ DW_TAG_lexical_block ]
!5465 = metadata !{i32 590080, metadata !5464, metadata !"res", metadata !3928, i32 107, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5466 = metadata !{i32 590081, metadata !4012, metadata !"vers", metadata !3928, i32 98, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5467 = metadata !{i32 590081, metadata !4012, metadata !"path", metadata !3928, i32 98, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5468 = metadata !{i32 590081, metadata !4012, metadata !"buf", metadata !3928, i32 98, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5469 = metadata !{i32 590080, metadata !5470, metadata !"tmp", metadata !3928, i32 99, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5470 = metadata !{i32 589835, metadata !4012, i32 98, i32 0, metadata !3928, i32 6} ; [ DW_TAG_lexical_block ]
!5471 = metadata !{i32 590080, metadata !5470, metadata !"res", metadata !3928, i32 100, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5472 = metadata !{i32 590081, metadata !4015, metadata !"path", metadata !3928, i32 199, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5473 = metadata !{i32 590081, metadata !4015, metadata !"buf", metadata !3928, i32 199, metadata !3932, i32 0} ; [ DW_TAG_arg_variable ]
!5474 = metadata !{i32 590081, metadata !4079, metadata !"__path", metadata !4082, i32 502, metadata !4086, i32 0} ; [ DW_TAG_arg_variable ]
!5475 = metadata !{i32 590081, metadata !4079, metadata !"__statbuf", metadata !4082, i32 502, metadata !4089, i32 0} ; [ DW_TAG_arg_variable ]
!5476 = metadata !{i32 590081, metadata !4209, metadata !"__path", metadata !4210, i32 502, metadata !4213, i32 0} ; [ DW_TAG_arg_variable ]
!5477 = metadata !{i32 590081, metadata !4209, metadata !"__statbuf", metadata !4210, i32 502, metadata !4215, i32 0} ; [ DW_TAG_arg_variable ]
!5478 = metadata !{i32 590081, metadata !4016, metadata !"path", metadata !3928, i32 91, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5479 = metadata !{i32 590081, metadata !4016, metadata !"buf", metadata !3928, i32 91, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5480 = metadata !{i32 590080, metadata !5481, metadata !"tmp", metadata !3928, i32 92, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5481 = metadata !{i32 589835, metadata !4016, i32 91, i32 0, metadata !3928, i32 8} ; [ DW_TAG_lexical_block ]
!5482 = metadata !{i32 590080, metadata !5481, metadata !"res", metadata !3928, i32 93, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5483 = metadata !{i32 590081, metadata !4017, metadata !"vers", metadata !3928, i32 84, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5484 = metadata !{i32 590081, metadata !4017, metadata !"path", metadata !3928, i32 84, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5485 = metadata !{i32 590081, metadata !4017, metadata !"buf", metadata !3928, i32 84, metadata !3974, i32 0} ; [ DW_TAG_arg_variable ]
!5486 = metadata !{i32 590080, metadata !5487, metadata !"tmp", metadata !3928, i32 85, metadata !3933, i32 0} ; [ DW_TAG_auto_variable ]
!5487 = metadata !{i32 589835, metadata !4017, i32 84, i32 0, metadata !3928, i32 9} ; [ DW_TAG_lexical_block ]
!5488 = metadata !{i32 590080, metadata !5487, metadata !"res", metadata !3928, i32 86, metadata !3953, i32 0} ; [ DW_TAG_auto_variable ]
!5489 = metadata !{i32 590081, metadata !4018, metadata !"fd", metadata !3928, i32 195, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5490 = metadata !{i32 590081, metadata !4018, metadata !"off", metadata !3928, i32 195, metadata !4021, i32 0} ; [ DW_TAG_arg_variable ]
!5491 = metadata !{i32 590081, metadata !4018, metadata !"whence", metadata !3928, i32 195, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5492 = metadata !{i32 590081, metadata !4023, metadata !"fd", metadata !3928, i32 80, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5493 = metadata !{i32 590081, metadata !4023, metadata !"off", metadata !3928, i32 80, metadata !4026, i32 0} ; [ DW_TAG_arg_variable ]
!5494 = metadata !{i32 590081, metadata !4023, metadata !"whence", metadata !3928, i32 80, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5495 = metadata !{i32 590081, metadata !4027, metadata !"pathname", metadata !3928, i32 181, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5496 = metadata !{i32 590081, metadata !4027, metadata !"flags", metadata !3928, i32 181, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5497 = metadata !{i32 590080, metadata !5498, metadata !"mode", metadata !3928, i32 182, metadata !5499, i32 0} ; [ DW_TAG_auto_variable ]
!5498 = metadata !{i32 589835, metadata !4027, i32 181, i32 0, metadata !3928, i32 12} ; [ DW_TAG_lexical_block ]
!5499 = metadata !{i32 589846, metadata !4022, metadata !"mode_t", metadata !4022, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3947} ; [ DW_TAG_typedef ]
!5500 = metadata !{i32 590080, metadata !5501, metadata !"ap", metadata !3928, i32 186, metadata !5502, i32 0} ; [ DW_TAG_auto_variable ]
!5501 = metadata !{i32 589835, metadata !5498, i32 187, i32 0, metadata !3928, i32 13} ; [ DW_TAG_lexical_block ]
!5502 = metadata !{i32 589846, metadata !5503, metadata !"va_list", metadata !5503, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !5504} ; [ DW_TAG_typedef ]
!5503 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3929} ; [ DW_TAG_file_type ]
!5504 = metadata !{i32 589825, metadata !3928, metadata !"", metadata !3928, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !5505, metadata !2092, i32 0, null} ; [ DW_TAG_array_type ]
!5505 = metadata !{i32 589843, metadata !3928, metadata !"__va_list_tag", metadata !5506, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !5507, i32 0, null} ; [ DW_TAG_structure_type ]
!5506 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3929} ; [ DW_TAG_file_type ]
!5507 = metadata !{metadata !5508, metadata !5509, metadata !5510, metadata !5512}
!5508 = metadata !{i32 589837, metadata !5505, metadata !"gp_offset", metadata !5506, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3947} ; [ DW_TAG_member ]
!5509 = metadata !{i32 589837, metadata !5505, metadata !"fp_offset", metadata !5506, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3947} ; [ DW_TAG_member ]
!5510 = metadata !{i32 589837, metadata !5505, metadata !"overflow_arg_area", metadata !5506, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !5511} ; [ DW_TAG_member ]
!5511 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!5512 = metadata !{i32 589837, metadata !5505, metadata !"reg_save_area", metadata !5506, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !5511} ; [ DW_TAG_member ]
!5513 = metadata !{i32 590081, metadata !4030, metadata !"pathname", metadata !3928, i32 66, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5514 = metadata !{i32 590081, metadata !4030, metadata !"flags", metadata !3928, i32 66, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5515 = metadata !{i32 590080, metadata !5516, metadata !"mode", metadata !3928, i32 67, metadata !5499, i32 0} ; [ DW_TAG_auto_variable ]
!5516 = metadata !{i32 589835, metadata !4030, i32 66, i32 0, metadata !3928, i32 14} ; [ DW_TAG_lexical_block ]
!5517 = metadata !{i32 590080, metadata !5518, metadata !"ap", metadata !3928, i32 71, metadata !5502, i32 0} ; [ DW_TAG_auto_variable ]
!5518 = metadata !{i32 589835, metadata !5516, i32 72, i32 0, metadata !3928, i32 15} ; [ DW_TAG_lexical_block ]
!5519 = metadata !{i32 590081, metadata !4031, metadata !"fd", metadata !3928, i32 155, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5520 = metadata !{i32 590081, metadata !4031, metadata !"dirp", metadata !3928, i32 155, metadata !4035, i32 0} ; [ DW_TAG_arg_variable ]
!5521 = metadata !{i32 590081, metadata !4031, metadata !"nbytes", metadata !3928, i32 155, metadata !4047, i32 0} ; [ DW_TAG_arg_variable ]
!5522 = metadata !{i32 590080, metadata !5523, metadata !"dp64", metadata !3928, i32 156, metadata !5524, i32 0} ; [ DW_TAG_auto_variable ]
!5523 = metadata !{i32 589835, metadata !4031, i32 155, i32 0, metadata !3928, i32 16} ; [ DW_TAG_lexical_block ]
!5524 = metadata !{i32 589839, metadata !3928, metadata !"", metadata !3928, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5525} ; [ DW_TAG_pointer_type ]
!5525 = metadata !{i32 589843, metadata !3928, metadata !"dirent64", metadata !4037, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !5526, i32 0, null} ; [ DW_TAG_structure_type ]
!5526 = metadata !{metadata !5527, metadata !5528, metadata !5530, metadata !5531, metadata !5532}
!5527 = metadata !{i32 589837, metadata !5525, metadata !"d_ino", metadata !4037, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3942} ; [ DW_TAG_member ]
!5528 = metadata !{i32 589837, metadata !5525, metadata !"d_off", metadata !4037, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !5529} ; [ DW_TAG_member ]
!5529 = metadata !{i32 589846, metadata !3939, metadata !"__off64_t", metadata !3939, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3957} ; [ DW_TAG_typedef ]
!5530 = metadata !{i32 589837, metadata !5525, metadata !"d_reclen", metadata !4037, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !4042} ; [ DW_TAG_member ]
!5531 = metadata !{i32 589837, metadata !5525, metadata !"d_type", metadata !4037, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !4044} ; [ DW_TAG_member ]
!5532 = metadata !{i32 589837, metadata !5525, metadata !"d_name", metadata !4037, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !4046} ; [ DW_TAG_member ]
!5533 = metadata !{i32 590080, metadata !5523, metadata !"res", metadata !3928, i32 157, metadata !4034, i32 0} ; [ DW_TAG_auto_variable ]
!5534 = metadata !{i32 590080, metadata !5535, metadata !"end", metadata !3928, i32 160, metadata !5524, i32 0} ; [ DW_TAG_auto_variable ]
!5535 = metadata !{i32 589835, metadata !5523, i32 160, i32 0, metadata !3928, i32 17} ; [ DW_TAG_lexical_block ]
!5536 = metadata !{i32 590080, metadata !5537, metadata !"dp", metadata !3928, i32 162, metadata !4035, i32 0} ; [ DW_TAG_auto_variable ]
!5537 = metadata !{i32 589835, metadata !5535, i32 162, i32 0, metadata !3928, i32 18} ; [ DW_TAG_lexical_block ]
!5538 = metadata !{i32 590080, metadata !5537, metadata !"name_len", metadata !3928, i32 163, metadata !4047, i32 0} ; [ DW_TAG_auto_variable ]
!5539 = metadata !{i32 590081, metadata !4048, metadata !"path", metadata !3928, i32 130, metadata !4006, i32 0} ; [ DW_TAG_arg_variable ]
!5540 = metadata !{i32 590081, metadata !4048, metadata !"buf32", metadata !3928, i32 130, metadata !4051, i32 0} ; [ DW_TAG_arg_variable ]
!5541 = metadata !{i32 590081, metadata !4076, metadata !"fd", metadata !3928, i32 126, metadata !3953, i32 0} ; [ DW_TAG_arg_variable ]
!5542 = metadata !{i32 590081, metadata !4076, metadata !"length", metadata !3928, i32 126, metadata !4026, i32 0} ; [ DW_TAG_arg_variable ]
!5543 = metadata !{i32 590081, metadata !4130, metadata !"name", metadata !4080, i32 227, metadata !4086, i32 0} ; [ DW_TAG_arg_variable ]
!5544 = metadata !{i32 590080, metadata !5545, metadata !"x", metadata !4080, i32 228, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5545 = metadata !{i32 589835, metadata !4130, i32 227, i32 0, metadata !4080, i32 1} ; [ DW_TAG_lexical_block ]
!5546 = metadata !{i32 590081, metadata !4133, metadata !"path", metadata !4080, i32 349, metadata !4086, i32 0} ; [ DW_TAG_arg_variable ]
!5547 = metadata !{i32 590081, metadata !4133, metadata !"flags", metadata !4080, i32 349, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5548 = metadata !{i32 590081, metadata !4133, metadata !"_buf", metadata !4080, i32 349, metadata !4136, i32 0} ; [ DW_TAG_arg_variable ]
!5549 = metadata !{i32 590080, metadata !5550, metadata !"s", metadata !4080, i32 350, metadata !4090, i32 0} ; [ DW_TAG_auto_variable ]
!5550 = metadata !{i32 589835, metadata !4133, i32 349, i32 0, metadata !4080, i32 2} ; [ DW_TAG_lexical_block ]
!5551 = metadata !{i32 590080, metadata !5550, metadata !"buf", metadata !4080, i32 351, metadata !4137, i32 0} ; [ DW_TAG_auto_variable ]
!5552 = metadata !{i32 590080, metadata !5550, metadata !"fd", metadata !4080, i32 352, metadata !4085, i32 0} ; [ DW_TAG_auto_variable ]
!5553 = metadata !{i32 590080, metadata !5550, metadata !"rd", metadata !4080, i32 359, metadata !4085, i32 0} ; [ DW_TAG_auto_variable ]
!5554 = metadata !{i32 590080, metadata !5550, metadata !"cnt", metadata !4080, i32 359, metadata !4085, i32 0} ; [ DW_TAG_auto_variable ]
!5555 = metadata !{i32 590081, metadata !4138, metadata !"dfile", metadata !4080, i32 55, metadata !4141, i32 0} ; [ DW_TAG_arg_variable ]
!5556 = metadata !{i32 590081, metadata !4138, metadata !"fill_info", metadata !4080, i32 55, metadata !4168, i32 0} ; [ DW_TAG_arg_variable ]
!5557 = metadata !{i32 590081, metadata !4138, metadata !"n_fill_info", metadata !4080, i32 55, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5558 = metadata !{i32 590081, metadata !4138, metadata !"do_memset", metadata !4080, i32 55, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5559 = metadata !{i32 590080, metadata !5560, metadata !"i", metadata !4080, i32 56, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5560 = metadata !{i32 589835, metadata !4138, i32 55, i32 0, metadata !4080, i32 3} ; [ DW_TAG_lexical_block ]
!5561 = metadata !{i32 590080, metadata !5560, metadata !"j", metadata !4080, i32 56, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5562 = metadata !{i32 590080, metadata !5560, metadata !"s", metadata !4080, i32 57, metadata !4085, i32 0} ; [ DW_TAG_auto_variable ]
!5563 = metadata !{i32 590080, metadata !5560, metadata !"file", metadata !4080, i32 58, metadata !4137, i32 0} ; [ DW_TAG_auto_variable ]
!5564 = metadata !{i32 590080, metadata !5565, metadata !"p", metadata !4080, i32 60, metadata !4168, i32 0} ; [ DW_TAG_auto_variable ]
!5565 = metadata !{i32 589835, metadata !5560, i32 60, i32 0, metadata !4080, i32 4} ; [ DW_TAG_lexical_block ]
!5566 = metadata !{i32 590081, metadata !4186, metadata !"dfile", metadata !4080, i32 101, metadata !4141, i32 0} ; [ DW_TAG_arg_variable ]
!5567 = metadata !{i32 590081, metadata !4186, metadata !"size", metadata !4080, i32 101, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5568 = metadata !{i32 590081, metadata !4186, metadata !"contents", metadata !4080, i32 101, metadata !4137, i32 0} ; [ DW_TAG_arg_variable ]
!5569 = metadata !{i32 590081, metadata !4186, metadata !"name", metadata !4080, i32 102, metadata !4086, i32 0} ; [ DW_TAG_arg_variable ]
!5570 = metadata !{i32 590081, metadata !4186, metadata !"fill_info", metadata !4080, i32 103, metadata !4168, i32 0} ; [ DW_TAG_arg_variable ]
!5571 = metadata !{i32 590081, metadata !4186, metadata !"n_fill_info", metadata !4080, i32 103, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5572 = metadata !{i32 590081, metadata !4186, metadata !"defaults", metadata !4080, i32 104, metadata !4089, i32 0} ; [ DW_TAG_arg_variable ]
!5573 = metadata !{i32 590081, metadata !4186, metadata !"is_foreign", metadata !4080, i32 104, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5574 = metadata !{i32 590080, metadata !5575, metadata !"s", metadata !4080, i32 105, metadata !4089, i32 0} ; [ DW_TAG_auto_variable ]
!5575 = metadata !{i32 589835, metadata !4186, i32 104, i32 0, metadata !4080, i32 5} ; [ DW_TAG_lexical_block ]
!5576 = metadata !{i32 590080, metadata !5575, metadata !"sp", metadata !4080, i32 106, metadata !4086, i32 0} ; [ DW_TAG_auto_variable ]
!5577 = metadata !{i32 590080, metadata !5575, metadata !"sname", metadata !4080, i32 107, metadata !5578, i32 0} ; [ DW_TAG_auto_variable ]
!5578 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !4088, metadata !833, i32 0, null} ; [ DW_TAG_array_type ]
!5579 = metadata !{i32 590080, metadata !5575, metadata !"src_name", metadata !4080, i32 107, metadata !5578, i32 0} ; [ DW_TAG_auto_variable ]
!5580 = metadata !{i32 590080, metadata !5575, metadata !"original_file", metadata !4080, i32 115, metadata !4137, i32 0} ; [ DW_TAG_auto_variable ]
!5581 = metadata !{i32 590080, metadata !5575, metadata !"originalStat", metadata !4080, i32 163, metadata !4090, i32 0} ; [ DW_TAG_auto_variable ]
!5582 = metadata !{i32 590080, metadata !5583, metadata !"i", metadata !4080, i32 134, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5583 = metadata !{i32 589835, metadata !5575, i32 135, i32 0, metadata !4080, i32 6} ; [ DW_TAG_lexical_block ]
!5584 = metadata !{i32 590080, metadata !5585, metadata !"ss", metadata !4080, i32 207, metadata !4155, i32 0} ; [ DW_TAG_auto_variable ]
!5585 = metadata !{i32 589835, metadata !5575, i32 209, i32 0, metadata !4080, i32 7} ; [ DW_TAG_lexical_block ]
!5586 = metadata !{i32 590081, metadata !4189, metadata !"path", metadata !4080, i32 370, metadata !4086, i32 0} ; [ DW_TAG_arg_variable ]
!5587 = metadata !{i32 590081, metadata !4189, metadata !"flags", metadata !4080, i32 370, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5588 = metadata !{i32 590080, metadata !5589, metadata !"k", metadata !4080, i32 371, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5589 = metadata !{i32 589835, metadata !4189, i32 370, i32 0, metadata !4080, i32 8} ; [ DW_TAG_lexical_block ]
!5590 = metadata !{i32 590080, metadata !5589, metadata !"fsize", metadata !4080, i32 372, metadata !4085, i32 0} ; [ DW_TAG_auto_variable ]
!5591 = metadata !{i32 590080, metadata !5589, metadata !"def", metadata !4080, i32 373, metadata !4090, i32 0} ; [ DW_TAG_auto_variable ]
!5592 = metadata !{i32 590080, metadata !5589, metadata !"buf", metadata !4080, i32 374, metadata !4137, i32 0} ; [ DW_TAG_auto_variable ]
!5593 = metadata !{i32 590081, metadata !4192, metadata !"n_files", metadata !4080, i32 242, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5594 = metadata !{i32 590081, metadata !4192, metadata !"file_length", metadata !4080, i32 242, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5595 = metadata !{i32 590081, metadata !4192, metadata !"sym_stdout_flag", metadata !4080, i32 243, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5596 = metadata !{i32 590081, metadata !4192, metadata !"save_all_writes_flag", metadata !4080, i32 243, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5597 = metadata !{i32 590081, metadata !4192, metadata !"n_streams", metadata !4080, i32 244, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5598 = metadata !{i32 590081, metadata !4192, metadata !"stream_len", metadata !4080, i32 244, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5599 = metadata !{i32 590081, metadata !4192, metadata !"n_dgrams", metadata !4080, i32 245, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5600 = metadata !{i32 590081, metadata !4192, metadata !"dgram_len", metadata !4080, i32 245, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5601 = metadata !{i32 590081, metadata !4192, metadata !"max_failures", metadata !4080, i32 246, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5602 = metadata !{i32 590081, metadata !4192, metadata !"one_line_streams", metadata !4080, i32 247, metadata !4085, i32 0} ; [ DW_TAG_arg_variable ]
!5603 = metadata !{i32 590081, metadata !4192, metadata !"stream_fill_info", metadata !4080, i32 248, metadata !4168, i32 0} ; [ DW_TAG_arg_variable ]
!5604 = metadata !{i32 590081, metadata !4192, metadata !"n_stream_fill_info", metadata !4080, i32 248, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5605 = metadata !{i32 590081, metadata !4192, metadata !"dgram_fill_info", metadata !4080, i32 249, metadata !4168, i32 0} ; [ DW_TAG_arg_variable ]
!5606 = metadata !{i32 590081, metadata !4192, metadata !"n_dgram_fill_info", metadata !4080, i32 249, metadata !4104, i32 0} ; [ DW_TAG_arg_variable ]
!5607 = metadata !{i32 590080, metadata !5608, metadata !"k", metadata !4080, i32 250, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5608 = metadata !{i32 589835, metadata !4192, i32 249, i32 0, metadata !4080, i32 9} ; [ DW_TAG_lexical_block ]
!5609 = metadata !{i32 590080, metadata !5608, metadata !"name", metadata !4080, i32 251, metadata !5610, i32 0} ; [ DW_TAG_auto_variable ]
!5610 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !4088, metadata !4381, i32 0, null} ; [ DW_TAG_array_type ]
!5611 = metadata !{i32 590080, metadata !5608, metadata !"sname", metadata !4080, i32 252, metadata !5612, i32 0} ; [ DW_TAG_auto_variable ]
!5612 = metadata !{i32 589825, metadata !4080, metadata !"", metadata !4080, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !4088, metadata !3500, i32 0, null} ; [ DW_TAG_array_type ]
!5613 = metadata !{i32 590080, metadata !5608, metadata !"dname", metadata !4080, i32 253, metadata !5610, i32 0} ; [ DW_TAG_auto_variable ]
!5614 = metadata !{i32 590080, metadata !5608, metadata !"s", metadata !4080, i32 255, metadata !4090, i32 0} ; [ DW_TAG_auto_variable ]
!5615 = metadata !{i32 590080, metadata !5608, metadata !"i", metadata !4080, i32 340, metadata !4104, i32 0} ; [ DW_TAG_auto_variable ]
!5616 = metadata !{i32 590080, metadata !5608, metadata !"offset", metadata !4080, i32 341, metadata !5617, i32 0} ; [ DW_TAG_auto_variable ]
!5617 = metadata !{i32 589846, metadata !4503, metadata !"off_t", metadata !4503, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !4113} ; [ DW_TAG_typedef ]
!5618 = metadata !{i32 590081, metadata !4195, metadata !"bitWidth", metadata !4196, i32 20, metadata !4200, i32 0} ; [ DW_TAG_arg_variable ]
!5619 = metadata !{i32 590081, metadata !4195, metadata !"shift", metadata !4196, i32 20, metadata !4200, i32 0} ; [ DW_TAG_arg_variable ]
!5620 = metadata !{i32 590081, metadata !4201, metadata !"s", metadata !4202, i32 19, metadata !4207, i32 0} ; [ DW_TAG_arg_variable ]
!5621 = metadata !{i32 590080, metadata !5622, metadata !"i", metadata !4202, i32 20, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5622 = metadata !{i32 589835, metadata !4201, i32 19, i32 0, metadata !4202, i32 0} ; [ DW_TAG_lexical_block ]
!5623 = metadata !{i32 590081, metadata !4255, metadata !"argc", metadata !4202, i32 25, metadata !4206, i32 0} ; [ DW_TAG_arg_variable ]
!5624 = metadata !{i32 590081, metadata !4255, metadata !"argv", metadata !4202, i32 25, metadata !4258, i32 0} ; [ DW_TAG_arg_variable ]
!5625 = metadata !{i32 590080, metadata !5626, metadata !"i", metadata !4202, i32 26, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5626 = metadata !{i32 589835, metadata !4255, i32 25, i32 0, metadata !4202, i32 2} ; [ DW_TAG_lexical_block ]
!5627 = metadata !{i32 590080, metadata !5626, metadata !"j", metadata !4202, i32 26, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5628 = metadata !{i32 590080, metadata !5626, metadata !"len", metadata !4202, i32 26, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5629 = metadata !{i32 590080, metadata !5626, metadata !"argv_i", metadata !4202, i32 27, metadata !4207, i32 0} ; [ DW_TAG_auto_variable ]
!5630 = metadata !{i32 590080, metadata !5626, metadata !"shadow", metadata !4202, i32 28, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5631 = metadata !{i32 590080, metadata !5626, metadata !"standalone", metadata !4202, i32 29, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5632 = metadata !{i32 590080, metadata !5633, metadata !"tmpStat", metadata !4202, i32 58, metadata !5634, i32 0} ; [ DW_TAG_auto_variable ]
!5633 = metadata !{i32 589835, metadata !5626, i32 59, i32 0, metadata !4202, i32 3} ; [ DW_TAG_lexical_block ]
!5634 = metadata !{i32 589843, metadata !4202, metadata !"stat", metadata !4217, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !5635, i32 0, null} ; [ DW_TAG_structure_type ]
!5635 = metadata !{metadata !5636, metadata !5637, metadata !5639, metadata !5640, metadata !5641, metadata !5642, metadata !5643, metadata !5644, metadata !5645, metadata !5646, metadata !5647, metadata !5649, metadata !5650, metadata !5651, metadata !5
!5636 = metadata !{i32 589837, metadata !5634, metadata !"st_dev", metadata !4217, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !4220} ; [ DW_TAG_member ]
!5637 = metadata !{i32 589837, metadata !5634, metadata !"st_ino", metadata !4217, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !5638} ; [ DW_TAG_member ]
!5638 = metadata !{i32 589846, metadata !4221, metadata !"__ino_t", metadata !4221, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !4222} ; [ DW_TAG_typedef ]
!5639 = metadata !{i32 589837, metadata !5634, metadata !"st_nlink", metadata !4217, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !4226} ; [ DW_TAG_member ]
!5640 = metadata !{i32 589837, metadata !5634, metadata !"st_mode", metadata !4217, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !4228} ; [ DW_TAG_member ]
!5641 = metadata !{i32 589837, metadata !5634, metadata !"st_uid", metadata !4217, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !4231} ; [ DW_TAG_member ]
!5642 = metadata !{i32 589837, metadata !5634, metadata !"st_gid", metadata !4217, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !4233} ; [ DW_TAG_member ]
!5643 = metadata !{i32 589837, metadata !5634, metadata !"__pad0", metadata !4217, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !4206} ; [ DW_TAG_member ]
!5644 = metadata !{i32 589837, metadata !5634, metadata !"st_rdev", metadata !4217, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !4220} ; [ DW_TAG_member ]
!5645 = metadata !{i32 589837, metadata !5634, metadata !"st_size", metadata !4217, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !4237} ; [ DW_TAG_member ]
!5646 = metadata !{i32 589837, metadata !5634, metadata !"st_blksize", metadata !4217, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !4240} ; [ DW_TAG_member ]
!5647 = metadata !{i32 589837, metadata !5634, metadata !"st_blocks", metadata !4217, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !5648} ; [ DW_TAG_member ]
!5648 = metadata !{i32 589846, metadata !4221, metadata !"__blkcnt_t", metadata !4221, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !4238} ; [ DW_TAG_typedef ]
!5649 = metadata !{i32 589837, metadata !5634, metadata !"st_atim", metadata !4217, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !4244} ; [ DW_TAG_member ]
!5650 = metadata !{i32 589837, metadata !5634, metadata !"st_mtim", metadata !4217, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !4244} ; [ DW_TAG_member ]
!5651 = metadata !{i32 589837, metadata !5634, metadata !"st_ctim", metadata !4217, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !4244} ; [ DW_TAG_member ]
!5652 = metadata !{i32 589837, metadata !5634, metadata !"__glibc_reserved", metadata !4217, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !4254} ; [ DW_TAG_member ]
!5653 = metadata !{i32 590080, metadata !5654, metadata !"fd", metadata !4202, i32 61, metadata !4206, i32 0} ; [ DW_TAG_auto_variable ]
!5654 = metadata !{i32 589835, metadata !5633, i32 61, i32 0, metadata !4202, i32 4} ; [ DW_TAG_lexical_block ]
!5655 = metadata !{i32 590081, metadata !4259, metadata !"z", metadata !4260, i32 12, metadata !4264, i32 0} ; [ DW_TAG_arg_variable ]
!5656 = metadata !{i32 590081, metadata !4265, metadata !"start", metadata !4266, i32 13, metadata !4270, i32 0} ; [ DW_TAG_arg_variable ]
!5657 = metadata !{i32 590081, metadata !4265, metadata !"end", metadata !4266, i32 13, metadata !4270, i32 0} ; [ DW_TAG_arg_variable ]
!5658 = metadata !{i32 590081, metadata !4265, metadata !"name", metadata !4266, i32 13, metadata !4271, i32 0} ; [ DW_TAG_arg_variable ]
!5659 = metadata !{i32 590080, metadata !5660, metadata !"x", metadata !4266, i32 14, metadata !4270, i32 0} ; [ DW_TAG_auto_variable ]
!5660 = metadata !{i32 589835, metadata !4265, i32 13, i32 0, metadata !4266, i32 0} ; [ DW_TAG_lexical_block ]
!5661 = metadata !{i32 13, i32 0, metadata !5662, null}
!5662 = metadata !{i32 589835, metadata !0, i32 12, i32 0, metadata !1, i32 0} ; [ DW_TAG_lexical_block ]
!5663 = metadata !{i32 27, i32 0, metadata !5664, null}
!5664 = metadata !{i32 589835, metadata !7, i32 23, i32 0, metadata !10, i32 0} ; [ DW_TAG_lexical_block ]
!5665 = metadata !{i32 28, i32 0, metadata !5664, null}
!5666 = metadata !{i32 33, i32 0, metadata !5664, null}
!5667 = metadata !{i32 36, i32 0, metadata !5664, null}
!5668 = metadata !{i32 37, i32 0, metadata !5669, null}
!5669 = metadata !{i32 589835, metadata !5664, i32 23, i32 0, metadata !10, i32 1} ; [ DW_TAG_lexical_block ]
!5670 = metadata !{i32 38, i32 0, metadata !5669, null}
!5671 = metadata !{i32 40, i32 0, metadata !5669, null}
!5672 = metadata !{i32 43, i32 0, metadata !5664, null}
!5673 = metadata !{i32 44, i32 0, metadata !5664, null}
!5674 = metadata !{i32 48, i32 0, metadata !5664, null}
!5675 = metadata !{i32 49, i32 0, metadata !5664, null}
!5676 = metadata !{i32 50, i32 0, metadata !5664, null}
!5677 = metadata !{i32 56, i32 0, metadata !5664, null}
!5678 = metadata !{i32 57, i32 0, metadata !5664, null}
!5679 = metadata !{i32 60, i32 0, metadata !5664, null}
!5680 = metadata !{i32 61, i32 0, metadata !5664, null}
!5681 = metadata !{i32 62, i32 0, metadata !5664, null}
!5682 = metadata !{i32 63, i32 0, metadata !5664, null}
!5683 = metadata !{i32 64, i32 0, metadata !5664, null}
!5684 = metadata !{i32 68, i32 0, metadata !5685, null}
!5685 = metadata !{i32 589835, metadata !5664, i32 68, i32 0, metadata !10, i32 2} ; [ DW_TAG_lexical_block ]
!5686 = metadata !{i32 69, i32 0, metadata !5685, null}
!5687 = metadata !{i32 74, i32 0, metadata !5664, null}
!5688 = metadata !{i32 32, i32 0, metadata !5689, null}
!5689 = metadata !{i32 589835, metadata !48, i32 29, i32 0, metadata !49, i32 0} ; [ DW_TAG_lexical_block ]
!5690 = metadata !{i32 24, i32 0, metadata !5691, null}
!5691 = metadata !{i32 589835, metadata !88, i32 20, i32 0, metadata !91, i32 0} ; [ DW_TAG_lexical_block ]
!5692 = metadata !{i32 25, i32 0, metadata !5691, null}
!5693 = metadata !{i32 26, i32 0, metadata !5691, null}
!5694 = metadata !{i32 31, i32 0, metadata !5691, null}
!5695 = metadata !{i32 34, i32 0, metadata !5691, null}
!5696 = metadata !{i32 35, i32 0, metadata !5691, null}
!5697 = metadata !{i32 38, i32 0, metadata !5691, null}
!5698 = metadata !{i32 40, i32 0, metadata !5691, null}
!5699 = metadata !{i32 49, i32 0, metadata !5691, null}
!5700 = metadata !{i32 51, i32 0, metadata !5691, null}
!5701 = metadata !{i32 52, i32 0, metadata !5691, null}
!5702 = metadata !{i32 55, i32 0, metadata !5691, null}
!5703 = metadata !{i32 62, i32 0, metadata !5704, null}
!5704 = metadata !{i32 589835, metadata !5691, i32 62, i32 0, metadata !91, i32 1} ; [ DW_TAG_lexical_block ]
!5705 = metadata !{i32 63, i32 0, metadata !5704, null}
!5706 = metadata !{i32 67, i32 0, metadata !5691, null}
!5707 = metadata !{i32 71, i32 0, metadata !5691, null}
!5708 = metadata !{i32 19, i32 0, metadata !5709, null}
!5709 = metadata !{i32 589835, metadata !127, i32 16, i32 0, metadata !128, i32 0} ; [ DW_TAG_lexical_block ]
!5710 = metadata !{i32 139, i32 0, metadata !5711, null}
!5711 = metadata !{i32 589835, metadata !165, i32 137, i32 0, metadata !166, i32 0} ; [ DW_TAG_lexical_block ]
!5712 = metadata !{i32 143, i32 0, metadata !5713, null}
!5713 = metadata !{i32 589835, metadata !5711, i32 137, i32 0, metadata !166, i32 1} ; [ DW_TAG_lexical_block ]
!5714 = metadata !{i32 147, i32 0, metadata !5713, null}
!5715 = metadata !{i32 150, i32 0, metadata !5713, null}
!5716 = metadata !{i32 153, i32 0, metadata !5713, null}
!5717 = metadata !{i32 56, i32 0, metadata !5718, null}
!5718 = metadata !{i32 589835, metadata !171, i32 55, i32 0, metadata !172, i32 2} ; [ DW_TAG_lexical_block ]
!5719 = metadata !{i32 160, i32 0, metadata !5720, null}
!5720 = metadata !{i32 589835, metadata !177, i32 156, i32 0, metadata !166, i32 3} ; [ DW_TAG_lexical_block ]
!5721 = metadata !{i32 161, i32 0, metadata !5720, null}
!5722 = metadata !{i32 162, i32 0, metadata !5720, null}
!5723 = metadata !{i32 163, i32 0, metadata !5720, null}
!5724 = metadata !{i32 165, i32 0, metadata !5720, null}
!5725 = metadata !{i32 166, i32 0, metadata !5720, null}
!5726 = metadata !{i32 168, i32 0, metadata !5720, null}
!5727 = metadata !{i32 191, i32 0, metadata !5728, null}
!5728 = metadata !{i32 589835, metadata !180, i32 188, i32 0, metadata !166, i32 4} ; [ DW_TAG_lexical_block ]
!5729 = metadata !{i32 193, i32 0, metadata !5728, null}
!5730 = metadata !{i32 197, i32 0, metadata !5728, null}
!5731 = metadata !{i32 239, i32 0, metadata !5728, null}
!5732 = metadata !{i32 192, i32 0, metadata !5728, null}
!5733 = metadata !{i32 263, i32 0, metadata !5734, null}
!5734 = metadata !{i32 589835, metadata !183, i32 252, i32 0, metadata !166, i32 5} ; [ DW_TAG_lexical_block ]
!5735 = metadata !{i32 264, i32 0, metadata !5734, null}
!5736 = metadata !{i32 266, i32 0, metadata !5734, null}
!5737 = metadata !{i32 267, i32 0, metadata !5734, null}
!5738 = metadata !{i32 268, i32 0, metadata !5734, null}
!5739 = metadata !{i32 288, i32 0, metadata !5740, null}
!5740 = metadata !{i32 589835, metadata !184, i32 281, i32 0, metadata !166, i32 6} ; [ DW_TAG_lexical_block ]
!5741 = metadata !{i32 291, i32 0, metadata !5740, null}
!5742 = metadata !{i32 294, i32 0, metadata !5740, null}
!5743 = metadata !{i32 298, i32 0, metadata !5740, null}
!5744 = metadata !{i32 300, i32 0, metadata !5740, null}
!5745 = metadata !{i32 305, i32 0, metadata !5740, null}
!5746 = metadata !{i32 306, i32 0, metadata !5740, null}
!5747 = metadata !{i32 307, i32 0, metadata !5740, null}
!5748 = metadata !{i32 308, i32 0, metadata !5740, null}
!5749 = metadata !{i32 312, i32 0, metadata !5750, null}
!5750 = metadata !{i32 589835, metadata !5740, i32 312, i32 0, metadata !166, i32 7} ; [ DW_TAG_lexical_block ]
!5751 = metadata !{i32 313, i32 0, metadata !5750, null}
!5752 = metadata !{i32 314, i32 0, metadata !5750, null}
!5753 = metadata !{i32 316, i32 0, metadata !5750, null}
!5754 = metadata !{i32 311, i32 0, metadata !5740, null}
!5755 = metadata !{i32 323, i32 0, metadata !5740, null}
!5756 = metadata !{i32 327, i32 0, metadata !5740, null}
!5757 = metadata !{i32 331, i32 0, metadata !5740, null}
!5758 = metadata !{i32 336, i32 0, metadata !5740, null}
!5759 = metadata !{i32 337, i32 0, metadata !5740, null}
!5760 = metadata !{i32 338, i32 0, metadata !5740, null}
!5761 = metadata !{i32 342, i32 0, metadata !5740, null}
!5762 = metadata !{i32 354, i32 0, metadata !5740, null}
!5763 = metadata !{i32 370, i32 0, metadata !5740, null}
!5764 = metadata !{i32 371, i32 0, metadata !5740, null}
!5765 = metadata !{i32 391, i32 0, metadata !5740, null}
!5766 = metadata !{i32 392, i32 0, metadata !5740, null}
!5767 = metadata !{i32 395, i32 0, metadata !5740, null}
!5768 = metadata !{i32 396, i32 0, metadata !5740, null}
!5769 = metadata !{i32 401, i32 0, metadata !5740, null}
!5770 = metadata !{i32 930, i32 0, metadata !5771, null}
!5771 = metadata !{i32 589835, metadata !195, i32 921, i32 0, metadata !198, i32 0} ; [ DW_TAG_lexical_block ]
!5772 = metadata !{i32 27, i32 0, metadata !5773, null}
!5773 = metadata !{i32 589835, metadata !208, i32 23, i32 0, metadata !209, i32 0} ; [ DW_TAG_lexical_block ]
!5774 = metadata !{i32 28, i32 0, metadata !5773, null}
!5775 = metadata !{i32 29, i32 0, metadata !5773, null}
!5776 = metadata !{i32 31, i32 0, metadata !5773, null}
!5777 = metadata !{i32 118, i32 0, metadata !5778, null}
!5778 = metadata !{i32 589835, metadata !219, i32 112, i32 0, metadata !222, i32 0} ; [ DW_TAG_lexical_block ]
!5779 = metadata !{i32 34, i32 0, metadata !5780, null}
!5780 = metadata !{i32 589835, metadata !228, i32 32, i32 0, metadata !229, i32 0} ; [ DW_TAG_lexical_block ]
!5781 = metadata !{i32 36, i32 0, metadata !5780, null}
!5782 = metadata !{i32 37, i32 0, metadata !5780, null}
!5783 = metadata !{i32 41, i32 0, metadata !5780, null}
!5784 = metadata !{i32 40, i32 0, metadata !5780, null}
!5785 = metadata !{i32 49, i32 0, metadata !5780, null}
!5786 = metadata !{i32 50, i32 0, metadata !5780, null}
!5787 = metadata !{i32 52, i32 0, metadata !5780, null}
!5788 = metadata !{i32 53, i32 0, metadata !5780, null}
!5789 = metadata !{i32 54, i32 0, metadata !5780, null}
!5790 = metadata !{i32 55, i32 0, metadata !5780, null}
!5791 = metadata !{i32 57, i32 0, metadata !5780, null}
!5792 = metadata !{i32 58, i32 0, metadata !5780, null}
!5793 = metadata !{i32 59, i32 0, metadata !5780, null}
!5794 = metadata !{i32 61, i32 0, metadata !5780, null}
!5795 = metadata !{i32 62, i32 0, metadata !5780, null}
!5796 = metadata !{i32 63, i32 0, metadata !5780, null}
!5797 = metadata !{i32 65, i32 0, metadata !5780, null}
!5798 = metadata !{i32 66, i32 0, metadata !5780, null}
!5799 = metadata !{i32 67, i32 0, metadata !5780, null}
!5800 = metadata !{i32 69, i32 0, metadata !5780, null}
!5801 = metadata !{i32 70, i32 0, metadata !5780, null}
!5802 = metadata !{i32 72, i32 0, metadata !5780, null}
!5803 = metadata !{i32 73, i32 0, metadata !5780, null}
!5804 = metadata !{i32 75, i32 0, metadata !5780, null}
!5805 = metadata !{i32 86, i32 0, metadata !5806, null}
!5806 = metadata !{i32 589835, metadata !278, i32 80, i32 0, metadata !229, i32 1} ; [ DW_TAG_lexical_block ]
!5807 = metadata !{i32 87, i32 0, metadata !5806, null}
!5808 = metadata !{i32 88, i32 0, metadata !5806, null}
!5809 = metadata !{i32 89, i32 0, metadata !5806, null}
!5810 = metadata !{i32 92, i32 0, metadata !5806, null}
!5811 = metadata !{i32 94, i32 0, metadata !5806, null}
!5812 = metadata !{i32 99, i32 0, metadata !5813, null}
!5813 = metadata !{i32 589835, metadata !281, i32 98, i32 0, metadata !229, i32 2} ; [ DW_TAG_lexical_block ]
!5814 = metadata !{i32 100, i32 0, metadata !5813, null}
!5815 = metadata !{i32 102, i32 0, metadata !5813, null}
!5816 = metadata !{i32 104, i32 0, metadata !5813, null}
!5817 = metadata !{i32 106, i32 0, metadata !5813, null}
!5818 = metadata !{i32 111, i32 0, metadata !5819, null}
!5819 = metadata !{i32 589835, metadata !286, i32 110, i32 0, metadata !229, i32 3} ; [ DW_TAG_lexical_block ]
!5820 = metadata !{i32 116, i32 0, metadata !5821, null}
!5821 = metadata !{i32 589835, metadata !291, i32 115, i32 0, metadata !229, i32 4} ; [ DW_TAG_lexical_block ]
!5822 = metadata !{i32 122, i32 0, metadata !5823, null}
!5823 = metadata !{i32 589835, metadata !294, i32 121, i32 0, metadata !229, i32 5} ; [ DW_TAG_lexical_block ]
!5824 = metadata !{i32 123, i32 0, metadata !5823, null}
!5825 = metadata !{i32 124, i32 0, metadata !5823, null}
!5826 = metadata !{i32 54, i32 0, metadata !5827, null}
!5827 = metadata !{i32 589835, metadata !297, i32 51, i32 0, metadata !298, i32 0} ; [ DW_TAG_lexical_block ]
!5828 = metadata !{i32 56, i32 0, metadata !5827, null}
!5829 = metadata !{i32 57, i32 0, metadata !5827, null}
!5830 = metadata !{i32 58, i32 0, metadata !5827, null}
!5831 = metadata !{i32 59, i32 0, metadata !5827, null}
!5832 = metadata !{i32 60, i32 0, metadata !5827, null}
!5833 = metadata !{i32 61, i32 0, metadata !5827, null}
!5834 = metadata !{i32 63, i32 0, metadata !5835, null}
!5835 = metadata !{i32 589835, metadata !5827, i32 63, i32 0, metadata !298, i32 1} ; [ DW_TAG_lexical_block ]
!5836 = metadata !{i32 64, i32 0, metadata !5827, null}
!5837 = metadata !{i32 65, i32 0, metadata !5827, null}
!5838 = metadata !{i32 66, i32 0, metadata !5827, null}
!5839 = metadata !{i32 75, i32 0, metadata !5840, null}
!5840 = metadata !{i32 589835, metadata !306, i32 72, i32 0, metadata !298, i32 2} ; [ DW_TAG_lexical_block ]
!5841 = metadata !{i32 79, i32 0, metadata !5842, null}
!5842 = metadata !{i32 589835, metadata !5840, i32 79, i32 0, metadata !298, i32 3} ; [ DW_TAG_lexical_block ]
!5843 = metadata !{i32 84, i32 0, metadata !5842, null}
!5844 = metadata !{i32 85, i32 0, metadata !5842, null}
!5845 = metadata !{i32 88, i32 0, metadata !5840, null}
!5846 = metadata !{i32 90, i32 0, metadata !5840, null}
!5847 = metadata !{i32 91, i32 0, metadata !5840, null}
!5848 = metadata !{i32 93, i32 0, metadata !5840, null}
!5849 = metadata !{i32 94, i32 0, metadata !5840, null}
!5850 = metadata !{i32 95, i32 0, metadata !5840, null}
!5851 = metadata !{i32 97, i32 0, metadata !5840, null}
!5852 = metadata !{i32 98, i32 0, metadata !5840, null}
!5853 = metadata !{i32 99, i32 0, metadata !5840, null}
!5854 = metadata !{i32 101, i32 0, metadata !5855, null}
!5855 = metadata !{i32 589835, metadata !5840, i32 101, i32 0, metadata !298, i32 4} ; [ DW_TAG_lexical_block ]
!5856 = metadata !{i32 102, i32 0, metadata !5840, null}
!5857 = metadata !{i32 103, i32 0, metadata !5840, null}
!5858 = metadata !{i32 82, i32 0, metadata !5842, null}
!5859 = metadata !{i32 322, i32 0, metadata !5860, null}
!5860 = metadata !{i32 589835, metadata !310, i32 319, i32 0, metadata !313, i32 0} ; [ DW_TAG_lexical_block ]
!5861 = metadata !{i32 323, i32 0, metadata !5860, null}
!5862 = metadata !{i32 327, i32 0, metadata !5860, null}
!5863 = metadata !{i32 334, i32 0, metadata !5860, null}
!5864 = metadata !{i32 336, i32 0, metadata !5860, null}
!5865 = metadata !{i32 16, i32 0, metadata !5866, null}
!5866 = metadata !{i32 589835, metadata !317, i32 15, i32 0, metadata !318, i32 0} ; [ DW_TAG_lexical_block ]
!5867 = metadata !{i32 27, i32 0, metadata !5868, null}
!5868 = metadata !{i32 589835, metadata !5866, i32 27, i32 0, metadata !318, i32 1} ; [ DW_TAG_lexical_block ]
!5869 = metadata !{i32 28, i32 0, metadata !5868, null}
!5870 = metadata !{i32 29, i32 0, metadata !5868, null}
!5871 = metadata !{i32 32, i32 0, metadata !5868, null}
!5872 = metadata !{i32 33, i32 0, metadata !5868, null}
!5873 = metadata !{i32 36, i32 0, metadata !5868, null}
!5874 = metadata !{i32 31, i32 0, metadata !5868, null}
!5875 = metadata !{i32 51, i32 0, metadata !5866, null}
!5876 = metadata !{i32 52, i32 0, metadata !5866, null}
!5877 = metadata !{i32 56, i32 0, metadata !5866, null}
!5878 = metadata !{i32 57, i32 0, metadata !5866, null}
!5879 = metadata !{i32 60, i32 0, metadata !5866, null}
!5880 = metadata !{i32 71, i32 0, metadata !5866, null}
!5881 = metadata !{i32 72, i32 0, metadata !5866, null}
!5882 = metadata !{i32 92, i32 0, metadata !5866, null}
!5883 = metadata !{i32 101, i32 0, metadata !5866, null}
!5884 = metadata !{i32 104, i32 0, metadata !5866, null}
!5885 = metadata !{i32 18, i32 0, metadata !5886, null}
!5886 = metadata !{i32 589835, metadata !355, i32 15, i32 0, metadata !358, i32 0} ; [ DW_TAG_lexical_block ]
!5887 = metadata !{i32 73, i32 0, metadata !5888, null}
!5888 = metadata !{i32 589835, metadata !394, i32 70, i32 0, metadata !397, i32 0} ; [ DW_TAG_lexical_block ]
!5889 = metadata !{i32 77, i32 0, metadata !5888, null}
!5890 = metadata !{i32 85, i32 0, metadata !5888, null}
!5891 = metadata !{i32 86, i32 0, metadata !5888, null}
!5892 = metadata !{i32 87, i32 0, metadata !5888, null}
!5893 = metadata !{i32 90, i32 0, metadata !5888, null}
!5894 = metadata !{i32 95, i32 0, metadata !5888, null}
!5895 = metadata !{i32 103, i32 0, metadata !5888, null}
!5896 = metadata !{i32 106, i32 0, metadata !5888, null}
!5897 = metadata !{i32 110, i32 0, metadata !5888, null}
!5898 = metadata !{i32 111, i32 0, metadata !5888, null}
!5899 = metadata !{i32 112, i32 0, metadata !5888, null}
!5900 = metadata !{i32 114, i32 0, metadata !5888, null}
!5901 = metadata !{i32 119, i32 0, metadata !5888, null}
!5902 = metadata !{i32 98, i32 0, metadata !5888, null}
!5903 = metadata !{i32 124, i32 0, metadata !5888, null}
!5904 = metadata !{i32 125, i32 0, metadata !5888, null}
!5905 = metadata !{i32 126, i32 0, metadata !5888, null}
!5906 = metadata !{i32 127, i32 0, metadata !5888, null}
!5907 = metadata !{i32 129, i32 0, metadata !5888, null}
!5908 = metadata !{i32 150, i32 0, metadata !5888, null}
!5909 = metadata !{i32 18, i32 0, metadata !5910, null}
!5910 = metadata !{i32 589835, metadata !433, i32 15, i32 0, metadata !436, i32 0} ; [ DW_TAG_lexical_block ]
!5911 = metadata !{i32 19, i32 0, metadata !5910, null}
!5912 = metadata !{i32 22, i32 0, metadata !5910, null}
!5913 = metadata !{i32 23, i32 0, metadata !5910, null}
!5914 = metadata !{i32 20, i32 0, metadata !5915, null}
!5915 = metadata !{i32 589835, metadata !472, i32 19, i32 0, metadata !473, i32 0} ; [ DW_TAG_lexical_block ]
!5916 = metadata !{i32 19, i32 0, metadata !5917, null}
!5917 = metadata !{i32 589835, metadata !513, i32 15, i32 0, metadata !514, i32 0} ; [ DW_TAG_lexical_block ]
!5918 = metadata !{i32 33, i32 0, metadata !5917, null}
!5919 = metadata !{i32 35, i32 0, metadata !5917, null}
!5920 = metadata !{i32 37, i32 0, metadata !5917, null}
!5921 = metadata !{i32 39, i32 0, metadata !5917, null}
!5922 = metadata !{i32 41, i32 0, metadata !5917, null}
!5923 = metadata !{i32 25, i32 0, metadata !5924, null}
!5924 = metadata !{i32 589835, metadata !554, i32 24, i32 0, metadata !557, i32 0} ; [ DW_TAG_lexical_block ]
!5925 = metadata !{i32 27, i32 0, metadata !5924, null}
!5926 = metadata !{i32 28, i32 0, metadata !5927, null}
!5927 = metadata !{i32 589835, metadata !596, i32 25, i32 0, metadata !597, i32 0} ; [ DW_TAG_lexical_block ]
!5928 = metadata !{i32 22, i32 0, metadata !5929, null}
!5929 = metadata !{i32 589835, metadata !635, i32 16, i32 0, metadata !638, i32 0} ; [ DW_TAG_lexical_block ]
!5930 = metadata !{i32 27, i32 0, metadata !5929, null}
!5931 = metadata !{i32 28, i32 0, metadata !5929, null}
!5932 = metadata !{i32 32, i32 0, metadata !5929, null}
!5933 = metadata !{i32 33, i32 0, metadata !5929, null}
!5934 = metadata !{i32 36, i32 0, metadata !5929, null}
!5935 = metadata !{i32 1140, i32 0, metadata !5936, null}
!5936 = metadata !{i32 589835, metadata !677, i32 1136, i32 0, metadata !680, i32 0} ; [ DW_TAG_lexical_block ]
!5937 = metadata !{i32 1141, i32 0, metadata !5936, null}
!5938 = metadata !{i32 1143, i32 0, metadata !5936, null}
!5939 = metadata !{i32 1144, i32 0, metadata !5936, null}
!5940 = metadata !{i32 1146, i32 0, metadata !5936, null}
!5941 = metadata !{i32 1149, i32 0, metadata !5936, null}
!5942 = metadata !{i32 1153, i32 0, metadata !5936, null}
!5943 = metadata !{i32 22, i32 0, metadata !5944, null}
!5944 = metadata !{i32 589835, metadata !689, i32 18, i32 0, metadata !690, i32 0} ; [ DW_TAG_lexical_block ]
!5945 = metadata !{i32 23, i32 0, metadata !5944, null}
!5946 = metadata !{i32 24, i32 0, metadata !5944, null}
!5947 = metadata !{i32 26, i32 0, metadata !5944, null}
!5948 = metadata !{i32 27, i32 0, metadata !5944, null}
!5949 = metadata !{i32 29, i32 0, metadata !5944, null}
!5950 = metadata !{i32 25, i32 0, metadata !5944, null}
!5951 = metadata !{i32 31, i32 0, metadata !5944, null}
!5952 = metadata !{i32 20, i32 0, metadata !5953, null}
!5953 = metadata !{i32 589835, metadata !698, i32 19, i32 0, metadata !699, i32 0} ; [ DW_TAG_lexical_block ]
!5954 = metadata !{i32 221, i32 0, metadata !5955, null}
!5955 = metadata !{i32 589835, metadata !745, i32 220, i32 0, metadata !746, i32 0} ; [ DW_TAG_lexical_block ]
!5956 = metadata !{i32 222, i32 0, metadata !5955, null}
!5957 = metadata !{i32 223, i32 0, metadata !5955, null}
!5958 = metadata !{i32 255, i32 0, metadata !5955, null}
!5959 = metadata !{i32 258, i32 0, metadata !5960, null}
!5960 = metadata !{i32 589835, metadata !5955, i32 258, i32 0, metadata !746, i32 1} ; [ DW_TAG_lexical_block ]
!5961 = metadata !{i32 262, i32 0, metadata !5960, null}
!5962 = metadata !{i32 264, i32 0, metadata !5960, null}
!5963 = metadata !{i32 265, i32 0, metadata !5960, null}
!5964 = metadata !{i32 266, i32 0, metadata !5960, null}
!5965 = metadata !{i32 270, i32 0, metadata !5960, null}
!5966 = metadata !{i32 275, i32 0, metadata !5967, null}
!5967 = metadata !{i32 589835, metadata !5955, i32 275, i32 0, metadata !746, i32 2} ; [ DW_TAG_lexical_block ]
!5968 = metadata !{i32 279, i32 0, metadata !5967, null}
!5969 = metadata !{i32 281, i32 0, metadata !5967, null}
!5970 = metadata !{i32 282, i32 0, metadata !5967, null}
!5971 = metadata !{i32 283, i32 0, metadata !5967, null}
!5972 = metadata !{i32 287, i32 0, metadata !5967, null}
!5973 = metadata !{i32 253, i32 0, metadata !5955, null}
!5974 = metadata !{i32 293, i32 0, metadata !5955, null}
!5975 = metadata !{i32 294, i32 0, metadata !5955, null}
!5976 = metadata !{i32 295, i32 0, metadata !5955, null}
!5977 = metadata !{i32 307, i32 0, metadata !5978, null}
!5978 = metadata !{i32 589835, metadata !773, i32 302, i32 0, metadata !746, i32 3} ; [ DW_TAG_lexical_block ]
!5979 = metadata !{i32 309, i32 0, metadata !5978, null}
!5980 = metadata !{i32 311, i32 0, metadata !5978, null}
!5981 = metadata !{i32 315, i32 0, metadata !5978, null}
!5982 = metadata !{i32 317, i32 0, metadata !5978, null}
!5983 = metadata !{i32 318, i32 0, metadata !5978, null}
!5984 = metadata !{i32 320, i32 0, metadata !5978, null}
!5985 = metadata !{i32 322, i32 0, metadata !5978, null}
!5986 = metadata !{i32 323, i32 0, metadata !5978, null}
!5987 = metadata !{i32 325, i32 0, metadata !5978, null}
!5988 = metadata !{i32 326, i32 0, metadata !5978, null}
!5989 = metadata !{i32 328, i32 0, metadata !5978, null}
!5990 = metadata !{i32 360, i32 0, metadata !5978, null}
!5991 = metadata !{i32 424, i32 0, metadata !5992, null}
!5992 = metadata !{i32 589835, metadata !780, i32 423, i32 0, metadata !746, i32 4} ; [ DW_TAG_lexical_block ]
!5993 = metadata !{i32 425, i32 0, metadata !5992, null}
!5994 = metadata !{i32 426, i32 0, metadata !5992, null}
!5995 = metadata !{i32 428, i32 0, metadata !5992, null}
!5996 = metadata !{i32 429, i32 0, metadata !5992, null}
!5997 = metadata !{i32 431, i32 0, metadata !5992, null}
!5998 = metadata !{i32 433, i32 0, metadata !5992, null}
!5999 = metadata !{i32 435, i32 0, metadata !5992, null}
!6000 = metadata !{i32 436, i32 0, metadata !5992, null}
!6001 = metadata !{i32 437, i32 0, metadata !5992, null}
!6002 = metadata !{i32 438, i32 0, metadata !5992, null}
!6003 = metadata !{i32 453, i32 0, metadata !5992, null}
!6004 = metadata !{i32 459, i32 0, metadata !5992, null}
!6005 = metadata !{i32 460, i32 0, metadata !5992, null}
!6006 = metadata !{i32 461, i32 0, metadata !5992, null}
!6007 = metadata !{i32 462, i32 0, metadata !5992, null}
!6008 = metadata !{i32 464, i32 0, metadata !5992, null}
!6009 = metadata !{i32 469, i32 0, metadata !5992, null}
!6010 = metadata !{i32 471, i32 0, metadata !5992, null}
!6011 = metadata !{i32 472, i32 0, metadata !5992, null}
!6012 = metadata !{i32 473, i32 0, metadata !5992, null}
!6013 = metadata !{i32 479, i32 0, metadata !5992, null}
!6014 = metadata !{i32 478, i32 0, metadata !5992, null}
!6015 = metadata !{i32 480, i32 0, metadata !5992, null}
!6016 = metadata !{i32 488, i32 0, metadata !5992, null}
!6017 = metadata !{i32 490, i32 0, metadata !5992, null}
!6018 = metadata !{i32 492, i32 0, metadata !5992, null}
!6019 = metadata !{i32 494, i32 0, metadata !5992, null}
!6020 = metadata !{i32 495, i32 0, metadata !5992, null}
!6021 = metadata !{i32 496, i32 0, metadata !5992, null}
!6022 = metadata !{i32 497, i32 0, metadata !5992, null}
!6023 = metadata !{i32 499, i32 0, metadata !5992, null}
!6024 = metadata !{i32 505, i32 0, metadata !5992, null}
!6025 = metadata !{i32 509, i32 0, metadata !5992, null}
!6026 = metadata !{i32 510, i32 0, metadata !5992, null}
!6027 = metadata !{i32 511, i32 0, metadata !5992, null}
!6028 = metadata !{i32 517, i32 0, metadata !5992, null}
!6029 = metadata !{i32 519, i32 0, metadata !5992, null}
!6030 = metadata !{i32 520, i32 0, metadata !5992, null}
!6031 = metadata !{i32 521, i32 0, metadata !5992, null}
!6032 = metadata !{i32 522, i32 0, metadata !5992, null}
!6033 = metadata !{i32 528, i32 0, metadata !5992, null}
!6034 = metadata !{i32 547, i32 0, metadata !5992, null}
!6035 = metadata !{i32 554, i32 0, metadata !6036, null}
!6036 = metadata !{i32 589835, metadata !5992, i32 554, i32 0, metadata !746, i32 5} ; [ DW_TAG_lexical_block ]
!6037 = metadata !{i32 555, i32 0, metadata !6036, null}
!6038 = metadata !{i32 556, i32 0, metadata !6036, null}
!6039 = metadata !{i32 557, i32 0, metadata !6036, null}
!6040 = metadata !{i32 560, i32 0, metadata !6036, null}
!6041 = metadata !{i32 565, i32 0, metadata !6036, null}
!6042 = metadata !{i32 566, i32 0, metadata !6036, null}
!6043 = metadata !{i32 568, i32 0, metadata !6036, null}
!6044 = metadata !{i32 572, i32 0, metadata !6036, null}
!6045 = metadata !{i32 573, i32 0, metadata !6036, null}
!6046 = metadata !{i32 574, i32 0, metadata !6036, null}
!6047 = metadata !{i32 577, i32 0, metadata !6036, null}
!6048 = metadata !{i32 580, i32 0, metadata !6036, null}
!6049 = metadata !{i32 581, i32 0, metadata !6036, null}
!6050 = metadata !{i32 583, i32 0, metadata !6036, null}
!6051 = metadata !{i32 588, i32 0, metadata !6036, null}
!6052 = metadata !{i32 591, i32 0, metadata !6036, null}
!6053 = metadata !{i32 593, i32 0, metadata !6036, null}
!6054 = metadata !{i32 614, i32 0, metadata !6036, null}
!6055 = metadata !{i32 618, i32 0, metadata !6036, null}
!6056 = metadata !{i32 619, i32 0, metadata !6036, null}
!6057 = metadata !{i32 620, i32 0, metadata !6036, null}
!6058 = metadata !{i32 621, i32 0, metadata !6036, null}
!6059 = metadata !{i32 624, i32 0, metadata !6036, null}
!6060 = metadata !{i32 626, i32 0, metadata !6036, null}
!6061 = metadata !{i32 627, i32 0, metadata !6036, null}
!6062 = metadata !{i32 628, i32 0, metadata !6036, null}
!6063 = metadata !{i32 632, i32 0, metadata !6036, null}
!6064 = metadata !{i32 633, i32 0, metadata !6036, null}
!6065 = metadata !{i32 636, i32 0, metadata !6036, null}
!6066 = metadata !{i32 643, i32 0, metadata !6036, null}
!6067 = metadata !{i32 651, i32 0, metadata !6036, null}
!6068 = metadata !{i32 665, i32 0, metadata !6036, null}
!6069 = metadata !{i32 691, i32 0, metadata !6036, null}
!6070 = metadata !{i32 693, i32 0, metadata !6036, null}
!6071 = metadata !{i32 694, i32 0, metadata !6036, null}
!6072 = metadata !{i32 697, i32 0, metadata !6036, null}
!6073 = metadata !{i32 699, i32 0, metadata !6036, null}
!6074 = metadata !{i32 700, i32 0, metadata !6036, null}
!6075 = metadata !{i32 703, i32 0, metadata !6036, null}
!6076 = metadata !{i32 726, i32 0, metadata !6036, null}
!6077 = metadata !{i32 731, i32 0, metadata !6036, null}
!6078 = metadata !{i32 732, i32 0, metadata !6036, null}
!6079 = metadata !{i32 733, i32 0, metadata !6036, null}
!6080 = metadata !{i32 736, i32 0, metadata !6036, null}
!6081 = metadata !{i32 737, i32 0, metadata !6036, null}
!6082 = metadata !{i32 738, i32 0, metadata !6036, null}
!6083 = metadata !{i32 739, i32 0, metadata !6036, null}
!6084 = metadata !{i32 741, i32 0, metadata !6036, null}
!6085 = metadata !{i32 742, i32 0, metadata !6036, null}
!6086 = metadata !{i32 744, i32 0, metadata !6036, null}
!6087 = metadata !{i32 751, i32 0, metadata !6036, null}
!6088 = metadata !{i32 754, i32 0, metadata !6036, null}
!6089 = metadata !{i32 761, i32 0, metadata !6036, null}
!6090 = metadata !{i32 768, i32 0, metadata !6036, null}
!6091 = metadata !{i32 779, i32 0, metadata !6036, null}
!6092 = metadata !{i32 801, i32 0, metadata !6036, null}
!6093 = metadata !{i32 802, i32 0, metadata !6036, null}
!6094 = metadata !{i32 803, i32 0, metadata !6036, null}
!6095 = metadata !{i32 804, i32 0, metadata !6036, null}
!6096 = metadata !{i32 811, i32 0, metadata !6097, null}
!6097 = metadata !{i32 589835, metadata !5992, i32 811, i32 0, metadata !746, i32 6} ; [ DW_TAG_lexical_block ]
!6098 = metadata !{i32 812, i32 0, metadata !6097, null}
!6099 = metadata !{i32 815, i32 0, metadata !6097, null}
!6100 = metadata !{i32 816, i32 0, metadata !6097, null}
!6101 = metadata !{i32 818, i32 0, metadata !6097, null}
!6102 = metadata !{i32 820, i32 0, metadata !6097, null}
!6103 = metadata !{i32 827, i32 0, metadata !6097, null}
!6104 = metadata !{i32 834, i32 0, metadata !6097, null}
!6105 = metadata !{i32 843, i32 0, metadata !6097, null}
!6106 = metadata !{i32 864, i32 0, metadata !6097, null}
!6107 = metadata !{i32 865, i32 0, metadata !6097, null}
!6108 = metadata !{i32 1085, i32 0, metadata !6097, null}
!6109 = metadata !{i32 1087, i32 0, metadata !6097, null}
!6110 = metadata !{i32 1090, i32 0, metadata !6097, null}
!6111 = metadata !{i32 1092, i32 0, metadata !6097, null}
!6112 = metadata !{i32 1093, i32 0, metadata !6097, null}
!6113 = metadata !{i32 1096, i32 0, metadata !6097, null}
!6114 = metadata !{i32 1097, i32 0, metadata !6097, null}
!6115 = metadata !{i32 1102, i32 0, metadata !6097, null}
!6116 = metadata !{i32 1104, i32 0, metadata !6097, null}
!6117 = metadata !{i32 1107, i32 0, metadata !6097, null}
!6118 = metadata !{i32 1109, i32 0, metadata !6097, null}
!6119 = metadata !{i32 1111, i32 0, metadata !6097, null}
!6120 = metadata !{i32 1134, i32 0, metadata !6097, null}
!6121 = metadata !{i32 1139, i32 0, metadata !6097, null}
!6122 = metadata !{i32 1140, i32 0, metadata !6097, null}
!6123 = metadata !{i32 1141, i32 0, metadata !6097, null}
!6124 = metadata !{i32 1143, i32 0, metadata !6097, null}
!6125 = metadata !{i32 1148, i32 0, metadata !6097, null}
!6126 = metadata !{i32 1149, i32 0, metadata !6097, null}
!6127 = metadata !{i32 1152, i32 0, metadata !6097, null}
!6128 = metadata !{i32 1162, i32 0, metadata !6129, null}
!6129 = metadata !{i32 589835, metadata !793, i32 1159, i32 0, metadata !746, i32 7} ; [ DW_TAG_lexical_block ]
!6130 = metadata !{i32 1163, i32 0, metadata !6129, null}
!6131 = metadata !{i32 1165, i32 0, metadata !6129, null}
!6132 = metadata !{i32 1168, i32 0, metadata !6129, null}
!6133 = metadata !{i32 1169, i32 0, metadata !6129, null}
!6134 = metadata !{i32 1170, i32 0, metadata !6129, null}
!6135 = metadata !{i32 1172, i32 0, metadata !6129, null}
!6136 = metadata !{i32 1178, i32 0, metadata !6137, null}
!6137 = metadata !{i32 589835, metadata !796, i32 1177, i32 0, metadata !746, i32 8} ; [ DW_TAG_lexical_block ]
!6138 = metadata !{i32 1188, i32 0, metadata !6139, null}
!6139 = metadata !{i32 589835, metadata !799, i32 1187, i32 0, metadata !746, i32 9} ; [ DW_TAG_lexical_block ]
!6140 = metadata !{i32 1200, i32 0, metadata !6141, null}
!6141 = metadata !{i32 589835, metadata !802, i32 1199, i32 0, metadata !746, i32 10} ; [ DW_TAG_lexical_block ]
!6142 = metadata !{i32 49, i32 0, metadata !6143, null}
!6143 = metadata !{i32 589835, metadata !803, i32 46, i32 0, metadata !804, i32 0} ; [ DW_TAG_lexical_block ]
!6144 = metadata !{i32 50, i32 0, metadata !6143, null}
!6145 = metadata !{i32 51, i32 0, metadata !6143, null}
!6146 = metadata !{i32 56, i32 0, metadata !6143, null}
!6147 = metadata !{i32 57, i32 0, metadata !6143, null}
!6148 = metadata !{i32 58, i32 0, metadata !6143, null}
!6149 = metadata !{i32 60, i32 0, metadata !6143, null}
!6150 = metadata !{i32 62, i32 0, metadata !6143, null}
!6151 = metadata !{i32 63, i32 0, metadata !6143, null}
!6152 = metadata !{i32 67, i32 0, metadata !6143, null}
!6153 = metadata !{i32 64, i32 0, metadata !6143, null}
!6154 = metadata !{i32 75, i32 0, metadata !6155, null}
!6155 = metadata !{i32 589835, metadata !807, i32 73, i32 0, metadata !804, i32 1} ; [ DW_TAG_lexical_block ]
!6156 = metadata !{i32 77, i32 0, metadata !6155, null}
!6157 = metadata !{i32 83, i32 0, metadata !6158, null}
!6158 = metadata !{i32 589835, metadata !808, i32 82, i32 0, metadata !804, i32 2} ; [ DW_TAG_lexical_block ]
!6159 = metadata !{i32 85, i32 0, metadata !6158, null}
!6160 = metadata !{i32 86, i32 0, metadata !6158, null}
!6161 = metadata !{i32 88, i32 0, metadata !6158, null}
!6162 = metadata !{i32 89, i32 0, metadata !6158, null}
!6163 = metadata !{i32 92, i32 0, metadata !6158, null}
!6164 = metadata !{i32 94, i32 0, metadata !6158, null}
!6165 = metadata !{i32 97, i32 0, metadata !6158, null}
!6166 = metadata !{i32 103, i32 0, metadata !6167, null}
!6167 = metadata !{i32 589835, metadata !858, i32 101, i32 0, metadata !804, i32 3} ; [ DW_TAG_lexical_block ]
!6168 = metadata !{i32 104, i32 0, metadata !6167, null}
!6169 = metadata !{i32 105, i32 0, metadata !6167, null}
!6170 = metadata !{i32 107, i32 0, metadata !6167, null}
!6171 = metadata !{i32 111, i32 0, metadata !6172, null}
!6172 = metadata !{i32 589835, metadata !859, i32 110, i32 0, metadata !804, i32 4} ; [ DW_TAG_lexical_block ]
!6173 = metadata !{i32 114, i32 0, metadata !6172, null}
!6174 = metadata !{i32 116, i32 0, metadata !6172, null}
!6175 = metadata !{i32 124, i32 0, metadata !6176, null}
!6176 = metadata !{i32 589835, metadata !862, i32 121, i32 0, metadata !804, i32 5} ; [ DW_TAG_lexical_block ]
!6177 = metadata !{i32 125, i32 0, metadata !6176, null}
!6178 = metadata !{i32 131, i32 0, metadata !6176, null}
!6179 = metadata !{i32 133, i32 0, metadata !6176, null}
!6180 = metadata !{i32 139, i32 0, metadata !6176, null}
!6181 = metadata !{i32 143, i32 0, metadata !6176, null}
!6182 = metadata !{i32 149, i32 0, metadata !6183, null}
!6183 = metadata !{i32 589835, metadata !867, i32 148, i32 0, metadata !804, i32 6} ; [ DW_TAG_lexical_block ]
!6184 = metadata !{i32 152, i32 0, metadata !6183, null}
!6185 = metadata !{i32 154, i32 0, metadata !6183, null}
!6186 = metadata !{i32 160, i32 0, metadata !6187, null}
!6187 = metadata !{i32 589835, metadata !868, i32 159, i32 0, metadata !804, i32 7} ; [ DW_TAG_lexical_block ]
!6188 = metadata !{i32 164, i32 0, metadata !6187, null}
!6189 = metadata !{i32 163, i32 0, metadata !6187, null}
!6190 = metadata !{i32 170, i32 0, metadata !6187, null}
!6191 = metadata !{i32 178, i32 0, metadata !6192, null}
!6192 = metadata !{i32 589835, metadata !869, i32 174, i32 0, metadata !804, i32 8} ; [ DW_TAG_lexical_block ]
!6193 = metadata !{i32 180, i32 0, metadata !6192, null}
!6194 = metadata !{i32 181, i32 0, metadata !6192, null}
!6195 = metadata !{i32 183, i32 0, metadata !6192, null}
!6196 = metadata !{i32 184, i32 0, metadata !6192, null}
!6197 = metadata !{i32 185, i32 0, metadata !6192, null}
!6198 = metadata !{i32 188, i32 0, metadata !6192, null}
!6199 = metadata !{i32 194, i32 0, metadata !6200, null}
!6200 = metadata !{i32 589835, metadata !870, i32 192, i32 0, metadata !804, i32 9} ; [ DW_TAG_lexical_block ]
!6201 = metadata !{i32 195, i32 0, metadata !6200, null}
!6202 = metadata !{i32 196, i32 0, metadata !6200, null}
!6203 = metadata !{i32 197, i32 0, metadata !6200, null}
!6204 = metadata !{i32 198, i32 0, metadata !6200, null}
!6205 = metadata !{i32 201, i32 0, metadata !6200, null}
!6206 = metadata !{i32 205, i32 0, metadata !6200, null}
!6207 = metadata !{i32 206, i32 0, metadata !6200, null}
!6208 = metadata !{i32 207, i32 0, metadata !6200, null}
!6209 = metadata !{i32 209, i32 0, metadata !6200, null}
!6210 = metadata !{i32 235, i32 0, metadata !875, null}
!6211 = metadata !{i32 235, i32 0, metadata !6212, null}
!6212 = metadata !{i32 589835, metadata !875, i32 235, i32 0, metadata !878, i32 0} ; [ DW_TAG_lexical_block ]
!6213 = metadata !{i32 259, i32 0, metadata !885, null}
!6214 = metadata !{i32 259, i32 0, metadata !6215, null}
!6215 = metadata !{i32 589835, metadata !885, i32 259, i32 0, metadata !888, i32 0} ; [ DW_TAG_lexical_block ]
!6216 = metadata !{i32 318, i32 0, metadata !6217, null}
!6217 = metadata !{i32 589835, metadata !895, i32 317, i32 0, metadata !898, i32 0} ; [ DW_TAG_lexical_block ]
!6218 = metadata !{i32 320, i32 0, metadata !6217, null}
!6219 = metadata !{i32 322, i32 0, metadata !6217, null}
!6220 = metadata !{i32 323, i32 0, metadata !6217, null}
!6221 = metadata !{i32 324, i32 0, metadata !6217, null}
!6222 = metadata !{i32 326, i32 0, metadata !6217, null}
!6223 = metadata !{i32 328, i32 0, metadata !6217, null}
!6224 = metadata !{i32 329, i32 0, metadata !6217, null}
!6225 = metadata !{i32 330, i32 0, metadata !6217, null}
!6226 = metadata !{i32 332, i32 0, metadata !6217, null}
!6227 = metadata !{i32 287, i32 0, metadata !6228, null}
!6228 = metadata !{i32 589835, metadata !931, i32 280, i32 0, metadata !934, i32 0} ; [ DW_TAG_lexical_block ]
!6229 = metadata !{i32 288, i32 0, metadata !6228, null}
!6230 = metadata !{i32 291, i32 0, metadata !6228, null}
!6231 = metadata !{i32 292, i32 0, metadata !6228, null}
!6232 = metadata !{i32 293, i32 0, metadata !6228, null}
!6233 = metadata !{i32 294, i32 0, metadata !6228, null}
!6234 = metadata !{i32 295, i32 0, metadata !6228, null}
!6235 = metadata !{i32 296, i32 0, metadata !6228, null}
!6236 = metadata !{i32 298, i32 0, metadata !6228, null}
!6237 = metadata !{i32 302, i32 0, metadata !6228, null}
!6238 = metadata !{i32 319, i32 0, metadata !6228, null}
!6239 = metadata !{i32 321, i32 0, metadata !6228, null}
!6240 = metadata !{i32 322, i32 0, metadata !6228, null}
!6241 = metadata !{i32 323, i32 0, metadata !6228, null}
!6242 = metadata !{i32 326, i32 0, metadata !6228, null}
!6243 = metadata !{i32 252, i32 0, metadata !6244, null}
!6244 = metadata !{i32 589835, metadata !953, i32 251, i32 0, metadata !956, i32 0} ; [ DW_TAG_lexical_block ]
!6245 = metadata !{i32 1020, i32 0, metadata !6246, null}
!6246 = metadata !{i32 589835, metadata !969, i32 1018, i32 0, metadata !972, i32 0} ; [ DW_TAG_lexical_block ]
!6247 = metadata !{i32 1022, i32 0, metadata !6246, null}
!6248 = metadata !{i32 1023, i32 0, metadata !6246, null}
!6249 = metadata !{i32 20, i32 0, metadata !6250, null}
!6250 = metadata !{i32 589835, metadata !984, i32 19, i32 0, metadata !985, i32 0} ; [ DW_TAG_lexical_block ]
!6251 = metadata !{i32 29, i32 0, metadata !6250, null}
!6252 = metadata !{i32 30, i32 0, metadata !6250, null}
!6253 = metadata !{i32 32, i32 0, metadata !6250, null}
!6254 = metadata !{i32 33, i32 0, metadata !6250, null}
!6255 = metadata !{i32 28, i32 0, metadata !6250, null}
!6256 = metadata !{i32 36, i32 0, metadata !6250, null}
!6257 = metadata !{i32 19, i32 0, metadata !6258, null}
!6258 = metadata !{i32 589835, metadata !994, i32 18, i32 0, metadata !995, i32 0} ; [ DW_TAG_lexical_block ]
!6259 = metadata !{i32 20, i32 0, metadata !6258, null}
!6260 = metadata !{i32 31, i32 0, metadata !6258, null}
!6261 = metadata !{i32 33, i32 0, metadata !6258, null}
!6262 = metadata !{i32 35, i32 0, metadata !6258, null}
!6263 = metadata !{i32 22, i32 0, metadata !6264, null}
!6264 = metadata !{i32 589835, metadata !1004, i32 21, i32 0, metadata !1005, i32 0} ; [ DW_TAG_lexical_block ]
!6265 = metadata !{i32 23, i32 0, metadata !6264, null}
!6266 = metadata !{i32 31, i32 0, metadata !6264, null}
!6267 = metadata !{i32 32, i32 0, metadata !6264, null}
!6268 = metadata !{i32 30, i32 0, metadata !6264, null}
!6269 = metadata !{i32 36, i32 0, metadata !6264, null}
!6270 = metadata !{i32 24, i32 0, metadata !6271, null}
!6271 = metadata !{i32 589835, metadata !1013, i32 15, i32 0, metadata !1014, i32 0} ; [ DW_TAG_lexical_block ]
!6272 = metadata !{i32 27, i32 0, metadata !6271, null}
!6273 = metadata !{i32 28, i32 0, metadata !6271, null}
!6274 = metadata !{i32 30, i32 0, metadata !6271, null}
!6275 = metadata !{i32 26, i32 0, metadata !6271, null}
!6276 = metadata !{i32 33, i32 0, metadata !6271, null}
!6277 = metadata !{i32 1035, i32 0, metadata !6278, null}
!6278 = metadata !{i32 589835, metadata !1023, i32 1031, i32 0, metadata !1026, i32 0} ; [ DW_TAG_lexical_block ]
!6279 = metadata !{i32 1036, i32 0, metadata !6278, null}
!6280 = metadata !{i32 1038, i32 0, metadata !6278, null}
!6281 = metadata !{i32 1041, i32 0, metadata !6278, null}
!6282 = metadata !{i32 18, i32 0, metadata !6283, null}
!6283 = metadata !{i32 589835, metadata !1034, i32 17, i32 0, metadata !1037, i32 0} ; [ DW_TAG_lexical_block ]
!6284 = metadata !{i32 20, i32 0, metadata !6283, null}
!6285 = metadata !{i32 59, i32 0, metadata !6286, null}
!6286 = metadata !{i32 589835, metadata !1041, i32 52, i32 0, metadata !1042, i32 0} ; [ DW_TAG_lexical_block ]
!6287 = metadata !{i32 64, i32 0, metadata !6286, null}
!6288 = metadata !{i32 65, i32 0, metadata !6286, null}
!6289 = metadata !{i32 66, i32 0, metadata !6286, null}
!6290 = metadata !{i32 68, i32 0, metadata !6286, null}
!6291 = metadata !{i32 69, i32 0, metadata !6286, null}
!6292 = metadata !{i32 70, i32 0, metadata !6286, null}
!6293 = metadata !{i32 73, i32 0, metadata !6286, null}
!6294 = metadata !{i32 74, i32 0, metadata !6286, null}
!6295 = metadata !{i32 75, i32 0, metadata !6286, null}
!6296 = metadata !{i32 76, i32 0, metadata !6286, null}
!6297 = metadata !{i32 79, i32 0, metadata !6286, null}
!6298 = metadata !{i32 80, i32 0, metadata !6286, null}
!6299 = metadata !{i32 81, i32 0, metadata !6286, null}
!6300 = metadata !{i32 82, i32 0, metadata !6286, null}
!6301 = metadata !{i32 83, i32 0, metadata !6286, null}
!6302 = metadata !{i32 85, i32 0, metadata !6286, null}
!6303 = metadata !{i32 86, i32 0, metadata !6286, null}
!6304 = metadata !{i32 87, i32 0, metadata !6286, null}
!6305 = metadata !{i32 88, i32 0, metadata !6286, null}
!6306 = metadata !{i32 89, i32 0, metadata !6286, null}
!6307 = metadata !{i32 91, i32 0, metadata !6286, null}
!6308 = metadata !{i32 92, i32 0, metadata !6286, null}
!6309 = metadata !{i32 97, i32 0, metadata !6286, null}
!6310 = metadata !{i32 98, i32 0, metadata !6286, null}
!6311 = metadata !{i32 101, i32 0, metadata !6286, null}
!6312 = metadata !{i32 103, i32 0, metadata !6286, null}
!6313 = metadata !{i32 104, i32 0, metadata !6286, null}
!6314 = metadata !{i32 107, i32 0, metadata !6286, null}
!6315 = metadata !{i32 108, i32 0, metadata !6286, null}
!6316 = metadata !{i32 109, i32 0, metadata !6286, null}
!6317 = metadata !{i32 111, i32 0, metadata !6286, null}
!6318 = metadata !{i32 114, i32 0, metadata !6286, null}
!6319 = metadata !{i32 121, i32 0, metadata !6286, null}
!6320 = metadata !{i32 122, i32 0, metadata !6286, null}
!6321 = metadata !{i32 123, i32 0, metadata !6286, null}
!6322 = metadata !{i32 125, i32 0, metadata !6286, null}
!6323 = metadata !{i32 120, i32 0, metadata !6286, null}
!6324 = metadata !{i32 129, i32 0, metadata !6286, null}
!6325 = metadata !{i32 130, i32 0, metadata !6286, null}
!6326 = metadata !{i32 131, i32 0, metadata !6286, null}
!6327 = metadata !{i32 133, i32 0, metadata !6286, null}
!6328 = metadata !{i32 135, i32 0, metadata !6286, null}
!6329 = metadata !{i32 136, i32 0, metadata !6286, null}
!6330 = metadata !{i32 137, i32 0, metadata !6286, null}
!6331 = metadata !{i32 139, i32 0, metadata !6286, null}
!6332 = metadata !{i32 140, i32 0, metadata !6286, null}
!6333 = metadata !{i32 144, i32 0, metadata !6286, null}
!6334 = metadata !{i32 145, i32 0, metadata !6286, null}
!6335 = metadata !{i32 146, i32 0, metadata !6286, null}
!6336 = metadata !{i32 150, i32 0, metadata !6286, null}
!6337 = metadata !{i32 152, i32 0, metadata !6286, null}
!6338 = metadata !{i32 155, i32 0, metadata !6286, null}
!6339 = metadata !{i32 157, i32 0, metadata !6286, null}
!6340 = metadata !{i32 158, i32 0, metadata !6286, null}
!6341 = metadata !{i32 161, i32 0, metadata !6286, null}
!6342 = metadata !{i32 95, i32 0, metadata !6286, null}
!6343 = metadata !{i32 164, i32 0, metadata !6286, null}
!6344 = metadata !{i32 165, i32 0, metadata !6286, null}
!6345 = metadata !{i32 167, i32 0, metadata !6286, null}
!6346 = metadata !{i32 168, i32 0, metadata !6286, null}
!6347 = metadata !{i32 163, i32 0, metadata !6348, null}
!6348 = metadata !{i32 589835, metadata !1050, i32 162, i32 0, metadata !1053, i32 0} ; [ DW_TAG_lexical_block ]
!6349 = metadata !{i32 23, i32 0, metadata !6350, null}
!6350 = metadata !{i32 589835, metadata !1061, i32 19, i32 0, metadata !1062, i32 0} ; [ DW_TAG_lexical_block ]
!6351 = metadata !{i32 24, i32 0, metadata !6350, null}
!6352 = metadata !{i32 25, i32 0, metadata !6350, null}
!6353 = metadata !{i32 27, i32 0, metadata !6350, null}
!6354 = metadata !{i32 213, i32 0, metadata !6355, null}
!6355 = metadata !{i32 589835, metadata !1071, i32 209, i32 0, metadata !1074, i32 0} ; [ DW_TAG_lexical_block ]
!6356 = metadata !{i32 214, i32 0, metadata !6355, null}
!6357 = metadata !{i32 215, i32 0, metadata !6355, null}
!6358 = metadata !{i32 217, i32 0, metadata !6355, null}
!6359 = metadata !{i32 46, i32 0, metadata !6360, null}
!6360 = metadata !{i32 589835, metadata !1081, i32 41, i32 0, metadata !1082, i32 0} ; [ DW_TAG_lexical_block ]
!6361 = metadata !{i32 47, i32 0, metadata !6360, null}
!6362 = metadata !{i32 21, i32 0, metadata !6360, null}
!6363 = metadata !{i32 23, i32 0, metadata !6360, null}
!6364 = metadata !{i32 24, i32 0, metadata !6360, null}
!6365 = metadata !{i32 25, i32 0, metadata !6360, null}
!6366 = metadata !{i32 26, i32 0, metadata !6360, null}
!6367 = metadata !{i32 27, i32 0, metadata !6360, null}
!6368 = metadata !{i32 28, i32 0, metadata !6360, null}
!6369 = metadata !{i32 30, i32 0, metadata !6360, null}
!6370 = metadata !{i32 41, i32 0, metadata !6360, null}
!6371 = metadata !{i32 42, i32 0, metadata !6360, null}
!6372 = metadata !{i32 53, i32 0, metadata !6360, null}
!6373 = metadata !{i32 54, i32 0, metadata !6360, null}
!6374 = metadata !{i32 56, i32 0, metadata !6375, null}
!6375 = metadata !{i32 589835, metadata !6360, i32 56, i32 0, metadata !6376, i32 1} ; [ DW_TAG_lexical_block ]
!6376 = metadata !{i32 589865, metadata !"internal_statvfs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/statfs", metadata !1083} ; [ DW_TAG_file_type ]
!6377 = metadata !{i32 60, i32 0, metadata !6375, null}
!6378 = metadata !{i32 61, i32 0, metadata !6375, null}
!6379 = metadata !{i32 62, i32 0, metadata !6375, null}
!6380 = metadata !{i32 64, i32 0, metadata !6375, null}
!6381 = metadata !{i32 73, i32 0, metadata !6382, null}
!6382 = metadata !{i32 589835, metadata !6383, i32 73, i32 0, metadata !6376, i32 3} ; [ DW_TAG_lexical_block ]
!6383 = metadata !{i32 589835, metadata !6375, i32 73, i32 0, metadata !6376, i32 2} ; [ DW_TAG_lexical_block ]
!6384 = metadata !{i32 78, i32 0, metadata !6385, null}
!6385 = metadata !{i32 589835, metadata !6382, i32 78, i32 0, metadata !6376, i32 4} ; [ DW_TAG_lexical_block ]
!6386 = metadata !{i32 82, i32 0, metadata !6385, null}
!6387 = metadata !{i32 83, i32 0, metadata !6385, null}
!6388 = metadata !{i32 84, i32 0, metadata !6385, null}
!6389 = metadata !{i32 85, i32 0, metadata !6385, null}
!6390 = metadata !{i32 87, i32 0, metadata !6385, null}
!6391 = metadata !{i32 88, i32 0, metadata !6385, null}
!6392 = metadata !{i32 89, i32 0, metadata !6385, null}
!6393 = metadata !{i32 90, i32 0, metadata !6385, null}
!6394 = metadata !{i32 91, i32 0, metadata !6385, null}
!6395 = metadata !{i32 92, i32 0, metadata !6385, null}
!6396 = metadata !{i32 93, i32 0, metadata !6385, null}
!6397 = metadata !{i32 94, i32 0, metadata !6385, null}
!6398 = metadata !{i32 95, i32 0, metadata !6385, null}
!6399 = metadata !{i32 96, i32 0, metadata !6385, null}
!6400 = metadata !{i32 97, i32 0, metadata !6385, null}
!6401 = metadata !{i32 98, i32 0, metadata !6385, null}
!6402 = metadata !{i32 81, i32 0, metadata !6385, null}
!6403 = metadata !{i32 68, i32 0, metadata !6383, null}
!6404 = metadata !{i32 107, i32 0, metadata !6383, null}
!6405 = metadata !{i32 110, i32 0, metadata !6375, null}
!6406 = metadata !{i32 258, i32 0, metadata !6407, null}
!6407 = metadata !{i32 589835, metadata !1113, i32 211, i32 0, metadata !1114, i32 0} ; [ DW_TAG_lexical_block ]
!6408 = metadata !{i32 261, i32 0, metadata !6407, null}
!6409 = metadata !{i32 262, i32 0, metadata !6407, null}
!6410 = metadata !{i32 274, i32 0, metadata !6407, null}
!6411 = metadata !{i32 280, i32 0, metadata !6412, null}
!6412 = metadata !{i32 589835, metadata !1117, i32 278, i32 0, metadata !1114, i32 1} ; [ DW_TAG_lexical_block ]
!6413 = metadata !{i32 282, i32 0, metadata !6412, null}
!6414 = metadata !{i32 283, i32 0, metadata !6412, null}
!6415 = metadata !{i32 284, i32 0, metadata !6412, null}
!6416 = metadata !{i32 291, i32 0, metadata !6412, null}
!6417 = metadata !{i32 19, i32 0, metadata !1118, null}
!6418 = metadata !{i32 21, i32 0, metadata !6419, null}
!6419 = metadata !{i32 589835, metadata !1118, i32 19, i32 0, metadata !1119, i32 0} ; [ DW_TAG_lexical_block ]
!6420 = metadata !{i32 22, i32 0, metadata !6419, null}
!6421 = metadata !{i32 24, i32 0, metadata !6419, null}
!6422 = metadata !{i32 26, i32 0, metadata !6419, null}
!6423 = metadata !{i32 21, i32 0, metadata !1128, null}
!6424 = metadata !{i32 34, i32 0, metadata !6425, null}
!6425 = metadata !{i32 589835, metadata !1128, i32 21, i32 0, metadata !1129, i32 0} ; [ DW_TAG_lexical_block ]
!6426 = metadata !{i32 37, i32 0, metadata !6425, null}
!6427 = metadata !{i32 26, i32 0, metadata !6428, null}
!6428 = metadata !{i32 589835, metadata !1137, i32 24, i32 0, metadata !1138, i32 0} ; [ DW_TAG_lexical_block ]
!6429 = metadata !{i32 28, i32 0, metadata !6428, null}
!6430 = metadata !{i32 29, i32 0, metadata !6428, null}
!6431 = metadata !{i32 32, i32 0, metadata !6428, null}
!6432 = metadata !{i32 22, i32 0, metadata !6433, null}
!6433 = metadata !{i32 589835, metadata !1146, i32 19, i32 0, metadata !1147, i32 0} ; [ DW_TAG_lexical_block ]
!6434 = metadata !{i32 24, i32 0, metadata !6433, null}
!6435 = metadata !{i32 30, i32 0, metadata !6436, null}
!6436 = metadata !{i32 589835, metadata !1157, i32 18, i32 0, metadata !1158, i32 0} ; [ DW_TAG_lexical_block ]
!6437 = metadata !{i32 32, i32 0, metadata !6436, null}
!6438 = metadata !{i32 37, i32 0, metadata !6436, null}
!6439 = metadata !{i32 21, i32 0, metadata !6440, null}
!6440 = metadata !{i32 589835, metadata !1169, i32 18, i32 0, metadata !1170, i32 0} ; [ DW_TAG_lexical_block ]
!6441 = metadata !{i32 23, i32 0, metadata !6440, null}
!6442 = metadata !{i32 24, i32 0, metadata !6440, null}
!6443 = metadata !{i32 26, i32 0, metadata !6440, null}
!6444 = metadata !{i32 28, i32 0, metadata !6440, null}
!6445 = metadata !{i32 20, i32 0, metadata !6446, null}
!6446 = metadata !{i32 589835, metadata !1179, i32 19, i32 0, metadata !1180, i32 0} ; [ DW_TAG_lexical_block ]
!6447 = metadata !{i32 21, i32 0, metadata !6446, null}
!6448 = metadata !{i32 24, i32 0, metadata !6446, null}
!6449 = metadata !{i32 25, i32 0, metadata !6446, null}
!6450 = metadata !{i32 26, i32 0, metadata !6446, null}
!6451 = metadata !{i32 23, i32 0, metadata !6446, null}
!6452 = metadata !{i32 29, i32 0, metadata !6446, null}
!6453 = metadata !{i32 21, i32 0, metadata !6454, null}
!6454 = metadata !{i32 589835, metadata !1190, i32 20, i32 0, metadata !1191, i32 0} ; [ DW_TAG_lexical_block ]
!6455 = metadata !{i32 22, i32 0, metadata !6454, null}
!6456 = metadata !{i32 25, i32 0, metadata !6454, null}
!6457 = metadata !{i32 26, i32 0, metadata !6454, null}
!6458 = metadata !{i32 28, i32 0, metadata !6454, null}
!6459 = metadata !{i32 29, i32 0, metadata !6454, null}
!6460 = metadata !{i32 30, i32 0, metadata !6454, null}
!6461 = metadata !{i32 32, i32 0, metadata !6454, null}
!6462 = metadata !{i32 33, i32 0, metadata !6454, null}
!6463 = metadata !{i32 34, i32 0, metadata !6454, null}
!6464 = metadata !{i32 36, i32 0, metadata !6454, null}
!6465 = metadata !{i32 386, i32 0, metadata !6466, null}
!6466 = metadata !{i32 589835, metadata !1199, i32 385, i32 0, metadata !1202, i32 0} ; [ DW_TAG_lexical_block ]
!6467 = metadata !{i32 1036, i32 0, metadata !6468, null}
!6468 = metadata !{i32 589835, metadata !1212, i32 1035, i32 0, metadata !1215, i32 0} ; [ DW_TAG_lexical_block ]
!6469 = metadata !{i32 1038, i32 0, metadata !6468, null}
!6470 = metadata !{i32 1168, i32 0, metadata !6471, null}
!6471 = metadata !{i32 589835, metadata !1226, i32 1167, i32 0, metadata !1229, i32 0} ; [ DW_TAG_lexical_block ]
!6472 = metadata !{i32 12, i32 0, metadata !6473, null}
!6473 = metadata !{i32 589835, metadata !1235, i32 11, i32 0, metadata !1236, i32 0} ; [ DW_TAG_lexical_block ]
!6474 = metadata !{i32 161, i32 0, metadata !6475, null}
!6475 = metadata !{i32 589835, metadata !1242, i32 158, i32 0, metadata !1245, i32 0} ; [ DW_TAG_lexical_block ]
!6476 = metadata !{i32 162, i32 0, metadata !6475, null}
!6477 = metadata !{i32 165, i32 0, metadata !6475, null}
!6478 = metadata !{i32 166, i32 0, metadata !6475, null}
!6479 = metadata !{i32 167, i32 0, metadata !6475, null}
!6480 = metadata !{i32 170, i32 0, metadata !6475, null}
!6481 = metadata !{i32 171, i32 0, metadata !6475, null}
!6482 = metadata !{i32 172, i32 0, metadata !6475, null}
!6483 = metadata !{i32 174, i32 0, metadata !6475, null}
!6484 = metadata !{i32 176, i32 0, metadata !6475, null}
!6485 = metadata !{i32 117, i32 0, metadata !1254, null}
!6486 = metadata !{i32 117, i32 0, metadata !6487, null}
!6487 = metadata !{i32 589835, metadata !1254, i32 117, i32 0, metadata !1257, i32 0} ; [ DW_TAG_lexical_block ]
!6488 = metadata !{i32 118, i32 0, metadata !1270, null}
!6489 = metadata !{i32 118, i32 0, metadata !6490, null}
!6490 = metadata !{i32 589835, metadata !1270, i32 118, i32 0, metadata !1257, i32 1} ; [ DW_TAG_lexical_block ]
!6491 = metadata !{i32 119, i32 0, metadata !1271, null}
!6492 = metadata !{i32 119, i32 0, metadata !6493, null}
!6493 = metadata !{i32 589835, metadata !1271, i32 119, i32 0, metadata !1257, i32 2} ; [ DW_TAG_lexical_block ]
!6494 = metadata !{i32 29, i32 0, metadata !6495, null}
!6495 = metadata !{i32 589835, metadata !1272, i32 28, i32 0, metadata !1273, i32 0} ; [ DW_TAG_lexical_block ]
!6496 = metadata !{i32 38, i32 0, metadata !6495, null}
!6497 = metadata !{i32 39, i32 0, metadata !6495, null}
!6498 = metadata !{i32 40, i32 0, metadata !6495, null}
!6499 = metadata !{i32 47, i32 0, metadata !6495, null}
!6500 = metadata !{i32 48, i32 0, metadata !6495, null}
!6501 = metadata !{i32 49, i32 0, metadata !6495, null}
!6502 = metadata !{i32 52, i32 0, metadata !6495, null}
!6503 = metadata !{i32 53, i32 0, metadata !6495, null}
!6504 = metadata !{i32 68, i32 0, metadata !6495, null}
!6505 = metadata !{i32 44, i32 0, metadata !6506, null}
!6506 = metadata !{i32 589835, metadata !1312, i32 35, i32 0, metadata !1313, i32 0} ; [ DW_TAG_lexical_block ]
!6507 = metadata !{i32 47, i32 0, metadata !6506, null}
!6508 = metadata !{i32 49, i32 0, metadata !6506, null}
!6509 = metadata !{i32 51, i32 0, metadata !6506, null}
!6510 = metadata !{i32 52, i32 0, metadata !6506, null}
!6511 = metadata !{i32 62, i32 0, metadata !6506, null}
!6512 = metadata !{i32 63, i32 0, metadata !6506, null}
!6513 = metadata !{i32 70, i32 0, metadata !6506, null}
!6514 = metadata !{i32 73, i32 0, metadata !6506, null}
!6515 = metadata !{i32 76, i32 0, metadata !6516, null}
!6516 = metadata !{i32 589835, metadata !6506, i32 76, i32 0, metadata !1313, i32 1} ; [ DW_TAG_lexical_block ]
!6517 = metadata !{i32 77, i32 0, metadata !6516, null}
!6518 = metadata !{i32 80, i32 0, metadata !6516, null}
!6519 = metadata !{i32 83, i32 0, metadata !6516, null}
!6520 = metadata !{i32 88, i32 0, metadata !6516, null}
!6521 = metadata !{i32 89, i32 0, metadata !6516, null}
!6522 = metadata !{i32 90, i32 0, metadata !6516, null}
!6523 = metadata !{i32 92, i32 0, metadata !6516, null}
!6524 = metadata !{i32 94, i32 0, metadata !6516, null}
!6525 = metadata !{i32 99, i32 0, metadata !6506, null}
!6526 = metadata !{i32 30, i32 0, metadata !6527, null}
!6527 = metadata !{i32 589835, metadata !1354, i32 21, i32 0, metadata !1355, i32 0} ; [ DW_TAG_lexical_block ]
!6528 = metadata !{i32 34, i32 0, metadata !6527, null}
!6529 = metadata !{i32 35, i32 0, metadata !6527, null}
!6530 = metadata !{i32 36, i32 0, metadata !6527, null}
!6531 = metadata !{i32 37, i32 0, metadata !6527, null}
!6532 = metadata !{i32 39, i32 0, metadata !6527, null}
!6533 = metadata !{i32 40, i32 0, metadata !6527, null}
!6534 = metadata !{i32 42, i32 0, metadata !6527, null}
!6535 = metadata !{i32 46, i32 0, metadata !6527, null}
!6536 = metadata !{i32 47, i32 0, metadata !6527, null}
!6537 = metadata !{i32 48, i32 0, metadata !6527, null}
!6538 = metadata !{i32 49, i32 0, metadata !6527, null}
!6539 = metadata !{i32 52, i32 0, metadata !6527, null}
!6540 = metadata !{i32 53, i32 0, metadata !6527, null}
!6541 = metadata !{i32 54, i32 0, metadata !6527, null}
!6542 = metadata !{i32 56, i32 0, metadata !6527, null}
!6543 = metadata !{i32 57, i32 0, metadata !6527, null}
!6544 = metadata !{i32 58, i32 0, metadata !6527, null}
!6545 = metadata !{i32 59, i32 0, metadata !6527, null}
!6546 = metadata !{i32 60, i32 0, metadata !6527, null}
!6547 = metadata !{i32 65, i32 0, metadata !6527, null}
!6548 = metadata !{i32 68, i32 0, metadata !6527, null}
!6549 = metadata !{i32 69, i32 0, metadata !6527, null}
!6550 = metadata !{i32 70, i32 0, metadata !6527, null}
!6551 = metadata !{i32 79, i32 0, metadata !6527, null}
!6552 = metadata !{i32 36, i32 0, metadata !6553, null}
!6553 = metadata !{i32 589835, metadata !1396, i32 23, i32 0, metadata !1397, i32 0} ; [ DW_TAG_lexical_block ]
!6554 = metadata !{i32 38, i32 0, metadata !6553, null}
!6555 = metadata !{i32 39, i32 0, metadata !6553, null}
!6556 = metadata !{i32 42, i32 0, metadata !6553, null}
!6557 = metadata !{i32 34, i32 0, metadata !6558, null}
!6558 = metadata !{i32 589835, metadata !1436, i32 29, i32 0, metadata !1437, i32 0} ; [ DW_TAG_lexical_block ]
!6559 = metadata !{i32 35, i32 0, metadata !6558, null}
!6560 = metadata !{i32 39, i32 0, metadata !6558, null}
!6561 = metadata !{i32 43, i32 0, metadata !6558, null}
!6562 = metadata !{i32 47, i32 0, metadata !6558, null}
!6563 = metadata !{i32 49, i32 0, metadata !6558, null}
!6564 = metadata !{i32 51, i32 0, metadata !6558, null}
!6565 = metadata !{i32 53, i32 0, metadata !6558, null}
!6566 = metadata !{i32 56, i32 0, metadata !6558, null}
!6567 = metadata !{i32 58, i32 0, metadata !6558, null}
!6568 = metadata !{i32 63, i32 0, metadata !6558, null}
!6569 = metadata !{i32 64, i32 0, metadata !6558, null}
!6570 = metadata !{i32 74, i32 0, metadata !6558, null}
!6571 = metadata !{i32 78, i32 0, metadata !6558, null}
!6572 = metadata !{i32 35, i32 0, metadata !6573, null}
!6573 = metadata !{i32 589835, metadata !1474, i32 30, i32 0, metadata !1475, i32 0} ; [ DW_TAG_lexical_block ]
!6574 = metadata !{i32 36, i32 0, metadata !6573, null}
!6575 = metadata !{i32 40, i32 0, metadata !6573, null}
!6576 = metadata !{i32 44, i32 0, metadata !6573, null}
!6577 = metadata !{i32 48, i32 0, metadata !6573, null}
!6578 = metadata !{i32 50, i32 0, metadata !6573, null}
!6579 = metadata !{i32 52, i32 0, metadata !6573, null}
!6580 = metadata !{i32 54, i32 0, metadata !6573, null}
!6581 = metadata !{i32 57, i32 0, metadata !6573, null}
!6582 = metadata !{i32 58, i32 0, metadata !6573, null}
!6583 = metadata !{i32 67, i32 0, metadata !6573, null}
!6584 = metadata !{i32 82, i32 0, metadata !6573, null}
!6585 = metadata !{i32 83, i32 0, metadata !6573, null}
!6586 = metadata !{i32 85, i32 0, metadata !6573, null}
!6587 = metadata !{i32 88, i32 0, metadata !6573, null}
!6588 = metadata !{i32 89, i32 0, metadata !6573, null}
!6589 = metadata !{i32 90, i32 0, metadata !6573, null}
!6590 = metadata !{i32 94, i32 0, metadata !6573, null}
!6591 = metadata !{i32 23, i32 0, metadata !6592, null}
!6592 = metadata !{i32 589835, metadata !1512, i32 18, i32 0, metadata !1513, i32 0} ; [ DW_TAG_lexical_block ]
!6593 = metadata !{i32 24, i32 0, metadata !6592, null}
!6594 = metadata !{i32 25, i32 0, metadata !6592, null}
!6595 = metadata !{i32 28, i32 0, metadata !6592, null}
!6596 = metadata !{i32 49, i32 0, metadata !6597, null}
!6597 = metadata !{i32 589835, metadata !1552, i32 44, i32 0, metadata !1553, i32 0} ; [ DW_TAG_lexical_block ]
!6598 = metadata !{i32 50, i32 0, metadata !6597, null}
!6599 = metadata !{i32 51, i32 0, metadata !6597, null}
!6600 = metadata !{i32 52, i32 0, metadata !6597, null}
!6601 = metadata !{i32 53, i32 0, metadata !6597, null}
!6602 = metadata !{i32 54, i32 0, metadata !6597, null}
!6603 = metadata !{i32 56, i32 0, metadata !6597, null}
!6604 = metadata !{i32 57, i32 0, metadata !6597, null}
!6605 = metadata !{i32 60, i32 0, metadata !6597, null}
!6606 = metadata !{i32 62, i32 0, metadata !6597, null}
!6607 = metadata !{i32 67, i32 0, metadata !6597, null}
!6608 = metadata !{i32 68, i32 0, metadata !6597, null}
!6609 = metadata !{i32 71, i32 0, metadata !6597, null}
!6610 = metadata !{i32 72, i32 0, metadata !6597, null}
!6611 = metadata !{i32 73, i32 0, metadata !6597, null}
!6612 = metadata !{i32 74, i32 0, metadata !6597, null}
!6613 = metadata !{i32 101, i32 0, metadata !6597, null}
!6614 = metadata !{i32 102, i32 0, metadata !6597, null}
!6615 = metadata !{i32 103, i32 0, metadata !6597, null}
!6616 = metadata !{i32 105, i32 0, metadata !6597, null}
!6617 = metadata !{i32 107, i32 0, metadata !6597, null}
!6618 = metadata !{i32 120, i32 0, metadata !6597, null}
!6619 = metadata !{i32 121, i32 0, metadata !6597, null}
!6620 = metadata !{i32 128, i32 0, metadata !6597, null}
!6621 = metadata !{i32 131, i32 0, metadata !6597, null}
!6622 = metadata !{i32 140, i32 0, metadata !6597, null}
!6623 = metadata !{i32 143, i32 0, metadata !6597, null}
!6624 = metadata !{i32 146, i32 0, metadata !6597, null}
!6625 = metadata !{i32 152, i32 0, metadata !6597, null}
!6626 = metadata !{i32 155, i32 0, metadata !6597, null}
!6627 = metadata !{i32 173, i32 0, metadata !6597, null}
!6628 = metadata !{i32 174, i32 0, metadata !6597, null}
!6629 = metadata !{i32 175, i32 0, metadata !6597, null}
!6630 = metadata !{i32 177, i32 0, metadata !6597, null}
!6631 = metadata !{i32 178, i32 0, metadata !6597, null}
!6632 = metadata !{i32 179, i32 0, metadata !6597, null}
!6633 = metadata !{i32 180, i32 0, metadata !6597, null}
!6634 = metadata !{i32 186, i32 0, metadata !6597, null}
!6635 = metadata !{i32 191, i32 0, metadata !6597, null}
!6636 = metadata !{i32 192, i32 0, metadata !6597, null}
!6637 = metadata !{i32 193, i32 0, metadata !6597, null}
!6638 = metadata !{i32 199, i32 0, metadata !6597, null}
!6639 = metadata !{i32 202, i32 0, metadata !6597, null}
!6640 = metadata !{i32 224, i32 0, metadata !6597, null}
!6641 = metadata !{i32 225, i32 0, metadata !6597, null}
!6642 = metadata !{i32 233, i32 0, metadata !6597, null}
!6643 = metadata !{i32 524, i32 0, metadata !6644, null}
!6644 = metadata !{i32 589835, metadata !1596, i32 512, i32 0, metadata !1599, i32 0} ; [ DW_TAG_lexical_block ]
!6645 = metadata !{i32 527, i32 0, metadata !6644, null}
!6646 = metadata !{i32 526, i32 0, metadata !6644, null}
!6647 = metadata !{i32 531, i32 0, metadata !6644, null}
!6648 = metadata !{i32 532, i32 0, metadata !6644, null}
!6649 = metadata !{i32 533, i32 0, metadata !6644, null}
!6650 = metadata !{i32 534, i32 0, metadata !6644, null}
!6651 = metadata !{i32 537, i32 0, metadata !6644, null}
!6652 = metadata !{i32 538, i32 0, metadata !6644, null}
!6653 = metadata !{i32 539, i32 0, metadata !6644, null}
!6654 = metadata !{i32 540, i32 0, metadata !6644, null}
!6655 = metadata !{i32 541, i32 0, metadata !6644, null}
!6656 = metadata !{i32 542, i32 0, metadata !6644, null}
!6657 = metadata !{i32 543, i32 0, metadata !6644, null}
!6658 = metadata !{i32 544, i32 0, metadata !6644, null}
!6659 = metadata !{i32 548, i32 0, metadata !6644, null}
!6660 = metadata !{i32 549, i32 0, metadata !6644, null}
!6661 = metadata !{i32 553, i32 0, metadata !6644, null}
!6662 = metadata !{i32 555, i32 0, metadata !6644, null}
!6663 = metadata !{i32 556, i32 0, metadata !6644, null}
!6664 = metadata !{i32 557, i32 0, metadata !6644, null}
!6665 = metadata !{i32 559, i32 0, metadata !6644, null}
!6666 = metadata !{i32 565, i32 0, metadata !6644, null}
!6667 = metadata !{i32 569, i32 0, metadata !6644, null}
!6668 = metadata !{i32 571, i32 0, metadata !6644, null}
!6669 = metadata !{i32 573, i32 0, metadata !6644, null}
!6670 = metadata !{i32 574, i32 0, metadata !6644, null}
!6671 = metadata !{i32 575, i32 0, metadata !6644, null}
!6672 = metadata !{i32 577, i32 0, metadata !6644, null}
!6673 = metadata !{i32 583, i32 0, metadata !6644, null}
!6674 = metadata !{i32 584, i32 0, metadata !6644, null}
!6675 = metadata !{i32 591, i32 0, metadata !6676, null}
!6676 = metadata !{i32 589835, metadata !6644, i32 591, i32 0, metadata !1599, i32 1} ; [ DW_TAG_lexical_block ]
!6677 = metadata !{i32 592, i32 0, metadata !6676, null}
!6678 = metadata !{i32 593, i32 0, metadata !6676, null}
!6679 = metadata !{i32 594, i32 0, metadata !6676, null}
!6680 = metadata !{i32 598, i32 0, metadata !6644, null}
!6681 = metadata !{i32 276, i32 0, metadata !6682, null}
!6682 = metadata !{i32 589835, metadata !1609, i32 275, i32 0, metadata !1612, i32 0} ; [ DW_TAG_lexical_block ]
!6683 = metadata !{i32 28, i32 0, metadata !6684, null}
!6684 = metadata !{i32 589835, metadata !1619, i32 18, i32 0, metadata !1622, i32 0} ; [ DW_TAG_lexical_block ]
!6685 = metadata !{i32 33, i32 0, metadata !6684, null}
!6686 = metadata !{i32 36, i32 0, metadata !6684, null}
!6687 = metadata !{i32 37, i32 0, metadata !6684, null}
!6688 = metadata !{i32 41, i32 0, metadata !6684, null}
!6689 = metadata !{i32 42, i32 0, metadata !6684, null}
!6690 = metadata !{i32 47, i32 0, metadata !6684, null}
!6691 = metadata !{i32 35, i32 0, metadata !6684, null}
!6692 = metadata !{i32 56, i32 0, metadata !6684, null}
!6693 = metadata !{i32 57, i32 0, metadata !6684, null}
!6694 = metadata !{i32 58, i32 0, metadata !6684, null}
!6695 = metadata !{i32 62, i32 0, metadata !6684, null}
!6696 = metadata !{i32 32, i32 0, metadata !6697, null}
!6697 = metadata !{i32 589835, metadata !1660, i32 25, i32 0, metadata !1663, i32 0} ; [ DW_TAG_lexical_block ]
!6698 = metadata !{i32 33, i32 0, metadata !6697, null}
!6699 = metadata !{i32 36, i32 0, metadata !6697, null}
!6700 = metadata !{i32 37, i32 0, metadata !6697, null}
!6701 = metadata !{i32 43, i32 0, metadata !6697, null}
!6702 = metadata !{i32 51, i32 0, metadata !6697, null}
!6703 = metadata !{i32 55, i32 0, metadata !6697, null}
!6704 = metadata !{i32 56, i32 0, metadata !6697, null}
!6705 = metadata !{i32 57, i32 0, metadata !6697, null}
!6706 = metadata !{i32 62, i32 0, metadata !6697, null}
!6707 = metadata !{i32 65, i32 0, metadata !6697, null}
!6708 = metadata !{i32 68, i32 0, metadata !6697, null}
!6709 = metadata !{i32 76, i32 0, metadata !6697, null}
!6710 = metadata !{i32 34, i32 0, metadata !6711, null}
!6711 = metadata !{i32 589835, metadata !1702, i32 32, i32 0, metadata !1703, i32 0} ; [ DW_TAG_lexical_block ]
!6712 = metadata !{i32 38, i32 0, metadata !6711, null}
!6713 = metadata !{i32 39, i32 0, metadata !6711, null}
!6714 = metadata !{i32 43, i32 0, metadata !6711, null}
!6715 = metadata !{i32 44, i32 0, metadata !6711, null}
!6716 = metadata !{i32 51, i32 0, metadata !6711, null}
!6717 = metadata !{i32 54, i32 0, metadata !6711, null}
!6718 = metadata !{i32 55, i32 0, metadata !6711, null}
!6719 = metadata !{i32 56, i32 0, metadata !6711, null}
!6720 = metadata !{i32 59, i32 0, metadata !6711, null}
!6721 = metadata !{i32 60, i32 0, metadata !6711, null}
!6722 = metadata !{i32 63, i32 0, metadata !6723, null}
!6723 = metadata !{i32 589835, metadata !6711, i32 63, i32 0, metadata !1703, i32 1} ; [ DW_TAG_lexical_block ]
!6724 = metadata !{i32 64, i32 0, metadata !6711, null}
!6725 = metadata !{i32 65, i32 0, metadata !6711, null}
!6726 = metadata !{i32 71, i32 0, metadata !6711, null}
!6727 = metadata !{i32 72, i32 0, metadata !6711, null}
!6728 = metadata !{i32 81, i32 0, metadata !6711, null}
!6729 = metadata !{i32 30, i32 0, metadata !6730, null}
!6730 = metadata !{i32 589835, metadata !1749, i32 27, i32 0, metadata !1750, i32 0} ; [ DW_TAG_lexical_block ]
!6731 = metadata !{i32 596, i32 0, metadata !6732, null}
!6732 = metadata !{i32 589835, metadata !1755, i32 593, i32 0, metadata !1758, i32 0} ; [ DW_TAG_lexical_block ]
!6733 = metadata !{i32 599, i32 0, metadata !6732, null}
!6734 = metadata !{i32 601, i32 0, metadata !6732, null}
!6735 = metadata !{i32 705, i32 0, metadata !6736, null}
!6736 = metadata !{i32 589835, metadata !1767, i32 698, i32 0, metadata !1770, i32 0} ; [ DW_TAG_lexical_block ]
!6737 = metadata !{i32 706, i32 0, metadata !6736, null}
!6738 = metadata !{i32 716, i32 0, metadata !6736, null}
!6739 = metadata !{i32 725, i32 0, metadata !6736, null}
!6740 = metadata !{i32 726, i32 0, metadata !6736, null}
!6741 = metadata !{i32 727, i32 0, metadata !6736, null}
!6742 = metadata !{i32 729, i32 0, metadata !6736, null}
!6743 = metadata !{i32 730, i32 0, metadata !6736, null}
!6744 = metadata !{i32 734, i32 0, metadata !6736, null}
!6745 = metadata !{i32 735, i32 0, metadata !6736, null}
!6746 = metadata !{i32 738, i32 0, metadata !6736, null}
!6747 = metadata !{i32 739, i32 0, metadata !6736, null}
!6748 = metadata !{i32 774, i32 0, metadata !6736, null}
!6749 = metadata !{i32 775, i32 0, metadata !6736, null}
!6750 = metadata !{i32 778, i32 0, metadata !6736, null}
!6751 = metadata !{i32 782, i32 0, metadata !6736, null}
!6752 = metadata !{i32 783, i32 0, metadata !6736, null}
!6753 = metadata !{i32 785, i32 0, metadata !6736, null}
!6754 = metadata !{i32 786, i32 0, metadata !6736, null}
!6755 = metadata !{i32 787, i32 0, metadata !6736, null}
!6756 = metadata !{i32 773, i32 0, metadata !6736, null}
!6757 = metadata !{i32 789, i32 0, metadata !6736, null}
!6758 = metadata !{i32 790, i32 0, metadata !6736, null}
!6759 = metadata !{i32 792, i32 0, metadata !6736, null}
!6760 = metadata !{i32 376, i32 0, metadata !6761, null}
!6761 = metadata !{i32 589835, metadata !1790, i32 373, i32 0, metadata !1793, i32 0} ; [ DW_TAG_lexical_block ]
!6762 = metadata !{i32 20, i32 0, metadata !6763, null}
!6763 = metadata !{i32 589835, metadata !1813, i32 19, i32 0, metadata !1814, i32 0} ; [ DW_TAG_lexical_block ]
!6764 = metadata !{i32 21, i32 0, metadata !6763, null}
!6765 = metadata !{i32 29, i32 0, metadata !6763, null}
!6766 = metadata !{i32 30, i32 0, metadata !6763, null}
!6767 = metadata !{i32 28, i32 0, metadata !6763, null}
!6768 = metadata !{i32 34, i32 0, metadata !6763, null}
!6769 = metadata !{i32 37, i32 0, metadata !6770, null}
!6770 = metadata !{i32 589835, metadata !1822, i32 18, i32 0, metadata !1823, i32 0} ; [ DW_TAG_lexical_block ]
!6771 = metadata !{i32 38, i32 0, metadata !6770, null}
!6772 = metadata !{i32 40, i32 0, metadata !6770, null}
!6773 = metadata !{i32 42, i32 0, metadata !6770, null}
!6774 = metadata !{i32 43, i32 0, metadata !6770, null}
!6775 = metadata !{i32 41, i32 0, metadata !6770, null}
!6776 = metadata !{i32 47, i32 0, metadata !6770, null}
!6777 = metadata !{i32 48, i32 0, metadata !6770, null}
!6778 = metadata !{i32 46, i32 0, metadata !6770, null}
!6779 = metadata !{i32 52, i32 0, metadata !6770, null}
!6780 = metadata !{i32 19, i32 0, metadata !6781, null}
!6781 = metadata !{i32 589835, metadata !1831, i32 18, i32 0, metadata !1832, i32 0} ; [ DW_TAG_lexical_block ]
!6782 = metadata !{i32 28, i32 0, metadata !6781, null}
!6783 = metadata !{i32 29, i32 0, metadata !6781, null}
!6784 = metadata !{i32 27, i32 0, metadata !6781, null}
!6785 = metadata !{i32 32, i32 0, metadata !6781, null}
!6786 = metadata !{i32 17, i32 0, metadata !6787, null}
!6787 = metadata !{i32 589835, metadata !1841, i32 16, i32 0, metadata !1842, i32 0} ; [ DW_TAG_lexical_block ]
!6788 = metadata !{i32 47, i32 0, metadata !6789, null}
!6789 = metadata !{i32 589835, metadata !1847, i32 43, i32 0, metadata !1848, i32 0} ; [ DW_TAG_lexical_block ]
!6790 = metadata !{i32 48, i32 0, metadata !6789, null}
!6791 = metadata !{i32 49, i32 0, metadata !6789, null}
!6792 = metadata !{i32 50, i32 0, metadata !6789, null}
!6793 = metadata !{i32 52, i32 0, metadata !6789, null}
!6794 = metadata !{i32 58, i32 0, metadata !6789, null}
!6795 = metadata !{i32 62, i32 0, metadata !6789, null}
!6796 = metadata !{i32 63, i32 0, metadata !6789, null}
!6797 = metadata !{i32 64, i32 0, metadata !6789, null}
!6798 = metadata !{i32 65, i32 0, metadata !6789, null}
!6799 = metadata !{i32 67, i32 0, metadata !6789, null}
!6800 = metadata !{i32 71, i32 0, metadata !6789, null}
!6801 = metadata !{i32 20, i32 0, metadata !6802, null}
!6802 = metadata !{i32 589835, metadata !1945, i32 19, i32 0, metadata !1946, i32 0} ; [ DW_TAG_lexical_block ]
!6803 = metadata !{i32 27, i32 0, metadata !6802, null}
!6804 = metadata !{i32 30, i32 0, metadata !6802, null}
!6805 = metadata !{i32 19, i32 0, metadata !6806, null}
!6806 = metadata !{i32 589835, metadata !1954, i32 16, i32 0, metadata !1955, i32 0} ; [ DW_TAG_lexical_block ]
!6807 = metadata !{i32 21, i32 0, metadata !6806, null}
!6808 = metadata !{i32 18, i32 0, metadata !6809, null}
!6809 = metadata !{i32 589835, metadata !1962, i32 17, i32 0, metadata !1963, i32 0} ; [ DW_TAG_lexical_block ]
!6810 = metadata !{i32 22, i32 0, metadata !6809, null}
!6811 = metadata !{i32 23, i32 0, metadata !6809, null}
!6812 = metadata !{i32 24, i32 0, metadata !6809, null}
!6813 = metadata !{i32 33, i32 0, metadata !6809, null}
!6814 = metadata !{i32 34, i32 0, metadata !6809, null}
!6815 = metadata !{i32 32, i32 0, metadata !6816, null}
!6816 = metadata !{i32 589835, metadata !1972, i32 27, i32 0, metadata !1973, i32 0} ; [ DW_TAG_lexical_block ]
!6817 = metadata !{i32 33, i32 0, metadata !6816, null}
!6818 = metadata !{i32 34, i32 0, metadata !6816, null}
!6819 = metadata !{i32 35, i32 0, metadata !6816, null}
!6820 = metadata !{i32 38, i32 0, metadata !6816, null}
!6821 = metadata !{i32 40, i32 0, metadata !6816, null}
!6822 = metadata !{i32 42, i32 0, metadata !6816, null}
!6823 = metadata !{i32 67, i32 0, metadata !6824, null}
!6824 = metadata !{i32 589835, metadata !1982, i32 36, i32 0, metadata !1983, i32 0} ; [ DW_TAG_lexical_block ]
!6825 = metadata !{i32 68, i32 0, metadata !6824, null}
!6826 = metadata !{i32 69, i32 0, metadata !6824, null}
!6827 = metadata !{i32 71, i32 0, metadata !6824, null}
!6828 = metadata !{i32 73, i32 0, metadata !6824, null}
!6829 = metadata !{i32 74, i32 0, metadata !6824, null}
!6830 = metadata !{i32 75, i32 0, metadata !6824, null}
!6831 = metadata !{i32 76, i32 0, metadata !6824, null}
!6832 = metadata !{i32 77, i32 0, metadata !6824, null}
!6833 = metadata !{i32 84, i32 0, metadata !6824, null}
!6834 = metadata !{i32 1226, i32 0, metadata !6835, null}
!6835 = metadata !{i32 589835, metadata !2003, i32 1225, i32 0, metadata !2006, i32 0} ; [ DW_TAG_lexical_block ]
!6836 = metadata !{i32 1228, i32 0, metadata !6835, null}
!6837 = metadata !{i32 1229, i32 0, metadata !6838, null}
!6838 = metadata !{i32 589835, metadata !6835, i32 1229, i32 0, metadata !2006, i32 1} ; [ DW_TAG_lexical_block ]
!6839 = metadata !{i32 1230, i32 0, metadata !6838, null}
!6840 = metadata !{i32 1231, i32 0, metadata !6838, null}
!6841 = metadata !{i32 1232, i32 0, metadata !6838, null}
!6842 = metadata !{i32 1235, i32 0, metadata !6838, null}
!6843 = metadata !{i32 1237, i32 0, metadata !6835, null}
!6844 = metadata !{i32 1424, i32 0, metadata !6845, null}
!6845 = metadata !{i32 589835, metadata !2047, i32 1423, i32 0, metadata !2006, i32 2} ; [ DW_TAG_lexical_block ]
!6846 = metadata !{i32 1429, i32 0, metadata !6845, null}
!6847 = metadata !{i32 1431, i32 0, metadata !6845, null}
!6848 = metadata !{i32 1430, i32 0, metadata !6845, null}
!6849 = metadata !{i32 1434, i32 0, metadata !6845, null}
!6850 = metadata !{i32 1464, i32 0, metadata !6851, null}
!6851 = metadata !{i32 589835, metadata !2050, i32 1440, i32 0, metadata !2006, i32 3} ; [ DW_TAG_lexical_block ]
!6852 = metadata !{i32 1477, i32 0, metadata !6851, null}
!6853 = metadata !{i32 1478, i32 0, metadata !6851, null}
!6854 = metadata !{i32 1479, i32 0, metadata !6851, null}
!6855 = metadata !{i32 1490, i32 0, metadata !6851, null}
!6856 = metadata !{i32 1496, i32 0, metadata !6851, null}
!6857 = metadata !{i32 1498, i32 0, metadata !6851, null}
!6858 = metadata !{i32 1510, i32 0, metadata !6859, null}
!6859 = metadata !{i32 589835, metadata !6851, i32 1510, i32 0, metadata !2006, i32 4} ; [ DW_TAG_lexical_block ]
!6860 = metadata !{i32 1513, i32 0, metadata !6859, null}
!6861 = metadata !{i32 1514, i32 0, metadata !6859, null}
!6862 = metadata !{i32 1517, i32 0, metadata !6859, null}
!6863 = metadata !{i32 1518, i32 0, metadata !6859, null}
!6864 = metadata !{i32 1523, i32 0, metadata !6865, null}
!6865 = metadata !{i32 589835, metadata !6851, i32 1523, i32 0, metadata !2006, i32 5} ; [ DW_TAG_lexical_block ]
!6866 = metadata !{i32 1525, i32 0, metadata !6865, null}
!6867 = metadata !{i32 1526, i32 0, metadata !6865, null}
!6868 = metadata !{i32 1529, i32 0, metadata !6865, null}
!6869 = metadata !{i32 1531, i32 0, metadata !6865, null}
!6870 = metadata !{i32 1532, i32 0, metadata !6865, null}
!6871 = metadata !{i32 1539, i32 0, metadata !6865, null}
!6872 = metadata !{i32 1540, i32 0, metadata !6865, null}
!6873 = metadata !{i32 1541, i32 0, metadata !6865, null}
!6874 = metadata !{i32 1543, i32 0, metadata !6865, null}
!6875 = metadata !{i32 1544, i32 0, metadata !6865, null}
!6876 = metadata !{i32 1548, i32 0, metadata !6865, null}
!6877 = metadata !{i32 1549, i32 0, metadata !6865, null}
!6878 = metadata !{i32 1550, i32 0, metadata !6865, null}
!6879 = metadata !{i32 1552, i32 0, metadata !6865, null}
!6880 = metadata !{i32 1553, i32 0, metadata !6865, null}
!6881 = metadata !{i32 1557, i32 0, metadata !6865, null}
!6882 = metadata !{i32 1559, i32 0, metadata !6865, null}
!6883 = metadata !{i32 1560, i32 0, metadata !6865, null}
!6884 = metadata !{i32 1567, i32 0, metadata !6865, null}
!6885 = metadata !{i32 1571, i32 0, metadata !6865, null}
!6886 = metadata !{i32 1572, i32 0, metadata !6865, null}
!6887 = metadata !{i32 1573, i32 0, metadata !6865, null}
!6888 = metadata !{i32 1574, i32 0, metadata !6865, null}
!6889 = metadata !{i32 1575, i32 0, metadata !6865, null}
!6890 = metadata !{i32 1576, i32 0, metadata !6865, null}
!6891 = metadata !{i32 1577, i32 0, metadata !6865, null}
!6892 = metadata !{i32 1578, i32 0, metadata !6865, null}
!6893 = metadata !{i32 1579, i32 0, metadata !6865, null}
!6894 = metadata !{i32 1582, i32 0, metadata !6865, null}
!6895 = metadata !{i32 1590, i32 0, metadata !6865, null}
!6896 = metadata !{i32 1591, i32 0, metadata !6865, null}
!6897 = metadata !{i32 1592, i32 0, metadata !6865, null}
!6898 = metadata !{i32 1593, i32 0, metadata !6865, null}
!6899 = metadata !{i32 1595, i32 0, metadata !6865, null}
!6900 = metadata !{i32 1596, i32 0, metadata !6865, null}
!6901 = metadata !{i32 1598, i32 0, metadata !6865, null}
!6902 = metadata !{i32 1599, i32 0, metadata !6865, null}
!6903 = metadata !{i32 1602, i32 0, metadata !6865, null}
!6904 = metadata !{i32 1603, i32 0, metadata !6865, null}
!6905 = metadata !{i32 1604, i32 0, metadata !6865, null}
!6906 = metadata !{i32 1606, i32 0, metadata !6865, null}
!6907 = metadata !{i32 1607, i32 0, metadata !6865, null}
!6908 = metadata !{i32 1611, i32 0, metadata !6865, null}
!6909 = metadata !{i32 1612, i32 0, metadata !6865, null}
!6910 = metadata !{i32 1613, i32 0, metadata !6865, null}
!6911 = metadata !{i32 1617, i32 0, metadata !6865, null}
!6912 = metadata !{i32 1620, i32 0, metadata !6865, null}
!6913 = metadata !{i32 1621, i32 0, metadata !6865, null}
!6914 = metadata !{i32 1624, i32 0, metadata !6915, null}
!6915 = metadata !{i32 589835, metadata !6865, i32 1624, i32 0, metadata !2006, i32 6} ; [ DW_TAG_lexical_block ]
!6916 = metadata !{i32 1630, i32 0, metadata !6915, null}
!6917 = metadata !{i32 1631, i32 0, metadata !6915, null}
!6918 = metadata !{i32 1633, i32 0, metadata !6915, null}
!6919 = metadata !{i32 1635, i32 0, metadata !6915, null}
!6920 = metadata !{i32 1639, i32 0, metadata !6865, null}
!6921 = metadata !{i32 1643, i32 0, metadata !6865, null}
!6922 = metadata !{i32 1644, i32 0, metadata !6865, null}
!6923 = metadata !{i32 1645, i32 0, metadata !6865, null}
!6924 = metadata !{i32 1653, i32 0, metadata !6865, null}
!6925 = metadata !{i32 1659, i32 0, metadata !6865, null}
!6926 = metadata !{i32 1662, i32 0, metadata !6865, null}
!6927 = metadata !{i32 1663, i32 0, metadata !6865, null}
!6928 = metadata !{i32 1664, i32 0, metadata !6865, null}
!6929 = metadata !{i32 1665, i32 0, metadata !6865, null}
!6930 = metadata !{i32 1667, i32 0, metadata !6865, null}
!6931 = metadata !{i32 1672, i32 0, metadata !6865, null}
!6932 = metadata !{i32 1673, i32 0, metadata !6865, null}
!6933 = metadata !{i32 1674, i32 0, metadata !6865, null}
!6934 = metadata !{i32 1675, i32 0, metadata !6865, null}
!6935 = metadata !{i32 1679, i32 0, metadata !6865, null}
!6936 = metadata !{i32 1685, i32 0, metadata !6865, null}
!6937 = metadata !{i32 1686, i32 0, metadata !6865, null}
!6938 = metadata !{i32 1689, i32 0, metadata !6865, null}
!6939 = metadata !{i32 1690, i32 0, metadata !6865, null}
!6940 = metadata !{i32 1691, i32 0, metadata !6865, null}
!6941 = metadata !{i32 1692, i32 0, metadata !6865, null}
!6942 = metadata !{i32 1777, i32 0, metadata !6865, null}
!6943 = metadata !{i32 1788, i32 0, metadata !6944, null}
!6944 = metadata !{i32 589835, metadata !6865, i32 1788, i32 0, metadata !2006, i32 7} ; [ DW_TAG_lexical_block ]
!6945 = metadata !{i32 1789, i32 0, metadata !6944, null}
!6946 = metadata !{i32 1790, i32 0, metadata !6944, null}
!6947 = metadata !{i32 1792, i32 0, metadata !6944, null}
!6948 = metadata !{i32 1793, i32 0, metadata !6944, null}
!6949 = metadata !{i32 1795, i32 0, metadata !6865, null}
!6950 = metadata !{i32 1796, i32 0, metadata !6865, null}
!6951 = metadata !{i32 1797, i32 0, metadata !6865, null}
!6952 = metadata !{i32 1801, i32 0, metadata !6865, null}
!6953 = metadata !{i32 1802, i32 0, metadata !6865, null}
!6954 = metadata !{i32 1803, i32 0, metadata !6865, null}
!6955 = metadata !{i32 1805, i32 0, metadata !6865, null}
!6956 = metadata !{i32 1807, i32 0, metadata !6865, null}
!6957 = metadata !{i32 1808, i32 0, metadata !6865, null}
!6958 = metadata !{i32 1809, i32 0, metadata !6865, null}
!6959 = metadata !{i32 1815, i32 0, metadata !6865, null}
!6960 = metadata !{i32 1817, i32 0, metadata !6865, null}
!6961 = metadata !{i32 1818, i32 0, metadata !6865, null}
!6962 = metadata !{i32 1822, i32 0, metadata !6963, null}
!6963 = metadata !{i32 589835, metadata !6865, i32 1822, i32 0, metadata !2006, i32 8} ; [ DW_TAG_lexical_block ]
!6964 = metadata !{i32 1824, i32 0, metadata !6963, null}
!6965 = metadata !{i32 1825, i32 0, metadata !6963, null}
!6966 = metadata !{i32 1827, i32 0, metadata !6963, null}
!6967 = metadata !{i32 1828, i32 0, metadata !6963, null}
!6968 = metadata !{i32 1830, i32 0, metadata !6963, null}
!6969 = metadata !{i32 1823, i32 0, metadata !6963, null}
!6970 = metadata !{i32 1853, i32 0, metadata !6865, null}
!6971 = metadata !{i32 1854, i32 0, metadata !6865, null}
!6972 = metadata !{i32 1858, i32 0, metadata !6851, null}
!6973 = metadata !{i32 1875, i32 0, metadata !6974, null}
!6974 = metadata !{i32 589835, metadata !2110, i32 1867, i32 0, metadata !2006, i32 9} ; [ DW_TAG_lexical_block ]
!6975 = metadata !{i32 1876, i32 0, metadata !6974, null}
!6976 = metadata !{i32 1880, i32 0, metadata !6974, null}
!6977 = metadata !{i32 1887, i32 0, metadata !6974, null}
!6978 = metadata !{i32 1888, i32 0, metadata !6974, null}
!6979 = metadata !{i32 1889, i32 0, metadata !6974, null}
!6980 = metadata !{i32 1894, i32 0, metadata !6974, null}
!6981 = metadata !{i32 1896, i32 0, metadata !6974, null}
!6982 = metadata !{i32 1900, i32 0, metadata !6974, null}
!6983 = metadata !{i32 1899, i32 0, metadata !6974, null}
!6984 = metadata !{i32 1903, i32 0, metadata !6974, null}
!6985 = metadata !{i32 1904, i32 0, metadata !6974, null}
!6986 = metadata !{i32 1905, i32 0, metadata !6974, null}
!6987 = metadata !{i32 1908, i32 0, metadata !6974, null}
!6988 = metadata !{i32 1911, i32 0, metadata !6974, null}
!6989 = metadata !{i32 1915, i32 0, metadata !6974, null}
!6990 = metadata !{i32 1917, i32 0, metadata !6974, null}
!6991 = metadata !{i32 1919, i32 0, metadata !6974, null}
!6992 = metadata !{i32 1920, i32 0, metadata !6974, null}
!6993 = metadata !{i32 1923, i32 0, metadata !6974, null}
!6994 = metadata !{i32 1925, i32 0, metadata !6974, null}
!6995 = metadata !{i32 1926, i32 0, metadata !6974, null}
!6996 = metadata !{i32 1930, i32 0, metadata !6974, null}
!6997 = metadata !{i32 1939, i32 0, metadata !6974, null}
!6998 = metadata !{i32 36, i32 0, metadata !6999, null}
!6999 = metadata !{i32 589835, metadata !2114, i32 23, i32 0, metadata !2115, i32 0} ; [ DW_TAG_lexical_block ]
!7000 = metadata !{i32 37, i32 0, metadata !6999, null}
!7001 = metadata !{i32 40, i32 0, metadata !6999, null}
!7002 = metadata !{i32 43, i32 0, metadata !6999, null}
!7003 = metadata !{i32 50, i32 0, metadata !6999, null}
!7004 = metadata !{i32 52, i32 0, metadata !6999, null}
!7005 = metadata !{i32 53, i32 0, metadata !6999, null}
!7006 = metadata !{i32 58, i32 0, metadata !6999, null}
!7007 = metadata !{i32 59, i32 0, metadata !6999, null}
!7008 = metadata !{i32 60, i32 0, metadata !6999, null}
!7009 = metadata !{i32 61, i32 0, metadata !6999, null}
!7010 = metadata !{i32 62, i32 0, metadata !6999, null}
!7011 = metadata !{i32 64, i32 0, metadata !6999, null}
!7012 = metadata !{i32 65, i32 0, metadata !6999, null}
!7013 = metadata !{i32 66, i32 0, metadata !6999, null}
!7014 = metadata !{i32 67, i32 0, metadata !6999, null}
!7015 = metadata !{i32 69, i32 0, metadata !6999, null}
!7016 = metadata !{i32 71, i32 0, metadata !6999, null}
!7017 = metadata !{i32 259, i32 0, metadata !7018, null}
!7018 = metadata !{i32 589835, metadata !2137, i32 247, i32 0, metadata !2140, i32 0} ; [ DW_TAG_lexical_block ]
!7019 = metadata !{i32 260, i32 0, metadata !7018, null}
!7020 = metadata !{i32 263, i32 0, metadata !7018, null}
!7021 = metadata !{i32 266, i32 0, metadata !7018, null}
!7022 = metadata !{i32 273, i32 0, metadata !7018, null}
!7023 = metadata !{i32 277, i32 0, metadata !7018, null}
!7024 = metadata !{i32 279, i32 0, metadata !7018, null}
!7025 = metadata !{i32 281, i32 0, metadata !7018, null}
!7026 = metadata !{i32 282, i32 0, metadata !7018, null}
!7027 = metadata !{i32 284, i32 0, metadata !7018, null}
!7028 = metadata !{i32 395, i32 0, metadata !7029, null}
!7029 = metadata !{i32 589835, metadata !2157, i32 394, i32 0, metadata !2160, i32 0} ; [ DW_TAG_lexical_block ]
!7030 = metadata !{i32 34, i32 0, metadata !7031, null}
!7031 = metadata !{i32 589835, metadata !2179, i32 33, i32 0, metadata !2180, i32 0} ; [ DW_TAG_lexical_block ]
!7032 = metadata !{i32 35, i32 0, metadata !7031, null}
!7033 = metadata !{i32 39, i32 0, metadata !7031, null}
!7034 = metadata !{i32 40, i32 0, metadata !7031, null}
!7035 = metadata !{i32 45, i32 0, metadata !7031, null}
!7036 = metadata !{i32 46, i32 0, metadata !7031, null}
!7037 = metadata !{i32 51, i32 0, metadata !7031, null}
!7038 = metadata !{i32 52, i32 0, metadata !7031, null}
!7039 = metadata !{i32 57, i32 0, metadata !7031, null}
!7040 = metadata !{i32 36, i32 0, metadata !7031, null}
!7041 = metadata !{i32 174, i32 0, metadata !7042, null}
!7042 = metadata !{i32 589835, metadata !2189, i32 166, i32 0, metadata !2190, i32 0} ; [ DW_TAG_lexical_block ]
!7043 = metadata !{i32 194, i32 0, metadata !7042, null}
!7044 = metadata !{i32 197, i32 0, metadata !7042, null}
!7045 = metadata !{i32 202, i32 0, metadata !7042, null}
!7046 = metadata !{i32 203, i32 0, metadata !7042, null}
!7047 = metadata !{i32 204, i32 0, metadata !7042, null}
!7048 = metadata !{i32 207, i32 0, metadata !7042, null}
!7049 = metadata !{i32 208, i32 0, metadata !7042, null}
!7050 = metadata !{i32 215, i32 0, metadata !7042, null}
!7051 = metadata !{i32 216, i32 0, metadata !7042, null}
!7052 = metadata !{i32 218, i32 0, metadata !7042, null}
!7053 = metadata !{i32 219, i32 0, metadata !7042, null}
!7054 = metadata !{i32 220, i32 0, metadata !7042, null}
!7055 = metadata !{i32 222, i32 0, metadata !7042, null}
!7056 = metadata !{i32 223, i32 0, metadata !7042, null}
!7057 = metadata !{i32 224, i32 0, metadata !7042, null}
!7058 = metadata !{i32 225, i32 0, metadata !7042, null}
!7059 = metadata !{i32 228, i32 0, metadata !7042, null}
!7060 = metadata !{i32 229, i32 0, metadata !7042, null}
!7061 = metadata !{i32 230, i32 0, metadata !7042, null}
!7062 = metadata !{i32 233, i32 0, metadata !7042, null}
!7063 = metadata !{i32 234, i32 0, metadata !7042, null}
!7064 = metadata !{i32 237, i32 0, metadata !7042, null}
!7065 = metadata !{i32 25, i32 0, metadata !7066, null}
!7066 = metadata !{i32 589835, metadata !2200, i32 21, i32 0, metadata !2201, i32 0} ; [ DW_TAG_lexical_block ]
!7067 = metadata !{i32 26, i32 0, metadata !7066, null}
!7068 = metadata !{i32 30, i32 0, metadata !7066, null}
!7069 = metadata !{i32 34, i32 0, metadata !7066, null}
!7070 = metadata !{i32 35, i32 0, metadata !7066, null}
!7071 = metadata !{i32 37, i32 0, metadata !7066, null}
!7072 = metadata !{i32 38, i32 0, metadata !7066, null}
!7073 = metadata !{i32 39, i32 0, metadata !7066, null}
!7074 = metadata !{i32 45, i32 0, metadata !7066, null}
!7075 = metadata !{i32 50, i32 0, metadata !7066, null}
!7076 = metadata !{i32 59, i32 0, metadata !7066, null}
!7077 = metadata !{i32 60, i32 0, metadata !7066, null}
!7078 = metadata !{i32 63, i32 0, metadata !7066, null}
!7079 = metadata !{i32 64, i32 0, metadata !7066, null}
!7080 = metadata !{i32 67, i32 0, metadata !7066, null}
!7081 = metadata !{i32 246, i32 0, metadata !7082, null}
!7082 = metadata !{i32 589835, metadata !2241, i32 239, i32 0, metadata !2244, i32 0} ; [ DW_TAG_lexical_block ]
!7083 = metadata !{i32 247, i32 0, metadata !7082, null}
!7084 = metadata !{i32 249, i32 0, metadata !7082, null}
!7085 = metadata !{i32 250, i32 0, metadata !7082, null}
!7086 = metadata !{i32 253, i32 0, metadata !7082, null}
!7087 = metadata !{i32 254, i32 0, metadata !7082, null}
!7088 = metadata !{i32 264, i32 0, metadata !7082, null}
!7089 = metadata !{i32 265, i32 0, metadata !7082, null}
!7090 = metadata !{i32 266, i32 0, metadata !7082, null}
!7091 = metadata !{i32 268, i32 0, metadata !7082, null}
!7092 = metadata !{i32 270, i32 0, metadata !7082, null}
!7093 = metadata !{i32 283, i32 0, metadata !7094, null}
!7094 = metadata !{i32 589835, metadata !2276, i32 279, i32 0, metadata !2244, i32 1} ; [ DW_TAG_lexical_block ]
!7095 = metadata !{i32 284, i32 0, metadata !7094, null}
!7096 = metadata !{i32 285, i32 0, metadata !7094, null}
!7097 = metadata !{i32 287, i32 0, metadata !7094, null}
!7098 = metadata !{i32 288, i32 0, metadata !7094, null}
!7099 = metadata !{i32 292, i32 0, metadata !7094, null}
!7100 = metadata !{i32 294, i32 0, metadata !7094, null}
!7101 = metadata !{i32 301, i32 0, metadata !7094, null}
!7102 = metadata !{i32 302, i32 0, metadata !7094, null}
!7103 = metadata !{i32 304, i32 0, metadata !7094, null}
!7104 = metadata !{i32 66, i32 0, metadata !7105, null}
!7105 = metadata !{i32 589835, metadata !2279, i32 62, i32 0, metadata !2280, i32 0} ; [ DW_TAG_lexical_block ]
!7106 = metadata !{i32 71, i32 0, metadata !7105, null}
!7107 = metadata !{i32 246, i32 0, metadata !7108, null}
!7108 = metadata !{i32 589835, metadata !2320, i32 207, i32 0, metadata !2321, i32 0} ; [ DW_TAG_lexical_block ]
!7109 = metadata !{i32 247, i32 0, metadata !7108, null}
!7110 = metadata !{i32 248, i32 0, metadata !7108, null}
!7111 = metadata !{i32 250, i32 0, metadata !7108, null}
!7112 = metadata !{i32 251, i32 0, metadata !7108, null}
!7113 = metadata !{i32 259, i32 0, metadata !7108, null}
!7114 = metadata !{i32 263, i32 0, metadata !7108, null}
!7115 = metadata !{i32 264, i32 0, metadata !7108, null}
!7116 = metadata !{i32 267, i32 0, metadata !7108, null}
!7117 = metadata !{i32 268, i32 0, metadata !7108, null}
!7118 = metadata !{i32 269, i32 0, metadata !7108, null}
!7119 = metadata !{i32 270, i32 0, metadata !7108, null}
!7120 = metadata !{i32 271, i32 0, metadata !7108, null}
!7121 = metadata !{i32 274, i32 0, metadata !7108, null}
!7122 = metadata !{i32 275, i32 0, metadata !7108, null}
!7123 = metadata !{i32 276, i32 0, metadata !7108, null}
!7124 = metadata !{i32 277, i32 0, metadata !7108, null}
!7125 = metadata !{i32 281, i32 0, metadata !7108, null}
!7126 = metadata !{i32 283, i32 0, metadata !7108, null}
!7127 = metadata !{i32 284, i32 0, metadata !7108, null}
!7128 = metadata !{i32 287, i32 0, metadata !7108, null}
!7129 = metadata !{i32 291, i32 0, metadata !7108, null}
!7130 = metadata !{i32 292, i32 0, metadata !7108, null}
!7131 = metadata !{i32 293, i32 0, metadata !7108, null}
!7132 = metadata !{i32 296, i32 0, metadata !7108, null}
!7133 = metadata !{i32 298, i32 0, metadata !7108, null}
!7134 = metadata !{i32 299, i32 0, metadata !7108, null}
!7135 = metadata !{i32 300, i32 0, metadata !7108, null}
!7136 = metadata !{i32 301, i32 0, metadata !7108, null}
!7137 = metadata !{i32 302, i32 0, metadata !7108, null}
!7138 = metadata !{i32 303, i32 0, metadata !7108, null}
!7139 = metadata !{i32 305, i32 0, metadata !7108, null}
!7140 = metadata !{i32 352, i32 0, metadata !7141, null}
!7141 = metadata !{i32 589835, metadata !7108, i32 352, i32 0, metadata !2321, i32 1} ; [ DW_TAG_lexical_block ]
!7142 = metadata !{i32 353, i32 0, metadata !7141, null}
!7143 = metadata !{i32 354, i32 0, metadata !7141, null}
!7144 = metadata !{i32 359, i32 0, metadata !7145, null}
!7145 = metadata !{i32 589835, metadata !7141, i32 359, i32 0, metadata !2321, i32 2} ; [ DW_TAG_lexical_block ]
!7146 = metadata !{i32 360, i32 0, metadata !7145, null}
!7147 = metadata !{i32 361, i32 0, metadata !7145, null}
!7148 = metadata !{i32 365, i32 0, metadata !7145, null}
!7149 = metadata !{i32 366, i32 0, metadata !7145, null}
!7150 = metadata !{i32 367, i32 0, metadata !7145, null}
!7151 = metadata !{i32 368, i32 0, metadata !7145, null}
!7152 = metadata !{i32 369, i32 0, metadata !7145, null}
!7153 = metadata !{i32 372, i32 0, metadata !7145, null}
!7154 = metadata !{i32 373, i32 0, metadata !7145, null}
!7155 = metadata !{i32 374, i32 0, metadata !7145, null}
!7156 = metadata !{i32 377, i32 0, metadata !7145, null}
!7157 = metadata !{i32 378, i32 0, metadata !7145, null}
!7158 = metadata !{i32 381, i32 0, metadata !7108, null}
!7159 = metadata !{i32 382, i32 0, metadata !7108, null}
!7160 = metadata !{i32 383, i32 0, metadata !7108, null}
!7161 = metadata !{i32 387, i32 0, metadata !7108, null}
!7162 = metadata !{i32 390, i32 0, metadata !7163, null}
!7163 = metadata !{i32 589835, metadata !7108, i32 390, i32 0, metadata !2321, i32 3} ; [ DW_TAG_lexical_block ]
!7164 = metadata !{i32 391, i32 0, metadata !7163, null}
!7165 = metadata !{i32 393, i32 0, metadata !7166, null}
!7166 = metadata !{i32 589835, metadata !7163, i32 393, i32 0, metadata !2321, i32 4} ; [ DW_TAG_lexical_block ]
!7167 = metadata !{i32 398, i32 0, metadata !7166, null}
!7168 = metadata !{i32 399, i32 0, metadata !7166, null}
!7169 = metadata !{i32 400, i32 0, metadata !7166, null}
!7170 = metadata !{i32 402, i32 0, metadata !7166, null}
!7171 = metadata !{i32 403, i32 0, metadata !7166, null}
!7172 = metadata !{i32 404, i32 0, metadata !7166, null}
!7173 = metadata !{i32 405, i32 0, metadata !7163, null}
!7174 = metadata !{i32 410, i32 0, metadata !7108, null}
!7175 = metadata !{i32 411, i32 0, metadata !7108, null}
!7176 = metadata !{i32 412, i32 0, metadata !7108, null}
!7177 = metadata !{i32 415, i32 0, metadata !7108, null}
!7178 = metadata !{i32 416, i32 0, metadata !7108, null}
!7179 = metadata !{i32 417, i32 0, metadata !7108, null}
!7180 = metadata !{i32 419, i32 0, metadata !7108, null}
!7181 = metadata !{i32 421, i32 0, metadata !7108, null}
!7182 = metadata !{i32 422, i32 0, metadata !7108, null}
!7183 = metadata !{i32 423, i32 0, metadata !7108, null}
!7184 = metadata !{i32 424, i32 0, metadata !7108, null}
!7185 = metadata !{i32 425, i32 0, metadata !7108, null}
!7186 = metadata !{i32 426, i32 0, metadata !7108, null}
!7187 = metadata !{i32 430, i32 0, metadata !7108, null}
!7188 = metadata !{i32 431, i32 0, metadata !7108, null}
!7189 = metadata !{i32 432, i32 0, metadata !7108, null}
!7190 = metadata !{i32 436, i32 0, metadata !7191, null}
!7191 = metadata !{i32 589835, metadata !7108, i32 436, i32 0, metadata !2321, i32 5} ; [ DW_TAG_lexical_block ]
!7192 = metadata !{i32 437, i32 0, metadata !7191, null}
!7193 = metadata !{i32 438, i32 0, metadata !7191, null}
!7194 = metadata !{i32 439, i32 0, metadata !7191, null}
!7195 = metadata !{i32 440, i32 0, metadata !7191, null}
!7196 = metadata !{i32 441, i32 0, metadata !7191, null}
!7197 = metadata !{i32 446, i32 0, metadata !7191, null}
!7198 = metadata !{i32 447, i32 0, metadata !7191, null}
!7199 = metadata !{i32 466, i32 0, metadata !7108, null}
!7200 = metadata !{i32 467, i32 0, metadata !7108, null}
!7201 = metadata !{i32 468, i32 0, metadata !7108, null}
!7202 = metadata !{i32 469, i32 0, metadata !7108, null}
!7203 = metadata !{i32 471, i32 0, metadata !7108, null}
!7204 = metadata !{i32 473, i32 0, metadata !7108, null}
!7205 = metadata !{i32 475, i32 0, metadata !7108, null}
!7206 = metadata !{i32 476, i32 0, metadata !7108, null}
!7207 = metadata !{i32 477, i32 0, metadata !7108, null}
!7208 = metadata !{i32 480, i32 0, metadata !7108, null}
!7209 = metadata !{i32 481, i32 0, metadata !7108, null}
!7210 = metadata !{i32 482, i32 0, metadata !7108, null}
!7211 = metadata !{i32 485, i32 0, metadata !7108, null}
!7212 = metadata !{i32 486, i32 0, metadata !7108, null}
!7213 = metadata !{i32 489, i32 0, metadata !7108, null}
!7214 = metadata !{i32 490, i32 0, metadata !7108, null}
!7215 = metadata !{i32 491, i32 0, metadata !7108, null}
!7216 = metadata !{i32 492, i32 0, metadata !7108, null}
!7217 = metadata !{i32 493, i32 0, metadata !7108, null}
!7218 = metadata !{i32 494, i32 0, metadata !7108, null}
!7219 = metadata !{i32 497, i32 0, metadata !7220, null}
!7220 = metadata !{i32 589835, metadata !7108, i32 497, i32 0, metadata !2321, i32 6} ; [ DW_TAG_lexical_block ]
!7221 = metadata !{i32 498, i32 0, metadata !7220, null}
!7222 = metadata !{i32 537, i32 0, metadata !7220, null}
!7223 = metadata !{i32 538, i32 0, metadata !7220, null}
!7224 = metadata !{i32 539, i32 0, metadata !7220, null}
!7225 = metadata !{i32 540, i32 0, metadata !7220, null}
!7226 = metadata !{i32 541, i32 0, metadata !7220, null}
!7227 = metadata !{i32 542, i32 0, metadata !7220, null}
!7228 = metadata !{i32 543, i32 0, metadata !7220, null}
!7229 = metadata !{i32 544, i32 0, metadata !7220, null}
!7230 = metadata !{i32 545, i32 0, metadata !7220, null}
!7231 = metadata !{i32 546, i32 0, metadata !7220, null}
!7232 = metadata !{i32 547, i32 0, metadata !7220, null}
!7233 = metadata !{i32 548, i32 0, metadata !7220, null}
!7234 = metadata !{i32 550, i32 0, metadata !7220, null}
!7235 = metadata !{i32 551, i32 0, metadata !7220, null}
!7236 = metadata !{i32 552, i32 0, metadata !7220, null}
!7237 = metadata !{i32 553, i32 0, metadata !7220, null}
!7238 = metadata !{i32 554, i32 0, metadata !7220, null}
!7239 = metadata !{i32 556, i32 0, metadata !7220, null}
!7240 = metadata !{i32 559, i32 0, metadata !7220, null}
!7241 = metadata !{i32 567, i32 0, metadata !7220, null}
!7242 = metadata !{i32 569, i32 0, metadata !7220, null}
!7243 = metadata !{i32 570, i32 0, metadata !7220, null}
!7244 = metadata !{i32 585, i32 0, metadata !7220, null}
!7245 = metadata !{i32 588, i32 0, metadata !7220, null}
!7246 = metadata !{i32 589, i32 0, metadata !7220, null}
!7247 = metadata !{i32 590, i32 0, metadata !7220, null}
!7248 = metadata !{i32 591, i32 0, metadata !7220, null}
!7249 = metadata !{i32 592, i32 0, metadata !7220, null}
!7250 = metadata !{i32 594, i32 0, metadata !7220, null}
!7251 = metadata !{i32 595, i32 0, metadata !7220, null}
!7252 = metadata !{i32 596, i32 0, metadata !7220, null}
!7253 = metadata !{i32 597, i32 0, metadata !7220, null}
!7254 = metadata !{i32 598, i32 0, metadata !7220, null}
!7255 = metadata !{i32 601, i32 0, metadata !7220, null}
!7256 = metadata !{i32 606, i32 0, metadata !7220, null}
!7257 = metadata !{i32 607, i32 0, metadata !7220, null}
!7258 = metadata !{i32 608, i32 0, metadata !7220, null}
!7259 = metadata !{i32 609, i32 0, metadata !7220, null}
!7260 = metadata !{i32 610, i32 0, metadata !7220, null}
!7261 = metadata !{i32 611, i32 0, metadata !7220, null}
!7262 = metadata !{i32 612, i32 0, metadata !7220, null}
!7263 = metadata !{i32 618, i32 0, metadata !7108, null}
!7264 = metadata !{i32 619, i32 0, metadata !7265, null}
!7265 = metadata !{i32 589835, metadata !7108, i32 619, i32 0, metadata !2321, i32 7} ; [ DW_TAG_lexical_block ]
!7266 = metadata !{i32 621, i32 0, metadata !7265, null}
!7267 = metadata !{i32 622, i32 0, metadata !7265, null}
!7268 = metadata !{i32 629, i32 0, metadata !7265, null}
!7269 = metadata !{i32 630, i32 0, metadata !7265, null}
!7270 = metadata !{i32 631, i32 0, metadata !7265, null}
!7271 = metadata !{i32 634, i32 0, metadata !7265, null}
!7272 = metadata !{i32 635, i32 0, metadata !7265, null}
!7273 = metadata !{i32 637, i32 0, metadata !7265, null}
!7274 = metadata !{i32 638, i32 0, metadata !7265, null}
!7275 = metadata !{i32 639, i32 0, metadata !7265, null}
!7276 = metadata !{i32 640, i32 0, metadata !7265, null}
!7277 = metadata !{i32 641, i32 0, metadata !7265, null}
!7278 = metadata !{i32 643, i32 0, metadata !7265, null}
!7279 = metadata !{i32 644, i32 0, metadata !7265, null}
!7280 = metadata !{i32 645, i32 0, metadata !7265, null}
!7281 = metadata !{i32 646, i32 0, metadata !7265, null}
!7282 = metadata !{i32 649, i32 0, metadata !7108, null}
!7283 = metadata !{i32 652, i32 0, metadata !7284, null}
!7284 = metadata !{i32 589835, metadata !7108, i32 652, i32 0, metadata !2321, i32 8} ; [ DW_TAG_lexical_block ]
!7285 = metadata !{i32 653, i32 0, metadata !7284, null}
!7286 = metadata !{i32 655, i32 0, metadata !7284, null}
!7287 = metadata !{i32 656, i32 0, metadata !7284, null}
!7288 = metadata !{i32 657, i32 0, metadata !7284, null}
!7289 = metadata !{i32 659, i32 0, metadata !7284, null}
!7290 = metadata !{i32 660, i32 0, metadata !7284, null}
!7291 = metadata !{i32 661, i32 0, metadata !7284, null}
!7292 = metadata !{i32 662, i32 0, metadata !7284, null}
!7293 = metadata !{i32 675, i32 0, metadata !7284, null}
!7294 = metadata !{i32 676, i32 0, metadata !7284, null}
!7295 = metadata !{i32 677, i32 0, metadata !7284, null}
!7296 = metadata !{i32 678, i32 0, metadata !7284, null}
!7297 = metadata !{i32 679, i32 0, metadata !7284, null}
!7298 = metadata !{i32 680, i32 0, metadata !7284, null}
!7299 = metadata !{i32 681, i32 0, metadata !7284, null}
!7300 = metadata !{i32 682, i32 0, metadata !7284, null}
!7301 = metadata !{i32 684, i32 0, metadata !7284, null}
!7302 = metadata !{i32 688, i32 0, metadata !7284, null}
!7303 = metadata !{i32 756, i32 0, metadata !7108, null}
!7304 = metadata !{i32 757, i32 0, metadata !7108, null}
!7305 = metadata !{i32 761, i32 0, metadata !7108, null}
!7306 = metadata !{i32 762, i32 0, metadata !7108, null}
!7307 = metadata !{i32 763, i32 0, metadata !7108, null}
!7308 = metadata !{i32 765, i32 0, metadata !7108, null}
!7309 = metadata !{i32 14, i32 0, metadata !7310, null}
!7310 = metadata !{i32 589835, metadata !2394, i32 13, i32 0, metadata !2395, i32 0} ; [ DW_TAG_lexical_block ]
!7311 = metadata !{i32 16, i32 0, metadata !7310, null}
!7312 = metadata !{i32 19, i32 0, metadata !7310, null}
!7313 = metadata !{i32 33, i32 0, metadata !7314, null}
!7314 = metadata !{i32 589835, metadata !7310, i32 13, i32 0, metadata !2395, i32 1} ; [ DW_TAG_lexical_block ]
!7315 = metadata !{i32 34, i32 0, metadata !7314, null}
!7316 = metadata !{i32 36, i32 0, metadata !7314, null}
!7317 = metadata !{i32 38, i32 0, metadata !7314, null}
!7318 = metadata !{i32 42, i32 0, metadata !7310, null}
!7319 = metadata !{i32 45, i32 0, metadata !7310, null}
!7320 = metadata !{i32 59, i32 0, metadata !7321, null}
!7321 = metadata !{i32 589835, metadata !7310, i32 59, i32 0, metadata !2395, i32 2} ; [ DW_TAG_lexical_block ]
!7322 = metadata !{i32 60, i32 0, metadata !7321, null}
!7323 = metadata !{i32 62, i32 0, metadata !7321, null}
!7324 = metadata !{i32 64, i32 0, metadata !7321, null}
!7325 = metadata !{i32 520, i32 0, metadata !7326, null}
!7326 = metadata !{i32 589835, metadata !2404, i32 516, i32 0, metadata !2407, i32 0} ; [ DW_TAG_lexical_block ]
!7327 = metadata !{i32 522, i32 0, metadata !7326, null}
!7328 = metadata !{i32 524, i32 0, metadata !7326, null}
!7329 = metadata !{i32 548, i32 0, metadata !7330, null}
!7330 = metadata !{i32 589835, metadata !7326, i32 548, i32 0, metadata !2407, i32 1} ; [ DW_TAG_lexical_block ]
!7331 = metadata !{i32 550, i32 0, metadata !7330, null}
!7332 = metadata !{i32 552, i32 0, metadata !7330, null}
!7333 = metadata !{i32 553, i32 0, metadata !7330, null}
!7334 = metadata !{i32 570, i32 0, metadata !7335, null}
!7335 = metadata !{i32 589835, metadata !7326, i32 570, i32 0, metadata !2407, i32 2} ; [ DW_TAG_lexical_block ]
!7336 = metadata !{i32 573, i32 0, metadata !7335, null}
!7337 = metadata !{i32 574, i32 0, metadata !7335, null}
!7338 = metadata !{i32 575, i32 0, metadata !7335, null}
!7339 = metadata !{i32 576, i32 0, metadata !7335, null}
!7340 = metadata !{i32 578, i32 0, metadata !7335, null}
!7341 = metadata !{i32 580, i32 0, metadata !7335, null}
!7342 = metadata !{i32 572, i32 0, metadata !7335, null}
!7343 = metadata !{i32 583, i32 0, metadata !7335, null}
!7344 = metadata !{i32 600, i32 0, metadata !7326, null}
!7345 = metadata !{i32 805, i32 0, metadata !7346, null}
!7346 = metadata !{i32 589835, metadata !2467, i32 801, i32 0, metadata !2470, i32 0} ; [ DW_TAG_lexical_block ]
!7347 = metadata !{i32 807, i32 0, metadata !7346, null}
!7348 = metadata !{i32 810, i32 0, metadata !7346, null}
!7349 = metadata !{i32 812, i32 0, metadata !7346, null}
!7350 = metadata !{i32 818, i32 0, metadata !7351, null}
!7351 = metadata !{i32 589835, metadata !2474, i32 816, i32 0, metadata !2470, i32 1} ; [ DW_TAG_lexical_block ]
!7352 = metadata !{i32 819, i32 0, metadata !7351, null}
!7353 = metadata !{i32 821, i32 0, metadata !7351, null}
!7354 = metadata !{i32 822, i32 0, metadata !7351, null}
!7355 = metadata !{i32 826, i32 0, metadata !7351, null}
!7356 = metadata !{i32 873, i32 0, metadata !7357, null}
!7357 = metadata !{i32 589835, metadata !2477, i32 845, i32 0, metadata !2470, i32 2} ; [ DW_TAG_lexical_block ]
!7358 = metadata !{i32 874, i32 0, metadata !7357, null}
!7359 = metadata !{i32 875, i32 0, metadata !7357, null}
!7360 = metadata !{i32 876, i32 0, metadata !7357, null}
!7361 = metadata !{i32 877, i32 0, metadata !7357, null}
!7362 = metadata !{i32 879, i32 0, metadata !7357, null}
!7363 = metadata !{i32 889, i32 0, metadata !7357, null}
!7364 = metadata !{i32 890, i32 0, metadata !7357, null}
!7365 = metadata !{i32 891, i32 0, metadata !7357, null}
!7366 = metadata !{i32 893, i32 0, metadata !7357, null}
!7367 = metadata !{i32 894, i32 0, metadata !7357, null}
!7368 = metadata !{i32 896, i32 0, metadata !7357, null}
!7369 = metadata !{i32 899, i32 0, metadata !7357, null}
!7370 = metadata !{i32 901, i32 0, metadata !7357, null}
!7371 = metadata !{i32 902, i32 0, metadata !7357, null}
!7372 = metadata !{i32 913, i32 0, metadata !7357, null}
!7373 = metadata !{i32 914, i32 0, metadata !7357, null}
!7374 = metadata !{i32 915, i32 0, metadata !7357, null}
!7375 = metadata !{i32 916, i32 0, metadata !7357, null}
!7376 = metadata !{i32 917, i32 0, metadata !7357, null}
!7377 = metadata !{i32 919, i32 0, metadata !7357, null}
!7378 = metadata !{i32 921, i32 0, metadata !7357, null}
!7379 = metadata !{i32 922, i32 0, metadata !7357, null}
!7380 = metadata !{i32 924, i32 0, metadata !7357, null}
!7381 = metadata !{i32 920, i32 0, metadata !7357, null}
!7382 = metadata !{i32 926, i32 0, metadata !7357, null}
!7383 = metadata !{i32 931, i32 0, metadata !7357, null}
!7384 = metadata !{i32 932, i32 0, metadata !7357, null}
!7385 = metadata !{i32 933, i32 0, metadata !7357, null}
!7386 = metadata !{i32 934, i32 0, metadata !7357, null}
!7387 = metadata !{i32 936, i32 0, metadata !7357, null}
!7388 = metadata !{i32 937, i32 0, metadata !7357, null}
!7389 = metadata !{i32 941, i32 0, metadata !7357, null}
!7390 = metadata !{i32 952, i32 0, metadata !7357, null}
!7391 = metadata !{i32 954, i32 0, metadata !7357, null}
!7392 = metadata !{i32 956, i32 0, metadata !7357, null}
!7393 = metadata !{i32 960, i32 0, metadata !7357, null}
!7394 = metadata !{i32 976, i32 0, metadata !7357, null}
!7395 = metadata !{i32 977, i32 0, metadata !7357, null}
!7396 = metadata !{i32 978, i32 0, metadata !7357, null}
!7397 = metadata !{i32 981, i32 0, metadata !7357, null}
!7398 = metadata !{i32 982, i32 0, metadata !7357, null}
!7399 = metadata !{i32 983, i32 0, metadata !7357, null}
!7400 = metadata !{i32 986, i32 0, metadata !7357, null}
!7401 = metadata !{i32 987, i32 0, metadata !7357, null}
!7402 = metadata !{i32 988, i32 0, metadata !7357, null}
!7403 = metadata !{i32 993, i32 0, metadata !7357, null}
!7404 = metadata !{i32 996, i32 0, metadata !7357, null}
!7405 = metadata !{i32 1001, i32 0, metadata !7357, null}
!7406 = metadata !{i32 1003, i32 0, metadata !7357, null}
!7407 = metadata !{i32 1004, i32 0, metadata !7357, null}
!7408 = metadata !{i32 1006, i32 0, metadata !7357, null}
!7409 = metadata !{i32 1008, i32 0, metadata !7357, null}
!7410 = metadata !{i32 1011, i32 0, metadata !7357, null}
!7411 = metadata !{i32 1013, i32 0, metadata !7357, null}
!7412 = metadata !{i32 1015, i32 0, metadata !7357, null}
!7413 = metadata !{i32 1018, i32 0, metadata !7357, null}
!7414 = metadata !{i32 1019, i32 0, metadata !7357, null}
!7415 = metadata !{i32 1020, i32 0, metadata !7357, null}
!7416 = metadata !{i32 1021, i32 0, metadata !7357, null}
!7417 = metadata !{i32 1022, i32 0, metadata !7357, null}
!7418 = metadata !{i32 1026, i32 0, metadata !7357, null}
!7419 = metadata !{i32 1030, i32 0, metadata !7357, null}
!7420 = metadata !{i32 1032, i32 0, metadata !7357, null}
!7421 = metadata !{i32 1033, i32 0, metadata !7357, null}
!7422 = metadata !{i32 1036, i32 0, metadata !7357, null}
!7423 = metadata !{i32 1037, i32 0, metadata !7357, null}
!7424 = metadata !{i32 1038, i32 0, metadata !7357, null}
!7425 = metadata !{i32 1039, i32 0, metadata !7357, null}
!7426 = metadata !{i32 1041, i32 0, metadata !7357, null}
!7427 = metadata !{i32 1044, i32 0, metadata !7357, null}
!7428 = metadata !{i32 1045, i32 0, metadata !7357, null}
!7429 = metadata !{i32 1048, i32 0, metadata !7357, null}
!7430 = metadata !{i32 1051, i32 0, metadata !7357, null}
!7431 = metadata !{i32 1052, i32 0, metadata !7357, null}
!7432 = metadata !{i32 1054, i32 0, metadata !7357, null}
!7433 = metadata !{i32 1056, i32 0, metadata !7357, null}
!7434 = metadata !{i32 1059, i32 0, metadata !7357, null}
!7435 = metadata !{i32 1060, i32 0, metadata !7357, null}
!7436 = metadata !{i32 1061, i32 0, metadata !7357, null}
!7437 = metadata !{i32 1063, i32 0, metadata !7357, null}
!7438 = metadata !{i32 1064, i32 0, metadata !7357, null}
!7439 = metadata !{i32 1065, i32 0, metadata !7357, null}
!7440 = metadata !{i32 1068, i32 0, metadata !7357, null}
!7441 = metadata !{i32 1070, i32 0, metadata !7357, null}
!7442 = metadata !{i32 1071, i32 0, metadata !7357, null}
!7443 = metadata !{i32 1072, i32 0, metadata !7357, null}
!7444 = metadata !{i32 1073, i32 0, metadata !7357, null}
!7445 = metadata !{i32 1074, i32 0, metadata !7357, null}
!7446 = metadata !{i32 1075, i32 0, metadata !7357, null}
!7447 = metadata !{i32 1077, i32 0, metadata !7357, null}
!7448 = metadata !{i32 1103, i32 0, metadata !7357, null}
!7449 = metadata !{i32 1111, i32 0, metadata !7357, null}
!7450 = metadata !{i32 1112, i32 0, metadata !7357, null}
!7451 = metadata !{i32 1115, i32 0, metadata !7357, null}
!7452 = metadata !{i32 1118, i32 0, metadata !7357, null}
!7453 = metadata !{i32 1119, i32 0, metadata !7357, null}
!7454 = metadata !{i32 1120, i32 0, metadata !7357, null}
!7455 = metadata !{i32 1123, i32 0, metadata !7357, null}
!7456 = metadata !{i32 1125, i32 0, metadata !7357, null}
!7457 = metadata !{i32 1126, i32 0, metadata !7357, null}
!7458 = metadata !{i32 1128, i32 0, metadata !7357, null}
!7459 = metadata !{i32 1131, i32 0, metadata !7357, null}
!7460 = metadata !{i32 1132, i32 0, metadata !7357, null}
!7461 = metadata !{i32 1136, i32 0, metadata !7357, null}
!7462 = metadata !{i32 1140, i32 0, metadata !7357, null}
!7463 = metadata !{i32 1141, i32 0, metadata !7357, null}
!7464 = metadata !{i32 1143, i32 0, metadata !7357, null}
!7465 = metadata !{i32 1150, i32 0, metadata !7357, null}
!7466 = metadata !{i32 609, i32 0, metadata !7467, null}
!7467 = metadata !{i32 589835, metadata !2536, i32 606, i32 0, metadata !2539, i32 0} ; [ DW_TAG_lexical_block ]
!7468 = metadata !{i32 612, i32 0, metadata !7467, null}
!7469 = metadata !{i32 613, i32 0, metadata !7467, null}
!7470 = metadata !{i32 614, i32 0, metadata !7467, null}
!7471 = metadata !{i32 615, i32 0, metadata !7467, null}
!7472 = metadata !{i32 616, i32 0, metadata !7467, null}
!7473 = metadata !{i32 619, i32 0, metadata !7467, null}
!7474 = metadata !{i32 629, i32 0, metadata !7475, null}
!7475 = metadata !{i32 589835, metadata !2600, i32 625, i32 0, metadata !2603, i32 0} ; [ DW_TAG_lexical_block ]
!7476 = metadata !{i32 634, i32 0, metadata !7475, null}
!7477 = metadata !{i32 636, i32 0, metadata !7475, null}
!7478 = metadata !{i32 637, i32 0, metadata !7475, null}
!7479 = metadata !{i32 643, i32 0, metadata !7475, null}
!7480 = metadata !{i32 644, i32 0, metadata !7475, null}
!7481 = metadata !{i32 650, i32 0, metadata !7475, null}
!7482 = metadata !{i32 652, i32 0, metadata !7475, null}
!7483 = metadata !{i32 655, i32 0, metadata !7475, null}
!7484 = metadata !{i32 660, i32 0, metadata !7475, null}
!7485 = metadata !{i32 668, i32 0, metadata !7475, null}
!7486 = metadata !{i32 672, i32 0, metadata !7475, null}
!7487 = metadata !{i32 677, i32 0, metadata !7475, null}
!7488 = metadata !{i32 680, i32 0, metadata !7475, null}
!7489 = metadata !{i32 694, i32 0, metadata !7475, null}
!7490 = metadata !{i32 699, i32 0, metadata !7475, null}
!7491 = metadata !{i32 651, i32 0, metadata !7475, null}
!7492 = metadata !{i32 703, i32 0, metadata !7475, null}
!7493 = metadata !{i32 704, i32 0, metadata !7475, null}
!7494 = metadata !{i32 707, i32 0, metadata !7475, null}
!7495 = metadata !{i32 708, i32 0, metadata !7475, null}
!7496 = metadata !{i32 715, i32 0, metadata !7475, null}
!7497 = metadata !{i32 716, i32 0, metadata !7475, null}
!7498 = metadata !{i32 717, i32 0, metadata !7475, null}
!7499 = metadata !{i32 718, i32 0, metadata !7475, null}
!7500 = metadata !{i32 719, i32 0, metadata !7475, null}
!7501 = metadata !{i32 728, i32 0, metadata !7475, null}
!7502 = metadata !{i32 35, i32 0, metadata !7503, null}
!7503 = metadata !{i32 589835, metadata !2663, i32 24, i32 0, metadata !2664, i32 0} ; [ DW_TAG_lexical_block ]
!7504 = metadata !{i32 36, i32 0, metadata !7503, null}
!7505 = metadata !{i32 37, i32 0, metadata !7503, null}
!7506 = metadata !{i32 38, i32 0, metadata !7503, null}
!7507 = metadata !{i32 39, i32 0, metadata !7503, null}
!7508 = metadata !{i32 40, i32 0, metadata !7503, null}
!7509 = metadata !{i32 59, i32 0, metadata !7503, null}
!7510 = metadata !{i32 96, i32 0, metadata !7503, null}
!7511 = metadata !{i32 97, i32 0, metadata !7503, null}
!7512 = metadata !{i32 98, i32 0, metadata !7503, null}
!7513 = metadata !{i32 99, i32 0, metadata !7503, null}
!7514 = metadata !{i32 100, i32 0, metadata !7503, null}
!7515 = metadata !{i32 102, i32 0, metadata !7503, null}
!7516 = metadata !{i32 103, i32 0, metadata !7503, null}
!7517 = metadata !{i32 122, i32 0, metadata !7503, null}
!7518 = metadata !{i32 123, i32 0, metadata !7503, null}
!7519 = metadata !{i32 124, i32 0, metadata !7503, null}
!7520 = metadata !{i32 125, i32 0, metadata !7503, null}
!7521 = metadata !{i32 126, i32 0, metadata !7503, null}
!7522 = metadata !{i32 127, i32 0, metadata !7503, null}
!7523 = metadata !{i32 129, i32 0, metadata !7503, null}
!7524 = metadata !{i32 130, i32 0, metadata !7503, null}
!7525 = metadata !{i32 142, i32 0, metadata !7503, null}
!7526 = metadata !{i32 144, i32 0, metadata !7503, null}
!7527 = metadata !{i32 148, i32 0, metadata !7503, null}
!7528 = metadata !{i32 149, i32 0, metadata !7503, null}
!7529 = metadata !{i32 152, i32 0, metadata !7503, null}
!7530 = metadata !{i32 22, i32 0, metadata !7531, null}
!7531 = metadata !{i32 589835, metadata !2682, i32 21, i32 0, metadata !2683, i32 0} ; [ DW_TAG_lexical_block ]
!7532 = metadata !{i32 31, i32 0, metadata !7531, null}
!7533 = metadata !{i32 32, i32 0, metadata !7531, null}
!7534 = metadata !{i32 30, i32 0, metadata !7531, null}
!7535 = metadata !{i32 35, i32 0, metadata !7531, null}
!7536 = metadata !{i32 23, i32 0, metadata !7537, null}
!7537 = metadata !{i32 589835, metadata !2693, i32 19, i32 0, metadata !2694, i32 0} ; [ DW_TAG_lexical_block ]
!7538 = metadata !{i32 24, i32 0, metadata !7537, null}
!7539 = metadata !{i32 25, i32 0, metadata !7537, null}
!7540 = metadata !{i32 28, i32 0, metadata !7537, null}
!7541 = metadata !{i32 332, i32 0, metadata !7542, null}
!7542 = metadata !{i32 589835, metadata !2702, i32 331, i32 0, metadata !2705, i32 0} ; [ DW_TAG_lexical_block ]
!7543 = metadata !{i32 43, i32 0, metadata !7544, null}
!7544 = metadata !{i32 589835, metadata !2715, i32 39, i32 0, metadata !2716, i32 0} ; [ DW_TAG_lexical_block ]
!7545 = metadata !{i32 45, i32 0, metadata !7544, null}
!7546 = metadata !{i32 46, i32 0, metadata !7544, null}
!7547 = metadata !{i32 47, i32 0, metadata !7544, null}
!7548 = metadata !{i32 48, i32 0, metadata !7544, null}
!7549 = metadata !{i32 49, i32 0, metadata !7544, null}
!7550 = metadata !{i32 61, i32 0, metadata !7544, null}
!7551 = metadata !{i32 79, i32 0, metadata !7544, null}
!7552 = metadata !{i32 990, i32 0, metadata !7553, null}
!7553 = metadata !{i32 589835, metadata !2739, i32 987, i32 0, metadata !2742, i32 0} ; [ DW_TAG_lexical_block ]
!7554 = metadata !{i32 1000, i32 0, metadata !7555, null}
!7555 = metadata !{i32 589835, metadata !2806, i32 994, i32 0, metadata !2742, i32 1} ; [ DW_TAG_lexical_block ]
!7556 = metadata !{i32 1001, i32 0, metadata !7555, null}
!7557 = metadata !{i32 1002, i32 0, metadata !7555, null}
!7558 = metadata !{i32 1005, i32 0, metadata !7555, null}
!7559 = metadata !{i32 1006, i32 0, metadata !7555, null}
!7560 = metadata !{i32 1010, i32 0, metadata !7555, null}
!7561 = metadata !{i32 1012, i32 0, metadata !7555, null}
!7562 = metadata !{i32 1014, i32 0, metadata !7555, null}
!7563 = metadata !{i32 1015, i32 0, metadata !7555, null}
!7564 = metadata !{i32 1016, i32 0, metadata !7555, null}
!7565 = metadata !{i32 1018, i32 0, metadata !7555, null}
!7566 = metadata !{i32 1011, i32 0, metadata !7555, null}
!7567 = metadata !{i32 1025, i32 0, metadata !7555, null}
!7568 = metadata !{i32 1026, i32 0, metadata !7555, null}
!7569 = metadata !{i32 1027, i32 0, metadata !7555, null}
!7570 = metadata !{i32 1033, i32 0, metadata !7555, null}
!7571 = metadata !{i32 1034, i32 0, metadata !7555, null}
!7572 = metadata !{i32 1037, i32 0, metadata !7555, null}
!7573 = metadata !{i32 1038, i32 0, metadata !7555, null}
!7574 = metadata !{i32 1040, i32 0, metadata !7555, null}
!7575 = metadata !{i32 1209, i32 0, metadata !7576, null}
!7576 = metadata !{i32 589835, metadata !2807, i32 1180, i32 0, metadata !2742, i32 2} ; [ DW_TAG_lexical_block ]
!7577 = metadata !{i32 1230, i32 0, metadata !7576, null}
!7578 = metadata !{i32 1232, i32 0, metadata !7576, null}
!7579 = metadata !{i32 1239, i32 0, metadata !7576, null}
!7580 = metadata !{i32 1241, i32 0, metadata !7576, null}
!7581 = metadata !{i32 1242, i32 0, metadata !7576, null}
!7582 = metadata !{i32 1260, i32 0, metadata !7576, null}
!7583 = metadata !{i32 1266, i32 0, metadata !7576, null}
!7584 = metadata !{i32 1272, i32 0, metadata !7576, null}
!7585 = metadata !{i32 1274, i32 0, metadata !7576, null}
!7586 = metadata !{i32 1275, i32 0, metadata !7576, null}
!7587 = metadata !{i32 1281, i32 0, metadata !7576, null}
!7588 = metadata !{i32 1282, i32 0, metadata !7576, null}
!7589 = metadata !{i32 1289, i32 0, metadata !7576, null}
!7590 = metadata !{i32 1291, i32 0, metadata !7576, null}
!7591 = metadata !{i32 1292, i32 0, metadata !7576, null}
!7592 = metadata !{i32 1293, i32 0, metadata !7576, null}
!7593 = metadata !{i32 1294, i32 0, metadata !7576, null}
!7594 = metadata !{i32 1298, i32 0, metadata !7576, null}
!7595 = metadata !{i32 1299, i32 0, metadata !7576, null}
!7596 = metadata !{i32 1302, i32 0, metadata !7576, null}
!7597 = metadata !{i32 1308, i32 0, metadata !7576, null}
!7598 = metadata !{i32 1329, i32 0, metadata !7576, null}
!7599 = metadata !{i32 1332, i32 0, metadata !7576, null}
!7600 = metadata !{i32 1334, i32 0, metadata !7576, null}
!7601 = metadata !{i32 1336, i32 0, metadata !7576, null}
!7602 = metadata !{i32 1337, i32 0, metadata !7576, null}
!7603 = metadata !{i32 1340, i32 0, metadata !7576, null}
!7604 = metadata !{i32 1339, i32 0, metadata !7576, null}
!7605 = metadata !{i32 1342, i32 0, metadata !7576, null}
!7606 = metadata !{i32 1349, i32 0, metadata !7576, null}
!7607 = metadata !{i32 1351, i32 0, metadata !7576, null}
!7608 = metadata !{i32 1356, i32 0, metadata !7576, null}
!7609 = metadata !{i32 1363, i32 0, metadata !7576, null}
!7610 = metadata !{i32 1364, i32 0, metadata !7576, null}
!7611 = metadata !{i32 1369, i32 0, metadata !7576, null}
!7612 = metadata !{i32 1371, i32 0, metadata !7576, null}
!7613 = metadata !{i32 1376, i32 0, metadata !7576, null}
!7614 = metadata !{i32 1380, i32 0, metadata !7576, null}
!7615 = metadata !{i32 1385, i32 0, metadata !7576, null}
!7616 = metadata !{i32 1386, i32 0, metadata !7576, null}
!7617 = metadata !{i32 1392, i32 0, metadata !7576, null}
!7618 = metadata !{i32 1393, i32 0, metadata !7619, null}
!7619 = metadata !{i32 589835, metadata !7576, i32 1393, i32 0, metadata !2742, i32 3} ; [ DW_TAG_lexical_block ]
!7620 = metadata !{i32 1399, i32 0, metadata !7619, null}
!7621 = metadata !{i32 1400, i32 0, metadata !7619, null}
!7622 = metadata !{i32 1402, i32 0, metadata !7619, null}
!7623 = metadata !{i32 1415, i32 0, metadata !7576, null}
!7624 = metadata !{i32 1420, i32 0, metadata !7576, null}
!7625 = metadata !{i32 1421, i32 0, metadata !7576, null}
!7626 = metadata !{i32 1423, i32 0, metadata !7576, null}
!7627 = metadata !{i32 1424, i32 0, metadata !7576, null}
!7628 = metadata !{i32 1425, i32 0, metadata !7576, null}
!7629 = metadata !{i32 1429, i32 0, metadata !7576, null}
!7630 = metadata !{i32 1430, i32 0, metadata !7576, null}
!7631 = metadata !{i32 1431, i32 0, metadata !7576, null}
!7632 = metadata !{i32 1428, i32 0, metadata !7576, null}
!7633 = metadata !{i32 1433, i32 0, metadata !7576, null}
!7634 = metadata !{i32 1434, i32 0, metadata !7576, null}
!7635 = metadata !{i32 1437, i32 0, metadata !7576, null}
!7636 = metadata !{i32 1441, i32 0, metadata !7576, null}
!7637 = metadata !{i32 1444, i32 0, metadata !7576, null}
!7638 = metadata !{i32 1445, i32 0, metadata !7576, null}
!7639 = metadata !{i32 1446, i32 0, metadata !7576, null}
!7640 = metadata !{i32 1447, i32 0, metadata !7576, null}
!7641 = metadata !{i32 1443, i32 0, metadata !7576, null}
!7642 = metadata !{i32 1457, i32 0, metadata !7576, null}
!7643 = metadata !{i32 1459, i32 0, metadata !7576, null}
!7644 = metadata !{i32 1460, i32 0, metadata !7576, null}
!7645 = metadata !{i32 1461, i32 0, metadata !7576, null}
!7646 = metadata !{i32 1463, i32 0, metadata !7576, null}
!7647 = metadata !{i32 1464, i32 0, metadata !7576, null}
!7648 = metadata !{i32 1466, i32 0, metadata !7576, null}
!7649 = metadata !{i32 1467, i32 0, metadata !7576, null}
!7650 = metadata !{i32 1468, i32 0, metadata !7576, null}
!7651 = metadata !{i32 1472, i32 0, metadata !7576, null}
!7652 = metadata !{i32 1475, i32 0, metadata !7576, null}
!7653 = metadata !{i32 1478, i32 0, metadata !7576, null}
!7654 = metadata !{i32 1479, i32 0, metadata !7576, null}
!7655 = metadata !{i32 1483, i32 0, metadata !7576, null}
!7656 = metadata !{i32 1484, i32 0, metadata !7576, null}
!7657 = metadata !{i32 1488, i32 0, metadata !7576, null}
!7658 = metadata !{i32 1489, i32 0, metadata !7576, null}
!7659 = metadata !{i32 1471, i32 0, metadata !7576, null}
!7660 = metadata !{i32 1493, i32 0, metadata !7576, null}
!7661 = metadata !{i32 1500, i32 0, metadata !7576, null}
!7662 = metadata !{i32 1501, i32 0, metadata !7576, null}
!7663 = metadata !{i32 1504, i32 0, metadata !7576, null}
!7664 = metadata !{i32 1505, i32 0, metadata !7576, null}
!7665 = metadata !{i32 1506, i32 0, metadata !7576, null}
!7666 = metadata !{i32 1499, i32 0, metadata !7576, null}
!7667 = metadata !{i32 1511, i32 0, metadata !7576, null}
!7668 = metadata !{i32 1512, i32 0, metadata !7576, null}
!7669 = metadata !{i32 1515, i32 0, metadata !7576, null}
!7670 = metadata !{i32 1516, i32 0, metadata !7576, null}
!7671 = metadata !{i32 1522, i32 0, metadata !7576, null}
!7672 = metadata !{i32 1526, i32 0, metadata !7673, null}
!7673 = metadata !{i32 589835, metadata !7576, i32 1526, i32 0, metadata !2742, i32 4} ; [ DW_TAG_lexical_block ]
!7674 = metadata !{i32 1528, i32 0, metadata !7673, null}
!7675 = metadata !{i32 1529, i32 0, metadata !7673, null}
!7676 = metadata !{i32 1531, i32 0, metadata !7673, null}
!7677 = metadata !{i32 1532, i32 0, metadata !7673, null}
!7678 = metadata !{i32 1533, i32 0, metadata !7673, null}
!7679 = metadata !{i32 1537, i32 0, metadata !7673, null}
!7680 = metadata !{i32 1539, i32 0, metadata !7673, null}
!7681 = metadata !{i32 1540, i32 0, metadata !7673, null}
!7682 = metadata !{i32 1536, i32 0, metadata !7673, null}
!7683 = metadata !{i32 1543, i32 0, metadata !7673, null}
!7684 = metadata !{i32 1544, i32 0, metadata !7673, null}
!7685 = metadata !{i32 1547, i32 0, metadata !7673, null}
!7686 = metadata !{i32 1552, i32 0, metadata !7673, null}
!7687 = metadata !{i32 1555, i32 0, metadata !7673, null}
!7688 = metadata !{i32 1556, i32 0, metadata !7673, null}
!7689 = metadata !{i32 1559, i32 0, metadata !7673, null}
!7690 = metadata !{i32 1560, i32 0, metadata !7673, null}
!7691 = metadata !{i32 1561, i32 0, metadata !7673, null}
!7692 = metadata !{i32 1554, i32 0, metadata !7673, null}
!7693 = metadata !{i32 1567, i32 0, metadata !7673, null}
!7694 = metadata !{i32 1568, i32 0, metadata !7673, null}
!7695 = metadata !{i32 1569, i32 0, metadata !7673, null}
!7696 = metadata !{i32 1572, i32 0, metadata !7673, null}
!7697 = metadata !{i32 1575, i32 0, metadata !7673, null}
!7698 = metadata !{i32 1576, i32 0, metadata !7673, null}
!7699 = metadata !{i32 1577, i32 0, metadata !7673, null}
!7700 = metadata !{i32 1566, i32 0, metadata !7673, null}
!7701 = metadata !{i32 1582, i32 0, metadata !7673, null}
!7702 = metadata !{i32 1583, i32 0, metadata !7673, null}
!7703 = metadata !{i32 1586, i32 0, metadata !7673, null}
!7704 = metadata !{i32 1587, i32 0, metadata !7673, null}
!7705 = metadata !{i32 1754, i32 0, metadata !7576, null}
!7706 = metadata !{i32 1758, i32 0, metadata !7576, null}
!7707 = metadata !{i32 1763, i32 0, metadata !7576, null}
!7708 = metadata !{i32 1764, i32 0, metadata !7576, null}
!7709 = metadata !{i32 1770, i32 0, metadata !7576, null}
!7710 = metadata !{i32 1771, i32 0, metadata !7576, null}
!7711 = metadata !{i32 1774, i32 0, metadata !7576, null}
!7712 = metadata !{i32 1780, i32 0, metadata !7576, null}
!7713 = metadata !{i32 1134, i32 0, metadata !7714, null}
!7714 = metadata !{i32 589835, metadata !2821, i32 1131, i32 0, metadata !2742, i32 5} ; [ DW_TAG_lexical_block ]
!7715 = metadata !{i32 1140, i32 0, metadata !7714, null}
!7716 = metadata !{i32 1143, i32 0, metadata !7714, null}
!7717 = metadata !{i32 1144, i32 0, metadata !7714, null}
!7718 = metadata !{i32 1146, i32 0, metadata !7714, null}
!7719 = metadata !{i32 1167, i32 0, metadata !7714, null}
!7720 = metadata !{i32 351, i32 0, metadata !7721, null}
!7721 = metadata !{i32 589835, metadata !2824, i32 342, i32 0, metadata !2827, i32 0} ; [ DW_TAG_lexical_block ]
!7722 = metadata !{i32 352, i32 0, metadata !7721, null}
!7723 = metadata !{i32 353, i32 0, metadata !7721, null}
!7724 = metadata !{i32 356, i32 0, metadata !7721, null}
!7725 = metadata !{i32 357, i32 0, metadata !7721, null}
!7726 = metadata !{i32 359, i32 0, metadata !7721, null}
!7727 = metadata !{i32 360, i32 0, metadata !7721, null}
!7728 = metadata !{i32 820, i32 0, metadata !7729, null}
!7729 = metadata !{i32 589835, metadata !2844, i32 808, i32 0, metadata !2847, i32 0} ; [ DW_TAG_lexical_block ]
!7730 = metadata !{i32 829, i32 0, metadata !7729, null}
!7731 = metadata !{i32 830, i32 0, metadata !7729, null}
!7732 = metadata !{i32 831, i32 0, metadata !7729, null}
!7733 = metadata !{i32 833, i32 0, metadata !7729, null}
!7734 = metadata !{i32 834, i32 0, metadata !7729, null}
!7735 = metadata !{i32 838, i32 0, metadata !7729, null}
!7736 = metadata !{i32 839, i32 0, metadata !7729, null}
!7737 = metadata !{i32 842, i32 0, metadata !7729, null}
!7738 = metadata !{i32 843, i32 0, metadata !7729, null}
!7739 = metadata !{i32 894, i32 0, metadata !7729, null}
!7740 = metadata !{i32 898, i32 0, metadata !7729, null}
!7741 = metadata !{i32 899, i32 0, metadata !7729, null}
!7742 = metadata !{i32 901, i32 0, metadata !7729, null}
!7743 = metadata !{i32 902, i32 0, metadata !7729, null}
!7744 = metadata !{i32 905, i32 0, metadata !7729, null}
!7745 = metadata !{i32 906, i32 0, metadata !7729, null}
!7746 = metadata !{i32 907, i32 0, metadata !7729, null}
!7747 = metadata !{i32 893, i32 0, metadata !7729, null}
!7748 = metadata !{i32 909, i32 0, metadata !7729, null}
!7749 = metadata !{i32 910, i32 0, metadata !7729, null}
!7750 = metadata !{i32 912, i32 0, metadata !7729, null}
!7751 = metadata !{i32 717, i32 0, metadata !7752, null}
!7752 = metadata !{i32 589835, metadata !2866, i32 716, i32 0, metadata !2869, i32 0} ; [ DW_TAG_lexical_block ]
!7753 = metadata !{i32 718, i32 0, metadata !7752, null}
!7754 = metadata !{i32 719, i32 0, metadata !7752, null}
!7755 = metadata !{i32 720, i32 0, metadata !7752, null}
!7756 = metadata !{i32 722, i32 0, metadata !7752, null}
!7757 = metadata !{i32 723, i32 0, metadata !7752, null}
!7758 = metadata !{i32 741, i32 0, metadata !7752, null}
!7759 = metadata !{i32 742, i32 0, metadata !7752, null}
!7760 = metadata !{i32 748, i32 0, metadata !7752, null}
!7761 = metadata !{i32 753, i32 0, metadata !7752, null}
!7762 = metadata !{i32 763, i32 0, metadata !7763, null}
!7763 = metadata !{i32 589835, metadata !2935, i32 756, i32 0, metadata !2869, i32 1} ; [ DW_TAG_lexical_block ]
!7764 = metadata !{i32 765, i32 0, metadata !7763, null}
!7765 = metadata !{i32 766, i32 0, metadata !7763, null}
!7766 = metadata !{i32 767, i32 0, metadata !7763, null}
!7767 = metadata !{i32 770, i32 0, metadata !7763, null}
!7768 = metadata !{i32 788, i32 0, metadata !7763, null}
!7769 = metadata !{i32 789, i32 0, metadata !7763, null}
!7770 = metadata !{i32 790, i32 0, metadata !7763, null}
!7771 = metadata !{i32 793, i32 0, metadata !7763, null}
!7772 = metadata !{i32 796, i32 0, metadata !7763, null}
!7773 = metadata !{i32 799, i32 0, metadata !7763, null}
!7774 = metadata !{i32 800, i32 0, metadata !7763, null}
!7775 = metadata !{i32 805, i32 0, metadata !7776, null}
!7776 = metadata !{i32 589835, metadata !2936, i32 804, i32 0, metadata !2869, i32 2} ; [ DW_TAG_lexical_block ]
!7777 = metadata !{i32 806, i32 0, metadata !7776, null}
!7778 = metadata !{i32 807, i32 0, metadata !7776, null}
!7779 = metadata !{i32 808, i32 0, metadata !7776, null}
!7780 = metadata !{i32 809, i32 0, metadata !7776, null}
!7781 = metadata !{i32 810, i32 0, metadata !7776, null}
!7782 = metadata !{i32 811, i32 0, metadata !7776, null}
!7783 = metadata !{i32 815, i32 0, metadata !7776, null}
!7784 = metadata !{i32 1796, i32 0, metadata !7785, null}
!7785 = metadata !{i32 589835, metadata !2939, i32 1791, i32 0, metadata !2942, i32 0} ; [ DW_TAG_lexical_block ]
!7786 = metadata !{i32 1805, i32 0, metadata !7785, null}
!7787 = metadata !{i32 1806, i32 0, metadata !7785, null}
!7788 = metadata !{i32 1817, i32 0, metadata !7785, null}
!7789 = metadata !{i32 1818, i32 0, metadata !7785, null}
!7790 = metadata !{i32 1819, i32 0, metadata !7785, null}
!7791 = metadata !{i32 1822, i32 0, metadata !7785, null}
!7792 = metadata !{i32 1823, i32 0, metadata !7785, null}
!7793 = metadata !{i32 1825, i32 0, metadata !7785, null}
!7794 = metadata !{i32 1826, i32 0, metadata !7785, null}
!7795 = metadata !{i32 1827, i32 0, metadata !7785, null}
!7796 = metadata !{i32 1830, i32 0, metadata !7785, null}
!7797 = metadata !{i32 1834, i32 0, metadata !7785, null}
!7798 = metadata !{i32 1835, i32 0, metadata !7785, null}
!7799 = metadata !{i32 1836, i32 0, metadata !7785, null}
!7800 = metadata !{i32 1837, i32 0, metadata !7785, null}
!7801 = metadata !{i32 1840, i32 0, metadata !7785, null}
!7802 = metadata !{i32 1849, i32 0, metadata !7785, null}
!7803 = metadata !{i32 1850, i32 0, metadata !7785, null}
!7804 = metadata !{i32 1851, i32 0, metadata !7785, null}
!7805 = metadata !{i32 1854, i32 0, metadata !7785, null}
!7806 = metadata !{i32 1855, i32 0, metadata !7785, null}
!7807 = metadata !{i32 1856, i32 0, metadata !7785, null}
!7808 = metadata !{i32 1859, i32 0, metadata !7785, null}
!7809 = metadata !{i32 1860, i32 0, metadata !7785, null}
!7810 = metadata !{i32 1861, i32 0, metadata !7785, null}
!7811 = metadata !{i32 1862, i32 0, metadata !7785, null}
!7812 = metadata !{i32 1863, i32 0, metadata !7785, null}
!7813 = metadata !{i32 1871, i32 0, metadata !7785, null}
!7814 = metadata !{i32 1878, i32 0, metadata !7785, null}
!7815 = metadata !{i32 1879, i32 0, metadata !7785, null}
!7816 = metadata !{i32 1881, i32 0, metadata !7785, null}
!7817 = metadata !{i32 1883, i32 0, metadata !7785, null}
!7818 = metadata !{i32 1884, i32 0, metadata !7785, null}
!7819 = metadata !{i32 1888, i32 0, metadata !7785, null}
!7820 = metadata !{i32 1889, i32 0, metadata !7785, null}
!7821 = metadata !{i32 2057, i32 0, metadata !7785, null}
!7822 = metadata !{i32 2058, i32 0, metadata !7785, null}
!7823 = metadata !{i32 2059, i32 0, metadata !7785, null}
!7824 = metadata !{i32 2061, i32 0, metadata !7785, null}
!7825 = metadata !{i32 2062, i32 0, metadata !7785, null}
!7826 = metadata !{i32 2073, i32 0, metadata !7785, null}
!7827 = metadata !{i32 2074, i32 0, metadata !7785, null}
!7828 = metadata !{i32 2075, i32 0, metadata !7785, null}
!7829 = metadata !{i32 2078, i32 0, metadata !7785, null}
!7830 = metadata !{i32 2081, i32 0, metadata !7785, null}
!7831 = metadata !{i32 2072, i32 0, metadata !7785, null}
!7832 = metadata !{i32 2087, i32 0, metadata !7785, null}
!7833 = metadata !{i32 2088, i32 0, metadata !7785, null}
!7834 = metadata !{i32 2089, i32 0, metadata !7785, null}
!7835 = metadata !{i32 2090, i32 0, metadata !7785, null}
!7836 = metadata !{i32 2093, i32 0, metadata !7785, null}
!7837 = metadata !{i32 2094, i32 0, metadata !7785, null}
!7838 = metadata !{i32 2095, i32 0, metadata !7785, null}
!7839 = metadata !{i32 2097, i32 0, metadata !7785, null}
!7840 = metadata !{i32 2098, i32 0, metadata !7785, null}
!7841 = metadata !{i32 2101, i32 0, metadata !7785, null}
!7842 = metadata !{i32 2110, i32 0, metadata !7785, null}
!7843 = metadata !{i32 2112, i32 0, metadata !7785, null}
!7844 = metadata !{i32 2113, i32 0, metadata !7785, null}
!7845 = metadata !{i32 2114, i32 0, metadata !7785, null}
!7846 = metadata !{i32 2130, i32 0, metadata !7785, null}
!7847 = metadata !{i32 2117, i32 0, metadata !7785, null}
!7848 = metadata !{i32 2118, i32 0, metadata !7785, null}
!7849 = metadata !{i32 2123, i32 0, metadata !7785, null}
!7850 = metadata !{i32 2124, i32 0, metadata !7785, null}
!7851 = metadata !{i32 2131, i32 0, metadata !7785, null}
!7852 = metadata !{i32 2133, i32 0, metadata !7785, null}
!7853 = metadata !{i32 2134, i32 0, metadata !7785, null}
!7854 = metadata !{i32 2135, i32 0, metadata !7785, null}
!7855 = metadata !{i32 2137, i32 0, metadata !7785, null}
!7856 = metadata !{i32 2138, i32 0, metadata !7785, null}
!7857 = metadata !{i32 2139, i32 0, metadata !7785, null}
!7858 = metadata !{i32 2144, i32 0, metadata !7785, null}
!7859 = metadata !{i32 2145, i32 0, metadata !7785, null}
!7860 = metadata !{i32 2146, i32 0, metadata !7785, null}
!7861 = metadata !{i32 2148, i32 0, metadata !7785, null}
!7862 = metadata !{i32 2143, i32 0, metadata !7785, null}
!7863 = metadata !{i32 2153, i32 0, metadata !7785, null}
!7864 = metadata !{i32 2156, i32 0, metadata !7865, null}
!7865 = metadata !{i32 589835, metadata !7785, i32 2156, i32 0, metadata !2942, i32 1} ; [ DW_TAG_lexical_block ]
!7866 = metadata !{i32 2164, i32 0, metadata !7865, null}
!7867 = metadata !{i32 2166, i32 0, metadata !7865, null}
!7868 = metadata !{i32 2169, i32 0, metadata !7865, null}
!7869 = metadata !{i32 2176, i32 0, metadata !7865, null}
!7870 = metadata !{i32 2179, i32 0, metadata !7865, null}
!7871 = metadata !{i32 2180, i32 0, metadata !7865, null}
!7872 = metadata !{i32 2181, i32 0, metadata !7865, null}
!7873 = metadata !{i32 2182, i32 0, metadata !7865, null}
!7874 = metadata !{i32 2185, i32 0, metadata !7865, null}
!7875 = metadata !{i32 2199, i32 0, metadata !7785, null}
!7876 = metadata !{i32 2195, i32 0, metadata !7785, null}
!7877 = metadata !{i32 2201, i32 0, metadata !7785, null}
!7878 = metadata !{i32 2203, i32 0, metadata !7785, null}
!7879 = metadata !{i32 2204, i32 0, metadata !7785, null}
!7880 = metadata !{i32 2208, i32 0, metadata !7785, null}
!7881 = metadata !{i32 2209, i32 0, metadata !7785, null}
!7882 = metadata !{i32 2210, i32 0, metadata !7785, null}
!7883 = metadata !{i32 2218, i32 0, metadata !7785, null}
!7884 = metadata !{i32 2219, i32 0, metadata !7785, null}
!7885 = metadata !{i32 2221, i32 0, metadata !7785, null}
!7886 = metadata !{i32 2222, i32 0, metadata !7785, null}
!7887 = metadata !{i32 2223, i32 0, metadata !7785, null}
!7888 = metadata !{i32 2225, i32 0, metadata !7785, null}
!7889 = metadata !{i32 2226, i32 0, metadata !7785, null}
!7890 = metadata !{i32 2230, i32 0, metadata !7785, null}
!7891 = metadata !{i32 2231, i32 0, metadata !7785, null}
!7892 = metadata !{i32 2232, i32 0, metadata !7785, null}
!7893 = metadata !{i32 2234, i32 0, metadata !7785, null}
!7894 = metadata !{i32 2229, i32 0, metadata !7785, null}
!7895 = metadata !{i32 2237, i32 0, metadata !7785, null}
!7896 = metadata !{i32 2244, i32 0, metadata !7785, null}
!7897 = metadata !{i32 2248, i32 0, metadata !7898, null}
!7898 = metadata !{i32 589835, metadata !7785, i32 2248, i32 0, metadata !2942, i32 2} ; [ DW_TAG_lexical_block ]
!7899 = metadata !{i32 2250, i32 0, metadata !7898, null}
!7900 = metadata !{i32 2251, i32 0, metadata !7898, null}
!7901 = metadata !{i32 2252, i32 0, metadata !7898, null}
!7902 = metadata !{i32 2253, i32 0, metadata !7898, null}
!7903 = metadata !{i32 2254, i32 0, metadata !7898, null}
!7904 = metadata !{i32 2256, i32 0, metadata !7898, null}
!7905 = metadata !{i32 2258, i32 0, metadata !7898, null}
!7906 = metadata !{i32 2260, i32 0, metadata !7898, null}
!7907 = metadata !{i32 2261, i32 0, metadata !7898, null}
!7908 = metadata !{i32 2266, i32 0, metadata !7785, null}
!7909 = metadata !{i32 2267, i32 0, metadata !7785, null}
!7910 = metadata !{i32 2268, i32 0, metadata !7785, null}
!7911 = metadata !{i32 832, i32 0, metadata !7912, null}
!7912 = metadata !{i32 589835, metadata !3025, i32 830, i32 0, metadata !3028, i32 0} ; [ DW_TAG_lexical_block ]
!7913 = metadata !{i32 838, i32 0, metadata !7912, null}
!7914 = metadata !{i32 840, i32 0, metadata !7912, null}
!7915 = metadata !{i32 842, i32 0, metadata !7912, null}
!7916 = metadata !{i32 843, i32 0, metadata !7912, null}
!7917 = metadata !{i32 849, i32 0, metadata !7912, null}
!7918 = metadata !{i32 850, i32 0, metadata !7912, null}
!7919 = metadata !{i32 852, i32 0, metadata !7912, null}
!7920 = metadata !{i32 854, i32 0, metadata !7912, null}
!7921 = metadata !{i32 855, i32 0, metadata !7912, null}
!7922 = metadata !{i32 858, i32 0, metadata !7912, null}
!7923 = metadata !{i32 859, i32 0, metadata !7912, null}
!7924 = metadata !{i32 862, i32 0, metadata !7912, null}
!7925 = metadata !{i32 866, i32 0, metadata !7912, null}
!7926 = metadata !{i32 869, i32 0, metadata !7912, null}
!7927 = metadata !{i32 870, i32 0, metadata !7912, null}
!7928 = metadata !{i32 872, i32 0, metadata !7912, null}
!7929 = metadata !{i32 873, i32 0, metadata !7912, null}
!7930 = metadata !{i32 874, i32 0, metadata !7912, null}
!7931 = metadata !{i32 877, i32 0, metadata !7912, null}
!7932 = metadata !{i32 878, i32 0, metadata !7912, null}
!7933 = metadata !{i32 880, i32 0, metadata !7912, null}
!7934 = metadata !{i32 881, i32 0, metadata !7912, null}
!7935 = metadata !{i32 894, i32 0, metadata !7912, null}
!7936 = metadata !{i32 896, i32 0, metadata !7912, null}
!7937 = metadata !{i32 899, i32 0, metadata !7912, null}
!7938 = metadata !{i32 901, i32 0, metadata !7912, null}
!7939 = metadata !{i32 905, i32 0, metadata !7912, null}
!7940 = metadata !{i32 909, i32 0, metadata !7912, null}
!7941 = metadata !{i32 910, i32 0, metadata !7912, null}
!7942 = metadata !{i32 911, i32 0, metadata !7912, null}
!7943 = metadata !{i32 912, i32 0, metadata !7912, null}
!7944 = metadata !{i32 913, i32 0, metadata !7912, null}
!7945 = metadata !{i32 920, i32 0, metadata !7912, null}
!7946 = metadata !{i32 922, i32 0, metadata !7912, null}
!7947 = metadata !{i32 923, i32 0, metadata !7912, null}
!7948 = metadata !{i32 926, i32 0, metadata !7912, null}
!7949 = metadata !{i32 927, i32 0, metadata !7912, null}
!7950 = metadata !{i32 928, i32 0, metadata !7912, null}
!7951 = metadata !{i32 929, i32 0, metadata !7912, null}
!7952 = metadata !{i32 931, i32 0, metadata !7912, null}
!7953 = metadata !{i32 938, i32 0, metadata !7912, null}
!7954 = metadata !{i32 940, i32 0, metadata !7912, null}
!7955 = metadata !{i32 941, i32 0, metadata !7956, null}
!7956 = metadata !{i32 589835, metadata !7912, i32 941, i32 0, metadata !3028, i32 1} ; [ DW_TAG_lexical_block ]
!7957 = metadata !{i32 955, i32 0, metadata !7956, null}
!7958 = metadata !{i32 956, i32 0, metadata !7956, null}
!7959 = metadata !{i32 962, i32 0, metadata !7956, null}
!7960 = metadata !{i32 964, i32 0, metadata !7956, null}
!7961 = metadata !{i32 967, i32 0, metadata !7956, null}
!7962 = metadata !{i32 968, i32 0, metadata !7956, null}
!7963 = metadata !{i32 970, i32 0, metadata !7912, null}
!7964 = metadata !{i32 972, i32 0, metadata !7912, null}
!7965 = metadata !{i32 973, i32 0, metadata !7912, null}
!7966 = metadata !{i32 46, i32 0, metadata !7967, null}
!7967 = metadata !{i32 589835, metadata !3052, i32 29, i32 0, metadata !3053, i32 0} ; [ DW_TAG_lexical_block ]
!7968 = metadata !{i32 51, i32 0, metadata !7967, null}
!7969 = metadata !{i32 52, i32 0, metadata !7967, null}
!7970 = metadata !{i32 58, i32 0, metadata !7967, null}
!7971 = metadata !{i32 63, i32 0, metadata !7967, null}
!7972 = metadata !{i32 64, i32 0, metadata !7967, null}
!7973 = metadata !{i32 65, i32 0, metadata !7967, null}
!7974 = metadata !{i32 68, i32 0, metadata !7967, null}
!7975 = metadata !{i32 69, i32 0, metadata !7967, null}
!7976 = metadata !{i32 71, i32 0, metadata !7967, null}
!7977 = metadata !{i32 77, i32 0, metadata !7967, null}
!7978 = metadata !{i32 224, i32 0, metadata !7979, null}
!7979 = metadata !{i32 589835, metadata !3090, i32 222, i32 0, metadata !3093, i32 0} ; [ DW_TAG_lexical_block ]
!7980 = metadata !{i32 229, i32 0, metadata !7979, null}
!7981 = metadata !{i32 256, i32 0, metadata !7979, null}
!7982 = metadata !{i32 255, i32 0, metadata !7979, null}
!7983 = metadata !{i32 259, i32 0, metadata !7979, null}
!7984 = metadata !{i32 260, i32 0, metadata !7979, null}
!7985 = metadata !{i32 261, i32 0, metadata !7979, null}
!7986 = metadata !{i32 262, i32 0, metadata !7979, null}
!7987 = metadata !{i32 275, i32 0, metadata !7979, null}
!7988 = metadata !{i32 277, i32 0, metadata !7979, null}
!7989 = metadata !{i32 280, i32 0, metadata !7979, null}
!7990 = metadata !{i32 282, i32 0, metadata !7979, null}
!7991 = metadata !{i32 285, i32 0, metadata !7979, null}
!7992 = metadata !{i32 286, i32 0, metadata !7979, null}
!7993 = metadata !{i32 288, i32 0, metadata !7979, null}
!7994 = metadata !{i32 289, i32 0, metadata !7979, null}
!7995 = metadata !{i32 290, i32 0, metadata !7979, null}
!7996 = metadata !{i32 297, i32 0, metadata !7979, null}
!7997 = metadata !{i32 314, i32 0, metadata !7979, null}
!7998 = metadata !{i32 283, i32 0, metadata !7979, null}
!7999 = metadata !{i32 330, i32 0, metadata !7979, null}
!8000 = metadata !{i32 331, i32 0, metadata !7979, null}
!8001 = metadata !{i32 337, i32 0, metadata !7979, null}
!8002 = metadata !{i32 346, i32 0, metadata !7979, null}
!8003 = metadata !{i32 349, i32 0, metadata !8004, null}
!8004 = metadata !{i32 589835, metadata !7979, i32 349, i32 0, metadata !3093, i32 1} ; [ DW_TAG_lexical_block ]
!8005 = metadata !{i32 359, i32 0, metadata !8006, null}
!8006 = metadata !{i32 589835, metadata !8004, i32 359, i32 0, metadata !3093, i32 2} ; [ DW_TAG_lexical_block ]
!8007 = metadata !{i32 361, i32 0, metadata !8006, null}
!8008 = metadata !{i32 362, i32 0, metadata !8006, null}
!8009 = metadata !{i32 363, i32 0, metadata !8006, null}
!8010 = metadata !{i32 364, i32 0, metadata !8006, null}
!8011 = metadata !{i32 365, i32 0, metadata !8006, null}
!8012 = metadata !{i32 367, i32 0, metadata !8006, null}
!8013 = metadata !{i32 360, i32 0, metadata !8006, null}
!8014 = metadata !{i32 371, i32 0, metadata !8006, null}
!8015 = metadata !{i32 372, i32 0, metadata !8004, null}
!8016 = metadata !{i32 377, i32 0, metadata !7979, null}
!8017 = metadata !{i32 384, i32 0, metadata !7979, null}
!8018 = metadata !{i32 385, i32 0, metadata !7979, null}
!8019 = metadata !{i32 389, i32 0, metadata !7979, null}
!8020 = metadata !{i32 390, i32 0, metadata !7979, null}
!8021 = metadata !{i32 400, i32 0, metadata !7979, null}
!8022 = metadata !{i32 401, i32 0, metadata !7979, null}
!8023 = metadata !{i32 405, i32 0, metadata !7979, null}
!8024 = metadata !{i32 407, i32 0, metadata !7979, null}
!8025 = metadata !{i32 409, i32 0, metadata !7979, null}
!8026 = metadata !{i32 410, i32 0, metadata !7979, null}
!8027 = metadata !{i32 411, i32 0, metadata !7979, null}
!8028 = metadata !{i32 412, i32 0, metadata !7979, null}
!8029 = metadata !{i32 415, i32 0, metadata !7979, null}
!8030 = metadata !{i32 416, i32 0, metadata !7979, null}
!8031 = metadata !{i32 419, i32 0, metadata !7979, null}
!8032 = metadata !{i32 420, i32 0, metadata !7979, null}
!8033 = metadata !{i32 425, i32 0, metadata !7979, null}
!8034 = metadata !{i32 417, i32 0, metadata !7979, null}
!8035 = metadata !{i32 429, i32 0, metadata !7979, null}
!8036 = metadata !{i32 430, i32 0, metadata !7979, null}
!8037 = metadata !{i32 434, i32 0, metadata !7979, null}
!8038 = metadata !{i32 438, i32 0, metadata !7979, null}
!8039 = metadata !{i32 445, i32 0, metadata !7979, null}
!8040 = metadata !{i32 447, i32 0, metadata !7979, null}
!8041 = metadata !{i32 448, i32 0, metadata !7979, null}
!8042 = metadata !{i32 452, i32 0, metadata !7979, null}
!8043 = metadata !{i32 453, i32 0, metadata !7979, null}
!8044 = metadata !{i32 457, i32 0, metadata !7979, null}
!8045 = metadata !{i32 459, i32 0, metadata !7979, null}
!8046 = metadata !{i32 462, i32 0, metadata !7979, null}
!8047 = metadata !{i32 463, i32 0, metadata !7979, null}
!8048 = metadata !{i32 451, i32 0, metadata !7979, null}
!8049 = metadata !{i32 479, i32 0, metadata !7979, null}
!8050 = metadata !{i32 480, i32 0, metadata !7979, null}
!8051 = metadata !{i32 484, i32 0, metadata !7979, null}
!8052 = metadata !{i32 486, i32 0, metadata !7979, null}
!8053 = metadata !{i32 487, i32 0, metadata !7979, null}
!8054 = metadata !{i32 491, i32 0, metadata !7979, null}
!8055 = metadata !{i32 156, i32 0, metadata !4544, null}
!8056 = metadata !{i32 157, i32 0, metadata !4543, null}
!8057 = metadata !{i32 158, i32 0, metadata !4543, null}
!8058 = metadata !{i32 159, i32 0, metadata !4543, null}
!8059 = metadata !{i32 204, i32 0, metadata !4547, null}
!8060 = metadata !{i32 205, i32 0, metadata !4547, null}
!8061 = metadata !{i32 206, i32 0, metadata !4547, null}
!8062 = metadata !{i32 156, i32 0, metadata !4544, metadata !8063}
!8063 = metadata !{i32 2484, i32 0, metadata !4559, null}
!8064 = metadata !{i32 157, i32 0, metadata !4543, metadata !8063}
!8065 = metadata !{i32 158, i32 0, metadata !4543, metadata !8063}
!8066 = metadata !{i32 159, i32 0, metadata !4543, metadata !8063}
!8067 = metadata !{i32 156, i32 0, metadata !4544, metadata !8068}
!8068 = metadata !{i32 2485, i32 0, metadata !4559, null}
!8069 = metadata !{i32 157, i32 0, metadata !4543, metadata !8068}
!8070 = metadata !{i32 158, i32 0, metadata !4543, metadata !8068}
!8071 = metadata !{i32 159, i32 0, metadata !4543, metadata !8068}
!8072 = metadata !{i32 2487, i32 0, metadata !4559, null}
!8073 = metadata !{i32 2488, i32 0, metadata !4559, null}
!8074 = metadata !{i32 2489, i32 0, metadata !4559, null}
!8075 = metadata !{i32 2491, i32 0, metadata !4562, null}
!8076 = metadata !{i32 2492, i32 0, metadata !4562, null}
!8077 = metadata !{i32 2493, i32 0, metadata !4562, null}
!8078 = metadata !{i32 2500, i32 0, metadata !8079, null}
!8079 = metadata !{i32 589835, metadata !3212, i32 2499, i32 0, metadata !3106, i32 6} ; [ DW_TAG_lexical_block ]
!8080 = metadata !{i32 156, i32 0, metadata !4544, metadata !8081}
!8081 = metadata !{i32 1716, i32 0, metadata !4569, null}
!8082 = metadata !{i32 157, i32 0, metadata !4543, metadata !8081}
!8083 = metadata !{i32 158, i32 0, metadata !4543, metadata !8081}
!8084 = metadata !{i32 1718, i32 0, metadata !4569, null}
!8085 = metadata !{i32 1719, i32 0, metadata !4569, null}
!8086 = metadata !{i32 1720, i32 0, metadata !4569, null}
!8087 = metadata !{i32 1721, i32 0, metadata !4569, null}
!8088 = metadata !{i32 1724, i32 0, metadata !4571, null}
!8089 = metadata !{i32 1725, i32 0, metadata !4571, null}
!8090 = metadata !{i32 1726, i32 0, metadata !4571, null}
!8091 = metadata !{i32 2076, i32 0, metadata !8092, null}
!8092 = metadata !{i32 589835, metadata !3216, i32 2075, i32 0, metadata !3106, i32 9} ; [ DW_TAG_lexical_block ]
!8093 = metadata !{i32 2077, i32 0, metadata !8092, null}
!8094 = metadata !{i32 2078, i32 0, metadata !8092, null}
!8095 = metadata !{i32 2081, i32 0, metadata !8092, null}
!8096 = metadata !{i32 2085, i32 0, metadata !8092, null}
!8097 = metadata !{i32 2086, i32 0, metadata !8092, null}
!8098 = metadata !{i32 2087, i32 0, metadata !8092, null}
!8099 = metadata !{i32 156, i32 0, metadata !4544, metadata !8100}
!8100 = metadata !{i32 1696, i32 0, metadata !4576, null}
!8101 = metadata !{i32 157, i32 0, metadata !4543, metadata !8100}
!8102 = metadata !{i32 158, i32 0, metadata !4543, metadata !8100}
!8103 = metadata !{i32 1698, i32 0, metadata !4576, null}
!8104 = metadata !{i32 1699, i32 0, metadata !4576, null}
!8105 = metadata !{i32 1700, i32 0, metadata !4576, null}
!8106 = metadata !{i32 1703, i32 0, metadata !4576, null}
!8107 = metadata !{i32 1704, i32 0, metadata !4576, null}
!8108 = metadata !{i32 1705, i32 0, metadata !4576, null}
!8109 = metadata !{i32 1706, i32 0, metadata !4576, null}
!8110 = metadata !{i32 1708, i32 0, metadata !4578, null}
!8111 = metadata !{i32 1709, i32 0, metadata !4578, null}
!8112 = metadata !{i32 1710, i32 0, metadata !4578, null}
!8113 = metadata !{i32 156, i32 0, metadata !4544, metadata !8114}
!8114 = metadata !{i32 1612, i32 0, metadata !4582, null}
!8115 = metadata !{i32 157, i32 0, metadata !4543, metadata !8114}
!8116 = metadata !{i32 158, i32 0, metadata !4543, metadata !8114}
!8117 = metadata !{i32 1627, i32 0, metadata !4582, null}
!8118 = metadata !{i32 1628, i32 0, metadata !4582, null}
!8119 = metadata !{i32 1629, i32 0, metadata !4582, null}
!8120 = metadata !{i32 1632, i32 0, metadata !4582, null}
!8121 = metadata !{i32 1636, i32 0, metadata !4582, null}
!8122 = metadata !{i32 1637, i32 0, metadata !4582, null}
!8123 = metadata !{i32 1638, i32 0, metadata !4582, null}
!8124 = metadata !{i32 1641, i32 0, metadata !4582, null}
!8125 = metadata !{i32 1642, i32 0, metadata !4582, null}
!8126 = metadata !{i32 1645, i32 0, metadata !4596, null}
!8127 = metadata !{i32 1650, i32 0, metadata !4582, null}
!8128 = metadata !{i32 1651, i32 0, metadata !4582, null}
!8129 = metadata !{i32 1652, i32 0, metadata !4582, null}
!8130 = metadata !{i32 1666, i32 0, metadata !4582, null}
!8131 = metadata !{i32 1667, i32 0, metadata !4582, null}
!8132 = metadata !{i32 1668, i32 0, metadata !4582, null}
!8133 = metadata !{i32 1671, i32 0, metadata !4598, null}
!8134 = metadata !{i32 1672, i32 0, metadata !4598, null}
!8135 = metadata !{i32 1673, i32 0, metadata !4598, null}
!8136 = metadata !{i32 156, i32 0, metadata !4544, metadata !8137}
!8137 = metadata !{i32 1170, i32 0, metadata !4602, null}
!8138 = metadata !{i32 157, i32 0, metadata !4543, metadata !8137}
!8139 = metadata !{i32 158, i32 0, metadata !4543, metadata !8137}
!8140 = metadata !{i32 1171, i32 0, metadata !4602, null}
!8141 = metadata !{i32 1172, i32 0, metadata !4602, null}
!8142 = metadata !{i32 1173, i32 0, metadata !4602, null}
!8143 = metadata !{i32 1174, i32 0, metadata !4602, null}
!8144 = metadata !{i32 1177, i32 0, metadata !4602, null}
!8145 = metadata !{i32 1178, i32 0, metadata !4602, null}
!8146 = metadata !{i32 1183, i32 0, metadata !4602, null}
!8147 = metadata !{i32 1184, i32 0, metadata !4602, null}
!8148 = metadata !{i32 1185, i32 0, metadata !4602, null}
!8149 = metadata !{i32 156, i32 0, metadata !4544, metadata !8150}
!8150 = metadata !{i32 997, i32 0, metadata !4611, null}
!8151 = metadata !{i32 157, i32 0, metadata !4543, metadata !8150}
!8152 = metadata !{i32 158, i32 0, metadata !4543, metadata !8150}
!8153 = metadata !{i32 999, i32 0, metadata !4611, null}
!8154 = metadata !{i32 1000, i32 0, metadata !4611, null}
!8155 = metadata !{i32 1001, i32 0, metadata !4611, null}
!8156 = metadata !{i32 1004, i32 0, metadata !4611, null}
!8157 = metadata !{i32 978, i32 0, metadata !8158, metadata !8159}
!8158 = metadata !{i32 589835, metadata !3257, i32 977, i32 0, metadata !3106, i32 16} ; [ DW_TAG_lexical_block ]
!8159 = metadata !{i32 1005, i32 0, metadata !4611, null}
!8160 = metadata !{i32 979, i32 0, metadata !8158, metadata !8159}
!8161 = metadata !{i32 1007, i32 0, metadata !4613, null}
!8162 = metadata !{i32 1008, i32 0, metadata !4613, null}
!8163 = metadata !{i32 1009, i32 0, metadata !4613, null}
!8164 = metadata !{i32 156, i32 0, metadata !4544, metadata !8165}
!8165 = metadata !{i32 812, i32 0, metadata !4616, null}
!8166 = metadata !{i32 157, i32 0, metadata !4543, metadata !8165}
!8167 = metadata !{i32 158, i32 0, metadata !4543, metadata !8165}
!8168 = metadata !{i32 814, i32 0, metadata !4616, null}
!8169 = metadata !{i32 815, i32 0, metadata !4616, null}
!8170 = metadata !{i32 816, i32 0, metadata !4616, null}
!8171 = metadata !{i32 819, i32 0, metadata !4616, null}
!8172 = metadata !{i32 820, i32 0, metadata !4616, null}
!8173 = metadata !{i32 821, i32 0, metadata !4616, null}
!8174 = metadata !{i32 822, i32 0, metadata !4616, null}
!8175 = metadata !{i32 824, i32 0, metadata !4618, null}
!8176 = metadata !{i32 825, i32 0, metadata !4618, null}
!8177 = metadata !{i32 826, i32 0, metadata !4618, null}
!8178 = metadata !{i32 156, i32 0, metadata !4544, metadata !8179}
!8179 = metadata !{i32 2304, i32 0, metadata !4622, null}
!8180 = metadata !{i32 157, i32 0, metadata !4543, metadata !8179}
!8181 = metadata !{i32 158, i32 0, metadata !4543, metadata !8179}
!8182 = metadata !{i32 2312, i32 0, metadata !4622, null}
!8183 = metadata !{i32 2313, i32 0, metadata !4622, null}
!8184 = metadata !{i32 2314, i32 0, metadata !4622, null}
!8185 = metadata !{i32 2317, i32 0, metadata !4622, null}
!8186 = metadata !{i32 2318, i32 0, metadata !4622, null}
!8187 = metadata !{i32 2319, i32 0, metadata !4622, null}
!8188 = metadata !{i32 2321, i32 0, metadata !4622, null}
!8189 = metadata !{i32 2322, i32 0, metadata !4626, null}
!8190 = metadata !{i32 2324, i32 0, metadata !4626, null}
!8191 = metadata !{i32 2328, i32 0, metadata !4628, null}
!8192 = metadata !{i32 2331, i32 0, metadata !4628, null}
!8193 = metadata !{i32 2334, i32 0, metadata !4628, null}
!8194 = metadata !{i32 2335, i32 0, metadata !4628, null}
!8195 = metadata !{i32 2336, i32 0, metadata !4628, null}
!8196 = metadata !{i32 2337, i32 0, metadata !4628, null}
!8197 = metadata !{i32 2338, i32 0, metadata !4628, null}
!8198 = metadata !{i32 2339, i32 0, metadata !4628, null}
!8199 = metadata !{i32 2340, i32 0, metadata !4628, null}
!8200 = metadata !{i32 2341, i32 0, metadata !4628, null}
!8201 = metadata !{i32 2342, i32 0, metadata !4628, null}
!8202 = metadata !{i32 2343, i32 0, metadata !4628, null}
!8203 = metadata !{i32 2344, i32 0, metadata !4628, null}
!8204 = metadata !{i32 2345, i32 0, metadata !4628, null}
!8205 = metadata !{i32 2346, i32 0, metadata !4628, null}
!8206 = metadata !{i32 2347, i32 0, metadata !4628, null}
!8207 = metadata !{i32 2348, i32 0, metadata !4628, null}
!8208 = metadata !{i32 2349, i32 0, metadata !4628, null}
!8209 = metadata !{i32 2350, i32 0, metadata !4628, null}
!8210 = metadata !{i32 2351, i32 0, metadata !4628, null}
!8211 = metadata !{i32 2352, i32 0, metadata !4628, null}
!8212 = metadata !{i32 2353, i32 0, metadata !4628, null}
!8213 = metadata !{i32 2354, i32 0, metadata !4628, null}
!8214 = metadata !{i32 2355, i32 0, metadata !4628, null}
!8215 = metadata !{i32 2356, i32 0, metadata !4628, null}
!8216 = metadata !{i32 2357, i32 0, metadata !4628, null}
!8217 = metadata !{i32 2358, i32 0, metadata !4628, null}
!8218 = metadata !{i32 2360, i32 0, metadata !4628, null}
!8219 = metadata !{i32 2361, i32 0, metadata !4628, null}
!8220 = metadata !{i32 2366, i32 0, metadata !4626, null}
!8221 = metadata !{i32 2367, i32 0, metadata !4626, null}
!8222 = metadata !{i32 2370, i32 0, metadata !4626, null}
!8223 = metadata !{i32 2371, i32 0, metadata !4626, null}
!8224 = metadata !{i32 2376, i32 0, metadata !4626, null}
!8225 = metadata !{i32 2377, i32 0, metadata !4626, null}
!8226 = metadata !{i32 2380, i32 0, metadata !4626, null}
!8227 = metadata !{i32 2381, i32 0, metadata !4626, null}
!8228 = metadata !{i32 2386, i32 0, metadata !4626, null}
!8229 = metadata !{i32 2387, i32 0, metadata !4626, null}
!8230 = metadata !{i32 2390, i32 0, metadata !4626, null}
!8231 = metadata !{i32 2391, i32 0, metadata !4626, null}
!8232 = metadata !{i32 2396, i32 0, metadata !4646, null}
!8233 = metadata !{i32 2397, i32 0, metadata !4646, null}
!8234 = metadata !{i32 2398, i32 0, metadata !4646, null}
!8235 = metadata !{i32 2399, i32 0, metadata !4646, null}
!8236 = metadata !{i32 2402, i32 0, metadata !4646, null}
!8237 = metadata !{i32 2403, i32 0, metadata !4646, null}
!8238 = metadata !{i32 2408, i32 0, metadata !4626, null}
!8239 = metadata !{i32 2409, i32 0, metadata !4626, null}
!8240 = metadata !{i32 2410, i32 0, metadata !4626, null}
!8241 = metadata !{i32 2411, i32 0, metadata !4626, null}
!8242 = metadata !{i32 2413, i32 0, metadata !4626, null}
!8243 = metadata !{i32 2414, i32 0, metadata !4626, null}
!8244 = metadata !{i32 2418, i32 0, metadata !4656, null}
!8245 = metadata !{i32 2419, i32 0, metadata !4656, null}
!8246 = metadata !{i32 2420, i32 0, metadata !4656, null}
!8247 = metadata !{i32 2421, i32 0, metadata !4656, null}
!8248 = metadata !{i32 2422, i32 0, metadata !4656, null}
!8249 = metadata !{i32 2426, i32 0, metadata !4656, null}
!8250 = metadata !{i32 2428, i32 0, metadata !4656, null}
!8251 = metadata !{i32 2429, i32 0, metadata !4656, null}
!8252 = metadata !{i32 2433, i32 0, metadata !4626, null}
!8253 = metadata !{i32 2434, i32 0, metadata !4626, null}
!8254 = metadata !{i32 2435, i32 0, metadata !4626, null}
!8255 = metadata !{i32 2439, i32 0, metadata !4658, null}
!8256 = metadata !{i32 2440, i32 0, metadata !4658, null}
!8257 = metadata !{i32 2447, i32 0, metadata !4699, null}
!8258 = metadata !{i32 2451, i32 0, metadata !4703, null}
!8259 = metadata !{i32 2453, i32 0, metadata !4703, null}
!8260 = metadata !{i32 2459, i32 0, metadata !4705, null}
!8261 = metadata !{i32 2465, i32 0, metadata !4713, null}
!8262 = metadata !{i32 2470, i32 0, metadata !4626, null}
!8263 = metadata !{i32 2471, i32 0, metadata !4626, null}
!8264 = metadata !{i32 2472, i32 0, metadata !4626, null}
!8265 = metadata !{i32 2475, i32 0, metadata !4731, null}
!8266 = metadata !{i32 2476, i32 0, metadata !4731, null}
!8267 = metadata !{i32 2477, i32 0, metadata !4731, null}
!8268 = metadata !{i32 2150, i32 0, metadata !8269, null}
!8269 = metadata !{i32 589835, metadata !3269, i32 2149, i32 0, metadata !3106, i32 32} ; [ DW_TAG_lexical_block ]
!8270 = metadata !{i32 2151, i32 0, metadata !8269, null}
!8271 = metadata !{i32 2130, i32 0, metadata !4735, null}
!8272 = metadata !{i32 2131, i32 0, metadata !4735, null}
!8273 = metadata !{i32 2133, i32 0, metadata !4735, null}
!8274 = metadata !{i32 2134, i32 0, metadata !4735, null}
!8275 = metadata !{i32 2135, i32 0, metadata !4735, null}
!8276 = metadata !{i32 2138, i32 0, metadata !4735, null}
!8277 = metadata !{i32 2141, i32 0, metadata !4735, null}
!8278 = metadata !{i32 2142, i32 0, metadata !4735, null}
!8279 = metadata !{i32 2143, i32 0, metadata !4735, null}
!8280 = metadata !{i32 2145, i32 0, metadata !4735, null}
!8281 = metadata !{i32 1885, i32 0, metadata !4742, null}
!8282 = metadata !{i32 1889, i32 0, metadata !4742, null}
!8283 = metadata !{i32 1886, i32 0, metadata !4742, null}
!8284 = metadata !{i32 1887, i32 0, metadata !4742, null}
!8285 = metadata !{i32 1892, i32 0, metadata !4742, null}
!8286 = metadata !{i32 1896, i32 0, metadata !4742, null}
!8287 = metadata !{i32 1893, i32 0, metadata !4742, null}
!8288 = metadata !{i32 1894, i32 0, metadata !4742, null}
!8289 = metadata !{i32 1899, i32 0, metadata !4742, null}
!8290 = metadata !{i32 1903, i32 0, metadata !4742, null}
!8291 = metadata !{i32 1900, i32 0, metadata !4742, null}
!8292 = metadata !{i32 1901, i32 0, metadata !4742, null}
!8293 = metadata !{i32 1906, i32 0, metadata !4742, null}
!8294 = metadata !{i32 1907, i32 0, metadata !4742, null}
!8295 = metadata !{i32 1908, i32 0, metadata !4742, null}
!8296 = metadata !{i32 1911, i32 0, metadata !4742, null}
!8297 = metadata !{i32 1912, i32 0, metadata !4742, null}
!8298 = metadata !{i32 156, i32 0, metadata !4544, metadata !8299}
!8299 = metadata !{i32 1913, i32 0, metadata !4752, null}
!8300 = metadata !{i32 158, i32 0, metadata !4543, metadata !8299}
!8301 = metadata !{i32 1914, i32 0, metadata !4752, null}
!8302 = metadata !{i32 1915, i32 0, metadata !4752, null}
!8303 = metadata !{i32 1916, i32 0, metadata !4752, null}
!8304 = metadata !{i32 1917, i32 0, metadata !4752, null}
!8305 = metadata !{i32 1920, i32 0, metadata !4754, null}
!8306 = metadata !{i32 1923, i32 0, metadata !4754, null}
!8307 = metadata !{i32 1925, i32 0, metadata !4754, null}
!8308 = metadata !{i32 1926, i32 0, metadata !4754, null}
!8309 = metadata !{i32 1927, i32 0, metadata !4754, null}
!8310 = metadata !{i32 1928, i32 0, metadata !4754, null}
!8311 = metadata !{i32 1931, i32 0, metadata !4754, null}
!8312 = metadata !{i32 1933, i32 0, metadata !4754, null}
!8313 = metadata !{i32 1936, i32 0, metadata !4754, null}
!8314 = metadata !{i32 1941, i32 0, metadata !4752, null}
!8315 = metadata !{i32 1942, i32 0, metadata !4752, null}
!8316 = metadata !{i32 1943, i32 0, metadata !4752, null}
!8317 = metadata !{i32 1944, i32 0, metadata !4752, null}
!8318 = metadata !{i32 1949, i32 0, metadata !4742, null}
!8319 = metadata !{i32 1952, i32 0, metadata !4756, null}
!8320 = metadata !{i32 1954, i32 0, metadata !4756, null}
!8321 = metadata !{i32 1956, i32 0, metadata !4756, null}
!8322 = metadata !{i32 1959, i32 0, metadata !4756, null}
!8323 = metadata !{i32 1960, i32 0, metadata !4756, null}
!8324 = metadata !{i32 1961, i32 0, metadata !4756, null}
!8325 = metadata !{i32 1964, i32 0, metadata !4756, null}
!8326 = metadata !{i32 1967, i32 0, metadata !4756, null}
!8327 = metadata !{i32 156, i32 0, metadata !4544, metadata !8328}
!8328 = metadata !{i32 1968, i32 0, metadata !4759, null}
!8329 = metadata !{i32 158, i32 0, metadata !4543, metadata !8328}
!8330 = metadata !{i32 1969, i32 0, metadata !4759, null}
!8331 = metadata !{i32 1970, i32 0, metadata !4759, null}
!8332 = metadata !{i32 1971, i32 0, metadata !4759, null}
!8333 = metadata !{i32 1972, i32 0, metadata !4759, null}
!8334 = metadata !{i32 417, i32 0, metadata !4762, null}
!8335 = metadata !{i32 156, i32 0, metadata !4544, metadata !8336}
!8336 = metadata !{i32 419, i32 0, metadata !4762, null}
!8337 = metadata !{i32 157, i32 0, metadata !4543, metadata !8336}
!8338 = metadata !{i32 158, i32 0, metadata !4543, metadata !8336}
!8339 = metadata !{i32 428, i32 0, metadata !4762, null}
!8340 = metadata !{i32 429, i32 0, metadata !4762, null}
!8341 = metadata !{i32 430, i32 0, metadata !4762, null}
!8342 = metadata !{i32 433, i32 0, metadata !4762, null}
!8343 = metadata !{i32 434, i32 0, metadata !4762, null}
!8344 = metadata !{i32 435, i32 0, metadata !4762, null}
!8345 = metadata !{i32 436, i32 0, metadata !4762, null}
!8346 = metadata !{i32 439, i32 0, metadata !4762, null}
!8347 = metadata !{i32 445, i32 0, metadata !4762, null}
!8348 = metadata !{i32 450, i32 0, metadata !4762, null}
!8349 = metadata !{i32 452, i32 0, metadata !4762, null}
!8350 = metadata !{i32 156, i32 0, metadata !4544, metadata !8351}
!8351 = metadata !{i32 1732, i32 0, metadata !4767, null}
!8352 = metadata !{i32 157, i32 0, metadata !4543, metadata !8351}
!8353 = metadata !{i32 158, i32 0, metadata !4543, metadata !8351}
!8354 = metadata !{i32 1737, i32 0, metadata !4767, null}
!8355 = metadata !{i32 1738, i32 0, metadata !4767, null}
!8356 = metadata !{i32 1739, i32 0, metadata !4767, null}
!8357 = metadata !{i32 1744, i32 0, metadata !4767, null}
!8358 = metadata !{i32 1748, i32 0, metadata !4767, null}
!8359 = metadata !{i32 1749, i32 0, metadata !4767, null}
!8360 = metadata !{i32 1743, i32 0, metadata !4767, null}
!8361 = metadata !{i32 1751, i32 0, metadata !4767, null}
!8362 = metadata !{i32 1752, i32 0, metadata !4767, null}
!8363 = metadata !{i32 1753, i32 0, metadata !4767, null}
!8364 = metadata !{i32 1756, i32 0, metadata !4767, null}
!8365 = metadata !{i32 1757, i32 0, metadata !4767, null}
!8366 = metadata !{i32 1767, i32 0, metadata !4767, null}
!8367 = metadata !{i32 1769, i32 0, metadata !4767, null}
!8368 = metadata !{i32 1776, i32 0, metadata !4767, null}
!8369 = metadata !{i32 156, i32 0, metadata !4544, metadata !8370}
!8370 = metadata !{i32 1780, i32 0, metadata !4773, null}
!8371 = metadata !{i32 157, i32 0, metadata !4543, metadata !8370}
!8372 = metadata !{i32 158, i32 0, metadata !4543, metadata !8370}
!8373 = metadata !{i32 1781, i32 0, metadata !4773, null}
!8374 = metadata !{i32 1782, i32 0, metadata !4773, null}
!8375 = metadata !{i32 1783, i32 0, metadata !4773, null}
!8376 = metadata !{i32 1790, i32 0, metadata !4775, null}
!8377 = metadata !{i32 1789, i32 0, metadata !4775, null}
!8378 = metadata !{i32 1792, i32 0, metadata !4775, null}
!8379 = metadata !{i32 1793, i32 0, metadata !4775, null}
!8380 = metadata !{i32 1794, i32 0, metadata !4775, null}
!8381 = metadata !{i32 1796, i32 0, metadata !4775, null}
!8382 = metadata !{i32 156, i32 0, metadata !4544, metadata !8383}
!8383 = metadata !{i32 1368, i32 0, metadata !4780, null}
!8384 = metadata !{i32 157, i32 0, metadata !4543, metadata !8383}
!8385 = metadata !{i32 158, i32 0, metadata !4543, metadata !8383}
!8386 = metadata !{i32 1370, i32 0, metadata !4780, null}
!8387 = metadata !{i32 1371, i32 0, metadata !4780, null}
!8388 = metadata !{i32 1372, i32 0, metadata !4780, null}
!8389 = metadata !{i32 1378, i32 0, metadata !4780, null}
!8390 = metadata !{i32 1379, i32 0, metadata !4780, null}
!8391 = metadata !{i32 1380, i32 0, metadata !4780, null}
!8392 = metadata !{i32 1381, i32 0, metadata !4780, null}
!8393 = metadata !{i32 1385, i32 0, metadata !4780, null}
!8394 = metadata !{i32 1390, i32 0, metadata !4782, null}
!8395 = metadata !{i32 1391, i32 0, metadata !4782, null}
!8396 = metadata !{i32 1396, i32 0, metadata !4782, null}
!8397 = metadata !{i32 1393, i32 0, metadata !4782, null}
!8398 = metadata !{i32 1394, i32 0, metadata !4782, null}
!8399 = metadata !{i32 1397, i32 0, metadata !4786, null}
!8400 = metadata !{i32 1398, i32 0, metadata !4786, null}
!8401 = metadata !{i32 1399, i32 0, metadata !4786, null}
!8402 = metadata !{i32 1400, i32 0, metadata !4786, null}
!8403 = metadata !{i32 1401, i32 0, metadata !4786, null}
!8404 = metadata !{i32 1402, i32 0, metadata !4786, null}
!8405 = metadata !{i32 1403, i32 0, metadata !4786, null}
!8406 = metadata !{i32 1409, i32 0, metadata !4782, null}
!8407 = metadata !{i32 1410, i32 0, metadata !4782, null}
!8408 = metadata !{i32 1411, i32 0, metadata !4782, null}
!8409 = metadata !{i32 1412, i32 0, metadata !4782, null}
!8410 = metadata !{i32 1413, i32 0, metadata !4782, null}
!8411 = metadata !{i32 1414, i32 0, metadata !4782, null}
!8412 = metadata !{i32 1415, i32 0, metadata !4782, null}
!8413 = metadata !{i32 1416, i32 0, metadata !4782, null}
!8414 = metadata !{i32 1418, i32 0, metadata !4782, null}
!8415 = metadata !{i32 1421, i32 0, metadata !4788, null}
!8416 = metadata !{i32 1432, i32 0, metadata !4788, null}
!8417 = metadata !{i32 1435, i32 0, metadata !4788, null}
!8418 = metadata !{i32 1436, i32 0, metadata !4788, null}
!8419 = metadata !{i32 1438, i32 0, metadata !4788, null}
!8420 = metadata !{i32 1439, i32 0, metadata !4788, null}
!8421 = metadata !{i32 1440, i32 0, metadata !4788, null}
!8422 = metadata !{i32 1444, i32 0, metadata !4792, null}
!8423 = metadata !{i32 1448, i32 0, metadata !4792, null}
!8424 = metadata !{i32 1449, i32 0, metadata !4794, null}
!8425 = metadata !{i32 1450, i32 0, metadata !4794, null}
!8426 = metadata !{i32 1451, i32 0, metadata !4794, null}
!8427 = metadata !{i32 2235, i32 0, metadata !4799, null}
!8428 = metadata !{i32 2244, i32 0, metadata !4801, null}
!8429 = metadata !{i32 2237, i32 0, metadata !4801, null}
!8430 = metadata !{i32 2238, i32 0, metadata !4801, null}
!8431 = metadata !{i32 2240, i32 0, metadata !4801, null}
!8432 = metadata !{i32 2245, i32 0, metadata !4801, null}
!8433 = metadata !{i32 2246, i32 0, metadata !4801, null}
!8434 = metadata !{i32 2248, i32 0, metadata !4801, null}
!8435 = metadata !{i32 2249, i32 0, metadata !4801, null}
!8436 = metadata !{i32 2255, i32 0, metadata !4801, null}
!8437 = metadata !{i32 2256, i32 0, metadata !4801, null}
!8438 = metadata !{i32 2258, i32 0, metadata !4801, null}
!8439 = metadata !{i32 2259, i32 0, metadata !4801, null}
!8440 = metadata !{i32 2261, i32 0, metadata !4801, null}
!8441 = metadata !{i32 2262, i32 0, metadata !4801, null}
!8442 = metadata !{i32 2264, i32 0, metadata !4801, null}
!8443 = metadata !{i32 2265, i32 0, metadata !4801, null}
!8444 = metadata !{i32 2266, i32 0, metadata !4801, null}
!8445 = metadata !{i32 2236, i32 0, metadata !4799, null}
!8446 = metadata !{i32 2271, i32 0, metadata !4803, null}
!8447 = metadata !{i32 2272, i32 0, metadata !4803, null}
!8448 = metadata !{i32 2273, i32 0, metadata !4803, null}
!8449 = metadata !{i32 2274, i32 0, metadata !4803, null}
!8450 = metadata !{i32 2269, i32 0, metadata !4799, null}
!8451 = metadata !{i32 156, i32 0, metadata !4544, metadata !8452}
!8452 = metadata !{i32 2281, i32 0, metadata !4808, null}
!8453 = metadata !{i32 157, i32 0, metadata !4543, metadata !8452}
!8454 = metadata !{i32 158, i32 0, metadata !4543, metadata !8452}
!8455 = metadata !{i32 2282, i32 0, metadata !4808, null}
!8456 = metadata !{i32 2283, i32 0, metadata !4808, null}
!8457 = metadata !{i32 2284, i32 0, metadata !4808, null}
!8458 = metadata !{i32 2287, i32 0, metadata !4808, null}
!8459 = metadata !{i32 2290, i32 0, metadata !4810, null}
!8460 = metadata !{i32 2292, i32 0, metadata !4810, null}
!8461 = metadata !{i32 2293, i32 0, metadata !4810, null}
!8462 = metadata !{i32 2294, i32 0, metadata !4810, null}
!8463 = metadata !{i32 2296, i32 0, metadata !4810, null}
!8464 = metadata !{i32 2299, i32 0, metadata !4808, null}
!8465 = metadata !{i32 156, i32 0, metadata !4544, metadata !8466}
!8466 = metadata !{i32 1029, i32 0, metadata !4814, null}
!8467 = metadata !{i32 157, i32 0, metadata !4543, metadata !8466}
!8468 = metadata !{i32 158, i32 0, metadata !4543, metadata !8466}
!8469 = metadata !{i32 1038, i32 0, metadata !4814, null}
!8470 = metadata !{i32 1039, i32 0, metadata !4814, null}
!8471 = metadata !{i32 1040, i32 0, metadata !4814, null}
!8472 = metadata !{i32 1043, i32 0, metadata !4814, null}
!8473 = metadata !{i32 1045, i32 0, metadata !4816, null}
!8474 = metadata !{i32 1049, i32 0, metadata !4816, null}
!8475 = metadata !{i32 1050, i32 0, metadata !4816, null}
!8476 = metadata !{i32 1061, i32 0, metadata !4814, null}
!8477 = metadata !{i32 1062, i32 0, metadata !4814, null}
!8478 = metadata !{i32 2182, i32 0, metadata !4822, null}
!8479 = metadata !{i32 2183, i32 0, metadata !4822, null}
!8480 = metadata !{i32 2186, i32 0, metadata !4821, null}
!8481 = metadata !{i32 2187, i32 0, metadata !4821, null}
!8482 = metadata !{i32 2190, i32 0, metadata !4821, null}
!8483 = metadata !{i32 2191, i32 0, metadata !4824, null}
!8484 = metadata !{i32 2192, i32 0, metadata !4824, null}
!8485 = metadata !{i32 2193, i32 0, metadata !4824, null}
!8486 = metadata !{i32 2194, i32 0, metadata !4824, null}
!8487 = metadata !{i32 2195, i32 0, metadata !4824, null}
!8488 = metadata !{i32 2196, i32 0, metadata !4824, null}
!8489 = metadata !{i32 2201, i32 0, metadata !4826, null}
!8490 = metadata !{i32 2202, i32 0, metadata !4826, null}
!8491 = metadata !{i32 2203, i32 0, metadata !4826, null}
!8492 = metadata !{i32 2204, i32 0, metadata !4826, null}
!8493 = metadata !{i32 2209, i32 0, metadata !4828, null}
!8494 = metadata !{i32 2216, i32 0, metadata !4828, null}
!8495 = metadata !{i32 2217, i32 0, metadata !4828, null}
!8496 = metadata !{i32 2218, i32 0, metadata !4828, null}
!8497 = metadata !{i32 2211, i32 0, metadata !4828, null}
!8498 = metadata !{i32 2220, i32 0, metadata !4828, null}
!8499 = metadata !{i32 2221, i32 0, metadata !4828, null}
!8500 = metadata !{i32 2222, i32 0, metadata !4828, null}
!8501 = metadata !{i32 2223, i32 0, metadata !4828, null}
!8502 = metadata !{i32 2224, i32 0, metadata !4828, null}
!8503 = metadata !{i32 2208, i32 0, metadata !4828, null}
!8504 = metadata !{i32 2188, i32 0, metadata !4821, null}
!8505 = metadata !{i32 910, i32 0, metadata !8506, null}
!8506 = metadata !{i32 589835, metadata !3328, i32 909, i32 0, metadata !3106, i32 61} ; [ DW_TAG_lexical_block ]
!8507 = metadata !{i32 911, i32 0, metadata !8506, null}
!8508 = metadata !{i32 2130, i32 0, metadata !4735, metadata !8509}
!8509 = metadata !{i32 2159, i32 0, metadata !4835, null}
!8510 = metadata !{i32 2131, i32 0, metadata !4735, metadata !8509}
!8511 = metadata !{i32 2133, i32 0, metadata !4735, metadata !8509}
!8512 = metadata !{i32 2134, i32 0, metadata !4735, metadata !8509}
!8513 = metadata !{i32 2138, i32 0, metadata !4735, metadata !8509}
!8514 = metadata !{i32 2141, i32 0, metadata !4735, metadata !8509}
!8515 = metadata !{i32 2142, i32 0, metadata !4735, metadata !8509}
!8516 = metadata !{i32 2143, i32 0, metadata !4735, metadata !8509}
!8517 = metadata !{i32 2160, i32 0, metadata !4835, null}
!8518 = metadata !{i32 2161, i32 0, metadata !4835, null}
!8519 = metadata !{i32 2131, i32 0, metadata !4735, metadata !8520}
!8520 = metadata !{i32 2163, i32 0, metadata !4835, null}
!8521 = metadata !{i32 2130, i32 0, metadata !4735, metadata !8520}
!8522 = metadata !{i32 2133, i32 0, metadata !4735, metadata !8520}
!8523 = metadata !{i32 2134, i32 0, metadata !4735, metadata !8520}
!8524 = metadata !{i32 2138, i32 0, metadata !4735, metadata !8520}
!8525 = metadata !{i32 2141, i32 0, metadata !4735, metadata !8520}
!8526 = metadata !{i32 2142, i32 0, metadata !4735, metadata !8520}
!8527 = metadata !{i32 2143, i32 0, metadata !4735, metadata !8520}
!8528 = metadata !{i32 2164, i32 0, metadata !4835, null}
!8529 = metadata !{i32 2165, i32 0, metadata !4835, null}
!8530 = metadata !{i32 2168, i32 0, metadata !4835, null}
!8531 = metadata !{i32 2169, i32 0, metadata !4835, null}
!8532 = metadata !{i32 2170, i32 0, metadata !4835, null}
!8533 = metadata !{i32 2171, i32 0, metadata !4835, null}
!8534 = metadata !{i32 2174, i32 0, metadata !4835, null}
!8535 = metadata !{i32 2175, i32 0, metadata !4835, null}
!8536 = metadata !{i32 2176, i32 0, metadata !4835, null}
!8537 = metadata !{i32 2177, i32 0, metadata !4835, null}
!8538 = metadata !{i32 64, i32 0, metadata !4854, null}
!8539 = metadata !{i32 67, i32 0, metadata !4854, null}
!8540 = metadata !{i32 68, i32 0, metadata !4854, null}
!8541 = metadata !{i32 69, i32 0, metadata !4854, null}
!8542 = metadata !{i32 71, i32 0, metadata !4854, null}
!8543 = metadata !{i32 72, i32 0, metadata !4854, null}
!8544 = metadata !{i32 73, i32 0, metadata !4857, null}
!8545 = metadata !{i32 74, i32 0, metadata !4857, null}
!8546 = metadata !{i32 76, i32 0, metadata !4857, null}
!8547 = metadata !{i32 79, i32 0, metadata !4854, null}
!8548 = metadata !{i32 82, i32 0, metadata !4859, null}
!8549 = metadata !{i32 83, i32 0, metadata !4859, null}
!8550 = metadata !{i32 86, i32 0, metadata !4859, null}
!8551 = metadata !{i32 90, i32 0, metadata !4862, null}
!8552 = metadata !{i32 91, i32 0, metadata !4862, null}
!8553 = metadata !{i32 91, i32 0, metadata !4864, null}
!8554 = metadata !{i32 93, i32 0, metadata !4862, null}
!8555 = metadata !{i32 97, i32 0, metadata !4872, null}
!8556 = metadata !{i32 99, i32 0, metadata !4872, null}
!8557 = metadata !{i32 106, i32 0, metadata !4876, null}
!8558 = metadata !{i32 107, i32 0, metadata !4876, null}
!8559 = metadata !{i32 109, i32 0, metadata !4876, null}
!8560 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8561}
!8561 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8562}
!8562 = metadata !{i32 113, i32 0, metadata !4872, null}
!8563 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8561}
!8564 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8562}
!8565 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8562}
!8566 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8562}
!8567 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8562}
!8568 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8562}
!8569 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8562}
!8570 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8562}
!8571 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8562}
!8572 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8562}
!8573 = metadata !{i32 114, i32 0, metadata !4872, null}
!8574 = metadata !{i32 115, i32 0, metadata !4872, null}
!8575 = metadata !{i32 115, i32 0, metadata !4879, null}
!8576 = metadata !{i32 116, i32 0, metadata !4872, null}
!8577 = metadata !{i32 119, i32 0, metadata !4872, null}
!8578 = metadata !{i32 120, i32 0, metadata !4872, null}
!8579 = metadata !{i32 126, i32 0, metadata !4872, null}
!8580 = metadata !{i32 127, i32 0, metadata !4872, null}
!8581 = metadata !{i32 133, i32 0, metadata !4859, null}
!8582 = metadata !{i32 134, i32 0, metadata !4859, null}
!8583 = metadata !{i32 65, i32 0, metadata !4854, null}
!8584 = metadata !{i32 57, i32 0, metadata !8585, metadata !8586}
!8585 = metadata !{i32 589835, metadata !3345, i32 56, i32 0, metadata !3106, i32 76} ; [ DW_TAG_lexical_block ]
!8586 = metadata !{i32 2109, i32 0, metadata !4885, null}
!8587 = metadata !{i32 2111, i32 0, metadata !4885, null}
!8588 = metadata !{i32 2113, i32 0, metadata !4885, null}
!8589 = metadata !{i32 2114, i32 0, metadata !4885, null}
!8590 = metadata !{i32 2115, i32 0, metadata !4885, null}
!8591 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8592}
!8592 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8593}
!8593 = metadata !{i32 2118, i32 0, metadata !4885, null}
!8594 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8592}
!8595 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8593}
!8596 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8593}
!8597 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8593}
!8598 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8593}
!8599 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8593}
!8600 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8593}
!8601 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8593}
!8602 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8593}
!8603 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8593}
!8604 = metadata !{i32 2119, i32 0, metadata !4885, null}
!8605 = metadata !{i32 2120, i32 0, metadata !4885, null}
!8606 = metadata !{i32 57, i32 0, metadata !8585, metadata !8607}
!8607 = metadata !{i32 1843, i32 0, metadata !4891, null}
!8608 = metadata !{i32 1844, i32 0, metadata !4891, null}
!8609 = metadata !{i32 1847, i32 0, metadata !4891, null}
!8610 = metadata !{i32 1848, i32 0, metadata !4891, null}
!8611 = metadata !{i32 1849, i32 0, metadata !4891, null}
!8612 = metadata !{i32 1850, i32 0, metadata !4891, null}
!8613 = metadata !{i32 1851, i32 0, metadata !4891, null}
!8614 = metadata !{i32 1852, i32 0, metadata !4891, null}
!8615 = metadata !{i32 1853, i32 0, metadata !4891, null}
!8616 = metadata !{i32 1855, i32 0, metadata !4891, null}
!8617 = metadata !{i32 1856, i32 0, metadata !4891, null}
!8618 = metadata !{i32 1859, i32 0, metadata !4893, null}
!8619 = metadata !{i32 1860, i32 0, metadata !4893, null}
!8620 = metadata !{i32 1861, i32 0, metadata !4893, null}
!8621 = metadata !{i32 1862, i32 0, metadata !4893, null}
!8622 = metadata !{i32 57, i32 0, metadata !8585, metadata !8623}
!8623 = metadata !{i32 2091, i32 0, metadata !4897, null}
!8624 = metadata !{i32 2093, i32 0, metadata !4897, null}
!8625 = metadata !{i32 2094, i32 0, metadata !4897, null}
!8626 = metadata !{i32 2095, i32 0, metadata !4897, null}
!8627 = metadata !{i32 2096, i32 0, metadata !4897, null}
!8628 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8629}
!8629 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8630}
!8630 = metadata !{i32 2101, i32 0, metadata !4897, null}
!8631 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8629}
!8632 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8630}
!8633 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8630}
!8634 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8630}
!8635 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8630}
!8636 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8630}
!8637 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8630}
!8638 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8630}
!8639 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8630}
!8640 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8630}
!8641 = metadata !{i32 2102, i32 0, metadata !4897, null}
!8642 = metadata !{i32 2103, i32 0, metadata !4897, null}
!8643 = metadata !{i32 57, i32 0, metadata !8585, metadata !8644}
!8644 = metadata !{i32 1821, i32 0, metadata !4901, null}
!8645 = metadata !{i32 1822, i32 0, metadata !4901, null}
!8646 = metadata !{i32 1824, i32 0, metadata !4901, null}
!8647 = metadata !{i32 1825, i32 0, metadata !4901, null}
!8648 = metadata !{i32 1826, i32 0, metadata !4901, null}
!8649 = metadata !{i32 1827, i32 0, metadata !4901, null}
!8650 = metadata !{i32 1828, i32 0, metadata !4901, null}
!8651 = metadata !{i32 1829, i32 0, metadata !4901, null}
!8652 = metadata !{i32 1831, i32 0, metadata !4901, null}
!8653 = metadata !{i32 1832, i32 0, metadata !4901, null}
!8654 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8655}
!8655 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8656}
!8656 = metadata !{i32 1835, i32 0, metadata !4903, null}
!8657 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8655}
!8658 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8656}
!8659 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8656}
!8660 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8656}
!8661 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8656}
!8662 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8656}
!8663 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8656}
!8664 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8656}
!8665 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8656}
!8666 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8656}
!8667 = metadata !{i32 1836, i32 0, metadata !4903, null}
!8668 = metadata !{i32 1837, i32 0, metadata !4903, null}
!8669 = metadata !{i32 57, i32 0, metadata !8585, metadata !8670}
!8670 = metadata !{i32 1802, i32 0, metadata !4906, null}
!8671 = metadata !{i32 1803, i32 0, metadata !4906, null}
!8672 = metadata !{i32 1805, i32 0, metadata !4906, null}
!8673 = metadata !{i32 1806, i32 0, metadata !4906, null}
!8674 = metadata !{i32 1807, i32 0, metadata !4906, null}
!8675 = metadata !{i32 1809, i32 0, metadata !4906, null}
!8676 = metadata !{i32 1810, i32 0, metadata !4906, null}
!8677 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8678}
!8678 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8679}
!8679 = metadata !{i32 1813, i32 0, metadata !4908, null}
!8680 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8678}
!8681 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8679}
!8682 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8679}
!8683 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8679}
!8684 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8679}
!8685 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8679}
!8686 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8679}
!8687 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8679}
!8688 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8679}
!8689 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8679}
!8690 = metadata !{i32 1814, i32 0, metadata !4908, null}
!8691 = metadata !{i32 1815, i32 0, metadata !4908, null}
!8692 = metadata !{i32 57, i32 0, metadata !8585, metadata !8693}
!8693 = metadata !{i32 1679, i32 0, metadata !4912, null}
!8694 = metadata !{i32 1680, i32 0, metadata !4912, null}
!8695 = metadata !{i32 1682, i32 0, metadata !4912, null}
!8696 = metadata !{i32 1683, i32 0, metadata !4912, null}
!8697 = metadata !{i32 1684, i32 0, metadata !4912, null}
!8698 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8699}
!8699 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8700}
!8700 = metadata !{i32 1688, i32 0, metadata !4914, null}
!8701 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8699}
!8702 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8700}
!8703 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8700}
!8704 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8700}
!8705 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8700}
!8706 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8700}
!8707 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8700}
!8708 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8700}
!8709 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8700}
!8710 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8700}
!8711 = metadata !{i32 1689, i32 0, metadata !4914, null}
!8712 = metadata !{i32 1690, i32 0, metadata !4914, null}
!8713 = metadata !{i32 156, i32 0, metadata !4544, metadata !8714}
!8714 = metadata !{i32 1234, i32 0, metadata !4919, null}
!8715 = metadata !{i32 157, i32 0, metadata !4543, metadata !8714}
!8716 = metadata !{i32 158, i32 0, metadata !4543, metadata !8714}
!8717 = metadata !{i32 1236, i32 0, metadata !4919, null}
!8718 = metadata !{i32 1237, i32 0, metadata !4919, null}
!8719 = metadata !{i32 1238, i32 0, metadata !4919, null}
!8720 = metadata !{i32 1239, i32 0, metadata !4919, null}
!8721 = metadata !{i32 1247, i32 0, metadata !4919, null}
!8722 = metadata !{i32 1248, i32 0, metadata !4919, null}
!8723 = metadata !{i32 1249, i32 0, metadata !4919, null}
!8724 = metadata !{i32 1251, i32 0, metadata !4919, null}
!8725 = metadata !{i32 1252, i32 0, metadata !4919, null}
!8726 = metadata !{i32 1253, i32 0, metadata !4919, null}
!8727 = metadata !{i32 1256, i32 0, metadata !4919, null}
!8728 = metadata !{i32 1259, i32 0, metadata !4919, null}
!8729 = metadata !{i32 1260, i32 0, metadata !4919, null}
!8730 = metadata !{i32 1261, i32 0, metadata !4919, null}
!8731 = metadata !{i32 1262, i32 0, metadata !4919, null}
!8732 = metadata !{i32 1305, i32 0, metadata !4924, null}
!8733 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8734}
!8734 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8732}
!8735 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8734}
!8736 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8732}
!8737 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8732}
!8738 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8732}
!8739 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8732}
!8740 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8732}
!8741 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8732}
!8742 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8732}
!8743 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8732}
!8744 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8732}
!8745 = metadata !{i32 1307, i32 0, metadata !4924, null}
!8746 = metadata !{i32 1315, i32 0, metadata !4924, null}
!8747 = metadata !{i32 1318, i32 0, metadata !4919, null}
!8748 = metadata !{i32 1319, i32 0, metadata !4919, null}
!8749 = metadata !{i32 1320, i32 0, metadata !4919, null}
!8750 = metadata !{i32 1322, i32 0, metadata !4919, null}
!8751 = metadata !{i32 1324, i32 0, metadata !4919, null}
!8752 = metadata !{i32 57, i32 0, metadata !8585, metadata !8753}
!8753 = metadata !{i32 1210, i32 0, metadata !4928, null}
!8754 = metadata !{i32 1211, i32 0, metadata !4928, null}
!8755 = metadata !{i32 1212, i32 0, metadata !4928, null}
!8756 = metadata !{i32 1213, i32 0, metadata !4928, null}
!8757 = metadata !{i32 1214, i32 0, metadata !4928, null}
!8758 = metadata !{i32 57, i32 0, metadata !8585, metadata !8759}
!8759 = metadata !{i32 1216, i32 0, metadata !4928, null}
!8760 = metadata !{i32 1217, i32 0, metadata !4928, null}
!8761 = metadata !{i32 1218, i32 0, metadata !4928, null}
!8762 = metadata !{i32 1219, i32 0, metadata !4928, null}
!8763 = metadata !{i32 1220, i32 0, metadata !4928, null}
!8764 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8765}
!8765 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8766}
!8766 = metadata !{i32 1222, i32 0, metadata !4928, null}
!8767 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8765}
!8768 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8766}
!8769 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8766}
!8770 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8766}
!8771 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8766}
!8772 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8766}
!8773 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8766}
!8774 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8766}
!8775 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8766}
!8776 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8766}
!8777 = metadata !{i32 1223, i32 0, metadata !4928, null}
!8778 = metadata !{i32 1224, i32 0, metadata !4928, null}
!8779 = metadata !{i32 57, i32 0, metadata !8585, metadata !8780}
!8780 = metadata !{i32 1191, i32 0, metadata !4933, null}
!8781 = metadata !{i32 1192, i32 0, metadata !4933, null}
!8782 = metadata !{i32 1193, i32 0, metadata !4933, null}
!8783 = metadata !{i32 1194, i32 0, metadata !4933, null}
!8784 = metadata !{i32 1195, i32 0, metadata !4933, null}
!8785 = metadata !{i32 57, i32 0, metadata !8585, metadata !8786}
!8786 = metadata !{i32 1197, i32 0, metadata !4933, null}
!8787 = metadata !{i32 1198, i32 0, metadata !4933, null}
!8788 = metadata !{i32 1199, i32 0, metadata !4933, null}
!8789 = metadata !{i32 1200, i32 0, metadata !4933, null}
!8790 = metadata !{i32 1201, i32 0, metadata !4933, null}
!8791 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8792}
!8792 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8793}
!8793 = metadata !{i32 1203, i32 0, metadata !4933, null}
!8794 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8792}
!8795 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8793}
!8796 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8793}
!8797 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8793}
!8798 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8793}
!8799 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8793}
!8800 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8793}
!8801 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8793}
!8802 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8793}
!8803 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8793}
!8804 = metadata !{i32 1204, i32 0, metadata !4933, null}
!8805 = metadata !{i32 1205, i32 0, metadata !4933, null}
!8806 = metadata !{i32 57, i32 0, metadata !8585, metadata !8807}
!8807 = metadata !{i32 1140, i32 0, metadata !4939, null}
!8808 = metadata !{i32 1141, i32 0, metadata !4939, null}
!8809 = metadata !{i32 1142, i32 0, metadata !4939, null}
!8810 = metadata !{i32 1143, i32 0, metadata !4939, null}
!8811 = metadata !{i32 1144, i32 0, metadata !4939, null}
!8812 = metadata !{i32 156, i32 0, metadata !4544, metadata !8813}
!8813 = metadata !{i32 1146, i32 0, metadata !4939, null}
!8814 = metadata !{i32 157, i32 0, metadata !4543, metadata !8813}
!8815 = metadata !{i32 158, i32 0, metadata !4543, metadata !8813}
!8816 = metadata !{i32 1147, i32 0, metadata !4939, null}
!8817 = metadata !{i32 1148, i32 0, metadata !4939, null}
!8818 = metadata !{i32 1149, i32 0, metadata !4939, null}
!8819 = metadata !{i32 1150, i32 0, metadata !4939, null}
!8820 = metadata !{i32 1152, i32 0, metadata !4939, null}
!8821 = metadata !{i32 1158, i32 0, metadata !4939, null}
!8822 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8823}
!8823 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8821}
!8824 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8823}
!8825 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8821}
!8826 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8821}
!8827 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8821}
!8828 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8821}
!8829 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8821}
!8830 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8821}
!8831 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8821}
!8832 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8821}
!8833 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8821}
!8834 = metadata !{i32 1159, i32 0, metadata !4939, null}
!8835 = metadata !{i32 1160, i32 0, metadata !4939, null}
!8836 = metadata !{i32 57, i32 0, metadata !8585, metadata !8837}
!8837 = metadata !{i32 1107, i32 0, metadata !4946, null}
!8838 = metadata !{i32 1108, i32 0, metadata !4946, null}
!8839 = metadata !{i32 1109, i32 0, metadata !4946, null}
!8840 = metadata !{i32 1110, i32 0, metadata !4946, null}
!8841 = metadata !{i32 1111, i32 0, metadata !4946, null}
!8842 = metadata !{i32 156, i32 0, metadata !4544, metadata !8843}
!8843 = metadata !{i32 1113, i32 0, metadata !4946, null}
!8844 = metadata !{i32 157, i32 0, metadata !4543, metadata !8843}
!8845 = metadata !{i32 158, i32 0, metadata !4543, metadata !8843}
!8846 = metadata !{i32 1114, i32 0, metadata !4946, null}
!8847 = metadata !{i32 1115, i32 0, metadata !4946, null}
!8848 = metadata !{i32 1116, i32 0, metadata !4946, null}
!8849 = metadata !{i32 1117, i32 0, metadata !4946, null}
!8850 = metadata !{i32 1125, i32 0, metadata !4946, null}
!8851 = metadata !{i32 1128, i32 0, metadata !4946, null}
!8852 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8853}
!8853 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8851}
!8854 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8853}
!8855 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8851}
!8856 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8851}
!8857 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8851}
!8858 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8851}
!8859 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8851}
!8860 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8851}
!8861 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8851}
!8862 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8851}
!8863 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8851}
!8864 = metadata !{i32 1129, i32 0, metadata !4946, null}
!8865 = metadata !{i32 1130, i32 0, metadata !4946, null}
!8866 = metadata !{i32 57, i32 0, metadata !8585, metadata !8867}
!8867 = metadata !{i32 1066, i32 0, metadata !4954, null}
!8868 = metadata !{i32 1067, i32 0, metadata !4954, null}
!8869 = metadata !{i32 1068, i32 0, metadata !4954, null}
!8870 = metadata !{i32 1069, i32 0, metadata !4954, null}
!8871 = metadata !{i32 1070, i32 0, metadata !4954, null}
!8872 = metadata !{i32 156, i32 0, metadata !4544, metadata !8873}
!8873 = metadata !{i32 1072, i32 0, metadata !4954, null}
!8874 = metadata !{i32 157, i32 0, metadata !4543, metadata !8873}
!8875 = metadata !{i32 158, i32 0, metadata !4543, metadata !8873}
!8876 = metadata !{i32 1074, i32 0, metadata !4954, null}
!8877 = metadata !{i32 1075, i32 0, metadata !4954, null}
!8878 = metadata !{i32 1076, i32 0, metadata !4954, null}
!8879 = metadata !{i32 1077, i32 0, metadata !4954, null}
!8880 = metadata !{i32 1085, i32 0, metadata !4954, null}
!8881 = metadata !{i32 1090, i32 0, metadata !4954, null}
!8882 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8883}
!8883 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8881}
!8884 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8883}
!8885 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8881}
!8886 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8881}
!8887 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8881}
!8888 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8881}
!8889 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8881}
!8890 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8881}
!8891 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8881}
!8892 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8881}
!8893 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8881}
!8894 = metadata !{i32 1096, i32 0, metadata !4954, null}
!8895 = metadata !{i32 1097, i32 0, metadata !4954, null}
!8896 = metadata !{i32 57, i32 0, metadata !8585, metadata !8897}
!8897 = metadata !{i32 1016, i32 0, metadata !4961, null}
!8898 = metadata !{i32 1018, i32 0, metadata !4961, null}
!8899 = metadata !{i32 978, i32 0, metadata !8158, metadata !8900}
!8900 = metadata !{i32 1019, i32 0, metadata !4961, null}
!8901 = metadata !{i32 979, i32 0, metadata !8158, metadata !8900}
!8902 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8903}
!8903 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8904}
!8904 = metadata !{i32 1021, i32 0, metadata !4963, null}
!8905 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8903}
!8906 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8904}
!8907 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8904}
!8908 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8904}
!8909 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8904}
!8910 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8904}
!8911 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8904}
!8912 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8904}
!8913 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8904}
!8914 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8904}
!8915 = metadata !{i32 1022, i32 0, metadata !4963, null}
!8916 = metadata !{i32 1023, i32 0, metadata !4963, null}
!8917 = metadata !{i32 57, i32 0, metadata !8585, metadata !8918}
!8918 = metadata !{i32 984, i32 0, metadata !4968, null}
!8919 = metadata !{i32 986, i32 0, metadata !4968, null}
!8920 = metadata !{i32 978, i32 0, metadata !8158, metadata !8921}
!8921 = metadata !{i32 987, i32 0, metadata !4968, null}
!8922 = metadata !{i32 979, i32 0, metadata !8158, metadata !8921}
!8923 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8924}
!8924 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8925}
!8925 = metadata !{i32 989, i32 0, metadata !4970, null}
!8926 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8924}
!8927 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8925}
!8928 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8925}
!8929 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8925}
!8930 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8925}
!8931 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8925}
!8932 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8925}
!8933 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8925}
!8934 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8925}
!8935 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8925}
!8936 = metadata !{i32 990, i32 0, metadata !4970, null}
!8937 = metadata !{i32 991, i32 0, metadata !4970, null}
!8938 = metadata !{i32 57, i32 0, metadata !8585, metadata !8939}
!8939 = metadata !{i32 794, i32 0, metadata !4973, null}
!8940 = metadata !{i32 796, i32 0, metadata !4973, null}
!8941 = metadata !{i32 798, i32 0, metadata !4973, null}
!8942 = metadata !{i32 799, i32 0, metadata !4973, null}
!8943 = metadata !{i32 800, i32 0, metadata !4973, null}
!8944 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8945}
!8945 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8946}
!8946 = metadata !{i32 804, i32 0, metadata !4975, null}
!8947 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8945}
!8948 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8946}
!8949 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8946}
!8950 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8946}
!8951 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8946}
!8952 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8946}
!8953 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8946}
!8954 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8946}
!8955 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8946}
!8956 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8946}
!8957 = metadata !{i32 805, i32 0, metadata !4975, null}
!8958 = metadata !{i32 806, i32 0, metadata !4975, null}
!8959 = metadata !{i32 57, i32 0, metadata !8585, metadata !8960}
!8960 = metadata !{i32 185, i32 0, metadata !4979, null}
!8961 = metadata !{i32 190, i32 0, metadata !4979, null}
!8962 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8963}
!8963 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8964}
!8964 = metadata !{i32 195, i32 0, metadata !4981, null}
!8965 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8963}
!8966 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8964}
!8967 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8964}
!8968 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8964}
!8969 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8964}
!8970 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8964}
!8971 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8964}
!8972 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8964}
!8973 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8964}
!8974 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8964}
!8975 = metadata !{i32 196, i32 0, metadata !4981, null}
!8976 = metadata !{i32 197, i32 0, metadata !4981, null}
!8977 = metadata !{i32 193, i32 0, metadata !4979, null}
!8978 = metadata !{i32 57, i32 0, metadata !8585, metadata !8979}
!8979 = metadata !{i32 167, i32 0, metadata !4985, null}
!8980 = metadata !{i32 172, i32 0, metadata !4985, null}
!8981 = metadata !{i32 2021, i32 0, metadata !4841, metadata !8982}
!8982 = metadata !{i32 2033, i32 0, metadata !4844, metadata !8983}
!8983 = metadata !{i32 177, i32 0, metadata !4987, null}
!8984 = metadata !{i32 2022, i32 0, metadata !4841, metadata !8982}
!8985 = metadata !{i32 2036, i32 0, metadata !4844, metadata !8983}
!8986 = metadata !{i32 2037, i32 0, metadata !4847, metadata !8983}
!8987 = metadata !{i32 2038, i32 0, metadata !4847, metadata !8983}
!8988 = metadata !{i32 2040, i32 0, metadata !4847, metadata !8983}
!8989 = metadata !{i32 2043, i32 0, metadata !4847, metadata !8983}
!8990 = metadata !{i32 2046, i32 0, metadata !4849, metadata !8983}
!8991 = metadata !{i32 2047, i32 0, metadata !4849, metadata !8983}
!8992 = metadata !{i32 2048, i32 0, metadata !4849, metadata !8983}
!8993 = metadata !{i32 2049, i32 0, metadata !4849, metadata !8983}
!8994 = metadata !{i32 178, i32 0, metadata !4987, null}
!8995 = metadata !{i32 179, i32 0, metadata !4987, null}
!8996 = metadata !{i32 175, i32 0, metadata !4985, null}
!8997 = metadata !{i32 1988, i32 0, metadata !4994, null}
!8998 = metadata !{i32 1990, i32 0, metadata !4994, null}
!8999 = metadata !{i32 1991, i32 0, metadata !4994, null}
!9000 = metadata !{i32 1992, i32 0, metadata !4994, null}
!9001 = metadata !{i32 1993, i32 0, metadata !4994, null}
!9002 = metadata !{i32 1996, i32 0, metadata !4994, null}
!9003 = metadata !{i32 1997, i32 0, metadata !4994, null}
!9004 = metadata !{i32 1999, i32 0, metadata !4994, null}
!9005 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9006}
!9006 = metadata !{i32 2002, i32 0, metadata !4994, null}
!9007 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9006}
!9008 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9009}
!9009 = metadata !{i32 2003, i32 0, metadata !4994, null}
!9010 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9009}
!9011 = metadata !{i32 2007, i32 0, metadata !4994, null}
!9012 = metadata !{i32 2008, i32 0, metadata !4994, null}
!9013 = metadata !{i32 2009, i32 0, metadata !4994, null}
!9014 = metadata !{i32 2010, i32 0, metadata !4994, null}
!9015 = metadata !{i32 2011, i32 0, metadata !4994, null}
!9016 = metadata !{i32 156, i32 0, metadata !4544, metadata !9017}
!9017 = metadata !{i32 1335, i32 0, metadata !4998, null}
!9018 = metadata !{i32 157, i32 0, metadata !4543, metadata !9017}
!9019 = metadata !{i32 158, i32 0, metadata !4543, metadata !9017}
!9020 = metadata !{i32 1337, i32 0, metadata !4998, null}
!9021 = metadata !{i32 1339, i32 0, metadata !4998, null}
!9022 = metadata !{i32 1340, i32 0, metadata !4998, null}
!9023 = metadata !{i32 1341, i32 0, metadata !4998, null}
!9024 = metadata !{i32 1344, i32 0, metadata !4998, null}
!9025 = metadata !{i32 1345, i32 0, metadata !4998, null}
!9026 = metadata !{i32 1346, i32 0, metadata !4998, null}
!9027 = metadata !{i32 1347, i32 0, metadata !4998, null}
!9028 = metadata !{i32 1350, i32 0, metadata !4998, null}
!9029 = metadata !{i32 1351, i32 0, metadata !4998, null}
!9030 = metadata !{i32 1352, i32 0, metadata !4998, null}
!9031 = metadata !{i32 1353, i32 0, metadata !4998, null}
!9032 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9033}
!9033 = metadata !{i32 1355, i32 0, metadata !5000, null}
!9034 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9033}
!9035 = metadata !{i32 1357, i32 0, metadata !5000, null}
!9036 = metadata !{i32 1361, i32 0, metadata !5000, null}
!9037 = metadata !{i32 1362, i32 0, metadata !5000, null}
!9038 = metadata !{i32 156, i32 0, metadata !4544, metadata !9039}
!9039 = metadata !{i32 687, i32 0, metadata !5005, null}
!9040 = metadata !{i32 157, i32 0, metadata !4543, metadata !9039}
!9041 = metadata !{i32 158, i32 0, metadata !4543, metadata !9039}
!9042 = metadata !{i32 159, i32 0, metadata !4543, metadata !9039}
!9043 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9044}
!9044 = metadata !{i32 688, i32 0, metadata !5005, null}
!9045 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9044}
!9046 = metadata !{i32 689, i32 0, metadata !5005, null}
!9047 = metadata !{i32 690, i32 0, metadata !5005, null}
!9048 = metadata !{i32 691, i32 0, metadata !5005, null}
!9049 = metadata !{i32 694, i32 0, metadata !5005, null}
!9050 = metadata !{i32 701, i32 0, metadata !5005, null}
!9051 = metadata !{i32 702, i32 0, metadata !5005, null}
!9052 = metadata !{i32 704, i32 0, metadata !5005, null}
!9053 = metadata !{i32 708, i32 0, metadata !5005, null}
!9054 = metadata !{i32 709, i32 0, metadata !5005, null}
!9055 = metadata !{i32 710, i32 0, metadata !5005, null}
!9056 = metadata !{i32 714, i32 0, metadata !5005, null}
!9057 = metadata !{i32 715, i32 0, metadata !5005, null}
!9058 = metadata !{i32 716, i32 0, metadata !5005, null}
!9059 = metadata !{i32 719, i32 0, metadata !5005, null}
!9060 = metadata !{i32 720, i32 0, metadata !5005, null}
!9061 = metadata !{i32 723, i32 0, metadata !5005, null}
!9062 = metadata !{i32 725, i32 0, metadata !5005, null}
!9063 = metadata !{i32 726, i32 0, metadata !5005, null}
!9064 = metadata !{i32 728, i32 0, metadata !5005, null}
!9065 = metadata !{i32 729, i32 0, metadata !5005, null}
!9066 = metadata !{i32 733, i32 0, metadata !5005, null}
!9067 = metadata !{i32 734, i32 0, metadata !5005, null}
!9068 = metadata !{i32 735, i32 0, metadata !5005, null}
!9069 = metadata !{i32 738, i32 0, metadata !5005, null}
!9070 = metadata !{i32 739, i32 0, metadata !5005, null}
!9071 = metadata !{i32 544, i32 0, metadata !5012, null}
!9072 = metadata !{i32 546, i32 0, metadata !5012, null}
!9073 = metadata !{i32 549, i32 0, metadata !5012, null}
!9074 = metadata !{i32 550, i32 0, metadata !5012, null}
!9075 = metadata !{i32 551, i32 0, metadata !5012, null}
!9076 = metadata !{i32 553, i32 0, metadata !5012, null}
!9077 = metadata !{i32 554, i32 0, metadata !5012, null}
!9078 = metadata !{i32 555, i32 0, metadata !5012, null}
!9079 = metadata !{i32 156, i32 0, metadata !4544, metadata !9080}
!9080 = metadata !{i32 558, i32 0, metadata !5012, null}
!9081 = metadata !{i32 157, i32 0, metadata !4543, metadata !9080}
!9082 = metadata !{i32 158, i32 0, metadata !4543, metadata !9080}
!9083 = metadata !{i32 560, i32 0, metadata !5012, null}
!9084 = metadata !{i32 561, i32 0, metadata !5012, null}
!9085 = metadata !{i32 562, i32 0, metadata !5012, null}
!9086 = metadata !{i32 565, i32 0, metadata !5012, null}
!9087 = metadata !{i32 566, i32 0, metadata !5012, null}
!9088 = metadata !{i32 567, i32 0, metadata !5012, null}
!9089 = metadata !{i32 568, i32 0, metadata !5012, null}
!9090 = metadata !{i32 571, i32 0, metadata !5012, null}
!9091 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9092}
!9092 = metadata !{i32 574, i32 0, metadata !5014, null}
!9093 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9092}
!9094 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9095}
!9095 = metadata !{i32 575, i32 0, metadata !5014, null}
!9096 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9095}
!9097 = metadata !{i32 579, i32 0, metadata !5014, null}
!9098 = metadata !{i32 581, i32 0, metadata !5014, null}
!9099 = metadata !{i32 583, i32 0, metadata !5014, null}
!9100 = metadata !{i32 584, i32 0, metadata !5014, null}
!9101 = metadata !{i32 585, i32 0, metadata !5014, null}
!9102 = metadata !{i32 588, i32 0, metadata !5014, null}
!9103 = metadata !{i32 591, i32 0, metadata !5012, null}
!9104 = metadata !{i32 594, i32 0, metadata !5012, null}
!9105 = metadata !{i32 595, i32 0, metadata !5012, null}
!9106 = metadata !{i32 598, i32 0, metadata !5012, null}
!9107 = metadata !{i32 599, i32 0, metadata !5012, null}
!9108 = metadata !{i32 547, i32 0, metadata !5012, null}
!9109 = metadata !{i32 459, i32 0, metadata !5019, null}
!9110 = metadata !{i32 461, i32 0, metadata !5019, null}
!9111 = metadata !{i32 464, i32 0, metadata !5019, null}
!9112 = metadata !{i32 465, i32 0, metadata !5019, null}
!9113 = metadata !{i32 466, i32 0, metadata !5019, null}
!9114 = metadata !{i32 156, i32 0, metadata !4544, metadata !9115}
!9115 = metadata !{i32 469, i32 0, metadata !5019, null}
!9116 = metadata !{i32 157, i32 0, metadata !4543, metadata !9115}
!9117 = metadata !{i32 158, i32 0, metadata !4543, metadata !9115}
!9118 = metadata !{i32 471, i32 0, metadata !5019, null}
!9119 = metadata !{i32 472, i32 0, metadata !5019, null}
!9120 = metadata !{i32 473, i32 0, metadata !5019, null}
!9121 = metadata !{i32 476, i32 0, metadata !5019, null}
!9122 = metadata !{i32 477, i32 0, metadata !5019, null}
!9123 = metadata !{i32 478, i32 0, metadata !5019, null}
!9124 = metadata !{i32 479, i32 0, metadata !5019, null}
!9125 = metadata !{i32 482, i32 0, metadata !5019, null}
!9126 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9127}
!9127 = metadata !{i32 485, i32 0, metadata !5021, null}
!9128 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9127}
!9129 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9130}
!9130 = metadata !{i32 486, i32 0, metadata !5021, null}
!9131 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9130}
!9132 = metadata !{i32 490, i32 0, metadata !5021, null}
!9133 = metadata !{i32 492, i32 0, metadata !5021, null}
!9134 = metadata !{i32 496, i32 0, metadata !5021, null}
!9135 = metadata !{i32 497, i32 0, metadata !5021, null}
!9136 = metadata !{i32 498, i32 0, metadata !5021, null}
!9137 = metadata !{i32 503, i32 0, metadata !5021, null}
!9138 = metadata !{i32 504, i32 0, metadata !5021, null}
!9139 = metadata !{i32 506, i32 0, metadata !5021, null}
!9140 = metadata !{i32 508, i32 0, metadata !5021, null}
!9141 = metadata !{i32 509, i32 0, metadata !5021, null}
!9142 = metadata !{i32 510, i32 0, metadata !5021, null}
!9143 = metadata !{i32 511, i32 0, metadata !5021, null}
!9144 = metadata !{i32 513, i32 0, metadata !5021, null}
!9145 = metadata !{i32 516, i32 0, metadata !5021, null}
!9146 = metadata !{i32 517, i32 0, metadata !5021, null}
!9147 = metadata !{i32 518, i32 0, metadata !5021, null}
!9148 = metadata !{i32 520, i32 0, metadata !5021, null}
!9149 = metadata !{i32 522, i32 0, metadata !5021, null}
!9150 = metadata !{i32 521, i32 0, metadata !5021, null}
!9151 = metadata !{i32 525, i32 0, metadata !5019, null}
!9152 = metadata !{i32 526, i32 0, metadata !5019, null}
!9153 = metadata !{i32 529, i32 0, metadata !5019, null}
!9154 = metadata !{i32 530, i32 0, metadata !5019, null}
!9155 = metadata !{i32 533, i32 0, metadata !5019, null}
!9156 = metadata !{i32 534, i32 0, metadata !5019, null}
!9157 = metadata !{i32 536, i32 0, metadata !5019, null}
!9158 = metadata !{i32 462, i32 0, metadata !5019, null}
!9159 = metadata !{i32 832, i32 0, metadata !5027, null}
!9160 = metadata !{i32 833, i32 0, metadata !5027, null}
!9161 = metadata !{i32 835, i32 0, metadata !5027, null}
!9162 = metadata !{i32 838, i32 0, metadata !5027, null}
!9163 = metadata !{i32 840, i32 0, metadata !5027, null}
!9164 = metadata !{i32 843, i32 0, metadata !5027, null}
!9165 = metadata !{i32 846, i32 0, metadata !5027, null}
!9166 = metadata !{i32 837, i32 0, metadata !5027, null}
!9167 = metadata !{i32 848, i32 0, metadata !5027, null}
!9168 = metadata !{i32 882, i32 0, metadata !5037, null}
!9169 = metadata !{i32 883, i32 0, metadata !5037, null}
!9170 = metadata !{i32 885, i32 0, metadata !5037, null}
!9171 = metadata !{i32 886, i32 0, metadata !5037, null}
!9172 = metadata !{i32 854, i32 0, metadata !5045, null}
!9173 = metadata !{i32 855, i32 0, metadata !5045, null}
!9174 = metadata !{i32 857, i32 0, metadata !5045, null}
!9175 = metadata !{i32 858, i32 0, metadata !5045, null}
!9176 = metadata !{i32 156, i32 0, metadata !4544, metadata !9177}
!9177 = metadata !{i32 953, i32 0, metadata !5059, null}
!9178 = metadata !{i32 157, i32 0, metadata !4543, metadata !9177}
!9179 = metadata !{i32 158, i32 0, metadata !4543, metadata !9177}
!9180 = metadata !{i32 955, i32 0, metadata !5059, null}
!9181 = metadata !{i32 956, i32 0, metadata !5059, null}
!9182 = metadata !{i32 957, i32 0, metadata !5059, null}
!9183 = metadata !{i32 960, i32 0, metadata !5059, null}
!9184 = metadata !{i32 961, i32 0, metadata !5059, null}
!9185 = metadata !{i32 962, i32 0, metadata !5059, null}
!9186 = metadata !{i32 963, i32 0, metadata !5059, null}
!9187 = metadata !{i32 964, i32 0, metadata !5059, null}
!9188 = metadata !{i32 967, i32 0, metadata !5059, null}
!9189 = metadata !{i32 916, i32 0, metadata !9190, metadata !9191}
!9190 = metadata !{i32 589835, metadata !3437, i32 915, i32 0, metadata !3106, i32 118} ; [ DW_TAG_lexical_block ]
!9191 = metadata !{i32 968, i32 0, metadata !5059, null}
!9192 = metadata !{i32 917, i32 0, metadata !9190, metadata !9191}
!9193 = metadata !{i32 918, i32 0, metadata !9190, metadata !9191}
!9194 = metadata !{i32 919, i32 0, metadata !9190, metadata !9191}
!9195 = metadata !{i32 921, i32 0, metadata !9190, metadata !9191}
!9196 = metadata !{i32 923, i32 0, metadata !9190, metadata !9191}
!9197 = metadata !{i32 924, i32 0, metadata !9190, metadata !9191}
!9198 = metadata !{i32 970, i32 0, metadata !5061, null}
!9199 = metadata !{i32 971, i32 0, metadata !5061, null}
!9200 = metadata !{i32 972, i32 0, metadata !5061, null}
!9201 = metadata !{i32 57, i32 0, metadata !8585, metadata !9202}
!9202 = metadata !{i32 931, i32 0, metadata !5065, null}
!9203 = metadata !{i32 933, i32 0, metadata !5065, null}
!9204 = metadata !{i32 934, i32 0, metadata !5065, null}
!9205 = metadata !{i32 935, i32 0, metadata !5065, null}
!9206 = metadata !{i32 936, i32 0, metadata !5065, null}
!9207 = metadata !{i32 937, i32 0, metadata !5065, null}
!9208 = metadata !{i32 940, i32 0, metadata !5065, null}
!9209 = metadata !{i32 916, i32 0, metadata !9190, metadata !9210}
!9210 = metadata !{i32 941, i32 0, metadata !5065, null}
!9211 = metadata !{i32 917, i32 0, metadata !9190, metadata !9210}
!9212 = metadata !{i32 918, i32 0, metadata !9190, metadata !9210}
!9213 = metadata !{i32 919, i32 0, metadata !9190, metadata !9210}
!9214 = metadata !{i32 921, i32 0, metadata !9190, metadata !9210}
!9215 = metadata !{i32 923, i32 0, metadata !9190, metadata !9210}
!9216 = metadata !{i32 924, i32 0, metadata !9190, metadata !9210}
!9217 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9218}
!9218 = metadata !{i32 2033, i32 0, metadata !4844, metadata !9219}
!9219 = metadata !{i32 943, i32 0, metadata !5067, null}
!9220 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9218}
!9221 = metadata !{i32 2036, i32 0, metadata !4844, metadata !9219}
!9222 = metadata !{i32 2037, i32 0, metadata !4847, metadata !9219}
!9223 = metadata !{i32 2038, i32 0, metadata !4847, metadata !9219}
!9224 = metadata !{i32 2040, i32 0, metadata !4847, metadata !9219}
!9225 = metadata !{i32 2043, i32 0, metadata !4847, metadata !9219}
!9226 = metadata !{i32 2046, i32 0, metadata !4849, metadata !9219}
!9227 = metadata !{i32 2047, i32 0, metadata !4849, metadata !9219}
!9228 = metadata !{i32 2048, i32 0, metadata !4849, metadata !9219}
!9229 = metadata !{i32 2049, i32 0, metadata !4849, metadata !9219}
!9230 = metadata !{i32 944, i32 0, metadata !5067, null}
!9231 = metadata !{i32 945, i32 0, metadata !5067, null}
!9232 = metadata !{i32 57, i32 0, metadata !8585, metadata !9233}
!9233 = metadata !{i32 772, i32 0, metadata !5071, null}
!9234 = metadata !{i32 773, i32 0, metadata !5071, null}
!9235 = metadata !{i32 774, i32 0, metadata !5071, null}
!9236 = metadata !{i32 775, i32 0, metadata !5071, null}
!9237 = metadata !{i32 778, i32 0, metadata !5071, null}
!9238 = metadata !{i32 779, i32 0, metadata !5071, null}
!9239 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9240}
!9240 = metadata !{i32 2033, i32 0, metadata !4844, metadata !9241}
!9241 = metadata !{i32 782, i32 0, metadata !5074, null}
!9242 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9240}
!9243 = metadata !{i32 2036, i32 0, metadata !4844, metadata !9241}
!9244 = metadata !{i32 2037, i32 0, metadata !4847, metadata !9241}
!9245 = metadata !{i32 2038, i32 0, metadata !4847, metadata !9241}
!9246 = metadata !{i32 2040, i32 0, metadata !4847, metadata !9241}
!9247 = metadata !{i32 2043, i32 0, metadata !4847, metadata !9241}
!9248 = metadata !{i32 2046, i32 0, metadata !4849, metadata !9241}
!9249 = metadata !{i32 2047, i32 0, metadata !4849, metadata !9241}
!9250 = metadata !{i32 2048, i32 0, metadata !4849, metadata !9241}
!9251 = metadata !{i32 2049, i32 0, metadata !4849, metadata !9241}
!9252 = metadata !{i32 786, i32 0, metadata !5074, null}
!9253 = metadata !{i32 787, i32 0, metadata !5074, null}
!9254 = metadata !{i32 788, i32 0, metadata !5074, null}
!9255 = metadata !{i32 789, i32 0, metadata !5074, null}
!9256 = metadata !{i32 57, i32 0, metadata !8585, metadata !9257}
!9257 = metadata !{i32 743, i32 0, metadata !5078, null}
!9258 = metadata !{i32 744, i32 0, metadata !5078, null}
!9259 = metadata !{i32 745, i32 0, metadata !5078, null}
!9260 = metadata !{i32 746, i32 0, metadata !5078, null}
!9261 = metadata !{i32 751, i32 0, metadata !5078, null}
!9262 = metadata !{i32 752, i32 0, metadata !5078, null}
!9263 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9264}
!9264 = metadata !{i32 2033, i32 0, metadata !4844, metadata !9265}
!9265 = metadata !{i32 755, i32 0, metadata !5081, null}
!9266 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9264}
!9267 = metadata !{i32 2036, i32 0, metadata !4844, metadata !9265}
!9268 = metadata !{i32 2037, i32 0, metadata !4847, metadata !9265}
!9269 = metadata !{i32 2038, i32 0, metadata !4847, metadata !9265}
!9270 = metadata !{i32 2040, i32 0, metadata !4847, metadata !9265}
!9271 = metadata !{i32 2043, i32 0, metadata !4847, metadata !9265}
!9272 = metadata !{i32 2046, i32 0, metadata !4849, metadata !9265}
!9273 = metadata !{i32 2047, i32 0, metadata !4849, metadata !9265}
!9274 = metadata !{i32 2048, i32 0, metadata !4849, metadata !9265}
!9275 = metadata !{i32 2049, i32 0, metadata !4849, metadata !9265}
!9276 = metadata !{i32 759, i32 0, metadata !5081, null}
!9277 = metadata !{i32 760, i32 0, metadata !5081, null}
!9278 = metadata !{i32 766, i32 0, metadata !5081, null}
!9279 = metadata !{i32 767, i32 0, metadata !5081, null}
!9280 = metadata !{i32 609, i32 0, metadata !5086, null}
!9281 = metadata !{i32 156, i32 0, metadata !4544, metadata !9282}
!9282 = metadata !{i32 611, i32 0, metadata !5086, null}
!9283 = metadata !{i32 157, i32 0, metadata !4543, metadata !9282}
!9284 = metadata !{i32 158, i32 0, metadata !4543, metadata !9282}
!9285 = metadata !{i32 612, i32 0, metadata !5086, null}
!9286 = metadata !{i32 613, i32 0, metadata !5086, null}
!9287 = metadata !{i32 614, i32 0, metadata !5086, null}
!9288 = metadata !{i32 617, i32 0, metadata !5086, null}
!9289 = metadata !{i32 618, i32 0, metadata !5086, null}
!9290 = metadata !{i32 619, i32 0, metadata !5086, null}
!9291 = metadata !{i32 620, i32 0, metadata !5086, null}
!9292 = metadata !{i32 623, i32 0, metadata !5086, null}
!9293 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9294}
!9294 = metadata !{i32 626, i32 0, metadata !5088, null}
!9295 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9294}
!9296 = metadata !{i32 2027, i32 0, metadata !4990, metadata !9297}
!9297 = metadata !{i32 627, i32 0, metadata !5088, null}
!9298 = metadata !{i32 2028, i32 0, metadata !4990, metadata !9297}
!9299 = metadata !{i32 631, i32 0, metadata !5088, null}
!9300 = metadata !{i32 632, i32 0, metadata !5088, null}
!9301 = metadata !{i32 633, i32 0, metadata !5088, null}
!9302 = metadata !{i32 635, i32 0, metadata !5088, null}
!9303 = metadata !{i32 636, i32 0, metadata !5088, null}
!9304 = metadata !{i32 638, i32 0, metadata !5088, null}
!9305 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9306}
!9306 = metadata !{i32 2057, i32 0, metadata !5049, metadata !9304}
!9307 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9306}
!9308 = metadata !{i32 2060, i32 0, metadata !5049, metadata !9304}
!9309 = metadata !{i32 2061, i32 0, metadata !5052, metadata !9304}
!9310 = metadata !{i32 2062, i32 0, metadata !5052, metadata !9304}
!9311 = metadata !{i32 2063, i32 0, metadata !5052, metadata !9304}
!9312 = metadata !{i32 2064, i32 0, metadata !5052, metadata !9304}
!9313 = metadata !{i32 640, i32 0, metadata !5088, null}
!9314 = metadata !{i32 641, i32 0, metadata !5088, null}
!9315 = metadata !{i32 642, i32 0, metadata !5088, null}
!9316 = metadata !{i32 643, i32 0, metadata !5088, null}
!9317 = metadata !{i32 645, i32 0, metadata !5088, null}
!9318 = metadata !{i32 646, i32 0, metadata !5088, null}
!9319 = metadata !{i32 647, i32 0, metadata !5088, null}
!9320 = metadata !{i32 650, i32 0, metadata !5088, null}
!9321 = metadata !{i32 651, i32 0, metadata !5088, null}
!9322 = metadata !{i32 654, i32 0, metadata !5088, null}
!9323 = metadata !{i32 652, i32 0, metadata !5088, null}
!9324 = metadata !{i32 659, i32 0, metadata !5091, null}
!9325 = metadata !{i32 662, i32 0, metadata !5091, null}
!9326 = metadata !{i32 663, i32 0, metadata !5091, null}
!9327 = metadata !{i32 665, i32 0, metadata !5091, null}
!9328 = metadata !{i32 666, i32 0, metadata !5091, null}
!9329 = metadata !{i32 670, i32 0, metadata !5091, null}
!9330 = metadata !{i32 671, i32 0, metadata !5091, null}
!9331 = metadata !{i32 673, i32 0, metadata !5091, null}
!9332 = metadata !{i32 674, i32 0, metadata !5091, null}
!9333 = metadata !{i32 676, i32 0, metadata !5091, null}
!9334 = metadata !{i32 677, i32 0, metadata !5091, null}
!9335 = metadata !{i32 679, i32 0, metadata !5091, null}
!9336 = metadata !{i32 680, i32 0, metadata !5091, null}
!9337 = metadata !{i32 247, i32 0, metadata !5097, null}
!9338 = metadata !{i32 248, i32 0, metadata !5097, null}
!9339 = metadata !{i32 250, i32 0, metadata !5097, null}
!9340 = metadata !{i32 251, i32 0, metadata !5097, null}
!9341 = metadata !{i32 252, i32 0, metadata !5097, null}
!9342 = metadata !{i32 255, i32 0, metadata !5097, null}
!9343 = metadata !{i32 263, i32 0, metadata !5097, null}
!9344 = metadata !{i32 264, i32 0, metadata !5097, null}
!9345 = metadata !{i32 270, i32 0, metadata !5097, null}
!9346 = metadata !{i32 276, i32 0, metadata !5097, null}
!9347 = metadata !{i32 277, i32 0, metadata !5097, null}
!9348 = metadata !{i32 291, i32 0, metadata !5097, null}
!9349 = metadata !{i32 292, i32 0, metadata !5097, null}
!9350 = metadata !{i32 293, i32 0, metadata !5097, null}
!9351 = metadata !{i32 296, i32 0, metadata !5097, null}
!9352 = metadata !{i32 214, i32 0, metadata !4551, metadata !9351}
!9353 = metadata !{i32 216, i32 0, metadata !4551, metadata !9351}
!9354 = metadata !{i32 233, i32 0, metadata !4551, metadata !9351}
!9355 = metadata !{i32 236, i32 0, metadata !4551, metadata !9351}
!9356 = metadata !{i32 297, i32 0, metadata !5097, null}
!9357 = metadata !{i32 298, i32 0, metadata !5097, null}
!9358 = metadata !{i32 301, i32 0, metadata !5097, null}
!9359 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9360}
!9360 = metadata !{i32 2033, i32 0, metadata !4844, metadata !9361}
!9361 = metadata !{i32 306, i32 0, metadata !5101, null}
!9362 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9360}
!9363 = metadata !{i32 2036, i32 0, metadata !4844, metadata !9361}
!9364 = metadata !{i32 2037, i32 0, metadata !4847, metadata !9361}
!9365 = metadata !{i32 2038, i32 0, metadata !4847, metadata !9361}
!9366 = metadata !{i32 2040, i32 0, metadata !4847, metadata !9361}
!9367 = metadata !{i32 2043, i32 0, metadata !4847, metadata !9361}
!9368 = metadata !{i32 2046, i32 0, metadata !4849, metadata !9361}
!9369 = metadata !{i32 2047, i32 0, metadata !4849, metadata !9361}
!9370 = metadata !{i32 2048, i32 0, metadata !4849, metadata !9361}
!9371 = metadata !{i32 2049, i32 0, metadata !4849, metadata !9361}
!9372 = metadata !{i32 308, i32 0, metadata !5101, null}
!9373 = metadata !{i32 312, i32 0, metadata !5103, null}
!9374 = metadata !{i32 280, i32 0, metadata !9375, metadata !9373}
!9375 = metadata !{i32 589835, metadata !3451, i32 279, i32 0, metadata !3452, i32 130} ; [ DW_TAG_lexical_block ]
!9376 = metadata !{i32 156, i32 0, metadata !4544, metadata !9377}
!9377 = metadata !{i32 313, i32 0, metadata !5103, null}
!9378 = metadata !{i32 157, i32 0, metadata !4543, metadata !9377}
!9379 = metadata !{i32 158, i32 0, metadata !4543, metadata !9377}
!9380 = metadata !{i32 314, i32 0, metadata !5103, null}
!9381 = metadata !{i32 315, i32 0, metadata !5110, null}
!9382 = metadata !{i32 316, i32 0, metadata !5110, null}
!9383 = metadata !{i32 317, i32 0, metadata !5110, null}
!9384 = metadata !{i32 318, i32 0, metadata !5110, null}
!9385 = metadata !{i32 323, i32 0, metadata !5103, null}
!9386 = metadata !{i32 328, i32 0, metadata !5101, null}
!9387 = metadata !{i32 336, i32 0, metadata !5101, null}
!9388 = metadata !{i32 337, i32 0, metadata !5101, null}
!9389 = metadata !{i32 338, i32 0, metadata !5101, null}
!9390 = metadata !{i32 340, i32 0, metadata !5101, null}
!9391 = metadata !{i32 343, i32 0, metadata !5097, null}
!9392 = metadata !{i32 344, i32 0, metadata !5097, null}
!9393 = metadata !{i32 345, i32 0, metadata !5097, null}
!9394 = metadata !{i32 346, i32 0, metadata !5097, null}
!9395 = metadata !{i32 347, i32 0, metadata !5097, null}
!9396 = metadata !{i32 349, i32 0, metadata !5097, null}
!9397 = metadata !{i32 361, i32 0, metadata !5116, null}
!9398 = metadata !{i32 156, i32 0, metadata !4544, metadata !9399}
!9399 = metadata !{i32 362, i32 0, metadata !5120, null}
!9400 = metadata !{i32 157, i32 0, metadata !4543, metadata !9399}
!9401 = metadata !{i32 158, i32 0, metadata !4543, metadata !9399}
!9402 = metadata !{i32 364, i32 0, metadata !5120, null}
!9403 = metadata !{i32 365, i32 0, metadata !5120, null}
!9404 = metadata !{i32 366, i32 0, metadata !5120, null}
!9405 = metadata !{i32 367, i32 0, metadata !5120, null}
!9406 = metadata !{i32 368, i32 0, metadata !5120, null}
!9407 = metadata !{i32 369, i32 0, metadata !5120, null}
!9408 = metadata !{i32 370, i32 0, metadata !5120, null}
!9409 = metadata !{i32 372, i32 0, metadata !5120, null}
!9410 = metadata !{i32 57, i32 0, metadata !8585, metadata !9411}
!9411 = metadata !{i32 375, i32 0, metadata !5116, null}
!9412 = metadata !{i32 377, i32 0, metadata !5116, null}
!9413 = metadata !{i32 381, i32 0, metadata !5116, null}
!9414 = metadata !{i32 380, i32 0, metadata !5116, null}
!9415 = metadata !{i32 383, i32 0, metadata !5116, null}
!9416 = metadata !{i32 384, i32 0, metadata !5116, null}
!9417 = metadata !{i32 385, i32 0, metadata !5116, null}
!9418 = metadata !{i32 388, i32 0, metadata !5116, null}
!9419 = metadata !{i32 391, i32 0, metadata !5116, null}
!9420 = metadata !{i32 393, i32 0, metadata !5116, null}
!9421 = metadata !{i32 2021, i32 0, metadata !4841, metadata !9422}
!9422 = metadata !{i32 2033, i32 0, metadata !4844, metadata !9420}
!9423 = metadata !{i32 2022, i32 0, metadata !4841, metadata !9422}
!9424 = metadata !{i32 2036, i32 0, metadata !4844, metadata !9420}
!9425 = metadata !{i32 2037, i32 0, metadata !4847, metadata !9420}
!9426 = metadata !{i32 2038, i32 0, metadata !4847, metadata !9420}
!9427 = metadata !{i32 2040, i32 0, metadata !4847, metadata !9420}
!9428 = metadata !{i32 2043, i32 0, metadata !4847, metadata !9420}
!9429 = metadata !{i32 2046, i32 0, metadata !4849, metadata !9420}
!9430 = metadata !{i32 2047, i32 0, metadata !4849, metadata !9420}
!9431 = metadata !{i32 2048, i32 0, metadata !4849, metadata !9420}
!9432 = metadata !{i32 2049, i32 0, metadata !4849, metadata !9420}
!9433 = metadata !{i32 394, i32 0, metadata !5116, null}
!9434 = metadata !{i32 395, i32 0, metadata !5116, null}
!9435 = metadata !{i32 396, i32 0, metadata !5116, null}
!9436 = metadata !{i32 399, i32 0, metadata !5116, null}
!9437 = metadata !{i32 400, i32 0, metadata !5116, null}
!9438 = metadata !{i32 401, i32 0, metadata !5116, null}
!9439 = metadata !{i32 402, i32 0, metadata !5116, null}
!9440 = metadata !{i32 404, i32 0, metadata !5116, null}
!9441 = metadata !{i32 406, i32 0, metadata !5116, null}
!9442 = metadata !{i32 23, i32 0, metadata !9443, null}
!9443 = metadata !{i32 589835, metadata !3486, i32 22, i32 0, metadata !3460, i32 8} ; [ DW_TAG_lexical_block ]
!9444 = metadata !{i32 24, i32 0, metadata !9443, null}
!9445 = metadata !{i32 25, i32 0, metadata !9443, null}
!9446 = metadata !{i32 63, i32 0, metadata !9447, null}
!9447 = metadata !{i32 589835, metadata !3459, i32 62, i32 0, metadata !3460, i32 0} ; [ DW_TAG_lexical_block ]
!9448 = metadata !{i32 64, i32 0, metadata !9447, null}
!9449 = metadata !{i32 65, i32 0, metadata !9447, null}
!9450 = metadata !{i32 63, i32 0, metadata !9447, metadata !9451}
!9451 = metadata !{i32 69, i32 0, metadata !9452, null}
!9452 = metadata !{i32 589835, metadata !3467, i32 68, i32 0, metadata !3460, i32 1} ; [ DW_TAG_lexical_block ]
!9453 = metadata !{i32 64, i32 0, metadata !9447, metadata !9451}
!9454 = metadata !{i32 60, i32 0, metadata !3468, null}
!9455 = metadata !{i32 60, i32 0, metadata !9456, null}
!9456 = metadata !{i32 589835, metadata !3468, i32 60, i32 0, metadata !3460, i32 2} ; [ DW_TAG_lexical_block ]
!9457 = metadata !{i32 59, i32 0, metadata !3477, null}
!9458 = metadata !{i32 59, i32 0, metadata !9459, null}
!9459 = metadata !{i32 589835, metadata !3477, i32 59, i32 0, metadata !3460, i32 3} ; [ DW_TAG_lexical_block ]
!9460 = metadata !{i32 58, i32 0, metadata !3480, null}
!9461 = metadata !{i32 58, i32 0, metadata !9462, null}
!9462 = metadata !{i32 589835, metadata !3480, i32 58, i32 0, metadata !3460, i32 4} ; [ DW_TAG_lexical_block ]
!9463 = metadata !{i32 57, i32 0, metadata !3481, null}
!9464 = metadata !{i32 57, i32 0, metadata !9465, null}
!9465 = metadata !{i32 589835, metadata !3481, i32 57, i32 0, metadata !3460, i32 5} ; [ DW_TAG_lexical_block ]
!9466 = metadata !{i32 56, i32 0, metadata !3484, null}
!9467 = metadata !{i32 56, i32 0, metadata !9468, null}
!9468 = metadata !{i32 589835, metadata !3484, i32 56, i32 0, metadata !3460, i32 6} ; [ DW_TAG_lexical_block ]
!9469 = metadata !{i32 55, i32 0, metadata !3485, null}
!9470 = metadata !{i32 55, i32 0, metadata !9471, null}
!9471 = metadata !{i32 589835, metadata !3485, i32 55, i32 0, metadata !3460, i32 7} ; [ DW_TAG_lexical_block ]
!9472 = metadata !{i32 35, i32 0, metadata !9473, null}
!9473 = metadata !{i32 589835, metadata !3489, i32 34, i32 0, metadata !3460, i32 9} ; [ DW_TAG_lexical_block ]
!9474 = metadata !{i32 30, i32 0, metadata !9475, null}
!9475 = metadata !{i32 589835, metadata !3512, i32 29, i32 0, metadata !3460, i32 10} ; [ DW_TAG_lexical_block ]
!9476 = metadata !{i32 31, i32 0, metadata !9475, null}
!9477 = metadata !{i32 162, i32 0, metadata !5171, null}
!9478 = metadata !{i32 163, i32 0, metadata !5171, null}
!9479 = metadata !{i32 182, i32 0, metadata !5171, null}
!9480 = metadata !{i32 186, i32 0, metadata !5171, null}
!9481 = metadata !{i32 189, i32 0, metadata !5171, null}
!9482 = metadata !{i32 130, i32 0, metadata !9483, metadata !9481}
!9483 = metadata !{i32 589835, metadata !3525, i32 129, i32 0, metadata !3516, i32 3} ; [ DW_TAG_lexical_block ]
!9484 = metadata !{i32 131, i32 0, metadata !9483, metadata !9481}
!9485 = metadata !{i32 134, i32 0, metadata !9483, metadata !9481}
!9486 = metadata !{i32 24, i32 0, metadata !9487, metadata !9488}
!9487 = metadata !{i32 589835, metadata !3533, i32 23, i32 0, metadata !3516, i32 5} ; [ DW_TAG_lexical_block ]
!9488 = metadata !{i32 190, i32 0, metadata !5171, null}
!9489 = metadata !{i32 203, i32 0, metadata !5171, null}
!9490 = metadata !{i32 130, i32 0, metadata !9483, metadata !9489}
!9491 = metadata !{i32 131, i32 0, metadata !9483, metadata !9489}
!9492 = metadata !{i32 134, i32 0, metadata !9483, metadata !9489}
!9493 = metadata !{i32 205, i32 0, metadata !5219, null}
!9494 = metadata !{i32 24, i32 0, metadata !9487, metadata !9495}
!9495 = metadata !{i32 206, i32 0, metadata !5219, null}
!9496 = metadata !{i32 208, i32 0, metadata !5219, null}
!9497 = metadata !{i32 46, i32 0, metadata !5153, metadata !9496}
!9498 = metadata !{i32 24, i32 0, metadata !9487, metadata !9497}
!9499 = metadata !{i32 47, i32 0, metadata !5153, metadata !9496}
!9500 = metadata !{i32 49, i32 0, metadata !5153, metadata !9496}
!9501 = metadata !{i32 32, i32 0, metadata !9502, metadata !9503}
!9502 = metadata !{i32 589835, metadata !3523, i32 31, i32 0, metadata !3516, i32 1} ; [ DW_TAG_lexical_block ]
!9503 = metadata !{i32 52, i32 0, metadata !5153, metadata !9496}
!9504 = metadata !{i32 53, i32 0, metadata !5153, metadata !9496}
!9505 = metadata !{i32 54, i32 0, metadata !5153, metadata !9496}
!9506 = metadata !{i32 24, i32 0, metadata !9487, metadata !9507}
!9507 = metadata !{i32 56, i32 0, metadata !5153, metadata !9496}
!9508 = metadata !{i32 51, i32 0, metadata !5153, metadata !9496}
!9509 = metadata !{i32 209, i32 0, metadata !5219, null}
!9510 = metadata !{i32 210, i32 0, metadata !5219, null}
!9511 = metadata !{i32 153, i32 0, metadata !9512, metadata !9510}
!9512 = metadata !{i32 589835, metadata !3546, i32 152, i32 0, metadata !3516, i32 9} ; [ DW_TAG_lexical_block ]
!9513 = metadata !{i32 24, i32 0, metadata !9487, metadata !9514}
!9514 = metadata !{i32 154, i32 0, metadata !9512, metadata !9510}
!9515 = metadata !{i32 156, i32 0, metadata !9512, metadata !9510}
!9516 = metadata !{i32 157, i32 0, metadata !9512, metadata !9510}
!9517 = metadata !{i32 131, i32 0, metadata !9483, metadata !9518}
!9518 = metadata !{i32 214, i32 0, metadata !5171, null}
!9519 = metadata !{i32 134, i32 0, metadata !9483, metadata !9518}
!9520 = metadata !{i32 130, i32 0, metadata !9483, metadata !9518}
!9521 = metadata !{i32 218, i32 0, metadata !5221, null}
!9522 = metadata !{i32 24, i32 0, metadata !9487, metadata !9523}
!9523 = metadata !{i32 219, i32 0, metadata !5221, null}
!9524 = metadata !{i32 221, i32 0, metadata !5221, null}
!9525 = metadata !{i32 222, i32 0, metadata !5221, null}
!9526 = metadata !{i32 46, i32 0, metadata !5153, metadata !9525}
!9527 = metadata !{i32 24, i32 0, metadata !9487, metadata !9526}
!9528 = metadata !{i32 47, i32 0, metadata !5153, metadata !9525}
!9529 = metadata !{i32 49, i32 0, metadata !5153, metadata !9525}
!9530 = metadata !{i32 32, i32 0, metadata !9502, metadata !9531}
!9531 = metadata !{i32 52, i32 0, metadata !5153, metadata !9525}
!9532 = metadata !{i32 53, i32 0, metadata !5153, metadata !9525}
!9533 = metadata !{i32 54, i32 0, metadata !5153, metadata !9525}
!9534 = metadata !{i32 24, i32 0, metadata !9487, metadata !9535}
!9535 = metadata !{i32 56, i32 0, metadata !5153, metadata !9525}
!9536 = metadata !{i32 51, i32 0, metadata !5153, metadata !9525}
!9537 = metadata !{i32 223, i32 0, metadata !5221, null}
!9538 = metadata !{i32 46, i32 0, metadata !5153, metadata !9537}
!9539 = metadata !{i32 24, i32 0, metadata !9487, metadata !9538}
!9540 = metadata !{i32 47, i32 0, metadata !5153, metadata !9537}
!9541 = metadata !{i32 49, i32 0, metadata !5153, metadata !9537}
!9542 = metadata !{i32 32, i32 0, metadata !9502, metadata !9543}
!9543 = metadata !{i32 52, i32 0, metadata !5153, metadata !9537}
!9544 = metadata !{i32 53, i32 0, metadata !5153, metadata !9537}
!9545 = metadata !{i32 54, i32 0, metadata !5153, metadata !9537}
!9546 = metadata !{i32 24, i32 0, metadata !9487, metadata !9547}
!9547 = metadata !{i32 56, i32 0, metadata !5153, metadata !9537}
!9548 = metadata !{i32 51, i32 0, metadata !5153, metadata !9537}
!9549 = metadata !{i32 224, i32 0, metadata !5221, null}
!9550 = metadata !{i32 46, i32 0, metadata !5153, metadata !9549}
!9551 = metadata !{i32 24, i32 0, metadata !9487, metadata !9550}
!9552 = metadata !{i32 47, i32 0, metadata !5153, metadata !9549}
!9553 = metadata !{i32 49, i32 0, metadata !5153, metadata !9549}
!9554 = metadata !{i32 32, i32 0, metadata !9502, metadata !9555}
!9555 = metadata !{i32 52, i32 0, metadata !5153, metadata !9549}
!9556 = metadata !{i32 53, i32 0, metadata !5153, metadata !9549}
!9557 = metadata !{i32 54, i32 0, metadata !5153, metadata !9549}
!9558 = metadata !{i32 24, i32 0, metadata !9487, metadata !9559}
!9559 = metadata !{i32 56, i32 0, metadata !5153, metadata !9549}
!9560 = metadata !{i32 51, i32 0, metadata !5153, metadata !9549}
!9561 = metadata !{i32 226, i32 0, metadata !5221, null}
!9562 = metadata !{i32 227, i32 0, metadata !5221, null}
!9563 = metadata !{i32 228, i32 0, metadata !5221, null}
!9564 = metadata !{i32 229, i32 0, metadata !5221, null}
!9565 = metadata !{i32 153, i32 0, metadata !9512, metadata !9564}
!9566 = metadata !{i32 24, i32 0, metadata !9487, metadata !9567}
!9567 = metadata !{i32 154, i32 0, metadata !9512, metadata !9564}
!9568 = metadata !{i32 156, i32 0, metadata !9512, metadata !9564}
!9569 = metadata !{i32 131, i32 0, metadata !9483, metadata !9570}
!9570 = metadata !{i32 234, i32 0, metadata !5171, null}
!9571 = metadata !{i32 134, i32 0, metadata !9483, metadata !9570}
!9572 = metadata !{i32 130, i32 0, metadata !9483, metadata !9570}
!9573 = metadata !{i32 237, i32 0, metadata !5223, null}
!9574 = metadata !{i32 24, i32 0, metadata !9487, metadata !9575}
!9575 = metadata !{i32 238, i32 0, metadata !5223, null}
!9576 = metadata !{i32 240, i32 0, metadata !5223, null}
!9577 = metadata !{i32 241, i32 0, metadata !5223, null}
!9578 = metadata !{i32 46, i32 0, metadata !5153, metadata !9577}
!9579 = metadata !{i32 24, i32 0, metadata !9487, metadata !9578}
!9580 = metadata !{i32 47, i32 0, metadata !5153, metadata !9577}
!9581 = metadata !{i32 49, i32 0, metadata !5153, metadata !9577}
!9582 = metadata !{i32 32, i32 0, metadata !9502, metadata !9583}
!9583 = metadata !{i32 52, i32 0, metadata !5153, metadata !9577}
!9584 = metadata !{i32 53, i32 0, metadata !5153, metadata !9577}
!9585 = metadata !{i32 54, i32 0, metadata !5153, metadata !9577}
!9586 = metadata !{i32 24, i32 0, metadata !9487, metadata !9587}
!9587 = metadata !{i32 56, i32 0, metadata !5153, metadata !9577}
!9588 = metadata !{i32 51, i32 0, metadata !5153, metadata !9577}
!9589 = metadata !{i32 242, i32 0, metadata !5223, null}
!9590 = metadata !{i32 46, i32 0, metadata !5153, metadata !9589}
!9591 = metadata !{i32 24, i32 0, metadata !9487, metadata !9590}
!9592 = metadata !{i32 47, i32 0, metadata !5153, metadata !9589}
!9593 = metadata !{i32 49, i32 0, metadata !5153, metadata !9589}
!9594 = metadata !{i32 32, i32 0, metadata !9502, metadata !9595}
!9595 = metadata !{i32 52, i32 0, metadata !5153, metadata !9589}
!9596 = metadata !{i32 53, i32 0, metadata !5153, metadata !9589}
!9597 = metadata !{i32 54, i32 0, metadata !5153, metadata !9589}
!9598 = metadata !{i32 24, i32 0, metadata !9487, metadata !9599}
!9599 = metadata !{i32 56, i32 0, metadata !5153, metadata !9589}
!9600 = metadata !{i32 51, i32 0, metadata !5153, metadata !9589}
!9601 = metadata !{i32 131, i32 0, metadata !9483, metadata !9602}
!9602 = metadata !{i32 245, i32 0, metadata !5171, null}
!9603 = metadata !{i32 134, i32 0, metadata !9483, metadata !9602}
!9604 = metadata !{i32 130, i32 0, metadata !9483, metadata !9602}
!9605 = metadata !{i32 247, i32 0, metadata !5171, null}
!9606 = metadata !{i32 131, i32 0, metadata !9483, metadata !9607}
!9607 = metadata !{i32 249, i32 0, metadata !5171, null}
!9608 = metadata !{i32 134, i32 0, metadata !9483, metadata !9607}
!9609 = metadata !{i32 130, i32 0, metadata !9483, metadata !9607}
!9610 = metadata !{i32 251, i32 0, metadata !5171, null}
!9611 = metadata !{i32 131, i32 0, metadata !9483, metadata !9612}
!9612 = metadata !{i32 253, i32 0, metadata !5171, null}
!9613 = metadata !{i32 134, i32 0, metadata !9483, metadata !9612}
!9614 = metadata !{i32 130, i32 0, metadata !9483, metadata !9612}
!9615 = metadata !{i32 255, i32 0, metadata !5171, null}
!9616 = metadata !{i32 131, i32 0, metadata !9483, metadata !9617}
!9617 = metadata !{i32 257, i32 0, metadata !5171, null}
!9618 = metadata !{i32 134, i32 0, metadata !9483, metadata !9617}
!9619 = metadata !{i32 130, i32 0, metadata !9483, metadata !9617}
!9620 = metadata !{i32 259, i32 0, metadata !5225, null}
!9621 = metadata !{i32 24, i32 0, metadata !9487, metadata !9622}
!9622 = metadata !{i32 260, i32 0, metadata !5225, null}
!9623 = metadata !{i32 262, i32 0, metadata !5225, null}
!9624 = metadata !{i32 46, i32 0, metadata !5153, metadata !9623}
!9625 = metadata !{i32 24, i32 0, metadata !9487, metadata !9624}
!9626 = metadata !{i32 47, i32 0, metadata !5153, metadata !9623}
!9627 = metadata !{i32 49, i32 0, metadata !5153, metadata !9623}
!9628 = metadata !{i32 32, i32 0, metadata !9502, metadata !9629}
!9629 = metadata !{i32 52, i32 0, metadata !5153, metadata !9623}
!9630 = metadata !{i32 53, i32 0, metadata !5153, metadata !9623}
!9631 = metadata !{i32 54, i32 0, metadata !5153, metadata !9623}
!9632 = metadata !{i32 24, i32 0, metadata !9487, metadata !9633}
!9633 = metadata !{i32 56, i32 0, metadata !5153, metadata !9623}
!9634 = metadata !{i32 51, i32 0, metadata !5153, metadata !9623}
!9635 = metadata !{i32 131, i32 0, metadata !9483, metadata !9636}
!9636 = metadata !{i32 264, i32 0, metadata !5171, null}
!9637 = metadata !{i32 134, i32 0, metadata !9483, metadata !9636}
!9638 = metadata !{i32 130, i32 0, metadata !9483, metadata !9636}
!9639 = metadata !{i32 267, i32 0, metadata !5227, null}
!9640 = metadata !{i32 24, i32 0, metadata !9487, metadata !9641}
!9641 = metadata !{i32 268, i32 0, metadata !5227, null}
!9642 = metadata !{i32 270, i32 0, metadata !5227, null}
!9643 = metadata !{i32 271, i32 0, metadata !5227, null}
!9644 = metadata !{i32 46, i32 0, metadata !5153, metadata !9643}
!9645 = metadata !{i32 24, i32 0, metadata !9487, metadata !9644}
!9646 = metadata !{i32 47, i32 0, metadata !5153, metadata !9643}
!9647 = metadata !{i32 49, i32 0, metadata !5153, metadata !9643}
!9648 = metadata !{i32 32, i32 0, metadata !9502, metadata !9649}
!9649 = metadata !{i32 52, i32 0, metadata !5153, metadata !9643}
!9650 = metadata !{i32 53, i32 0, metadata !5153, metadata !9643}
!9651 = metadata !{i32 54, i32 0, metadata !5153, metadata !9643}
!9652 = metadata !{i32 24, i32 0, metadata !9487, metadata !9653}
!9653 = metadata !{i32 56, i32 0, metadata !5153, metadata !9643}
!9654 = metadata !{i32 51, i32 0, metadata !5153, metadata !9643}
!9655 = metadata !{i32 272, i32 0, metadata !5227, null}
!9656 = metadata !{i32 46, i32 0, metadata !5153, metadata !9655}
!9657 = metadata !{i32 24, i32 0, metadata !9487, metadata !9656}
!9658 = metadata !{i32 47, i32 0, metadata !5153, metadata !9655}
!9659 = metadata !{i32 49, i32 0, metadata !5153, metadata !9655}
!9660 = metadata !{i32 32, i32 0, metadata !9502, metadata !9661}
!9661 = metadata !{i32 52, i32 0, metadata !5153, metadata !9655}
!9662 = metadata !{i32 53, i32 0, metadata !5153, metadata !9655}
!9663 = metadata !{i32 54, i32 0, metadata !5153, metadata !9655}
!9664 = metadata !{i32 24, i32 0, metadata !9487, metadata !9665}
!9665 = metadata !{i32 56, i32 0, metadata !5153, metadata !9655}
!9666 = metadata !{i32 51, i32 0, metadata !5153, metadata !9655}
!9667 = metadata !{i32 131, i32 0, metadata !9483, metadata !9668}
!9668 = metadata !{i32 274, i32 0, metadata !5171, null}
!9669 = metadata !{i32 134, i32 0, metadata !9483, metadata !9668}
!9670 = metadata !{i32 130, i32 0, metadata !9483, metadata !9668}
!9671 = metadata !{i32 277, i32 0, metadata !5229, null}
!9672 = metadata !{i32 24, i32 0, metadata !9487, metadata !9673}
!9673 = metadata !{i32 278, i32 0, metadata !5229, null}
!9674 = metadata !{i32 280, i32 0, metadata !5229, null}
!9675 = metadata !{i32 281, i32 0, metadata !5229, null}
!9676 = metadata !{i32 46, i32 0, metadata !5153, metadata !9675}
!9677 = metadata !{i32 24, i32 0, metadata !9487, metadata !9676}
!9678 = metadata !{i32 47, i32 0, metadata !5153, metadata !9675}
!9679 = metadata !{i32 49, i32 0, metadata !5153, metadata !9675}
!9680 = metadata !{i32 32, i32 0, metadata !9502, metadata !9681}
!9681 = metadata !{i32 52, i32 0, metadata !5153, metadata !9675}
!9682 = metadata !{i32 53, i32 0, metadata !5153, metadata !9675}
!9683 = metadata !{i32 54, i32 0, metadata !5153, metadata !9675}
!9684 = metadata !{i32 24, i32 0, metadata !9487, metadata !9685}
!9685 = metadata !{i32 56, i32 0, metadata !5153, metadata !9675}
!9686 = metadata !{i32 51, i32 0, metadata !5153, metadata !9675}
!9687 = metadata !{i32 282, i32 0, metadata !5229, null}
!9688 = metadata !{i32 46, i32 0, metadata !5153, metadata !9687}
!9689 = metadata !{i32 24, i32 0, metadata !9487, metadata !9688}
!9690 = metadata !{i32 47, i32 0, metadata !5153, metadata !9687}
!9691 = metadata !{i32 49, i32 0, metadata !5153, metadata !9687}
!9692 = metadata !{i32 32, i32 0, metadata !9502, metadata !9693}
!9693 = metadata !{i32 52, i32 0, metadata !5153, metadata !9687}
!9694 = metadata !{i32 53, i32 0, metadata !5153, metadata !9687}
!9695 = metadata !{i32 54, i32 0, metadata !5153, metadata !9687}
!9696 = metadata !{i32 24, i32 0, metadata !9487, metadata !9697}
!9697 = metadata !{i32 56, i32 0, metadata !5153, metadata !9687}
!9698 = metadata !{i32 51, i32 0, metadata !5153, metadata !9687}
!9699 = metadata !{i32 131, i32 0, metadata !9483, metadata !9700}
!9700 = metadata !{i32 284, i32 0, metadata !5171, null}
!9701 = metadata !{i32 134, i32 0, metadata !9483, metadata !9700}
!9702 = metadata !{i32 130, i32 0, metadata !9483, metadata !9700}
!9703 = metadata !{i32 286, i32 0, metadata !5171, null}
!9704 = metadata !{i32 131, i32 0, metadata !9483, metadata !9705}
!9705 = metadata !{i32 288, i32 0, metadata !5171, null}
!9706 = metadata !{i32 134, i32 0, metadata !9483, metadata !9705}
!9707 = metadata !{i32 130, i32 0, metadata !9483, metadata !9705}
!9708 = metadata !{i32 292, i32 0, metadata !5231, null}
!9709 = metadata !{i32 24, i32 0, metadata !9487, metadata !9710}
!9710 = metadata !{i32 293, i32 0, metadata !5231, null}
!9711 = metadata !{i32 294, i32 0, metadata !5231, null}
!9712 = metadata !{i32 24, i32 0, metadata !9487, metadata !9713}
!9713 = metadata !{i32 295, i32 0, metadata !5231, null}
!9714 = metadata !{i32 296, i32 0, metadata !5231, null}
!9715 = metadata !{i32 297, i32 0, metadata !5231, null}
!9716 = metadata !{i32 46, i32 0, metadata !5153, metadata !9715}
!9717 = metadata !{i32 24, i32 0, metadata !9487, metadata !9716}
!9718 = metadata !{i32 47, i32 0, metadata !5153, metadata !9715}
!9719 = metadata !{i32 49, i32 0, metadata !5153, metadata !9715}
!9720 = metadata !{i32 32, i32 0, metadata !9502, metadata !9721}
!9721 = metadata !{i32 52, i32 0, metadata !5153, metadata !9715}
!9722 = metadata !{i32 53, i32 0, metadata !5153, metadata !9715}
!9723 = metadata !{i32 54, i32 0, metadata !5153, metadata !9715}
!9724 = metadata !{i32 24, i32 0, metadata !9487, metadata !9725}
!9725 = metadata !{i32 56, i32 0, metadata !5153, metadata !9715}
!9726 = metadata !{i32 51, i32 0, metadata !5153, metadata !9715}
!9727 = metadata !{i32 298, i32 0, metadata !5231, null}
!9728 = metadata !{i32 130, i32 0, metadata !9483, metadata !9727}
!9729 = metadata !{i32 131, i32 0, metadata !9483, metadata !9727}
!9730 = metadata !{i32 134, i32 0, metadata !9483, metadata !9727}
!9731 = metadata !{i32 300, i32 0, metadata !5231, null}
!9732 = metadata !{i32 24, i32 0, metadata !9487, metadata !9733}
!9733 = metadata !{i32 301, i32 0, metadata !5231, null}
!9734 = metadata !{i32 299, i32 0, metadata !5231, null}
!9735 = metadata !{i32 302, i32 0, metadata !5231, null}
!9736 = metadata !{i32 303, i32 0, metadata !5231, null}
!9737 = metadata !{i32 46, i32 0, metadata !5153, metadata !9736}
!9738 = metadata !{i32 24, i32 0, metadata !9487, metadata !9737}
!9739 = metadata !{i32 47, i32 0, metadata !5153, metadata !9736}
!9740 = metadata !{i32 49, i32 0, metadata !5153, metadata !9736}
!9741 = metadata !{i32 32, i32 0, metadata !9502, metadata !9742}
!9742 = metadata !{i32 52, i32 0, metadata !5153, metadata !9736}
!9743 = metadata !{i32 53, i32 0, metadata !5153, metadata !9736}
!9744 = metadata !{i32 54, i32 0, metadata !5153, metadata !9736}
!9745 = metadata !{i32 24, i32 0, metadata !9487, metadata !9746}
!9746 = metadata !{i32 56, i32 0, metadata !5153, metadata !9736}
!9747 = metadata !{i32 51, i32 0, metadata !5153, metadata !9736}
!9748 = metadata !{i32 304, i32 0, metadata !5231, null}
!9749 = metadata !{i32 46, i32 0, metadata !5153, metadata !9748}
!9750 = metadata !{i32 24, i32 0, metadata !9487, metadata !9749}
!9751 = metadata !{i32 47, i32 0, metadata !5153, metadata !9748}
!9752 = metadata !{i32 49, i32 0, metadata !5153, metadata !9748}
!9753 = metadata !{i32 32, i32 0, metadata !9502, metadata !9754}
!9754 = metadata !{i32 52, i32 0, metadata !5153, metadata !9748}
!9755 = metadata !{i32 53, i32 0, metadata !5153, metadata !9748}
!9756 = metadata !{i32 54, i32 0, metadata !5153, metadata !9748}
!9757 = metadata !{i32 24, i32 0, metadata !9487, metadata !9758}
!9758 = metadata !{i32 56, i32 0, metadata !5153, metadata !9748}
!9759 = metadata !{i32 51, i32 0, metadata !5153, metadata !9748}
!9760 = metadata !{i32 305, i32 0, metadata !5231, null}
!9761 = metadata !{i32 131, i32 0, metadata !9483, metadata !9762}
!9762 = metadata !{i32 307, i32 0, metadata !5231, null}
!9763 = metadata !{i32 134, i32 0, metadata !9483, metadata !9762}
!9764 = metadata !{i32 130, i32 0, metadata !9483, metadata !9762}
!9765 = metadata !{i32 308, i32 0, metadata !5231, null}
!9766 = metadata !{i32 309, i32 0, metadata !5231, null}
!9767 = metadata !{i32 24, i32 0, metadata !9487, metadata !9768}
!9768 = metadata !{i32 310, i32 0, metadata !5231, null}
!9769 = metadata !{i32 311, i32 0, metadata !5231, null}
!9770 = metadata !{i32 312, i32 0, metadata !5231, null}
!9771 = metadata !{i32 313, i32 0, metadata !5231, null}
!9772 = metadata !{i32 315, i32 0, metadata !5231, null}
!9773 = metadata !{i32 131, i32 0, metadata !9483, metadata !9774}
!9774 = metadata !{i32 317, i32 0, metadata !5231, null}
!9775 = metadata !{i32 134, i32 0, metadata !9483, metadata !9774}
!9776 = metadata !{i32 130, i32 0, metadata !9483, metadata !9774}
!9777 = metadata !{i32 318, i32 0, metadata !5231, null}
!9778 = metadata !{i32 319, i32 0, metadata !5231, null}
!9779 = metadata !{i32 24, i32 0, metadata !9487, metadata !9780}
!9780 = metadata !{i32 320, i32 0, metadata !5231, null}
!9781 = metadata !{i32 321, i32 0, metadata !5231, null}
!9782 = metadata !{i32 322, i32 0, metadata !5231, null}
!9783 = metadata !{i32 323, i32 0, metadata !5231, null}
!9784 = metadata !{i32 24, i32 0, metadata !9487, metadata !9785}
!9785 = metadata !{i32 326, i32 0, metadata !5231, null}
!9786 = metadata !{i32 131, i32 0, metadata !9483, metadata !9787}
!9787 = metadata !{i32 329, i32 0, metadata !5171, null}
!9788 = metadata !{i32 134, i32 0, metadata !9483, metadata !9787}
!9789 = metadata !{i32 130, i32 0, metadata !9483, metadata !9787}
!9790 = metadata !{i32 333, i32 0, metadata !5234, null}
!9791 = metadata !{i32 24, i32 0, metadata !9487, metadata !9792}
!9792 = metadata !{i32 334, i32 0, metadata !5234, null}
!9793 = metadata !{i32 335, i32 0, metadata !5234, null}
!9794 = metadata !{i32 24, i32 0, metadata !9487, metadata !9795}
!9795 = metadata !{i32 336, i32 0, metadata !5234, null}
!9796 = metadata !{i32 337, i32 0, metadata !5234, null}
!9797 = metadata !{i32 338, i32 0, metadata !5234, null}
!9798 = metadata !{i32 46, i32 0, metadata !5153, metadata !9797}
!9799 = metadata !{i32 24, i32 0, metadata !9487, metadata !9798}
!9800 = metadata !{i32 47, i32 0, metadata !5153, metadata !9797}
!9801 = metadata !{i32 49, i32 0, metadata !5153, metadata !9797}
!9802 = metadata !{i32 32, i32 0, metadata !9502, metadata !9803}
!9803 = metadata !{i32 52, i32 0, metadata !5153, metadata !9797}
!9804 = metadata !{i32 53, i32 0, metadata !5153, metadata !9797}
!9805 = metadata !{i32 54, i32 0, metadata !5153, metadata !9797}
!9806 = metadata !{i32 24, i32 0, metadata !9487, metadata !9807}
!9807 = metadata !{i32 56, i32 0, metadata !5153, metadata !9797}
!9808 = metadata !{i32 51, i32 0, metadata !5153, metadata !9797}
!9809 = metadata !{i32 339, i32 0, metadata !5234, null}
!9810 = metadata !{i32 130, i32 0, metadata !9483, metadata !9809}
!9811 = metadata !{i32 131, i32 0, metadata !9483, metadata !9809}
!9812 = metadata !{i32 134, i32 0, metadata !9483, metadata !9809}
!9813 = metadata !{i32 341, i32 0, metadata !5234, null}
!9814 = metadata !{i32 24, i32 0, metadata !9487, metadata !9815}
!9815 = metadata !{i32 342, i32 0, metadata !5234, null}
!9816 = metadata !{i32 340, i32 0, metadata !5234, null}
!9817 = metadata !{i32 343, i32 0, metadata !5234, null}
!9818 = metadata !{i32 344, i32 0, metadata !5234, null}
!9819 = metadata !{i32 46, i32 0, metadata !5153, metadata !9818}
!9820 = metadata !{i32 24, i32 0, metadata !9487, metadata !9819}
!9821 = metadata !{i32 47, i32 0, metadata !5153, metadata !9818}
!9822 = metadata !{i32 49, i32 0, metadata !5153, metadata !9818}
!9823 = metadata !{i32 32, i32 0, metadata !9502, metadata !9824}
!9824 = metadata !{i32 52, i32 0, metadata !5153, metadata !9818}
!9825 = metadata !{i32 53, i32 0, metadata !5153, metadata !9818}
!9826 = metadata !{i32 54, i32 0, metadata !5153, metadata !9818}
!9827 = metadata !{i32 24, i32 0, metadata !9487, metadata !9828}
!9828 = metadata !{i32 56, i32 0, metadata !5153, metadata !9818}
!9829 = metadata !{i32 51, i32 0, metadata !5153, metadata !9818}
!9830 = metadata !{i32 345, i32 0, metadata !5234, null}
!9831 = metadata !{i32 46, i32 0, metadata !5153, metadata !9830}
!9832 = metadata !{i32 24, i32 0, metadata !9487, metadata !9831}
!9833 = metadata !{i32 47, i32 0, metadata !5153, metadata !9830}
!9834 = metadata !{i32 49, i32 0, metadata !5153, metadata !9830}
!9835 = metadata !{i32 32, i32 0, metadata !9502, metadata !9836}
!9836 = metadata !{i32 52, i32 0, metadata !5153, metadata !9830}
!9837 = metadata !{i32 53, i32 0, metadata !5153, metadata !9830}
!9838 = metadata !{i32 54, i32 0, metadata !5153, metadata !9830}
!9839 = metadata !{i32 24, i32 0, metadata !9487, metadata !9840}
!9840 = metadata !{i32 56, i32 0, metadata !5153, metadata !9830}
!9841 = metadata !{i32 51, i32 0, metadata !5153, metadata !9830}
!9842 = metadata !{i32 346, i32 0, metadata !5234, null}
!9843 = metadata !{i32 131, i32 0, metadata !9483, metadata !9844}
!9844 = metadata !{i32 348, i32 0, metadata !5234, null}
!9845 = metadata !{i32 134, i32 0, metadata !9483, metadata !9844}
!9846 = metadata !{i32 130, i32 0, metadata !9483, metadata !9844}
!9847 = metadata !{i32 349, i32 0, metadata !5234, null}
!9848 = metadata !{i32 350, i32 0, metadata !5234, null}
!9849 = metadata !{i32 24, i32 0, metadata !9487, metadata !9850}
!9850 = metadata !{i32 351, i32 0, metadata !5234, null}
!9851 = metadata !{i32 352, i32 0, metadata !5234, null}
!9852 = metadata !{i32 353, i32 0, metadata !5234, null}
!9853 = metadata !{i32 354, i32 0, metadata !5234, null}
!9854 = metadata !{i32 356, i32 0, metadata !5234, null}
!9855 = metadata !{i32 131, i32 0, metadata !9483, metadata !9856}
!9856 = metadata !{i32 358, i32 0, metadata !5234, null}
!9857 = metadata !{i32 134, i32 0, metadata !9483, metadata !9856}
!9858 = metadata !{i32 130, i32 0, metadata !9483, metadata !9856}
!9859 = metadata !{i32 359, i32 0, metadata !5234, null}
!9860 = metadata !{i32 360, i32 0, metadata !5234, null}
!9861 = metadata !{i32 24, i32 0, metadata !9487, metadata !9862}
!9862 = metadata !{i32 361, i32 0, metadata !5234, null}
!9863 = metadata !{i32 362, i32 0, metadata !5234, null}
!9864 = metadata !{i32 363, i32 0, metadata !5234, null}
!9865 = metadata !{i32 364, i32 0, metadata !5234, null}
!9866 = metadata !{i32 24, i32 0, metadata !9487, metadata !9867}
!9867 = metadata !{i32 367, i32 0, metadata !5234, null}
!9868 = metadata !{i32 153, i32 0, metadata !9512, metadata !9869}
!9869 = metadata !{i32 372, i32 0, metadata !5171, null}
!9870 = metadata !{i32 24, i32 0, metadata !9487, metadata !9871}
!9871 = metadata !{i32 154, i32 0, metadata !9512, metadata !9869}
!9872 = metadata !{i32 156, i32 0, metadata !9512, metadata !9869}
!9873 = metadata !{i32 157, i32 0, metadata !9512, metadata !9869}
!9874 = metadata !{i32 202, i32 0, metadata !5171, null}
!9875 = metadata !{i32 376, i32 0, metadata !5171, null}
!9876 = metadata !{i32 377, i32 0, metadata !5171, null}
!9877 = metadata !{i32 378, i32 0, metadata !5171, null}
!9878 = metadata !{i32 379, i32 0, metadata !5171, null}
!9879 = metadata !{i32 381, i32 0, metadata !5171, null}
!9880 = metadata !{i32 382, i32 0, metadata !5171, null}
!9881 = metadata !{i32 384, i32 0, metadata !5171, null}
!9882 = metadata !{i32 392, i32 0, metadata !5171, null}
!9883 = metadata !{i32 141, i32 0, metadata !5147, null}
!9884 = metadata !{i32 142, i32 0, metadata !5147, null}
!9885 = metadata !{i32 143, i32 0, metadata !5147, null}
!9886 = metadata !{i32 145, i32 0, metadata !5147, null}
!9887 = metadata !{i32 146, i32 0, metadata !5147, null}
!9888 = metadata !{i32 126, i32 0, metadata !9889, metadata !9887}
!9889 = metadata !{i32 589835, metadata !3524, i32 124, i32 0, metadata !3516, i32 2} ; [ DW_TAG_lexical_block ]
!9890 = metadata !{i32 148, i32 0, metadata !5147, null}
!9891 = metadata !{i32 149, i32 0, metadata !5147, null}
!9892 = metadata !{i32 66, i32 0, metadata !5159, null}
!9893 = metadata !{i32 70, i32 0, metadata !5159, null}
!9894 = metadata !{i32 72, i32 0, metadata !5159, null}
!9895 = metadata !{i32 73, i32 0, metadata !5159, null}
!9896 = metadata !{i32 75, i32 0, metadata !5162, null}
!9897 = metadata !{i32 76, i32 0, metadata !5162, null}
!9898 = metadata !{i32 77, i32 0, metadata !5162, null}
!9899 = metadata !{i32 78, i32 0, metadata !5162, null}
!9900 = metadata !{i32 79, i32 0, metadata !5162, null}
!9901 = metadata !{i32 80, i32 0, metadata !5162, null}
!9902 = metadata !{i32 81, i32 0, metadata !5162, null}
!9903 = metadata !{i32 82, i32 0, metadata !5162, null}
!9904 = metadata !{i32 28, i32 0, metadata !9905, metadata !9906}
!9905 = metadata !{i32 589835, metadata !3515, i32 27, i32 0, metadata !3516, i32 0} ; [ DW_TAG_lexical_block ]
!9906 = metadata !{i32 91, i32 0, metadata !5162, null}
!9907 = metadata !{i32 92, i32 0, metadata !5162, null}
!9908 = metadata !{i32 28, i32 0, metadata !9905, metadata !9907}
!9909 = metadata !{i32 93, i32 0, metadata !5162, null}
!9910 = metadata !{i32 94, i32 0, metadata !5162, null}
!9911 = metadata !{i32 28, i32 0, metadata !9905, metadata !9910}
!9912 = metadata !{i32 95, i32 0, metadata !5162, null}
!9913 = metadata !{i32 96, i32 0, metadata !5162, null}
!9914 = metadata !{i32 99, i32 0, metadata !5162, null}
!9915 = metadata !{i32 102, i32 0, metadata !5162, null}
!9916 = metadata !{i32 105, i32 0, metadata !5162, null}
!9917 = metadata !{i32 32, i32 0, metadata !9502, metadata !9916}
!9918 = metadata !{i32 106, i32 0, metadata !5162, null}
!9919 = metadata !{i32 107, i32 0, metadata !5162, null}
!9920 = metadata !{i32 32, i32 0, metadata !9502, metadata !9919}
!9921 = metadata !{i32 108, i32 0, metadata !5162, null}
!9922 = metadata !{i32 109, i32 0, metadata !5162, null}
!9923 = metadata !{i32 112, i32 0, metadata !5162, null}
!9924 = metadata !{i32 24, i32 0, metadata !9487, metadata !9925}
!9925 = metadata !{i32 115, i32 0, metadata !5162, null}
!9926 = metadata !{i32 68, i32 0, metadata !5159, null}
!9927 = metadata !{i32 120, i32 0, metadata !5159, null}
!9928 = metadata !{i32 45, i32 0, metadata !9929, null}
!9929 = metadata !{i32 589835, metadata !3832, i32 44, i32 0, metadata !3556, i32 52} ; [ DW_TAG_lexical_block ]
!9930 = metadata !{i32 46, i32 0, metadata !9929, null}
!9931 = metadata !{i32 92, i32 0, metadata !9932, null}
!9932 = metadata !{i32 589835, metadata !3829, i32 91, i32 0, metadata !3556, i32 51} ; [ DW_TAG_lexical_block ]
!9933 = metadata !{i32 97, i32 0, metadata !9934, null}
!9934 = metadata !{i32 589835, metadata !3781, i32 96, i32 0, metadata !3556, i32 50} ; [ DW_TAG_lexical_block ]
!9935 = metadata !{i32 145, i32 0, metadata !5388, null}
!9936 = metadata !{i32 147, i32 0, metadata !5388, null}
!9937 = metadata !{i32 148, i32 0, metadata !5388, null}
!9938 = metadata !{i32 149, i32 0, metadata !5388, null}
!9939 = metadata !{i32 151, i32 0, metadata !5388, null}
!9940 = metadata !{i32 164, i32 0, metadata !5430, null}
!9941 = metadata !{i32 165, i32 0, metadata !5430, null}
!9942 = metadata !{i32 166, i32 0, metadata !5430, null}
!9943 = metadata !{i32 167, i32 0, metadata !5430, null}
!9944 = metadata !{i32 172, i32 0, metadata !9945, null}
!9945 = metadata !{i32 589835, metadata !3681, i32 171, i32 0, metadata !3556, i32 11} ; [ DW_TAG_lexical_block ]
!9946 = metadata !{i32 173, i32 0, metadata !9945, null}
!9947 = metadata !{i32 174, i32 0, metadata !9945, null}
!9948 = metadata !{i32 244, i32 0, metadata !5424, null}
!9949 = metadata !{i32 244, i32 0, metadata !5425, null}
!9950 = metadata !{i32 249, i32 0, metadata !9951, null}
!9951 = metadata !{i32 589835, metadata !3555, i32 248, i32 0, metadata !3556, i32 0} ; [ DW_TAG_lexical_block ]
!9952 = metadata !{i32 254, i32 0, metadata !9953, null}
!9953 = metadata !{i32 589835, metadata !3562, i32 253, i32 0, metadata !3556, i32 1} ; [ DW_TAG_lexical_block ]
!9954 = metadata !{i32 259, i32 0, metadata !9955, null}
!9955 = metadata !{i32 589835, metadata !3563, i32 258, i32 0, metadata !3556, i32 2} ; [ DW_TAG_lexical_block ]
!9956 = metadata !{i32 862, i32 0, metadata !9957, null}
!9957 = metadata !{i32 589835, metadata !3641, i32 861, i32 0, metadata !3567, i32 5} ; [ DW_TAG_lexical_block ]
!9958 = metadata !{i32 868, i32 0, metadata !9959, null}
!9959 = metadata !{i32 589835, metadata !3646, i32 867, i32 0, metadata !3567, i32 6} ; [ DW_TAG_lexical_block ]
!9960 = metadata !{i32 839, i32 0, metadata !9961, null}
!9961 = metadata !{i32 589835, metadata !3649, i32 838, i32 0, metadata !3567, i32 7} ; [ DW_TAG_lexical_block ]
!9962 = metadata !{i32 840, i32 0, metadata !9961, null}
!9963 = metadata !{i32 841, i32 0, metadata !9961, null}
!9964 = metadata !{i32 842, i32 0, metadata !9961, null}
!9965 = metadata !{i32 847, i32 0, metadata !9961, null}
!9966 = metadata !{i32 100, i32 0, metadata !9967, metadata !9968}
!9967 = metadata !{i32 589835, metadata !3640, i32 99, i32 0, metadata !3567, i32 4} ; [ DW_TAG_lexical_block ]
!9968 = metadata !{i32 848, i32 0, metadata !9961, null}
!9969 = metadata !{i32 102, i32 0, metadata !9967, metadata !9968}
!9970 = metadata !{i32 849, i32 0, metadata !9961, null}
!9971 = metadata !{i32 851, i32 0, metadata !9961, null}
!9972 = metadata !{i32 852, i32 0, metadata !9961, null}
!9973 = metadata !{i32 853, i32 0, metadata !9961, null}
!9974 = metadata !{i32 593, i32 0, metadata !9975, null}
!9975 = metadata !{i32 589835, metadata !3666, i32 592, i32 0, metadata !3556, i32 8} ; [ DW_TAG_lexical_block ]
!9976 = metadata !{i32 594, i32 0, metadata !9975, null}
!9977 = metadata !{i32 595, i32 0, metadata !9975, null}
!9978 = metadata !{i32 800, i32 0, metadata !5261, null}
!9979 = metadata !{i32 801, i32 0, metadata !5261, null}
!9980 = metadata !{i32 802, i32 0, metadata !5261, null}
!9981 = metadata !{i32 803, i32 0, metadata !5261, null}
!9982 = metadata !{i32 806, i32 0, metadata !5261, null}
!9983 = metadata !{i32 807, i32 0, metadata !5261, null}
!9984 = metadata !{i32 808, i32 0, metadata !5261, null}
!9985 = metadata !{i32 811, i32 0, metadata !5261, null}
!9986 = metadata !{i32 812, i32 0, metadata !5261, null}
!9987 = metadata !{i32 813, i32 0, metadata !5261, null}
!9988 = metadata !{i32 816, i32 0, metadata !5261, null}
!9989 = metadata !{i32 818, i32 0, metadata !5261, null}
!9990 = metadata !{i32 821, i32 0, metadata !5261, null}
!9991 = metadata !{i32 824, i32 0, metadata !5261, null}
!9992 = metadata !{i32 828, i32 0, metadata !5261, null}
!9993 = metadata !{i32 825, i32 0, metadata !5261, null}
!9994 = metadata !{i32 826, i32 0, metadata !5261, null}
!9995 = metadata !{i32 830, i32 0, metadata !5261, null}
!9996 = metadata !{i32 831, i32 0, metadata !5261, null}
!9997 = metadata !{i32 833, i32 0, metadata !5261, null}
!9998 = metadata !{i32 795, i32 0, metadata !9999, null}
!9999 = metadata !{i32 589835, metadata !3708, i32 794, i32 0, metadata !3567, i32 13} ; [ DW_TAG_lexical_block ]
!10000 = metadata !{i32 711, i32 0, metadata !5274, null}
!10001 = metadata !{i32 712, i32 0, metadata !5274, null}
!10002 = metadata !{i32 713, i32 0, metadata !5274, null}
!10003 = metadata !{i32 716, i32 0, metadata !5274, null}
!10004 = metadata !{i32 717, i32 0, metadata !5274, null}
!10005 = metadata !{i32 719, i32 0, metadata !5274, null}
!10006 = metadata !{i32 720, i32 0, metadata !5274, null}
!10007 = metadata !{i32 721, i32 0, metadata !5274, null}
!10008 = metadata !{i32 722, i32 0, metadata !5274, null}
!10009 = metadata !{i32 723, i32 0, metadata !5274, null}
!10010 = metadata !{i32 724, i32 0, metadata !5274, null}
!10011 = metadata !{i32 725, i32 0, metadata !5274, null}
!10012 = metadata !{i32 727, i32 0, metadata !5274, null}
!10013 = metadata !{i32 729, i32 0, metadata !5274, null}
!10014 = metadata !{i32 711, i32 0, metadata !5274, metadata !10015}
!10015 = metadata !{i32 702, i32 0, metadata !10016, null}
!10016 = metadata !{i32 589835, metadata !3720, i32 701, i32 0, metadata !3567, i32 15} ; [ DW_TAG_lexical_block ]
!10017 = metadata !{i32 712, i32 0, metadata !5274, metadata !10015}
!10018 = metadata !{i32 713, i32 0, metadata !5274, metadata !10015}
!10019 = metadata !{i32 716, i32 0, metadata !5274, metadata !10015}
!10020 = metadata !{i32 717, i32 0, metadata !5274, metadata !10015}
!10021 = metadata !{i32 719, i32 0, metadata !5274, metadata !10015}
!10022 = metadata !{i32 720, i32 0, metadata !5274, metadata !10015}
!10023 = metadata !{i32 721, i32 0, metadata !5274, metadata !10015}
!10024 = metadata !{i32 722, i32 0, metadata !5274, metadata !10015}
!10025 = metadata !{i32 723, i32 0, metadata !5274, metadata !10015}
!10026 = metadata !{i32 724, i32 0, metadata !5274, metadata !10015}
!10027 = metadata !{i32 725, i32 0, metadata !5274, metadata !10015}
!10028 = metadata !{i32 727, i32 0, metadata !5274, metadata !10015}
!10029 = metadata !{i32 729, i32 0, metadata !5274, metadata !10015}
!10030 = metadata !{i32 716, i32 0, metadata !5274, metadata !10031}
!10031 = metadata !{i32 673, i32 0, metadata !10032, null}
!10032 = metadata !{i32 589835, metadata !3721, i32 672, i32 0, metadata !3567, i32 16} ; [ DW_TAG_lexical_block ]
!10033 = metadata !{i32 717, i32 0, metadata !5274, metadata !10031}
!10034 = metadata !{i32 719, i32 0, metadata !5274, metadata !10031}
!10035 = metadata !{i32 720, i32 0, metadata !5274, metadata !10031}
!10036 = metadata !{i32 721, i32 0, metadata !5274, metadata !10031}
!10037 = metadata !{i32 722, i32 0, metadata !5274, metadata !10031}
!10038 = metadata !{i32 723, i32 0, metadata !5274, metadata !10031}
!10039 = metadata !{i32 724, i32 0, metadata !5274, metadata !10031}
!10040 = metadata !{i32 725, i32 0, metadata !5274, metadata !10031}
!10041 = metadata !{i32 727, i32 0, metadata !5274, metadata !10031}
!10042 = metadata !{i32 716, i32 0, metadata !5274, metadata !10043}
!10043 = metadata !{i32 673, i32 0, metadata !10032, metadata !10044}
!10044 = metadata !{i32 668, i32 0, metadata !10045, null}
!10045 = metadata !{i32 589835, metadata !3724, i32 667, i32 0, metadata !3567, i32 17} ; [ DW_TAG_lexical_block ]
!10046 = metadata !{i32 717, i32 0, metadata !5274, metadata !10043}
!10047 = metadata !{i32 719, i32 0, metadata !5274, metadata !10043}
!10048 = metadata !{i32 720, i32 0, metadata !5274, metadata !10043}
!10049 = metadata !{i32 721, i32 0, metadata !5274, metadata !10043}
!10050 = metadata !{i32 722, i32 0, metadata !5274, metadata !10043}
!10051 = metadata !{i32 723, i32 0, metadata !5274, metadata !10043}
!10052 = metadata !{i32 724, i32 0, metadata !5274, metadata !10043}
!10053 = metadata !{i32 725, i32 0, metadata !5274, metadata !10043}
!10054 = metadata !{i32 727, i32 0, metadata !5274, metadata !10043}
!10055 = metadata !{i32 741, i32 0, metadata !5295, null}
!10056 = metadata !{i32 742, i32 0, metadata !5295, null}
!10057 = metadata !{i32 743, i32 0, metadata !5295, null}
!10058 = metadata !{i32 744, i32 0, metadata !5295, null}
!10059 = metadata !{i32 747, i32 0, metadata !5295, null}
!10060 = metadata !{i32 748, i32 0, metadata !5295, null}
!10061 = metadata !{i32 749, i32 0, metadata !5295, null}
!10062 = metadata !{i32 752, i32 0, metadata !5295, null}
!10063 = metadata !{i32 753, i32 0, metadata !5295, null}
!10064 = metadata !{i32 754, i32 0, metadata !5295, null}
!10065 = metadata !{i32 757, i32 0, metadata !5295, null}
!10066 = metadata !{i32 759, i32 0, metadata !5295, null}
!10067 = metadata !{i32 762, i32 0, metadata !5295, null}
!10068 = metadata !{i32 763, i32 0, metadata !5295, null}
!10069 = metadata !{i32 764, i32 0, metadata !5295, null}
!10070 = metadata !{i32 765, i32 0, metadata !5295, null}
!10071 = metadata !{i32 766, i32 0, metadata !5295, null}
!10072 = metadata !{i32 770, i32 0, metadata !5295, null}
!10073 = metadata !{i32 771, i32 0, metadata !5295, null}
!10074 = metadata !{i32 772, i32 0, metadata !5295, null}
!10075 = metadata !{i32 775, i32 0, metadata !5295, null}
!10076 = metadata !{i32 776, i32 0, metadata !5295, null}
!10077 = metadata !{i32 777, i32 0, metadata !5295, null}
!10078 = metadata !{i32 781, i32 0, metadata !5295, null}
!10079 = metadata !{i32 782, i32 0, metadata !5295, null}
!10080 = metadata !{i32 786, i32 0, metadata !5295, null}
!10081 = metadata !{i32 787, i32 0, metadata !5295, null}
!10082 = metadata !{i32 789, i32 0, metadata !5295, null}
!10083 = metadata !{i32 736, i32 0, metadata !10084, null}
!10084 = metadata !{i32 589835, metadata !3730, i32 735, i32 0, metadata !3567, i32 19} ; [ DW_TAG_lexical_block ]
!10085 = metadata !{i32 686, i32 0, metadata !5306, null}
!10086 = metadata !{i32 687, i32 0, metadata !5306, null}
!10087 = metadata !{i32 689, i32 0, metadata !5306, null}
!10088 = metadata !{i32 690, i32 0, metadata !5306, null}
!10089 = metadata !{i32 691, i32 0, metadata !5306, null}
!10090 = metadata !{i32 692, i32 0, metadata !5306, null}
!10091 = metadata !{i32 693, i32 0, metadata !5306, null}
!10092 = metadata !{i32 694, i32 0, metadata !5306, null}
!10093 = metadata !{i32 695, i32 0, metadata !5306, null}
!10094 = metadata !{i32 697, i32 0, metadata !5306, null}
!10095 = metadata !{i32 686, i32 0, metadata !5306, metadata !10096}
!10096 = metadata !{i32 678, i32 0, metadata !10097, null}
!10097 = metadata !{i32 589835, metadata !3736, i32 677, i32 0, metadata !3567, i32 21} ; [ DW_TAG_lexical_block ]
!10098 = metadata !{i32 687, i32 0, metadata !5306, metadata !10096}
!10099 = metadata !{i32 689, i32 0, metadata !5306, metadata !10096}
!10100 = metadata !{i32 690, i32 0, metadata !5306, metadata !10096}
!10101 = metadata !{i32 691, i32 0, metadata !5306, metadata !10096}
!10102 = metadata !{i32 692, i32 0, metadata !5306, metadata !10096}
!10103 = metadata !{i32 693, i32 0, metadata !5306, metadata !10096}
!10104 = metadata !{i32 694, i32 0, metadata !5306, metadata !10096}
!10105 = metadata !{i32 695, i32 0, metadata !5306, metadata !10096}
!10106 = metadata !{i32 697, i32 0, metadata !5306, metadata !10096}
!10107 = metadata !{i32 686, i32 0, metadata !5306, metadata !10108}
!10108 = metadata !{i32 664, i32 0, metadata !10109, null}
!10109 = metadata !{i32 589835, metadata !3737, i32 663, i32 0, metadata !3567, i32 22} ; [ DW_TAG_lexical_block ]
!10110 = metadata !{i32 687, i32 0, metadata !5306, metadata !10108}
!10111 = metadata !{i32 689, i32 0, metadata !5306, metadata !10108}
!10112 = metadata !{i32 690, i32 0, metadata !5306, metadata !10108}
!10113 = metadata !{i32 691, i32 0, metadata !5306, metadata !10108}
!10114 = metadata !{i32 692, i32 0, metadata !5306, metadata !10108}
!10115 = metadata !{i32 693, i32 0, metadata !5306, metadata !10108}
!10116 = metadata !{i32 694, i32 0, metadata !5306, metadata !10108}
!10117 = metadata !{i32 695, i32 0, metadata !5306, metadata !10108}
!10118 = metadata !{i32 697, i32 0, metadata !5306, metadata !10108}
!10119 = metadata !{i32 686, i32 0, metadata !5306, metadata !10120}
!10120 = metadata !{i32 664, i32 0, metadata !10109, metadata !10121}
!10121 = metadata !{i32 659, i32 0, metadata !10122, null}
!10122 = metadata !{i32 589835, metadata !3738, i32 658, i32 0, metadata !3567, i32 23} ; [ DW_TAG_lexical_block ]
!10123 = metadata !{i32 687, i32 0, metadata !5306, metadata !10120}
!10124 = metadata !{i32 689, i32 0, metadata !5306, metadata !10120}
!10125 = metadata !{i32 690, i32 0, metadata !5306, metadata !10120}
!10126 = metadata !{i32 691, i32 0, metadata !5306, metadata !10120}
!10127 = metadata !{i32 692, i32 0, metadata !5306, metadata !10120}
!10128 = metadata !{i32 693, i32 0, metadata !5306, metadata !10120}
!10129 = metadata !{i32 694, i32 0, metadata !5306, metadata !10120}
!10130 = metadata !{i32 695, i32 0, metadata !5306, metadata !10120}
!10131 = metadata !{i32 697, i32 0, metadata !5306, metadata !10120}
!10132 = metadata !{i32 616, i32 0, metadata !5325, null}
!10133 = metadata !{i32 618, i32 0, metadata !5325, null}
!10134 = metadata !{i32 619, i32 0, metadata !5325, null}
!10135 = metadata !{i32 620, i32 0, metadata !5325, null}
!10136 = metadata !{i32 623, i32 0, metadata !5325, null}
!10137 = metadata !{i32 624, i32 0, metadata !5325, null}
!10138 = metadata !{i32 625, i32 0, metadata !5325, null}
!10139 = metadata !{i32 628, i32 0, metadata !5325, null}
!10140 = metadata !{i32 631, i32 0, metadata !5325, null}
!10141 = metadata !{i32 633, i32 0, metadata !5325, null}
!10142 = metadata !{i32 635, i32 0, metadata !5325, null}
!10143 = metadata !{i32 637, i32 0, metadata !5325, null}
!10144 = metadata !{i32 639, i32 0, metadata !5325, null}
!10145 = metadata !{i32 640, i32 0, metadata !5325, null}
!10146 = metadata !{i32 647, i32 0, metadata !5327, null}
!10147 = metadata !{i32 648, i32 0, metadata !5327, null}
!10148 = metadata !{i32 649, i32 0, metadata !5327, null}
!10149 = metadata !{i32 650, i32 0, metadata !5327, null}
!10150 = metadata !{i32 610, i32 0, metadata !5330, null}
!10151 = metadata !{i32 611, i32 0, metadata !5330, null}
!10152 = metadata !{i32 612, i32 0, metadata !5330, null}
!10153 = metadata !{i32 573, i32 0, metadata !5336, null}
!10154 = metadata !{i32 575, i32 0, metadata !5336, null}
!10155 = metadata !{i32 576, i32 0, metadata !5336, null}
!10156 = metadata !{i32 577, i32 0, metadata !5336, null}
!10157 = metadata !{i32 580, i32 0, metadata !5336, null}
!10158 = metadata !{i32 581, i32 0, metadata !5336, null}
!10159 = metadata !{i32 582, i32 0, metadata !5336, null}
!10160 = metadata !{i32 585, i32 0, metadata !5336, null}
!10161 = metadata !{i32 587, i32 0, metadata !5336, null}
!10162 = metadata !{i32 588, i32 0, metadata !5336, null}
!10163 = metadata !{i32 589, i32 0, metadata !5336, null}
!10164 = metadata !{i32 590, i32 0, metadata !5336, null}
!10165 = metadata !{i32 592, i32 0, metadata !5336, null}
!10166 = metadata !{i32 593, i32 0, metadata !5336, null}
!10167 = metadata !{i32 598, i32 0, metadata !5336, null}
!10168 = metadata !{i32 599, i32 0, metadata !5336, null}
!10169 = metadata !{i32 600, i32 0, metadata !5336, null}
!10170 = metadata !{i32 601, i32 0, metadata !5336, null}
!10171 = metadata !{i32 565, i32 0, metadata !5340, null}
!10172 = metadata !{i32 566, i32 0, metadata !5340, null}
!10173 = metadata !{i32 567, i32 0, metadata !5340, null}
!10174 = metadata !{i32 568, i32 0, metadata !5340, null}
!10175 = metadata !{i32 528, i32 0, metadata !5347, null}
!10176 = metadata !{i32 531, i32 0, metadata !5347, null}
!10177 = metadata !{i32 532, i32 0, metadata !5347, null}
!10178 = metadata !{i32 533, i32 0, metadata !5347, null}
!10179 = metadata !{i32 536, i32 0, metadata !5347, null}
!10180 = metadata !{i32 537, i32 0, metadata !5347, null}
!10181 = metadata !{i32 538, i32 0, metadata !5347, null}
!10182 = metadata !{i32 541, i32 0, metadata !5347, null}
!10183 = metadata !{i32 543, i32 0, metadata !5347, null}
!10184 = metadata !{i32 544, i32 0, metadata !5347, null}
!10185 = metadata !{i32 545, i32 0, metadata !5347, null}
!10186 = metadata !{i32 546, i32 0, metadata !5347, null}
!10187 = metadata !{i32 548, i32 0, metadata !5347, null}
!10188 = metadata !{i32 549, i32 0, metadata !5347, null}
!10189 = metadata !{i32 552, i32 0, metadata !5347, null}
!10190 = metadata !{i32 553, i32 0, metadata !5347, null}
!10191 = metadata !{i32 554, i32 0, metadata !5347, null}
!10192 = metadata !{i32 555, i32 0, metadata !5347, null}
!10193 = metadata !{i32 520, i32 0, metadata !5351, null}
!10194 = metadata !{i32 521, i32 0, metadata !5351, null}
!10195 = metadata !{i32 522, i32 0, metadata !5351, null}
!10196 = metadata !{i32 524, i32 0, metadata !5351, null}
!10197 = metadata !{i32 377, i32 0, metadata !5357, null}
!10198 = metadata !{i32 379, i32 0, metadata !5357, null}
!10199 = metadata !{i32 380, i32 0, metadata !5357, null}
!10200 = metadata !{i32 381, i32 0, metadata !5357, null}
!10201 = metadata !{i32 384, i32 0, metadata !5357, null}
!10202 = metadata !{i32 385, i32 0, metadata !5357, null}
!10203 = metadata !{i32 386, i32 0, metadata !5357, null}
!10204 = metadata !{i32 389, i32 0, metadata !5357, null}
!10205 = metadata !{i32 390, i32 0, metadata !5357, null}
!10206 = metadata !{i32 391, i32 0, metadata !5357, null}
!10207 = metadata !{i32 394, i32 0, metadata !5357, null}
!10208 = metadata !{i32 398, i32 0, metadata !5357, null}
!10209 = metadata !{i32 399, i32 0, metadata !5357, null}
!10210 = metadata !{i32 400, i32 0, metadata !5357, null}
!10211 = metadata !{i32 404, i32 0, metadata !5357, null}
!10212 = metadata !{i32 406, i32 0, metadata !5357, null}
!10213 = metadata !{i32 369, i32 0, metadata !5361, null}
!10214 = metadata !{i32 370, i32 0, metadata !5361, null}
!10215 = metadata !{i32 372, i32 0, metadata !5361, null}
!10216 = metadata !{i32 321, i32 0, metadata !5367, null}
!10217 = metadata !{i32 323, i32 0, metadata !5367, null}
!10218 = metadata !{i32 324, i32 0, metadata !5367, null}
!10219 = metadata !{i32 325, i32 0, metadata !5367, null}
!10220 = metadata !{i32 328, i32 0, metadata !5367, null}
!10221 = metadata !{i32 329, i32 0, metadata !5367, null}
!10222 = metadata !{i32 330, i32 0, metadata !5367, null}
!10223 = metadata !{i32 333, i32 0, metadata !5367, null}
!10224 = metadata !{i32 335, i32 0, metadata !5367, null}
!10225 = metadata !{i32 336, i32 0, metadata !5367, null}
!10226 = metadata !{i32 337, i32 0, metadata !5367, null}
!10227 = metadata !{i32 338, i32 0, metadata !5367, null}
!10228 = metadata !{i32 339, i32 0, metadata !5367, null}
!10229 = metadata !{i32 341, i32 0, metadata !5367, null}
!10230 = metadata !{i32 342, i32 0, metadata !5367, null}
!10231 = metadata !{i32 343, i32 0, metadata !5367, null}
!10232 = metadata !{i32 345, i32 0, metadata !5367, null}
!10233 = metadata !{i32 346, i32 0, metadata !5367, null}
!10234 = metadata !{i32 348, i32 0, metadata !5367, null}
!10235 = metadata !{i32 352, i32 0, metadata !5367, null}
!10236 = metadata !{i32 364, i32 0, metadata !5367, null}
!10237 = metadata !{i32 357, i32 0, metadata !5367, null}
!10238 = metadata !{i32 358, i32 0, metadata !5367, null}
!10239 = metadata !{i32 359, i32 0, metadata !5367, null}
!10240 = metadata !{i32 313, i32 0, metadata !5371, null}
!10241 = metadata !{i32 314, i32 0, metadata !5371, null}
!10242 = metadata !{i32 315, i32 0, metadata !5371, null}
!10243 = metadata !{i32 316, i32 0, metadata !5371, null}
!10244 = metadata !{i32 269, i32 0, metadata !5378, null}
!10245 = metadata !{i32 271, i32 0, metadata !5378, null}
!10246 = metadata !{i32 272, i32 0, metadata !5378, null}
!10247 = metadata !{i32 273, i32 0, metadata !5378, null}
!10248 = metadata !{i32 276, i32 0, metadata !5378, null}
!10249 = metadata !{i32 277, i32 0, metadata !5378, null}
!10250 = metadata !{i32 278, i32 0, metadata !5378, null}
!10251 = metadata !{i32 281, i32 0, metadata !5378, null}
!10252 = metadata !{i32 283, i32 0, metadata !5378, null}
!10253 = metadata !{i32 284, i32 0, metadata !5378, null}
!10254 = metadata !{i32 285, i32 0, metadata !5378, null}
!10255 = metadata !{i32 286, i32 0, metadata !5378, null}
!10256 = metadata !{i32 288, i32 0, metadata !5378, null}
!10257 = metadata !{i32 289, i32 0, metadata !5378, null}
!10258 = metadata !{i32 290, i32 0, metadata !5378, null}
!10259 = metadata !{i32 293, i32 0, metadata !5378, null}
!10260 = metadata !{i32 294, i32 0, metadata !5378, null}
!10261 = metadata !{i32 302, i32 0, metadata !5378, null}
!10262 = metadata !{i32 303, i32 0, metadata !5378, null}
!10263 = metadata !{i32 304, i32 0, metadata !5378, null}
!10264 = metadata !{i32 260, i32 0, metadata !5382, null}
!10265 = metadata !{i32 261, i32 0, metadata !5382, null}
!10266 = metadata !{i32 262, i32 0, metadata !5382, null}
!10267 = metadata !{i32 264, i32 0, metadata !5382, null}
!10268 = metadata !{i32 107, i32 0, metadata !10269, null}
!10269 = metadata !{i32 589835, metadata !3763, i32 106, i32 0, metadata !3567, i32 38} ; [ DW_TAG_lexical_block ]
!10270 = metadata !{i32 108, i32 0, metadata !10269, null}
!10271 = metadata !{i32 117, i32 0, metadata !10269, null}
!10272 = metadata !{i32 120, i32 0, metadata !10269, null}
!10273 = metadata !{i32 123, i32 0, metadata !10269, null}
!10274 = metadata !{i32 127, i32 0, metadata !10269, null}
!10275 = metadata !{i32 416, i32 0, metadata !5395, null}
!10276 = metadata !{i32 418, i32 0, metadata !5395, null}
!10277 = metadata !{i32 419, i32 0, metadata !5395, null}
!10278 = metadata !{i32 420, i32 0, metadata !5395, null}
!10279 = metadata !{i32 423, i32 0, metadata !5395, null}
!10280 = metadata !{i32 424, i32 0, metadata !5395, null}
!10281 = metadata !{i32 425, i32 0, metadata !5395, null}
!10282 = metadata !{i32 428, i32 0, metadata !5395, null}
!10283 = metadata !{i32 429, i32 0, metadata !5395, null}
!10284 = metadata !{i32 430, i32 0, metadata !5395, null}
!10285 = metadata !{i32 433, i32 0, metadata !5395, null}
!10286 = metadata !{i32 434, i32 0, metadata !5395, null}
!10287 = metadata !{i32 435, i32 0, metadata !5395, null}
!10288 = metadata !{i32 446, i32 0, metadata !5395, null}
!10289 = metadata !{i32 448, i32 0, metadata !5395, null}
!10290 = metadata !{i32 449, i32 0, metadata !5395, null}
!10291 = metadata !{i32 450, i32 0, metadata !5395, null}
!10292 = metadata !{i32 452, i32 0, metadata !5395, null}
!10293 = metadata !{i32 93, i32 0, metadata !10294, metadata !10292}
!10294 = metadata !{i32 589835, metadata !3566, i32 88, i32 0, metadata !3567, i32 3} ; [ DW_TAG_lexical_block ]
!10295 = metadata !{i32 95, i32 0, metadata !10294, metadata !10292}
!10296 = metadata !{i32 453, i32 0, metadata !5395, null}
!10297 = metadata !{i32 454, i32 0, metadata !5395, null}
!10298 = metadata !{i32 455, i32 0, metadata !5395, null}
!10299 = metadata !{i32 456, i32 0, metadata !5395, null}
!10300 = metadata !{i32 457, i32 0, metadata !5395, null}
!10301 = metadata !{i32 461, i32 0, metadata !5395, null}
!10302 = metadata !{i32 462, i32 0, metadata !5395, null}
!10303 = metadata !{i32 463, i32 0, metadata !5395, null}
!10304 = metadata !{i32 464, i32 0, metadata !5395, null}
!10305 = metadata !{i32 465, i32 0, metadata !5395, null}
!10306 = metadata !{i32 470, i32 0, metadata !5395, null}
!10307 = metadata !{i32 471, i32 0, metadata !5395, null}
!10308 = metadata !{i32 474, i32 0, metadata !5395, null}
!10309 = metadata !{i32 477, i32 0, metadata !5395, null}
!10310 = metadata !{i32 478, i32 0, metadata !5395, null}
!10311 = metadata !{i32 479, i32 0, metadata !5395, null}
!10312 = metadata !{i32 480, i32 0, metadata !5395, null}
!10313 = metadata !{i32 481, i32 0, metadata !5395, null}
!10314 = metadata !{i32 482, i32 0, metadata !5395, null}
!10315 = metadata !{i32 483, i32 0, metadata !5395, null}
!10316 = metadata !{i32 484, i32 0, metadata !5395, null}
!10317 = metadata !{i32 485, i32 0, metadata !5395, null}
!10318 = metadata !{i32 487, i32 0, metadata !5395, null}
!10319 = metadata !{i32 488, i32 0, metadata !5395, null}
!10320 = metadata !{i32 491, i32 0, metadata !5395, null}
!10321 = metadata !{i32 496, i32 0, metadata !5395, null}
!10322 = metadata !{i32 499, i32 0, metadata !5399, null}
!10323 = metadata !{i32 500, i32 0, metadata !5399, null}
!10324 = metadata !{i32 501, i32 0, metadata !5399, null}
!10325 = metadata !{i32 502, i32 0, metadata !5399, null}
!10326 = metadata !{i32 504, i32 0, metadata !5399, null}
!10327 = metadata !{i32 505, i32 0, metadata !5399, null}
!10328 = metadata !{i32 506, i32 0, metadata !5399, null}
!10329 = metadata !{i32 507, i32 0, metadata !5399, null}
!10330 = metadata !{i32 508, i32 0, metadata !5399, null}
!10331 = metadata !{i32 510, i32 0, metadata !5399, null}
!10332 = metadata !{i32 511, i32 0, metadata !5399, null}
!10333 = metadata !{i32 512, i32 0, metadata !5399, null}
!10334 = metadata !{i32 513, i32 0, metadata !5399, null}
!10335 = metadata !{i32 410, i32 0, metadata !10336, null}
!10336 = metadata !{i32 589835, metadata !3767, i32 409, i32 0, metadata !3567, i32 41} ; [ DW_TAG_lexical_block ]
!10337 = metadata !{i32 145, i32 0, metadata !5409, null}
!10338 = metadata !{i32 146, i32 0, metadata !5412, null}
!10339 = metadata !{i32 147, i32 0, metadata !5412, null}
!10340 = metadata !{i32 148, i32 0, metadata !5412, null}
!10341 = metadata !{i32 149, i32 0, metadata !5412, null}
!10342 = metadata !{i32 150, i32 0, metadata !5412, null}
!10343 = metadata !{i32 153, i32 0, metadata !5412, null}
!10344 = metadata !{i32 154, i32 0, metadata !5412, null}
!10345 = metadata !{i32 155, i32 0, metadata !5412, null}
!10346 = metadata !{i32 156, i32 0, metadata !5412, null}
!10347 = metadata !{i32 157, i32 0, metadata !5412, null}
!10348 = metadata !{i32 159, i32 0, metadata !5412, null}
!10349 = metadata !{i32 160, i32 0, metadata !5412, null}
!10350 = metadata !{i32 161, i32 0, metadata !5412, null}
!10351 = metadata !{i32 163, i32 0, metadata !5412, null}
!10352 = metadata !{i32 166, i32 0, metadata !5409, null}
!10353 = metadata !{i32 171, i32 0, metadata !5409, null}
!10354 = metadata !{i32 174, i32 0, metadata !5409, null}
!10355 = metadata !{i32 175, i32 0, metadata !5409, null}
!10356 = metadata !{i32 176, i32 0, metadata !5409, null}
!10357 = metadata !{i32 178, i32 0, metadata !5409, null}
!10358 = metadata !{i32 179, i32 0, metadata !5409, null}
!10359 = metadata !{i32 180, i32 0, metadata !5409, null}
!10360 = metadata !{i32 181, i32 0, metadata !5409, null}
!10361 = metadata !{i32 184, i32 0, metadata !5409, null}
!10362 = metadata !{i32 185, i32 0, metadata !5409, null}
!10363 = metadata !{i32 186, i32 0, metadata !5409, null}
!10364 = metadata !{i32 187, i32 0, metadata !5409, null}
!10365 = metadata !{i32 188, i32 0, metadata !5409, null}
!10366 = metadata !{i32 189, i32 0, metadata !5409, null}
!10367 = metadata !{i32 192, i32 0, metadata !5409, null}
!10368 = metadata !{i32 193, i32 0, metadata !5409, null}
!10369 = metadata !{i32 194, i32 0, metadata !5409, null}
!10370 = metadata !{i32 195, i32 0, metadata !5409, null}
!10371 = metadata !{i32 196, i32 0, metadata !5409, null}
!10372 = metadata !{i32 197, i32 0, metadata !5409, null}
!10373 = metadata !{i32 200, i32 0, metadata !5409, null}
!10374 = metadata !{i32 201, i32 0, metadata !5409, null}
!10375 = metadata !{i32 204, i32 0, metadata !5409, null}
!10376 = metadata !{i32 211, i32 0, metadata !5409, null}
!10377 = metadata !{i32 212, i32 0, metadata !5409, null}
!10378 = metadata !{i32 213, i32 0, metadata !5409, null}
!10379 = metadata !{i32 215, i32 0, metadata !5409, null}
!10380 = metadata !{i32 216, i32 0, metadata !5409, null}
!10381 = metadata !{i32 217, i32 0, metadata !5409, null}
!10382 = metadata !{i32 218, i32 0, metadata !5409, null}
!10383 = metadata !{i32 221, i32 0, metadata !5409, null}
!10384 = metadata !{i32 222, i32 0, metadata !5409, null}
!10385 = metadata !{i32 223, i32 0, metadata !5409, null}
!10386 = metadata !{i32 224, i32 0, metadata !5409, null}
!10387 = metadata !{i32 225, i32 0, metadata !5409, null}
!10388 = metadata !{i32 226, i32 0, metadata !5409, null}
!10389 = metadata !{i32 229, i32 0, metadata !5409, null}
!10390 = metadata !{i32 230, i32 0, metadata !5409, null}
!10391 = metadata !{i32 231, i32 0, metadata !5409, null}
!10392 = metadata !{i32 232, i32 0, metadata !5409, null}
!10393 = metadata !{i32 233, i32 0, metadata !5409, null}
!10394 = metadata !{i32 234, i32 0, metadata !5409, null}
!10395 = metadata !{i32 237, i32 0, metadata !5409, null}
!10396 = metadata !{i32 238, i32 0, metadata !5409, null}
!10397 = metadata !{i32 243, i32 0, metadata !5409, null}
!10398 = metadata !{i32 244, i32 0, metadata !5409, null}
!10399 = metadata !{i32 245, i32 0, metadata !5409, null}
!10400 = metadata !{i32 251, i32 0, metadata !5409, null}
!10401 = metadata !{i32 252, i32 0, metadata !5409, null}
!10402 = metadata !{i32 253, i32 0, metadata !5409, null}
!10403 = metadata !{i32 134, i32 0, metadata !5415, null}
!10404 = metadata !{i32 135, i32 0, metadata !5415, null}
!10405 = metadata !{i32 136, i32 0, metadata !5415, null}
!10406 = metadata !{i32 138, i32 0, metadata !5415, null}
!10407 = metadata !{i32 26, i32 0, metadata !10408, null}
!10408 = metadata !{i32 589835, metadata !3772, i32 25, i32 0, metadata !3567, i32 45} ; [ DW_TAG_lexical_block ]
!10409 = metadata !{i32 134, i32 0, metadata !5415, metadata !10410}
!10410 = metadata !{i32 28, i32 0, metadata !10408, null}
!10411 = metadata !{i32 135, i32 0, metadata !5415, metadata !10410}
!10412 = metadata !{i32 136, i32 0, metadata !5415, metadata !10410}
!10413 = metadata !{i32 138, i32 0, metadata !5415, metadata !10410}
!10414 = metadata !{i32 260, i32 0, metadata !5382, metadata !10415}
!10415 = metadata !{i32 30, i32 0, metadata !10408, null}
!10416 = metadata !{i32 261, i32 0, metadata !5382, metadata !10415}
!10417 = metadata !{i32 262, i32 0, metadata !5382, metadata !10415}
!10418 = metadata !{i32 264, i32 0, metadata !5382, metadata !10415}
!10419 = metadata !{i32 313, i32 0, metadata !5371, metadata !10420}
!10420 = metadata !{i32 32, i32 0, metadata !10408, null}
!10421 = metadata !{i32 314, i32 0, metadata !5371, metadata !10420}
!10422 = metadata !{i32 315, i32 0, metadata !5371, metadata !10420}
!10423 = metadata !{i32 316, i32 0, metadata !5371, metadata !10420}
!10424 = metadata !{i32 369, i32 0, metadata !5361, metadata !10425}
!10425 = metadata !{i32 34, i32 0, metadata !10408, null}
!10426 = metadata !{i32 370, i32 0, metadata !5361, metadata !10425}
!10427 = metadata !{i32 372, i32 0, metadata !5361, metadata !10425}
!10428 = metadata !{i32 36, i32 0, metadata !10408, null}
!10429 = metadata !{i32 520, i32 0, metadata !5351, metadata !10430}
!10430 = metadata !{i32 38, i32 0, metadata !10408, null}
!10431 = metadata !{i32 521, i32 0, metadata !5351, metadata !10430}
!10432 = metadata !{i32 522, i32 0, metadata !5351, metadata !10430}
!10433 = metadata !{i32 524, i32 0, metadata !5351, metadata !10430}
!10434 = metadata !{i32 565, i32 0, metadata !5340, metadata !10435}
!10435 = metadata !{i32 40, i32 0, metadata !10408, null}
!10436 = metadata !{i32 566, i32 0, metadata !5340, metadata !10435}
!10437 = metadata !{i32 567, i32 0, metadata !5340, metadata !10435}
!10438 = metadata !{i32 568, i32 0, metadata !5340, metadata !10435}
!10439 = metadata !{i32 44, i32 0, metadata !10408, null}
!10440 = metadata !{i32 686, i32 0, metadata !5306, metadata !10441}
!10441 = metadata !{i32 664, i32 0, metadata !10109, metadata !10439}
!10442 = metadata !{i32 687, i32 0, metadata !5306, metadata !10441}
!10443 = metadata !{i32 689, i32 0, metadata !5306, metadata !10441}
!10444 = metadata !{i32 690, i32 0, metadata !5306, metadata !10441}
!10445 = metadata !{i32 691, i32 0, metadata !5306, metadata !10441}
!10446 = metadata !{i32 692, i32 0, metadata !5306, metadata !10441}
!10447 = metadata !{i32 693, i32 0, metadata !5306, metadata !10441}
!10448 = metadata !{i32 694, i32 0, metadata !5306, metadata !10441}
!10449 = metadata !{i32 695, i32 0, metadata !5306, metadata !10441}
!10450 = metadata !{i32 697, i32 0, metadata !5306, metadata !10441}
!10451 = metadata !{i32 46, i32 0, metadata !10408, null}
!10452 = metadata !{i32 716, i32 0, metadata !5274, metadata !10453}
!10453 = metadata !{i32 673, i32 0, metadata !10032, metadata !10451}
!10454 = metadata !{i32 717, i32 0, metadata !5274, metadata !10453}
!10455 = metadata !{i32 719, i32 0, metadata !5274, metadata !10453}
!10456 = metadata !{i32 720, i32 0, metadata !5274, metadata !10453}
!10457 = metadata !{i32 721, i32 0, metadata !5274, metadata !10453}
!10458 = metadata !{i32 722, i32 0, metadata !5274, metadata !10453}
!10459 = metadata !{i32 723, i32 0, metadata !5274, metadata !10453}
!10460 = metadata !{i32 724, i32 0, metadata !5274, metadata !10453}
!10461 = metadata !{i32 725, i32 0, metadata !5274, metadata !10453}
!10462 = metadata !{i32 727, i32 0, metadata !5274, metadata !10453}
!10463 = metadata !{i32 48, i32 0, metadata !10408, null}
!10464 = metadata !{i32 686, i32 0, metadata !5306, metadata !10463}
!10465 = metadata !{i32 687, i32 0, metadata !5306, metadata !10463}
!10466 = metadata !{i32 689, i32 0, metadata !5306, metadata !10463}
!10467 = metadata !{i32 690, i32 0, metadata !5306, metadata !10463}
!10468 = metadata !{i32 691, i32 0, metadata !5306, metadata !10463}
!10469 = metadata !{i32 692, i32 0, metadata !5306, metadata !10463}
!10470 = metadata !{i32 693, i32 0, metadata !5306, metadata !10463}
!10471 = metadata !{i32 694, i32 0, metadata !5306, metadata !10463}
!10472 = metadata !{i32 695, i32 0, metadata !5306, metadata !10463}
!10473 = metadata !{i32 697, i32 0, metadata !5306, metadata !10463}
!10474 = metadata !{i32 51, i32 0, metadata !10408, null}
!10475 = metadata !{i32 711, i32 0, metadata !5274, metadata !10474}
!10476 = metadata !{i32 712, i32 0, metadata !5274, metadata !10474}
!10477 = metadata !{i32 713, i32 0, metadata !5274, metadata !10474}
!10478 = metadata !{i32 716, i32 0, metadata !5274, metadata !10474}
!10479 = metadata !{i32 717, i32 0, metadata !5274, metadata !10474}
!10480 = metadata !{i32 719, i32 0, metadata !5274, metadata !10474}
!10481 = metadata !{i32 720, i32 0, metadata !5274, metadata !10474}
!10482 = metadata !{i32 721, i32 0, metadata !5274, metadata !10474}
!10483 = metadata !{i32 722, i32 0, metadata !5274, metadata !10474}
!10484 = metadata !{i32 723, i32 0, metadata !5274, metadata !10474}
!10485 = metadata !{i32 724, i32 0, metadata !5274, metadata !10474}
!10486 = metadata !{i32 725, i32 0, metadata !5274, metadata !10474}
!10487 = metadata !{i32 727, i32 0, metadata !5274, metadata !10474}
!10488 = metadata !{i32 729, i32 0, metadata !5274, metadata !10474}
!10489 = metadata !{i32 610, i32 0, metadata !5330, metadata !10490}
!10490 = metadata !{i32 54, i32 0, metadata !10408, null}
!10491 = metadata !{i32 611, i32 0, metadata !5330, metadata !10490}
!10492 = metadata !{i32 612, i32 0, metadata !5330, metadata !10490}
!10493 = metadata !{i32 56, i32 0, metadata !10408, null}
!10494 = metadata !{i32 57, i32 0, metadata !10408, null}
!10495 = metadata !{i32 59, i32 0, metadata !10408, null}
!10496 = metadata !{i32 60, i32 0, metadata !10408, null}
!10497 = metadata !{i32 62, i32 0, metadata !10408, null}
!10498 = metadata !{i32 64, i32 0, metadata !10408, null}
!10499 = metadata !{i32 66, i32 0, metadata !10408, null}
!10500 = metadata !{i32 67, i32 0, metadata !10408, null}
!10501 = metadata !{i32 68, i32 0, metadata !10408, null}
!10502 = metadata !{i32 266, i32 0, metadata !10503, null}
!10503 = metadata !{i32 589835, metadata !3775, i32 265, i32 0, metadata !3556, i32 46} ; [ DW_TAG_lexical_block ]
!10504 = metadata !{i32 69, i32 0, metadata !5516, null}
!10505 = metadata !{i32 72, i32 0, metadata !5518, null}
!10506 = metadata !{i32 73, i32 0, metadata !5518, null}
!10507 = metadata !{i32 74, i32 0, metadata !5518, null}
!10508 = metadata !{i32 77, i32 0, metadata !5516, null}
!10509 = metadata !{i32 208, i32 0, metadata !10510, null}
!10510 = metadata !{i32 589835, metadata !3994, i32 207, i32 0, metadata !3928, i32 1} ; [ DW_TAG_lexical_block ]
!10511 = metadata !{i32 121, i32 0, metadata !5451, null}
!10512 = metadata !{i32 43, i32 0, metadata !10513, metadata !10514}
!10513 = metadata !{i32 589835, metadata !3927, i32 42, i32 0, metadata !3928, i32 0} ; [ DW_TAG_lexical_block ]
!10514 = metadata !{i32 122, i32 0, metadata !5451, null}
!10515 = metadata !{i32 44, i32 0, metadata !10513, metadata !10514}
!10516 = metadata !{i32 45, i32 0, metadata !10513, metadata !10514}
!10517 = metadata !{i32 46, i32 0, metadata !10513, metadata !10514}
!10518 = metadata !{i32 47, i32 0, metadata !10513, metadata !10514}
!10519 = metadata !{i32 48, i32 0, metadata !10513, metadata !10514}
!10520 = metadata !{i32 49, i32 0, metadata !10513, metadata !10514}
!10521 = metadata !{i32 50, i32 0, metadata !10513, metadata !10514}
!10522 = metadata !{i32 51, i32 0, metadata !10513, metadata !10514}
!10523 = metadata !{i32 52, i32 0, metadata !10513, metadata !10514}
!10524 = metadata !{i32 53, i32 0, metadata !10513, metadata !10514}
!10525 = metadata !{i32 54, i32 0, metadata !10513, metadata !10514}
!10526 = metadata !{i32 55, i32 0, metadata !10513, metadata !10514}
!10527 = metadata !{i32 57, i32 0, metadata !10513, metadata !10514}
!10528 = metadata !{i32 58, i32 0, metadata !10513, metadata !10514}
!10529 = metadata !{i32 59, i32 0, metadata !10513, metadata !10514}
!10530 = metadata !{i32 123, i32 0, metadata !5451, null}
!10531 = metadata !{i32 114, i32 0, metadata !5457, null}
!10532 = metadata !{i32 43, i32 0, metadata !10513, metadata !10533}
!10533 = metadata !{i32 115, i32 0, metadata !5457, null}
!10534 = metadata !{i32 44, i32 0, metadata !10513, metadata !10533}
!10535 = metadata !{i32 45, i32 0, metadata !10513, metadata !10533}
!10536 = metadata !{i32 46, i32 0, metadata !10513, metadata !10533}
!10537 = metadata !{i32 47, i32 0, metadata !10513, metadata !10533}
!10538 = metadata !{i32 48, i32 0, metadata !10513, metadata !10533}
!10539 = metadata !{i32 49, i32 0, metadata !10513, metadata !10533}
!10540 = metadata !{i32 50, i32 0, metadata !10513, metadata !10533}
!10541 = metadata !{i32 51, i32 0, metadata !10513, metadata !10533}
!10542 = metadata !{i32 52, i32 0, metadata !10513, metadata !10533}
!10543 = metadata !{i32 53, i32 0, metadata !10513, metadata !10533}
!10544 = metadata !{i32 54, i32 0, metadata !10513, metadata !10533}
!10545 = metadata !{i32 55, i32 0, metadata !10513, metadata !10533}
!10546 = metadata !{i32 57, i32 0, metadata !10513, metadata !10533}
!10547 = metadata !{i32 58, i32 0, metadata !10513, metadata !10533}
!10548 = metadata !{i32 59, i32 0, metadata !10513, metadata !10533}
!10549 = metadata !{i32 116, i32 0, metadata !5457, null}
!10550 = metadata !{i32 204, i32 0, metadata !10551, null}
!10551 = metadata !{i32 589835, metadata !4003, i32 203, i32 0, metadata !3928, i32 4} ; [ DW_TAG_lexical_block ]
!10552 = metadata !{i32 107, i32 0, metadata !5464, null}
!10553 = metadata !{i32 43, i32 0, metadata !10513, metadata !10554}
!10554 = metadata !{i32 108, i32 0, metadata !5464, null}
!10555 = metadata !{i32 44, i32 0, metadata !10513, metadata !10554}
!10556 = metadata !{i32 45, i32 0, metadata !10513, metadata !10554}
!10557 = metadata !{i32 46, i32 0, metadata !10513, metadata !10554}
!10558 = metadata !{i32 47, i32 0, metadata !10513, metadata !10554}
!10559 = metadata !{i32 48, i32 0, metadata !10513, metadata !10554}
!10560 = metadata !{i32 49, i32 0, metadata !10513, metadata !10554}
!10561 = metadata !{i32 50, i32 0, metadata !10513, metadata !10554}
!10562 = metadata !{i32 51, i32 0, metadata !10513, metadata !10554}
!10563 = metadata !{i32 52, i32 0, metadata !10513, metadata !10554}
!10564 = metadata !{i32 53, i32 0, metadata !10513, metadata !10554}
!10565 = metadata !{i32 54, i32 0, metadata !10513, metadata !10554}
!10566 = metadata !{i32 55, i32 0, metadata !10513, metadata !10554}
!10567 = metadata !{i32 57, i32 0, metadata !10513, metadata !10554}
!10568 = metadata !{i32 58, i32 0, metadata !10513, metadata !10554}
!10569 = metadata !{i32 59, i32 0, metadata !10513, metadata !10554}
!10570 = metadata !{i32 109, i32 0, metadata !5464, null}
!10571 = metadata !{i32 100, i32 0, metadata !5470, null}
!10572 = metadata !{i32 43, i32 0, metadata !10513, metadata !10573}
!10573 = metadata !{i32 101, i32 0, metadata !5470, null}
!10574 = metadata !{i32 44, i32 0, metadata !10513, metadata !10573}
!10575 = metadata !{i32 45, i32 0, metadata !10513, metadata !10573}
!10576 = metadata !{i32 46, i32 0, metadata !10513, metadata !10573}
!10577 = metadata !{i32 47, i32 0, metadata !10513, metadata !10573}
!10578 = metadata !{i32 48, i32 0, metadata !10513, metadata !10573}
!10579 = metadata !{i32 49, i32 0, metadata !10513, metadata !10573}
!10580 = metadata !{i32 50, i32 0, metadata !10513, metadata !10573}
!10581 = metadata !{i32 51, i32 0, metadata !10513, metadata !10573}
!10582 = metadata !{i32 52, i32 0, metadata !10513, metadata !10573}
!10583 = metadata !{i32 53, i32 0, metadata !10513, metadata !10573}
!10584 = metadata !{i32 54, i32 0, metadata !10513, metadata !10573}
!10585 = metadata !{i32 55, i32 0, metadata !10513, metadata !10573}
!10586 = metadata !{i32 57, i32 0, metadata !10513, metadata !10573}
!10587 = metadata !{i32 58, i32 0, metadata !10513, metadata !10573}
!10588 = metadata !{i32 59, i32 0, metadata !10513, metadata !10573}
!10589 = metadata !{i32 102, i32 0, metadata !5470, null}
!10590 = metadata !{i32 200, i32 0, metadata !10591, null}
!10591 = metadata !{i32 589835, metadata !4015, i32 199, i32 0, metadata !3928, i32 7} ; [ DW_TAG_lexical_block ]
!10592 = metadata !{i32 93, i32 0, metadata !5481, null}
!10593 = metadata !{i32 43, i32 0, metadata !10513, metadata !10594}
!10594 = metadata !{i32 94, i32 0, metadata !5481, null}
!10595 = metadata !{i32 44, i32 0, metadata !10513, metadata !10594}
!10596 = metadata !{i32 45, i32 0, metadata !10513, metadata !10594}
!10597 = metadata !{i32 46, i32 0, metadata !10513, metadata !10594}
!10598 = metadata !{i32 47, i32 0, metadata !10513, metadata !10594}
!10599 = metadata !{i32 48, i32 0, metadata !10513, metadata !10594}
!10600 = metadata !{i32 49, i32 0, metadata !10513, metadata !10594}
!10601 = metadata !{i32 50, i32 0, metadata !10513, metadata !10594}
!10602 = metadata !{i32 51, i32 0, metadata !10513, metadata !10594}
!10603 = metadata !{i32 52, i32 0, metadata !10513, metadata !10594}
!10604 = metadata !{i32 53, i32 0, metadata !10513, metadata !10594}
!10605 = metadata !{i32 54, i32 0, metadata !10513, metadata !10594}
!10606 = metadata !{i32 55, i32 0, metadata !10513, metadata !10594}
!10607 = metadata !{i32 57, i32 0, metadata !10513, metadata !10594}
!10608 = metadata !{i32 58, i32 0, metadata !10513, metadata !10594}
!10609 = metadata !{i32 59, i32 0, metadata !10513, metadata !10594}
!10610 = metadata !{i32 95, i32 0, metadata !5481, null}
!10611 = metadata !{i32 86, i32 0, metadata !5487, null}
!10612 = metadata !{i32 43, i32 0, metadata !10513, metadata !10613}
!10613 = metadata !{i32 87, i32 0, metadata !5487, null}
!10614 = metadata !{i32 44, i32 0, metadata !10513, metadata !10613}
!10615 = metadata !{i32 45, i32 0, metadata !10513, metadata !10613}
!10616 = metadata !{i32 46, i32 0, metadata !10513, metadata !10613}
!10617 = metadata !{i32 47, i32 0, metadata !10513, metadata !10613}
!10618 = metadata !{i32 48, i32 0, metadata !10513, metadata !10613}
!10619 = metadata !{i32 49, i32 0, metadata !10513, metadata !10613}
!10620 = metadata !{i32 50, i32 0, metadata !10513, metadata !10613}
!10621 = metadata !{i32 51, i32 0, metadata !10513, metadata !10613}
!10622 = metadata !{i32 52, i32 0, metadata !10513, metadata !10613}
!10623 = metadata !{i32 53, i32 0, metadata !10513, metadata !10613}
!10624 = metadata !{i32 54, i32 0, metadata !10513, metadata !10613}
!10625 = metadata !{i32 55, i32 0, metadata !10513, metadata !10613}
!10626 = metadata !{i32 57, i32 0, metadata !10513, metadata !10613}
!10627 = metadata !{i32 58, i32 0, metadata !10513, metadata !10613}
!10628 = metadata !{i32 59, i32 0, metadata !10513, metadata !10613}
!10629 = metadata !{i32 88, i32 0, metadata !5487, null}
!10630 = metadata !{i32 196, i32 0, metadata !10631, null}
!10631 = metadata !{i32 589835, metadata !4018, i32 195, i32 0, metadata !3928, i32 10} ; [ DW_TAG_lexical_block ]
!10632 = metadata !{i32 81, i32 0, metadata !10633, null}
!10633 = metadata !{i32 589835, metadata !4023, i32 80, i32 0, metadata !3928, i32 11} ; [ DW_TAG_lexical_block ]
!10634 = metadata !{i32 184, i32 0, metadata !5498, null}
!10635 = metadata !{i32 187, i32 0, metadata !5501, null}
!10636 = metadata !{i32 188, i32 0, metadata !5501, null}
!10637 = metadata !{i32 189, i32 0, metadata !5501, null}
!10638 = metadata !{i32 192, i32 0, metadata !5498, null}
!10639 = metadata !{i32 157, i32 0, metadata !5523, null}
!10640 = metadata !{i32 159, i32 0, metadata !5523, null}
!10641 = metadata !{i32 160, i32 0, metadata !5535, null}
!10642 = metadata !{i32 161, i32 0, metadata !5535, null}
!10643 = metadata !{i32 164, i32 0, metadata !5537, null}
!10644 = metadata !{i32 170, i32 0, metadata !5537, null}
!10645 = metadata !{i32 174, i32 0, metadata !5523, null}
!10646 = metadata !{i32 149, i32 0, metadata !10647, null}
!10647 = metadata !{i32 589835, metadata !4048, i32 130, i32 0, metadata !3928, i32 19} ; [ DW_TAG_lexical_block ]
!10648 = metadata !{i32 127, i32 0, metadata !10649, null}
!10649 = metadata !{i32 589835, metadata !4076, i32 126, i32 0, metadata !3928, i32 20} ; [ DW_TAG_lexical_block ]
!10650 = metadata !{i32 504, i32 0, metadata !10651, metadata !10652}
!10651 = metadata !{i32 589835, metadata !4079, i32 503, i32 0, metadata !4082, i32 0} ; [ DW_TAG_lexical_block ]
!10652 = metadata !{i32 353, i32 0, metadata !5550, null}
!10653 = metadata !{i32 355, i32 0, metadata !5550, null}
!10654 = metadata !{i32 356, i32 0, metadata !5550, null}
!10655 = metadata !{i32 357, i32 0, metadata !5550, null}
!10656 = metadata !{i32 361, i32 0, metadata !5550, null}
!10657 = metadata !{i32 362, i32 0, metadata !5550, null}
!10658 = metadata !{i32 364, i32 0, metadata !5550, null}
!10659 = metadata !{i32 360, i32 0, metadata !5550, null}
!10660 = metadata !{i32 366, i32 0, metadata !5550, null}
!10661 = metadata !{i32 367, i32 0, metadata !5550, null}
!10662 = metadata !{i32 354, i32 0, metadata !5550, null}
!10663 = metadata !{i32 64, i32 0, metadata !5565, null}
!10664 = metadata !{i32 65, i32 0, metadata !5565, null}
!10665 = metadata !{i32 86, i32 0, metadata !5565, null}
!10666 = metadata !{i32 59, i32 0, metadata !5560, null}
!10667 = metadata !{i32 61, i32 0, metadata !5565, null}
!10668 = metadata !{i32 67, i32 0, metadata !5565, null}
!10669 = metadata !{i32 68, i32 0, metadata !5565, null}
!10670 = metadata !{i32 78, i32 0, metadata !5565, null}
!10671 = metadata !{i32 75, i32 0, metadata !5565, null}
!10672 = metadata !{i32 76, i32 0, metadata !5565, null}
!10673 = metadata !{i32 79, i32 0, metadata !5565, null}
!10674 = metadata !{i32 84, i32 0, metadata !5565, null}
!10675 = metadata !{i32 85, i32 0, metadata !5565, null}
!10676 = metadata !{i32 87, i32 0, metadata !5565, null}
!10677 = metadata !{i32 90, i32 0, metadata !5565, null}
!10678 = metadata !{i32 91, i32 0, metadata !5565, null}
!10679 = metadata !{i32 88, i32 0, metadata !5565, null}
!10680 = metadata !{i32 96, i32 0, metadata !5565, null}
!10681 = metadata !{i32 99, i32 0, metadata !5560, null}
!10682 = metadata !{i32 105, i32 0, metadata !5575, null}
!10683 = metadata !{i32 108, i32 0, metadata !5575, null}
!10684 = metadata !{i32 110, i32 0, metadata !5575, null}
!10685 = metadata !{i32 109, i32 0, metadata !5575, null}
!10686 = metadata !{i32 112, i32 0, metadata !5575, null}
!10687 = metadata !{i32 114, i32 0, metadata !5575, null}
!10688 = metadata !{i32 121, i32 0, metadata !5575, null}
!10689 = metadata !{i32 116, i32 0, metadata !5575, null}
!10690 = metadata !{i32 119, i32 0, metadata !5575, null}
!10691 = metadata !{i32 124, i32 0, metadata !5575, null}
!10692 = metadata !{i32 125, i32 0, metadata !5575, null}
!10693 = metadata !{i32 126, i32 0, metadata !5575, null}
!10694 = metadata !{i32 128, i32 0, metadata !5575, null}
!10695 = metadata !{i32 129, i32 0, metadata !5575, null}
!10696 = metadata !{i32 133, i32 0, metadata !5575, null}
!10697 = metadata !{i32 135, i32 0, metadata !5583, null}
!10698 = metadata !{i32 136, i32 0, metadata !5583, null}
!10699 = metadata !{i32 138, i32 0, metadata !5583, null}
!10700 = metadata !{i32 141, i32 0, metadata !5575, null}
!10701 = metadata !{i32 504, i32 0, metadata !10651, metadata !10702}
!10702 = metadata !{i32 143, i32 0, metadata !5575, null}
!10703 = metadata !{i32 146, i32 0, metadata !5575, null}
!10704 = metadata !{i32 148, i32 0, metadata !5575, null}
!10705 = metadata !{i32 152, i32 0, metadata !5575, null}
!10706 = metadata !{i32 154, i32 0, metadata !5575, null}
!10707 = metadata !{i32 159, i32 0, metadata !5575, null}
!10708 = metadata !{i32 164, i32 0, metadata !5575, null}
!10709 = metadata !{i32 165, i32 0, metadata !5575, null}
!10710 = metadata !{i32 504, i32 0, metadata !10651, metadata !10711}
!10711 = metadata !{i32 167, i32 0, metadata !5575, null}
!10712 = metadata !{i32 168, i32 0, metadata !5575, null}
!10713 = metadata !{i32 170, i32 0, metadata !5575, null}
!10714 = metadata !{i32 172, i32 0, metadata !5575, null}
!10715 = metadata !{i32 176, i32 0, metadata !5575, null}
!10716 = metadata !{i32 177, i32 0, metadata !5575, null}
!10717 = metadata !{i32 178, i32 0, metadata !5575, null}
!10718 = metadata !{i32 179, i32 0, metadata !5575, null}
!10719 = metadata !{i32 182, i32 0, metadata !5575, null}
!10720 = metadata !{i32 183, i32 0, metadata !5575, null}
!10721 = metadata !{i32 184, i32 0, metadata !5575, null}
!10722 = metadata !{i32 185, i32 0, metadata !5575, null}
!10723 = metadata !{i32 186, i32 0, metadata !5575, null}
!10724 = metadata !{i32 188, i32 0, metadata !5575, null}
!10725 = metadata !{i32 189, i32 0, metadata !5575, null}
!10726 = metadata !{i32 190, i32 0, metadata !5575, null}
!10727 = metadata !{i32 191, i32 0, metadata !5575, null}
!10728 = metadata !{i32 192, i32 0, metadata !5575, null}
!10729 = metadata !{i32 193, i32 0, metadata !5575, null}
!10730 = metadata !{i32 194, i32 0, metadata !5575, null}
!10731 = metadata !{i32 197, i32 0, metadata !5575, null}
!10732 = metadata !{i32 198, i32 0, metadata !5575, null}
!10733 = metadata !{i32 200, i32 0, metadata !5575, null}
!10734 = metadata !{i32 202, i32 0, metadata !5575, null}
!10735 = metadata !{i32 203, i32 0, metadata !5575, null}
!10736 = metadata !{i32 205, i32 0, metadata !5575, null}
!10737 = metadata !{i32 206, i32 0, metadata !5575, null}
!10738 = metadata !{i32 209, i32 0, metadata !5585, null}
!10739 = metadata !{i32 211, i32 0, metadata !5585, null}
!10740 = metadata !{i32 213, i32 0, metadata !5585, null}
!10741 = metadata !{i32 212, i32 0, metadata !5585, null}
!10742 = metadata !{i32 215, i32 0, metadata !5585, null}
!10743 = metadata !{i32 216, i32 0, metadata !5585, null}
!10744 = metadata !{i32 217, i32 0, metadata !5585, null}
!10745 = metadata !{i32 222, i32 0, metadata !5585, null}
!10746 = metadata !{i32 223, i32 0, metadata !5585, null}
!10747 = metadata !{i32 225, i32 0, metadata !5585, null}
!10748 = metadata !{i32 376, i32 0, metadata !5589, null}
!10749 = metadata !{i32 377, i32 0, metadata !5589, null}
!10750 = metadata !{i32 504, i32 0, metadata !10651, metadata !10751}
!10751 = metadata !{i32 379, i32 0, metadata !5589, null}
!10752 = metadata !{i32 380, i32 0, metadata !5589, null}
!10753 = metadata !{i32 381, i32 0, metadata !5589, null}
!10754 = metadata !{i32 382, i32 0, metadata !5589, null}
!10755 = metadata !{i32 384, i32 0, metadata !5589, null}
!10756 = metadata !{i32 385, i32 0, metadata !5589, null}
!10757 = metadata !{i32 386, i32 0, metadata !5589, null}
!10758 = metadata !{i32 378, i32 0, metadata !5589, null}
!10759 = metadata !{i32 251, i32 0, metadata !5608, null}
!10760 = metadata !{i32 252, i32 0, metadata !5608, null}
!10761 = metadata !{i32 253, i32 0, metadata !5608, null}
!10762 = metadata !{i32 504, i32 0, metadata !10651, metadata !10763}
!10763 = metadata !{i32 256, i32 0, metadata !5608, null}
!10764 = metadata !{i32 259, i32 0, metadata !5608, null}
!10765 = metadata !{i32 260, i32 0, metadata !5608, null}
!10766 = metadata !{i32 261, i32 0, metadata !5608, null}
!10767 = metadata !{i32 262, i32 0, metadata !5608, null}
!10768 = metadata !{i32 265, i32 0, metadata !5608, null}
!10769 = metadata !{i32 266, i32 0, metadata !5608, null}
!10770 = metadata !{i32 267, i32 0, metadata !5608, null}
!10771 = metadata !{i32 269, i32 0, metadata !5608, null}
!10772 = metadata !{i32 270, i32 0, metadata !5608, null}
!10773 = metadata !{i32 271, i32 0, metadata !5608, null}
!10774 = metadata !{i32 273, i32 0, metadata !5608, null}
!10775 = metadata !{i32 274, i32 0, metadata !5608, null}
!10776 = metadata !{i32 278, i32 0, metadata !5608, null}
!10777 = metadata !{i32 279, i32 0, metadata !5608, null}
!10778 = metadata !{i32 280, i32 0, metadata !5608, null}
!10779 = metadata !{i32 281, i32 0, metadata !5608, null}
!10780 = metadata !{i32 283, i32 0, metadata !5608, null}
!10781 = metadata !{i32 285, i32 0, metadata !5608, null}
!10782 = metadata !{i32 286, i32 0, metadata !5608, null}
!10783 = metadata !{i32 287, i32 0, metadata !5608, null}
!10784 = metadata !{i32 288, i32 0, metadata !5608, null}
!10785 = metadata !{i32 289, i32 0, metadata !5608, null}
!10786 = metadata !{i32 290, i32 0, metadata !5608, null}
!10787 = metadata !{i32 291, i32 0, metadata !5608, null}
!10788 = metadata !{i32 293, i32 0, metadata !5608, null}
!10789 = metadata !{i32 294, i32 0, metadata !5608, null}
!10790 = metadata !{i32 295, i32 0, metadata !5608, null}
!10791 = metadata !{i32 296, i32 0, metadata !5608, null}
!10792 = metadata !{i32 297, i32 0, metadata !5608, null}
!10793 = metadata !{i32 301, i32 0, metadata !5608, null}
!10794 = metadata !{i32 302, i32 0, metadata !5608, null}
!10795 = metadata !{i32 303, i32 0, metadata !5608, null}
!10796 = metadata !{i32 304, i32 0, metadata !5608, null}
!10797 = metadata !{i32 305, i32 0, metadata !5608, null}
!10798 = metadata !{i32 307, i32 0, metadata !5608, null}
!10799 = metadata !{i32 309, i32 0, metadata !5608, null}
!10800 = metadata !{i32 229, i32 0, metadata !5545, metadata !10801}
!10801 = metadata !{i32 310, i32 0, metadata !5608, null}
!10802 = metadata !{i32 230, i32 0, metadata !5545, metadata !10801}
!10803 = metadata !{i32 311, i32 0, metadata !5608, null}
!10804 = metadata !{i32 313, i32 0, metadata !5608, null}
!10805 = metadata !{i32 317, i32 0, metadata !5608, null}
!10806 = metadata !{i32 318, i32 0, metadata !5608, null}
!10807 = metadata !{i32 319, i32 0, metadata !5608, null}
!10808 = metadata !{i32 320, i32 0, metadata !5608, null}
!10809 = metadata !{i32 321, i32 0, metadata !5608, null}
!10810 = metadata !{i32 322, i32 0, metadata !5608, null}
!10811 = metadata !{i32 323, i32 0, metadata !5608, null}
!10812 = metadata !{i32 325, i32 0, metadata !5608, null}
!10813 = metadata !{i32 329, i32 0, metadata !5608, null}
!10814 = metadata !{i32 330, i32 0, metadata !5608, null}
!10815 = metadata !{i32 331, i32 0, metadata !5608, null}
!10816 = metadata !{i32 332, i32 0, metadata !5608, null}
!10817 = metadata !{i32 333, i32 0, metadata !5608, null}
!10818 = metadata !{i32 334, i32 0, metadata !5608, null}
!10819 = metadata !{i32 335, i32 0, metadata !5608, null}
!10820 = metadata !{i32 337, i32 0, metadata !5608, null}
!10821 = metadata !{i32 343, i32 0, metadata !5608, null}
!10822 = metadata !{i32 344, i32 0, metadata !5608, null}
!10823 = metadata !{i32 345, i32 0, metadata !5608, null}
!10824 = metadata !{i32 347, i32 0, metadata !5608, null}
!10825 = metadata !{i32 21, i32 0, metadata !10826, null}
!10826 = metadata !{i32 589835, metadata !4195, i32 20, i32 0, metadata !4196, i32 0} ; [ DW_TAG_lexical_block ]
!10827 = metadata !{i32 27, i32 0, metadata !10826, null}
!10828 = metadata !{i32 29, i32 0, metadata !10826, null}
!10829 = metadata !{i32 28, i32 0, metadata !5626, null}
!10830 = metadata !{i32 29, i32 0, metadata !5626, null}
!10831 = metadata !{i32 31, i32 0, metadata !5626, null}
!10832 = metadata !{i32 33, i32 0, metadata !5626, null}
!10833 = metadata !{i32 43, i32 0, metadata !5626, null}
!10834 = metadata !{i32 32, i32 0, metadata !5626, null}
!10835 = metadata !{i32 20, i32 0, metadata !5622, metadata !10834}
!10836 = metadata !{i32 21, i32 0, metadata !5622, metadata !10834}
!10837 = metadata !{i32 37, i32 0, metadata !5626, null}
!10838 = metadata !{i32 34, i32 0, metadata !5626, null}
!10839 = metadata !{i32 35, i32 0, metadata !5626, null}
!10840 = metadata !{i32 38, i32 0, metadata !5626, null}
!10841 = metadata !{i32 39, i32 0, metadata !5626, null}
!10842 = metadata !{i32 40, i32 0, metadata !5626, null}
!10843 = metadata !{i32 41, i32 0, metadata !5626, null}
!10844 = metadata !{i32 504, i32 0, metadata !10845, metadata !10846}
!10845 = metadata !{i32 589835, metadata !4209, i32 503, i32 0, metadata !4210, i32 1} ; [ DW_TAG_lexical_block ]
!10846 = metadata !{i32 59, i32 0, metadata !5633, null}
!10847 = metadata !{i32 61, i32 0, metadata !5654, null}
!10848 = metadata !{i32 62, i32 0, metadata !5654, null}
!10849 = metadata !{i32 63, i32 0, metadata !5654, null}
!10850 = metadata !{i32 67, i32 0, metadata !5626, null}
!10851 = metadata !{i32 71, i32 0, metadata !5626, null}
!10852 = metadata !{i32 14, i32 0, metadata !10853, null}
!10853 = metadata !{i32 589835, metadata !4259, i32 12, i32 0, metadata !4260, i32 0} ; [ DW_TAG_lexical_block ]
!10854 = metadata !{i32 15, i32 0, metadata !10853, null}
!10855 = metadata !{i32 16, i32 0, metadata !10853, null}
!10856 = metadata !{i32 17, i32 0, metadata !10853, null}
!10857 = metadata !{i32 18, i32 0, metadata !10853, null}
!10858 = metadata !{i32 16, i32 0, metadata !5660, null}
!10859 = metadata !{i32 17, i32 0, metadata !5660, null}
!10860 = metadata !{i32 19, i32 0, metadata !5660, null}
!10861 = metadata !{i32 22, i32 0, metadata !5660, null}
!10862 = metadata !{i32 25, i32 0, metadata !5660, null}
!10863 = metadata !{i32 26, i32 0, metadata !5660, null}
!10864 = metadata !{i32 28, i32 0, metadata !5660, null}
!10865 = metadata !{i32 29, i32 0, metadata !5660, null}
!10866 = metadata !{i32 32, i32 0, metadata !5660, null}
!10867 = metadata !{i32 20, i32 0, metadata !5660, null}
