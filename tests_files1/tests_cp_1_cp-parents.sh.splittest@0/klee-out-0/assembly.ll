; ModuleID = '/work/data/cp/bd75118c16d8bca235b61dbb99326c043278a791/execution/ctrl/output/latest/testscases_workdir/shadow_se/cp.bc'
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-f128:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

module asm ".section .gnu.warning.__fpending"
module asm "\09.previous"

%0 = type { i64 }
%1 = type { %2 }
%2 = type { void (i8*)*, i8*, i8* }
%3 = type { [4 x i32] }
%4 = type { i16, [2 x i8], i32, i8*, i8*, i8*, i8*, i8*, i8*, %4*, [2 x i32], %struct.__mbstate_t }
%5 = type { void (i32)* }
%6 = type { %7, [20 x i32] }
%7 = type { i32, i32, i32, i64, i64 }
%8 = type { i32, [1023 x i32] }
%9 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, [3 x i64] }
%10 = type { void (i32, i8*)*, i8* }
%11 = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, i64, [4 x i64] }
%struct..0infomap = type { i8*, i8* }
%struct.DIR = type { i32, i64, i64, i8*, i64, i64, i8* }
%struct.Elf64_auxv_t = type { i64, %0 }
%struct.FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct.F_triple = type { i8*, i64, i64 }
%struct.Hash_table = type { %struct.hash_entry*, %struct.hash_entry*, i64, i64, i64, %struct.Hash_tuning*, i64 (i8*, i64)*, i8 (i8*, i8*)*, void (i8*)*, %struct.hash_entry* }
%struct.Hash_tuning = type { float, float, float, float, i8 }
%struct.Src_to_dest = type { i64, i64, i8* }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct.FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, i8*, i8*, i8*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type { %struct._IO_marker*, %struct.FILE*, i32 }
%struct.__fsid_t = type { [2 x i32] }
%struct.__jmp_buf_tag = type { [8 x i64], i32, %struct.__sigset_t }
%struct.__kernel_termios = type { i32, i32, i32, i32, i8, [19 x i8] }
%struct.__mbstate_t = type { i32, i32 }
%struct.__sigset_t = type { [16 x i64] }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%struct._cap_struct = type opaque
%struct._getopt_data = type { i32, i32, i32, i8*, i32, i8*, i32, i32, i32, i32 }
%struct.anon = type { [12 x i8], i32 }
%struct.cd_buf = type { i32 }
%struct.cp_options = type { i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %struct.Hash_table*, %struct.Hash_table* }
%struct.dir_attr = type { %struct.stat, i8, i64, %struct.dir_attr* }
%struct.dir_list = type { %struct.dir_list*, i64, i64 }
%struct.dirent = type { i64, i64, i16, i8, [256 x i8] }
%struct.dirent64 = type { i64, i64, i16, i8, [256 x i8] }
%struct.direntry_t = type { i8*, i64 }
%struct.error_context = type { void (%struct.error_context*, i8*, ...)*, i8* (%struct.error_context*, i8*)*, void (%struct.error_context*, i8*)* }
%struct.exe_disk_file_t = type { i32, i8*, i8*, %struct.stat*, %struct.exe_sockaddr_t* }
%struct.exe_file_system_t = type { i32, i32, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, %struct.exe_disk_file_t*, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32, %struct.exe_disk_file_t*, i32, i32*, i32*, i32*, 
%struct.exe_file_t = type { i32, i32, i64, %struct.exe_disk_file_t*, %struct.exe_sockaddr_t, %struct.exe_sockaddr_t*, i32 }
%struct.exe_sockaddr_t = type { %struct.sockaddr_storage*, i32 }
%struct.exe_sym_env_t = type { [32 x %struct.exe_file_t], i32, i32, i32 }
%struct.exit_function = type { i64, %1 }
%struct.exit_status = type { i16, i16 }
%struct.extent_info = type { i64, i64, i32 }
%struct.extent_scan = type { i32, i64, i32, i64, i8, i8, %struct.extent_info* }
%struct.fd_set = type { [16 x i64] }
%struct.fiemap = type { i64, i64, i32, i32, i32, i32, [0 x %struct.fiemap_extent] }
%struct.fiemap_extent = type { i64, i64, i64, [2 x i64], i32, [3 x i32] }
%struct.fill_info_t = type { i32, i32, i32, %union.sigval_t }
%struct.fs_res = type { i64, i32, i8 }
%struct.hash_entry = type { i8*, %struct.hash_entry* }
%struct.in6_addr = type { %3 }
%struct.in_addr = type { i32 }
%struct.iovec = type { i8*, i64 }
%struct.kernel_sigaction = type { void (i32)*, i64, void ()*, %struct.__sigset_t }
%struct.mbchar = type { i8*, i64, i8, i32, [24 x i8] }
%struct.mbchar_t = type { i8*, i64, i8, i32, [24 x i8] }
%struct.mbi_iterator_t = type { i8*, i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbiter_multi = type { i8*, i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbstate_t = type { i32, %struct.cd_buf }
%struct.mbui_iterator_t = type { i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.mbuiter_multi = type { i8, %struct.mbstate_t, i8, %struct.mbchar }
%struct.msghdr = type { i8*, i32, %struct.direntry_t*, i64, i8*, i64, i32 }
%struct.option = type { i8*, i32, i32*, i32 }
%struct.permission_context = type { i32 }
%struct.ppfs_t = type { i8*, %struct.printf_info, i32, i32, i32, [4 x i8], [9 x i32], [1 x %struct.__va_list_tag], [9 x %union.argvalue_t] }
%struct.printf_info = type { i32, i32, i32, i32, i32 }
%struct.psfs_t = type { [9 x i8*], i32, i32, i8*, i8*, i32, i32, i32, i32, i8, i8 }
%struct.quoting_options = type { i32, i32, [8 x i32], i8*, i8* }
%struct.saved_cwd = type { i32, i8* }
%struct.scan_cookie = type { i32, i32, %4*, i32, i32, i32, i8, i8, i8, i8, %struct.__mbstate_t, i32, i32, i32 (%struct.scan_cookie*)*, i8*, i32, i32, i8* }
%struct.sigaction = type { %5, %struct.__sigset_t, i32, void ()* }
%struct.siginfo_t = type { i32, i32, i32, %6 }
%struct.sigset_t = type { [16 x i64] }
%struct.slotvec = type { i64, i8* }
%struct.sockaddr = type { i16, [14 x i8] }
%struct.sockaddr_in = type { i16, i16, %struct.cd_buf, [8 x i8] }
%struct.sockaddr_in6 = type { i16, i16, i32, %struct.in6_addr, i32 }
%struct.sockaddr_storage = type { i16, i64, [112 x i8] }
%struct.stat = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.stat64 = type { i64, i64, i64, i32, i32, i32, i32, i64, i64, i64, i64, %struct.timespec, %struct.timespec, %struct.timespec, [3 x i64] }
%struct.statfs = type { i64, i64, i64, i64, i64, i64, i64, %struct.__fsid_t, i64, i64, [5 x i64] }
%struct.termios = type { i32, i32, i32, i32, i8, [32 x i8], i32, i32 }
%struct.timespec = type { i64, i64 }
%struct.timeval = type { i64, i64 }
%struct.timezone = type { i32, i32 }
%struct.utmp = type { i16, i32, [32 x i8], [4 x i8], [32 x i8], [256 x i8], %struct.exit_status, i64, %struct.timespec, [4 x i32], [20 x i8] }
%union..0anon = type { %struct.fiemap, [1016 x i32] }
%union.anon = type { i32 }
%union.argvalue_t = type { x86_fp80 }
%union.header = type { i8*, [2 x i32] }
%union.sigval_t = type { i8* }

@.str = private unnamed_addr constant [36 x i8] c"KLEE_CHANGE_RUNTIME_SET_OLD_VERSION\00", align 8
@version_str.6412 = internal unnamed_addr global i8* null
@parents_option = internal unnamed_addr global i8 0
@sparse_type_string = internal unnamed_addr constant [4 x i8*] [i8* getelementptr inbounds ([6 x i8]* @.str1, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i8* nul
@.str1 = private unnamed_addr constant [6 x i8] c"never\00", align 1
@.str2 = private unnamed_addr constant [5 x i8] c"auto\00", align 1
@.str3 = private unnamed_addr constant [7 x i8] c"always\00", align 1
@sparse_type = internal unnamed_addr constant [3 x i32] [i32 1, i32 2, i32 3]
@reflink_type_string = internal unnamed_addr constant [3 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str2, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str3, i64 0, i64 0), i8* null], align 16
@reflink_type = internal unnamed_addr constant [2 x i32] [i32 1, i32 2]
@long_opts = internal unnamed_addr constant [30 x %struct.option] [%struct.option { i8* getelementptr inbounds ([8 x i8]* @.str4, i64 0, i64 0), i32 0, i32* null, i32 97 }, %struct.option { i8* getelementptr inbounds ([16 x i8]* @.str5, i64 0, i64 0), i3
@.str4 = private unnamed_addr constant [8 x i8] c"archive\00", align 1
@.str5 = private unnamed_addr constant [16 x i8] c"attributes-only\00", align 1
@.str6 = private unnamed_addr constant [7 x i8] c"backup\00", align 1
@.str7 = private unnamed_addr constant [14 x i8] c"copy-contents\00", align 1
@.str8 = private unnamed_addr constant [12 x i8] c"dereference\00", align 1
@.str9 = private unnamed_addr constant [6 x i8] c"force\00", align 1
@.str10 = private unnamed_addr constant [12 x i8] c"interactive\00", align 1
@.str11 = private unnamed_addr constant [5 x i8] c"link\00", align 1
@.str12 = private unnamed_addr constant [11 x i8] c"no-clobber\00", align 1
@.str13 = private unnamed_addr constant [15 x i8] c"no-dereference\00", align 1
@.str14 = private unnamed_addr constant [12 x i8] c"no-preserve\00", align 1
@.str15 = private unnamed_addr constant [20 x i8] c"no-target-directory\00", align 1
@.str16 = private unnamed_addr constant [16 x i8] c"one-file-system\00", align 1
@.str17 = private unnamed_addr constant [8 x i8] c"parents\00", align 1
@.str18 = private unnamed_addr constant [5 x i8] c"path\00", align 1
@.str19 = private unnamed_addr constant [9 x i8] c"preserve\00", align 1
@.str20 = private unnamed_addr constant [10 x i8] c"recursive\00", align 1
@.str21 = private unnamed_addr constant [19 x i8] c"remove-destination\00", align 1
@.str22 = private unnamed_addr constant [7 x i8] c"sparse\00", align 1
@.str23 = private unnamed_addr constant [8 x i8] c"reflink\00", align 1
@.str24 = private unnamed_addr constant [23 x i8] c"strip-trailing-slashes\00", align 1
@.str25 = private unnamed_addr constant [7 x i8] c"suffix\00", align 1
@.str26 = private unnamed_addr constant [14 x i8] c"symbolic-link\00", align 1
@.str27 = private unnamed_addr constant [17 x i8] c"target-directory\00", align 1
@.str28 = private unnamed_addr constant [7 x i8] c"update\00", align 1
@.str29 = private unnamed_addr constant [8 x i8] c"verbose\00", align 1
@.str30 = private unnamed_addr constant [8 x i8] c"context\00", align 1
@.str31 = private unnamed_addr constant [5 x i8] c"help\00", align 1
@.str32 = private unnamed_addr constant [8 x i8] c"version\00", align 1
@.str33 = private unnamed_addr constant [39 x i8] c"Try '%s --help' for more information.\0A\00", align 8
@.str34 = private unnamed_addr constant [127 x i8] c"Usage: %s [OPTION]... [-T] SOURCE DEST\0A  or:  %s [OPTION]... SOURCE... DIRECTORY\0A  or:  %s [OPTION]... -t DIRECTORY SOURCE...\0A\00", align 8
@.str35 = private unnamed_addr constant [58 x i8] c"Copy SOURCE to DEST, or multiple SOURCE(s) to DIRECTORY.\0A\00", align 8
@.str36 = private unnamed_addr constant [442 x i8] c"  -a, --archive                same as -dR --preserve=all\0A      --attributes-only        don't copy the file data, just the attributes\0A      --backup[=CONTROL]       make a backup of each existing 
@.str37 = private unnamed_addr constant [427 x i8] c"  -f, --force                  if an existing destination file cannot be\0A                                 opened, remove it and try again (this option\0A                                 is ignored wh
@.str38 = private unnamed_addr constant [137 x i8] c"  -l, --link                   hard link files instead of copying\0A  -L, --dereference            always follow symbolic links in SOURCE\0A\00", align 8
@.str39 = private unnamed_addr constant [201 x i8] c"  -n, --no-clobber             do not overwrite an existing file (overrides\0A                                 a previous -i option)\0A  -P, --no-dereference         never follow symbolic links in SOUR
@.str40 = private unnamed_addr constant [341 x i8] c"  -p                           same as --preserve=mode,ownership,timestamps\0A      --preserve[=ATTR_LIST]   preserve the specified attributes (default:\0A                                 mode,ownershi
@.str41 = private unnamed_addr constant [145 x i8] c"      --no-preserve=ATTR_LIST  don't preserve the specified attributes\0A      --parents                use full source file name under DIRECTORY\0A\00", align 8
@.str42 = private unnamed_addr constant [283 x i8] c"  -R, -r, --recursive          copy directories recursively\0A      --reflink[=WHEN]         control clone/CoW copies. See below\0A      --remove-destination     remove each existing destination file b
@.str43 = private unnamed_addr constant [195 x i8] c"      --sparse=WHEN            control creation of sparse files. See below\0A      --strip-trailing-slashes  remove any trailing slashes from each SOURCE\0A                                 argument\0A\
@.str44 = private unnamed_addr constant [271 x i8] c"  -s, --symbolic-link          make symbolic links instead of copying\0A  -S, --suffix=SUFFIX          override the usual backup suffix\0A  -t, --target-directory=DIRECTORY  copy all SOURCE arguments i
@.str45 = private unnamed_addr constant [318 x i8] c"  -u, --update                 copy only when the SOURCE file is newer\0A                                 than the destination file or when the\0A                                 destination file is mi
@.str46 = private unnamed_addr constant [280 x i8] c"  -Z                           set SELinux security context of destination\0A                                 file to default type\0A      --context[=CTX]          like -Z, or if CTX is specified then 
@.str47 = private unnamed_addr constant [45 x i8] c"      --help     display this help and exit\0A\00", align 8
@.str48 = private unnamed_addr constant [54 x i8] c"      --version  output version information and exit\0A\00", align 8
@.str49 = private unnamed_addr constant [581 x i8] c"\0ABy default, sparse SOURCE files are detected by a crude heuristic and the\0Acorresponding DEST file is made sparse as well.  That is the behavior\0Aselected by --sparse=auto.  Specify --sparse=alway
@.str50 = private unnamed_addr constant [221 x i8] c"\0AThe backup suffix is '~', unless set with --suffix or SIMPLE_BACKUP_SUFFIX.\0AThe version control method may be selected via the --backup option or through\0Athe VERSION_CONTROL environment variable
@.str51 = private unnamed_addr constant [222 x i8] c"  none, off       never make backups (even if --backup is given)\0A  numbered, t     make numbered backups\0A  existing, nil   numbered if numbered backups exist, simple otherwise\0A  simple, never   a
@.str52 = private unnamed_addr constant [162 x i8] c"\0AAs a special case, cp makes a backup of SOURCE when the force and backup\0Aoptions are given and SOURCE and DEST are the same name for an existing,\0Aregular file.\0A\00", align 8
@.str53 = private unnamed_addr constant [3 x i8] c"cp\00", align 1
@.str54 = private unnamed_addr constant [75 x i8] c"\0AMandatory arguments to long options are mandatory for short options too.\0A\00", align 8
@infomap.5840 = internal unnamed_addr constant [7 x %struct..0infomap] [%struct..0infomap { i8* getelementptr inbounds ([2 x i8]* @.str55, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8]* @.str56, i64 0, i64 0) }, %struct..0infomap { i8* getelementp
@.str55 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str56 = private unnamed_addr constant [16 x i8] c"test invocation\00", align 1
@.str57 = private unnamed_addr constant [10 x i8] c"coreutils\00", align 1
@.str58 = private unnamed_addr constant [22 x i8] c"Multi-call invocation\00", align 1
@.str59 = private unnamed_addr constant [10 x i8] c"sha224sum\00", align 1
@.str60 = private unnamed_addr constant [15 x i8] c"sha2 utilities\00", align 1
@.str61 = private unnamed_addr constant [10 x i8] c"sha256sum\00", align 1
@.str62 = private unnamed_addr constant [10 x i8] c"sha384sum\00", align 1
@.str63 = private unnamed_addr constant [10 x i8] c"sha512sum\00", align 1
@.str64 = private unnamed_addr constant [23 x i8] c"\0A%s online help: <%s>\0A\00", align 1
@.str65 = private unnamed_addr constant [14 x i8] c"GNU coreutils\00", align 1
@.str66 = private unnamed_addr constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 8
@.str67 = private unnamed_addr constant [4 x i8] c"en_\00", align 1
@.str68 = private unnamed_addr constant [69 x i8] c"Report %s translation bugs to <http://translationproject.org/team/>\0A\00", align 8
@.str69 = private unnamed_addr constant [31 x i8] c"Full documentation at: <%s%s>\0A\00", align 8
@.str70 = private unnamed_addr constant [12 x i8] c" invocation\00", align 1
@.str71 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str72 = private unnamed_addr constant [51 x i8] c"or available locally via: info '(coreutils) %s%s'\0A\00", align 8
@.str73 = private unnamed_addr constant [32 x i8] c"failed to preserve times for %s\00", align 8
@.str74 = private unnamed_addr constant [36 x i8] c"failed to preserve ownership for %s\00", align 8
@.str75 = private unnamed_addr constant [38 x i8] c"failed to preserve permissions for %s\00", align 8
@.str76 = private unnamed_addr constant [31 x i8] c"failed to get attributes of %s\00", align 8
@.str77 = private unnamed_addr constant [25 x i8] c"cannot make directory %s\00", align 1
@.str78 = private unnamed_addr constant [27 x i8] c"setting permissions for %s\00", align 1
@.str79 = private unnamed_addr constant [33 x i8] c"%s exists but is not a directory\00", align 8
@.str80 = private unnamed_addr constant [20 x i8] c"failed to access %s\00", align 1
@.str81 = private unnamed_addr constant [21 x i8] c"missing file operand\00", align 1
@.str82 = private unnamed_addr constant [42 x i8] c"missing destination file operand after %s\00", align 8
@.str83 = private unnamed_addr constant [70 x i8] c"cannot combine --target-directory (-t) and --no-target-directory (-T)\00", align 8
@.str84 = private unnamed_addr constant [17 x i8] c"extra operand %s\00", align 1
@.str85 = private unnamed_addr constant [29 x i8] c"target %s is not a directory\00", align 1
@remove_trailing_slashes = internal unnamed_addr global i8 0
@.str86 = private unnamed_addr constant [10 x i8] c"%s -> %s\0A\00", align 1
@.str87 = private unnamed_addr constant [3 x i8] c"..\00", align 1
@.str88 = private unnamed_addr constant [52 x i8] c"with --parents, the destination must be a directory\00", align 8
@x_tmp.6811 = internal unnamed_addr global %struct.cp_options zeroinitializer
@.str89 = private unnamed_addr constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@preserve_vals.6961 = internal unnamed_addr constant [7 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6]
@.str90 = private unnamed_addr constant [11 x i8] c"--preserve\00", align 1
@.str91 = private unnamed_addr constant [14 x i8] c"--no-preserve\00", align 1
@preserve_args.6962 = internal unnamed_addr constant [8 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str92, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str93, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str94, i64 0, i64 0), i8
@.str92 = private unnamed_addr constant [5 x i8] c"mode\00", align 1
@.str93 = private unnamed_addr constant [11 x i8] c"timestamps\00", align 1
@.str94 = private unnamed_addr constant [10 x i8] c"ownership\00", align 1
@.str95 = private unnamed_addr constant [6 x i8] c"links\00", align 1
@.str96 = private unnamed_addr constant [6 x i8] c"xattr\00", align 1
@.str97 = private unnamed_addr constant [4 x i8] c"all\00", align 1
@selinux_enabled = internal unnamed_addr global i8 0
@.str98 = private unnamed_addr constant [24 x i8] c"/usr/local/share/locale\00", align 1
@.str99 = private unnamed_addr constant [21 x i8] c"SIMPLE_BACKUP_SUFFIX\00", align 1
@.str100 = private unnamed_addr constant [9 x i8] c"--sparse\00", align 1
@.str101 = private unnamed_addr constant [10 x i8] c"--reflink\00", align 1
@.str102 = private unnamed_addr constant [38 x i8] c"multiple target directories specified\00", align 8
@.str103 = private unnamed_addr constant [67 x i8] c"warning: ignoring --context; it requires an SELinux-enabled kernel\00", align 8
@.str104 = private unnamed_addr constant [18 x i8] c"Torbjorn Granlund\00", align 1
@.str105 = private unnamed_addr constant [19 x i8] c"Torbj\C3\B6rn Granlund\00", align 1
@.str106 = private unnamed_addr constant [16 x i8] c"David MacKenzie\00", align 1
@.str107 = private unnamed_addr constant [13 x i8] c"Jim Meyering\00", align 1
@.str108 = private unnamed_addr constant [24 x i8] c"abdfHilLnprst:uvxPRS:TZ\00", align 1
@.str109 = private unnamed_addr constant [41 x i8] c"cannot make both hard and symbolic links\00", align 8
@.str110 = private unnamed_addr constant [57 x i8] c"options --backup and --no-clobber are mutually exclusive\00", align 8
@.str111 = private unnamed_addr constant [46 x i8] c"--reflink can be used only with --sparse=auto\00", align 8
@.str112 = private unnamed_addr constant [12 x i8] c"backup type\00", align 1
@.str113 = private unnamed_addr constant [42 x i8] c"cannot set target context and preserve it\00", align 8
@.str114 = private unnamed_addr constant [67 x i8] c"cannot preserve security context without an SELinux-enabled kernel\00", align 8
@.str115 = private unnamed_addr constant [50 x i8] c"failed to set default file creation context to %s\00", align 8
@.str116 = private constant [16 x i8] c"cannot lseek %s\00", align 1
@.str1117 = private constant [22 x i8] c"error deallocating %s\00", align 1
@.str2118 = private constant [17 x i8] c"error reading %s\00", align 1
@.str3119 = private constant [17 x i8] c"error writing %s\00", align 1
@.str4120 = private constant [20 x i8] c"overflow reading %s\00", align 1
@zeros.6827 = internal global i8* null
@nz.6828 = internal global i64 131072
@fallback.6829 = internal global [1024 x i8] zeroinitializer
@.str5121 = private constant [31 x i8] c"%s: failed to get extents info\00", align 8
@.str6122 = private constant [17 x i8] c"%s: write failed\00", align 1
@.str7123 = private constant [20 x i8] c"failed to extend %s\00", align 1
@.str8124 = private constant [17 x i8] c"security.selinux\00", align 1
@.str9125 = private constant [17 x i8] c"cannot access %s\00", align 1
@.str10126 = private constant [28 x i8] c"clearing permissions for %s\00", align 1
@.str11127 = private constant [36 x i8] c"failed to preserve ownership for %s\00", align 8
@.str12128 = private constant [50 x i8] c"failed to set default file creation context to %s\00", align 8
@.str13129 = private constant [37 x i8] c"failed to get security context of %s\00", align 8
@.str14130 = private constant [51 x i8] c"failed to set default file creation context for %s\00", align 8
@.str15131 = private constant [41 x i8] c"failed to set the security context of %s\00", align 8
@.str16132 = private constant [27 x i8] c"cannot open %s for reading\00", align 1
@.str17133 = private constant [16 x i8] c"cannot fstat %s\00", align 1
@.str18134 = private constant [56 x i8] c"skipping file %s, as it was replaced while being copied\00", align 8
@.str19135 = private constant [17 x i8] c"cannot remove %s\00", align 1
@.str20136 = private constant [12 x i8] c"removed %s\0A\00", align 1
@.str21137 = private constant [40 x i8] c"not writing through dangling symlink %s\00", align 8
@.str22138 = private constant [30 x i8] c"cannot create regular file %s\00", align 1
@.str23139 = private constant [27 x i8] c"failed to clone %s from %s\00", align 1
@.str24140 = private constant [24 x i8] c"preserving times for %s\00", align 1
@.str25141 = private constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str26142 = private constant [19 x i8] c"failed to close %s\00", align 1
@.str27143 = private constant [45 x i8] c"%s: replace %s, overriding mode %04lo (%s)? \00", align 8
@.str28144 = private constant [49 x i8] c"%s: unwritable %s (mode %04lo, %s); try anyway? \00", align 8
@.str29145 = private constant [19 x i8] c"%s: overwrite %s? \00", align 1
@.str30146 = private constant [13 x i8] c"x->move_mode\00", align 1
@.str31147 = private constant [11 x i8] c"src/copy.c\00", align 1
@__PRETTY_FUNCTION__.8135 = internal constant [13 x i8] c"abandon_move\00"
@.str32148 = private constant [9 x i8] c"%s -> %s\00", align 1
@.str33149 = private constant [14 x i8] c" (backup: %s)\00", align 1
@.str34150 = private constant [52 x i8] c"failed to restore the default file creation context\00", align 8
@.str35151 = private constant [33 x i8] c"cannot create hard link %s to %s\00", align 8
@.str36152 = private constant [15 x i8] c"cannot stat %s\00", align 1
@.str37153 = private constant [22 x i8] c"omitting directory %s\00", align 1
@.str38154 = private constant [49 x i8] c"warning: source file %s specified more than once\00", align 8
@.str39155 = private constant [28 x i8] c"%s and %s are the same file\00", align 1
@.str40156 = private constant [52 x i8] c"cannot overwrite non-directory %s with directory %s\00", align 8
@.str41157 = private constant [43 x i8] c"will not overwrite just-created %s with %s\00", align 8
@.str42158 = private constant [49 x i8] c"cannot overwrite directory %s with non-directory\00", align 8
@.str43159 = private constant [51 x i8] c"cannot move directory onto non-directory: %s -> %s\00", align 8
@.str44160 = private constant [50 x i8] c"backing up %s would destroy source;  %s not moved\00", align 8
@.str45161 = private constant [51 x i8] c"backing up %s would destroy source;  %s not copied\00", align 8
@.str46162 = private constant [17 x i8] c"cannot backup %s\00", align 1
@.str47163 = private constant [49 x i8] c"will not copy %s through just-created symlink %s\00", align 8
@top_level_dst_name = internal global i8* null
@top_level_src_name = internal global i8* null
@.str48164 = private constant [45 x i8] c"cannot copy a directory, %s, into itself, %s\00", align 8
@.str49165 = private constant [54 x i8] c"warning: source directory %s specified more than once\00", align 8
@.str50166 = private constant [45 x i8] c"will not create hard link %s to directory %s\00", align 8
@.str51167 = private constant [47 x i8] c"cannot move %s to a subdirectory of itself, %s\00", align 8
@.str52168 = private constant [21 x i8] c"cannot move %s to %s\00", align 1
@.str53169 = private constant [60 x i8] c"inter-device move failed: %s to %s; unable to remove target\00", align 8
@.str54170 = private constant [36 x i8] c"cannot copy cyclic symbolic link %s\00", align 8
@.str55171 = private constant [27 x i8] c"cannot create directory %s\00", align 1
@.str56172 = private constant [27 x i8] c"setting permissions for %s\00", align 1
@.str57173 = private constant [2 x i8] c".\00", align 1
@.str58174 = private constant [63 x i8] c"%s: can make relative symbolic links only in current directory\00", align 8
@.str59175 = private constant [37 x i8] c"cannot create symbolic link %s to %s\00", align 8
@.str60176 = private constant [22 x i8] c"cannot create fifo %s\00", align 1
@.str61177 = private constant [30 x i8] c"cannot create special file %s\00", align 1
@.str62178 = private constant [29 x i8] c"cannot read symbolic link %s\00", align 1
@.str63179 = private constant [31 x i8] c"cannot create symbolic link %s\00", align 8
@.str64180 = private constant [25 x i8] c"%s has unknown file type\00", align 1
@.str65181 = private constant [20 x i8] c"cannot un-backup %s\00", align 1
@.str66182 = private constant [21 x i8] c"%s -> %s (unbackup)\0A\00", align 1
@.str67183 = private constant [11 x i8] c"co != NULL\00", align 1
@__PRETTY_FUNCTION__.9235 = internal constant [14 x i8] c"valid_options\00"
@.str68184 = private constant [36 x i8] c"VALID_BACKUP_TYPE (co->backup_type)\00", align 8
@.str69185 = private constant [36 x i8] c"VALID_SPARSE_MODE (co->sparse_mode)\00", align 8
@.str70186 = private constant [38 x i8] c"VALID_REFLINK_MODE (co->reflink_mode)\00", align 8
@.str71187 = private constant [38 x i8] c"!(co->hard_link && co->symbolic_link)\00", align 8
@.str72188 = private constant [73 x i8] c"! (co->reflink_mode == REFLINK_ALWAYS && co->sparse_mode != SPARSE_AUTO)\00", align 8
@.str73189 = private constant [24 x i8] c"valid_options (options)\00", align 1
@__PRETTY_FUNCTION__.9286 = internal constant [5 x i8] c"copy\00"
@mask.9343 = internal global i32 -1
@src_to_dest = internal global %struct.Hash_table* null
@.str203 = private constant [55 x i8] c"scan->ei_count <= SIZE_MAX - fiemap->fm_mapped_extents\00", align 8
@.str1204 = private constant [18 x i8] c"src/extent-scan.c\00", align 1
@__PRETTY_FUNCTION__.6092 = internal constant [17 x i8] c"extent_scan_read\00"
@.str2205 = private constant [64 x i8] c"fm_extents[i].fe_logical <= OFF_T_MAX - fm_extents[i].fe_length\00", align 8
@Version = unnamed_addr global i8* getelementptr inbounds ([20 x i8]* @.str209, i64 0, i64 0)
@.str209 = private constant [20 x i8] c"8.25.57-bd751-dirty\00", align 1
@.str210 = private constant [3 x i8] c"%s\00", align 1
@.str1211 = private constant [30 x i8] c"preserving permissions for %s\00", align 1
@.str213 = private constant [27 x i8] c"setting permissions for %s\00", align 1
@argmatch_die = unnamed_addr global void ()* @__argmatch_die
@.str217 = private constant [27 x i8] c"invalid argument %s for %s\00", align 1
@.str1218 = private constant [29 x i8] c"ambiguous argument %s for %s\00", align 1
@.str2219 = private constant [21 x i8] c"Valid arguments are:\00", align 1
@.str3220 = private constant [8 x i8] c"\0A  - %s\00", align 1
@.str4221 = private constant [5 x i8] c", %s\00", align 1
@simple_backup_suffix = unnamed_addr global i8* getelementptr inbounds ([2 x i8]* @.str224, i64 0, i64 0)
@.str224 = private constant [2 x i8] c"~\00", align 1
@.str1225 = private constant [2 x i8] c".\00", align 1
@.str2226 = private constant [5 x i8] c".~1~\00", align 1
@backup_args = internal constant [9 x i8*] [i8* getelementptr inbounds ([5 x i8]* @.str3227, i64 0, i64 0), i8* getelementptr inbounds ([4 x i8]* @.str4228, i64 0, i64 0), i8* getelementptr inbounds ([7 x i8]* @.str5229, i64 0, i64 0), i8* getelementptr 
@.str3227 = private constant [5 x i8] c"none\00", align 1
@.str4228 = private constant [4 x i8] c"off\00", align 1
@.str5229 = private constant [7 x i8] c"simple\00", align 1
@.str6230 = private constant [6 x i8] c"never\00", align 1
@.str7231 = private constant [9 x i8] c"existing\00", align 1
@.str8232 = private constant [4 x i8] c"nil\00", align 1
@.str9233 = private constant [9 x i8] c"numbered\00", align 1
@.str10234 = private constant [2 x i8] c"t\00", align 1
@backup_types = internal constant [8 x i32] [i32 0, i32 0, i32 1, i32 1, i32 2, i32 2, i32 3, i32 3], align 32
@.str11235 = private constant [16 x i8] c"VERSION_CONTROL\00", align 1
@.str12236 = private constant [17 x i8] c"$VERSION_CONTROL\00", align 1
@file_name = internal global i8* null
@.str241 = private constant [19 x i8] c"error closing file\00", align 1
@.str1242 = private constant [7 x i8] c"%s: %s\00", align 1
@.str2243 = private constant [3 x i8] c"%s\00", align 1
@file_name245 = internal global i8* null
@ignore_EPIPE = internal global i8 0
@.str246 = private constant [12 x i8] c"write error\00", align 1
@.str1247 = private constant [7 x i8] c"%s: %s\00", align 1
@.str2248 = private constant [3 x i8] c"%s\00", align 1
@exit_failure = global i32 1
@default_tuning = internal constant %struct.Hash_tuning { float 0.000000e+00, float 1.000000e+00, float 0x3FE99999A0000000, float 0x3FF69FBE80000000, i8 0 }, align 16
@.str266 = private constant [24 x i8] c"# entries:         %lu\0A\00", align 1
@.str1267 = private constant [24 x i8] c"# buckets:         %lu\0A\00", align 1
@.str2268 = private constant [33 x i8] c"# buckets used:    %lu (%.2f%%)\0A\00", align 8
@.str3269 = private constant [24 x i8] c"max bucket length: %lu\0A\00", align 1
@program_name = unnamed_addr global i8* null
@.str280 = private constant [56 x i8] c"A NULL argv[0] was passed through an exec system call.\0A\00", align 8
@.str1281 = private constant [8 x i8] c"/.libs/\00", align 1
@.str2282 = private constant [4 x i8] c"lt-\00", align 1
@program_invocation_short_name = external global i8*
@program_invocation_name = external global i8*
@.str284 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1285 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3956 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2286 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3287 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str4288 = private constant [8 x i8] c"%s (%s)\00", align 1
@.str5289 = private constant [6 x i8] c"UTF-8\00", align 1
@.str6290 = private constant [11 x i8] c"//TRANSLIT\00", align 1
@quoting_style_args = constant [11 x i8*] [i8* getelementptr inbounds ([8 x i8]* @.str294, i64 0, i64 0), i8* getelementptr inbounds ([6 x i8]* @.str1295, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str2296, i64 0, i64 0), i8* getelementptr i
@.str294 = private constant [8 x i8] c"literal\00", align 1
@.str1295 = private constant [6 x i8] c"shell\00", align 1
@.str2296 = private constant [13 x i8] c"shell-always\00", align 1
@.str3297 = private constant [13 x i8] c"shell-escape\00", align 1
@.str4298 = private constant [20 x i8] c"shell-escape-always\00", align 1
@.str5299 = private constant [2 x i8] c"c\00", align 1
@.str6300 = private constant [8 x i8] c"c-maybe\00", align 1
@.str7301 = private constant [7 x i8] c"escape\00", align 1
@.str8302 = private constant [7 x i8] c"locale\00", align 1
@.str9303 = private constant [8 x i8] c"clocale\00", align 1
@quoting_style_vals = constant [10 x i32] [i32 0, i32 1, i32 2, i32 3, i32 4, i32 5, i32 6, i32 7, i32 8, i32 9], align 32
@default_quoting_options = internal global %struct.quoting_options zeroinitializer, align 32
@.str10304 = private constant [6 x i8] c"UTF-8\00", align 1
@.str11305 = private constant [4 x i8] c"\E2\80\98\00", align 1
@.str12306 = private constant [4 x i8] c"\E2\80\99\00", align 1
@.str13307 = private constant [8 x i8] c"GB18030\00", align 1
@.str14308 = private constant [4 x i8] c"\A1\07e\00", align 1
@.str15309 = private constant [3 x i8] c"\A1\AF\00", align 1
@.str16310 = private constant [2 x i8] c"\22\00", align 1
@.str17311 = private constant [2 x i8] c"'\00", align 1
@.str18312 = private constant [2 x i8] c"`\00", align 1
@nslots = internal global i32 1
@slotvec0 = internal global %struct.slotvec { i64 256, i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0) }, align 16
@slot0 = internal global [256 x i8] zeroinitializer, align 32
@slotvec = internal global %struct.slotvec* @slotvec0
@quote_quoting_options = global %struct.quoting_options { i32 8, i32 0, [8 x i32] zeroinitializer, i8* null, i8* null }, align 32
@.str320 = private constant [3 x i8] c"%s\00", align 1
@comparison_function_table = internal constant [3 x i32 (i8*, i8*)*] [i32 (i8*, i8*)* null, i32 (i8*, i8*)* @direntry_cmp_name, i32 (i8*, i8*)* @direntry_cmp_inode], align 16
@.str328 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1329 = private constant [13 x i8] c"lib/mbiter.h\00", align 1
@__PRETTY_FUNCTION__.3931 = internal constant [18 x i8] c"mbiter_multi_next\00"
@.str2330 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3331 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@ht.4270 = internal global %struct.Hash_table* null
@new_dst_res.4271 = internal global %struct.fs_res* null
@utimensat_works_really = internal global i32 0
@lutimensat_works_really = internal global i32 0
@.str340 = private constant [3 x i8] c"%s\00", align 1
@.str1341 = private constant [32 x i8] c"unable to display error message\00", align 8
@.str343 = private constant [12 x i8] c"%s (%s) %s\0A\00", align 1
@.str1344 = private constant [7 x i8] c"%s %s\0A\00", align 1
@.str2345 = private constant [4 x i8] c"(C)\00", align 1
@.str3346 = private constant [203 x i8] c"\0ALicense GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>.\0AThis is free software: you are free to change and redistribute it.\0AThere is NO WARRANTY, to the extent permitted by law.\0A\0A
@.str4347 = private constant [16 x i8] c"Written by %s.\0A\00", align 1
@.str5348 = private constant [23 x i8] c"Written by %s and %s.\0A\00", align 1
@.str6349 = private constant [28 x i8] c"Written by %s, %s, and %s.\0A\00", align 1
@.str7350 = private constant [32 x i8] c"Written by %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str8351 = private constant [36 x i8] c"Written by %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str9352 = private constant [40 x i8] c"Written by %s, %s, %s,\0A%s, %s, and %s.\0A\00", align 8
@.str10353 = private constant [44 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, and %s.\0A\00", align 8
@.str11354 = private constant [48 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0Aand %s.\0A\00", align 8
@.str12355 = private constant [52 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, and %s.\0A\00", align 8
@.str13356 = private constant [60 x i8] c"Written by %s, %s, %s,\0A%s, %s, %s, %s,\0A%s, %s, and others.\0A\00", align 8
@.str14357 = private constant [21 x i8] c"\0AReport bugs to: %s\0A\00", align 1
@.str15358 = private constant [22 x i8] c"bug-coreutils@gnu.org\00", align 1
@.str16359 = private constant [20 x i8] c"%s home page: <%s>\0A\00", align 1
@.str17360 = private constant [14 x i8] c"GNU coreutils\00", align 1
@.str18361 = private constant [39 x i8] c"http://www.gnu.org/software/coreutils/\00", align 8
@.str19362 = private constant [64 x i8] c"General help using GNU software: <http://www.gnu.org/gethelp/>\0A\00", align 8
@version_etc_copyright = constant [47 x i8] c"Copyright %s %d Free Software Foundation, Inc.\00", align 32
@initialized.2472 = internal global i8 0
@can_write.2473 = internal global i8 0
@.str373 = private constant [17 x i8] c"memory exhausted\00", align 1
@.str1374 = private constant [3 x i8] c"%s\00", align 1
@have_dupfd_cloexec.2627 = internal global i32 0
@utimensat_works_really.2379 = internal global i32 0
@.str391 = private constant [2 x i8] c"C\00", align 1
@.str1392 = private constant [6 x i8] c"POSIX\00", align 1
@charset_aliases = internal global i8* null
@.str395 = private constant [14 x i8] c"charset.alias\00", align 1
@.str1396 = private constant [16 x i8] c"CHARSETALIASDIR\00", align 1
@.str2397 = private constant [15 x i8] c"/usr/local/lib\00", align 1
@.str3398 = private constant [1 x i8] zeroinitializer, align 1
@.str4399 = private constant [2 x i8] c"r\00", align 1
@.str5400 = private constant [10 x i8] c"%50s %50s\00", align 1
@.str6401 = private constant [6 x i8] c"ASCII\00", align 1
@.str403 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1404 = private constant [13 x i8] c"lib/mbiter.h\00", align 1
@__PRETTY_FUNCTION__.3311 = internal constant [18 x i8] c"mbiter_multi_next\00"
@.str2405 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3406 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str409 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1410 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3835 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2411 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3412 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str417 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1418 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3824 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2419 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3420 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@.str424 = private constant [43 x i8] c"unable to record current working directory\00", align 8
@.str1425 = private constant [46 x i8] c"failed to return to initial working directory\00", align 8
@.str428 = private constant [2 x i8] c".\00", align 1
@.str437 = private constant [13 x i8] c"! close_fail\00", align 1
@.str1438 = private constant [17 x i8] c"lib/chdir-long.c\00", align 1
@__PRETTY_FUNCTION__.3949 = internal constant [9 x i8] c"cdb_free\00"
@.str2439 = private constant [2 x i8] c"/\00", align 1
@.str3440 = private constant [8 x i8] c"0 < len\00", align 1
@__PRETTY_FUNCTION__.3985 = internal constant [11 x i8] c"chdir_long\00"
@.str4441 = private constant [12 x i8] c"4096 <= len\00", align 1
@.str5442 = private constant [12 x i8] c"*dir != '/'\00", align 1
@.str6443 = private constant [15 x i8] c"dir <= dir_end\00", align 1
@.str7444 = private constant [19 x i8] c"slash - dir < 4096\00", align 1
@proc_status.4328 = internal global i32 0
@.str447 = private constant [14 x i8] c"/proc/self/fd\00", align 1
@.str1448 = private constant [23 x i8] c"/proc/self/fd/%d/../fd\00", align 1
@.str2449 = private constant [18 x i8] c"/proc/self/fd/%d/\00", align 1
@mmalloca_results = internal global [257 x i8*] zeroinitializer, align 32
@is_basic_table = constant [8 x i32] [i32 6656, i32 -17, i32 -2, i32 2147483646, i32 0, i32 0, i32 0, i32 0], align 32
@.str458 = private constant [23 x i8] c"mbsinit (&iter->state)\00", align 1
@.str1459 = private constant [14 x i8] c"lib/mbuiter.h\00", align 1
@__PRETTY_FUNCTION__.3824460 = internal constant [19 x i8] c"mbuiter_multi_next\00"
@.str2461 = private constant [23 x i8] c"*iter->cur.ptr == '\5C0'\00", align 1
@.str3462 = private constant [18 x i8] c"iter->cur.wc == 0\00", align 1
@__evoke_link_warning___fpending = internal constant [167 x i8] c"This version of __fpending returns bytes remaining in buffer for both narrow and wide streams.  glibc's version returns wide chars in buffer for the wide stream case.\00", section ".gnu.wa
@llvm.used = appending global [1 x i8*] [i8* getelementptr inbounds ([167 x i8]* @__evoke_link_warning___fpending, i64 0, i64 0)], section "llvm.metadata"
@__libc_stack_end = global i8* null
@__uclibc_progname = hidden global i8* getelementptr inbounds ([1 x i8]* @.str117, i64 0, i64 0)
@.str117 = private constant [1 x i8] zeroinitializer, align 1
@__environ = global i8** null
@__pagesize = global i64 0
@.str1118 = private constant [10 x i8] c"/dev/null\00", align 1
@been_there_done_that.2848 = internal global i32 0
@__app_fini = hidden global void ()* null
@__rtld_fini = hidden global void ()* null
@been_there_done_that = internal global i32 0
@__dso_handle = extern_weak global i8*
@error_message_count = global i32 0
@.str125 = private constant [5 x i8] c": %s\00", align 1
@error_one_per_line = common global i32 0
@old_line_number.2047 = internal global i32 0
@old_file_name.2046 = internal global i8* null
@.str1126 = private constant [8 x i8] c"%s:%d: \00", align 1
@__exit_cleanup = hidden global void (i32)* null
@optind = unnamed_addr global i32 1
@opterr = global i32 1
@optopt = global i32 63
@.str146 = private constant [16 x i8] c"POSIXLY_CORRECT\00", align 1
@.str1147 = private constant [3 x i8] c"--\00", align 1
@.str2148 = private constant [30 x i8] c"%s: option `%s' is ambiguous\0A\00", align 1
@.str3149 = private constant [45 x i8] c"%s: option `--%s' doesn't allow an argument\0A\00", align 8
@.str4150 = private constant [45 x i8] c"%s: option `%c%s' doesn't allow an argument\0A\00", align 8
@.str5151 = private constant [38 x i8] c"%s: option `%s' requires an argument\0A\00", align 8
@.str6152 = private constant [32 x i8] c"%s: unrecognized option `--%s'\0A\00", align 8
@.str7153 = private constant [32 x i8] c"%s: unrecognized option `%c%s'\0A\00", align 8
@.str8154 = private constant [1 x i8] zeroinitializer, align 1
@.str9155 = private constant [26 x i8] c"%s: illegal option -- %c\0A\00", align 1
@.str10156 = private constant [26 x i8] c"%s: invalid option -- %c\0A\00", align 1
@.str11157 = private constant [39 x i8] c"%s: option requires an argument -- %c\0A\00", align 8
@getopt_data = internal global %struct._getopt_data zeroinitializer, align 32
@optarg = common unnamed_addr global i8* null
@static_fd = internal global i32 -1
@default_file_name = internal constant [14 x i8] c"/var/run/utmp\00"
@static_ut_name = internal global i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0)
@static_utmp = internal global %struct.utmp zeroinitializer, align 32
@mbstate.2221 = internal global %struct.__mbstate_t zeroinitializer
@nl_data = internal constant [417 x i8] c"\00\0B\0E$VVZ\00\02\04\06\08\0A\0C\0E\10\12\14\1A\1B\1B\1B\1B\1B\1B\1B\1B\1B\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1C\1E $(,048<CJR\5Celuy}\81\85\89\8D\91\95\99\9D\A1\A5\AD6<BFKPWair{~\81\96\9F\A8\B3\B3\B3\B3\B3
@C_string = internal constant [2 x i8] c"C\00"
@.str178 = private constant [6 x i8] c"POSIX\00", align 1
@_stdio_streams = internal global [3 x %4] [%4 { i16 544, [2 x i8] zeroinitializer, i32 0, i8* null, i8* null, i8* null, i8* null, i8* null, i8* null, %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1), [2 x i32] zeroinitializer, %struc
@stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@stdout = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@stderr = unnamed_addr global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 2)
@__stdin = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@__stdout = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1)
@_stdio_openlist = global %4* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0)
@errno = global i32 0
@h_errno = global i32 0
@desc2flag = internal constant [13 x i16] [i16 0, i16 2048, i16 4, i16 256, i16 512, i16 8, i16 128, i16 2, i16 64, i16 1024, i16 32, i16 1, i16 16], align 16
@mbstate.2222 = internal global %struct.__mbstate_t zeroinitializer
@buf.1212 = internal global [50 x i8] zeroinitializer
@spec_base.3674 = internal constant [7 x i8] c"\10\10\10\08\0A\0A\0A"
@.str223 = private constant [6 x i8] c"(nil)\00", align 1
@.str1224 = private constant [7 x i8] c"(null)\00", align 1
@prefix.3675 = internal constant [12 x i8] c"+\00-\00 \000x\000X\00"
@__C_ctype_b_data = constant [384 x i16] [i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i16 0, i1
@__C_ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@__ctype_b = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_b_data, i64 0, i64 128)
@decpt_str = internal constant [2 x i8] c".\00"
@spec_base = internal constant [15 x i8] c"\10\10\10\08\0A\0A\00\0A\0A\0A\0A\0A\0A\0A\0A"
@nil_string = internal constant [6 x i8] c"(nil)\00"
@nan_inf_str.3836 = internal constant [11 x i8] c"an\00nfinity\00"
@__exit_count = hidden global i32 0
@__exit_function_table = hidden global %struct.exit_function* null
@__exit_slots = hidden global i32 0
@spec_flags = internal constant [4 x i8] c"*'I\00"
@spec_chars = internal constant [23 x i8] c"npxXoudifFeEgGaACSncs[\00", align 16
@qual_chars = internal constant [18 x i8] c"hlLjztq\00\02\04\08\04\04\04\08\00\01\08", align 16
@spec_ranges = internal constant [8 x i8] c"\00\01\07\0F\10\12\13\15"
@spec_allowed = internal constant [8 x i16] [i16 31, i16 16, i16 127, i16 124, i16 16, i16 144, i16 20, i16 148], align 16
@unknown.1225 = internal constant [14 x i8] c"Unknown error "
@fmt = internal constant [20 x i8] c"inf\00INF\00nan\00NAN\00.\00,\00", align 16
@exp10_table = internal constant [13 x x86_fp80] [x86_fp80 0xK4002A000000000000000, x86_fp80 0xK4005C800000000000000, x86_fp80 0xK400C9C40000000000000, x86_fp80 0xK4019BEBC200000000000, x86_fp80 0xK40348E1BC9BF04000000, x86_fp80 0xK40699DC5ADA82B70B59E, 
@type_codes = internal constant [12 x i16] [i16 8, i16 5, i16 3, i16 4, i16 1, i16 512, i16 0, i16 1024, i16 2048, i16 2, i16 7, i16 2055], align 16
@type_sizes = internal constant [12 x i8] c"\00\01\01\01\04\02\01\01\01\01\01\01"
@spec_flags.3665 = internal constant [8 x i8] c" +0-#'I\00"
@qual_chars.3670 = internal constant [20 x i8] c"hlLjztqZ\00\02\04\08\04\04\04\08\04\00\01\08"
@spec_chars.3666 = internal constant [21 x i8] c"npxXoudifFeEgGaACScs\00"
@spec_ranges.3667 = internal constant [9 x i8] c"\00\01\07\0F\10\11\12\13\14"
@spec_or_mask.3668 = internal constant [8 x i16] [i16 4096, i16 5, i16 0, i16 7, i16 2, i16 4, i16 1, i16 3]
@spec_and_mask.3669 = internal constant [8 x i16] [i16 7936, i16 5, i16 3840, i16 2055, i16 2, i16 4, i16 1, i16 3]
@nan_inf_str.2180 = internal constant [21 x i8] c"\05nan\00\0Ainfinity\00\05inf\00\00"
@_string_syserrmsgs = hidden constant [2906 x i8] c"Success\00Operation not permitted\00No such file or directory\00No such process\00Interrupted system call\00Input/output error\00No such device or address\00Argument list too long\00Exec format error\00
@__C_ctype_tolower_data = constant [384 x i16] [i16 -128, i16 -127, i16 -126, i16 -125, i16 -124, i16 -123, i16 -122, i16 -121, i16 -120, i16 -119, i16 -118, i16 -117, i16 -116, i16 -115, i16 -114, i16 -113, i16 -112, i16 -111, i16 -110, i16 -109, i16 -1
@__C_ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@__ctype_tolower = global i16* getelementptr inbounds ([384 x i16]* @__C_ctype_tolower_data, i64 0, i64 128)
@.str255 = private constant [16 x i8] c"klee_init_env.c\00", align 1
@.str1256 = private constant [9 x i8] c"user.err\00", align 1
@.str2257 = private constant [24 x i8] c"invalid escape sequence\00", align 1
@.str3258 = private constant [37 x i8] c"too many arguments for klee_init_env\00", align 8
@.str5259 = private constant [7 x i8] c"--help\00", align 1
@.str6260 = private constant [593 x i8] c"klee_init_env\0A\0Ausage: (klee_init_env) [options] [program arguments]\0A  -sym-arg <N>              - Replace by a symbolic argument with length N\0A  -sym-args <MIN> <MAX> <N> - Replace by at least MIN argumen
@.str7261 = private constant [10 x i8] c"--sym-arg\00", align 1
@.str8262 = private constant [9 x i8] c"-sym-arg\00", align 1
@.str9263 = private constant [48 x i8] c"--sym-arg expects an integer argument <max-len>\00", align 8
@.str10264 = private constant [11 x i8] c"--sym-args\00", align 1
@.str11265 = private constant [10 x i8] c"-sym-args\00", align 1
@.str12266 = private constant [77 x i8] c"--sym-args expects three integer arguments <min-argvs> <max-argvs> <max-len>\00", align 8
@.str13267 = private constant [7 x i8] c"n_args\00", align 1
@.str14268 = private constant [12 x i8] c"--sym-files\00", align 1
@.str15269 = private constant [11 x i8] c"-sym-files\00", align 1
@.str16270 = private constant [72 x i8] c"--sym-files expects two integer arguments <no-sym-files> <sym-file-len>\00", align 8
@.str17271 = private constant [13 x i8] c"--sym-stdout\00", align 1
@.str18272 = private constant [12 x i8] c"-sym-stdout\00", align 1
@.str19273 = private constant [18 x i8] c"--save-all-writes\00", align 1
@.str20274 = private constant [17 x i8] c"-save-all-writes\00", align 1
@.str21275 = private constant [10 x i8] c"--fd-fail\00", align 1
@.str22276 = private constant [9 x i8] c"-fd-fail\00", align 1
@.str23277 = private constant [11 x i8] c"--max-fail\00", align 1
@.str24278 = private constant [10 x i8] c"-max-fail\00", align 1
@.str25279 = private constant [54 x i8] c"--max-fail expects an integer argument <max-failures>\00", align 8
@.str26280 = private constant [14 x i8] c"--sym-streams\00", align 1
@.str27281 = private constant [13 x i8] c"-sym-streams\00", align 1
@.str28282 = private constant [76 x i8] c"--sym-streams expects two integer arguments <no-streams> <bytes-per-stream>\00", align 8
@.str29283 = private constant [16 x i8] c"--sym-datagrams\00", align 1
@.str30284 = private constant [15 x i8] c"-sym-datagrams\00", align 1
@.str31285 = private constant [82 x i8] c"--sym-datagrams expects two integer arguments <no-datagrams> <bytes-per-datagram>\00", align 8
@.str32286 = private constant [19 x i8] c"--one-line-streams\00", align 1
@.str33287 = private constant [18 x i8] c"-one-line-streams\00", align 1
@.str34288 = private constant [15 x i8] c"--fill-streams\00", align 1
@.str35289 = private constant [14 x i8] c"-fill-streams\00", align 1
@.str36290 = private constant [121 x i8] c"--fill-streams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string> or <offset> \22file\22 <string>\00", align 8
@.str37291 = private constant [32 x i8] c"--fill-streams: too many blocks\00", align 8
@.str38292 = private constant [4 x i8] c"set\00", align 1
@.str39293 = private constant [5 x i8] c"copy\00", align 1
@.str40294 = private constant [5 x i8] c"file\00", align 1
@.str41295 = private constant [17 x i8] c"--fill-datagrams\00", align 1
@.str42296 = private constant [16 x i8] c"-fill-datagrams\00", align 1
@.str43297 = private constant [95 x i8] c"--fill-datagrams expects arguments <offset> \22set\22 <length> <value> or <offset> \22copy\22 <string>\00", align 8
@.str44298 = private constant [34 x i8] c"--fill-datagrams: too many blocks\00", align 8
@.str300 = private constant [18 x i8] c"ignoring (ENOMEM)\00", align 1
@.str1301 = private constant [18 x i8] c"ignoring (EACCES)\00", align 1
@.str2302 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str3303 = private constant [10 x i8] c"illegal.c\00", align 1
@.str4304 = private constant [20 x i8] c"longjmp unsupported\00", align 1
@.str5305 = private constant [8 x i8] c"xxx.err\00", align 1
@.str6306 = private constant [9 x i8] c"ignoring\00", align 1
@.str308 = private constant [18 x i8] c"ignoring (ENOENT)\00", align 1
@.str1309 = private constant [32 x i8] c"symbolic file, ignoring (EBADF)\00", align 8
@.str2310 = private constant [33 x i8] c"symbolic file, ignoring (EINVAL)\00", align 8
@.str3311 = private constant [54 x i8] c"futimens: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str4312 = private constant [32 x i8] c"symbolic file, ignoring (EPERM)\00", align 8
@.str5313 = private constant [33 x i8] c"symbolic file, ignoring (ENOENT)\00", align 8
@.str6314 = private constant [41 x i8] c"(TCGETS) symbolic file, incomplete model\00", align 8
@.str7315 = private constant [42 x i8] c"(TCSETS) symbolic file, silently ignoring\00", align 8
@.str8316 = private constant [43 x i8] c"(TCSETSW) symbolic file, silently ignoring\00", align 8
@.str9317 = private constant [43 x i8] c"(TCSETSF) symbolic file, silently ignoring\00", align 8
@.str10318 = private constant [45 x i8] c"(TIOCGWINSZ) symbolic file, incomplete model\00", align 8
@.str11319 = private constant [46 x i8] c"(TIOCSWINSZ) symbolic file, ignoring (EINVAL)\00", align 8
@.str12320 = private constant [43 x i8] c"(FIONREAD) symbolic file, incomplete model\00", align 8
@.str13321 = private constant [44 x i8] c"(MTIOCGET) symbolic file, ignoring (EINVAL)\00", align 8
@n_calls.5871 = internal global i32 0
@.str14322 = private constant [52 x i8] c"getdents called on symbolic file, ignoring (EINVAL)\00", align 8
@.str15323 = private constant [18 x i8] c"s != (off64_t) -1\00", align 1
@.str16324 = private constant [5 x i8] c"fd.c\00", align 1
@__PRETTY_FUNCTION__.6593 = internal constant [14 x i8] c"__fd_getdents\00"
@.str17325 = private constant [2 x i8] c"0\00", align 1
@__PRETTY_FUNCTION__.7291 = internal constant [18 x i8] c"__fd_gather_write\00", align 16
@.str18326 = private constant [23 x i8] c"write() ignores bytes.\00", align 1
@.str19327 = private constant [57 x i8] c"scatter read malfunctions when provided a symbolic iovec\00", align 8
@.str20328 = private constant [12 x i8] c"f->off >= 0\00", align 1
@__PRETTY_FUNCTION__.7229 = internal constant [18 x i8] c"__fd_scatter_read\00", align 16
@.str21329 = private constant [33 x i8] c"0 && \22unable to allocate memory\22\00", align 8
@.str22330 = private constant [11 x i8] c"readv data\00", align 1
@.str23331 = private constant [47 x i8] c"KLEE: MODEL: pipe: returning {%d,%d}->{%d,%d}\0A\00", align 8
@UseConcretePath = common global i8 0
@.str24332 = private constant [32 x i8] c"ZEST: opening symbolic file %s\0A\00", align 8
@.str25333 = private constant [6 x i8] c".test\00", align 1
@.str26334 = private constant [40 x i8] c"ZEST: opening symbolic file (.test) %s\0A\00", align 8
@.str27335 = private constant [32 x i8] c"ZEST: opening concrete file %s\0A\00", align 8
@.str28336 = private constant [40 x i8] c"utime: symbolic file, ignoring (ENOENT)\00", align 8
@.str29337 = private constant [41 x i8] c"utimes: symbolic file, ignoring (ENOENT)\00", align 8
@.str30338 = private constant [52 x i8] c"openat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str31339 = private constant [42 x i8] c"symlink: symbolic path, ignoring (ENOENT)\00", align 8
@.str32340 = private constant [39 x i8] c"link: symbolic path, ignoring (ENOENT)\00", align 8
@.str33341 = private constant [44 x i8] c"futimesat: symbolic path, ignoring (ENOENT)\00", align 8
@.str34342 = private constant [55 x i8] c"futimesat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str35343 = private constant [43 x i8] c"unlinkat: symbolic path, ignoring (ENOENT)\00", align 8
@.str36344 = private constant [54 x i8] c"unlinkat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str37345 = private constant [42 x i8] c"fstatat: symbolic path, ignoring (ENOENT)\00", align 8
@.str38346 = private constant [53 x i8] c"fstatat: symbolic file descriptor, ignoring (ENOENT)\00", align 8
@n_calls.7064 = internal global i32 0
@n_calls.6554 = internal global i32 0
@.str39347 = private constant [30 x i8] c"symbolic file, ignoring (EIO)\00", align 1
@.str40348 = private constant [18 x i8] c"new_off == f->off\00", align 1
@__PRETTY_FUNCTION__.6098 = internal constant [11 x i8] c"__fd_lseek\00"
@n_calls.5974 = internal global i32 0
@n_calls.5898 = internal global i32 0
@__PRETTY_FUNCTION__.5902 = internal constant [5 x i8] c"read\00"
@.str41349 = private constant [10 x i8] c"read data\00", align 1
@.str42350 = private constant [43 x i8] c"mmap_simple: unable to read requested size\00", align 8
@.str43351 = private constant [18 x i8] c"mmap_simple: read\00", align 1
@.str44352 = private constant [30 x i8] c"mmap64: unsupported mmap call\00", align 1
@n_calls.6299 = internal global i32 0
@n_calls.6276 = internal global i32 0
@n_calls.6018 = internal global i32 0
@.str45353 = private constant [5 x i8] c"cbuf\00", align 1
@__PRETTY_FUNCTION__.6022 = internal constant [6 x i8] c"write\00"
@.str46354 = private constant [7 x i8] c"r >= 0\00", align 1
@.str47355 = private constant [33 x i8] c"WARNING: write() ignores bytes.\0A\00", align 8
@.str48356 = private constant [47 x i8] c"Undefined call to open(): O_EXCL w/o O_RDONLY\0A\00", align 8
@.str49357 = private constant [15 x i8] c"/proc/self/fd/\00", align 1
@.str50358 = private constant [1 x i8] zeroinitializer, align 1
@.str51359 = private constant [19 x i8] c"/proc/self/fd/%d%s\00", align 1
@.str52360 = private constant [44 x i8] c"symbolic file descriptor, ignoring (ENOENT)\00", align 8
@.str385 = private constant [19 x i8] c"(f->foreign)->addr\00", align 1
@.str1386 = private constant [14 x i8] c"sockets.c.inc\00", align 1
@__PRETTY_FUNCTION__.7471 = internal constant [18 x i8] c"__fd_attach_dgram\00", align 16
@.str2387 = private constant [26 x i8] c"0 && \22unsupported domain\22\00", align 1
@dummy_dfile = internal global %struct.exe_disk_file_t zeroinitializer, align 32
@.str3388 = private constant [31 x i8] c"cap_get_file: ignoring (EPERM)\00", align 8
@.str4389 = private constant [17 x i8] c"ignoring (EPERM)\00", align 1
@.str5390 = private constant [25 x i8] c"0 && \22not supported yet\22\00", align 1
@__PRETTY_FUNCTION__.7439 = internal constant [13 x i8] c"__fd_recvmsg\00"
@.str6391 = private constant [28 x i8] c"flags is not zero, ignoring\00", align 1
@__PRETTY_FUNCTION__.7339 = internal constant [13 x i8] c"__fd_sendmsg\00"
@.str7392 = private constant [17 x i8] c"f->foreign->addr\00", align 1
@__PRETTY_FUNCTION__.7179 = internal constant [12 x i8] c"getpeername\00"
@.str8393 = private constant [14 x i8] c"f->local.addr\00", align 1
@__PRETTY_FUNCTION__.7141 = internal constant [12 x i8] c"getsockname\00"
@__PRETTY_FUNCTION__.6905 = internal constant [8 x i8] c"connect\00"
@.str9394 = private constant [505 x i8] c"((((f->foreign)->addr) ? (void) (0) : __assert_fail (\22(f->foreign)->addr\22, \22sockets.c.inc\22, 337, __PRETTY_FUNCTION__)), ( ((struct sockaddr *)((f->foreign)->addr))->sa_family == 2 ? ((struct sockaddr_in *
@__PRETTY_FUNCTION__.6833 = internal constant [5 x i8] c"bind\00"
@.str11395 = private constant [48 x i8] c"Calling rename with possibly symbolic arguments\00", align 8
@.str12396 = private constant [2 x i8] c"a\00", align 1
@__PRETTY_FUNCTION__.6681 = internal constant [20 x i8] c"__allocate_sockaddr\00", align 16
@.str13397 = private constant [25 x i8] c"No more symbolic streams\00", align 1
@.str14398 = private constant [25 x i8] c"No more file descriptors\00", align 1
@.str15399 = private constant [24 x i8] c"unsupported socket type\00", align 1
@.str16400 = private constant [28 x i8] c"unsupported socket protocol\00", align 1
@.str17401 = private constant [20 x i8] c"ignoring setsockopt\00", align 1
@.str18402 = private constant [20 x i8] c"ignoring getsockopt\00", align 1
@.str19403 = private constant [46 x i8] c"__socketcall(type=%d: unknown): errno=ENOSYS\0A\00", align 8
@.str20404 = private constant [18 x i8] c"silently ignoring\00", align 1
@__exe_env = global %struct.exe_sym_env_t { [32 x %struct.exe_file_t] [%struct.exe_file_t { i32 0, i32 5, i64 0, %struct.exe_disk_file_t* null, %struct.exe_sockaddr_t zeroinitializer, %struct.exe_sockaddr_t* null, i32 0 }, %struct.exe_file_t { i32 1, i32
@.str421 = private constant [37 x i8] c"s >= 0 && \22unable to open fill file\22\00", align 8
@.str1422 = private constant [10 x i8] c"fd_init.c\00", align 1
@__PRETTY_FUNCTION__.5216 = internal constant [14 x i8] c"__fill_blocks\00"
@.str2423 = private constant [62 x i8] c"dfile->size >= p->offset + s && \22fill file to big for socket\22\00", align 8
@.str3424 = private constant [27 x i8] c"0 && \22unknown fill method\22\00", align 1
@.str4425 = private constant [6 x i8] c"-stat\00", align 1
@.str5426 = private constant [17 x i8] c"contents || size\00", align 1
@__PRETTY_FUNCTION__.5290 = internal constant [19 x i8] c"__create_new_dfile\00", align 16
@.str6427 = private constant [22 x i8] c"-1 != stat64(name, s)\00", align 1
@.str7428 = private constant [34 x i8] c"-1 != stat64(name, &originalStat)\00", align 8
@.str8429 = private constant [5 x i8] c"-src\00", align 1
@.str9430 = private constant [2 x i8] c".\00", align 1
@__exe_fs = common global %struct.exe_file_system_t zeroinitializer, align 32
@__stream_fill_info = internal global %struct.fill_info_t* null
@__n_stream_fill_info = internal global i32 0
@__dgram_fill_info = internal global %struct.fill_info_t* null
@__n_dgram_fill_info = internal global i32 0
@.str13432 = private constant [6 x i8] c"stdin\00", align 1
@.str14433 = private constant [10 x i8] c"read_fail\00", align 1
@.str15434 = private constant [11 x i8] c"write_fail\00", align 1
@.str16435 = private constant [11 x i8] c"close_fail\00", align 1
@.str17436 = private constant [15 x i8] c"ftruncate_fail\00", align 1
@.str18437 = private constant [12 x i8] c"getcwd_fail\00", align 1
@.str19438 = private constant [7 x i8] c"stdout\00", align 1
@.str20439 = private constant [14 x i8] c"model_version\00", align 1
@.str21440 = private constant [37 x i8] c"malloc returned NULL for sym_streams\00", align 8
@.str22441 = private constant [36 x i8] c"malloc returned NULL for sym_dgrams\00", align 8
@.str444 = private constant [5 x i8] c"argv\00", align 1
@.str446 = private constant [8 x i8] c"IGNORED\00", align 1
@.str1447 = private constant [16 x i8] c"overshift error\00", align 1
@.str2448 = private constant [14 x i8] c"overshift.err\00", align 1
@.str450 = private constant [22 x i8] c"klee_div_zero_check.c\00", align 1
@.str1451 = private constant [15 x i8] c"divide by zero\00", align 1
@.str2452 = private constant [8 x i8] c"div.err\00", align 1
@.str454 = private constant [13 x i8] c"klee_range.c\00", align 1
@.str1455 = private constant [14 x i8] c"invalid range\00", align 1
@.str2456 = private constant [5 x i8] c"user\00", align 1

@fgetc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@getc_unlocked = alias i32 (%4*)* @__fgetc_unlocked
@fgetc = alias i32 (%4*)* @__fgetc_unlocked
@getc = alias i32 (%4*)* @__fgetc_unlocked
@fputc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@putc_unlocked = alias i32 (i32, %4*)* @__fputc_unlocked
@fputc = alias i32 (i32, %4*)* @__fputc_unlocked
@putc = alias i32 (i32, %4*)* @__fputc_unlocked
@environ = alias weak i8*** @__environ
@error = alias weak void (i32, i32, i8*, ...)* @__error
@error_at_line = alias weak void (i32, i32, i8*, i32, i8*, ...)* @__error_at_line
@ferror = alias i32 (%4*)* @ferror_unlocked
@fflush = alias i32 (%4*)* @fflush_unlocked
@fileno = alias i32 (%4*)* @fileno_unlocked
@fputs = alias i32 (i8*, %4*)* @fputs_unlocked
@fseeko = alias i32 (%4*, i64, i32)* @fseek
@fwrite = alias i64 (i8*, i64, i64, %4*)* @fwrite_unlocked
@putchar = alias i32 (i32)* @putchar_unlocked
@strcoll = alias i32 (i8*, i8*)* @strcmp
@raise = alias weak i32 (i32)* @__raise
@sigaction = alias weak i32 (i32, %struct.sigaction*, %struct.sigaction*)* @__libc_sigaction
@strerror_r = alias weak i32 (i32, i8*, i64)* @__xpg_strerror_r
@__getdents = alias i64 (i32, %struct.dirent*, i64)* @getdents

define internal i32 @klee_get_true() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 1, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal i32 @klee_get_false() nounwind noinline {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 0, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

declare i64 @klee_change(i64, i64) nounwind noinline

define void @usage(i32 %status) noreturn nounwind {
entry:
  %status_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  %0 = load i32* %status_addr, align 4
  %1 = icmp ne i32 %0, 0
  %2 = load i8** @program_name, align 8
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = call i8* @gettext(i8* getelementptr inbounds ([39 x i8]* @.str33, i64 0, i64 0)) nounwind
  %4 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %5 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %4, i8* noalias %3, i8* %2) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i8** @program_name, align 8
  %7 = load i8** @program_name, align 8
  %8 = call i8* @gettext(i8* getelementptr inbounds ([127 x i8]* @.str34, i64 0, i64 0)) nounwind
  %9 = call i32 (i8*, ...)* @printf(i8* noalias %8, i8* %7, i8* %6, i8* %2) nounwind
  %10 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %11 = call i8* @gettext(i8* getelementptr inbounds ([58 x i8]* @.str35, i64 0, i64 0)) nounwind
  %12 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %11, %struct.FILE* noalias %10) nounwind
  call void @emit_mandatory_arg_note() nounwind
  %13 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %14 = call i8* @gettext(i8* getelementptr inbounds ([442 x i8]* @.str36, i64 0, i64 0)) nounwind
  %15 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %14, %struct.FILE* noalias %13) nounwind
  %16 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %17 = call i8* @gettext(i8* getelementptr inbounds ([427 x i8]* @.str37, i64 0, i64 0)) nounwind
  %18 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %17, %struct.FILE* noalias %16) nounwind
  %19 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %20 = call i8* @gettext(i8* getelementptr inbounds ([137 x i8]* @.str38, i64 0, i64 0)) nounwind
  %21 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %20, %struct.FILE* noalias %19) nounwind
  %22 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %23 = call i8* @gettext(i8* getelementptr inbounds ([201 x i8]* @.str39, i64 0, i64 0)) nounwind
  %24 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %23, %struct.FILE* noalias %22) nounwind
  %25 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %26 = call i8* @gettext(i8* getelementptr inbounds ([341 x i8]* @.str40, i64 0, i64 0)) nounwind
  %27 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %26, %struct.FILE* noalias %25) nounwind
  %28 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %29 = call i8* @gettext(i8* getelementptr inbounds ([145 x i8]* @.str41, i64 0, i64 0)) nounwind
  %30 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %29, %struct.FILE* noalias %28) nounwind
  %31 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %32 = call i8* @gettext(i8* getelementptr inbounds ([283 x i8]* @.str42, i64 0, i64 0)) nounwind
  %33 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %32, %struct.FILE* noalias %31) nounwind
  %34 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %35 = call i8* @gettext(i8* getelementptr inbounds ([195 x i8]* @.str43, i64 0, i64 0)) nounwind
  %36 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %35, %struct.FILE* noalias %34) nounwind
  %37 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %38 = call i8* @gettext(i8* getelementptr inbounds ([271 x i8]* @.str44, i64 0, i64 0)) nounwind
  %39 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %38, %struct.FILE* noalias %37) nounwind
  %40 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %41 = call i8* @gettext(i8* getelementptr inbounds ([318 x i8]* @.str45, i64 0, i64 0)) nounwind
  %42 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %41, %struct.FILE* noalias %40) nounwind
  %43 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %44 = call i8* @gettext(i8* getelementptr inbounds ([280 x i8]* @.str46, i64 0, i64 0)) nounwind
  %45 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %44, %struct.FILE* noalias %43) nounwind
  %46 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %47 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str47, i64 0, i64 0)) nounwind
  %48 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %47, %struct.FILE* noalias %46) nounwind
  %49 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %50 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8]* @.str48, i64 0, i64 0)) nounwind
  %51 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %50, %struct.FILE* noalias %49) nounwind
  %52 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %53 = call i8* @gettext(i8* getelementptr inbounds ([581 x i8]* @.str49, i64 0, i64 0)) nounwind
  %54 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %53, %struct.FILE* noalias %52) nounwind
  %55 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %56 = call i8* @gettext(i8* getelementptr inbounds ([221 x i8]* @.str50, i64 0, i64 0)) nounwind
  %57 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %56, %struct.FILE* noalias %55) nounwind
  %58 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %59 = call i8* @gettext(i8* getelementptr inbounds ([222 x i8]* @.str51, i64 0, i64 0)) nounwind
  %60 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %59, %struct.FILE* noalias %58) nounwind
  %61 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %62 = call i8* @gettext(i8* getelementptr inbounds ([162 x i8]* @.str52, i64 0, i64 0)) nounwind
  %63 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %62, %struct.FILE* noalias %61) nounwind
  call void @emit_ancillary_info(i8* getelementptr inbounds ([3 x i8]* @.str53, i64 0, i64 0)) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %64 = load i32* %status_addr, align 4
  call void @exit(i32 %64) noreturn nounwind
  unreachable
}

declare i8* @gettext(i8*) nounwind

declare i32 @printf(i8* noalias, ...) nounwind

define internal void @emit_mandatory_arg_note() nounwind inlinehint {
entry:
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([75 x i8]* @.str54, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  ret void
}

define internal void @emit_ancillary_info(i8* %program) nounwind inlinehint {
entry:
  %program_addr = alloca i8*, align 8
  %iftmp.32 = alloca i8*
  %node = alloca i8*
  %map_prog = alloca %struct..0infomap*
  %lc_messages = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %program, i8** %program_addr
  %0 = load i8** %program_addr, align 8
  store i8* %0, i8** %node, align 8
  store %struct..0infomap* getelementptr inbounds ([7 x %struct..0infomap]* @infomap.5840, i64 0, i64 0), %struct..0infomap** %map_prog, align 8
  br label %bb1

bb:                                               ; preds = %bb2
  %1 = load %struct..0infomap** %map_prog, align 8
  %2 = getelementptr inbounds %struct..0infomap* %1, i64 1
  store %struct..0infomap* %2, %struct..0infomap** %map_prog, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load %struct..0infomap** %map_prog, align 8
  %4 = getelementptr inbounds %struct..0infomap* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load %struct..0infomap** %map_prog, align 8
  %8 = getelementptr inbounds %struct..0infomap* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8** %program_addr, align 8
  %11 = call i32 @strcmp(i8* %10, i8* %9) nounwind readonly
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load %struct..0infomap** %map_prog, align 8
  %14 = getelementptr inbounds %struct..0infomap* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %17 = load %struct..0infomap** %map_prog, align 8
  %18 = getelementptr inbounds %struct..0infomap* %17, i32 0, i32 1
  %19 = load i8** %18, align 8
  store i8* %19, i8** %node, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %20 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str64, i64 0, i64 0)) nounwind
  %21 = call i32 (i8*, ...)* @printf(i8* noalias %20, i8* getelementptr inbounds ([14 x i8]* @.str65, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str66, i64 0, i64 0)) nounwind
  %22 = call i8* @setlocale(i32 5, i8* null) nounwind
  store i8* %22, i8** %lc_messages, align 8
  %23 = load i8** %lc_messages, align 8
  %24 = icmp ne i8* %23, null
  br i1 %24, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %25 = load i8** %lc_messages, align 8
  %26 = call i32 @strncmp(i8* %25, i8* getelementptr inbounds ([4 x i8]* @.str67, i64 0, i64 0), i64 3) nounwind readonly
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %28 = call i8* @gettext(i8* getelementptr inbounds ([69 x i8]* @.str68, i64 0, i64 0)) nounwind
  %29 = load i8** %program_addr, align 8
  %30 = call i32 (i8*, ...)* @printf(i8* noalias %28, i8* %29) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb5
  %31 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str69, i64 0, i64 0)) nounwind
  %32 = load i8** %program_addr, align 8
  %33 = call i32 (i8*, ...)* @printf(i8* noalias %31, i8* getelementptr inbounds ([39 x i8]* @.str66, i64 0, i64 0), i8* %32) nounwind
  %34 = load i8** %node, align 8
  %35 = load i8** %program_addr, align 8
  %36 = icmp eq i8* %34, %35
  br i1 %36, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i8* getelementptr inbounds ([12 x i8]* @.str70, i64 0, i64 0), i8** %iftmp.32, align 8
  br label %bb11

bb10:                                             ; preds = %bb8
  store i8* getelementptr inbounds ([1 x i8]* @.str71, i64 0, i64 0), i8** %iftmp.32, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %37 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8]* @.str72, i64 0, i64 0)) nounwind
  %38 = load i8** %node, align 8
  %39 = load i8** %iftmp.32, align 8
  %40 = call i32 (i8*, ...)* @printf(i8* noalias %37, i8* %38, i8* %39) nounwind
  ret void
}

define internal zeroext i8 @re_protect(i8* %const_dst_name, i64 %src_offset, %struct.dir_attr* %attr_list, %struct.cp_options* %x) nounwind {
entry:
  %const_dst_name_addr = alloca i8*, align 8
  %src_offset_addr = alloca i64, align 8
  %attr_list_addr = alloca %struct.dir_attr*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %1 = alloca i8*
  %p = alloca %struct.dir_attr*
  %dst_name = alloca i8*
  %src_name = alloca i8*
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %timespec = alloca [2 x %struct.timespec]
  %__x = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %const_dst_name, i8** %const_dst_name_addr
  store i64 %src_offset, i64* %src_offset_addr
  store %struct.dir_attr* %attr_list, %struct.dir_attr** %attr_list_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %2 = load i8** %const_dst_name_addr, align 8
  store i8* %2, i8** %__old, align 8
  %3 = load i8** %__old, align 8
  %4 = call i64 @strlen(i8* %3) nounwind readonly
  %5 = add i64 %4, 1
  store i64 %5, i64* %__len, align 8
  %6 = load i64* %__len, align 8
  %7 = alloca i8, i64 %6, align 1
  store i8* %7, i8** %__new, align 8
  %8 = load i8** %__new, align 8
  %9 = load i8** %__old, align 8
  %10 = load i64* %__len, align 8
  %11 = call i8* @memcpy(i8* %8, i8* %9, i64 %10)
  store i8* %8, i8** %1, align 8
  %12 = load i8** %1, align 8
  store i8* %12, i8** %dst_name, align 8
  %13 = load i8** %dst_name, align 8
  %14 = load i64* %src_offset_addr, align 8
  %15 = getelementptr inbounds i8* %13, i64 %14
  store i8* %15, i8** %src_name, align 8
  %16 = load %struct.dir_attr** %attr_list_addr, align 8
  store %struct.dir_attr* %16, %struct.dir_attr** %p, align 8
  br label %bb30

bb:                                               ; preds = %bb30
  %17 = load %struct.dir_attr** %p, align 8
  %18 = getelementptr inbounds %struct.dir_attr* %17, i32 0, i32 2
  %19 = load i64* %18, align 8
  %20 = load i8** %dst_name, align 8
  %21 = getelementptr inbounds i8* %20, i64 %19
  store i8 0, i8* %21, align 1
  %22 = load %struct.cp_options** %x_addr, align 8
  %23 = getelementptr inbounds %struct.cp_options* %22, i32 0, i32 15
  %24 = load i8* %23, align 2
  %toBool = icmp ne i8 %24, 0
  br i1 %toBool, label %bb1, label %bb10

bb1:                                              ; preds = %bb
  %25 = load %struct.dir_attr** %p, align 8
  %26 = getelementptr inbounds %struct.dir_attr* %25, i32 0, i32 0
  %27 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 0
  %28 = call %struct.timespec @get_stat_atime(%struct.stat* %26) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %27, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %28, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep2 = getelementptr inbounds %struct.timespec* %27, i32 0, i32 1
  %mrv_gr3 = extractvalue %struct.timespec %28, 1
  store i64 %mrv_gr3, i64* %mrv_gep2
  %29 = load %struct.dir_attr** %p, align 8
  %30 = getelementptr inbounds %struct.dir_attr* %29, i32 0, i32 0
  %31 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %32 = call %struct.timespec @get_stat_mtime(%struct.stat* %30) nounwind readonly
  %mrv_gep4 = getelementptr inbounds %struct.timespec* %31, i32 0, i32 0
  %mrv_gr5 = extractvalue %struct.timespec %32, 0
  store i64 %mrv_gr5, i64* %mrv_gep4
  %mrv_gep6 = getelementptr inbounds %struct.timespec* %31, i32 0, i32 1
  %mrv_gr7 = extractvalue %struct.timespec %32, 1
  store i64 %mrv_gr7, i64* %mrv_gep6
  %33 = load i8** %dst_name, align 8
  %timespec8 = bitcast [2 x %struct.timespec]* %timespec to %struct.timespec*
  %34 = call i32 @utimens(i8* %33, %struct.timespec* %timespec8) nounwind
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %bb9, label %bb10

bb9:                                              ; preds = %bb1
  %36 = load i8** %dst_name, align 8
  %37 = call i8* @quotearg_style(i32 4, i8* %36) nounwind
  %38 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8]* @.str73, i64 0, i64 0)) nounwind
  %39 = call i32* @__errno_location() nounwind readnone
  %40 = load i32* %39, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %40, i8* %38, i8* %37) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

bb10:                                             ; preds = %bb1, %bb
  %41 = load %struct.cp_options** %x_addr, align 8
  %42 = getelementptr inbounds %struct.cp_options* %41, i32 0, i32 13
  %43 = load i8* %42, align 4
  %toBool11 = icmp ne i8 %43, 0
  br i1 %toBool11, label %bb12, label %bb20

bb12:                                             ; preds = %bb10
  %44 = load %struct.dir_attr** %p, align 8
  %45 = getelementptr inbounds %struct.dir_attr* %44, i32 0, i32 0
  %46 = getelementptr inbounds %struct.stat* %45, i32 0, i32 5
  %47 = load i32* %46, align 8
  %48 = load %struct.dir_attr** %p, align 8
  %49 = getelementptr inbounds %struct.dir_attr* %48, i32 0, i32 0
  %50 = getelementptr inbounds %struct.stat* %49, i32 0, i32 4
  %51 = load i32* %50, align 4
  %52 = load i8** %dst_name, align 8
  %53 = call i32 @lchown(i8* %52, i32 %51, i32 %47) nounwind
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %bb13, label %bb20

bb13:                                             ; preds = %bb12
  %55 = load %struct.cp_options** %x_addr, align 8
  %56 = call zeroext i8 @chown_failure_ok(%struct.cp_options* %55) nounwind readonly
  %toBool14 = icmp ne i8 %56, 0
  %toBool14not = xor i1 %toBool14, true
  %toBool14not15 = zext i1 %toBool14not to i8
  %toBool17 = icmp ne i8 %toBool14not15, 0
  br i1 %toBool17, label %bb18, label %bb19

bb18:                                             ; preds = %bb13
  %57 = load i8** %dst_name, align 8
  %58 = call i8* @quotearg_style(i32 4, i8* %57) nounwind
  %59 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str74, i64 0, i64 0)) nounwind
  %60 = call i32* @__errno_location() nounwind readnone
  %61 = load i32* %60, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %61, i8* %59, i8* %58) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

bb19:                                             ; preds = %bb13
  %62 = load %struct.dir_attr** %p, align 8
  %63 = getelementptr inbounds %struct.dir_attr* %62, i32 0, i32 0
  %64 = getelementptr inbounds %struct.stat* %63, i32 0, i32 5
  %65 = load i32* %64, align 8
  %66 = load i8** %dst_name, align 8
  %67 = call i32 @lchown(i8* %66, i32 -1, i32 %65) nounwind
  store i32 %67, i32* %__x, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb12, %bb10
  %68 = load %struct.cp_options** %x_addr, align 8
  %69 = getelementptr inbounds %struct.cp_options* %68, i32 0, i32 14
  %70 = load i8* %69, align 1
  %toBool21 = icmp ne i8 %70, 0
  %71 = load %struct.dir_attr** %p, align 8
  br i1 %toBool21, label %bb22, label %bb25

bb22:                                             ; preds = %bb20
  %72 = getelementptr inbounds %struct.dir_attr* %71, i32 0, i32 0
  %73 = getelementptr inbounds %struct.stat* %72, i32 0, i32 3
  %74 = load i32* %73, align 8
  %75 = load i8** %src_name, align 8
  %76 = load i8** %dst_name, align 8
  %77 = call i32 @copy_acl(i8* %75, i32 -1, i8* %76, i32 -1, i32 %74) nounwind
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %bb23, label %bb29

bb23:                                             ; preds = %bb22
  store i32 0, i32* %0, align 4
  br label %bb32

bb25:                                             ; preds = %bb20
  %79 = getelementptr inbounds %struct.dir_attr* %71, i32 0, i32 1
  %80 = load i8* %79, align 8
  %toBool26 = icmp ne i8 %80, 0
  br i1 %toBool26, label %bb27, label %bb29

bb27:                                             ; preds = %bb25
  %81 = load %struct.dir_attr** %p, align 8
  %82 = getelementptr inbounds %struct.dir_attr* %81, i32 0, i32 0
  %83 = getelementptr inbounds %struct.stat* %82, i32 0, i32 3
  %84 = load i32* %83, align 8
  %85 = load i8** %dst_name, align 8
  %86 = call i32 @chmod(i8* %85, i32 %84) nounwind
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %88 = load i8** %dst_name, align 8
  %89 = call i8* @quotearg_style(i32 4, i8* %88) nounwind
  %90 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8]* @.str75, i64 0, i64 0)) nounwind
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %91, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %92, i8* %90, i8* %89) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

bb29:                                             ; preds = %bb22, %bb27, %bb25
  %93 = load %struct.dir_attr** %p, align 8
  %94 = getelementptr inbounds %struct.dir_attr* %93, i32 0, i32 2
  %95 = load i64* %94, align 8
  %96 = load i8** %dst_name, align 8
  %97 = getelementptr inbounds i8* %96, i64 %95
  store i8 47, i8* %97, align 1
  %98 = load %struct.dir_attr** %p, align 8
  %99 = getelementptr inbounds %struct.dir_attr* %98, i32 0, i32 3
  %100 = load %struct.dir_attr** %99, align 8
  store %struct.dir_attr* %100, %struct.dir_attr** %p, align 8
  br label %bb30

bb30:                                             ; preds = %bb29, %entry
  %101 = load %struct.dir_attr** %p, align 8
  %102 = icmp ne %struct.dir_attr* %101, null
  br i1 %102, label %bb, label %bb31

bb31:                                             ; preds = %bb30
  store i32 1, i32* %0, align 4
  br label %bb32

bb32:                                             ; preds = %bb31, %bb28, %bb23, %bb18, %bb9
  %103 = load i32* %0, align 4
  store i32 %103, i32* %retval, align 4
  %retval33 = load i32* %retval
  %retval3334 = trunc i32 %retval33 to i8
  ret i8 %retval3334
}

declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define internal zeroext i8 @make_dir_parents_private(i8* %const_dir, i64 %src_offset, i8* %verbose_fmt_string, %struct.dir_attr** %attr_list, i8* %new_dst, %struct.cp_options* %x) nounwind {
entry:
  %const_dir_addr = alloca i8*, align 8
  %src_offset_addr = alloca i64, align 8
  %verbose_fmt_string_addr = alloca i8*, align 8
  %attr_list_addr = alloca %struct.dir_attr**, align 8
  %new_dst_addr = alloca i8*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %iftmp.64 = alloca i64
  %iftmp.63 = alloca i32
  %iftmp.62 = alloca i32
  %0 = alloca i32
  %iftmp.59 = alloca i32
  %iftmp.58 = alloca i32
  %1 = alloca i8*
  %stats = alloca %struct.stat
  %dir = alloca i8*
  %src = alloca i8*
  %dst_dir = alloca i8*
  %dirlen = alloca i64
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %slash = alloca i8*
  %new = alloca %struct.dir_attr*
  %missing_dir = alloca i8
  %src_st = alloca %struct.stat
  %src_errno = alloca i32
  %src_mode = alloca i32
  %omitted_permissions = alloca i32
  %mkdir_mode = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %const_dir, i8** %const_dir_addr
  store i64 %src_offset, i64* %src_offset_addr
  store i8* %verbose_fmt_string, i8** %verbose_fmt_string_addr
  store %struct.dir_attr** %attr_list, %struct.dir_attr*** %attr_list_addr
  store i8* %new_dst, i8** %new_dst_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %2 = load i8** %const_dir_addr, align 8
  store i8* %2, i8** %__old, align 8
  %3 = load i8** %__old, align 8
  %4 = call i64 @strlen(i8* %3) nounwind readonly
  %5 = add i64 %4, 1
  store i64 %5, i64* %__len, align 8
  %6 = load i64* %__len, align 8
  %7 = alloca i8, i64 %6, align 1
  store i8* %7, i8** %__new, align 8
  %8 = load i8** %__new, align 8
  %9 = load i8** %__old, align 8
  %10 = load i64* %__len, align 8
  %11 = call i8* @memcpy(i8* %8, i8* %9, i64 %10)
  store i8* %8, i8** %1, align 8
  %12 = load i8** %1, align 8
  store i8* %12, i8** %dir, align 8
  %13 = load i8** %dir, align 8
  %14 = load i64* %src_offset_addr, align 8
  %15 = getelementptr inbounds i8* %13, i64 %14
  store i8* %15, i8** %src, align 8
  %16 = load i8** %dir, align 8
  %17 = call i64 @dir_len(i8* %16) nounwind readonly
  store i64 %17, i64* %dirlen, align 8
  %18 = load i64* %dirlen, align 8
  %19 = add i64 %18, 1
  %20 = alloca i8, i64 %19, align 1
  store i8* %20, i8** %dst_dir, align 8
  %21 = load i8** %dst_dir, align 8
  %22 = load i8** %dir, align 8
  %23 = load i64* %dirlen, align 8
  %24 = call i8* @memcpy(i8* %21, i8* %22, i64 %23)
  %25 = load i8** %dst_dir, align 8
  %26 = load i64* %dirlen, align 8
  %27 = getelementptr inbounds i8* %25, i64 %26
  store i8 0, i8* %27, align 1
  %28 = load %struct.dir_attr*** %attr_list_addr, align 8
  store %struct.dir_attr* null, %struct.dir_attr** %28, align 8
  %29 = load i8** %dst_dir, align 8
  %30 = call i32 @stat(i8* noalias %29, %struct.stat* noalias %stats) nounwind
  %31 = icmp ne i32 %30, 0
  br i1 %31, label %bb, label %bb72

bb:                                               ; preds = %entry
  %32 = load i8** %src, align 8
  store i8* %32, i8** %slash, align 8
  br label %bb2

bb1:                                              ; preds = %bb2
  %33 = load i8** %slash, align 8
  %34 = getelementptr inbounds i8* %33, i64 1
  store i8* %34, i8** %slash, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %35 = load i8** %slash, align 8
  %36 = load i8* %35, align 1
  %37 = icmp eq i8 %36, 47
  br i1 %37, label %bb1, label %bb70

bb4:                                              ; preds = %bb70
  %38 = load i8** %slash, align 8
  store i8 0, i8* %38, align 1
  %39 = load i8** %dir, align 8
  %40 = call i32 @stat(i8* noalias %39, %struct.stat* noalias %stats) nounwind
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %missing_dir, align 1
  %43 = load i8* %missing_dir, align 1
  %toBool = icmp ne i8 %43, 0
  br i1 %toBool, label %bb11, label %bb5

bb5:                                              ; preds = %bb4
  %44 = load %struct.cp_options** %x_addr, align 8
  %45 = getelementptr inbounds %struct.cp_options* %44, i32 0, i32 13
  %46 = load i8* %45, align 4
  %toBool6 = icmp ne i8 %46, 0
  br i1 %toBool6, label %bb11, label %bb7

bb7:                                              ; preds = %bb5
  %47 = load %struct.cp_options** %x_addr, align 8
  %48 = getelementptr inbounds %struct.cp_options* %47, i32 0, i32 14
  %49 = load i8* %48, align 1
  %toBool8 = icmp ne i8 %49, 0
  br i1 %toBool8, label %bb11, label %bb9

bb9:                                              ; preds = %bb7
  %50 = load %struct.cp_options** %x_addr, align 8
  %51 = getelementptr inbounds %struct.cp_options* %50, i32 0, i32 15
  %52 = load i8* %51, align 2
  %toBool10 = icmp ne i8 %52, 0
  br i1 %toBool10, label %bb11, label %bb21

bb11:                                             ; preds = %bb9, %bb7, %bb5, %bb4
  %53 = load i8** %src, align 8
  %54 = call i32 @stat(i8* noalias %53, %struct.stat* noalias %src_st) nounwind
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %56 = call i32* @__errno_location() nounwind readnone
  %57 = load i32* %56, align 4
  store i32 %57, i32* %iftmp.58, align 4
  br label %bb17

bb13:                                             ; preds = %bb11
  %58 = getelementptr inbounds %struct.stat* %src_st, i32 0, i32 3
  %59 = load i32* %58, align 8
  %60 = and i32 %59, 61440
  %61 = icmp eq i32 %60, 16384
  br i1 %61, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.59, align 4
  br label %bb16

bb15:                                             ; preds = %bb13
  store i32 20, i32* %iftmp.59, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %62 = load i32* %iftmp.59, align 4
  store i32 %62, i32* %iftmp.58, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb12
  %63 = load i32* %iftmp.58, align 4
  store i32 %63, i32* %src_errno, align 4
  %64 = load i32* %src_errno, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %66 = load i8** %src, align 8
  %67 = call i8* @quotearg_style(i32 4, i8* %66) nounwind
  %68 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str76, i64 0, i64 0)) nounwind
  %69 = load i32* %src_errno, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %69, i8* %68, i8* %67) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb19:                                             ; preds = %bb17
  %70 = call noalias i8* @xmalloc(i64 168) nounwind
  %71 = bitcast i8* %70 to %struct.dir_attr*
  store %struct.dir_attr* %71, %struct.dir_attr** %new, align 8
  %72 = load %struct.dir_attr** %new, align 8
  %73 = getelementptr inbounds %struct.dir_attr* %72, i32 0, i32 0
  %74 = bitcast %struct.stat* %73 to i8*
  %src_st20 = bitcast %struct.stat* %src_st to i8*
  %75 = call i8* @memcpy(i8* %74, i8* %src_st20, i64 144)
  %76 = load i8** %slash, align 8
  %77 = ptrtoint i8* %76 to i64
  %78 = load i8** %dir, align 8
  %79 = ptrtoint i8* %78 to i64
  %80 = sub nsw i64 %77, %79
  %81 = load %struct.dir_attr** %new, align 8
  %82 = getelementptr inbounds %struct.dir_attr* %81, i32 0, i32 2
  store i64 %80, i64* %82, align 8
  %83 = load %struct.dir_attr** %new, align 8
  %84 = getelementptr inbounds %struct.dir_attr* %83, i32 0, i32 1
  store i8 0, i8* %84, align 8
  %85 = load %struct.dir_attr*** %attr_list_addr, align 8
  %86 = load %struct.dir_attr** %85, align 8
  %87 = load %struct.dir_attr** %new, align 8
  %88 = getelementptr inbounds %struct.dir_attr* %87, i32 0, i32 3
  store %struct.dir_attr* %86, %struct.dir_attr** %88, align 8
  %89 = load %struct.dir_attr*** %attr_list_addr, align 8
  %90 = load %struct.dir_attr** %new, align 8
  store %struct.dir_attr* %90, %struct.dir_attr** %89, align 8
  br label %bb21

bb21:                                             ; preds = %bb19, %bb9
  %91 = load i8* %missing_dir, align 1
  %toBool22 = icmp ne i8 %91, 0
  br i1 %toBool22, label %bb23, label %bb64

bb23:                                             ; preds = %bb21
  %92 = load i8** %new_dst_addr, align 8
  store i8 1, i8* %92, align 1
  %93 = load %struct.dir_attr** %new, align 8
  %94 = getelementptr inbounds %struct.dir_attr* %93, i32 0, i32 0
  %95 = getelementptr inbounds %struct.stat* %94, i32 0, i32 3
  %96 = load i32* %95, align 8
  store i32 %96, i32* %src_mode, align 4
  %97 = load %struct.cp_options** %x_addr, align 8
  %98 = getelementptr inbounds %struct.cp_options* %97, i32 0, i32 13
  %99 = load i8* %98, align 4
  %toBool24 = icmp ne i8 %99, 0
  br i1 %toBool24, label %bb25, label %bb26

bb25:                                             ; preds = %bb23
  store i32 63, i32* %iftmp.62, align 4
  br label %bb31

bb26:                                             ; preds = %bb23
  %100 = load %struct.cp_options** %x_addr, align 8
  %101 = getelementptr inbounds %struct.cp_options* %100, i32 0, i32 14
  %102 = load i8* %101, align 1
  %toBool27 = icmp ne i8 %102, 0
  br i1 %toBool27, label %bb28, label %bb29

bb28:                                             ; preds = %bb26
  store i32 18, i32* %iftmp.63, align 4
  br label %bb30

bb29:                                             ; preds = %bb26
  store i32 0, i32* %iftmp.63, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %103 = load i32* %iftmp.63, align 4
  store i32 %103, i32* %iftmp.62, align 4
  br label %bb31

bb31:                                             ; preds = %bb30, %bb25
  %104 = load i32* %iftmp.62, align 4
  %105 = load i32* %src_mode, align 4
  %106 = and i32 %104, %105
  store i32 %106, i32* %omitted_permissions, align 4
  %107 = load %struct.cp_options** %x_addr, align 8
  %108 = getelementptr inbounds %struct.cp_options* %107, i32 0, i32 16
  %109 = load i8* %108, align 1
  %toBool32 = icmp ne i8 %109, 0
  br i1 %toBool32, label %bb33, label %bb34

bb33:                                             ; preds = %bb31
  store i64 511, i64* %iftmp.64, align 8
  br label %bb35

bb34:                                             ; preds = %bb31
  %110 = load i32* %src_mode, align 4
  %111 = zext i32 %110 to i64
  store i64 %111, i64* %iftmp.64, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %112 = load i32* %omitted_permissions, align 4
  %not = xor i32 %112, -1
  %113 = load i32* %src_mode, align 4
  %114 = and i32 %not, %113
  %115 = zext i32 %114 to i64
  %116 = and i64 %115, 4095
  %117 = load i64* %iftmp.64, align 8
  %118 = call i64 @klee_change(i64 %116, i64 %117) nounwind noinline
  %119 = trunc i64 %118 to i32
  store i32 %119, i32* %mkdir_mode, align 4
  %120 = load i32* %omitted_permissions, align 4
  %not37 = xor i32 %120, -1
  %121 = load i32* %mkdir_mode, align 4
  %122 = and i32 %not37, %121
  %123 = zext i32 %122 to i64
  %124 = and i64 %123, 4095
  %125 = load i32* %mkdir_mode, align 4
  %126 = zext i32 %125 to i64
  %127 = call i64 @klee_change(i64 %126, i64 %124) nounwind noinline
  %128 = trunc i64 %127 to i32
  store i32 %128, i32* %mkdir_mode, align 4
  %129 = load i8** %dir, align 8
  %130 = load i32* %mkdir_mode, align 4
  %131 = call i32 @mkdir(i8* %129, i32 %130) nounwind
  %132 = icmp ne i32 %131, 0
  br i1 %132, label %bb39, label %bb40

bb39:                                             ; preds = %bb35
  %133 = load i8** %dir, align 8
  %134 = call i8* @quotearg_style(i32 4, i8* %133) nounwind
  %135 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8]* @.str77, i64 0, i64 0)) nounwind
  %136 = call i32* @__errno_location() nounwind readnone
  %137 = load i32* %136, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %137, i8* %135, i8* %134) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb40:                                             ; preds = %bb35
  %138 = load i8** %verbose_fmt_string_addr, align 8
  %139 = icmp ne i8* %138, null
  br i1 %139, label %bb41, label %bb42

bb41:                                             ; preds = %bb40
  %140 = load i8** %verbose_fmt_string_addr, align 8
  %141 = load i8** %src, align 8
  %142 = load i8** %dir, align 8
  %143 = call i32 (i8*, ...)* @printf(i8* noalias %140, i8* %141, i8* %142) nounwind
  br label %bb42

bb42:                                             ; preds = %bb41, %bb40
  %144 = load i8** %dir, align 8
  %145 = call i32 @lstat(i8* noalias %144, %struct.stat* noalias %stats) nounwind
  %146 = icmp ne i32 %145, 0
  br i1 %146, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
  %147 = load i8** %dir, align 8
  %148 = call i8* @quotearg_style(i32 4, i8* %147) nounwind
  %149 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str76, i64 0, i64 0)) nounwind
  %150 = call i32* @__errno_location() nounwind readnone
  %151 = load i32* %150, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %151, i8* %149, i8* %148) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb44:                                             ; preds = %bb42
  %152 = load %struct.cp_options** %x_addr, align 8
  %153 = getelementptr inbounds %struct.cp_options* %152, i32 0, i32 14
  %154 = load i8* %153, align 1
  %toBool45 = icmp ne i8 %154, 0
  %toBool45not = xor i1 %toBool45, true
  %toBool45not46 = zext i1 %toBool45not to i8
  %toBool48 = icmp ne i8 %toBool45not46, 0
  br i1 %toBool48, label %bb49, label %bb60

bb49:                                             ; preds = %bb44
  %155 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %156 = load i32* %155, align 8
  %not50 = xor i32 %156, -1
  %157 = load i32* %omitted_permissions, align 4
  %158 = and i32 %not50, %157
  %159 = icmp ne i32 %158, 0
  br i1 %159, label %bb52, label %bb55

bb52:                                             ; preds = %bb49
  %160 = call i32 @cached_umask() nounwind
  %not53 = xor i32 %160, -1
  %161 = load i32* %omitted_permissions, align 4
  %162 = and i32 %not53, %161
  store i32 %162, i32* %omitted_permissions, align 4
  br label %bb55

bb55:                                             ; preds = %bb52, %bb49
  %163 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %164 = load i32* %163, align 8
  %not56 = xor i32 %164, -1
  %165 = load i32* %omitted_permissions, align 4
  %166 = and i32 %not56, %165
  %167 = icmp ne i32 %166, 0
  br i1 %167, label %bb59, label %bb58

bb58:                                             ; preds = %bb55
  %168 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %169 = load i32* %168, align 8
  %170 = and i32 %169, 448
  %171 = icmp ne i32 %170, 448
  br i1 %171, label %bb59, label %bb60

bb59:                                             ; preds = %bb58, %bb55
  %172 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %173 = load i32* %172, align 8
  %174 = load i32* %omitted_permissions, align 4
  %175 = or i32 %173, %174
  %176 = load %struct.dir_attr** %new, align 8
  %177 = getelementptr inbounds %struct.dir_attr* %176, i32 0, i32 0
  %178 = getelementptr inbounds %struct.stat* %177, i32 0, i32 3
  store i32 %175, i32* %178, align 8
  %179 = load %struct.dir_attr** %new, align 8
  %180 = getelementptr inbounds %struct.dir_attr* %179, i32 0, i32 1
  store i8 1, i8* %180, align 8
  br label %bb60

bb60:                                             ; preds = %bb59, %bb58, %bb44
  %181 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %182 = load i32* %181, align 8
  %183 = and i32 %182, 448
  %184 = icmp ne i32 %183, 448
  br i1 %184, label %bb61, label %bb67

bb61:                                             ; preds = %bb60
  %185 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %186 = load i32* %185, align 8
  %187 = or i32 %186, 448
  %188 = load i8** %dir, align 8
  %189 = call i32 @chmod(i8* %188, i32 %187) nounwind
  %190 = icmp ne i32 %189, 0
  br i1 %190, label %bb62, label %bb67

bb62:                                             ; preds = %bb61
  %191 = load i8** %dir, align 8
  %192 = call i8* @quotearg_style(i32 4, i8* %191) nounwind
  %193 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str78, i64 0, i64 0)) nounwind
  %194 = call i32* @__errno_location() nounwind readnone
  %195 = load i32* %194, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %195, i8* %193, i8* %192) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb64:                                             ; preds = %bb21
  %196 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %197 = load i32* %196, align 8
  %198 = and i32 %197, 61440
  %199 = icmp ne i32 %198, 16384
  br i1 %199, label %bb65, label %bb66

bb65:                                             ; preds = %bb64
  %200 = load i8** %dir, align 8
  %201 = call i8* @quotearg_style(i32 4, i8* %200) nounwind
  %202 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8]* @.str79, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %202, i8* %201) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb66:                                             ; preds = %bb64
  %203 = load i8** %new_dst_addr, align 8
  store i8 0, i8* %203, align 1
  br label %bb67

bb67:                                             ; preds = %bb60, %bb61, %bb66
  %204 = load i8** %slash, align 8
  store i8 47, i8* %204, align 1
  %205 = load i8** %slash, align 8
  %206 = getelementptr inbounds i8* %205, i64 1
  store i8* %206, i8** %slash, align 8
  br label %bb69

bb68:                                             ; preds = %bb69
  %207 = load i8** %slash, align 8
  %208 = getelementptr inbounds i8* %207, i64 1
  store i8* %208, i8** %slash, align 8
  br label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %209 = load i8** %slash, align 8
  %210 = load i8* %209, align 1
  %211 = icmp eq i8 %210, 47
  br i1 %211, label %bb68, label %bb70

bb70:                                             ; preds = %bb2, %bb69
  %212 = load i8** %slash, align 8
  %213 = call i8* @strchr(i8* %212, i32 47) nounwind readonly
  store i8* %213, i8** %slash, align 8
  %214 = load i8** %slash, align 8
  %215 = icmp ne i8* %214, null
  br i1 %215, label %bb4, label %bb75

bb72:                                             ; preds = %entry
  %216 = getelementptr inbounds %struct.stat* %stats, i32 0, i32 3
  %217 = load i32* %216, align 8
  %218 = and i32 %217, 61440
  %219 = icmp ne i32 %218, 16384
  br i1 %219, label %bb73, label %bb74

bb73:                                             ; preds = %bb72
  %220 = load i8** %dst_dir, align 8
  %221 = call i8* @quotearg_style(i32 4, i8* %220) nounwind
  %222 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8]* @.str79, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %222, i8* %221) nounwind
  store i32 0, i32* %0, align 4
  br label %bb76

bb74:                                             ; preds = %bb72
  %223 = load i8** %new_dst_addr, align 8
  store i8 0, i8* %223, align 1
  br label %bb75

bb75:                                             ; preds = %bb70, %bb74
  store i32 1, i32* %0, align 4
  br label %bb76

bb76:                                             ; preds = %bb75, %bb73, %bb65, %bb62, %bb43, %bb39, %bb18
  %224 = load i32* %0, align 4
  store i32 %224, i32* %retval, align 4
  %retval77 = load i32* %retval
  %retval7778 = trunc i32 %retval77 to i8
  ret i8 %retval7778
}

declare i32 @mkdir(i8*, i32) nounwind

define internal zeroext i8 @target_directory_operand(i8* %file, %struct.stat* %st, i8* %new_dst) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %st_addr = alloca %struct.stat*, align 8
  %new_dst_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.67 = alloca i32
  %iftmp.66 = alloca i32
  %err = alloca i32
  %is_a_dir = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.stat* %st, %struct.stat** %st_addr
  store i8* %new_dst, i8** %new_dst_addr
  %1 = load i8** %file_addr, align 8
  %2 = load %struct.stat** %st_addr, align 8
  %3 = call i32 @stat(i8* noalias %1, %struct.stat* noalias %2) nounwind
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %iftmp.66, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %iftmp.66, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i32* %iftmp.66, align 4
  store i32 %7, i32* %err, align 4
  %8 = load i32* %err, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %10 = load %struct.stat** %st_addr, align 8
  %11 = getelementptr inbounds %struct.stat* %10, i32 0, i32 3
  %12 = load i32* %11, align 8
  %13 = and i32 %12, 61440
  %14 = icmp ne i32 %13, 16384
  br i1 %14, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  store i32 1, i32* %iftmp.67, align 4
  br label %bb6

bb5:                                              ; preds = %bb3, %bb2
  store i32 0, i32* %iftmp.67, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %15 = load i32* %iftmp.67, align 4
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %is_a_dir, align 1
  %17 = load i32* %err, align 4
  %18 = icmp ne i32 %17, 0
  br i1 %18, label %bb7, label %bb10

bb7:                                              ; preds = %bb6
  %19 = load i32* %err, align 4
  %20 = icmp ne i32 %19, 2
  br i1 %20, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %21 = load i8** %file_addr, align 8
  %22 = call i8* @quotearg_style(i32 4, i8* %21) nounwind
  %23 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str80, i64 0, i64 0)) nounwind
  %24 = load i32* %err, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %24, i8* %23, i8* %22) nounwind
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %25 = load i8** %new_dst_addr, align 8
  store i8 1, i8* %25, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb6
  %26 = load i8* %is_a_dir, align 1
  %27 = zext i8 %26 to i32
  store i32 %27, i32* %0, align 4
  %28 = load i32* %0, align 4
  store i32 %28, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define internal zeroext i8 @do_copy(i32 %n_files, i8** %file, i8* %target_directory, i8 zeroext %no_target_directory, %struct.cp_options* %x) nounwind {
entry:
  %n_files_addr = alloca i32, align 4
  %file_addr = alloca i8**, align 8
  %target_directory_addr = alloca i8*, align 8
  %no_target_directory_addr = alloca i8, align 1
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.74 = alloca i8*
  %1 = alloca i8*
  %iftmp.70 = alloca i8*
  %2 = alloca i8*
  %sb = alloca %struct.stat
  %new_dst = alloca i8
  %ok = alloca i8
  %__x = alloca i8
  %i = alloca i32
  %dst_name = alloca i8*
  %parent_exists = alloca i8
  %attr_list = alloca %struct.dir_attr*
  %arg_in_concat = alloca i8*
  %arg = alloca i8*
  %arg_no_trailing_slash = alloca i8*
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %arg_base = alloca i8*
  %tmp_abns_ = alloca i8*
  %__old35 = alloca i8*
  %__len36 = alloca i64
  %__new37 = alloca i8*
  %copy_into_self = alloca i8
  %p = alloca %struct.dir_attr*
  %new_dest = alloca i8*
  %source = alloca i8*
  %dest = alloca i8*
  %unused = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n_files, i32* %n_files_addr
  store i8** %file, i8*** %file_addr
  store i8* %target_directory, i8** %target_directory_addr
  store i8 %no_target_directory, i8* %no_target_directory_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8 0, i8* %new_dst, align 1
  store i8 1, i8* %ok, align 1
  %3 = load i8** %target_directory_addr, align 8
  %4 = icmp eq i8* %3, null
  %5 = zext i1 %4 to i32
  %6 = load i32* %n_files_addr, align 4
  %7 = icmp sge i32 %5, %6
  br i1 %7, label %bb, label %bb4

bb:                                               ; preds = %entry
  %8 = load i32* %n_files_addr, align 4
  %9 = icmp sle i32 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str81, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %10) nounwind
  br label %bb3

bb2:                                              ; preds = %bb
  %11 = load i8*** %file_addr, align 8
  %12 = getelementptr inbounds i8** %11, i64 0
  %13 = load i8** %12, align 1
  %14 = call i8* @quotearg_style(i32 4, i8* %13) nounwind
  %15 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8]* @.str82, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %15, i8* %14) nounwind
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb4:                                              ; preds = %entry
  %16 = load i8* %no_target_directory_addr, align 1
  %toBool = icmp ne i8 %16, 0
  %17 = load i8** %target_directory_addr, align 8
  br i1 %toBool, label %bb5, label %bb10

bb5:                                              ; preds = %bb4
  %18 = icmp ne i8* %17, null
  br i1 %18, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %19 = call i8* @gettext(i8* getelementptr inbounds ([70 x i8]* @.str83, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %19) nounwind
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %20 = load i32* %n_files_addr, align 4
  %21 = icmp sgt i32 %20, 2
  br i1 %21, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %22 = load i8*** %file_addr, align 8
  %23 = getelementptr inbounds i8** %22, i64 2
  %24 = load i8** %23, align 1
  %25 = call i8* @quotearg_style(i32 4, i8* %24) nounwind
  %26 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str84, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %26, i8* %25) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb7
  %27 = load i32* %n_files_addr, align 4
  %28 = sub nsw i32 %27, 1
  %29 = load i8*** %file_addr, align 8
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds i8** %29, i64 %30
  %32 = load i8** %31, align 1
  %33 = call zeroext i8 @target_directory_operand(i8* %32, %struct.stat* %sb, i8* %new_dst) nounwind
  store i8 %33, i8* %__x, align 1
  br label %bb20

bb10:                                             ; preds = %bb4
  %34 = icmp eq i8* %17, null
  br i1 %34, label %bb11, label %bb20

bb11:                                             ; preds = %bb10
  %35 = load i32* %n_files_addr, align 4
  %36 = icmp sle i32 %35, 1
  br i1 %36, label %bb18, label %bb12

bb12:                                             ; preds = %bb11
  %37 = load i32* %n_files_addr, align 4
  %38 = sub nsw i32 %37, 1
  %39 = load i8*** %file_addr, align 8
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds i8** %39, i64 %40
  %42 = load i8** %41, align 1
  %43 = call zeroext i8 @target_directory_operand(i8* %42, %struct.stat* %sb, i8* %new_dst) nounwind
  %toBool13 = icmp ne i8 %43, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb18, label %bb17

bb17:                                             ; preds = %bb12
  %44 = load i32* %n_files_addr, align 4
  %45 = sub nsw i32 %44, 1
  store i32 %45, i32* %n_files_addr, align 4
  %46 = load i8*** %file_addr, align 8
  %47 = load i32* %n_files_addr, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8** %46, i64 %48
  %50 = load i8** %49, align 1
  store i8* %50, i8** %target_directory_addr, align 8
  br label %bb20

bb18:                                             ; preds = %bb12, %bb11
  %51 = load i32* %n_files_addr, align 4
  %52 = icmp sgt i32 %51, 2
  br i1 %52, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %53 = load i32* %n_files_addr, align 4
  %54 = sub nsw i32 %53, 1
  %55 = load i8*** %file_addr, align 8
  %56 = sext i32 %54 to i64
  %57 = getelementptr inbounds i8** %55, i64 %56
  %58 = load i8** %57, align 1
  %59 = call i8* @quotearg_style(i32 4, i8* %58) nounwind
  %60 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %60, i8* %59) nounwind
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18, %bb17, %bb10, %bb9
  %61 = load i8** %target_directory_addr, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %bb21, label %bb58

bb21:                                             ; preds = %bb20
  %63 = load i32* %n_files_addr, align 4
  %64 = icmp sgt i32 %63, 1
  br i1 %64, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %65 = load %struct.cp_options** %x_addr, align 8
  call void @dest_info_init(%struct.cp_options* %65) nounwind
  %66 = load %struct.cp_options** %x_addr, align 8
  call void @src_info_init(%struct.cp_options* %66) nounwind
  br label %bb23

bb23:                                             ; preds = %bb22, %bb21
  store i32 0, i32* %i, align 4
  br label %bb56

bb24:                                             ; preds = %bb56
  store i8 1, i8* %parent_exists, align 1
  store i8* null, i8** %arg_in_concat, align 8
  %67 = load i8*** %file_addr, align 8
  %68 = load i32* %i, align 4
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8** %67, i64 %69
  %71 = load i8** %70, align 1
  store i8* %71, i8** %arg, align 8
  %72 = load i8* @remove_trailing_slashes, align 1
  %toBool25 = icmp ne i8 %72, 0
  br i1 %toBool25, label %bb26, label %bb27

bb26:                                             ; preds = %bb24
  %73 = load i8** %arg, align 8
  %74 = call zeroext i8 @strip_trailing_slashes(i8* %73) nounwind
  br label %bb27

bb27:                                             ; preds = %bb26, %bb24
  %75 = load i8* @parents_option, align 1
  %toBool28 = icmp ne i8 %75, 0
  %76 = load i8** %arg, align 8
  br i1 %toBool28, label %bb29, label %bb34

bb29:                                             ; preds = %bb27
  store i8* %76, i8** %__old, align 8
  %77 = load i8** %__old, align 8
  %78 = call i64 @strlen(i8* %77) nounwind readonly
  %79 = add i64 %78, 1
  store i64 %79, i64* %__len, align 8
  %80 = load i64* %__len, align 8
  %81 = alloca i8, i64 %80, align 1
  store i8* %81, i8** %__new, align 8
  %82 = load i8** %__new, align 8
  %83 = load i8** %__old, align 8
  %84 = load i64* %__len, align 8
  %85 = call i8* @memcpy(i8* %82, i8* %83, i64 %84)
  store i8* %82, i8** %2, align 8
  %86 = load i8** %2, align 8
  store i8* %86, i8** %arg_no_trailing_slash, align 8
  %87 = load i8** %arg_no_trailing_slash, align 8
  %88 = call zeroext i8 @strip_trailing_slashes(i8* %87) nounwind
  %89 = load i8** %target_directory_addr, align 8
  %90 = load i8** %arg_no_trailing_slash, align 8
  %91 = call i8* @file_name_concat(i8* %89, i8* %90, i8** %arg_in_concat) nounwind
  store i8* %91, i8** %dst_name, align 8
  %92 = load %struct.cp_options** %x_addr, align 8
  %93 = getelementptr inbounds %struct.cp_options* %92, i32 0, i32 30
  %94 = load i8* %93, align 1
  %toBool30 = icmp ne i8 %94, 0
  br i1 %toBool30, label %bb31, label %bb32

bb31:                                             ; preds = %bb29
  store i8* getelementptr inbounds ([10 x i8]* @.str86, i64 0, i64 0), i8** %iftmp.70, align 8
  br label %bb33

bb32:                                             ; preds = %bb29
  store i8* null, i8** %iftmp.70, align 8
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31
  %95 = load i8** %arg_in_concat, align 8
  %96 = ptrtoint i8* %95 to i64
  %97 = load i8** %dst_name, align 8
  %98 = ptrtoint i8* %97 to i64
  %99 = sub nsw i64 %96, %98
  %100 = load i8** %dst_name, align 8
  %101 = load i8** %iftmp.70, align 8
  %102 = load %struct.cp_options** %x_addr, align 8
  %103 = call zeroext i8 @make_dir_parents_private(i8* %100, i64 %99, i8* %101, %struct.dir_attr** %attr_list, i8* %new_dst, %struct.cp_options* %102) nounwind
  store i8 %103, i8* %parent_exists, align 1
  br label %bb41

bb34:                                             ; preds = %bb27
  store i8* %76, i8** %__old35, align 8
  %104 = load i8** %__old35, align 8
  %105 = call i64 @strlen(i8* %104) nounwind readonly
  %106 = add i64 %105, 1
  store i64 %106, i64* %__len36, align 8
  %107 = load i64* %__len36, align 8
  %108 = alloca i8, i64 %107, align 1
  store i8* %108, i8** %__new37, align 8
  %109 = load i8** %__new37, align 8
  %110 = load i8** %__old35, align 8
  %111 = load i64* %__len36, align 8
  %112 = call i8* @memcpy(i8* %109, i8* %110, i64 %111)
  store i8* %109, i8** %1, align 8
  %113 = load i8** %1, align 8
  store i8* %113, i8** %tmp_abns_, align 8
  %114 = load i8** %tmp_abns_, align 8
  %115 = call i8* @last_component(i8* %114) nounwind readonly
  store i8* %115, i8** %arg_base, align 8
  %116 = load i8** %arg_base, align 8
  %117 = call zeroext i8 @strip_trailing_slashes(i8* %116) nounwind
  %118 = load i8** %arg_base, align 8
  %119 = call i32 @strcmp(i8* %118, i8* getelementptr inbounds ([3 x i8]* @.str87, i64 0, i64 0)) nounwind readonly
  %120 = icmp eq i32 %119, 0
  %121 = load i8** %target_directory_addr, align 8
  br i1 %120, label %bb38, label %bb39

bb38:                                             ; preds = %bb34
  %122 = call noalias i8* @xstrdup(i8* %121) nounwind
  store i8* %122, i8** %iftmp.74, align 8
  br label %bb40

bb39:                                             ; preds = %bb34
  %123 = load i8** %arg_base, align 8
  %124 = call i8* @file_name_concat(i8* %121, i8* %123, i8** null) nounwind
  store i8* %124, i8** %iftmp.74, align 8
  br label %bb40

bb40:                                             ; preds = %bb39, %bb38
  %125 = load i8** %iftmp.74, align 8
  store i8* %125, i8** %dst_name, align 8
  br label %bb41

bb41:                                             ; preds = %bb40, %bb33
  %126 = load i8* %parent_exists, align 1
  %toBool42 = icmp ne i8 %126, 0
  %toBool42not = xor i1 %toBool42, true
  %toBool42not43 = zext i1 %toBool42not to i8
  %toBool45 = icmp ne i8 %toBool42not43, 0
  br i1 %toBool45, label %bb46, label %bb47

bb46:                                             ; preds = %bb41
  store i8 0, i8* %ok, align 1
  br label %bb50

bb47:                                             ; preds = %bb41
  %127 = load i8* %ok, align 1
  %128 = zext i8 %127 to i32
  %129 = load i8* %new_dst, align 1
  %130 = zext i8 %129 to i32
  %131 = load i8** %arg, align 8
  %132 = load i8** %dst_name, align 8
  %133 = trunc i32 %130 to i8
  %134 = load %struct.cp_options** %x_addr, align 8
  %135 = call zeroext i8 @copy(i8* %131, i8* %132, i8 zeroext %133, %struct.cp_options* %134, i8* %copy_into_self, i8* null) nounwind
  %136 = zext i8 %135 to i32
  %137 = and i32 %128, %136
  %138 = icmp ne i32 %137, 0
  %139 = zext i1 %138 to i8
  store i8 %139, i8* %ok, align 1
  %140 = load i8* @parents_option, align 1
  %toBool48 = icmp ne i8 %140, 0
  br i1 %toBool48, label %bb49, label %bb50

bb49:                                             ; preds = %bb47
  %141 = load i8* %ok, align 1
  %142 = zext i8 %141 to i32
  %143 = load %struct.dir_attr** %attr_list, align 8
  %144 = load i8** %arg_in_concat, align 8
  %145 = ptrtoint i8* %144 to i64
  %146 = load i8** %dst_name, align 8
  %147 = ptrtoint i8* %146 to i64
  %148 = sub nsw i64 %145, %147
  %149 = load i8** %dst_name, align 8
  %150 = load %struct.cp_options** %x_addr, align 8
  %151 = call zeroext i8 @re_protect(i8* %149, i64 %148, %struct.dir_attr* %143, %struct.cp_options* %150) nounwind
  %152 = zext i8 %151 to i32
  %153 = and i32 %142, %152
  %154 = icmp ne i32 %153, 0
  %155 = zext i1 %154 to i8
  store i8 %155, i8* %ok, align 1
  br label %bb50

bb50:                                             ; preds = %bb49, %bb47, %bb46
  %156 = load i8* @parents_option, align 1
  %toBool51 = icmp ne i8 %156, 0
  br i1 %toBool51, label %bb54, label %bb55

bb53:                                             ; preds = %bb54
  %157 = load %struct.dir_attr** %attr_list, align 8
  store %struct.dir_attr* %157, %struct.dir_attr** %p, align 8
  %158 = load %struct.dir_attr** %attr_list, align 8
  %159 = getelementptr inbounds %struct.dir_attr* %158, i32 0, i32 3
  %160 = load %struct.dir_attr** %159, align 8
  store %struct.dir_attr* %160, %struct.dir_attr** %attr_list, align 8
  %161 = load %struct.dir_attr** %p, align 8
  %162 = bitcast %struct.dir_attr* %161 to i8*
  call void @free(i8* %162) nounwind
  br label %bb54

bb54:                                             ; preds = %bb50, %bb53
  %163 = load %struct.dir_attr** %attr_list, align 8
  %164 = icmp ne %struct.dir_attr* %163, null
  br i1 %164, label %bb53, label %bb55

bb55:                                             ; preds = %bb54, %bb50
  %165 = load i8** %dst_name, align 8
  call void @free(i8* %165) nounwind
  %166 = load i32* %i, align 4
  %167 = add nsw i32 %166, 1
  store i32 %167, i32* %i, align 4
  br label %bb56

bb56:                                             ; preds = %bb55, %bb23
  %168 = load i32* %i, align 4
  %169 = load i32* %n_files_addr, align 4
  %170 = icmp slt i32 %168, %169
  br i1 %170, label %bb24, label %bb80

bb58:                                             ; preds = %bb20
  %171 = load i8*** %file_addr, align 8
  %172 = getelementptr inbounds i8** %171, i64 0
  %173 = load i8** %172, align 1
  store i8* %173, i8** %source, align 8
  %174 = load i8*** %file_addr, align 8
  %175 = getelementptr inbounds i8** %174, i64 1
  %176 = load i8** %175, align 1
  store i8* %176, i8** %dest, align 8
  %177 = load i8* @parents_option, align 1
  %toBool59 = icmp ne i8 %177, 0
  br i1 %toBool59, label %bb60, label %bb61

bb60:                                             ; preds = %bb58
  %178 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str88, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %178) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb61:                                             ; preds = %bb58
  %179 = load %struct.cp_options** %x_addr, align 8
  %180 = getelementptr inbounds %struct.cp_options* %179, i32 0, i32 7
  %181 = load i8* %180, align 2
  %toBool62 = icmp ne i8 %181, 0
  %toBool62not = xor i1 %toBool62, true
  %toBool62not63 = zext i1 %toBool62not to i8
  %toBool65 = icmp ne i8 %toBool62not63, 0
  br i1 %toBool65, label %bb78, label %bb66

bb66:                                             ; preds = %bb61
  %182 = load %struct.cp_options** %x_addr, align 8
  %183 = getelementptr inbounds %struct.cp_options* %182, i32 0, i32 0
  %184 = load i32* %183, align 8
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %bb78, label %bb67

bb67:                                             ; preds = %bb66
  %186 = load i8** %source, align 8
  %187 = load i8** %dest, align 8
  %188 = call i32 @strcmp(i8* %186, i8* %187) nounwind readonly
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %bb78, label %bb68

bb68:                                             ; preds = %bb67
  %190 = load i8* %new_dst, align 1
  %toBool69 = icmp ne i8 %190, 0
  %toBool69not = xor i1 %toBool69, true
  %toBool69not70 = zext i1 %toBool69not to i8
  %toBool72 = icmp ne i8 %toBool69not70, 0
  %toBool72not = xor i1 %toBool72, true
  %toBool72not73 = zext i1 %toBool72not to i8
  %toBool75 = icmp ne i8 %toBool72not73, 0
  br i1 %toBool75, label %bb78, label %bb76

bb76:                                             ; preds = %bb68
  %191 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 3
  %192 = load i32* %191, align 8
  %193 = and i32 %192, 61440
  %194 = icmp ne i32 %193, 32768
  br i1 %194, label %bb78, label %bb77

bb77:                                             ; preds = %bb76
  %195 = load %struct.cp_options** %x_addr, align 8
  %196 = getelementptr inbounds %struct.cp_options* %195, i32 0, i32 0
  %197 = load i32* %196, align 8
  %198 = load i8** %dest, align 8
  %199 = call i8* @find_backup_file_name(i8* %198, i32 %197) nounwind
  store i8* %199, i8** %new_dest, align 8
  %200 = load %struct.cp_options** %x_addr, align 8
  %201 = bitcast %struct.cp_options* %200 to i8*
  %202 = call i8* @memcpy(i8* bitcast (%struct.cp_options* @x_tmp.6811 to i8*), i8* %201, i64 72)
  store i32 0, i32* getelementptr inbounds (%struct.cp_options* @x_tmp.6811, i64 0, i32 0), align 8
  store %struct.cp_options* @x_tmp.6811, %struct.cp_options** %x_addr, align 8
  br label %bb79

bb78:                                             ; preds = %bb76, %bb68, %bb67, %bb66, %bb61
  %203 = load i8** %dest, align 8
  store i8* %203, i8** %new_dest, align 8
  br label %bb79

bb79:                                             ; preds = %bb78, %bb77
  %204 = load i8** %source, align 8
  %205 = load i8** %new_dest, align 8
  %206 = load %struct.cp_options** %x_addr, align 8
  %207 = call zeroext i8 @copy(i8* %204, i8* %205, i8 zeroext 0, %struct.cp_options* %206, i8* %unused, i8* null) nounwind
  store i8 %207, i8* %ok, align 1
  br label %bb80

bb80:                                             ; preds = %bb56, %bb79
  %208 = load i8* %ok, align 1
  %209 = zext i8 %208 to i32
  store i32 %209, i32* %0, align 4
  %210 = load i32* %0, align 4
  store i32 %210, i32* %retval, align 4
  %retval81 = load i32* %retval
  %retval8182 = trunc i32 %retval81 to i8
  ret i8 %retval8182
}

declare void @free(i8*) nounwind

define internal void @cp_option_init(%struct.cp_options* %x) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %0 = load %struct.cp_options** %x_addr, align 8
  call void @cp_options_default(%struct.cp_options* %0) nounwind
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 5
  store i8 1, i8* %2, align 4
  %3 = load %struct.cp_options** %x_addr, align 8
  %4 = getelementptr inbounds %struct.cp_options* %3, i32 0, i32 1
  store i32 1, i32* %4, align 4
  %5 = load %struct.cp_options** %x_addr, align 8
  %6 = getelementptr inbounds %struct.cp_options* %5, i32 0, i32 6
  store i8 0, i8* %6, align 1
  %7 = load %struct.cp_options** %x_addr, align 8
  %8 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 7
  store i8 0, i8* %8, align 2
  %9 = load %struct.cp_options** %x_addr, align 8
  %10 = getelementptr inbounds %struct.cp_options* %9, i32 0, i32 8
  store i8 0, i8* %10, align 1
  %11 = load %struct.cp_options** %x_addr, align 8
  %12 = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 2
  store i32 4, i32* %12, align 8
  %13 = load %struct.cp_options** %x_addr, align 8
  %14 = getelementptr inbounds %struct.cp_options* %13, i32 0, i32 9
  store i8 0, i8* %14, align 8
  %15 = load %struct.cp_options** %x_addr, align 8
  %16 = getelementptr inbounds %struct.cp_options* %15, i32 0, i32 12
  store i8 0, i8* %16, align 1
  %17 = load %struct.cp_options** %x_addr, align 8
  %18 = getelementptr inbounds %struct.cp_options* %17, i32 0, i32 33
  store i32 0, i32* %18, align 8
  %19 = load %struct.cp_options** %x_addr, align 8
  %20 = getelementptr inbounds %struct.cp_options* %19, i32 0, i32 13
  store i8 0, i8* %20, align 4
  %21 = load %struct.cp_options** %x_addr, align 8
  %22 = getelementptr inbounds %struct.cp_options* %21, i32 0, i32 18
  store i8 0, i8* %22, align 1
  %23 = load %struct.cp_options** %x_addr, align 8
  %24 = getelementptr inbounds %struct.cp_options* %23, i32 0, i32 14
  store i8 0, i8* %24, align 1
  %25 = load %struct.cp_options** %x_addr, align 8
  %26 = getelementptr inbounds %struct.cp_options* %25, i32 0, i32 15
  store i8 0, i8* %26, align 2
  %27 = load %struct.cp_options** %x_addr, align 8
  %28 = getelementptr inbounds %struct.cp_options* %27, i32 0, i32 16
  store i8 0, i8* %28, align 1
  %29 = load %struct.cp_options** %x_addr, align 8
  %30 = getelementptr inbounds %struct.cp_options* %29, i32 0, i32 21
  store i8 0, i8* %30, align 4
  %31 = load %struct.cp_options** %x_addr, align 8
  %32 = getelementptr inbounds %struct.cp_options* %31, i32 0, i32 22
  store i8 0, i8* %32, align 1
  %33 = load %struct.cp_options** %x_addr, align 8
  %34 = getelementptr inbounds %struct.cp_options* %33, i32 0, i32 17
  store i8 0, i8* %34, align 8
  %35 = load %struct.cp_options** %x_addr, align 8
  %36 = getelementptr inbounds %struct.cp_options* %35, i32 0, i32 23
  store i8 0, i8* %36, align 2
  %37 = load %struct.cp_options** %x_addr, align 8
  %38 = getelementptr inbounds %struct.cp_options* %37, i32 0, i32 25
  store i8 0, i8* %38, align 8
  %39 = load %struct.cp_options** %x_addr, align 8
  %40 = getelementptr inbounds %struct.cp_options* %39, i32 0, i32 24
  store i8 0, i8* %40, align 1
  %41 = load %struct.cp_options** %x_addr, align 8
  %42 = getelementptr inbounds %struct.cp_options* %41, i32 0, i32 19
  store i8 1, i8* %42, align 2
  %43 = load %struct.cp_options** %x_addr, align 8
  %44 = getelementptr inbounds %struct.cp_options* %43, i32 0, i32 20
  store i8 0, i8* %44, align 1
  %45 = load %struct.cp_options** %x_addr, align 8
  %46 = getelementptr inbounds %struct.cp_options* %45, i32 0, i32 26
  store i8 0, i8* %46, align 1
  %47 = load %struct.cp_options** %x_addr, align 8
  %48 = getelementptr inbounds %struct.cp_options* %47, i32 0, i32 3
  store i32 2, i32* %48, align 4
  %49 = load %struct.cp_options** %x_addr, align 8
  %50 = getelementptr inbounds %struct.cp_options* %49, i32 0, i32 28
  store i8 0, i8* %50, align 1
  %51 = load %struct.cp_options** %x_addr, align 8
  %52 = getelementptr inbounds %struct.cp_options* %51, i32 0, i32 27
  store i8 0, i8* %52, align 2
  %53 = load %struct.cp_options** %x_addr, align 8
  %54 = getelementptr inbounds %struct.cp_options* %53, i32 0, i32 4
  store i32 0, i32* %54, align 8
  %55 = load %struct.cp_options** %x_addr, align 8
  %56 = getelementptr inbounds %struct.cp_options* %55, i32 0, i32 31
  store i8 0, i8* %56, align 2
  %57 = load %struct.cp_options** %x_addr, align 8
  %58 = getelementptr inbounds %struct.cp_options* %57, i32 0, i32 29
  store i8 0, i8* %58, align 4
  %59 = load %struct.cp_options** %x_addr, align 8
  %60 = getelementptr inbounds %struct.cp_options* %59, i32 0, i32 30
  store i8 0, i8* %60, align 1
  %61 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str89, i64 0, i64 0)) nounwind
  %62 = icmp ne i8* %61, null
  %63 = zext i1 %62 to i8
  %64 = load %struct.cp_options** %x_addr, align 8
  %65 = getelementptr inbounds %struct.cp_options* %64, i32 0, i32 32
  store i8 %63, i8* %65, align 1
  %66 = load %struct.cp_options** %x_addr, align 8
  %67 = getelementptr inbounds %struct.cp_options* %66, i32 0, i32 34
  store %struct.Hash_table* null, %struct.Hash_table** %67, align 8
  %68 = load %struct.cp_options** %x_addr, align 8
  %69 = getelementptr inbounds %struct.cp_options* %68, i32 0, i32 35
  store %struct.Hash_table* null, %struct.Hash_table** %69, align 8
  ret void
}

define internal void @decode_preserve_arg(i8* %arg, %struct.cp_options* %x, i8 zeroext %on_off) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %on_off_addr = alloca i8, align 1
  %iftmp.88 = alloca i8*
  %arg_writable = alloca i8*
  %s = alloca i8*
  %comma = alloca i8*
  %val = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8 %on_off, i8* %on_off_addr
  %0 = load i8** %arg_addr, align 8
  %1 = call noalias i8* @xstrdup(i8* %0) nounwind
  store i8* %1, i8** %arg_writable, align 8
  %2 = load i8** %arg_writable, align 8
  store i8* %2, i8** %s, align 8
  br label %bb

bb:                                               ; preds = %bb23, %entry
  %3 = load i8** %s, align 8
  %4 = call i8* @strchr(i8* %3, i32 44) nounwind readonly
  store i8* %4, i8** %comma, align 8
  %5 = load i8** %comma, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i8** %comma, align 8
  store i8 0, i8* %7, align 1
  %8 = load i8** %comma, align 8
  %9 = getelementptr inbounds i8* %8, i64 1
  store i8* %9, i8** %comma, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = load void ()** @argmatch_die, align 8
  %11 = load i8* %on_off_addr, align 1
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([11 x i8]* @.str90, i64 0, i64 0), i8** %iftmp.88, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([14 x i8]* @.str91, i64 0, i64 0), i8** %iftmp.88, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %12 = load i8** %iftmp.88, align 8
  %13 = load i8** %s, align 8
  %14 = call i64 @__xargmatch_internal(i8* %12, i8* %13, i8** getelementptr inbounds ([8 x i8*]* @preserve_args.6962, i64 0, i64 0), i8* bitcast ([7 x i32]* @preserve_vals.6961 to i8*), i64 4, void ()* %10) nounwind
  %15 = getelementptr inbounds [7 x i32]* @preserve_vals.6961, i64 0, i64 %14
  %16 = load i32* %15, align 4
  store i32 %16, i32* %val, align 4
  %17 = load i32* %val, align 4
  switch i32 %17, label %bb22 [
    i32 0, label %bb6
    i32 1, label %bb10
    i32 2, label %bb11
    i32 3, label %bb12
    i32 4, label %bb13
    i32 5, label %bb14
    i32 6, label %bb15
  ]

bb6:                                              ; preds = %bb5
  %18 = load %struct.cp_options** %x_addr, align 8
  %19 = getelementptr inbounds %struct.cp_options* %18, i32 0, i32 14
  %20 = load i8* %on_off_addr, align 1
  store i8 %20, i8* %19, align 1
  %21 = load i8* %on_off_addr, align 1
  %toBool7 = icmp ne i8 %21, 0
  %toBool7not = xor i1 %toBool7, true
  %toBool7not8 = zext i1 %toBool7not to i32
  %22 = trunc i32 %toBool7not8 to i8
  %23 = load %struct.cp_options** %x_addr, align 8
  %24 = getelementptr inbounds %struct.cp_options* %23, i32 0, i32 16
  store i8 %22, i8* %24, align 1
  br label %bb23

bb10:                                             ; preds = %bb5
  %25 = load %struct.cp_options** %x_addr, align 8
  %26 = getelementptr inbounds %struct.cp_options* %25, i32 0, i32 15
  %27 = load i8* %on_off_addr, align 1
  store i8 %27, i8* %26, align 2
  br label %bb23

bb11:                                             ; preds = %bb5
  %28 = load %struct.cp_options** %x_addr, align 8
  %29 = getelementptr inbounds %struct.cp_options* %28, i32 0, i32 13
  %30 = load i8* %on_off_addr, align 1
  store i8 %30, i8* %29, align 4
  br label %bb23

bb12:                                             ; preds = %bb5
  %31 = load %struct.cp_options** %x_addr, align 8
  %32 = getelementptr inbounds %struct.cp_options* %31, i32 0, i32 18
  %33 = load i8* %on_off_addr, align 1
  store i8 %33, i8* %32, align 1
  br label %bb23

bb13:                                             ; preds = %bb5
  %34 = load %struct.cp_options** %x_addr, align 8
  %35 = getelementptr inbounds %struct.cp_options* %34, i32 0, i32 22
  %36 = load i8* %on_off_addr, align 1
  store i8 %36, i8* %35, align 1
  %37 = load %struct.cp_options** %x_addr, align 8
  %38 = getelementptr inbounds %struct.cp_options* %37, i32 0, i32 21
  %39 = load i8* %on_off_addr, align 1
  store i8 %39, i8* %38, align 4
  br label %bb23

bb14:                                             ; preds = %bb5
  %40 = load %struct.cp_options** %x_addr, align 8
  %41 = getelementptr inbounds %struct.cp_options* %40, i32 0, i32 23
  %42 = load i8* %on_off_addr, align 1
  store i8 %42, i8* %41, align 2
  %43 = load %struct.cp_options** %x_addr, align 8
  %44 = getelementptr inbounds %struct.cp_options* %43, i32 0, i32 24
  %45 = load i8* %on_off_addr, align 1
  store i8 %45, i8* %44, align 1
  br label %bb23

bb15:                                             ; preds = %bb5
  %46 = load %struct.cp_options** %x_addr, align 8
  %47 = getelementptr inbounds %struct.cp_options* %46, i32 0, i32 14
  %48 = load i8* %on_off_addr, align 1
  store i8 %48, i8* %47, align 1
  %49 = load %struct.cp_options** %x_addr, align 8
  %50 = getelementptr inbounds %struct.cp_options* %49, i32 0, i32 15
  %51 = load i8* %on_off_addr, align 1
  store i8 %51, i8* %50, align 2
  %52 = load %struct.cp_options** %x_addr, align 8
  %53 = getelementptr inbounds %struct.cp_options* %52, i32 0, i32 13
  %54 = load i8* %on_off_addr, align 1
  store i8 %54, i8* %53, align 4
  %55 = load %struct.cp_options** %x_addr, align 8
  %56 = getelementptr inbounds %struct.cp_options* %55, i32 0, i32 18
  %57 = load i8* %on_off_addr, align 1
  store i8 %57, i8* %56, align 1
  %58 = load i8* %on_off_addr, align 1
  %toBool16 = icmp ne i8 %58, 0
  %toBool16not = xor i1 %toBool16, true
  %toBool16not17 = zext i1 %toBool16not to i32
  %59 = trunc i32 %toBool16not17 to i8
  %60 = load %struct.cp_options** %x_addr, align 8
  %61 = getelementptr inbounds %struct.cp_options* %60, i32 0, i32 16
  store i8 %59, i8* %61, align 1
  %62 = load i8* @selinux_enabled, align 1
  %toBool19 = icmp ne i8 %62, 0
  br i1 %toBool19, label %bb20, label %bb21

bb20:                                             ; preds = %bb15
  %63 = load %struct.cp_options** %x_addr, align 8
  %64 = getelementptr inbounds %struct.cp_options* %63, i32 0, i32 21
  %65 = load i8* %on_off_addr, align 1
  store i8 %65, i8* %64, align 4
  br label %bb21

bb21:                                             ; preds = %bb20, %bb15
  %66 = load %struct.cp_options** %x_addr, align 8
  %67 = getelementptr inbounds %struct.cp_options* %66, i32 0, i32 23
  %68 = load i8* %on_off_addr, align 1
  store i8 %68, i8* %67, align 2
  br label %bb23

bb22:                                             ; preds = %bb5
  call void @abort() noreturn nounwind
  unreachable

bb23:                                             ; preds = %bb21, %bb14, %bb13, %bb12, %bb11, %bb10, %bb6
  %69 = load i8** %comma, align 8
  store i8* %69, i8** %s, align 8
  %70 = load i8** %s, align 8
  %71 = icmp ne i8* %70, null
  br i1 %71, label %bb, label %bb24

bb24:                                             ; preds = %bb23
  %72 = load i8** %arg_writable, align 8
  call void @free(i8* %72) nounwind
  ret void
}

define i32 @__user_main(i32 %argc, i8** %argv) nounwind {
entry:
  %argcPtr = alloca i32
  %argvPtr = alloca i8**
  store i32 %argc, i32* %argcPtr
  store i8** %argv, i8*** %argvPtr
  call void @klee_init_env(i32* %argcPtr, i8*** %argvPtr)
  %newArgc = load i32* %argcPtr
  %newArgv = load i8*** %argvPtr
  call void @klee_mark_arg_symbolic(i32 %newArgc, i8** %newArgv)
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.114 = alloca i32
  %0 = alloca i32
  %iftmp.110 = alloca i32
  %c = alloca i32
  %ok = alloca i8
  %make_backups = alloca i8
  %backup_suffix_string = alloca i8*
  %version_control_string = alloca i8*
  %x = alloca %struct.cp_options
  %copy_contents = alloca i8
  %target_directory = alloca i8*
  %no_target_directory = alloca i8
  %scontext = alloca i8*
  %st = alloca %struct.stat
  %"alloca point" = bitcast i32 0 to i32
  store i32 %newArgc, i32* %argc_addr
  store i8** %newArgv, i8*** %argv_addr
  store i8 0, i8* %make_backups, align 1
  store i8* null, i8** %version_control_string, align 8
  store i8 0, i8* %copy_contents, align 1
  store i8* null, i8** %target_directory, align 8
  store i8 0, i8* %no_target_directory, align 1
  store i8* null, i8** %scontext, align 8
  %1 = load i8*** %argv_addr, align 8
  %2 = getelementptr inbounds i8** %1, i64 0
  %3 = load i8** %2, align 1
  call void @set_program_name(i8* %3) nounwind
  %4 = call i8* @setlocale(i32 6, i8* getelementptr inbounds ([1 x i8]* @.str71, i64 0, i64 0)) nounwind
  %5 = call i8* @bindtextdomain(i8* getelementptr inbounds ([10 x i8]* @.str57, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8]* @.str98, i64 0, i64 0)) nounwind
  %6 = call i8* @textdomain(i8* getelementptr inbounds ([10 x i8]* @.str57, i64 0, i64 0)) nounwind
  %7 = call i32 @atexit(void ()* @close_stdin) nounwind
  store i8 0, i8* @selinux_enabled, align 1
  call void @cp_option_init(%struct.cp_options* %x) nounwind
  %8 = call i8* @getenv(i8* getelementptr inbounds ([21 x i8]* @.str99, i64 0, i64 0)) nounwind
  store i8* %8, i8** %backup_suffix_string, align 8
  br label %bb55

bb:                                               ; preds = %bb55
  %9 = load i32* %c, align 4
  switch i32 %9, label %bb54 [
    i32 -131, label %bb53
    i32 -130, label %bb52
    i32 72, label %bb16
    i32 76, label %bb19
    i32 80, label %bb21
    i32 82, label %bb27
    i32 83, label %bb51
    i32 84, label %bb38
    i32 90, label %bb42
    i32 97, label %bb6
    i32 98, label %bb9
    i32 100, label %bb14
    i32 102, label %bb15
    i32 105, label %bb17
    i32 108, label %bb18
    i32 110, label %bb20
    i32 112, label %bb25
    i32 114, label %bb27
    i32 115, label %bb30
    i32 116, label %bb31
    i32 117, label %bb39
    i32 118, label %bb40
    i32 120, label %bb41
    i32 128, label %bb12
    i32 129, label %bb13
    i32 130, label %bb22
    i32 131, label %bb26
    i32 132, label %bb23
    i32 133, label %bb2
    i32 134, label %bb1
    i32 135, label %bb29
    i32 136, label %bb28
  ]

bb1:                                              ; preds = %bb
  %10 = load void ()** @argmatch_die, align 8
  %11 = load i8** @optarg, align 8
  %12 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([9 x i8]* @.str100, i64 0, i64 0), i8* %11, i8** getelementptr inbounds ([4 x i8*]* @sparse_type_string, i64 0, i64 0), i8* bitcast ([3 x i32]* @sparse_type to i8*), i64 4, void ()* %10) 
  %13 = getelementptr inbounds [3 x i32]* @sparse_type, i64 0, i64 %12
  %14 = load i32* %13, align 4
  %15 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 3
  store i32 %14, i32* %15, align 4
  br label %bb55

bb2:                                              ; preds = %bb
  %16 = load i8** @optarg, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %18 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 33
  store i32 2, i32* %18, align 8
  br label %bb55

bb4:                                              ; preds = %bb2
  %19 = load void ()** @argmatch_die, align 8
  %20 = load i8** @optarg, align 8
  %21 = call i64 @__xargmatch_internal(i8* getelementptr inbounds ([10 x i8]* @.str101, i64 0, i64 0), i8* %20, i8** getelementptr inbounds ([3 x i8*]* @reflink_type_string, i64 0, i64 0), i8* bitcast ([2 x i32]* @reflink_type to i8*), i64 4, void ()* %1
  %22 = getelementptr inbounds [2 x i32]* @reflink_type, i64 0, i64 %21
  %23 = load i32* %22, align 4
  %24 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 33
  store i32 %23, i32* %24, align 8
  br label %bb55

bb6:                                              ; preds = %bb
  %25 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 2, i32* %25, align 4
  %26 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 18
  store i8 1, i8* %26, align 1
  %27 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 13
  store i8 1, i8* %27, align 4
  %28 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 14
  store i8 1, i8* %28, align 1
  %29 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 15
  store i8 1, i8* %29, align 2
  %30 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 20
  store i8 1, i8* %30, align 1
  %31 = load i8* @selinux_enabled, align 1
  %toBool = icmp ne i8 %31, 0
  br i1 %toBool, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %32 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 21
  store i8 1, i8* %32, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %33 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 23
  store i8 1, i8* %33, align 2
  %34 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 25
  store i8 1, i8* %34, align 8
  %35 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 26
  store i8 1, i8* %35, align 1
  br label %bb55

bb9:                                              ; preds = %bb
  store i8 1, i8* %make_backups, align 1
  %36 = load i8** @optarg, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %bb10, label %bb55

bb10:                                             ; preds = %bb9
  %38 = load i8** @optarg, align 8
  store i8* %38, i8** %version_control_string, align 8
  br label %bb55

bb12:                                             ; preds = %bb
  %39 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 19
  store i8 0, i8* %39, align 2
  br label %bb55

bb13:                                             ; preds = %bb
  store i8 1, i8* %copy_contents, align 1
  br label %bb55

bb14:                                             ; preds = %bb
  %40 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 18
  store i8 1, i8* %40, align 1
  %41 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 2, i32* %41, align 4
  br label %bb55

bb15:                                             ; preds = %bb
  %42 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 7
  store i8 1, i8* %42, align 2
  br label %bb55

bb16:                                             ; preds = %bb
  %43 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 3, i32* %43, align 4
  br label %bb55

bb17:                                             ; preds = %bb
  %44 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 2
  store i32 3, i32* %44, align 8
  br label %bb55

bb18:                                             ; preds = %bb
  %45 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 8
  store i8 1, i8* %45, align 1
  br label %bb55

bb19:                                             ; preds = %bb
  %46 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 4, i32* %46, align 4
  br label %bb55

bb20:                                             ; preds = %bb
  %47 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 2
  store i32 2, i32* %47, align 8
  br label %bb55

bb21:                                             ; preds = %bb
  %48 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 2, i32* %48, align 4
  br label %bb55

bb22:                                             ; preds = %bb
  %49 = load i8** @optarg, align 8
  call void @decode_preserve_arg(i8* %49, %struct.cp_options* %x, i8 zeroext 0) nounwind
  br label %bb55

bb23:                                             ; preds = %bb
  %50 = load i8** @optarg, align 8
  %51 = icmp ne i8* %50, null
  br i1 %51, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %52 = load i8** @optarg, align 8
  call void @decode_preserve_arg(i8* %52, %struct.cp_options* %x, i8 zeroext 1) nounwind
  %53 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 20
  store i8 1, i8* %53, align 1
  br label %bb55

bb25:                                             ; preds = %bb23, %bb
  %54 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 13
  store i8 1, i8* %54, align 4
  %55 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 14
  store i8 1, i8* %55, align 1
  %56 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 15
  store i8 1, i8* %56, align 2
  %57 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 20
  store i8 1, i8* %57, align 1
  br label %bb55

bb26:                                             ; preds = %bb
  store i8 1, i8* @parents_option, align 1
  br label %bb55

bb27:                                             ; preds = %bb, %bb
  %58 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 26
  store i8 1, i8* %58, align 1
  br label %bb55

bb28:                                             ; preds = %bb
  %59 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 6
  store i8 1, i8* %59, align 1
  br label %bb55

bb29:                                             ; preds = %bb
  store i8 1, i8* @remove_trailing_slashes, align 1
  br label %bb55

bb30:                                             ; preds = %bb
  %60 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 28
  store i8 1, i8* %60, align 1
  br label %bb55

bb31:                                             ; preds = %bb
  %61 = load i8** %target_directory, align 8
  %62 = icmp ne i8* %61, null
  br i1 %62, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %63 = call i8* @gettext(i8* getelementptr inbounds ([38 x i8]* @.str102, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %63) nounwind
  br label %bb37

bb33:                                             ; preds = %bb31
  %64 = load i8** @optarg, align 8
  %65 = call i32 @stat(i8* noalias %64, %struct.stat* noalias %st) nounwind
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %67 = load i8** @optarg, align 8
  %68 = call i8* @quotearg_style(i32 4, i8* %67) nounwind
  %69 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str80, i64 0, i64 0)) nounwind
  %70 = call i32* @__errno_location() nounwind readnone
  %71 = load i32* %70, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %71, i8* %69, i8* %68) nounwind
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %72 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %73 = load i32* %72, align 8
  %74 = and i32 %73, 61440
  %75 = icmp ne i32 %74, 16384
  br i1 %75, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  %76 = load i8** @optarg, align 8
  %77 = call i8* @quotearg_style(i32 4, i8* %76) nounwind
  %78 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str85, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %78, i8* %77) nounwind
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35, %bb32
  %79 = load i8** @optarg, align 8
  store i8* %79, i8** %target_directory, align 8
  br label %bb55

bb38:                                             ; preds = %bb
  store i8 1, i8* %no_target_directory, align 1
  br label %bb55

bb39:                                             ; preds = %bb
  %80 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 29
  store i8 1, i8* %80, align 4
  br label %bb55

bb40:                                             ; preds = %bb
  %81 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 30
  store i8 1, i8* %81, align 1
  br label %bb55

bb41:                                             ; preds = %bb
  %82 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 12
  store i8 1, i8* %82, align 1
  br label %bb55

bb42:                                             ; preds = %bb
  %83 = load i8* @selinux_enabled, align 1
  %toBool43 = icmp ne i8 %83, 0
  %84 = load i8** @optarg, align 8
  %85 = icmp ne i8* %84, null
  br i1 %toBool43, label %bb44, label %bb48

bb44:                                             ; preds = %bb42
  br i1 %85, label %bb45, label %bb46

bb45:                                             ; preds = %bb44
  %86 = load i8** @optarg, align 8
  store i8* %86, i8** %scontext, align 8
  br label %bb55

bb46:                                             ; preds = %bb44
  %87 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 17
  store i8 1, i8* %87, align 8
  br label %bb55

bb48:                                             ; preds = %bb42
  br i1 %85, label %bb49, label %bb55

bb49:                                             ; preds = %bb48
  %88 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8]* @.str103, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %88) nounwind
  br label %bb55

bb51:                                             ; preds = %bb
  store i8 1, i8* %make_backups, align 1
  %89 = load i8** @optarg, align 8
  store i8* %89, i8** %backup_suffix_string, align 8
  br label %bb55

bb52:                                             ; preds = %bb
  call void @usage(i32 0) noreturn nounwind
  unreachable

bb53:                                             ; preds = %bb
  %90 = call i8* @proper_name_utf8(i8* getelementptr inbounds ([18 x i8]* @.str104, i64 0, i64 0), i8* getelementptr inbounds ([19 x i8]* @.str105, i64 0, i64 0)) nounwind
  %91 = load i8** @Version, align 8
  %92 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  call void (%struct.FILE*, i8*, i8*, i8*, ...)* @version_etc(%struct.FILE* %92, i8* getelementptr inbounds ([3 x i8]* @.str53, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str65, i64 0, i64 0), i8* %91, i8* %90, i8* getelementptr inbounds ([1
  call void @exit(i32 0) noreturn nounwind
  unreachable

bb54:                                             ; preds = %bb
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb55:                                             ; preds = %bb48, %bb49, %bb46, %bb45, %bb9, %bb10, %bb3, %bb4, %bb51, %bb41, %bb40, %bb39, %bb38, %bb37, %bb30, %bb29, %bb28, %bb27, %bb26, %bb25, %bb24, %bb22, %bb21, %bb20, %bb19, %bb18, %bb17, %bb16, %
  %93 = load i32* %argc_addr, align 4
  %94 = load i8*** %argv_addr, align 8
  %95 = call i32 @getopt_long(i32 %93, i8** %94, i8* getelementptr inbounds ([24 x i8]* @.str108, i64 0, i64 0), %struct.option* getelementptr inbounds ([30 x %struct.option]* @long_opts, i64 0, i64 0), i32* null) nounwind
  store i32 %95, i32* %c, align 4
  %96 = load i32* %c, align 4
  %97 = icmp ne i32 %96, -1
  br i1 %97, label %bb, label %bb56

bb56:                                             ; preds = %bb55
  %98 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 8
  %99 = load i8* %98, align 1
  %toBool57 = icmp ne i8 %99, 0
  br i1 %toBool57, label %bb58, label %bb61

bb58:                                             ; preds = %bb56
  %100 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 28
  %101 = load i8* %100, align 1
  %toBool59 = icmp ne i8 %101, 0
  br i1 %toBool59, label %bb60, label %bb61

bb60:                                             ; preds = %bb58
  %102 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8]* @.str109, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %102) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb61:                                             ; preds = %bb58, %bb56
  %103 = load i8* %make_backups, align 1
  %toBool62 = icmp ne i8 %103, 0
  br i1 %toBool62, label %bb63, label %bb65

bb63:                                             ; preds = %bb61
  %104 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 2
  %105 = load i32* %104, align 8
  %106 = icmp eq i32 %105, 2
  br i1 %106, label %bb64, label %bb65

bb64:                                             ; preds = %bb63
  %107 = call i8* @gettext(i8* getelementptr inbounds ([57 x i8]* @.str110, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %107) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb65:                                             ; preds = %bb63, %bb61
  %108 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 33
  %109 = load i32* %108, align 8
  %110 = icmp eq i32 %109, 2
  br i1 %110, label %bb66, label %bb68

bb66:                                             ; preds = %bb65
  %111 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 3
  %112 = load i32* %111, align 4
  %113 = icmp ne i32 %112, 2
  br i1 %113, label %bb67, label %bb68

bb67:                                             ; preds = %bb66
  %114 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str111, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %114) nounwind
  call void @usage(i32 1) noreturn nounwind
  unreachable

bb68:                                             ; preds = %bb66, %bb65
  %115 = load i8** %backup_suffix_string, align 8
  %116 = icmp ne i8* %115, null
  br i1 %116, label %bb69, label %bb70

bb69:                                             ; preds = %bb68
  %117 = load i8** %backup_suffix_string, align 8
  %118 = call noalias i8* @xstrdup(i8* %117) nounwind
  store i8* %118, i8** @simple_backup_suffix, align 8
  br label %bb70

bb70:                                             ; preds = %bb69, %bb68
  %119 = load i8* %make_backups, align 1
  %toBool71 = icmp ne i8 %119, 0
  br i1 %toBool71, label %bb72, label %bb73

bb72:                                             ; preds = %bb70
  %120 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str112, i64 0, i64 0)) nounwind
  %121 = load i8** %version_control_string, align 8
  %122 = call i32 @xget_version(i8* %120, i8* %121) nounwind
  store i32 %122, i32* %iftmp.110, align 4
  br label %bb74

bb73:                                             ; preds = %bb70
  store i32 0, i32* %iftmp.110, align 4
  br label %bb74

bb74:                                             ; preds = %bb73, %bb72
  %123 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 0
  %124 = load i32* %iftmp.110, align 4
  store i32 %124, i32* %123, align 8
  %125 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  %126 = load i32* %125, align 4
  %127 = icmp eq i32 %126, 1
  br i1 %127, label %bb75, label %bb90

bb75:                                             ; preds = %bb74
  %128 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 26
  %129 = load i8* %128, align 1
  %toBool76 = icmp ne i8 %129, 0
  %toBool76not = xor i1 %toBool76, true
  %toBool76not77 = zext i1 %toBool76not to i8
  %toBool79 = icmp ne i8 %toBool76not77, 0
  br i1 %toBool79, label %bb89, label %bb80

bb80:                                             ; preds = %bb75
  %130 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 8
  %131 = load i8* %130, align 1
  %toBool81 = icmp ne i8 %131, 0
  %toBool81not = xor i1 %toBool81, true
  %toBool81not82 = zext i1 %toBool81not to i8
  %toBool84 = icmp ne i8 %toBool81not82, 0
  %toBool84not = xor i1 %toBool84, true
  %toBool84not85 = zext i1 %toBool84not to i8
  %toBool87 = icmp ne i8 %toBool84not85, 0
  br i1 %toBool87, label %bb89, label %bb88

bb88:                                             ; preds = %bb80
  %132 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 2, i32* %132, align 4
  br label %bb90

bb89:                                             ; preds = %bb80, %bb75
  %133 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 1
  store i32 4, i32* %133, align 4
  br label %bb90

bb90:                                             ; preds = %bb89, %bb88, %bb74
  %134 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 26
  %135 = load i8* %134, align 1
  %toBool91 = icmp ne i8 %135, 0
  br i1 %toBool91, label %bb92, label %bb93

bb92:                                             ; preds = %bb90
  %136 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 5
  %137 = load i8* %copy_contents, align 1
  store i8 %137, i8* %136, align 4
  br label %bb93

bb93:                                             ; preds = %bb92, %bb90
  %138 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 7
  %139 = load i8* %138, align 2
  %toBool94 = icmp ne i8 %139, 0
  br i1 %toBool94, label %bb95, label %bb100

bb95:                                             ; preds = %bb93
  %140 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 8
  %141 = load i8* %140, align 1
  %toBool96 = icmp ne i8 %141, 0
  br i1 %toBool96, label %bb99, label %bb97

bb97:                                             ; preds = %bb95
  %142 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 28
  %143 = load i8* %142, align 1
  %toBool98 = icmp ne i8 %143, 0
  br i1 %toBool98, label %bb99, label %bb100

bb99:                                             ; preds = %bb97, %bb95
  %144 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 6
  store i8 1, i8* %144, align 1
  br label %bb100

bb100:                                            ; preds = %bb99, %bb97, %bb93
  %145 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 17
  %146 = load i8* %145, align 8
  %toBool101 = icmp ne i8 %146, 0
  br i1 %toBool101, label %bb103, label %bb102

bb102:                                            ; preds = %bb100
  %147 = load i8** %scontext, align 8
  %148 = icmp ne i8* %147, null
  br i1 %148, label %bb103, label %bb109

bb103:                                            ; preds = %bb102, %bb100
  %149 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 22
  %150 = load i8* %149, align 1
  %toBool104 = icmp ne i8 %150, 0
  %toBool104not = xor i1 %toBool104, true
  %toBool104not105 = zext i1 %toBool104not to i8
  %toBool107 = icmp ne i8 %toBool104not105, 0
  br i1 %toBool107, label %bb108, label %bb109

bb108:                                            ; preds = %bb103
  %151 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 21
  store i8 0, i8* %151, align 4
  br label %bb109

bb109:                                            ; preds = %bb108, %bb103, %bb102
  %152 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 21
  %153 = load i8* %152, align 4
  %toBool110 = icmp ne i8 %153, 0
  br i1 %toBool110, label %bb111, label %bb115

bb111:                                            ; preds = %bb109
  %154 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 17
  %155 = load i8* %154, align 8
  %toBool112 = icmp ne i8 %155, 0
  br i1 %toBool112, label %bb114, label %bb113

bb113:                                            ; preds = %bb111
  %156 = load i8** %scontext, align 8
  %157 = icmp ne i8* %156, null
  br i1 %157, label %bb114, label %bb115

bb114:                                            ; preds = %bb113, %bb111
  %158 = call i8* @gettext(i8* getelementptr inbounds ([42 x i8]* @.str113, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %158) nounwind
  br label %bb115

bb115:                                            ; preds = %bb114, %bb113, %bb109
  %159 = getelementptr inbounds %struct.cp_options* %x, i32 0, i32 22
  %160 = load i8* %159, align 1
  %toBool116 = icmp ne i8 %160, 0
  br i1 %toBool116, label %bb117, label %bb123

bb117:                                            ; preds = %bb115
  %161 = load i8* @selinux_enabled, align 1
  %toBool118 = icmp ne i8 %161, 0
  %toBool118not = xor i1 %toBool118, true
  %toBool118not119 = zext i1 %toBool118not to i8
  %toBool121 = icmp ne i8 %toBool118not119, 0
  br i1 %toBool121, label %bb122, label %bb123

bb122:                                            ; preds = %bb117
  %162 = call i8* @gettext(i8* getelementptr inbounds ([67 x i8]* @.str114, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 0, i8* %162) nounwind
  br label %bb123

bb123:                                            ; preds = %bb122, %bb117, %bb115
  %163 = load i8** %scontext, align 8
  %164 = icmp ne i8* %163, null
  br i1 %164, label %bb124, label %bb126

bb124:                                            ; preds = %bb123
  %165 = load i8** %scontext, align 8
  %166 = call i8* @se_const(i8* %165) nounwind
  %167 = call i32 @setfscreatecon(i8* %166) nounwind
  %168 = icmp slt i32 %167, 0
  br i1 %168, label %bb125, label %bb126

bb125:                                            ; preds = %bb124
  %169 = load i8** %scontext, align 8
  %170 = call i8* @quote(i8* %169) nounwind
  %171 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8]* @.str115, i64 0, i64 0)) nounwind
  %172 = call i32* @__errno_location() nounwind readnone
  %173 = load i32* %172, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %173, i8* %171, i8* %170) nounwind
  br label %bb126

bb126:                                            ; preds = %bb125, %bb124, %bb123
  call void @hash_init() nounwind
  %174 = load i8* %no_target_directory, align 1
  %175 = zext i8 %174 to i32
  %176 = load i32* @optind, align 4
  %177 = load i8*** %argv_addr, align 8
  %178 = sext i32 %176 to i64
  %179 = getelementptr inbounds i8** %177, i64 %178
  %180 = load i32* @optind, align 4
  %181 = load i32* %argc_addr, align 4
  %182 = sub nsw i32 %181, %180
  %183 = load i8** %target_directory, align 8
  %184 = trunc i32 %175 to i8
  %185 = call zeroext i8 @do_copy(i32 %182, i8** %179, i8* %183, i8 zeroext %184, %struct.cp_options* %x) nounwind
  store i8 %185, i8* %ok, align 1
  %186 = load i8* %ok, align 1
  %toBool127 = icmp ne i8 %186, 0
  br i1 %toBool127, label %bb128, label %bb129

bb128:                                            ; preds = %bb126
  store i32 0, i32* %iftmp.114, align 4
  br label %bb130

bb129:                                            ; preds = %bb126
  store i32 1, i32* %iftmp.114, align 4
  br label %bb130

bb130:                                            ; preds = %bb129, %bb128
  %187 = load i32* %iftmp.114, align 4
  store i32 %187, i32* %0, align 4
  %188 = load i32* %0, align 4
  store i32 %188, i32* %retval, align 4
  %retval131 = load i32* %retval
  ret i32 %retval131
}

declare i8* @bindtextdomain(i8*, i8*) nounwind

declare i8* @textdomain(i8*) nounwind

define internal i8* @se_const(i8* %sctx) nounwind inlinehint {
entry:
  %sctx_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %sctx, i8** %sctx_addr
  %1 = load i8** %sctx_addr, align 8
  store i8* %1, i8** %0, align 8
  %2 = load i8** %0, align 8
  store i8* %2, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define internal i32 @punch_hole(i32 %fd, i64 %offset, i64 %length) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %offset_addr = alloca i64, align 8
  %length_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i64 %offset, i64* %offset_addr
  store i64 %length, i64* %length_addr
  store i32 0, i32* %ret, align 4
  %1 = load i32* %fd_addr, align 4
  %2 = load i64* %offset_addr, align 8
  %3 = load i64* %length_addr, align 8
  %4 = call i32 @fallocate(i32 %1, i32 3, i64 %2, i64 %3) nounwind
  store i32 %4, i32* %ret, align 4
  %5 = load i32* %ret, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %bb, label %bb3

bb:                                               ; preds = %entry
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  %9 = call zeroext i8 @is_ENOTSUP(i32 %8) nounwind
  %toBool = icmp ne i8 %9, 0
  br i1 %toBool, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %10, align 4
  %12 = icmp eq i32 %11, 38
  br i1 %12, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  store i32 0, i32* %ret, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1, %entry
  %13 = load i32* %ret, align 4
  store i32 %13, i32* %0, align 4
  %14 = load i32* %0, align 4
  store i32 %14, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

declare i32 @fallocate(i32, i32, i64, i64)

define internal zeroext i8 @is_ENOTSUP(i32 %err) nounwind inlinehint {
entry:
  %err_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  %1 = load i32* %err_addr, align 4
  %2 = icmp eq i32 %1, 95
  %3 = zext i1 %2 to i32
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal zeroext i8 @create_hole(i32 %fd, i8* %name, i8 zeroext %punch_holes, i64 %size) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %name_addr = alloca i8*, align 8
  %punch_holes_addr = alloca i8, align 1
  %size_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %file_end = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %name, i8** %name_addr
  store i8 %punch_holes, i8* %punch_holes_addr
  store i64 %size, i64* %size_addr
  %1 = load i32* %fd_addr, align 4
  %2 = load i64* %size_addr, align 8
  %3 = call i64 @lseek(i32 %1, i64 %2, i32 1) nounwind
  store i64 %3, i64* %file_end, align 8
  %4 = load i64* %file_end, align 8
  %5 = icmp slt i64 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %name_addr, align 8
  %7 = call i8* @quotearg_style(i32 4, i8* %6) nounwind
  %8 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str116, i64 0, i64 0)) nounwind
  %9 = call i32* @__errno_location() nounwind readnone
  %10 = load i32* %9, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %10, i8* %8, i8* %7) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb1:                                              ; preds = %entry
  %11 = load i8* %punch_holes_addr, align 1
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %bb2, label %bb4

bb2:                                              ; preds = %bb1
  %12 = load i64* %file_end, align 8
  %13 = load i64* %size_addr, align 8
  %14 = sub nsw i64 %12, %13
  %15 = load i32* %fd_addr, align 4
  %16 = load i64* %size_addr, align 8
  %17 = call i32 @punch_hole(i32 %15, i64 %14, i64 %16) nounwind
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %19 = load i8** %name_addr, align 8
  %20 = call i8* @quotearg_style(i32 4, i8* %19) nounwind
  %21 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8]* @.str1117, i64 0, i64 0)) nounwind
  %22 = call i32* @__errno_location() nounwind readnone
  %23 = load i32* %22, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %23, i8* %21, i8* %20) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %bb2, %bb1
  store i32 1, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb
  %24 = load i32* %0, align 4
  store i32 %24, i32* %retval, align 4
  %retval6 = load i32* %retval
  %retval67 = trunc i32 %retval6 to i8
  ret i8 %retval67
}

define internal zeroext i8 @sparse_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i8 zeroext %punch_holes, i8* %src_name, i8* %dst_name, i64 %max_n_read, i64* %total_n_read, i8* %last_write_made_hole) nounwind {
entry:
  %src_fd_addr = alloca i32, align 4
  %dest_fd_addr = alloca i32, align 4
  %buf_addr = alloca i8*, align 8
  %buf_size_addr = alloca i64, align 8
  %hole_size_addr = alloca i64, align 8
  %punch_holes_addr = alloca i8, align 1
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %max_n_read_addr = alloca i64, align 8
  %total_n_read_addr = alloca i64*, align 8
  %last_write_made_hole_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.41 = alloca i32
  %iftmp.40 = alloca i32
  %iftmp.38 = alloca i64
  %0 = alloca i32
  %make_hole = alloca i8
  %psize = alloca i64
  %n_read = alloca i64
  %csize = alloca i64
  %cbuf = alloca i8*
  %pbuf = alloca i8*
  %prev_hole = alloca i8
  %transition = alloca i8
  %last_chunk = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %src_fd, i32* %src_fd_addr
  store i32 %dest_fd, i32* %dest_fd_addr
  store i8* %buf, i8** %buf_addr
  store i64 %buf_size, i64* %buf_size_addr
  store i64 %hole_size, i64* %hole_size_addr
  store i8 %punch_holes, i8* %punch_holes_addr
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i64 %max_n_read, i64* %max_n_read_addr
  store i64* %total_n_read, i64** %total_n_read_addr
  store i8* %last_write_made_hole, i8** %last_write_made_hole_addr
  %1 = load i8** %last_write_made_hole_addr, align 8
  store i8 0, i8* %1, align 1
  %2 = load i64** %total_n_read_addr, align 8
  store i64 0, i64* %2, align 8
  store i8 0, i8* %make_hole, align 1
  store i64 0, i64* %psize, align 8
  br label %bb64

bb:                                               ; preds = %bb64
  %3 = load i64* %buf_size_addr, align 8
  %4 = load i64* %max_n_read_addr, align 8
  %5 = icmp ule i64 %3, %4
  %min = select i1 %5, i64 %3, i64 %4
  %6 = load i32* %src_fd_addr, align 4
  %7 = load i8** %buf_addr, align 8
  %8 = call i64 @read(i32 %6, i8* %7, i64 %min) nounwind
  store i64 %8, i64* %n_read, align 8
  %9 = load i64* %n_read, align 8
  %10 = icmp slt i64 %9, 0
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %11, align 4
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %bb64, label %bb3

bb3:                                              ; preds = %bb2
  %14 = load i8** %src_name_addr, align 8
  %15 = call i8* @quotearg_style(i32 4, i8* %14) nounwind
  %16 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str2118, i64 0, i64 0)) nounwind
  %17 = call i32* @__errno_location() nounwind readnone
  %18 = load i32* %17, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %18, i8* %16, i8* %15) nounwind
  store i32 0, i32* %0, align 4
  br label %bb80

bb4:                                              ; preds = %bb
  %19 = load i64* %n_read, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %bb65, label %bb5

bb5:                                              ; preds = %bb4
  %21 = load i64* %n_read, align 8
  %22 = load i64* %max_n_read_addr, align 8
  %23 = sub i64 %22, %21
  store i64 %23, i64* %max_n_read_addr, align 8
  %24 = load i64** %total_n_read_addr, align 8
  %25 = load i64* %24, align 8
  %26 = load i64* %n_read, align 8
  %27 = add nsw i64 %25, %26
  %28 = load i64** %total_n_read_addr, align 8
  store i64 %27, i64* %28, align 8
  %29 = load i64* %hole_size_addr, align 8
  %30 = icmp ne i64 %29, 0
  br i1 %30, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %31 = load i64* %hole_size_addr, align 8
  store i64 %31, i64* %iftmp.38, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %32 = load i64* %buf_size_addr, align 8
  store i64 %32, i64* %iftmp.38, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %33 = load i64* %iftmp.38, align 8
  store i64 %33, i64* %csize, align 8
  %34 = load i8** %buf_addr, align 8
  store i8* %34, i8** %cbuf, align 8
  %35 = load i8** %buf_addr, align 8
  store i8* %35, i8** %pbuf, align 8
  br label %bb62

bb9:                                              ; preds = %bb62
  %36 = load i8* %make_hole, align 1
  store i8 %36, i8* %prev_hole, align 1
  %37 = load i64* %n_read, align 8
  %38 = load i64* %csize, align 8
  %39 = icmp ule i64 %37, %38
  %min10 = select i1 %39, i64 %37, i64 %38
  store i64 %min10, i64* %csize, align 8
  %40 = load i64* %hole_size_addr, align 8
  %41 = icmp ne i64 %40, 0
  br i1 %41, label %bb11, label %bb13

bb11:                                             ; preds = %bb9
  %42 = load i64* %csize, align 8
  %43 = icmp ne i64 %42, 0
  br i1 %43, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %44 = load i8** %cbuf, align 8
  %45 = load i64* %csize, align 8
  %46 = call zeroext i8 @is_nul(i8* %44, i64 %45) nounwind readonly
  store i8 %46, i8* %make_hole, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb9
  %47 = load i8* %make_hole, align 1
  %48 = load i8* %prev_hole, align 1
  %49 = icmp eq i8 %47, %48
  br i1 %49, label %bb16, label %bb14

bb14:                                             ; preds = %bb13
  %50 = load i64* %psize, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %bb16, label %bb15

bb15:                                             ; preds = %bb14
  store i32 1, i32* %iftmp.40, align 4
  br label %bb17

bb16:                                             ; preds = %bb14, %bb13
  store i32 0, i32* %iftmp.40, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %52 = load i32* %iftmp.40, align 4
  %53 = trunc i32 %52 to i8
  store i8 %53, i8* %transition, align 1
  %54 = load i64* %n_read, align 8
  %55 = load i64* %csize, align 8
  %56 = icmp ne i64 %54, %55
  br i1 %56, label %bb22, label %bb18

bb18:                                             ; preds = %bb17
  %57 = load i8* %make_hole, align 1
  %toBool = icmp ne i8 %57, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot19 = zext i1 %toBoolnot to i8
  %toBool21 = icmp ne i8 %toBoolnot19, 0
  br i1 %toBool21, label %bb23, label %bb22

bb22:                                             ; preds = %bb18, %bb17
  %58 = load i64* %csize, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %bb23, label %bb24

bb23:                                             ; preds = %bb22, %bb18
  store i32 1, i32* %iftmp.41, align 4
  br label %bb25

bb24:                                             ; preds = %bb22
  store i32 0, i32* %iftmp.41, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %60 = load i32* %iftmp.41, align 4
  %61 = trunc i32 %60 to i8
  store i8 %61, i8* %last_chunk, align 1
  %62 = load i8* %transition, align 1
  %toBool26 = icmp ne i8 %62, 0
  br i1 %toBool26, label %bb29, label %bb27

bb27:                                             ; preds = %bb25
  %63 = load i8* %last_chunk, align 1
  %toBool28 = icmp ne i8 %63, 0
  br i1 %toBool28, label %bb29, label %bb58

bb29:                                             ; preds = %bb27, %bb25
  %64 = load i8* %transition, align 1
  %toBool30 = icmp ne i8 %64, 0
  %toBool30not = xor i1 %toBool30, true
  %toBool30not31 = zext i1 %toBool30not to i8
  %toBool33 = icmp ne i8 %toBool30not31, 0
  br i1 %toBool33, label %bb34, label %bb35

bb34:                                             ; preds = %bb29
  %65 = load i64* %psize, align 8
  %66 = load i64* %csize, align 8
  %67 = add i64 %65, %66
  store i64 %67, i64* %psize, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb29
  %68 = load i8* %prev_hole, align 1
  %toBool36 = icmp ne i8 %68, 0
  %toBool36not = xor i1 %toBool36, true
  %toBool36not37 = zext i1 %toBool36not to i8
  %toBool39 = icmp ne i8 %toBool36not37, 0
  br i1 %toBool39, label %bb40, label %bb43

bb40:                                             ; preds = %bb35
  %69 = load i64* %psize, align 8
  %70 = load i32* %dest_fd_addr, align 4
  %71 = load i8** %pbuf, align 8
  %72 = call i64 @full_write(i32 %70, i8* %71, i64 %69) nounwind
  %73 = load i64* %psize, align 8
  %74 = icmp ne i64 %72, %73
  br i1 %74, label %bb41, label %bb49

bb41:                                             ; preds = %bb40
  %75 = load i8** %dst_name_addr, align 8
  %76 = call i8* @quotearg_style(i32 4, i8* %75) nounwind
  %77 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str3119, i64 0, i64 0)) nounwind
  %78 = call i32* @__errno_location() nounwind readnone
  %79 = load i32* %78, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %79, i8* %77, i8* %76) nounwind
  store i32 0, i32* %0, align 4
  br label %bb80

bb43:                                             ; preds = %bb35
  %80 = load i8* %punch_holes_addr, align 1
  %81 = zext i8 %80 to i32
  %82 = load i32* %dest_fd_addr, align 4
  %83 = load i8** %dst_name_addr, align 8
  %84 = trunc i32 %81 to i8
  %85 = load i64* %psize, align 8
  %86 = call zeroext i8 @create_hole(i32 %82, i8* %83, i8 zeroext %84, i64 %85) nounwind
  %toBool44 = icmp ne i8 %86, 0
  %toBool44not = xor i1 %toBool44, true
  %toBool44not45 = zext i1 %toBool44not to i8
  %toBool47 = icmp ne i8 %toBool44not45, 0
  br i1 %toBool47, label %bb48, label %bb49

bb48:                                             ; preds = %bb43
  store i32 0, i32* %0, align 4
  br label %bb80

bb49:                                             ; preds = %bb40, %bb43
  %87 = load i8** %cbuf, align 8
  store i8* %87, i8** %pbuf, align 8
  %88 = load i64* %csize, align 8
  store i64 %88, i64* %psize, align 8
  %89 = load i8* %last_chunk, align 1
  %toBool50 = icmp ne i8 %89, 0
  br i1 %toBool50, label %bb51, label %bb61

bb51:                                             ; preds = %bb49
  %90 = load i64* %csize, align 8
  %91 = icmp eq i64 %90, 0
  br i1 %91, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  store i64 0, i64* %n_read, align 8
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51
  %92 = load i8* %transition, align 1
  %toBool54 = icmp ne i8 %92, 0
  br i1 %toBool54, label %bb55, label %bb56

bb55:                                             ; preds = %bb53
  store i64 0, i64* %csize, align 8
  br label %bb61

bb56:                                             ; preds = %bb53
  store i64 0, i64* %psize, align 8
  br label %bb61

bb58:                                             ; preds = %bb27
  %93 = load i64* %psize, align 8
  %94 = load i64* %csize, align 8
  %95 = sub i64 9223372036854775807, %94
  %96 = icmp ule i64 %93, %95
  br i1 %96, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %97 = load i64* %psize, align 8
  %98 = load i64* %csize, align 8
  %99 = add i64 %97, %98
  store i64 %99, i64* %psize, align 8
  br label %bb61

bb60:                                             ; preds = %bb58
  %100 = load i8** %src_name_addr, align 8
  %101 = call i8* @quotearg_style(i32 4, i8* %100) nounwind
  %102 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str4120, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %102, i8* %101) nounwind
  store i32 0, i32* %0, align 4
  br label %bb80

bb61:                                             ; preds = %bb49, %bb55, %bb56, %bb59
  %103 = load i64* %n_read, align 8
  %104 = load i64* %csize, align 8
  %105 = sub i64 %103, %104
  store i64 %105, i64* %n_read, align 8
  %106 = load i8** %cbuf, align 8
  %107 = load i64* %csize, align 8
  %108 = getelementptr inbounds i8* %106, i64 %107
  store i8* %108, i8** %cbuf, align 8
  br label %bb62

bb62:                                             ; preds = %bb61, %bb8
  %109 = load i64* %n_read, align 8
  %110 = icmp ne i64 %109, 0
  br i1 %110, label %bb9, label %bb63

bb63:                                             ; preds = %bb62
  %111 = load i8** %last_write_made_hole_addr, align 8
  %112 = load i8* %make_hole, align 1
  store i8 %112, i8* %111, align 1
  br label %bb64

bb64:                                             ; preds = %bb63, %bb2, %entry
  %113 = load i64* %max_n_read_addr, align 8
  %114 = icmp ne i64 %113, 0
  br i1 %114, label %bb, label %bb65

bb65:                                             ; preds = %bb64, %bb4
  %115 = load i8* %make_hole, align 1
  %toBool66 = icmp ne i8 %115, 0
  %toBool66not = xor i1 %toBool66, true
  %toBool66not67 = zext i1 %toBool66not to i8
  %toBool69 = icmp ne i8 %toBool66not67, 0
  br i1 %toBool69, label %bb79, label %bb70

bb70:                                             ; preds = %bb65
  %116 = load i8* %punch_holes_addr, align 1
  %117 = zext i8 %116 to i32
  %118 = load i32* %dest_fd_addr, align 4
  %119 = load i8** %dst_name_addr, align 8
  %120 = trunc i32 %117 to i8
  %121 = load i64* %psize, align 8
  %122 = call zeroext i8 @create_hole(i32 %118, i8* %119, i8 zeroext %120, i64 %121) nounwind
  %toBool71 = icmp ne i8 %122, 0
  %toBool71not = xor i1 %toBool71, true
  %toBool71not72 = zext i1 %toBool71not to i8
  %toBool74 = icmp ne i8 %toBool71not72, 0
  %toBool74not = xor i1 %toBool74, true
  %toBool74not75 = zext i1 %toBool74not to i8
  %toBool77 = icmp ne i8 %toBool74not75, 0
  br i1 %toBool77, label %bb79, label %bb78

bb78:                                             ; preds = %bb70
  store i32 0, i32* %0, align 4
  br label %bb80

bb79:                                             ; preds = %bb70, %bb65
  store i32 1, i32* %0, align 4
  br label %bb80

bb80:                                             ; preds = %bb79, %bb78, %bb60, %bb48, %bb41, %bb3
  %123 = load i32* %0, align 4
  store i32 %123, i32* %retval, align 4
  %retval81 = load i32* %retval
  %retval8182 = trunc i32 %retval81 to i8
  ret i8 %retval8182
}

define internal zeroext i8 @is_nul(i8* %buf, i64 %length) nounwind readonly inlinehint {
entry:
  %buf_addr = alloca i8*, align 8
  %length_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %word = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i64 %length, i64* %length_addr
  %1 = load i8** %buf_addr, align 8
  store i8* %1, i8** %p, align 8
  %2 = load i64* %length_addr, align 8
  %3 = icmp eq i64 %2, 0
  br i1 %3, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb9

bb2:                                              ; preds = %bb6, %entry
  %4 = load i8** %p, align 8
  %5 = call i8* @memcpy(i8* %word, i8* %4, i64 1)
  %6 = load i8* %word, align 1
  %7 = icmp ne i8 %6, 0
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 0, i32* %0, align 4
  br label %bb9

bb4:                                              ; preds = %bb2
  %8 = load i8** %p, align 8
  %9 = getelementptr inbounds i8* %8, i64 1
  store i8* %9, i8** %p, align 8
  %10 = load i64* %length_addr, align 8
  %11 = sub i64 %10, 1
  store i64 %11, i64* %length_addr, align 8
  %12 = load i64* %length_addr, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i32 1, i32* %0, align 4
  br label %bb9

bb6:                                              ; preds = %bb4
  %14 = load i64* %length_addr, align 8
  %15 = and i64 %14, 15
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %bb8, label %bb2

bb8:                                              ; preds = %bb6
  %17 = load i8** %buf_addr, align 8
  %18 = load i8** %p, align 8
  %19 = load i64* %length_addr, align 8
  %20 = call i32 @memcmp(i8* %17, i8* %18, i64 %19) nounwind readonly
  %21 = icmp eq i32 %20, 0
  %22 = zext i1 %21 to i32
  store i32 %22, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5, %bb3, %bb
  %23 = load i32* %0, align 4
  store i32 %23, i32* %retval, align 4
  %retval10 = load i32* %retval
  %retval1011 = trunc i32 %retval10 to i8
  ret i8 %retval1011
}

define internal zeroext i8 @write_zeros(i32 %fd, i64 %n_bytes) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %n_bytes_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i64 %n_bytes, i64* %n_bytes_addr
  %1 = load i8** @zeros.6827, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb, label %bb6

bb:                                               ; preds = %entry
  %3 = load i64* @nz.6828, align 8
  %4 = call noalias i8* @calloc(i64 %3, i64 1) nounwind
  store i8* %4, i8** @zeros.6827, align 8
  %5 = load i8** @zeros.6827, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  store i8* getelementptr inbounds ([1024 x i8]* @fallback.6829, i64 0, i64 0), i8** @zeros.6827, align 8
  store i64 1024, i64* @nz.6828, align 8
  br label %bb6

bb3:                                              ; preds = %bb6
  %7 = load i64* %n_bytes_addr, align 8
  %8 = load i64* @nz.6828, align 8
  %9 = icmp ule i64 %7, %8
  %min = select i1 %9, i64 %7, i64 %8
  store i64 %min, i64* %n, align 8
  %10 = load i8** @zeros.6827, align 8
  %11 = load i32* %fd_addr, align 4
  %12 = load i64* %n, align 8
  %13 = call i64 @full_write(i32 %11, i8* %10, i64 %12) nounwind
  %14 = load i64* %n, align 8
  %15 = icmp ne i64 %13, %14
  br i1 %15, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 0, i32* %0, align 4
  br label %bb8

bb5:                                              ; preds = %bb3
  %16 = load i64* %n_bytes_addr, align 8
  %17 = load i64* %n, align 8
  %18 = sub i64 %16, %17
  store i64 %18, i64* %n_bytes_addr, align 8
  br label %bb6

bb6:                                              ; preds = %entry, %bb, %bb1, %bb5
  %19 = load i64* %n_bytes_addr, align 8
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %bb3, label %bb7

bb7:                                              ; preds = %bb6
  store i32 1, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb4
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval9 = load i32* %retval
  %retval910 = trunc i32 %retval9 to i8
  ret i8 %retval910
}

declare noalias i8* @calloc(i64, i64) nounwind

define internal zeroext i8 @extent_copy(i32 %src_fd, i32 %dest_fd, i8* %buf, i64 %buf_size, i64 %hole_size, i64 %src_total_size, i32 %sparse_mode, i8* %src_name, i8* %dst_name, i8* %require_normal_copy) nounwind {
entry:
  %src_fd_addr = alloca i32, align 4
  %dest_fd_addr = alloca i32, align 4
  %buf_addr = alloca i8*, align 8
  %buf_size_addr = alloca i64, align 8
  %hole_size_addr = alloca i64, align 8
  %src_total_size_addr = alloca i64, align 8
  %sparse_mode_addr = alloca i32, align 4
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %require_normal_copy_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.60 = alloca i8
  %iftmp.57 = alloca i64
  %0 = alloca i32
  %scan = alloca %struct.extent_scan
  %last_ext_start = alloca i64
  %last_ext_len = alloca i64
  %dest_pos = alloca i64
  %wrote_hole_at_eof = alloca i8
  %ok = alloca i8
  %i = alloca i32
  %empty_extent = alloca i8
  %ext_start = alloca i64
  %ext_len = alloca i64
  %ext_hole_size = alloca i64
  %nzeros = alloca i64
  %n_read = alloca i64
  %read_hole = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %src_fd, i32* %src_fd_addr
  store i32 %dest_fd, i32* %dest_fd_addr
  store i8* %buf, i8** %buf_addr
  store i64 %buf_size, i64* %buf_size_addr
  store i64 %hole_size, i64* %hole_size_addr
  store i64 %src_total_size, i64* %src_total_size_addr
  store i32 %sparse_mode, i32* %sparse_mode_addr
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i8* %require_normal_copy, i8** %require_normal_copy_addr
  store i64 0, i64* %last_ext_start, align 8
  store i64 0, i64* %last_ext_len, align 8
  store i64 0, i64* %dest_pos, align 8
  %1 = load i32* %src_fd_addr, align 4
  call void @extent_scan_init(i32 %1, %struct.extent_scan* %scan) nounwind
  %2 = load i8** %require_normal_copy_addr, align 8
  store i8 0, i8* %2, align 1
  store i8 1, i8* %wrote_hole_at_eof, align 1
  br label %bb

bb:                                               ; preds = %bb69, %entry
  %3 = call zeroext i8 @extent_scan_read(%struct.extent_scan* %scan) nounwind
  store i8 %3, i8* %ok, align 1
  %4 = load i8* %ok, align 1
  %toBool = icmp ne i8 %4, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb4, label %bb10

bb4:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 5
  %6 = load i8* %5, align 1
  %toBool5 = icmp ne i8 %6, 0
  br i1 %toBool5, label %bb74, label %bb6

bb6:                                              ; preds = %bb4
  %7 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 4
  %8 = load i8* %7, align 8
  %toBool7 = icmp ne i8 %8, 0
  br i1 %toBool7, label %bb8, label %bb9

bb8:                                              ; preds = %bb6
  %9 = load i8** %require_normal_copy_addr, align 8
  store i8 1, i8* %9, align 1
  store i32 0, i32* %0, align 4
  br label %bb91

bb9:                                              ; preds = %bb6
  %10 = load i8** %src_name_addr, align 8
  %11 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %10) nounwind
  %12 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str5121, i64 0, i64 0)) nounwind
  %13 = call i32* @__errno_location() nounwind readnone
  %14 = load i32* %13, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %14, i8* %12, i8* %11) nounwind
  store i32 0, i32* %0, align 4
  br label %bb91

bb10:                                             ; preds = %bb
  store i8 0, i8* %empty_extent, align 1
  store i32 0, i32* %i, align 4
  br label %bb66

bb11:                                             ; preds = %bb67, %bb66
  %15 = load i32* %i, align 4
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 3
  %18 = load i64* %17, align 8
  %19 = icmp ult i64 %16, %18
  br i1 %19, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %20 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 6
  %21 = load %struct.extent_info** %20, align 8
  %22 = load i32* %i, align 4
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %struct.extent_info* %21, i64 %23
  %25 = getelementptr inbounds %struct.extent_info* %24, i32 0, i32 0
  %26 = load i64* %25, align 8
  store i64 %26, i64* %ext_start, align 8
  %27 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 6
  %28 = load %struct.extent_info** %27, align 8
  %29 = load i32* %i, align 4
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %struct.extent_info* %28, i64 %30
  %32 = getelementptr inbounds %struct.extent_info* %31, i32 0, i32 1
  %33 = load i64* %32, align 8
  store i64 %33, i64* %ext_len, align 8
  br label %bb14

bb13:                                             ; preds = %bb11
  %34 = load i32* %i, align 4
  %35 = sub i32 %34, 1
  store i32 %35, i32* %i, align 4
  %36 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 6
  %37 = load %struct.extent_info** %36, align 8
  %38 = load i32* %i, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %struct.extent_info* %37, i64 %39
  %41 = getelementptr inbounds %struct.extent_info* %40, i32 0, i32 1
  %42 = load i64* %41, align 8
  %43 = load i64* %last_ext_start, align 8
  %44 = add nsw i64 %42, %43
  store i64 %44, i64* %ext_start, align 8
  store i64 0, i64* %ext_len, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %45 = load i64* %ext_start, align 8
  %46 = load i64* %ext_len, align 8
  %47 = add nsw i64 %45, %46
  %48 = load i64* %src_total_size_addr, align 8
  %49 = icmp sgt i64 %47, %48
  br i1 %49, label %bb15, label %bb18

bb15:                                             ; preds = %bb14
  %50 = load i64* %src_total_size_addr, align 8
  %51 = load i64* %ext_start, align 8
  %52 = icmp slt i64 %50, %51
  br i1 %52, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %53 = load i64* %src_total_size_addr, align 8
  store i64 %53, i64* %ext_start, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %54 = load i64* %src_total_size_addr, align 8
  %55 = load i64* %ext_start, align 8
  %56 = sub nsw i64 %54, %55
  store i64 %56, i64* %ext_len, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb14
  %57 = load i64* %ext_start, align 8
  %58 = load i64* %last_ext_start, align 8
  %59 = sub nsw i64 %57, %58
  %60 = load i64* %last_ext_len, align 8
  %61 = sub nsw i64 %59, %60
  store i64 %61, i64* %ext_hole_size, align 8
  store i8 0, i8* %wrote_hole_at_eof, align 1
  %62 = load i64* %ext_hole_size, align 8
  %63 = icmp ne i64 %62, 0
  br i1 %63, label %bb19, label %bb53

bb19:                                             ; preds = %bb18
  %64 = load i32* %src_fd_addr, align 4
  %65 = load i64* %ext_start, align 8
  %66 = call i64 @lseek(i32 %64, i64 %65, i32 0) nounwind
  %67 = icmp slt i64 %66, 0
  br i1 %67, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  %68 = load i8** %src_name_addr, align 8
  %69 = call i8* @quotearg_style(i32 4, i8* %68) nounwind
  %70 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str116, i64 0, i64 0)) nounwind
  %71 = call i32* @__errno_location() nounwind readnone
  %72 = load i32* %71, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %72, i8* %70, i8* %69) nounwind
  br label %fail

fail:                                             ; preds = %bb56, %bb50, %bb36, %bb20
  call void @extent_scan_free(%struct.extent_scan* %scan) nounwind
  store i32 0, i32* %0, align 4
  br label %bb91

bb21:                                             ; preds = %bb19
  %73 = load i8* %empty_extent, align 1
  %toBool22 = icmp ne i8 %73, 0
  %toBool22not = xor i1 %toBool22, true
  %toBool22not23 = zext i1 %toBool22not to i8
  %toBool25 = icmp ne i8 %toBool22not23, 0
  br i1 %toBool25, label %bb27, label %bb26

bb26:                                             ; preds = %bb21
  %74 = load i32* %sparse_mode_addr, align 4
  %75 = icmp eq i32 %74, 3
  br i1 %75, label %bb36, label %bb27

bb27:                                             ; preds = %bb26, %bb21
  %76 = load i8* %empty_extent, align 1
  %toBool28 = icmp ne i8 %76, 0
  %toBool28not = xor i1 %toBool28, true
  %toBool28not29 = zext i1 %toBool28not to i8
  %toBool31 = icmp ne i8 %toBool28not29, 0
  %toBool31not = xor i1 %toBool31, true
  %toBool31not32 = zext i1 %toBool31not to i8
  %toBool34 = icmp ne i8 %toBool31not32, 0
  br i1 %toBool34, label %bb42, label %bb35

bb35:                                             ; preds = %bb27
  %77 = load i32* %sparse_mode_addr, align 4
  %78 = icmp ne i32 %77, 1
  br i1 %78, label %bb36, label %bb42

bb36:                                             ; preds = %bb35, %bb26
  %79 = load i32* %sparse_mode_addr, align 4
  %80 = icmp eq i32 %79, 3
  %81 = zext i1 %80 to i32
  %82 = load i32* %dest_fd_addr, align 4
  %83 = load i8** %dst_name_addr, align 8
  %84 = trunc i32 %81 to i8
  %85 = load i64* %ext_hole_size, align 8
  %86 = call zeroext i8 @create_hole(i32 %82, i8* %83, i8 zeroext %84, i64 %85) nounwind
  %toBool37 = icmp ne i8 %86, 0
  %toBool37not = xor i1 %toBool37, true
  %toBool37not38 = zext i1 %toBool37not to i8
  %toBool40 = icmp ne i8 %toBool37not38, 0
  br i1 %toBool40, label %fail, label %bb41

bb41:                                             ; preds = %bb36
  store i8 1, i8* %wrote_hole_at_eof, align 1
  br label %bb53

bb42:                                             ; preds = %bb35, %bb27
  %87 = load i64* %ext_hole_size, align 8
  store i64 %87, i64* %nzeros, align 8
  %88 = load i8* %empty_extent, align 1
  %toBool43 = icmp ne i8 %88, 0
  br i1 %toBool43, label %bb44, label %bb45

bb44:                                             ; preds = %bb42
  %89 = load i64* %src_total_size_addr, align 8
  %90 = load i64* %dest_pos, align 8
  %91 = sub nsw i64 %89, %90
  %92 = load i64* %ext_hole_size, align 8
  %93 = icmp sle i64 %91, %92
  %min = select i1 %93, i64 %91, i64 %92
  store i64 %min, i64* %nzeros, align 8
  br label %bb45

bb45:                                             ; preds = %bb44, %bb42
  %94 = load i32* %dest_fd_addr, align 4
  %95 = load i64* %nzeros, align 8
  %96 = call zeroext i8 @write_zeros(i32 %94, i64 %95) nounwind
  %toBool46 = icmp ne i8 %96, 0
  %toBool46not = xor i1 %toBool46, true
  %toBool46not47 = zext i1 %toBool46not to i8
  %toBool49 = icmp ne i8 %toBool46not47, 0
  br i1 %toBool49, label %bb50, label %bb51

bb50:                                             ; preds = %bb45
  %97 = load i8** %dst_name_addr, align 8
  %98 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %97) nounwind
  %99 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str6122, i64 0, i64 0)) nounwind
  %100 = call i32* @__errno_location() nounwind readnone
  %101 = load i32* %100, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %101, i8* %99, i8* %98) nounwind
  br label %fail

bb51:                                             ; preds = %bb45
  %102 = load i64* %ext_start, align 8
  %103 = load i64* %src_total_size_addr, align 8
  %104 = icmp sle i64 %102, %103
  %min52 = select i1 %104, i64 %102, i64 %103
  store i64 %min52, i64* %dest_pos, align 8
  br label %bb53

bb53:                                             ; preds = %bb51, %bb41, %bb18
  %105 = load i64* %ext_start, align 8
  store i64 %105, i64* %last_ext_start, align 8
  store i8 0, i8* %empty_extent, align 1
  %106 = load i64* %ext_len, align 8
  store i64 %106, i64* %last_ext_len, align 8
  %107 = load i64* %ext_len, align 8
  %108 = load i32* %sparse_mode_addr, align 4
  %109 = icmp eq i32 %108, 3
  br i1 %109, label %bb54, label %bb55

bb54:                                             ; preds = %bb53
  %110 = load i64* %hole_size_addr, align 8
  store i64 %110, i64* %iftmp.57, align 8
  br label %bb56

bb55:                                             ; preds = %bb53
  store i64 0, i64* %iftmp.57, align 8
  br label %bb56

bb56:                                             ; preds = %bb55, %bb54
  %111 = load i32* %src_fd_addr, align 4
  %112 = load i32* %dest_fd_addr, align 4
  %113 = load i8** %buf_addr, align 8
  %114 = load i64* %buf_size_addr, align 8
  %115 = load i64* %iftmp.57, align 8
  %116 = load i8** %src_name_addr, align 8
  %117 = load i8** %dst_name_addr, align 8
  %118 = call zeroext i8 @sparse_copy(i32 %111, i32 %112, i8* %113, i64 %114, i64 %115, i8 zeroext 1, i8* %116, i8* %117, i64 %107, i64* %n_read, i8* %read_hole) nounwind
  %toBool57 = icmp ne i8 %118, 0
  %toBool57not = xor i1 %toBool57, true
  %toBool57not58 = zext i1 %toBool57not to i8
  %toBool60 = icmp ne i8 %toBool57not58, 0
  br i1 %toBool60, label %fail, label %bb61

bb61:                                             ; preds = %bb56
  %119 = load i64* %n_read, align 8
  %120 = load i64* %ext_start, align 8
  %121 = add nsw i64 %120, %119
  store i64 %121, i64* %dest_pos, align 8
  %122 = load i64* %n_read, align 8
  %123 = icmp ne i64 %122, 0
  br i1 %123, label %bb62, label %bb63

bb62:                                             ; preds = %bb61
  %124 = load i8* %read_hole, align 1
  store i8 %124, i8* %wrote_hole_at_eof, align 1
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %125 = load i64* %dest_pos, align 8
  %126 = load i64* %src_total_size_addr, align 8
  %127 = icmp eq i64 %125, %126
  br i1 %127, label %bb64, label %bb65

bb64:                                             ; preds = %bb63
  %128 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 5
  store i8 1, i8* %128, align 1
  br label %bb69

bb65:                                             ; preds = %bb63
  %129 = load i32* %i, align 4
  %130 = add i32 %129, 1
  store i32 %130, i32* %i, align 4
  br label %bb66

bb66:                                             ; preds = %bb65, %bb10
  %131 = load i32* %i, align 4
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 3
  %134 = load i64* %133, align 8
  %135 = icmp ult i64 %132, %134
  br i1 %135, label %bb11, label %bb67

bb67:                                             ; preds = %bb66
  %136 = load i8* %empty_extent, align 1
  %toBool68 = icmp ne i8 %136, 0
  br i1 %toBool68, label %bb11, label %bb69

bb69:                                             ; preds = %bb67, %bb64
  call void @extent_scan_free(%struct.extent_scan* %scan) nounwind
  %137 = getelementptr inbounds %struct.extent_scan* %scan, i32 0, i32 5
  %138 = load i8* %137, align 1
  %toBool70 = icmp ne i8 %138, 0
  %toBool70not = xor i1 %toBool70, true
  %toBool70not71 = zext i1 %toBool70not to i8
  %toBool73 = icmp ne i8 %toBool70not71, 0
  br i1 %toBool73, label %bb, label %bb74

bb74:                                             ; preds = %bb69, %bb4
  %139 = load i64* %dest_pos, align 8
  %140 = load i64* %src_total_size_addr, align 8
  %141 = icmp slt i64 %139, %140
  br i1 %141, label %bb77, label %bb75

bb75:                                             ; preds = %bb74
  %142 = load i8* %wrote_hole_at_eof, align 1
  %toBool76 = icmp ne i8 %142, 0
  br i1 %toBool76, label %bb77, label %bb86

bb77:                                             ; preds = %bb75, %bb74
  %143 = load i32* %sparse_mode_addr, align 4
  %144 = icmp ne i32 %143, 1
  br i1 %144, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  %145 = load i32* %dest_fd_addr, align 4
  %146 = load i64* %src_total_size_addr, align 8
  %147 = call i32 @ftruncate(i32 %145, i64 %146) nounwind
  %148 = icmp ne i32 %147, 0
  %149 = zext i1 %148 to i8
  store i8 %149, i8* %iftmp.60, align 1
  br label %bb83

bb79:                                             ; preds = %bb77
  %150 = load i64* %src_total_size_addr, align 8
  %151 = load i64* %dest_pos, align 8
  %152 = sub nsw i64 %150, %151
  %153 = load i32* %dest_fd_addr, align 4
  %154 = call zeroext i8 @write_zeros(i32 %153, i64 %152) nounwind
  %toBool80 = icmp ne i8 %154, 0
  %toBool80not = xor i1 %toBool80, true
  %toBool80not81 = zext i1 %toBool80not to i32
  %155 = trunc i32 %toBool80not81 to i8
  store i8 %155, i8* %iftmp.60, align 1
  br label %bb83

bb83:                                             ; preds = %bb79, %bb78
  %156 = load i8* %iftmp.60, align 1
  %toBool84 = icmp ne i8 %156, 0
  br i1 %toBool84, label %bb85, label %bb86

bb85:                                             ; preds = %bb83
  %157 = load i8** %dst_name_addr, align 8
  %158 = call i8* @quotearg_style(i32 4, i8* %157) nounwind
  %159 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str7123, i64 0, i64 0)) nounwind
  %160 = call i32* @__errno_location() nounwind readnone
  %161 = load i32* %160, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %161, i8* %159, i8* %158) nounwind
  store i32 0, i32* %0, align 4
  br label %bb91

bb86:                                             ; preds = %bb83, %bb75
  %162 = load i32* %sparse_mode_addr, align 4
  %163 = icmp eq i32 %162, 3
  br i1 %163, label %bb87, label %bb90

bb87:                                             ; preds = %bb86
  %164 = load i64* %dest_pos, align 8
  %165 = load i64* %src_total_size_addr, align 8
  %166 = icmp slt i64 %164, %165
  br i1 %166, label %bb88, label %bb90

bb88:                                             ; preds = %bb87
  %167 = load i64* %src_total_size_addr, align 8
  %168 = load i64* %dest_pos, align 8
  %169 = sub nsw i64 %167, %168
  %170 = load i32* %dest_fd_addr, align 4
  %171 = load i64* %dest_pos, align 8
  %172 = call i32 @punch_hole(i32 %170, i64 %171, i64 %169) nounwind
  %173 = icmp slt i32 %172, 0
  br i1 %173, label %bb89, label %bb90

bb89:                                             ; preds = %bb88
  %174 = load i8** %dst_name_addr, align 8
  %175 = call i8* @quotearg_style(i32 4, i8* %174) nounwind
  %176 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8]* @.str1117, i64 0, i64 0)) nounwind
  %177 = call i32* @__errno_location() nounwind readnone
  %178 = load i32* %177, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %178, i8* %176, i8* %175) nounwind
  store i32 0, i32* %0, align 4
  br label %bb91

bb90:                                             ; preds = %bb88, %bb87, %bb86
  store i32 1, i32* %0, align 4
  br label %bb91

bb91:                                             ; preds = %bb90, %bb89, %bb85, %fail, %bb9, %bb8
  %179 = load i32* %0, align 4
  store i32 %179, i32* %retval, align 4
  %retval92 = load i32* %retval
  %retval9293 = trunc i32 %retval92 to i8
  ret i8 %retval9293
}

define internal void @extent_scan_free(%struct.extent_scan* %scan) nounwind inlinehint {
entry:
  %scan_addr = alloca %struct.extent_scan*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan_addr
  %0 = load %struct.extent_scan** %scan_addr, align 8
  %1 = getelementptr inbounds %struct.extent_scan* %0, i32 0, i32 6
  %2 = load %struct.extent_info** %1, align 8
  %3 = bitcast %struct.extent_info* %2 to i8*
  call void @free(i8* %3) nounwind
  %4 = load %struct.extent_scan** %scan_addr, align 8
  %5 = getelementptr inbounds %struct.extent_scan* %4, i32 0, i32 6
  store %struct.extent_info* null, %struct.extent_info** %5, align 8
  %6 = load %struct.extent_scan** %scan_addr, align 8
  %7 = getelementptr inbounds %struct.extent_scan* %6, i32 0, i32 3
  store i64 0, i64* %7, align 8
  ret void
}

define internal zeroext i8 @is_ancestor(%struct.stat* %sb, %struct.dir_list* %ancestors) nounwind readonly {
entry:
  %sb_addr = alloca %struct.stat*, align 8
  %ancestors_addr = alloca %struct.dir_list*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %sb, %struct.stat** %sb_addr
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors_addr
  br label %bb4

bb:                                               ; preds = %bb4
  %1 = load %struct.dir_list** %ancestors_addr, align 8
  %2 = getelementptr inbounds %struct.dir_list* %1, i32 0, i32 1
  %3 = load i64* %2, align 8
  %4 = load %struct.stat** %sb_addr, align 8
  %5 = getelementptr inbounds %struct.stat* %4, i32 0, i32 1
  %6 = load i64* %5, align 8
  %7 = icmp eq i64 %3, %6
  br i1 %7, label %bb1, label %bb3

bb1:                                              ; preds = %bb
  %8 = load %struct.dir_list** %ancestors_addr, align 8
  %9 = getelementptr inbounds %struct.dir_list* %8, i32 0, i32 2
  %10 = load i64* %9, align 8
  %11 = load %struct.stat** %sb_addr, align 8
  %12 = getelementptr inbounds %struct.stat* %11, i32 0, i32 0
  %13 = load i64* %12, align 8
  %14 = icmp eq i64 %10, %13
  br i1 %14, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4
  br label %bb6

bb3:                                              ; preds = %bb1, %bb
  %15 = load %struct.dir_list** %ancestors_addr, align 8
  %16 = getelementptr inbounds %struct.dir_list* %15, i32 0, i32 0
  %17 = load %struct.dir_list** %16, align 8
  store %struct.dir_list* %17, %struct.dir_list** %ancestors_addr, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %entry
  %18 = load %struct.dir_list** %ancestors_addr, align 8
  %19 = icmp ne %struct.dir_list* %18, null
  br i1 %19, label %bb, label %bb5

bb5:                                              ; preds = %bb4
  store i32 0, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %20 = load i32* %0, align 4
  store i32 %20, i32* %retval, align 4
  %retval7 = load i32* %retval
  %retval78 = trunc i32 %retval7 to i8
  ret i8 %retval78
}

define internal zeroext i8 @errno_unsupported(i32 %err) nounwind {
entry:
  %err_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.61 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  %1 = load i32* %err_addr, align 4
  %2 = icmp eq i32 %1, 95
  %3 = load i32* %err_addr, align 4
  %4 = icmp eq i32 %3, 61
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.61, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.61, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.61, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal void @copy_attr_error(%struct.error_context* %ctx, i8* %fmt, ...) nounwind {
entry:
  %ctx_addr = alloca %struct.error_context*, align 8
  %fmt_addr = alloca i8*, align 8
  %err = alloca i32
  %ap = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.error_context* %ctx, %struct.error_context** %ctx_addr
  store i8* %fmt, i8** %fmt_addr
  %0 = call i32* @__errno_location() nounwind readnone
  %1 = load i32* %0, align 4
  %2 = call zeroext i8 @errno_unsupported(i32 %1) nounwind
  %toBool = icmp ne i8 %2, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %return

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone
  %4 = load i32* %3, align 4
  store i32 %4, i32* %err, align 4
  %ap4 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap45 = bitcast %struct.__va_list_tag* %ap4 to i8*
  call void @llvm.va_start(i8* %ap45)
  %5 = load i32* %err, align 4
  %6 = load i8** %fmt_addr, align 8
  %ap6 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  call void @verror(i32 0, i32 %5, i8* %6, %struct.__va_list_tag* %ap6) nounwind
  %ap7 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap78 = bitcast %struct.__va_list_tag* %ap7 to i8*
  call void @llvm.va_end(i8* %ap78)
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

declare void @llvm.va_start(i8*) nounwind

declare void @llvm.va_end(i8*) nounwind

define internal void @copy_attr_allerror(%struct.error_context* %ctx, i8* %fmt, ...) nounwind {
entry:
  %ctx_addr = alloca %struct.error_context*, align 8
  %fmt_addr = alloca i8*, align 8
  %err = alloca i32
  %ap = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.error_context* %ctx, %struct.error_context** %ctx_addr
  store i8* %fmt, i8** %fmt_addr
  %0 = call i32* @__errno_location() nounwind readnone
  %1 = load i32* %0, align 4
  store i32 %1, i32* %err, align 4
  %ap1 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap12 = bitcast %struct.__va_list_tag* %ap1 to i8*
  call void @llvm.va_start(i8* %ap12)
  %2 = load i32* %err, align 4
  %3 = load i8** %fmt_addr, align 8
  %ap3 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  call void @verror(i32 0, i32 %2, i8* %3, %struct.__va_list_tag* %ap3) nounwind
  %ap4 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap45 = bitcast %struct.__va_list_tag* %ap4 to i8*
  call void @llvm.va_end(i8* %ap45)
  ret void
}

define internal i8* @copy_attr_quote(%struct.error_context* %ctx, i8* %str) nounwind {
entry:
  %ctx_addr = alloca %struct.error_context*, align 8
  %str_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.error_context* %ctx, %struct.error_context** %ctx_addr
  store i8* %str, i8** %str_addr
  %1 = load i8** %str_addr, align 8
  %2 = call i8* @quotearg_style(i32 4, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define internal void @copy_attr_free(%struct.error_context* %ctx, i8* %str) nounwind {
entry:
  %ctx_addr = alloca %struct.error_context*, align 8
  %str_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.error_context* %ctx, %struct.error_context** %ctx_addr
  store i8* %str, i8** %str_addr
  ret void
}

define internal i32 @check_selinux_attr(i8* %name, %struct.error_context* %ctx) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %ctx_addr = alloca %struct.error_context*, align 8
  %retval = alloca i32
  %iftmp.62 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store %struct.error_context* %ctx, %struct.error_context** %ctx_addr
  %1 = load i8** %name_addr, align 8
  %2 = call i32 @strncmp(i8* %1, i8* getelementptr inbounds ([17 x i8]* @.str8124, i64 0, i64 0), i64 16) nounwind readonly
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %bb2, label %bb

bb:                                               ; preds = %entry
  %4 = load i8** %name_addr, align 8
  %5 = load %struct.error_context** %ctx_addr, align 8
  %6 = call i32 @attr_copy_check_permissions(i8* %4, %struct.error_context* %5) nounwind
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.62, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.62, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %8 = load i32* %iftmp.62, align 4
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

declare i32 @attr_copy_check_permissions(i8*, %struct.error_context*)

define internal zeroext i8 @copy_attr(i8* %src_path, i32 %src_fd, i8* %dst_path, i32 %dst_fd, %struct.cp_options* %x) nounwind {
entry:
  %src_path_addr = alloca i8*, align 8
  %src_fd_addr = alloca i32, align 4
  %dst_path_addr = alloca i8*, align 8
  %dst_fd_addr = alloca i32, align 4
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.70 = alloca i32 (i8*, %struct.error_context*)*
  %iftmp.69 = alloca %struct.error_context*
  %iftmp.68 = alloca i32 (i8*, %struct.error_context*)*
  %iftmp.67 = alloca %struct.error_context*
  %iftmp.66 = alloca void (%struct.error_context*, i8*, ...)*
  %iftmp.65 = alloca i32
  %iftmp.64 = alloca i32
  %iftmp.63 = alloca i32
  %ret = alloca i32
  %all_errors = alloca i8
  %some_errors = alloca i8
  %selinux_done = alloca i8
  %ctx = alloca %struct.error_context
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_path, i8** %src_path_addr
  store i32 %src_fd, i32* %src_fd_addr
  store i8* %dst_path, i8** %dst_path_addr
  store i32 %dst_fd, i32* %dst_fd_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 19
  %3 = load i8* %2, align 2
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb

bb:                                               ; preds = %entry
  %4 = load %struct.cp_options** %x_addr, align 8
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 24
  %6 = load i8* %5, align 1
  %toBool4 = icmp ne i8 %6, 0
  br i1 %toBool4, label %bb5, label %bb6

bb5:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.63, align 4
  br label %bb7

bb6:                                              ; preds = %bb
  store i32 0, i32* %iftmp.63, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %7 = load i32* %iftmp.63, align 4
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* %all_errors, align 1
  %9 = load i8* %all_errors, align 1
  %toBool8 = icmp ne i8 %9, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  %toBool11not = xor i1 %toBool11, true
  %toBool11not12 = zext i1 %toBool11not to i8
  %toBool14 = icmp ne i8 %toBool11not12, 0
  br i1 %toBool14, label %bb24, label %bb15

bb15:                                             ; preds = %bb7
  %10 = load %struct.cp_options** %x_addr, align 8
  %11 = getelementptr inbounds %struct.cp_options* %10, i32 0, i32 25
  %12 = load i8* %11, align 8
  %toBool16 = icmp ne i8 %12, 0
  %toBool16not = xor i1 %toBool16, true
  %toBool16not17 = zext i1 %toBool16not to i8
  %toBool19 = icmp ne i8 %toBool16not17, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  br i1 %toBool22, label %bb24, label %bb23

bb23:                                             ; preds = %bb15
  store i32 1, i32* %iftmp.64, align 4
  br label %bb25

bb24:                                             ; preds = %bb15, %bb7
  store i32 0, i32* %iftmp.64, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %13 = load i32* %iftmp.64, align 4
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* %some_errors, align 1
  %15 = load %struct.cp_options** %x_addr, align 8
  %16 = getelementptr inbounds %struct.cp_options* %15, i32 0, i32 21
  %17 = load i8* %16, align 4
  %toBool26 = icmp ne i8 %17, 0
  br i1 %toBool26, label %bb29, label %bb27

bb27:                                             ; preds = %bb25
  %18 = load %struct.cp_options** %x_addr, align 8
  %19 = getelementptr inbounds %struct.cp_options* %18, i32 0, i32 17
  %20 = load i8* %19, align 8
  %toBool28 = icmp ne i8 %20, 0
  br i1 %toBool28, label %bb29, label %bb30

bb29:                                             ; preds = %bb27, %bb25
  store i32 1, i32* %iftmp.65, align 4
  br label %bb31

bb30:                                             ; preds = %bb27
  store i32 0, i32* %iftmp.65, align 4
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %21 = load i32* %iftmp.65, align 4
  %22 = trunc i32 %21 to i8
  store i8 %22, i8* %selinux_done, align 1
  %23 = load i8* %all_errors, align 1
  %toBool32 = icmp ne i8 %23, 0
  br i1 %toBool32, label %bb33, label %bb34

bb33:                                             ; preds = %bb31
  store void (%struct.error_context*, i8*, ...)* @copy_attr_allerror, void (%struct.error_context*, i8*, ...)** %iftmp.66, align 8
  br label %bb35

bb34:                                             ; preds = %bb31
  store void (%struct.error_context*, i8*, ...)* @copy_attr_error, void (%struct.error_context*, i8*, ...)** %iftmp.66, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %24 = getelementptr inbounds %struct.error_context* %ctx, i32 0, i32 0
  %25 = load void (%struct.error_context*, i8*, ...)** %iftmp.66, align 8
  store void (%struct.error_context*, i8*, ...)* %25, void (%struct.error_context*, i8*, ...)** %24, align 8
  %26 = getelementptr inbounds %struct.error_context* %ctx, i32 0, i32 1
  store i8* (%struct.error_context*, i8*)* @copy_attr_quote, i8* (%struct.error_context*, i8*)** %26, align 8
  %27 = getelementptr inbounds %struct.error_context* %ctx, i32 0, i32 2
  store void (%struct.error_context*, i8*)* @copy_attr_free, void (%struct.error_context*, i8*)** %27, align 8
  %28 = load i32* %src_fd_addr, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %bb48, label %bb36

bb36:                                             ; preds = %bb35
  %30 = load i32* %dst_fd_addr, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %bb48, label %bb37

bb37:                                             ; preds = %bb36
  %32 = load i8* %all_errors, align 1
  %toBool38 = icmp ne i8 %32, 0
  br i1 %toBool38, label %bb41, label %bb39

bb39:                                             ; preds = %bb37
  %33 = load i8* %some_errors, align 1
  %toBool40 = icmp ne i8 %33, 0
  br i1 %toBool40, label %bb41, label %bb42

bb41:                                             ; preds = %bb39, %bb37
  store %struct.error_context* %ctx, %struct.error_context** %iftmp.67, align 8
  br label %bb43

bb42:                                             ; preds = %bb39
  store %struct.error_context* null, %struct.error_context** %iftmp.67, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %34 = load i8* %selinux_done, align 1
  %toBool44 = icmp ne i8 %34, 0
  br i1 %toBool44, label %bb45, label %bb46

bb45:                                             ; preds = %bb43
  store i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)** %iftmp.68, align 8
  br label %bb47

bb46:                                             ; preds = %bb43
  store i32 (i8*, %struct.error_context*)* null, i32 (i8*, %struct.error_context*)** %iftmp.68, align 8
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  %35 = load i8** %src_path_addr, align 8
  %36 = load i32* %src_fd_addr, align 4
  %37 = load i8** %dst_path_addr, align 8
  %38 = load i32* %dst_fd_addr, align 4
  %39 = load i32 (i8*, %struct.error_context*)** %iftmp.68, align 8
  %40 = load %struct.error_context** %iftmp.67, align 8
  %41 = call i32 @attr_copy_fd(i8* %35, i32 %36, i8* %37, i32 %38, i32 (i8*, %struct.error_context*)* %39, %struct.error_context* %40) nounwind
  store i32 %41, i32* %ret, align 4
  br label %bb59

bb48:                                             ; preds = %bb36, %bb35
  %42 = load i8* %all_errors, align 1
  %toBool49 = icmp ne i8 %42, 0
  br i1 %toBool49, label %bb52, label %bb50

bb50:                                             ; preds = %bb48
  %43 = load i8* %some_errors, align 1
  %toBool51 = icmp ne i8 %43, 0
  br i1 %toBool51, label %bb52, label %bb53

bb52:                                             ; preds = %bb50, %bb48
  store %struct.error_context* %ctx, %struct.error_context** %iftmp.69, align 8
  br label %bb54

bb53:                                             ; preds = %bb50
  store %struct.error_context* null, %struct.error_context** %iftmp.69, align 8
  br label %bb54

bb54:                                             ; preds = %bb53, %bb52
  %44 = load i8* %selinux_done, align 1
  %toBool55 = icmp ne i8 %44, 0
  br i1 %toBool55, label %bb56, label %bb57

bb56:                                             ; preds = %bb54
  store i32 (i8*, %struct.error_context*)* @check_selinux_attr, i32 (i8*, %struct.error_context*)** %iftmp.70, align 8
  br label %bb58

bb57:                                             ; preds = %bb54
  store i32 (i8*, %struct.error_context*)* null, i32 (i8*, %struct.error_context*)** %iftmp.70, align 8
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %45 = load i8** %src_path_addr, align 8
  %46 = load i8** %dst_path_addr, align 8
  %47 = load i32 (i8*, %struct.error_context*)** %iftmp.70, align 8
  %48 = load %struct.error_context** %iftmp.69, align 8
  %49 = call i32 @attr_copy_file(i8* %45, i8* %46, i32 (i8*, %struct.error_context*)* %47, %struct.error_context* %48) nounwind
  store i32 %49, i32* %ret, align 4
  br label %bb59

bb59:                                             ; preds = %bb58, %bb47
  %50 = load i32* %ret, align 4
  %51 = icmp eq i32 %50, 0
  %52 = zext i1 %51 to i32
  store i32 %52, i32* %0, align 4
  %53 = load i32* %0, align 4
  store i32 %53, i32* %retval, align 4
  %retval60 = load i32* %retval
  %retval6061 = trunc i32 %retval60 to i8
  ret i8 %retval6061
}

declare i32 @attr_copy_fd(i8*, i32, i8*, i32, i32 (i8*, %struct.error_context*)*, %struct.error_context*)

declare i32 @attr_copy_file(i8*, i8*, i32 (i8*, %struct.error_context*)*, %struct.error_context*)

define internal zeroext i8 @copy_dir(i8* %src_name_in, i8* %dst_name_in, i8 zeroext %new_dst, %struct.stat* %src_sb, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8* %first_dir_created_per_command_line_arg, i8* %copy_into_self) nounwind {
entry:
  %src_name_in_addr = alloca i8*, align 8
  %dst_name_in_addr = alloca i8*, align 8
  %new_dst_addr = alloca i8, align 1
  %src_sb_addr = alloca %struct.stat*, align 8
  %ancestors_addr = alloca %struct.dir_list*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %first_dir_created_per_command_line_arg_addr = alloca i8*, align 8
  %copy_into_self_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %name_space = alloca i8*
  %namep = alloca i8*
  %non_command_line_options = alloca %struct.cp_options
  %ok = alloca i8
  %new_first_dir_created = alloca i8
  %local_copy_into_self = alloca i8
  %src_name = alloca i8*
  %dst_name = alloca i8*
  %first_dir_created = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name_in, i8** %src_name_in_addr
  store i8* %dst_name_in, i8** %dst_name_in_addr
  store i8 %new_dst, i8* %new_dst_addr
  store %struct.stat* %src_sb, %struct.stat** %src_sb_addr
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg_addr
  store i8* %copy_into_self, i8** %copy_into_self_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %non_command_line_options1 = bitcast %struct.cp_options* %non_command_line_options to i8*
  %2 = bitcast %struct.cp_options* %1 to i8*
  %3 = call i8* @memcpy(i8* %non_command_line_options1, i8* %2, i64 72)
  store i8 1, i8* %ok, align 1
  %4 = load i8** %src_name_in_addr, align 8
  %5 = call i8* @savedir(i8* %4, i32 2) nounwind
  store i8* %5, i8** %name_space, align 8
  %6 = load i8** %name_space, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb, label %bb2

bb:                                               ; preds = %entry
  %8 = load i8** %src_name_in_addr, align 8
  %9 = call i8* @quotearg_style(i32 4, i8* %8) nounwind
  %10 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str9125, i64 0, i64 0)) nounwind
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %11, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %12, i8* %10, i8* %9) nounwind
  store i32 0, i32* %0, align 4
  br label %bb9

bb2:                                              ; preds = %entry
  %13 = load %struct.cp_options** %x_addr, align 8
  %14 = getelementptr inbounds %struct.cp_options* %13, i32 0, i32 1
  %15 = load i32* %14, align 4
  %16 = icmp eq i32 %15, 3
  br i1 %16, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %17 = getelementptr inbounds %struct.cp_options* %non_command_line_options, i32 0, i32 1
  store i32 2, i32* %17, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  store i8 0, i8* %new_first_dir_created, align 1
  %18 = load i8** %name_space, align 8
  store i8* %18, i8** %namep, align 8
  br label %bb7

bb5:                                              ; preds = %bb7
  %19 = load i8** %src_name_in_addr, align 8
  %20 = load i8** %namep, align 8
  %21 = call i8* @file_name_concat(i8* %19, i8* %20, i8** null) nounwind
  store i8* %21, i8** %src_name, align 8
  %22 = load i8** %dst_name_in_addr, align 8
  %23 = load i8** %namep, align 8
  %24 = call i8* @file_name_concat(i8* %22, i8* %23, i8** null) nounwind
  store i8* %24, i8** %dst_name, align 8
  %25 = load i8** %first_dir_created_per_command_line_arg_addr, align 8
  %26 = load i8* %25, align 1
  store i8 %26, i8* %first_dir_created, align 1
  %27 = load i8* %ok, align 1
  %28 = zext i8 %27 to i32
  %29 = load i8* %new_dst_addr, align 1
  %30 = zext i8 %29 to i32
  %31 = load i8** %src_name, align 8
  %32 = load i8** %dst_name, align 8
  %33 = trunc i32 %30 to i8
  %34 = load %struct.stat** %src_sb_addr, align 8
  %35 = load %struct.dir_list** %ancestors_addr, align 8
  %36 = call zeroext i8 @copy_internal(i8* %31, i8* %32, i8 zeroext %33, %struct.stat* %34, %struct.dir_list* %35, %struct.cp_options* %non_command_line_options, i8 zeroext 0, i8* %first_dir_created, i8* %local_copy_into_self, i8* null) nounwind
  %37 = zext i8 %36 to i32
  %38 = and i32 %28, %37
  %39 = icmp ne i32 %38, 0
  %40 = zext i1 %39 to i8
  store i8 %40, i8* %ok, align 1
  %41 = load i8** %copy_into_self_addr, align 8
  %42 = load i8* %41, align 1
  %43 = zext i8 %42 to i32
  %44 = load i8* %local_copy_into_self, align 1
  %45 = zext i8 %44 to i32
  %46 = or i32 %43, %45
  %47 = icmp ne i32 %46, 0
  %48 = zext i1 %47 to i8
  %49 = load i8** %copy_into_self_addr, align 8
  store i8 %48, i8* %49, align 1
  %50 = load i8** %dst_name, align 8
  call void @free(i8* %50) nounwind
  %51 = load i8** %src_name, align 8
  call void @free(i8* %51) nounwind
  %52 = load i8* %local_copy_into_self, align 1
  %toBool = icmp ne i8 %52, 0
  br i1 %toBool, label %bb8, label %bb6

bb6:                                              ; preds = %bb5
  %53 = load i8* %new_first_dir_created, align 1
  %54 = zext i8 %53 to i32
  %55 = load i8* %first_dir_created, align 1
  %56 = zext i8 %55 to i32
  %57 = or i32 %54, %56
  %58 = icmp ne i32 %57, 0
  %59 = zext i1 %58 to i8
  store i8 %59, i8* %new_first_dir_created, align 1
  %60 = load i8** %namep, align 8
  %61 = call i64 @strlen(i8* %60) nounwind readonly
  %62 = add i64 %61, 1
  %63 = load i8** %namep, align 8
  %64 = getelementptr inbounds i8* %63, i64 %62
  store i8* %64, i8** %namep, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %65 = load i8** %namep, align 8
  %66 = load i8* %65, align 1
  %67 = icmp ne i8 %66, 0
  br i1 %67, label %bb5, label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %68 = load i8** %name_space, align 8
  call void @free(i8* %68) nounwind
  %69 = load i8** %first_dir_created_per_command_line_arg_addr, align 8
  %70 = load i8* %new_first_dir_created, align 1
  store i8 %70, i8* %69, align 1
  %71 = load i8* %ok, align 1
  %72 = zext i8 %71 to i32
  store i32 %72, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %73 = load i32* %0, align 4
  store i32 %73, i32* %retval, align 4
  %retval10 = load i32* %retval
  %retval1011 = trunc i32 %retval10 to i8
  ret i8 %retval1011
}

define internal i32 @set_owner(%struct.cp_options* %x, i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb, i8 zeroext %new_dst, %struct.stat* %dst_sb) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %dst_name_addr = alloca i8*, align 8
  %dest_desc_addr = alloca i32, align 4
  %src_sb_addr = alloca %struct.stat*, align 8
  %new_dst_addr = alloca i8, align 1
  %dst_sb_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.74 = alloca i32
  %uid = alloca i32
  %gid = alloca i32
  %old_mode = alloca i32
  %new_mode = alloca i32
  %restrictive_temp_mode = alloca i32
  %saved_errno = alloca i32
  %__x = alloca i32
  %saved_errno37 = alloca i32
  %__x38 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i32 %dest_desc, i32* %dest_desc_addr
  store %struct.stat* %src_sb, %struct.stat** %src_sb_addr
  store i8 %new_dst, i8* %new_dst_addr
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb_addr
  %1 = load %struct.stat** %src_sb_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 4
  %3 = load i32* %2, align 4
  store i32 %3, i32* %uid, align 4
  %4 = load %struct.stat** %src_sb_addr, align 8
  %5 = getelementptr inbounds %struct.stat* %4, i32 0, i32 5
  %6 = load i32* %5, align 8
  store i32 %6, i32* %gid, align 4
  %7 = load i8* %new_dst_addr, align 1
  %toBool = icmp ne i8 %7, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb25

bb:                                               ; preds = %entry
  %8 = load %struct.cp_options** %x_addr, align 8
  %9 = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 14
  %10 = load i8* %9, align 1
  %toBool4 = icmp ne i8 %10, 0
  br i1 %toBool4, label %bb9, label %bb5

bb5:                                              ; preds = %bb
  %11 = load %struct.cp_options** %x_addr, align 8
  %12 = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 9
  %13 = load i8* %12, align 8
  %toBool6 = icmp ne i8 %13, 0
  br i1 %toBool6, label %bb9, label %bb7

bb7:                                              ; preds = %bb5
  %14 = load %struct.cp_options** %x_addr, align 8
  %15 = getelementptr inbounds %struct.cp_options* %14, i32 0, i32 27
  %16 = load i8* %15, align 2
  %toBool8 = icmp ne i8 %16, 0
  br i1 %toBool8, label %bb9, label %bb25

bb9:                                              ; preds = %bb7, %bb5, %bb
  %17 = load %struct.stat** %dst_sb_addr, align 8
  %18 = getelementptr inbounds %struct.stat* %17, i32 0, i32 3
  %19 = load i32* %18, align 8
  store i32 %19, i32* %old_mode, align 4
  %20 = load %struct.cp_options** %x_addr, align 8
  %21 = getelementptr inbounds %struct.cp_options* %20, i32 0, i32 14
  %22 = load i8* %21, align 1
  %toBool10 = icmp ne i8 %22, 0
  br i1 %toBool10, label %bb13, label %bb11

bb11:                                             ; preds = %bb9
  %23 = load %struct.cp_options** %x_addr, align 8
  %24 = getelementptr inbounds %struct.cp_options* %23, i32 0, i32 9
  %25 = load i8* %24, align 8
  %toBool12 = icmp ne i8 %25, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb11, %bb9
  %26 = load %struct.stat** %src_sb_addr, align 8
  %27 = getelementptr inbounds %struct.stat* %26, i32 0, i32 3
  %28 = load i32* %27, align 8
  store i32 %28, i32* %iftmp.74, align 4
  br label %bb15

bb14:                                             ; preds = %bb11
  %29 = load %struct.cp_options** %x_addr, align 8
  %30 = getelementptr inbounds %struct.cp_options* %29, i32 0, i32 4
  %31 = load i32* %30, align 8
  store i32 %31, i32* %iftmp.74, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %32 = load i32* %iftmp.74, align 4
  store i32 %32, i32* %new_mode, align 4
  %33 = load i32* %old_mode, align 4
  %34 = load i32* %new_mode, align 4
  %35 = and i32 %33, %34
  %36 = and i32 %35, 448
  store i32 %36, i32* %restrictive_temp_mode, align 4
  %37 = load i32* %new_mode, align 4
  %not = xor i32 %37, -1
  %38 = or i32 %not, 3584
  %39 = load i32* %old_mode, align 4
  %40 = and i32 %38, %39
  %41 = and i32 %40, 4095
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %bb17, label %bb25

bb17:                                             ; preds = %bb15
  %43 = load i8** %dst_name_addr, align 8
  %44 = load i32* %dest_desc_addr, align 4
  %45 = load i32* %restrictive_temp_mode, align 4
  %46 = call i32 @qset_acl(i8* %43, i32 %44, i32 %45) nounwind
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %bb18, label %bb25

bb18:                                             ; preds = %bb17
  %48 = load %struct.cp_options** %x_addr, align 8
  %49 = call zeroext i8 @owner_failure_ok(%struct.cp_options* %48) nounwind
  %toBool19 = icmp ne i8 %49, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  br i1 %toBool22, label %bb23, label %bb24

bb23:                                             ; preds = %bb18
  %50 = load i8** %dst_name_addr, align 8
  %51 = call i8* @quotearg_style(i32 4, i8* %50) nounwind
  %52 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8]* @.str10126, i64 0, i64 0)) nounwind
  %53 = call i32* @__errno_location() nounwind readnone
  %54 = load i32* %53, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %54, i8* %52, i8* %51) nounwind
  br label %bb24

bb24:                                             ; preds = %bb23, %bb18
  %55 = load %struct.cp_options** %x_addr, align 8
  %56 = getelementptr inbounds %struct.cp_options* %55, i32 0, i32 20
  %57 = load i8* %56, align 1
  %58 = zext i8 %57 to i32
  %59 = sub nsw i32 0, %58
  store i32 %59, i32* %0, align 4
  br label %bb48

bb25:                                             ; preds = %bb17, %bb15, %bb7, %entry
  %60 = load i32* %dest_desc_addr, align 4
  %61 = icmp ne i32 %60, -1
  br i1 %61, label %bb26, label %bb32

bb26:                                             ; preds = %bb25
  %62 = load i32* %dest_desc_addr, align 4
  %63 = load i32* %uid, align 4
  %64 = load i32* %gid, align 4
  %65 = call i32 @fchown(i32 %62, i32 %63, i32 %64) nounwind
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %bb27, label %bb28

bb27:                                             ; preds = %bb26
  store i32 1, i32* %0, align 4
  br label %bb48

bb28:                                             ; preds = %bb26
  %67 = call i32* @__errno_location() nounwind readnone
  %68 = load i32* %67, align 4
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %bb30, label %bb29

bb29:                                             ; preds = %bb28
  %70 = call i32* @__errno_location() nounwind readnone
  %71 = load i32* %70, align 4
  %72 = icmp eq i32 %71, 22
  br i1 %72, label %bb30, label %bb39

bb30:                                             ; preds = %bb29, %bb28
  %73 = call i32* @__errno_location() nounwind readnone
  %74 = load i32* %73, align 4
  store i32 %74, i32* %saved_errno, align 4
  %75 = load i32* %dest_desc_addr, align 4
  %76 = load i32* %gid, align 4
  %77 = call i32 @fchown(i32 %75, i32 -1, i32 %76) nounwind
  store i32 %77, i32* %__x, align 4
  %78 = call i32* @__errno_location() nounwind readnone
  %79 = load i32* %saved_errno, align 4
  store i32 %79, i32* %78, align 4
  br label %bb39

bb32:                                             ; preds = %bb25
  %80 = load i8** %dst_name_addr, align 8
  %81 = load i32* %uid, align 4
  %82 = load i32* %gid, align 4
  %83 = call i32 @lchown(i8* %80, i32 %81, i32 %82) nounwind
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
  store i32 1, i32* %0, align 4
  br label %bb48

bb34:                                             ; preds = %bb32
  %85 = call i32* @__errno_location() nounwind readnone
  %86 = load i32* %85, align 4
  %87 = icmp eq i32 %86, 1
  br i1 %87, label %bb36, label %bb35

bb35:                                             ; preds = %bb34
  %88 = call i32* @__errno_location() nounwind readnone
  %89 = load i32* %88, align 4
  %90 = icmp eq i32 %89, 22
  br i1 %90, label %bb36, label %bb39

bb36:                                             ; preds = %bb35, %bb34
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %91, align 4
  store i32 %92, i32* %saved_errno37, align 4
  %93 = load i8** %dst_name_addr, align 8
  %94 = load i32* %gid, align 4
  %95 = call i32 @lchown(i8* %93, i32 -1, i32 %94) nounwind
  store i32 %95, i32* %__x38, align 4
  %96 = call i32* @__errno_location() nounwind readnone
  %97 = load i32* %saved_errno37, align 4
  store i32 %97, i32* %96, align 4
  br label %bb39

bb39:                                             ; preds = %bb29, %bb30, %bb36, %bb35
  %98 = load %struct.cp_options** %x_addr, align 8
  %99 = call zeroext i8 @chown_failure_ok(%struct.cp_options* %98) nounwind readonly
  %toBool40 = icmp ne i8 %99, 0
  %toBool40not = xor i1 %toBool40, true
  %toBool40not41 = zext i1 %toBool40not to i8
  %toBool43 = icmp ne i8 %toBool40not41, 0
  br i1 %toBool43, label %bb44, label %bb47

bb44:                                             ; preds = %bb39
  %100 = load i8** %dst_name_addr, align 8
  %101 = call i8* @quotearg_style(i32 4, i8* %100) nounwind
  %102 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str11127, i64 0, i64 0)) nounwind
  %103 = call i32* @__errno_location() nounwind readnone
  %104 = load i32* %103, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %104, i8* %102, i8* %101) nounwind
  %105 = load %struct.cp_options** %x_addr, align 8
  %106 = getelementptr inbounds %struct.cp_options* %105, i32 0, i32 20
  %107 = load i8* %106, align 1
  %toBool45 = icmp ne i8 %107, 0
  br i1 %toBool45, label %bb46, label %bb47

bb46:                                             ; preds = %bb44
  store i32 -1, i32* %0, align 4
  br label %bb48

bb47:                                             ; preds = %bb44, %bb39
  store i32 0, i32* %0, align 4
  br label %bb48

bb48:                                             ; preds = %bb47, %bb46, %bb33, %bb27, %bb24
  %108 = load i32* %0, align 4
  store i32 %108, i32* %retval, align 4
  %retval49 = load i32* %retval
  ret i32 %retval49
}

define internal void @set_author(i8* %dst_name, i32 %dest_desc, %struct.stat* %src_sb) nounwind {
entry:
  %dst_name_addr = alloca i8*, align 8
  %dest_desc_addr = alloca i32, align 4
  %src_sb_addr = alloca %struct.stat*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst_name, i8** %dst_name_addr
  store i32 %dest_desc, i32* %dest_desc_addr
  store %struct.stat* %src_sb, %struct.stat** %src_sb_addr
  ret void
}

define internal zeroext i8 @set_process_security_ctx(i8* %src_name, i8* %dst_name, i32 %mode, i8 zeroext %new_dst, %struct.cp_options* %x) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %mode_addr = alloca i32, align 4
  %new_dst_addr = alloca i8, align 1
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.76 = alloca i32
  %iftmp.75 = alloca i32
  %all_errors = alloca i8
  %some_errors = alloca i8
  %con = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i32 %mode, i32* %mode_addr
  store i8 %new_dst, i8* %new_dst_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 21
  %3 = load i8* %2, align 4
  %toBool = icmp ne i8 %3, 0
  %4 = load %struct.cp_options** %x_addr, align 8
  br i1 %toBool, label %bb, label %bb63

bb:                                               ; preds = %entry
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 19
  %6 = load i8* %5, align 2
  %toBool1 = icmp ne i8 %6, 0
  %toBool1not = xor i1 %toBool1, true
  %toBool1not2 = zext i1 %toBool1not to i8
  %toBool4 = icmp ne i8 %toBool1not2, 0
  br i1 %toBool4, label %bb7, label %bb5

bb5:                                              ; preds = %bb
  %7 = load %struct.cp_options** %x_addr, align 8
  %8 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 22
  %9 = load i8* %8, align 1
  %toBool6 = icmp ne i8 %9, 0
  br i1 %toBool6, label %bb7, label %bb8

bb7:                                              ; preds = %bb5, %bb
  store i32 1, i32* %iftmp.75, align 4
  br label %bb9

bb8:                                              ; preds = %bb5
  store i32 0, i32* %iftmp.75, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %10 = load i32* %iftmp.75, align 4
  %11 = trunc i32 %10 to i8
  store i8 %11, i8* %all_errors, align 1
  %12 = load i8* %all_errors, align 1
  %toBool10 = icmp ne i8 %12, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb26, label %bb17

bb17:                                             ; preds = %bb9
  %13 = load %struct.cp_options** %x_addr, align 8
  %14 = getelementptr inbounds %struct.cp_options* %13, i32 0, i32 25
  %15 = load i8* %14, align 8
  %toBool18 = icmp ne i8 %15, 0
  %toBool18not = xor i1 %toBool18, true
  %toBool18not19 = zext i1 %toBool18not to i8
  %toBool21 = icmp ne i8 %toBool18not19, 0
  %toBool21not = xor i1 %toBool21, true
  %toBool21not22 = zext i1 %toBool21not to i8
  %toBool24 = icmp ne i8 %toBool21not22, 0
  br i1 %toBool24, label %bb26, label %bb25

bb25:                                             ; preds = %bb17
  store i32 1, i32* %iftmp.76, align 4
  br label %bb27

bb26:                                             ; preds = %bb17, %bb9
  store i32 0, i32* %iftmp.76, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %16 = load i32* %iftmp.76, align 4
  %17 = trunc i32 %16 to i8
  store i8 %17, i8* %some_errors, align 1
  %18 = load i8** %src_name_addr, align 8
  %19 = call i32 @lgetfilecon(i8* %18, i8** %con) nounwind
  %20 = icmp sge i32 %19, 0
  br i1 %20, label %bb28, label %bb46

bb28:                                             ; preds = %bb27
  %21 = load i8** %con, align 8
  %22 = call i32 @setfscreatecon(i8* %21) nounwind
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %bb29, label %bb45

bb29:                                             ; preds = %bb28
  %24 = load i8* %all_errors, align 1
  %toBool30 = icmp ne i8 %24, 0
  br i1 %toBool30, label %bb41, label %bb31

bb31:                                             ; preds = %bb29
  %25 = load i8* %some_errors, align 1
  %toBool32 = icmp ne i8 %25, 0
  %toBool32not = xor i1 %toBool32, true
  %toBool32not33 = zext i1 %toBool32not to i8
  %toBool35 = icmp ne i8 %toBool32not33, 0
  br i1 %toBool35, label %bb42, label %bb36

bb36:                                             ; preds = %bb31
  %26 = call i32* @__errno_location() nounwind readnone
  %27 = load i32* %26, align 4
  %28 = call zeroext i8 @errno_unsupported(i32 %27) nounwind
  %toBool37 = icmp ne i8 %28, 0
  %toBool37not = xor i1 %toBool37, true
  %toBool37not38 = zext i1 %toBool37not to i8
  %toBool40 = icmp ne i8 %toBool37not38, 0
  br i1 %toBool40, label %bb41, label %bb42

bb41:                                             ; preds = %bb36, %bb29
  %29 = load i8** %con, align 8
  %30 = call i8* @quote(i8* %29) nounwind
  %31 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8]* @.str12128, i64 0, i64 0)) nounwind
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %32, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %33, i8* %31, i8* %30) nounwind
  br label %bb42

bb42:                                             ; preds = %bb41, %bb36, %bb31
  %34 = load %struct.cp_options** %x_addr, align 8
  %35 = getelementptr inbounds %struct.cp_options* %34, i32 0, i32 22
  %36 = load i8* %35, align 1
  %toBool43 = icmp ne i8 %36, 0
  br i1 %toBool43, label %bb44, label %bb45

bb44:                                             ; preds = %bb42
  %37 = load i8** %con, align 8
  call void @freecon(i8* %37) nounwind
  store i32 0, i32* %0, align 4
  br label %bb75

bb45:                                             ; preds = %bb42, %bb28
  %38 = load i8** %con, align 8
  call void @freecon(i8* %38) nounwind
  br label %bb74

bb46:                                             ; preds = %bb27
  %39 = load i8* %all_errors, align 1
  %toBool47 = icmp ne i8 %39, 0
  br i1 %toBool47, label %bb58, label %bb48

bb48:                                             ; preds = %bb46
  %40 = load i8* %some_errors, align 1
  %toBool49 = icmp ne i8 %40, 0
  %toBool49not = xor i1 %toBool49, true
  %toBool49not50 = zext i1 %toBool49not to i8
  %toBool52 = icmp ne i8 %toBool49not50, 0
  br i1 %toBool52, label %bb59, label %bb53

bb53:                                             ; preds = %bb48
  %41 = call i32* @__errno_location() nounwind readnone
  %42 = load i32* %41, align 4
  %43 = call zeroext i8 @errno_unsupported(i32 %42) nounwind
  %toBool54 = icmp ne i8 %43, 0
  %toBool54not = xor i1 %toBool54, true
  %toBool54not55 = zext i1 %toBool54not to i8
  %toBool57 = icmp ne i8 %toBool54not55, 0
  br i1 %toBool57, label %bb58, label %bb59

bb58:                                             ; preds = %bb53, %bb46
  %44 = load i8** %src_name_addr, align 8
  %45 = call i8* @quotearg_style(i32 4, i8* %44) nounwind
  %46 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8]* @.str13129, i64 0, i64 0)) nounwind
  %47 = call i32* @__errno_location() nounwind readnone
  %48 = load i32* %47, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %48, i8* %46, i8* %45) nounwind
  br label %bb59

bb59:                                             ; preds = %bb58, %bb53, %bb48
  %49 = load %struct.cp_options** %x_addr, align 8
  %50 = getelementptr inbounds %struct.cp_options* %49, i32 0, i32 22
  %51 = load i8* %50, align 1
  %toBool60 = icmp ne i8 %51, 0
  br i1 %toBool60, label %bb61, label %bb74

bb61:                                             ; preds = %bb59
  store i32 0, i32* %0, align 4
  br label %bb75

bb63:                                             ; preds = %entry
  %52 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 17
  %53 = load i8* %52, align 8
  %toBool64 = icmp ne i8 %53, 0
  br i1 %toBool64, label %bb65, label %bb74

bb65:                                             ; preds = %bb63
  %54 = load i8* %new_dst_addr, align 1
  %toBool66 = icmp ne i8 %54, 0
  br i1 %toBool66, label %bb67, label %bb74

bb67:                                             ; preds = %bb65
  %55 = load i8** %dst_name_addr, align 8
  %56 = load i32* %mode_addr, align 4
  %57 = call i32 @defaultcon(i8* %55, i32 %56) nounwind
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %bb68, label %bb74

bb68:                                             ; preds = %bb67
  %59 = call i32* @__errno_location() nounwind readnone
  %60 = load i32* %59, align 4
  %61 = call zeroext i8 @ignorable_ctx_err(i32 %60) nounwind
  %toBool69 = icmp ne i8 %61, 0
  %toBool69not = xor i1 %toBool69, true
  %toBool69not70 = zext i1 %toBool69not to i8
  %toBool72 = icmp ne i8 %toBool69not70, 0
  br i1 %toBool72, label %bb73, label %bb74

bb73:                                             ; preds = %bb68
  %62 = load i8** %dst_name_addr, align 8
  %63 = call i8* @quotearg_style(i32 4, i8* %62) nounwind
  %64 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8]* @.str14130, i64 0, i64 0)) nounwind
  %65 = call i32* @__errno_location() nounwind readnone
  %66 = load i32* %65, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %66, i8* %64, i8* %63) nounwind
  br label %bb74

bb74:                                             ; preds = %bb45, %bb59, %bb73, %bb68, %bb67, %bb65, %bb63
  store i32 1, i32* %0, align 4
  br label %bb75

bb75:                                             ; preds = %bb74, %bb61, %bb44
  %67 = load i32* %0, align 4
  store i32 %67, i32* %retval, align 4
  %retval76 = load i32* %retval
  %retval7677 = trunc i32 %retval76 to i8
  ret i8 %retval7677
}

define internal i32 @defaultcon(i8* %path, i32 %mode) nounwind inlinehint {
entry:
  %path_addr = alloca i8*, align 8
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i32 %mode, i32* %mode_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal zeroext i8 @ignorable_ctx_err(i32 %err) nounwind inlinehint {
entry:
  %err_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.36 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %err, i32* %err_addr
  %1 = load i32* %err_addr, align 4
  %2 = icmp eq i32 %1, 95
  %3 = load i32* %err_addr, align 4
  %4 = icmp eq i32 %3, 61
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.36, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.36, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.36, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal zeroext i8 @set_file_security_ctx(i8* %dst_name, i8 zeroext %process_local, i8 zeroext %recurse, %struct.cp_options* %x) nounwind {
entry:
  %dst_name_addr = alloca i8*, align 8
  %process_local_addr = alloca i8, align 1
  %recurse_addr = alloca i8, align 1
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.82 = alloca i32
  %iftmp.81 = alloca i32
  %all_errors = alloca i8
  %some_errors = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst_name, i8** %dst_name_addr
  store i8 %process_local, i8* %process_local_addr
  store i8 %recurse, i8* %recurse_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 19
  %3 = load i8* %2, align 2
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb

bb:                                               ; preds = %entry
  %4 = load %struct.cp_options** %x_addr, align 8
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 22
  %6 = load i8* %5, align 1
  %toBool4 = icmp ne i8 %6, 0
  br i1 %toBool4, label %bb5, label %bb6

bb5:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.81, align 4
  br label %bb7

bb6:                                              ; preds = %bb
  store i32 0, i32* %iftmp.81, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %7 = load i32* %iftmp.81, align 4
  %8 = trunc i32 %7 to i8
  store i8 %8, i8* %all_errors, align 1
  %9 = load i8* %all_errors, align 1
  %toBool8 = icmp ne i8 %9, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  %toBool11not = xor i1 %toBool11, true
  %toBool11not12 = zext i1 %toBool11not to i8
  %toBool14 = icmp ne i8 %toBool11not12, 0
  br i1 %toBool14, label %bb24, label %bb15

bb15:                                             ; preds = %bb7
  %10 = load %struct.cp_options** %x_addr, align 8
  %11 = getelementptr inbounds %struct.cp_options* %10, i32 0, i32 25
  %12 = load i8* %11, align 8
  %toBool16 = icmp ne i8 %12, 0
  %toBool16not = xor i1 %toBool16, true
  %toBool16not17 = zext i1 %toBool16not to i8
  %toBool19 = icmp ne i8 %toBool16not17, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  br i1 %toBool22, label %bb24, label %bb23

bb23:                                             ; preds = %bb15
  store i32 1, i32* %iftmp.82, align 4
  br label %bb25

bb24:                                             ; preds = %bb15, %bb7
  store i32 0, i32* %iftmp.82, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %13 = load i32* %iftmp.82, align 4
  %14 = trunc i32 %13 to i8
  store i8 %14, i8* %some_errors, align 1
  %15 = load i8* %process_local_addr, align 1
  %16 = zext i8 %15 to i32
  %17 = load i8* %recurse_addr, align 1
  %18 = zext i8 %17 to i32
  %19 = load i8** %dst_name_addr, align 8
  %20 = trunc i32 %18 to i8
  %21 = trunc i32 %16 to i8
  %22 = call zeroext i8 @restorecon(i8* %19, i8 zeroext %20, i8 zeroext %21) nounwind
  %toBool26 = icmp ne i8 %22, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  br i1 %toBool29, label %bb30, label %bb44

bb30:                                             ; preds = %bb25
  %23 = load i8* %all_errors, align 1
  %toBool31 = icmp ne i8 %23, 0
  br i1 %toBool31, label %bb42, label %bb32

bb32:                                             ; preds = %bb30
  %24 = load i8* %some_errors, align 1
  %toBool33 = icmp ne i8 %24, 0
  %toBool33not = xor i1 %toBool33, true
  %toBool33not34 = zext i1 %toBool33not to i8
  %toBool36 = icmp ne i8 %toBool33not34, 0
  br i1 %toBool36, label %bb43, label %bb37

bb37:                                             ; preds = %bb32
  %25 = call i32* @__errno_location() nounwind readnone
  %26 = load i32* %25, align 4
  %27 = call zeroext i8 @errno_unsupported(i32 %26) nounwind
  %toBool38 = icmp ne i8 %27, 0
  %toBool38not = xor i1 %toBool38, true
  %toBool38not39 = zext i1 %toBool38not to i8
  %toBool41 = icmp ne i8 %toBool38not39, 0
  br i1 %toBool41, label %bb42, label %bb43

bb42:                                             ; preds = %bb37, %bb30
  %28 = load i8** %dst_name_addr, align 8
  %29 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %28) nounwind
  %30 = call i8* @gettext(i8* getelementptr inbounds ([41 x i8]* @.str15131, i64 0, i64 0)) nounwind
  %31 = call i32* @__errno_location() nounwind readnone
  %32 = load i32* %31, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %32, i8* %30, i8* %29) nounwind
  br label %bb43

bb43:                                             ; preds = %bb42, %bb37, %bb32
  store i32 0, i32* %0, align 4
  br label %bb45

bb44:                                             ; preds = %bb25
  store i32 1, i32* %0, align 4
  br label %bb45

bb45:                                             ; preds = %bb44, %bb43
  %33 = load i32* %0, align 4
  store i32 %33, i32* %retval, align 4
  %retval46 = load i32* %retval
  %retval4647 = trunc i32 %retval46 to i8
  ret i8 %retval4647
}

define internal zeroext i8 @restorecon(i8* %path, i8 zeroext %recurse, i8 zeroext %preserve) nounwind inlinehint {
entry:
  %path_addr = alloca i8*, align 8
  %recurse_addr = alloca i8, align 1
  %preserve_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i8 %recurse, i8* %recurse_addr
  store i8 %preserve, i8* %preserve_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 0, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal i32 @fchmod_or_lchmod(i32 %desc, i8* %name, i32 %mode) nounwind {
entry:
  %desc_addr = alloca i32, align 4
  %name_addr = alloca i8*, align 8
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desc, i32* %desc_addr
  store i8* %name, i8** %name_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i32* %desc_addr, align 4
  %2 = icmp sge i32 %1, 0
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i32* %desc_addr, align 4
  %4 = load i32* %mode_addr, align 4
  %5 = call i32 @fchmod(i32 %3, i32 %4) nounwind
  store i32 %5, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i8** %name_addr, align 8
  %7 = load i32* %mode_addr, align 4
  %8 = call i32 @chmod(i8* %6, i32 %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal zeroext i8 @is_probably_sparse(%struct.stat* %sb) nounwind {
entry:
  %sb_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %iftmp.83 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %sb, %struct.stat** %sb_addr
  %1 = load %struct.stat** %sb_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 3
  %3 = load i32* %2, align 8
  %4 = and i32 %3, 61440
  %5 = icmp ne i32 %4, 32768
  br i1 %5, label %bb2, label %bb

bb:                                               ; preds = %entry
  %6 = load %struct.stat** %sb_addr, align 8
  %7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 10
  %8 = load i64* %7, align 8
  %9 = load %struct.stat** %sb_addr, align 8
  %10 = getelementptr inbounds %struct.stat* %9, i32 0, i32 8
  %11 = load i64* %10, align 8
  %int_cast_to_i64 = bitcast i64 512 to i64
  %12 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %13 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %13, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %14 = sdiv i64 %11, 512
  %15 = icmp sge i64 %8, %14
  br i1 %15, label %bb2, label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit
  store i32 1, i32* %iftmp.83, align 4
  br label %bb3

bb2:                                              ; preds = %klee_div_zero_check.exit, %entry
  store i32 0, i32* %iftmp.83, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %16 = load i32* %iftmp.83, align 4
  %17 = trunc i32 %16 to i8
  %18 = zext i8 %17 to i32
  store i32 %18, i32* %0, align 4
  %19 = load i32* %0, align 4
  store i32 %19, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal zeroext i8 @copy_reg(i8* %src_name, i8* %dst_name, %struct.cp_options* %x, i32 %dst_mode, i32 %omitted_permissions, i8* %new_dst, %struct.stat* %src_sb) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %dst_mode_addr = alloca i32, align 4
  %omitted_permissions_addr = alloca i32, align 4
  %new_dst_addr = alloca i8*, align 8
  %src_sb_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %iftmp.89 = alloca i64
  %iftmp.87 = alloca i32
  %iftmp.86 = alloca i64
  %iftmp.85 = alloca i32
  %0 = alloca i32
  %iftmp.84 = alloca i32
  %buf = alloca i8*
  %buf_alloc = alloca i8*
  %name_alloc = alloca i8*
  %dest_desc = alloca i32
  %dest_errno = alloca i32
  %source_desc = alloca i32
  %src_mode = alloca i32
  %sb = alloca %struct.stat
  %src_open_sb = alloca %struct.stat
  %return_val = alloca i8
  %data_copy_required = alloca i8
  %open_flags = alloca i32
  %open_flags48 = alloca i32
  %dangling_link_sb = alloca %struct.stat
  %clone_ok = alloca i8
  %buf_alignment = alloca i64
  %buf_size = alloca i64
  %hole_size = alloca i64
  %make_holes = alloca i8
  %sparse_src = alloca i8
  %n_read = alloca i64
  %wrote_hole_at_eof = alloca i8
  %blcm_max = alloca i64
  %blcm = alloca i64
  %normal_copy_required = alloca i8
  %timespec = alloca [2 x %struct.timespec]
  %access_changed = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i32 %dst_mode, i32* %dst_mode_addr
  store i32 %omitted_permissions, i32* %omitted_permissions_addr
  store i8* %new_dst, i8** %new_dst_addr
  store %struct.stat* %src_sb, %struct.stat** %src_sb_addr
  store i8* null, i8** %buf_alloc, align 8
  store i8* null, i8** %name_alloc, align 8
  %1 = load %struct.stat** %src_sb_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 3
  %3 = load i32* %2, align 8
  store i32 %3, i32* %src_mode, align 4
  store i8 1, i8* %return_val, align 1
  %4 = load %struct.cp_options** %x_addr, align 8
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 19
  %6 = load i8* %5, align 2
  store i8 %6, i8* %data_copy_required, align 1
  %7 = load %struct.cp_options** %x_addr, align 8
  %8 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 1
  %9 = load i32* %8, align 4
  %10 = icmp eq i32 %9, 2
  br i1 %10, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 131072, i32* %iftmp.84, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %iftmp.84, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %11 = load i8** %src_name_addr, align 8
  %12 = load i32* %iftmp.84, align 4
  %13 = call i32 (i8*, i32, ...)* @open_safer(i8* %11, i32 %12) nounwind
  store i32 %13, i32* %source_desc, align 4
  %14 = load i32* %source_desc, align 4
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load i8** %src_name_addr, align 8
  %17 = call i8* @quotearg_style(i32 4, i8* %16) nounwind
  %18 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str16132, i64 0, i64 0)) nounwind
  %19 = call i32* @__errno_location() nounwind readnone
  %20 = load i32* %19, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %20, i8* %18, i8* %17) nounwind
  store i32 0, i32* %0, align 4
  br label %bb221

bb4:                                              ; preds = %bb2
  %21 = load i32* %source_desc, align 4
  %22 = call i32 @fstat(i32 %21, %struct.stat* %src_open_sb) nounwind
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %24 = load i8** %src_name_addr, align 8
  %25 = call i8* @quotearg_style(i32 4, i8* %24) nounwind
  %26 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str17133, i64 0, i64 0)) nounwind
  %27 = call i32* @__errno_location() nounwind readnone
  %28 = load i32* %27, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %28, i8* %26, i8* %25) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb6:                                              ; preds = %bb4
  %29 = load %struct.stat** %src_sb_addr, align 8
  %30 = getelementptr inbounds %struct.stat* %29, i32 0, i32 1
  %31 = load i64* %30, align 8
  %32 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 1
  %33 = load i64* %32, align 8
  %34 = icmp ne i64 %31, %33
  br i1 %34, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %35 = load %struct.stat** %src_sb_addr, align 8
  %36 = getelementptr inbounds %struct.stat* %35, i32 0, i32 0
  %37 = load i64* %36, align 8
  %38 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 0
  %39 = load i64* %38, align 8
  %40 = icmp ne i64 %37, %39
  br i1 %40, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb6
  %41 = load i8** %src_name_addr, align 8
  %42 = call i8* @quotearg_style(i32 4, i8* %41) nounwind
  %43 = call i8* @gettext(i8* getelementptr inbounds ([56 x i8]* @.str18134, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %43, i8* %42) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb9:                                              ; preds = %bb7
  %44 = load i8** %new_dst_addr, align 8
  %45 = load i8* %44, align 1
  %toBool = icmp ne i8 %45, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot10 = zext i1 %toBoolnot to i8
  %toBool12 = icmp ne i8 %toBoolnot10, 0
  br i1 %toBool12, label %bb13, label %bb46

bb13:                                             ; preds = %bb9
  %46 = load %struct.cp_options** %x_addr, align 8
  %47 = getelementptr inbounds %struct.cp_options* %46, i32 0, i32 19
  %48 = load i8* %47, align 2
  %toBool14 = icmp ne i8 %48, 0
  br i1 %toBool14, label %bb15, label %bb16

bb15:                                             ; preds = %bb13
  store i32 513, i32* %iftmp.85, align 4
  br label %bb17

bb16:                                             ; preds = %bb13
  store i32 1, i32* %iftmp.85, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %iftmp.85, align 4
  store i32 %49, i32* %open_flags, align 4
  %50 = load i8** %dst_name_addr, align 8
  %51 = load i32* %open_flags, align 4
  %52 = call i32 (i8*, i32, ...)* @open_safer(i8* %50, i32 %51) nounwind
  store i32 %52, i32* %dest_desc, align 4
  %53 = call i32* @__errno_location() nounwind readnone
  %54 = load i32* %53, align 4
  store i32 %54, i32* %dest_errno, align 4
  %55 = load %struct.cp_options** %x_addr, align 8
  %56 = getelementptr inbounds %struct.cp_options* %55, i32 0, i32 17
  %57 = load i8* %56, align 8
  %toBool18 = icmp ne i8 %57, 0
  br i1 %toBool18, label %bb21, label %bb19

bb19:                                             ; preds = %bb17
  %58 = load %struct.cp_options** %x_addr, align 8
  %59 = getelementptr inbounds %struct.cp_options* %58, i32 0, i32 21
  %60 = load i8* %59, align 4
  %toBool20 = icmp ne i8 %60, 0
  br i1 %toBool20, label %bb21, label %bb30

bb21:                                             ; preds = %bb19, %bb17
  %61 = load i32* %dest_desc, align 4
  %62 = icmp sge i32 %61, 0
  br i1 %62, label %bb22, label %bb30

bb22:                                             ; preds = %bb21
  %63 = load %struct.cp_options** %x_addr, align 8
  %64 = getelementptr inbounds %struct.cp_options* %63, i32 0, i32 21
  %65 = load i8* %64, align 4
  %66 = zext i8 %65 to i32
  %67 = load i8** %dst_name_addr, align 8
  %68 = trunc i32 %66 to i8
  %69 = load %struct.cp_options** %x_addr, align 8
  %70 = call zeroext i8 @set_file_security_ctx(i8* %67, i8 zeroext %68, i8 zeroext 0, %struct.cp_options* %69) nounwind
  %toBool23 = icmp ne i8 %70, 0
  %toBool23not = xor i1 %toBool23, true
  %toBool23not24 = zext i1 %toBool23not to i8
  %toBool26 = icmp ne i8 %toBool23not24, 0
  br i1 %toBool26, label %bb27, label %bb30

bb27:                                             ; preds = %bb22
  %71 = load %struct.cp_options** %x_addr, align 8
  %72 = getelementptr inbounds %struct.cp_options* %71, i32 0, i32 22
  %73 = load i8* %72, align 1
  %toBool28 = icmp ne i8 %73, 0
  br i1 %toBool28, label %bb29, label %bb30

bb29:                                             ; preds = %bb27
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb30:                                             ; preds = %bb27, %bb22, %bb21, %bb19
  %74 = load i32* %dest_desc, align 4
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %bb31, label %bb46

bb31:                                             ; preds = %bb30
  %76 = load %struct.cp_options** %x_addr, align 8
  %77 = getelementptr inbounds %struct.cp_options* %76, i32 0, i32 7
  %78 = load i8* %77, align 2
  %toBool32 = icmp ne i8 %78, 0
  br i1 %toBool32, label %bb33, label %bb46

bb33:                                             ; preds = %bb31
  %79 = load i8** %dst_name_addr, align 8
  %80 = call i32 @unlink(i8* %79) nounwind
  %81 = icmp ne i32 %80, 0
  br i1 %81, label %bb34, label %bb35

bb34:                                             ; preds = %bb33
  %82 = load i8** %dst_name_addr, align 8
  %83 = call i8* @quotearg_style(i32 4, i8* %82) nounwind
  %84 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str19135, i64 0, i64 0)) nounwind
  %85 = call i32* @__errno_location() nounwind readnone
  %86 = load i32* %85, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %86, i8* %84, i8* %83) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb35:                                             ; preds = %bb33
  %87 = load %struct.cp_options** %x_addr, align 8
  %88 = getelementptr inbounds %struct.cp_options* %87, i32 0, i32 30
  %89 = load i8* %88, align 1
  %toBool36 = icmp ne i8 %89, 0
  br i1 %toBool36, label %bb37, label %bb38

bb37:                                             ; preds = %bb35
  %90 = load i8** %dst_name_addr, align 8
  %91 = call i8* @quotearg_style(i32 4, i8* %90) nounwind
  %92 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str20136, i64 0, i64 0)) nounwind
  %93 = call i32 (i8*, ...)* @printf(i8* noalias %92, i8* %91) nounwind
  br label %bb38

bb38:                                             ; preds = %bb37, %bb35
  %94 = load i8** %new_dst_addr, align 8
  store i8 1, i8* %94, align 1
  %95 = load %struct.cp_options** %x_addr, align 8
  %96 = getelementptr inbounds %struct.cp_options* %95, i32 0, i32 17
  %97 = load i8* %96, align 8
  %toBool39 = icmp ne i8 %97, 0
  br i1 %toBool39, label %bb40, label %bb46

bb40:                                             ; preds = %bb38
  %98 = load i8** %new_dst_addr, align 8
  %99 = load i8* %98, align 1
  %100 = zext i8 %99 to i32
  %101 = load i8** %src_name_addr, align 8
  %102 = load i8** %dst_name_addr, align 8
  %103 = load i32* %dst_mode_addr, align 4
  %104 = trunc i32 %100 to i8
  %105 = load %struct.cp_options** %x_addr, align 8
  %106 = call zeroext i8 @set_process_security_ctx(i8* %101, i8* %102, i32 %103, i8 zeroext %104, %struct.cp_options* %105) nounwind
  %toBool41 = icmp ne i8 %106, 0
  %toBool41not = xor i1 %toBool41, true
  %toBool41not42 = zext i1 %toBool41not to i8
  %toBool44 = icmp ne i8 %toBool41not42, 0
  br i1 %toBool44, label %bb45, label %bb46

bb45:                                             ; preds = %bb40
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb46:                                             ; preds = %bb40, %bb38, %bb31, %bb30, %bb9
  %107 = load i8** %new_dst_addr, align 8
  %108 = load i8* %107, align 1
  %toBool47 = icmp ne i8 %108, 0
  br i1 %toBool47, label %open_with_O_CREAT, label %bb70

open_with_O_CREAT:                                ; preds = %bb83, %bb46
  store i32 65, i32* %open_flags48, align 4
  %109 = load i32* %omitted_permissions_addr, align 4
  %not = xor i32 %109, -1
  %110 = load i32* %dst_mode_addr, align 4
  %111 = and i32 %not, %110
  %112 = load i32* %open_flags48, align 4
  %113 = or i32 %112, 128
  %114 = load i8** %dst_name_addr, align 8
  %115 = call i32 (i8*, i32, ...)* @open_safer(i8* %114, i32 %113, i32 %111) nounwind
  store i32 %115, i32* %dest_desc, align 4
  %116 = call i32* @__errno_location() nounwind readnone
  %117 = load i32* %116, align 4
  store i32 %117, i32* %dest_errno, align 4
  %118 = load i32* %dest_desc, align 4
  %119 = icmp slt i32 %118, 0
  br i1 %119, label %bb50, label %bb64

bb50:                                             ; preds = %open_with_O_CREAT
  %120 = load i32* %dest_errno, align 4
  %121 = icmp eq i32 %120, 17
  br i1 %121, label %bb51, label %bb64

bb51:                                             ; preds = %bb50
  %122 = load %struct.cp_options** %x_addr, align 8
  %123 = getelementptr inbounds %struct.cp_options* %122, i32 0, i32 9
  %124 = load i8* %123, align 8
  %toBool52 = icmp ne i8 %124, 0
  %toBool52not = xor i1 %toBool52, true
  %toBool52not53 = zext i1 %toBool52not to i8
  %toBool55 = icmp ne i8 %toBool52not53, 0
  br i1 %toBool55, label %bb56, label %bb64

bb56:                                             ; preds = %bb51
  %125 = load i8** %dst_name_addr, align 8
  %126 = call i32 @lstat(i8* noalias %125, %struct.stat* noalias %dangling_link_sb) nounwind
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %bb57, label %bb64

bb57:                                             ; preds = %bb56
  %128 = getelementptr inbounds %struct.stat* %dangling_link_sb, i32 0, i32 3
  %129 = load i32* %128, align 8
  %130 = and i32 %129, 61440
  %131 = icmp eq i32 %130, 40960
  br i1 %131, label %bb58, label %bb64

bb58:                                             ; preds = %bb57
  %132 = load %struct.cp_options** %x_addr, align 8
  %133 = getelementptr inbounds %struct.cp_options* %132, i32 0, i32 32
  %134 = load i8* %133, align 1
  %toBool59 = icmp ne i8 %134, 0
  br i1 %toBool59, label %bb60, label %bb63

bb60:                                             ; preds = %bb58
  %135 = load i32* %omitted_permissions_addr, align 4
  %not61 = xor i32 %135, -1
  %136 = load i32* %dst_mode_addr, align 4
  %137 = and i32 %not61, %136
  %138 = load i8** %dst_name_addr, align 8
  %139 = load i32* %open_flags48, align 4
  %140 = call i32 (i8*, i32, ...)* @open_safer(i8* %138, i32 %139, i32 %137) nounwind
  store i32 %140, i32* %dest_desc, align 4
  %141 = call i32* @__errno_location() nounwind readnone
  %142 = load i32* %141, align 4
  store i32 %142, i32* %dest_errno, align 4
  br label %bb64

bb63:                                             ; preds = %bb58
  %143 = load i8** %dst_name_addr, align 8
  %144 = call i8* @quotearg_style(i32 4, i8* %143) nounwind
  %145 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8]* @.str21137, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %145, i8* %144) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb64:                                             ; preds = %bb60, %bb57, %bb56, %bb51, %bb50, %open_with_O_CREAT
  %146 = load i32* %dest_desc, align 4
  %147 = icmp slt i32 %146, 0
  br i1 %147, label %bb65, label %bb71

bb65:                                             ; preds = %bb64
  %148 = load i32* %dest_errno, align 4
  %149 = icmp eq i32 %148, 21
  br i1 %149, label %bb66, label %bb71

bb66:                                             ; preds = %bb65
  %150 = load i8** %dst_name_addr, align 8
  %151 = load i8* %150, align 1
  %152 = icmp ne i8 %151, 0
  br i1 %152, label %bb67, label %bb71

bb67:                                             ; preds = %bb66
  %153 = load i8** %dst_name_addr, align 8
  %154 = call i64 @strlen(i8* %153) nounwind readonly
  %155 = sub i64 %154, 1
  %156 = load i8** %dst_name_addr, align 8
  %157 = getelementptr inbounds i8* %156, i64 %155
  %158 = load i8* %157, align 1
  %159 = icmp eq i8 %158, 47
  br i1 %159, label %bb68, label %bb71

bb68:                                             ; preds = %bb67
  store i32 20, i32* %dest_errno, align 4
  br label %bb71

bb70:                                             ; preds = %bb46
  store i32 0, i32* %omitted_permissions_addr, align 4
  br label %bb71

bb71:                                             ; preds = %bb64, %bb65, %bb66, %bb67, %bb68, %bb70
  %160 = load i32* %dest_desc, align 4
  %161 = icmp slt i32 %160, 0
  br i1 %161, label %bb72, label %bb85

bb72:                                             ; preds = %bb71
  %162 = load i32* %dest_errno, align 4
  %163 = icmp eq i32 %162, 2
  br i1 %163, label %bb73, label %bb84

bb73:                                             ; preds = %bb72
  %164 = load i8** %new_dst_addr, align 8
  %165 = load i8* %164, align 1
  %toBool74 = icmp ne i8 %165, 0
  %toBool74not = xor i1 %toBool74, true
  %toBool74not75 = zext i1 %toBool74not to i8
  %toBool77 = icmp ne i8 %toBool74not75, 0
  br i1 %toBool77, label %bb78, label %bb84

bb78:                                             ; preds = %bb73
  %166 = load %struct.cp_options** %x_addr, align 8
  %167 = getelementptr inbounds %struct.cp_options* %166, i32 0, i32 9
  %168 = load i8* %167, align 8
  %toBool79 = icmp ne i8 %168, 0
  %toBool79not = xor i1 %toBool79, true
  %toBool79not80 = zext i1 %toBool79not to i8
  %toBool82 = icmp ne i8 %toBool79not80, 0
  br i1 %toBool82, label %bb83, label %bb84

bb83:                                             ; preds = %bb78
  %169 = load i8** %new_dst_addr, align 8
  store i8 1, i8* %169, align 1
  br label %open_with_O_CREAT

bb84:                                             ; preds = %bb78, %bb73, %bb72
  %170 = load i8** %dst_name_addr, align 8
  %171 = call i8* @quotearg_style(i32 4, i8* %170) nounwind
  %172 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str22138, i64 0, i64 0)) nounwind
  %173 = load i32* %dest_errno, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %173, i8* %172, i8* %171) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

bb85:                                             ; preds = %bb71
  %174 = load i32* %dest_desc, align 4
  %175 = call i32 @fstat(i32 %174, %struct.stat* %sb) nounwind
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %bb86, label %bb87

bb86:                                             ; preds = %bb85
  %177 = load i8** %dst_name_addr, align 8
  %178 = call i8* @quotearg_style(i32 4, i8* %177) nounwind
  %179 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str17133, i64 0, i64 0)) nounwind
  %180 = call i32* @__errno_location() nounwind readnone
  %181 = load i32* %180, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %181, i8* %179, i8* %178) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb87:                                             ; preds = %bb85
  %182 = load i8* %data_copy_required, align 1
  %toBool88 = icmp ne i8 %182, 0
  br i1 %toBool88, label %bb89, label %bb100

bb89:                                             ; preds = %bb87
  %183 = load %struct.cp_options** %x_addr, align 8
  %184 = getelementptr inbounds %struct.cp_options* %183, i32 0, i32 33
  %185 = load i32* %184, align 8
  %186 = icmp ne i32 %185, 0
  br i1 %186, label %bb90, label %bb100

bb90:                                             ; preds = %bb89
  %187 = load i32* %dest_desc, align 4
  %188 = load i32* %source_desc, align 4
  %189 = call i32 @clone_file(i32 %187, i32 %188) nounwind
  %190 = icmp eq i32 %189, 0
  %191 = zext i1 %190 to i8
  store i8 %191, i8* %clone_ok, align 1
  %192 = load i8* %clone_ok, align 1
  %toBool91 = icmp ne i8 %192, 0
  br i1 %toBool91, label %bb93, label %bb92

bb92:                                             ; preds = %bb90
  %193 = load %struct.cp_options** %x_addr, align 8
  %194 = getelementptr inbounds %struct.cp_options* %193, i32 0, i32 33
  %195 = load i32* %194, align 8
  %196 = icmp eq i32 %195, 2
  br i1 %196, label %bb93, label %bb100

bb93:                                             ; preds = %bb92, %bb90
  %197 = load i8* %clone_ok, align 1
  %toBool94 = icmp ne i8 %197, 0
  %toBool94not = xor i1 %toBool94, true
  %toBool94not95 = zext i1 %toBool94not to i8
  %toBool97 = icmp ne i8 %toBool94not95, 0
  br i1 %toBool97, label %bb98, label %bb99

bb98:                                             ; preds = %bb93
  %198 = load i8** %src_name_addr, align 8
  %199 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %198) nounwind
  %200 = load i8** %dst_name_addr, align 8
  %201 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %200) nounwind
  %202 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str23139, i64 0, i64 0)) nounwind
  %203 = call i32* @__errno_location() nounwind readnone
  %204 = load i32* %203, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %204, i8* %202, i8* %201, i8* %199) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb99:                                             ; preds = %bb93
  store i8 0, i8* %data_copy_required, align 1
  br label %bb100

bb100:                                            ; preds = %bb99, %bb92, %bb89, %bb87
  %205 = load i8* %data_copy_required, align 1
  %toBool101 = icmp ne i8 %205, 0
  br i1 %toBool101, label %bb102, label %preserve_metadata

bb102:                                            ; preds = %bb100
  %206 = call i32 @getpagesize() nounwind readnone
  %207 = sext i32 %206 to i64
  store i64 %207, i64* %buf_alignment, align 8
  %208 = call i64 @io_blksize(%struct.stat* byval %sb) nounwind
  store i64 %208, i64* %buf_size, align 8
  %209 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %210 = load i64* %209, align 8
  %211 = icmp sle i64 %210, 0
  br i1 %211, label %bb105, label %bb103

bb103:                                            ; preds = %bb102
  %212 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %213 = load i64* %212, align 8
  %214 = icmp ugt i64 %213, 2305843009213693952
  br i1 %214, label %bb105, label %bb104

bb104:                                            ; preds = %bb103
  %215 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %216 = load i64* %215, align 8
  store i64 %216, i64* %iftmp.86, align 8
  br label %bb106

bb105:                                            ; preds = %bb103, %bb102
  store i64 512, i64* %iftmp.86, align 8
  br label %bb106

bb106:                                            ; preds = %bb105, %bb104
  %217 = load i64* %iftmp.86, align 8
  store i64 %217, i64* %hole_size, align 8
  %218 = load i32* %source_desc, align 4
  call void @fdadvise(i32 %218, i64 0, i64 0, i32 2) nounwind
  store i8 0, i8* %make_holes, align 1
  %219 = call zeroext i8 @is_probably_sparse(%struct.stat* %src_open_sb) nounwind
  store i8 %219, i8* %sparse_src, align 1
  %220 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 3
  %221 = load i32* %220, align 8
  %222 = and i32 %221, 61440
  %223 = icmp eq i32 %222, 32768
  br i1 %223, label %bb107, label %bb113

bb107:                                            ; preds = %bb106
  %224 = load %struct.cp_options** %x_addr, align 8
  %225 = getelementptr inbounds %struct.cp_options* %224, i32 0, i32 3
  %226 = load i32* %225, align 4
  %227 = icmp eq i32 %226, 3
  br i1 %227, label %bb108, label %bb109

bb108:                                            ; preds = %bb107
  store i8 1, i8* %make_holes, align 1
  br label %bb109

bb109:                                            ; preds = %bb108, %bb107
  %228 = load %struct.cp_options** %x_addr, align 8
  %229 = getelementptr inbounds %struct.cp_options* %228, i32 0, i32 3
  %230 = load i32* %229, align 4
  %231 = icmp eq i32 %230, 2
  br i1 %231, label %bb110, label %bb113

bb110:                                            ; preds = %bb109
  %232 = load i8* %sparse_src, align 1
  %toBool111 = icmp ne i8 %232, 0
  br i1 %toBool111, label %bb112, label %bb113

bb112:                                            ; preds = %bb110
  store i8 1, i8* %make_holes, align 1
  br label %bb113

bb113:                                            ; preds = %bb112, %bb110, %bb109, %bb106
  %233 = load i8* %make_holes, align 1
  %toBool114 = icmp ne i8 %233, 0
  %toBool114not = xor i1 %toBool114, true
  %toBool114not115 = zext i1 %toBool114not to i8
  %toBool117 = icmp ne i8 %toBool114not115, 0
  br i1 %toBool117, label %bb118, label %bb124

bb118:                                            ; preds = %bb113
  %234 = load i64* %buf_alignment, align 8
  %235 = sub i64 9223372036854775807, %234
  store i64 %235, i64* %blcm_max, align 8
  %236 = call i64 @io_blksize(%struct.stat* byval %src_open_sb) nounwind
  %237 = load i64* %buf_size, align 8
  %238 = load i64* %blcm_max, align 8
  %239 = call i64 @buffer_lcm(i64 %236, i64 %237, i64 %238) nounwind readnone
  store i64 %239, i64* %blcm, align 8
  %240 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 3
  %241 = load i32* %240, align 8
  %242 = and i32 %241, 61440
  %243 = icmp eq i32 %242, 32768
  br i1 %243, label %bb119, label %bb121

bb119:                                            ; preds = %bb118
  %244 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8
  %245 = load i64* %244, align 8
  %246 = load i64* %buf_size, align 8
  %247 = icmp ult i64 %245, %246
  br i1 %247, label %bb120, label %bb121

bb120:                                            ; preds = %bb119
  %248 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8
  %249 = load i64* %248, align 8
  %250 = add nsw i64 %249, 1
  store i64 %250, i64* %buf_size, align 8
  br label %bb121

bb121:                                            ; preds = %bb120, %bb119, %bb118
  %251 = load i64* %blcm, align 8
  %252 = load i64* %buf_size, align 8
  %253 = add i64 %251, %252
  %254 = sub i64 %253, 1
  store i64 %254, i64* %buf_size, align 8
  %255 = load i64* %buf_size, align 8
  %256 = load i64* %blcm, align 8
  %int_cast_to_i64 = bitcast i64 %256 to i64
  %257 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %258 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %258, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb121
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb121
  call void @klee_disable_symbex() nounwind
  %259 = urem i64 %255, %256
  %260 = load i64* %buf_size, align 8
  %261 = sub i64 %260, %259
  store i64 %261, i64* %buf_size, align 8
  %262 = load i64* %buf_size, align 8
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %bb123, label %bb122

bb122:                                            ; preds = %klee_div_zero_check.exit
  %264 = load i64* %blcm_max, align 8
  %265 = load i64* %buf_size, align 8
  %266 = icmp ult i64 %264, %265
  br i1 %266, label %bb123, label %bb124

bb123:                                            ; preds = %bb122, %klee_div_zero_check.exit
  %267 = load i64* %blcm, align 8
  store i64 %267, i64* %buf_size, align 8
  br label %bb124

bb124:                                            ; preds = %bb123, %bb122, %bb113
  %268 = load i64* %buf_size, align 8
  %269 = load i64* %buf_alignment, align 8
  %270 = add i64 %268, %269
  %271 = call noalias i8* @xmalloc(i64 %270) nounwind
  store i8* %271, i8** %buf_alloc, align 8
  %272 = load i8** %buf_alloc, align 8
  %273 = load i64* %buf_alignment, align 8
  %274 = call i8* @ptr_align(i8* %272, i64 %273) nounwind
  store i8* %274, i8** %buf, align 8
  %275 = load i8* %sparse_src, align 1
  %toBool125 = icmp ne i8 %275, 0
  br i1 %toBool125, label %bb126, label %bb138

bb126:                                            ; preds = %bb124
  %276 = load i8* %make_holes, align 1
  %toBool127 = icmp ne i8 %276, 0
  br i1 %toBool127, label %bb128, label %bb129

bb128:                                            ; preds = %bb126
  %277 = load %struct.cp_options** %x_addr, align 8
  %278 = getelementptr inbounds %struct.cp_options* %277, i32 0, i32 3
  %279 = load i32* %278, align 4
  store i32 %279, i32* %iftmp.87, align 4
  br label %bb130

bb129:                                            ; preds = %bb126
  store i32 1, i32* %iftmp.87, align 4
  br label %bb130

bb130:                                            ; preds = %bb129, %bb128
  %280 = getelementptr inbounds %struct.stat* %src_open_sb, i32 0, i32 8
  %281 = load i64* %280, align 8
  %282 = load i32* %source_desc, align 4
  %283 = load i32* %dest_desc, align 4
  %284 = load i8** %buf, align 8
  %285 = load i64* %buf_size, align 8
  %286 = load i64* %hole_size, align 8
  %287 = load i32* %iftmp.87, align 4
  %288 = load i8** %src_name_addr, align 8
  %289 = load i8** %dst_name_addr, align 8
  %290 = call zeroext i8 @extent_copy(i32 %282, i32 %283, i8* %284, i64 %285, i64 %286, i64 %281, i32 %287, i8* %288, i8* %289, i8* %normal_copy_required) nounwind
  %toBool131 = icmp ne i8 %290, 0
  br i1 %toBool131, label %preserve_metadata, label %bb132

bb132:                                            ; preds = %bb130
  %291 = load i8* %normal_copy_required, align 1
  %toBool133 = icmp ne i8 %291, 0
  %toBool133not = xor i1 %toBool133, true
  %toBool133not134 = zext i1 %toBool133not to i8
  %toBool136 = icmp ne i8 %toBool133not134, 0
  br i1 %toBool136, label %bb137, label %bb138

bb137:                                            ; preds = %bb132
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb138:                                            ; preds = %bb132, %bb124
  %292 = load %struct.cp_options** %x_addr, align 8
  %293 = getelementptr inbounds %struct.cp_options* %292, i32 0, i32 3
  %294 = load i32* %293, align 4
  %295 = icmp eq i32 %294, 3
  %296 = zext i1 %295 to i32
  %297 = load i8* %make_holes, align 1
  %toBool139 = icmp ne i8 %297, 0
  br i1 %toBool139, label %bb140, label %bb141

bb140:                                            ; preds = %bb138
  %298 = load i64* %hole_size, align 8
  store i64 %298, i64* %iftmp.89, align 8
  br label %bb142

bb141:                                            ; preds = %bb138
  store i64 0, i64* %iftmp.89, align 8
  br label %bb142

bb142:                                            ; preds = %bb141, %bb140
  %299 = load i32* %source_desc, align 4
  %300 = load i32* %dest_desc, align 4
  %301 = load i8** %buf, align 8
  %302 = load i64* %buf_size, align 8
  %303 = load i64* %iftmp.89, align 8
  %304 = trunc i32 %296 to i8
  %305 = load i8** %src_name_addr, align 8
  %306 = load i8** %dst_name_addr, align 8
  %307 = call zeroext i8 @sparse_copy(i32 %299, i32 %300, i8* %301, i64 %302, i64 %303, i8 zeroext %304, i8* %305, i8* %306, i64 -1, i64* %n_read, i8* %wrote_hole_at_eof) nounwind
  %toBool143 = icmp ne i8 %307, 0
  %toBool143not = xor i1 %toBool143, true
  %toBool143not144 = zext i1 %toBool143not to i8
  %toBool146 = icmp ne i8 %toBool143not144, 0
  br i1 %toBool146, label %bb147, label %bb148

bb147:                                            ; preds = %bb142
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb148:                                            ; preds = %bb142
  %308 = load i8* %wrote_hole_at_eof, align 1
  %toBool149 = icmp ne i8 %308, 0
  br i1 %toBool149, label %bb150, label %preserve_metadata

bb150:                                            ; preds = %bb148
  %309 = load i64* %n_read, align 8
  %310 = load i32* %dest_desc, align 4
  %311 = call i32 @ftruncate(i32 %310, i64 %309) nounwind
  %312 = icmp slt i32 %311, 0
  br i1 %312, label %bb151, label %preserve_metadata

bb151:                                            ; preds = %bb150
  %313 = load i8** %dst_name_addr, align 8
  %314 = call i8* @quotearg_style(i32 4, i8* %313) nounwind
  %315 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str7123, i64 0, i64 0)) nounwind
  %316 = call i32* @__errno_location() nounwind readnone
  %317 = load i32* %316, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %317, i8* %315, i8* %314) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

preserve_metadata:                                ; preds = %bb150, %bb148, %bb130, %bb100
  %318 = load %struct.cp_options** %x_addr, align 8
  %319 = getelementptr inbounds %struct.cp_options* %318, i32 0, i32 15
  %320 = load i8* %319, align 2
  %toBool152 = icmp ne i8 %320, 0
  br i1 %toBool152, label %bb153, label %bb164

bb153:                                            ; preds = %preserve_metadata
  %321 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 0
  %322 = load %struct.stat** %src_sb_addr, align 8
  %323 = call %struct.timespec @get_stat_atime(%struct.stat* %322) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %321, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %323, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep154 = getelementptr inbounds %struct.timespec* %321, i32 0, i32 1
  %mrv_gr155 = extractvalue %struct.timespec %323, 1
  store i64 %mrv_gr155, i64* %mrv_gep154
  %324 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %325 = load %struct.stat** %src_sb_addr, align 8
  %326 = call %struct.timespec @get_stat_mtime(%struct.stat* %325) nounwind readonly
  %mrv_gep156 = getelementptr inbounds %struct.timespec* %324, i32 0, i32 0
  %mrv_gr157 = extractvalue %struct.timespec %326, 0
  store i64 %mrv_gr157, i64* %mrv_gep156
  %mrv_gep158 = getelementptr inbounds %struct.timespec* %324, i32 0, i32 1
  %mrv_gr159 = extractvalue %struct.timespec %326, 1
  store i64 %mrv_gr159, i64* %mrv_gep158
  %327 = load i32* %dest_desc, align 4
  %328 = load i8** %dst_name_addr, align 8
  %timespec160 = bitcast [2 x %struct.timespec]* %timespec to %struct.timespec*
  %329 = call i32 @fdutimens(i32 %327, i8* %328, %struct.timespec* %timespec160) nounwind
  %330 = icmp ne i32 %329, 0
  br i1 %330, label %bb161, label %bb164

bb161:                                            ; preds = %bb153
  %331 = load i8** %dst_name_addr, align 8
  %332 = call i8* @quotearg_style(i32 4, i8* %331) nounwind
  %333 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8]* @.str24140, i64 0, i64 0)) nounwind
  %334 = call i32* @__errno_location() nounwind readnone
  %335 = load i32* %334, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %335, i8* %333, i8* %332) nounwind
  %336 = load %struct.cp_options** %x_addr, align 8
  %337 = getelementptr inbounds %struct.cp_options* %336, i32 0, i32 20
  %338 = load i8* %337, align 1
  %toBool162 = icmp ne i8 %338, 0
  br i1 %toBool162, label %bb163, label %bb164

bb163:                                            ; preds = %bb161
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb164:                                            ; preds = %bb161, %bb153, %preserve_metadata
  %339 = load %struct.cp_options** %x_addr, align 8
  %340 = getelementptr inbounds %struct.cp_options* %339, i32 0, i32 13
  %341 = load i8* %340, align 4
  %toBool165 = icmp ne i8 %341, 0
  br i1 %toBool165, label %bb166, label %bb171

bb166:                                            ; preds = %bb164
  %342 = load %struct.stat** %src_sb_addr, align 8
  %343 = getelementptr inbounds %struct.stat* %342, i32 0, i32 4
  %344 = load i32* %343, align 4
  %345 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 4
  %346 = load i32* %345, align 4
  %347 = icmp ne i32 %344, %346
  br i1 %347, label %bb168, label %bb167

bb167:                                            ; preds = %bb166
  %348 = load %struct.stat** %src_sb_addr, align 8
  %349 = getelementptr inbounds %struct.stat* %348, i32 0, i32 5
  %350 = load i32* %349, align 8
  %351 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 5
  %352 = load i32* %351, align 8
  %353 = icmp ne i32 %350, %352
  br i1 %353, label %bb168, label %bb171

bb168:                                            ; preds = %bb167, %bb166
  %354 = load i8** %new_dst_addr, align 8
  %355 = load i8* %354, align 1
  %356 = zext i8 %355 to i32
  %357 = load %struct.cp_options** %x_addr, align 8
  %358 = load i8** %dst_name_addr, align 8
  %359 = load i32* %dest_desc, align 4
  %360 = load %struct.stat** %src_sb_addr, align 8
  %361 = trunc i32 %356 to i8
  %362 = call i32 @set_owner(%struct.cp_options* %357, i8* %358, i32 %359, %struct.stat* %360, i8 zeroext %361, %struct.stat* %sb) nounwind
  switch i32 %362, label %bb171 [
    i32 -1, label %bb169
    i32 0, label %bb170
  ]

bb169:                                            ; preds = %bb168
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb170:                                            ; preds = %bb168
  %363 = load i32* %src_mode, align 4
  %364 = and i32 %363, -3585
  store i32 %364, i32* %src_mode, align 4
  br label %bb171

bb171:                                            ; preds = %bb170, %bb168, %bb167, %bb164
  %365 = load %struct.cp_options** %x_addr, align 8
  %366 = getelementptr inbounds %struct.cp_options* %365, i32 0, i32 23
  %367 = load i8* %366, align 2
  %toBool172 = icmp ne i8 %367, 0
  br i1 %toBool172, label %bb173, label %bb189

bb173:                                            ; preds = %bb171
  store i8 0, i8* %access_changed, align 1
  %368 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 3
  %369 = load i32* %368, align 8
  %370 = and i32 %369, 128
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %bb174, label %bb176

bb174:                                            ; preds = %bb173
  %372 = call i32 @geteuid() nounwind
  %373 = icmp ne i32 %372, 0
  br i1 %373, label %bb175, label %bb176

bb175:                                            ; preds = %bb174
  %374 = load i32* %dest_desc, align 4
  %375 = load i8** %dst_name_addr, align 8
  %376 = call i32 @fchmod_or_lchmod(i32 %374, i8* %375, i32 384) nounwind
  %377 = icmp eq i32 %376, 0
  %378 = zext i1 %377 to i8
  store i8 %378, i8* %access_changed, align 1
  br label %bb176

bb176:                                            ; preds = %bb175, %bb174, %bb173
  %379 = load i8** %src_name_addr, align 8
  %380 = load i32* %source_desc, align 4
  %381 = load i8** %dst_name_addr, align 8
  %382 = load i32* %dest_desc, align 4
  %383 = load %struct.cp_options** %x_addr, align 8
  %384 = call zeroext i8 @copy_attr(i8* %379, i32 %380, i8* %381, i32 %382, %struct.cp_options* %383) nounwind
  %toBool177 = icmp ne i8 %384, 0
  %toBool177not = xor i1 %toBool177, true
  %toBool177not178 = zext i1 %toBool177not to i8
  %toBool180 = icmp ne i8 %toBool177not178, 0
  br i1 %toBool180, label %bb181, label %bb184

bb181:                                            ; preds = %bb176
  %385 = load %struct.cp_options** %x_addr, align 8
  %386 = getelementptr inbounds %struct.cp_options* %385, i32 0, i32 24
  %387 = load i8* %386, align 1
  %toBool182 = icmp ne i8 %387, 0
  br i1 %toBool182, label %bb183, label %bb184

bb183:                                            ; preds = %bb181
  store i8 0, i8* %return_val, align 1
  br label %bb184

bb184:                                            ; preds = %bb183, %bb181, %bb176
  %388 = load i8* %access_changed, align 1
  %toBool185 = icmp ne i8 %388, 0
  br i1 %toBool185, label %bb186, label %bb189

bb186:                                            ; preds = %bb184
  %389 = load i32* %omitted_permissions_addr, align 4
  %not187 = xor i32 %389, -1
  %390 = load i32* %dst_mode_addr, align 4
  %391 = and i32 %not187, %390
  %392 = load i32* %dest_desc, align 4
  %393 = load i8** %dst_name_addr, align 8
  %394 = call i32 @fchmod_or_lchmod(i32 %392, i8* %393, i32 %391) nounwind
  br label %bb189

bb189:                                            ; preds = %bb186, %bb184, %bb171
  %395 = load i8** %dst_name_addr, align 8
  %396 = load i32* %dest_desc, align 4
  %397 = load %struct.stat** %src_sb_addr, align 8
  call void @set_author(i8* %395, i32 %396, %struct.stat* %397) nounwind
  %398 = load %struct.cp_options** %x_addr, align 8
  %399 = getelementptr inbounds %struct.cp_options* %398, i32 0, i32 14
  %400 = load i8* %399, align 1
  %toBool190 = icmp ne i8 %400, 0
  br i1 %toBool190, label %bb193, label %bb191

bb191:                                            ; preds = %bb189
  %401 = load %struct.cp_options** %x_addr, align 8
  %402 = getelementptr inbounds %struct.cp_options* %401, i32 0, i32 9
  %403 = load i8* %402, align 8
  %toBool192 = icmp ne i8 %403, 0
  br i1 %toBool192, label %bb193, label %bb198

bb193:                                            ; preds = %bb191, %bb189
  %404 = load i8** %src_name_addr, align 8
  %405 = load i32* %source_desc, align 4
  %406 = load i8** %dst_name_addr, align 8
  %407 = load i32* %dest_desc, align 4
  %408 = load i32* %src_mode, align 4
  %409 = call i32 @copy_acl(i8* %404, i32 %405, i8* %406, i32 %407, i32 %408) nounwind
  %410 = icmp ne i32 %409, 0
  br i1 %410, label %bb194, label %close_src_and_dst_desc

bb194:                                            ; preds = %bb193
  %411 = load %struct.cp_options** %x_addr, align 8
  %412 = getelementptr inbounds %struct.cp_options* %411, i32 0, i32 20
  %413 = load i8* %412, align 1
  %toBool195 = icmp ne i8 %413, 0
  br i1 %toBool195, label %bb196, label %close_src_and_dst_desc

bb196:                                            ; preds = %bb194
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb198:                                            ; preds = %bb191
  %414 = load %struct.cp_options** %x_addr, align 8
  %415 = getelementptr inbounds %struct.cp_options* %414, i32 0, i32 27
  %416 = load i8* %415, align 2
  %toBool199 = icmp ne i8 %416, 0
  %417 = load %struct.cp_options** %x_addr, align 8
  br i1 %toBool199, label %bb200, label %bb203

bb200:                                            ; preds = %bb198
  %418 = getelementptr inbounds %struct.cp_options* %417, i32 0, i32 4
  %419 = load i32* %418, align 8
  %420 = load i8** %dst_name_addr, align 8
  %421 = load i32* %dest_desc, align 4
  %422 = call i32 @set_acl(i8* %420, i32 %421, i32 %419) nounwind
  %423 = icmp ne i32 %422, 0
  br i1 %423, label %bb201, label %close_src_and_dst_desc

bb201:                                            ; preds = %bb200
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb203:                                            ; preds = %bb198
  %424 = getelementptr inbounds %struct.cp_options* %417, i32 0, i32 16
  %425 = load i8* %424, align 1
  %toBool204 = icmp ne i8 %425, 0
  br i1 %toBool204, label %bb205, label %bb210

bb205:                                            ; preds = %bb203
  %426 = call i32 @cached_umask() nounwind
  %not206 = xor i32 %426, -1
  %427 = and i32 %not206, 438
  %428 = load i8** %dst_name_addr, align 8
  %429 = load i32* %dest_desc, align 4
  %430 = call i32 @set_acl(i8* %428, i32 %429, i32 %427) nounwind
  %431 = icmp ne i32 %430, 0
  br i1 %431, label %bb208, label %close_src_and_dst_desc

bb208:                                            ; preds = %bb205
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

bb210:                                            ; preds = %bb203
  %432 = load i32* %omitted_permissions_addr, align 4
  %433 = icmp ne i32 %432, 0
  br i1 %433, label %bb211, label %close_src_and_dst_desc

bb211:                                            ; preds = %bb210
  %434 = call i32 @cached_umask() nounwind
  %not212 = xor i32 %434, -1
  %435 = load i32* %omitted_permissions_addr, align 4
  %436 = and i32 %not212, %435
  store i32 %436, i32* %omitted_permissions_addr, align 4
  %437 = load i32* %omitted_permissions_addr, align 4
  %438 = icmp ne i32 %437, 0
  br i1 %438, label %bb214, label %close_src_and_dst_desc

bb214:                                            ; preds = %bb211
  %439 = load i32* %dest_desc, align 4
  %440 = load i8** %dst_name_addr, align 8
  %441 = load i32* %dst_mode_addr, align 4
  %442 = call i32 @fchmod_or_lchmod(i32 %439, i8* %440, i32 %441) nounwind
  %443 = icmp ne i32 %442, 0
  br i1 %443, label %bb215, label %close_src_and_dst_desc

bb215:                                            ; preds = %bb214
  %444 = load i8** %dst_name_addr, align 8
  %445 = call i8* @quotearg_style(i32 4, i8* %444) nounwind
  %446 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str25141, i64 0, i64 0)) nounwind
  %447 = call i32* @__errno_location() nounwind readnone
  %448 = load i32* %447, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %448, i8* %446, i8* %445) nounwind
  %449 = load %struct.cp_options** %x_addr, align 8
  %450 = getelementptr inbounds %struct.cp_options* %449, i32 0, i32 20
  %451 = load i8* %450, align 1
  %toBool216 = icmp ne i8 %451, 0
  br i1 %toBool216, label %bb217, label %close_src_and_dst_desc

bb217:                                            ; preds = %bb215
  store i8 0, i8* %return_val, align 1
  br label %close_src_and_dst_desc

close_src_and_dst_desc:                           ; preds = %bb205, %bb208, %bb200, %bb201, %bb193, %bb194, %bb196, %bb217, %bb215, %bb214, %bb211, %bb210, %bb169, %bb163, %bb151, %bb147, %bb137, %bb98, %bb86, %bb29
  %452 = load i32* %dest_desc, align 4
  %453 = call i32 @close(i32 %452) nounwind
  %454 = icmp slt i32 %453, 0
  br i1 %454, label %bb218, label %close_src_desc

bb218:                                            ; preds = %close_src_and_dst_desc
  %455 = load i8** %dst_name_addr, align 8
  %456 = call i8* @quotearg_style(i32 4, i8* %455) nounwind
  %457 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8]* @.str26142, i64 0, i64 0)) nounwind
  %458 = call i32* @__errno_location() nounwind readnone
  %459 = load i32* %458, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %459, i8* %457, i8* %456) nounwind
  store i8 0, i8* %return_val, align 1
  br label %close_src_desc

close_src_desc:                                   ; preds = %bb218, %close_src_and_dst_desc, %bb84, %bb63, %bb45, %bb34, %bb8, %bb5
  %460 = load i32* %source_desc, align 4
  %461 = call i32 @close(i32 %460) nounwind
  %462 = icmp slt i32 %461, 0
  br i1 %462, label %bb219, label %bb220

bb219:                                            ; preds = %close_src_desc
  %463 = load i8** %src_name_addr, align 8
  %464 = call i8* @quotearg_style(i32 4, i8* %463) nounwind
  %465 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8]* @.str26142, i64 0, i64 0)) nounwind
  %466 = call i32* @__errno_location() nounwind readnone
  %467 = load i32* %466, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %467, i8* %465, i8* %464) nounwind
  store i8 0, i8* %return_val, align 1
  br label %bb220

bb220:                                            ; preds = %bb219, %close_src_desc
  %468 = load i8** %buf_alloc, align 8
  call void @free(i8* %468) nounwind
  %469 = load i8** %name_alloc, align 8
  call void @free(i8* %469) nounwind
  %470 = load i8* %return_val, align 1
  %471 = zext i8 %470 to i32
  store i32 %471, i32* %0, align 4
  br label %bb221

bb221:                                            ; preds = %bb220, %bb3
  %472 = load i32* %0, align 4
  store i32 %472, i32* %retval, align 4
  %retval222 = load i32* %retval
  %retval222223 = trunc i32 %retval222 to i8
  ret i8 %retval222223
}

define internal i32 @clone_file(i32 %dest_fd, i32 %src_fd) nounwind inlinehint {
entry:
  %dest_fd_addr = alloca i32, align 4
  %src_fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %dest_fd, i32* %dest_fd_addr
  store i32 %src_fd, i32* %src_fd_addr
  %1 = load i32* %dest_fd_addr, align 4
  %2 = load i32* %src_fd_addr, align 4
  %3 = call i32 (i32, i64, ...)* @ioctl(i32 %1, i64 1074041865, i32 %2) nounwind
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

declare i32 @getpagesize() nounwind readnone

define internal i64 @io_blksize(%struct.stat* byval %sb) nounwind inlinehint {
entry:
  %retval = alloca i64
  %iftmp.35 = alloca i64
  %iftmp.34 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  %1 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %2 = load i64* %1, align 8
  %3 = icmp sle i64 %2, 0
  br i1 %3, label %bb7, label %bb

bb:                                               ; preds = %entry
  %4 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %5 = load i64* %4, align 8
  %6 = icmp ugt i64 %5, 2305843009213693952
  br i1 %6, label %bb7, label %bb1

bb1:                                              ; preds = %bb
  %7 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %8 = load i64* %7, align 8
  %9 = icmp sle i64 %8, 131071
  br i1 %9, label %bb7, label %bb2

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %11 = load i64* %10, align 8
  %12 = icmp sle i64 %11, 0
  br i1 %12, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %14 = load i64* %13, align 8
  %15 = icmp ugt i64 %14, 2305843009213693952
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %16 = getelementptr inbounds %struct.stat* %sb, i32 0, i32 9
  %17 = load i64* %16, align 8
  store i64 %17, i64* %iftmp.35, align 8
  br label %bb6

bb5:                                              ; preds = %bb3, %bb2
  store i64 512, i64* %iftmp.35, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %18 = load i64* %iftmp.35, align 8
  store i64 %18, i64* %iftmp.34, align 8
  br label %bb8

bb7:                                              ; preds = %bb1, %bb, %entry
  store i64 131072, i64* %iftmp.34, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %19 = load i64* %iftmp.34, align 8
  store i64 %19, i64* %0, align 8
  %20 = load i64* %0, align 8
  store i64 %20, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define internal i8* @ptr_align(i8* %ptr, i64 %alignment) nounwind inlinehint {
entry:
  %ptr_addr = alloca i8*, align 8
  %alignment_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p0 = alloca i8*
  %p1 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %ptr, i8** %ptr_addr
  store i64 %alignment, i64* %alignment_addr
  %1 = load i8** %ptr_addr, align 8
  store i8* %1, i8** %p0, align 8
  %2 = load i8** %p0, align 8
  %3 = load i64* %alignment_addr, align 8
  %4 = getelementptr inbounds i8* %2, i64 %3
  %5 = getelementptr inbounds i8* %4, i64 -1
  store i8* %5, i8** %p1, align 8
  %6 = load i8** %p1, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = load i64* %alignment_addr, align 8
  %int_cast_to_i64 = bitcast i64 %8 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %11 = urem i64 %7, %8
  %12 = sub nsw i64 0, %11
  %13 = load i8** %p1, align 8
  %14 = getelementptr inbounds i8* %13, i64 %12
  store i8* %14, i8** %0, align 8
  %15 = load i8** %0, align 8
  store i8* %15, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

declare i32 @geteuid() nounwind

define internal zeroext i8 @same_file_ok(i8* %src_name, %struct.stat* %src_sb, i8* %dst_name, %struct.stat* %dst_sb, %struct.cp_options* %x, i8* %return_now) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %src_sb_addr = alloca %struct.stat*, align 8
  %dst_name_addr = alloca i8*, align 8
  %dst_sb_addr = alloca %struct.stat*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %return_now_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.93 = alloca i32
  %0 = alloca i32
  %iftmp.92 = alloca i32
  %src_sb_link = alloca %struct.stat*
  %dst_sb_link = alloca %struct.stat*
  %tmp_dst_sb = alloca %struct.stat
  %tmp_src_sb = alloca %struct.stat
  %same_link = alloca i8
  %same = alloca i8
  %sn = alloca i8
  %abs_src = alloca i8*
  %result = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store %struct.stat* %src_sb, %struct.stat** %src_sb_addr
  store i8* %dst_name, i8** %dst_name_addr
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8* %return_now, i8** %return_now_addr
  %1 = load %struct.stat** %src_sb_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 1
  %3 = load i64* %2, align 8
  %4 = load %struct.stat** %dst_sb_addr, align 8
  %5 = getelementptr inbounds %struct.stat* %4, i32 0, i32 1
  %6 = load i64* %5, align 8
  %7 = icmp ne i64 %3, %6
  br i1 %7, label %bb2, label %bb

bb:                                               ; preds = %entry
  %8 = load %struct.stat** %src_sb_addr, align 8
  %9 = getelementptr inbounds %struct.stat* %8, i32 0, i32 0
  %10 = load i64* %9, align 8
  %11 = load %struct.stat** %dst_sb_addr, align 8
  %12 = getelementptr inbounds %struct.stat* %11, i32 0, i32 0
  %13 = load i64* %12, align 8
  %14 = icmp ne i64 %10, %13
  br i1 %14, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.92, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.92, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load i32* %iftmp.92, align 4
  %16 = trunc i32 %15 to i8
  store i8 %16, i8* %same, align 1
  %17 = load i8** %return_now_addr, align 8
  store i8 0, i8* %17, align 1
  %18 = load i8* %same, align 1
  %toBool = icmp ne i8 %18, 0
  br i1 %toBool, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %19 = load %struct.cp_options** %x_addr, align 8
  %20 = getelementptr inbounds %struct.cp_options* %19, i32 0, i32 8
  %21 = load i8* %20, align 1
  %toBool5 = icmp ne i8 %21, 0
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb4
  %22 = load i8** %return_now_addr, align 8
  store i8 1, i8* %22, align 1
  store i32 1, i32* %0, align 4
  br label %bb123

bb7:                                              ; preds = %bb4, %bb3
  %23 = load %struct.cp_options** %x_addr, align 8
  %24 = getelementptr inbounds %struct.cp_options* %23, i32 0, i32 1
  %25 = load i32* %24, align 4
  %26 = icmp eq i32 %25, 2
  %27 = load i8* %same, align 1
  br i1 %26, label %bb8, label %bb28

bb8:                                              ; preds = %bb7
  store i8 %27, i8* %same_link, align 1
  %28 = load %struct.stat** %src_sb_addr, align 8
  %29 = getelementptr inbounds %struct.stat* %28, i32 0, i32 3
  %30 = load i32* %29, align 8
  %31 = and i32 %30, 61440
  %32 = icmp eq i32 %31, 40960
  br i1 %32, label %bb9, label %bb27

bb9:                                              ; preds = %bb8
  %33 = load %struct.stat** %dst_sb_addr, align 8
  %34 = getelementptr inbounds %struct.stat* %33, i32 0, i32 3
  %35 = load i32* %34, align 8
  %36 = and i32 %35, 61440
  %37 = icmp eq i32 %36, 40960
  br i1 %37, label %bb10, label %bb27

bb10:                                             ; preds = %bb9
  %38 = load i8** %src_name_addr, align 8
  %39 = load i8** %dst_name_addr, align 8
  %40 = call zeroext i8 @same_name(i8* %38, i8* %39) nounwind
  store i8 %40, i8* %sn, align 1
  %41 = load i8* %sn, align 1
  %toBool11 = icmp ne i8 %41, 0
  %toBool11not = xor i1 %toBool11, true
  %toBool11not12 = zext i1 %toBool11not to i8
  %toBool14 = icmp ne i8 %toBool11not12, 0
  br i1 %toBool14, label %bb15, label %bb23

bb15:                                             ; preds = %bb10
  %42 = load %struct.cp_options** %x_addr, align 8
  %43 = getelementptr inbounds %struct.cp_options* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = icmp ne i32 %44, 0
  br i1 %45, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i32 1, i32* %0, align 4
  br label %bb123

bb17:                                             ; preds = %bb15
  %46 = load i8* %same_link, align 1
  %toBool18 = icmp ne i8 %46, 0
  br i1 %toBool18, label %bb19, label %bb23

bb19:                                             ; preds = %bb17
  %47 = load i8** %return_now_addr, align 8
  store i8 1, i8* %47, align 1
  %48 = load %struct.cp_options** %x_addr, align 8
  %49 = getelementptr inbounds %struct.cp_options* %48, i32 0, i32 9
  %50 = load i8* %49, align 8
  %toBool20 = icmp ne i8 %50, 0
  %toBool20not = xor i1 %toBool20, true
  %toBool20not21 = zext i1 %toBool20not to i32
  %51 = trunc i32 %toBool20not21 to i8
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %0, align 4
  br label %bb123

bb23:                                             ; preds = %bb17, %bb10
  %53 = load i8* %sn, align 1
  %toBool24 = icmp ne i8 %53, 0
  %toBool24not = xor i1 %toBool24, true
  %toBool24not25 = zext i1 %toBool24not to i32
  %54 = trunc i32 %toBool24not25 to i8
  %55 = zext i8 %54 to i32
  store i32 %55, i32* %0, align 4
  br label %bb123

bb27:                                             ; preds = %bb9, %bb8
  %56 = load %struct.stat** %src_sb_addr, align 8
  store %struct.stat* %56, %struct.stat** %src_sb_link, align 8
  %57 = load %struct.stat** %dst_sb_addr, align 8
  store %struct.stat* %57, %struct.stat** %dst_sb_link, align 8
  br label %bb46

bb28:                                             ; preds = %bb7
  %toBool29 = icmp ne i8 %27, 0
  %toBool29not = xor i1 %toBool29, true
  %toBool29not30 = zext i1 %toBool29not to i8
  %toBool32 = icmp ne i8 %toBool29not30, 0
  br i1 %toBool32, label %bb33, label %bb34

bb33:                                             ; preds = %bb28
  store i32 1, i32* %0, align 4
  br label %bb123

bb34:                                             ; preds = %bb28
  %58 = load i8** %dst_name_addr, align 8
  %59 = call i32 @lstat(i8* noalias %58, %struct.stat* noalias %tmp_dst_sb) nounwind
  %60 = icmp ne i32 %59, 0
  br i1 %60, label %bb36, label %bb35

bb35:                                             ; preds = %bb34
  %61 = load i8** %src_name_addr, align 8
  %62 = call i32 @lstat(i8* noalias %61, %struct.stat* noalias %tmp_src_sb) nounwind
  %63 = icmp ne i32 %62, 0
  br i1 %63, label %bb36, label %bb37

bb36:                                             ; preds = %bb35, %bb34
  store i32 1, i32* %0, align 4
  br label %bb123

bb37:                                             ; preds = %bb35
  store %struct.stat* %tmp_src_sb, %struct.stat** %src_sb_link, align 8
  store %struct.stat* %tmp_dst_sb, %struct.stat** %dst_sb_link, align 8
  %64 = load %struct.stat** %src_sb_link, align 8
  %65 = getelementptr inbounds %struct.stat* %64, i32 0, i32 1
  %66 = load i64* %65, align 8
  %67 = load %struct.stat** %dst_sb_link, align 8
  %68 = getelementptr inbounds %struct.stat* %67, i32 0, i32 1
  %69 = load i64* %68, align 8
  %70 = icmp ne i64 %66, %69
  br i1 %70, label %bb40, label %bb38

bb38:                                             ; preds = %bb37
  %71 = load %struct.stat** %src_sb_link, align 8
  %72 = getelementptr inbounds %struct.stat* %71, i32 0, i32 0
  %73 = load i64* %72, align 8
  %74 = load %struct.stat** %dst_sb_link, align 8
  %75 = getelementptr inbounds %struct.stat* %74, i32 0, i32 0
  %76 = load i64* %75, align 8
  %77 = icmp ne i64 %73, %76
  br i1 %77, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  store i32 1, i32* %iftmp.93, align 4
  br label %bb41

bb40:                                             ; preds = %bb38, %bb37
  store i32 0, i32* %iftmp.93, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %bb39
  %78 = load i32* %iftmp.93, align 4
  %79 = trunc i32 %78 to i8
  store i8 %79, i8* %same_link, align 1
  %80 = load %struct.stat** %src_sb_link, align 8
  %81 = getelementptr inbounds %struct.stat* %80, i32 0, i32 3
  %82 = load i32* %81, align 8
  %83 = and i32 %82, 61440
  %84 = icmp eq i32 %83, 40960
  br i1 %84, label %bb42, label %bb46

bb42:                                             ; preds = %bb41
  %85 = load %struct.stat** %dst_sb_link, align 8
  %86 = getelementptr inbounds %struct.stat* %85, i32 0, i32 3
  %87 = load i32* %86, align 8
  %88 = and i32 %87, 61440
  %89 = icmp eq i32 %88, 40960
  br i1 %89, label %bb43, label %bb46

bb43:                                             ; preds = %bb42
  %90 = load %struct.cp_options** %x_addr, align 8
  %91 = getelementptr inbounds %struct.cp_options* %90, i32 0, i32 6
  %92 = load i8* %91, align 1
  %toBool44 = icmp ne i8 %92, 0
  br i1 %toBool44, label %bb45, label %bb46

bb45:                                             ; preds = %bb43
  store i32 1, i32* %0, align 4
  br label %bb123

bb46:                                             ; preds = %bb43, %bb42, %bb41, %bb27
  %93 = load %struct.cp_options** %x_addr, align 8
  %94 = getelementptr inbounds %struct.cp_options* %93, i32 0, i32 0
  %95 = load i32* %94, align 8
  %96 = icmp ne i32 %95, 0
  br i1 %96, label %bb47, label %bb66

bb47:                                             ; preds = %bb46
  %97 = load i8* %same_link, align 1
  %toBool48 = icmp ne i8 %97, 0
  %toBool48not = xor i1 %toBool48, true
  %toBool48not49 = zext i1 %toBool48not to i8
  %toBool51 = icmp ne i8 %toBool48not49, 0
  br i1 %toBool51, label %bb52, label %bb62

bb52:                                             ; preds = %bb47
  %98 = load %struct.cp_options** %x_addr, align 8
  %99 = getelementptr inbounds %struct.cp_options* %98, i32 0, i32 9
  %100 = load i8* %99, align 8
  %toBool53 = icmp ne i8 %100, 0
  %toBool53not = xor i1 %toBool53, true
  %toBool53not54 = zext i1 %toBool53not to i8
  %toBool56 = icmp ne i8 %toBool53not54, 0
  br i1 %toBool56, label %bb57, label %bb61

bb57:                                             ; preds = %bb52
  %101 = load %struct.cp_options** %x_addr, align 8
  %102 = getelementptr inbounds %struct.cp_options* %101, i32 0, i32 1
  %103 = load i32* %102, align 4
  %104 = icmp ne i32 %103, 2
  br i1 %104, label %bb58, label %bb61

bb58:                                             ; preds = %bb57
  %105 = load %struct.stat** %src_sb_link, align 8
  %106 = getelementptr inbounds %struct.stat* %105, i32 0, i32 3
  %107 = load i32* %106, align 8
  %108 = and i32 %107, 61440
  %109 = icmp eq i32 %108, 40960
  br i1 %109, label %bb59, label %bb61

bb59:                                             ; preds = %bb58
  %110 = load %struct.stat** %dst_sb_link, align 8
  %111 = getelementptr inbounds %struct.stat* %110, i32 0, i32 3
  %112 = load i32* %111, align 8
  %113 = and i32 %112, 61440
  %114 = icmp ne i32 %113, 40960
  br i1 %114, label %bb60, label %bb61

bb60:                                             ; preds = %bb59
  store i32 0, i32* %0, align 4
  br label %bb123

bb61:                                             ; preds = %bb59, %bb58, %bb57, %bb52
  store i32 1, i32* %0, align 4
  br label %bb123

bb62:                                             ; preds = %bb47
  %115 = load i8** %src_name_addr, align 8
  %116 = load i8** %dst_name_addr, align 8
  %117 = call zeroext i8 @same_name(i8* %115, i8* %116) nounwind
  %toBool63 = icmp ne i8 %117, 0
  %toBool63not = xor i1 %toBool63, true
  %toBool63not64 = zext i1 %toBool63not to i32
  %118 = trunc i32 %toBool63not64 to i8
  %119 = zext i8 %118 to i32
  store i32 %119, i32* %0, align 4
  br label %bb123

bb66:                                             ; preds = %bb46
  %120 = load %struct.cp_options** %x_addr, align 8
  %121 = getelementptr inbounds %struct.cp_options* %120, i32 0, i32 9
  %122 = load i8* %121, align 8
  %toBool67 = icmp ne i8 %122, 0
  br i1 %toBool67, label %bb70, label %bb68

bb68:                                             ; preds = %bb66
  %123 = load %struct.cp_options** %x_addr, align 8
  %124 = getelementptr inbounds %struct.cp_options* %123, i32 0, i32 6
  %125 = load i8* %124, align 1
  %toBool69 = icmp ne i8 %125, 0
  br i1 %toBool69, label %bb70, label %bb84

bb70:                                             ; preds = %bb68, %bb66
  %126 = load %struct.stat** %dst_sb_link, align 8
  %127 = getelementptr inbounds %struct.stat* %126, i32 0, i32 3
  %128 = load i32* %127, align 8
  %129 = and i32 %128, 61440
  %130 = icmp eq i32 %129, 40960
  br i1 %130, label %bb71, label %bb72

bb71:                                             ; preds = %bb70
  store i32 1, i32* %0, align 4
  br label %bb123

bb72:                                             ; preds = %bb70
  %131 = load i8* %same_link, align 1
  %toBool73 = icmp ne i8 %131, 0
  br i1 %toBool73, label %bb74, label %bb84

bb74:                                             ; preds = %bb72
  %132 = load %struct.stat** %dst_sb_link, align 8
  %133 = getelementptr inbounds %struct.stat* %132, i32 0, i32 2
  %134 = load i64* %133, align 8
  %135 = icmp ugt i64 %134, 1
  br i1 %135, label %bb75, label %bb84

bb75:                                             ; preds = %bb74
  %136 = load i8** %src_name_addr, align 8
  %137 = load i8** %dst_name_addr, align 8
  %138 = call zeroext i8 @same_name(i8* %136, i8* %137) nounwind
  %toBool76 = icmp ne i8 %138, 0
  %toBool76not = xor i1 %toBool76, true
  %toBool76not77 = zext i1 %toBool76not to i8
  %toBool79 = icmp ne i8 %toBool76not77, 0
  br i1 %toBool79, label %bb80, label %bb84

bb80:                                             ; preds = %bb75
  %139 = load %struct.cp_options** %x_addr, align 8
  %140 = getelementptr inbounds %struct.cp_options* %139, i32 0, i32 9
  %141 = load i8* %140, align 8
  %toBool81 = icmp ne i8 %141, 0
  %toBool81not = xor i1 %toBool81, true
  %toBool81not82 = zext i1 %toBool81not to i32
  %142 = trunc i32 %toBool81not82 to i8
  %143 = zext i8 %142 to i32
  store i32 %143, i32* %0, align 4
  br label %bb123

bb84:                                             ; preds = %bb75, %bb74, %bb72, %bb68
  %144 = load %struct.stat** %src_sb_link, align 8
  %145 = getelementptr inbounds %struct.stat* %144, i32 0, i32 3
  %146 = load i32* %145, align 8
  %147 = and i32 %146, 61440
  %148 = icmp ne i32 %147, 40960
  br i1 %148, label %bb85, label %bb92

bb85:                                             ; preds = %bb84
  %149 = load %struct.stat** %dst_sb_link, align 8
  %150 = getelementptr inbounds %struct.stat* %149, i32 0, i32 3
  %151 = load i32* %150, align 8
  %152 = and i32 %151, 61440
  %153 = icmp ne i32 %152, 40960
  br i1 %153, label %bb86, label %bb92

bb86:                                             ; preds = %bb85
  %154 = load %struct.stat** %src_sb_link, align 8
  %155 = getelementptr inbounds %struct.stat* %154, i32 0, i32 1
  %156 = load i64* %155, align 8
  %157 = load %struct.stat** %dst_sb_link, align 8
  %158 = getelementptr inbounds %struct.stat* %157, i32 0, i32 1
  %159 = load i64* %158, align 8
  %160 = icmp ne i64 %156, %159
  br i1 %160, label %bb88, label %bb87

bb87:                                             ; preds = %bb86
  %161 = load %struct.stat** %src_sb_link, align 8
  %162 = getelementptr inbounds %struct.stat* %161, i32 0, i32 0
  %163 = load i64* %162, align 8
  %164 = load %struct.stat** %dst_sb_link, align 8
  %165 = getelementptr inbounds %struct.stat* %164, i32 0, i32 0
  %166 = load i64* %165, align 8
  %167 = icmp ne i64 %163, %166
  br i1 %167, label %bb88, label %bb89

bb88:                                             ; preds = %bb87, %bb86
  store i32 1, i32* %0, align 4
  br label %bb123

bb89:                                             ; preds = %bb87
  %168 = load %struct.cp_options** %x_addr, align 8
  %169 = getelementptr inbounds %struct.cp_options* %168, i32 0, i32 8
  %170 = load i8* %169, align 1
  %toBool90 = icmp ne i8 %170, 0
  br i1 %toBool90, label %bb91, label %bb92

bb91:                                             ; preds = %bb89
  %171 = load i8** %return_now_addr, align 8
  store i8 1, i8* %171, align 1
  store i32 1, i32* %0, align 4
  br label %bb123

bb92:                                             ; preds = %bb89, %bb85, %bb84
  %172 = load %struct.cp_options** %x_addr, align 8
  %173 = getelementptr inbounds %struct.cp_options* %172, i32 0, i32 9
  %174 = load i8* %173, align 8
  %toBool93 = icmp ne i8 %174, 0
  br i1 %toBool93, label %bb94, label %bb101

bb94:                                             ; preds = %bb92
  %175 = load %struct.stat** %src_sb_addr, align 8
  %176 = getelementptr inbounds %struct.stat* %175, i32 0, i32 3
  %177 = load i32* %176, align 8
  %178 = and i32 %177, 61440
  %179 = icmp eq i32 %178, 40960
  br i1 %179, label %bb95, label %bb101

bb95:                                             ; preds = %bb94
  %180 = load %struct.stat** %dst_sb_link, align 8
  %181 = getelementptr inbounds %struct.stat* %180, i32 0, i32 2
  %182 = load i64* %181, align 8
  %183 = icmp ugt i64 %182, 1
  br i1 %183, label %bb96, label %bb101

bb96:                                             ; preds = %bb95
  %184 = load i8** %src_name_addr, align 8
  %185 = call i8* @canonicalize_file_name(i8* %184) nounwind
  store i8* %185, i8** %abs_src, align 8
  %186 = load i8** %abs_src, align 8
  %187 = icmp ne i8* %186, null
  br i1 %187, label %bb97, label %bb101

bb97:                                             ; preds = %bb96
  %188 = load i8** %abs_src, align 8
  %189 = load i8** %dst_name_addr, align 8
  %190 = call zeroext i8 @same_name(i8* %188, i8* %189) nounwind
  %toBool98 = icmp ne i8 %190, 0
  %toBool98not = xor i1 %toBool98, true
  %toBool98not99 = zext i1 %toBool98not to i32
  %191 = trunc i32 %toBool98not99 to i8
  store i8 %191, i8* %result, align 1
  %192 = load i8** %abs_src, align 8
  call void @free(i8* %192) nounwind
  %193 = load i8* %result, align 1
  %194 = zext i8 %193 to i32
  store i32 %194, i32* %0, align 4
  br label %bb123

bb101:                                            ; preds = %bb96, %bb95, %bb94, %bb92
  %195 = load %struct.cp_options** %x_addr, align 8
  %196 = getelementptr inbounds %struct.cp_options* %195, i32 0, i32 6
  %197 = load i8* %196, align 1
  %toBool102 = icmp ne i8 %197, 0
  br i1 %toBool102, label %bb103, label %bb105

bb103:                                            ; preds = %bb101
  %198 = load %struct.stat** %dst_sb_link, align 8
  %199 = getelementptr inbounds %struct.stat* %198, i32 0, i32 3
  %200 = load i32* %199, align 8
  %201 = and i32 %200, 61440
  %202 = icmp eq i32 %201, 40960
  br i1 %202, label %bb104, label %bb105

bb104:                                            ; preds = %bb103
  %203 = load %struct.stat** %dst_sb_link, align 8
  %204 = getelementptr inbounds %struct.stat* %203, i32 0, i32 0
  %205 = load i64* %204, align 8
  %206 = load %struct.stat** %src_sb_link, align 8
  %207 = getelementptr inbounds %struct.stat* %206, i32 0, i32 0
  %208 = load i64* %207, align 8
  %209 = icmp eq i64 %205, %208
  %210 = zext i1 %209 to i32
  store i32 %210, i32* %0, align 4
  br label %bb123

bb105:                                            ; preds = %bb103, %bb101
  %211 = load %struct.cp_options** %x_addr, align 8
  %212 = getelementptr inbounds %struct.cp_options* %211, i32 0, i32 1
  %213 = load i32* %212, align 4
  %214 = icmp eq i32 %213, 2
  br i1 %214, label %bb106, label %bb122

bb106:                                            ; preds = %bb105
  %215 = load %struct.stat** %src_sb_link, align 8
  %216 = getelementptr inbounds %struct.stat* %215, i32 0, i32 3
  %217 = load i32* %216, align 8
  %218 = and i32 %217, 61440
  %219 = icmp ne i32 %218, 40960
  br i1 %219, label %bb107, label %bb109

bb107:                                            ; preds = %bb106
  %220 = load %struct.stat** %src_sb_link, align 8
  %tmp_src_sb108 = bitcast %struct.stat* %tmp_src_sb to i8*
  %221 = bitcast %struct.stat* %220 to i8*
  %222 = call i8* @memcpy(i8* %tmp_src_sb108, i8* %221, i64 144)
  br label %bb111

bb109:                                            ; preds = %bb106
  %223 = load i8** %src_name_addr, align 8
  %224 = call i32 @stat(i8* noalias %223, %struct.stat* noalias %tmp_src_sb) nounwind
  %225 = icmp ne i32 %224, 0
  br i1 %225, label %bb110, label %bb111

bb110:                                            ; preds = %bb109
  store i32 1, i32* %0, align 4
  br label %bb123

bb111:                                            ; preds = %bb109, %bb107
  %226 = load %struct.stat** %dst_sb_link, align 8
  %227 = getelementptr inbounds %struct.stat* %226, i32 0, i32 3
  %228 = load i32* %227, align 8
  %229 = and i32 %228, 61440
  %230 = icmp ne i32 %229, 40960
  br i1 %230, label %bb112, label %bb114

bb112:                                            ; preds = %bb111
  %231 = load %struct.stat** %dst_sb_link, align 8
  %tmp_dst_sb113 = bitcast %struct.stat* %tmp_dst_sb to i8*
  %232 = bitcast %struct.stat* %231 to i8*
  %233 = call i8* @memcpy(i8* %tmp_dst_sb113, i8* %232, i64 144)
  br label %bb116

bb114:                                            ; preds = %bb111
  %234 = load i8** %dst_name_addr, align 8
  %235 = call i32 @stat(i8* noalias %234, %struct.stat* noalias %tmp_dst_sb) nounwind
  %236 = icmp ne i32 %235, 0
  br i1 %236, label %bb115, label %bb116

bb115:                                            ; preds = %bb114
  store i32 1, i32* %0, align 4
  br label %bb123

bb116:                                            ; preds = %bb114, %bb112
  %237 = getelementptr inbounds %struct.stat* %tmp_src_sb, i32 0, i32 1
  %238 = load i64* %237, align 8
  %239 = getelementptr inbounds %struct.stat* %tmp_dst_sb, i32 0, i32 1
  %240 = load i64* %239, align 8
  %241 = icmp ne i64 %238, %240
  br i1 %241, label %bb118, label %bb117

bb117:                                            ; preds = %bb116
  %242 = getelementptr inbounds %struct.stat* %tmp_src_sb, i32 0, i32 0
  %243 = load i64* %242, align 8
  %244 = getelementptr inbounds %struct.stat* %tmp_dst_sb, i32 0, i32 0
  %245 = load i64* %244, align 8
  %246 = icmp ne i64 %243, %245
  br i1 %246, label %bb118, label %bb119

bb118:                                            ; preds = %bb117, %bb116
  store i32 1, i32* %0, align 4
  br label %bb123

bb119:                                            ; preds = %bb117
  %247 = load %struct.cp_options** %x_addr, align 8
  %248 = getelementptr inbounds %struct.cp_options* %247, i32 0, i32 8
  %249 = load i8* %248, align 1
  %toBool120 = icmp ne i8 %249, 0
  br i1 %toBool120, label %bb121, label %bb122

bb121:                                            ; preds = %bb119
  %250 = load i8** %return_now_addr, align 8
  store i8 1, i8* %250, align 1
  store i32 1, i32* %0, align 4
  br label %bb123

bb122:                                            ; preds = %bb119, %bb105
  store i32 0, i32* %0, align 4
  br label %bb123

bb123:                                            ; preds = %bb122, %bb121, %bb118, %bb115, %bb110, %bb104, %bb97, %bb91, %bb88, %bb80, %bb71, %bb62, %bb61, %bb60, %bb45, %bb36, %bb33, %bb23, %bb19, %bb16, %bb6
  %251 = load i32* %0, align 4
  store i32 %251, i32* %retval, align 4
  %retval124 = load i32* %retval
  %retval124125 = trunc i32 %retval124 to i8
  ret i8 %retval124125
}

define internal zeroext i8 @writable_destination(i8* %file, i32 %mode) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.94 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i32* %mode_addr, align 4
  %2 = and i32 %1, 61440
  %3 = icmp eq i32 %2, 40960
  br i1 %3, label %bb2, label %bb

bb:                                               ; preds = %entry
  %4 = call zeroext i8 @can_write_any_file() nounwind
  %toBool = icmp ne i8 %4, 0
  br i1 %toBool, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %5 = load i8** %file_addr, align 8
  %6 = call i32 @euidaccess(i8* %5, i32 2) nounwind
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb, %entry
  store i32 1, i32* %iftmp.94, align 4
  br label %bb4

bb3:                                              ; preds = %bb1
  store i32 0, i32* %iftmp.94, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %8 = load i32* %iftmp.94, align 4
  %9 = trunc i32 %8 to i8
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define internal zeroext i8 @overwrite_ok(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %dst_name_addr = alloca i8*, align 8
  %dst_sb_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.96 = alloca i8*
  %perms = alloca [12 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8* %dst_name, i8** %dst_name_addr
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb_addr
  %1 = load %struct.stat** %dst_sb_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 3
  %3 = load i32* %2, align 8
  %4 = load i8** %dst_name_addr, align 8
  %5 = call zeroext i8 @writable_destination(i8* %4, i32 %3) nounwind
  %toBool = icmp ne i8 %5, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb13

bb:                                               ; preds = %entry
  %6 = load %struct.stat** %dst_sb_addr, align 8
  %7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 3
  %8 = load i32* %7, align 8
  %perms4 = bitcast [12 x i8]* %perms to i8*
  call void @strmode(i32 %8, i8* %perms4) nounwind
  %9 = getelementptr inbounds [12 x i8]* %perms, i64 0, i64 10
  store i8 0, i8* %9, align 1
  %10 = load %struct.stat** %dst_sb_addr, align 8
  %11 = getelementptr inbounds %struct.stat* %10, i32 0, i32 3
  %12 = load i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = and i64 %13, 4095
  %15 = load i8** %dst_name_addr, align 8
  %16 = call i8* @quotearg_style(i32 4, i8* %15) nounwind
  %17 = load i8** @program_name, align 8
  %18 = load %struct.cp_options** %x_addr, align 8
  %19 = getelementptr inbounds %struct.cp_options* %18, i32 0, i32 9
  %20 = load i8* %19, align 8
  %toBool5 = icmp ne i8 %20, 0
  br i1 %toBool5, label %bb10, label %bb6

bb6:                                              ; preds = %bb
  %21 = load %struct.cp_options** %x_addr, align 8
  %22 = getelementptr inbounds %struct.cp_options* %21, i32 0, i32 6
  %23 = load i8* %22, align 1
  %toBool7 = icmp ne i8 %23, 0
  br i1 %toBool7, label %bb10, label %bb8

bb8:                                              ; preds = %bb6
  %24 = load %struct.cp_options** %x_addr, align 8
  %25 = getelementptr inbounds %struct.cp_options* %24, i32 0, i32 7
  %26 = load i8* %25, align 2
  %toBool9 = icmp ne i8 %26, 0
  br i1 %toBool9, label %bb10, label %bb11

bb10:                                             ; preds = %bb8, %bb6, %bb
  %27 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str27143, i64 0, i64 0)) nounwind
  store i8* %27, i8** %iftmp.96, align 8
  br label %bb12

bb11:                                             ; preds = %bb8
  %28 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8]* @.str28144, i64 0, i64 0)) nounwind
  store i8* %28, i8** %iftmp.96, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %29 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %30 = load i8** %iftmp.96, align 8
  %31 = getelementptr inbounds [12 x i8]* %perms, i64 0, i64 1
  %32 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %29, i8* noalias %30, i8* %17, i8* %16, i64 %14, i8* %31) nounwind
  br label %bb14

bb13:                                             ; preds = %entry
  %33 = load i8** %dst_name_addr, align 8
  %34 = call i8* @quotearg_style(i32 4, i8* %33) nounwind
  %35 = load i8** @program_name, align 8
  %36 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8]* @.str29145, i64 0, i64 0)) nounwind
  %37 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %38 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %37, i8* noalias %36, i8* %35, i8* %34) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %39 = call zeroext i8 @yesno() nounwind
  %40 = zext i8 %39 to i32
  store i32 %40, i32* %0, align 4
  %41 = load i32* %0, align 4
  store i32 %41, i32* %retval, align 4
  %retval15 = load i32* %retval
  %retval1516 = trunc i32 %retval15 to i8
  ret i8 %retval1516
}

define void @dest_info_init(%struct.cp_options* %x) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %0 = call %struct.Hash_table* @hash_initialize(i64 61, %struct.Hash_tuning* null, i64 (i8*, i64)* @triple_hash, i8 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free) nounwind
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 34
  store %struct.Hash_table* %0, %struct.Hash_table** %2, align 8
  ret void
}

define void @src_info_init(%struct.cp_options* %x) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %0 = call %struct.Hash_table* @hash_initialize(i64 61, %struct.Hash_tuning* null, i64 (i8*, i64)* @triple_hash_no_name, i8 (i8*, i8*)* @triple_compare, void (i8*)* @triple_free) nounwind
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 35
  store %struct.Hash_table* %0, %struct.Hash_table** %2, align 8
  ret void
}

define internal zeroext i8 @abandon_move(%struct.cp_options* %x, i8* %dst_name, %struct.stat* %dst_sb) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %dst_name_addr = alloca i8*, align 8
  %dst_sb_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %iftmp.100 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8* %dst_name, i8** %dst_name_addr
  store %struct.stat* %dst_sb, %struct.stat** %dst_sb_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 9
  %3 = load i8* %2, align 8
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb4

bb:                                               ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str30146, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 1735, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.8135, i64 0, i64 0)) nore
  unreachable

bb4:                                              ; preds = %entry
  %4 = load %struct.cp_options** %x_addr, align 8
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 2
  %6 = load i32* %5, align 8
  %7 = icmp eq i32 %6, 2
  br i1 %7, label %bb22, label %bb5

bb5:                                              ; preds = %bb4
  %8 = load %struct.cp_options** %x_addr, align 8
  %9 = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 2
  %10 = load i32* %9, align 8
  %11 = icmp eq i32 %10, 3
  br i1 %11, label %bb17, label %bb6

bb6:                                              ; preds = %bb5
  %12 = load %struct.cp_options** %x_addr, align 8
  %13 = getelementptr inbounds %struct.cp_options* %12, i32 0, i32 2
  %14 = load i32* %13, align 8
  %15 = icmp ne i32 %14, 4
  br i1 %15, label %bb23, label %bb7

bb7:                                              ; preds = %bb6
  %16 = load %struct.cp_options** %x_addr, align 8
  %17 = getelementptr inbounds %struct.cp_options* %16, i32 0, i32 31
  %18 = load i8* %17, align 2
  %toBool8 = icmp ne i8 %18, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  br i1 %toBool11, label %bb23, label %bb12

bb12:                                             ; preds = %bb7
  %19 = load %struct.stat** %dst_sb_addr, align 8
  %20 = getelementptr inbounds %struct.stat* %19, i32 0, i32 3
  %21 = load i32* %20, align 8
  %22 = load i8** %dst_name_addr, align 8
  %23 = call zeroext i8 @writable_destination(i8* %22, i32 %21) nounwind
  %toBool13 = icmp ne i8 %23, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb23

bb17:                                             ; preds = %bb12, %bb5
  %24 = load %struct.cp_options** %x_addr, align 8
  %25 = load i8** %dst_name_addr, align 8
  %26 = load %struct.stat** %dst_sb_addr, align 8
  %27 = call zeroext i8 @overwrite_ok(%struct.cp_options* %24, i8* %25, %struct.stat* %26) nounwind
  %toBool18 = icmp ne i8 %27, 0
  %toBool18not = xor i1 %toBool18, true
  %toBool18not19 = zext i1 %toBool18not to i8
  %toBool21 = icmp ne i8 %toBool18not19, 0
  br i1 %toBool21, label %bb22, label %bb23

bb22:                                             ; preds = %bb17, %bb4
  store i32 1, i32* %iftmp.100, align 4
  br label %bb24

bb23:                                             ; preds = %bb17, %bb12, %bb7, %bb6
  store i32 0, i32* %iftmp.100, align 4
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %28 = load i32* %iftmp.100, align 4
  %29 = trunc i32 %28 to i8
  %30 = zext i8 %29 to i32
  store i32 %30, i32* %0, align 4
  %31 = load i32* %0, align 4
  store i32 %31, i32* %retval, align 4
  %retval25 = load i32* %retval
  %retval2526 = trunc i32 %retval25 to i8
  ret i8 %retval2526
}

declare void @__assert_fail(i8*, i8*, i32, i8*) noreturn nounwind

define internal void @emit_verbose(i8* %src, i8* %dst, i8* %backup_dst_name) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %dst_addr = alloca i8*, align 8
  %backup_dst_name_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %dst, i8** %dst_addr
  store i8* %backup_dst_name, i8** %backup_dst_name_addr
  %0 = load i8** %dst_addr, align 8
  %1 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %0) nounwind
  %2 = load i8** %src_addr, align 8
  %3 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %2) nounwind
  %4 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr inbounds ([9 x i8]* @.str32148, i64 0, i64 0), i8* %3, i8* %1) nounwind
  %5 = load i8** %backup_dst_name_addr, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %7 = load i8** %backup_dst_name_addr, align 8
  %8 = call i8* @quotearg_style(i32 4, i8* %7) nounwind
  %9 = call i8* @gettext(i8* getelementptr inbounds ([14 x i8]* @.str33149, i64 0, i64 0)) nounwind
  %10 = call i32 (i8*, ...)* @printf(i8* noalias %9, i8* %8) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %11 = call i32 @putchar_unlocked(i32 10) nounwind
  ret void
}

define internal void @restore_default_fscreatecon_or_die() nounwind {
entry:
  %0 = call i32 @setfscreatecon(i8* null) nounwind inlinehint
  %1 = icmp ne i32 %0, 0
  br i1 %1, label %bb, label %return

bb:                                               ; preds = %entry
  %2 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str34150, i64 0, i64 0)) nounwind
  %3 = call i32* @__errno_location() nounwind readnone
  %4 = load i32* %3, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %4, i8* %2) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define internal zeroext i8 @create_hard_link(i8* %src_name, i8* %dst_name, i8 zeroext %replace, i8 zeroext %verbose, i8 zeroext %dereference) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %replace_addr = alloca i8, align 1
  %verbose_addr = alloca i8, align 1
  %dereference_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %flags = alloca i32
  %link_failed = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i8 %replace, i8* %replace_addr
  store i8 %verbose, i8* %verbose_addr
  store i8 %dereference, i8* %dereference_addr
  store i32 0, i32* %flags, align 4
  %1 = load i8* %dereference_addr, align 1
  %toBool = icmp ne i8 %1, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1024, i32* %flags, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i8** %src_name_addr, align 8
  %3 = load i8** %dst_name_addr, align 8
  %4 = load i32* %flags, align 4
  %5 = call i32 @linkat(i32 -100, i8* %2, i32 -100, i8* %3, i32 %4) nounwind
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %link_failed, align 1
  %8 = load i8* %link_failed, align 1
  %toBool2 = icmp ne i8 %8, 0
  br i1 %toBool2, label %bb3, label %bb12

bb3:                                              ; preds = %bb1
  %9 = load i8* %replace_addr, align 1
  %toBool4 = icmp ne i8 %9, 0
  br i1 %toBool4, label %bb5, label %bb12

bb5:                                              ; preds = %bb3
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %10, align 4
  %12 = icmp eq i32 %11, 17
  br i1 %12, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %13 = load i8** %dst_name_addr, align 8
  %14 = call i32 @unlink(i8* %13) nounwind
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %16 = load i8** %dst_name_addr, align 8
  %17 = call i8* @quotearg_style(i32 4, i8* %16) nounwind
  %18 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str19135, i64 0, i64 0)) nounwind
  %19 = call i32* @__errno_location() nounwind readnone
  %20 = load i32* %19, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %20, i8* %18, i8* %17) nounwind
  store i32 0, i32* %0, align 4
  br label %bb16

bb8:                                              ; preds = %bb6
  %21 = load i8* %verbose_addr, align 1
  %toBool9 = icmp ne i8 %21, 0
  br i1 %toBool9, label %bb10, label %bb11

bb10:                                             ; preds = %bb8
  %22 = load i8** %dst_name_addr, align 8
  %23 = call i8* @quotearg_style(i32 4, i8* %22) nounwind
  %24 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str20136, i64 0, i64 0)) nounwind
  %25 = call i32 (i8*, ...)* @printf(i8* noalias %24, i8* %23) nounwind
  br label %bb11

bb11:                                             ; preds = %bb10, %bb8
  %26 = load i8** %src_name_addr, align 8
  %27 = load i8** %dst_name_addr, align 8
  %28 = load i32* %flags, align 4
  %29 = call i32 @linkat(i32 -100, i8* %26, i32 -100, i8* %27, i32 %28) nounwind
  %30 = icmp ne i32 %29, 0
  %31 = zext i1 %30 to i8
  store i8 %31, i8* %link_failed, align 1
  br label %bb12

bb12:                                             ; preds = %bb11, %bb5, %bb3, %bb1
  %32 = load i8* %link_failed, align 1
  %toBool13 = icmp ne i8 %32, 0
  br i1 %toBool13, label %bb14, label %bb15

bb14:                                             ; preds = %bb12
  %33 = load i8** %src_name_addr, align 8
  %34 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %33) nounwind
  %35 = load i8** %dst_name_addr, align 8
  %36 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %35) nounwind
  %37 = call i8* @gettext(i8* getelementptr inbounds ([33 x i8]* @.str35151, i64 0, i64 0)) nounwind
  %38 = call i32* @__errno_location() nounwind readnone
  %39 = load i32* %38, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %39, i8* %37, i8* %36, i8* %34) nounwind
  store i32 0, i32* %0, align 4
  br label %bb16

bb15:                                             ; preds = %bb12
  store i32 1, i32* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14, %bb7
  %40 = load i32* %0, align 4
  store i32 %40, i32* %retval, align 4
  %retval17 = load i32* %retval
  %retval1718 = trunc i32 %retval17 to i8
  ret i8 %retval1718
}

declare i32 @linkat(i32, i8*, i32, i8*, i32) nounwind

define internal zeroext i8 @copy_internal(i8* %src_name, i8* %dst_name, i8 zeroext %new_dst, %struct.stat* %parent, %struct.dir_list* %ancestors, %struct.cp_options* %x, i8 zeroext %command_line_arg, i8* %first_dir_created_per_command_line_arg, i8* %copy
entry:
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %new_dst_addr = alloca i8, align 1
  %parent_addr = alloca %struct.stat*, align 8
  %ancestors_addr = alloca %struct.dir_list*, align 8
  %x_addr = alloca %struct.cp_options*, align 8
  %command_line_arg_addr = alloca i8, align 1
  %first_dir_created_per_command_line_arg_addr = alloca i8*, align 8
  %copy_into_self_addr = alloca i8*, align 8
  %rename_succeeded_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.126 = alloca i8
  %iftmp.123 = alloca i32
  %iftmp.119 = alloca i32
  %iftmp.118 = alloca i32
  %iftmp.117 = alloca i32
  %iftmp.116 = alloca i8
  %iftmp.113 = alloca i8*
  %iftmp.109 = alloca i8*
  %0 = alloca i8*
  %iftmp.108 = alloca i8*
  %iftmp.106 = alloca i32
  %iftmp.105 = alloca i8
  %iftmp.104 = alloca i32
  %1 = alloca i32
  %iftmp.102 = alloca i8
  %src_sb = alloca %struct.stat
  %dst_sb = alloca %struct.stat
  %src_mode = alloca i32
  %dst_mode = alloca i32
  %dst_mode_bits = alloca i32
  %omitted_permissions = alloca i32
  %restore_dst_mode = alloca i8
  %earlier_file = alloca i8*
  %dst_backup = alloca i8*
  %backup_succeeded = alloca i8
  %delayed_ok = alloca i8
  %copied_as_regular = alloca i8
  %dest_is_symlink = alloca i8
  %have_dst_lstat = alloca i8
  %dereference = alloca i8
  %use_stat = alloca i8
  %return_now = alloca i8
  %options = alloca i32
  %tmp_backup = alloca i8*
  %fmt = alloca i8*
  %__old = alloca i8*
  %__len = alloca i64
  %__new = alloca i8*
  %lstat_ok = alloca i8
  %tmp_buf = alloca %struct.stat
  %dst_lstat_sb = alloca %struct.stat*
  %dir = alloca %struct.dir_list*
  %dot_sb = alloca %struct.stat
  %dst_parent_sb = alloca %struct.stat
  %dst_parent = alloca i8*
  %in_current_dir = alloca i8
  %src_link_val = alloca i8*
  %saved_errno = alloca i32
  %same_link = alloca i8
  %dest_link_val = alloca i8*
  %sb = alloca %struct.stat
  %timespec = alloca [2 x %struct.timespec]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i8 %new_dst, i8* %new_dst_addr
  store %struct.stat* %parent, %struct.stat** %parent_addr
  store %struct.dir_list* %ancestors, %struct.dir_list** %ancestors_addr
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8 %command_line_arg, i8* %command_line_arg_addr
  store i8* %first_dir_created_per_command_line_arg, i8** %first_dir_created_per_command_line_arg_addr
  store i8* %copy_into_self, i8** %copy_into_self_addr
  store i8* %rename_succeeded, i8** %rename_succeeded_addr
  store i8 0, i8* %restore_dst_mode, align 1
  store i8* null, i8** %earlier_file, align 8
  store i8* null, i8** %dst_backup, align 8
  store i8 0, i8* %backup_succeeded, align 1
  store i8 0, i8* %copied_as_regular, align 1
  store i8 0, i8* %dest_is_symlink, align 1
  store i8 0, i8* %have_dst_lstat, align 1
  %2 = load %struct.cp_options** %x_addr, align 8
  %3 = getelementptr inbounds %struct.cp_options* %2, i32 0, i32 9
  %4 = load i8* %3, align 8
  %toBool = icmp ne i8 %4, 0
  br i1 %toBool, label %bb, label %bb2

bb:                                               ; preds = %entry
  %5 = load i8** %rename_succeeded_addr, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i8** %rename_succeeded_addr, align 8
  store i8 0, i8* %7, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  %8 = load i8** %copy_into_self_addr, align 8
  store i8 0, i8* %8, align 1
  %9 = load %struct.cp_options** %x_addr, align 8
  %10 = getelementptr inbounds %struct.cp_options* %9, i32 0, i32 1
  %11 = load i32* %10, align 4
  %12 = icmp eq i32 %11, 2
  %13 = load i8** %src_name_addr, align 8
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %14 = call i32 @lstat(i8* noalias %13, %struct.stat* noalias %src_sb) nounwind
  %15 = icmp ne i32 %14, 0
  %16 = zext i1 %15 to i8
  store i8 %16, i8* %iftmp.102, align 1
  br label %bb5

bb4:                                              ; preds = %bb2
  %17 = call i32 @stat(i8* noalias %13, %struct.stat* noalias %src_sb) nounwind
  %18 = icmp ne i32 %17, 0
  %19 = zext i1 %18 to i8
  store i8 %19, i8* %iftmp.102, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %20 = load i8* %iftmp.102, align 1
  %toBool6 = icmp ne i8 %20, 0
  br i1 %toBool6, label %bb7, label %bb8

bb7:                                              ; preds = %bb5
  %21 = load i8** %src_name_addr, align 8
  %22 = call i8* @quotearg_style(i32 4, i8* %21) nounwind
  %23 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str36152, i64 0, i64 0)) nounwind
  %24 = call i32* @__errno_location() nounwind readnone
  %25 = load i32* %24, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %25, i8* %23, i8* %22) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb8:                                              ; preds = %bb5
  %26 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3
  %27 = load i32* %26, align 8
  store i32 %27, i32* %src_mode, align 4
  %28 = load i32* %src_mode, align 4
  %29 = and i32 %28, 61440
  %30 = icmp eq i32 %29, 16384
  br i1 %30, label %bb9, label %bb15

bb9:                                              ; preds = %bb8
  %31 = load %struct.cp_options** %x_addr, align 8
  %32 = getelementptr inbounds %struct.cp_options* %31, i32 0, i32 26
  %33 = load i8* %32, align 1
  %toBool10 = icmp ne i8 %33, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %bb14, label %bb15

bb14:                                             ; preds = %bb9
  %34 = load i8** %src_name_addr, align 8
  %35 = call i8* @quotearg_style(i32 4, i8* %34) nounwind
  %36 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8]* @.str37153, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %36, i8* %35) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb15:                                             ; preds = %bb9, %bb8
  %37 = load i8* %command_line_arg_addr, align 1
  %toBool16 = icmp ne i8 %37, 0
  br i1 %toBool16, label %bb17, label %bb23

bb17:                                             ; preds = %bb15
  %38 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3
  %39 = load i32* %38, align 8
  %40 = and i32 %39, 61440
  %41 = icmp ne i32 %40, 16384
  br i1 %41, label %bb18, label %bb22

bb18:                                             ; preds = %bb17
  %42 = load %struct.cp_options** %x_addr, align 8
  %43 = getelementptr inbounds %struct.cp_options* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %bb19, label %bb22

bb19:                                             ; preds = %bb18
  %46 = load %struct.cp_options** %x_addr, align 8
  %47 = getelementptr inbounds %struct.cp_options* %46, i32 0, i32 35
  %48 = load %struct.Hash_table** %47, align 8
  %49 = load i8** %src_name_addr, align 8
  %50 = call zeroext i8 @seen_file(%struct.Hash_table* %48, i8* %49, %struct.stat* %src_sb) nounwind
  %toBool20 = icmp ne i8 %50, 0
  br i1 %toBool20, label %bb21, label %bb22

bb21:                                             ; preds = %bb19
  %51 = load i8** %src_name_addr, align 8
  %52 = call i8* @quotearg_style(i32 4, i8* %51) nounwind
  %53 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8]* @.str38154, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %53, i8* %52) nounwind
  store i32 1, i32* %1, align 4
  br label %bb630

bb22:                                             ; preds = %bb19, %bb18, %bb17
  %54 = load %struct.cp_options** %x_addr, align 8
  %55 = getelementptr inbounds %struct.cp_options* %54, i32 0, i32 35
  %56 = load %struct.Hash_table** %55, align 8
  %57 = load i8** %src_name_addr, align 8
  call void @record_file(%struct.Hash_table* %56, i8* %57, %struct.stat* %src_sb) nounwind
  br label %bb23

bb23:                                             ; preds = %bb22, %bb15
  %58 = load i8* %command_line_arg_addr, align 1
  %59 = zext i8 %58 to i32
  %60 = load %struct.cp_options** %x_addr, align 8
  %61 = trunc i32 %59 to i8
  %62 = call zeroext i8 @should_dereference(%struct.cp_options* %60, i8 zeroext %61) nounwind readonly
  store i8 %62, i8* %dereference, align 1
  %63 = load i8* %new_dst_addr, align 1
  %toBool24 = icmp ne i8 %63, 0
  %toBool24not = xor i1 %toBool24, true
  %toBool24not25 = zext i1 %toBool24not to i8
  %toBool27 = icmp ne i8 %toBool24not25, 0
  br i1 %toBool27, label %bb28, label %bb213

bb28:                                             ; preds = %bb23
  %64 = load i32* %src_mode, align 4
  %65 = and i32 %64, 61440
  %66 = icmp eq i32 %65, 32768
  br i1 %66, label %bb36, label %bb29

bb29:                                             ; preds = %bb28
  %67 = load %struct.cp_options** %x_addr, align 8
  %68 = getelementptr inbounds %struct.cp_options* %67, i32 0, i32 5
  %69 = load i8* %68, align 4
  %toBool30 = icmp ne i8 %69, 0
  %toBool30not = xor i1 %toBool30, true
  %toBool30not31 = zext i1 %toBool30not to i8
  %toBool33 = icmp ne i8 %toBool30not31, 0
  br i1 %toBool33, label %bb70, label %bb34

bb34:                                             ; preds = %bb29
  %70 = load i32* %src_mode, align 4
  %71 = and i32 %70, 61440
  %72 = icmp eq i32 %71, 16384
  br i1 %72, label %bb70, label %bb35

bb35:                                             ; preds = %bb34
  %73 = load i32* %src_mode, align 4
  %74 = and i32 %73, 61440
  %75 = icmp ne i32 %74, 40960
  br i1 %75, label %bb36, label %bb70

bb36:                                             ; preds = %bb35, %bb28
  %76 = load %struct.cp_options** %x_addr, align 8
  %77 = getelementptr inbounds %struct.cp_options* %76, i32 0, i32 9
  %78 = load i8* %77, align 8
  %toBool37 = icmp ne i8 %78, 0
  %toBool37not = xor i1 %toBool37, true
  %toBool37not38 = zext i1 %toBool37not to i8
  %toBool40 = icmp ne i8 %toBool37not38, 0
  %toBool40not = xor i1 %toBool40, true
  %toBool40not41 = zext i1 %toBool40not to i8
  %toBool43 = icmp ne i8 %toBool40not41, 0
  br i1 %toBool43, label %bb70, label %bb44

bb44:                                             ; preds = %bb36
  %79 = load %struct.cp_options** %x_addr, align 8
  %80 = getelementptr inbounds %struct.cp_options* %79, i32 0, i32 28
  %81 = load i8* %80, align 1
  %toBool45 = icmp ne i8 %81, 0
  %toBool45not = xor i1 %toBool45, true
  %toBool45not46 = zext i1 %toBool45not to i8
  %toBool48 = icmp ne i8 %toBool45not46, 0
  %toBool48not = xor i1 %toBool48, true
  %toBool48not49 = zext i1 %toBool48not to i8
  %toBool51 = icmp ne i8 %toBool48not49, 0
  br i1 %toBool51, label %bb70, label %bb52

bb52:                                             ; preds = %bb44
  %82 = load %struct.cp_options** %x_addr, align 8
  %83 = getelementptr inbounds %struct.cp_options* %82, i32 0, i32 8
  %84 = load i8* %83, align 1
  %toBool53 = icmp ne i8 %84, 0
  %toBool53not = xor i1 %toBool53, true
  %toBool53not54 = zext i1 %toBool53not to i8
  %toBool56 = icmp ne i8 %toBool53not54, 0
  %toBool56not = xor i1 %toBool56, true
  %toBool56not57 = zext i1 %toBool56not to i8
  %toBool59 = icmp ne i8 %toBool56not57, 0
  br i1 %toBool59, label %bb70, label %bb60

bb60:                                             ; preds = %bb52
  %85 = load %struct.cp_options** %x_addr, align 8
  %86 = getelementptr inbounds %struct.cp_options* %85, i32 0, i32 0
  %87 = load i32* %86, align 8
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %bb70, label %bb61

bb61:                                             ; preds = %bb60
  %89 = load %struct.cp_options** %x_addr, align 8
  %90 = getelementptr inbounds %struct.cp_options* %89, i32 0, i32 6
  %91 = load i8* %90, align 1
  %toBool62 = icmp ne i8 %91, 0
  %toBool62not = xor i1 %toBool62, true
  %toBool62not63 = zext i1 %toBool62not to i8
  %toBool65 = icmp ne i8 %toBool62not63, 0
  %toBool65not = xor i1 %toBool65, true
  %toBool65not66 = zext i1 %toBool65not to i8
  %toBool68 = icmp ne i8 %toBool65not66, 0
  br i1 %toBool68, label %bb70, label %bb69

bb69:                                             ; preds = %bb61
  store i32 1, i32* %iftmp.104, align 4
  br label %bb71

bb70:                                             ; preds = %bb61, %bb60, %bb52, %bb44, %bb36, %bb35, %bb34, %bb29
  store i32 0, i32* %iftmp.104, align 4
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  %92 = load i32* %iftmp.104, align 4
  %93 = trunc i32 %92 to i8
  store i8 %93, i8* %use_stat, align 1
  %94 = load i8* %use_stat, align 1
  %toBool72 = icmp ne i8 %94, 0
  %95 = load i8** %dst_name_addr, align 8
  br i1 %toBool72, label %bb73, label %bb74

bb73:                                             ; preds = %bb71
  %96 = call i32 @stat(i8* noalias %95, %struct.stat* noalias %dst_sb) nounwind
  %97 = icmp ne i32 %96, 0
  %98 = zext i1 %97 to i8
  store i8 %98, i8* %iftmp.105, align 1
  br label %bb75

bb74:                                             ; preds = %bb71
  %99 = call i32 @lstat(i8* noalias %95, %struct.stat* noalias %dst_sb) nounwind
  %100 = icmp ne i32 %99, 0
  %101 = zext i1 %100 to i8
  store i8 %101, i8* %iftmp.105, align 1
  br label %bb75

bb75:                                             ; preds = %bb74, %bb73
  %102 = load i8* %iftmp.105, align 1
  %toBool76 = icmp ne i8 %102, 0
  br i1 %toBool76, label %bb77, label %bb80

bb77:                                             ; preds = %bb75
  %103 = call i32* @__errno_location() nounwind readnone
  %104 = load i32* %103, align 4
  %105 = icmp ne i32 %104, 2
  br i1 %105, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  %106 = load i8** %dst_name_addr, align 8
  %107 = call i8* @quotearg_style(i32 4, i8* %106) nounwind
  %108 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str36152, i64 0, i64 0)) nounwind
  %109 = call i32* @__errno_location() nounwind readnone
  %110 = load i32* %109, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %110, i8* %108, i8* %107) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb79:                                             ; preds = %bb77
  store i8 1, i8* %new_dst_addr, align 1
  br label %bb213

bb80:                                             ; preds = %bb75
  %111 = load i8* %use_stat, align 1
  %toBool81 = icmp ne i8 %111, 0
  %toBool81not = xor i1 %toBool81, true
  %toBool81not82 = zext i1 %toBool81not to i32
  %112 = trunc i32 %toBool81not82 to i8
  store i8 %112, i8* %have_dst_lstat, align 1
  %113 = load i8** %src_name_addr, align 8
  %114 = load i8** %dst_name_addr, align 8
  %115 = load %struct.cp_options** %x_addr, align 8
  %116 = call zeroext i8 @same_file_ok(i8* %113, %struct.stat* %src_sb, i8* %114, %struct.stat* %dst_sb, %struct.cp_options* %115, i8* %return_now) nounwind
  %toBool84 = icmp ne i8 %116, 0
  %toBool84not = xor i1 %toBool84, true
  %toBool84not85 = zext i1 %toBool84not to i8
  %toBool87 = icmp ne i8 %toBool84not85, 0
  br i1 %toBool87, label %bb88, label %bb89

bb88:                                             ; preds = %bb80
  %117 = load i8** %dst_name_addr, align 8
  %118 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %117) nounwind
  %119 = load i8** %src_name_addr, align 8
  %120 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %119) nounwind
  %121 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8]* @.str39155, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %121, i8* %120, i8* %118) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb89:                                             ; preds = %bb80
  %122 = load i32* %src_mode, align 4
  %123 = and i32 %122, 61440
  %124 = icmp ne i32 %123, 16384
  br i1 %124, label %bb90, label %bb115

bb90:                                             ; preds = %bb89
  %125 = load %struct.cp_options** %x_addr, align 8
  %126 = getelementptr inbounds %struct.cp_options* %125, i32 0, i32 29
  %127 = load i8* %126, align 4
  %toBool91 = icmp ne i8 %127, 0
  br i1 %toBool91, label %bb92, label %bb115

bb92:                                             ; preds = %bb90
  %128 = load %struct.cp_options** %x_addr, align 8
  %129 = getelementptr inbounds %struct.cp_options* %128, i32 0, i32 15
  %130 = load i8* %129, align 2
  %toBool93 = icmp ne i8 %130, 0
  %toBool93not = xor i1 %toBool93, true
  %toBool93not94 = zext i1 %toBool93not to i8
  %toBool96 = icmp ne i8 %toBool93not94, 0
  br i1 %toBool96, label %bb104, label %bb97

bb97:                                             ; preds = %bb92
  %131 = load %struct.cp_options** %x_addr, align 8
  %132 = getelementptr inbounds %struct.cp_options* %131, i32 0, i32 9
  %133 = load i8* %132, align 8
  %toBool98 = icmp ne i8 %133, 0
  %toBool98not = xor i1 %toBool98, true
  %toBool98not99 = zext i1 %toBool98not to i8
  %toBool101 = icmp ne i8 %toBool98not99, 0
  br i1 %toBool101, label %bb103, label %bb102

bb102:                                            ; preds = %bb97
  %134 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 0
  %135 = load i64* %134, align 8
  %136 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %137 = load i64* %136, align 8
  %138 = icmp ne i64 %135, %137
  br i1 %138, label %bb103, label %bb104

bb103:                                            ; preds = %bb102, %bb97
  store i32 1, i32* %iftmp.106, align 4
  br label %bb105

bb104:                                            ; preds = %bb102, %bb92
  store i32 0, i32* %iftmp.106, align 4
  br label %bb105

bb105:                                            ; preds = %bb104, %bb103
  %139 = load i32* %iftmp.106, align 4
  store i32 %139, i32* %options, align 4
  %140 = load i8** %dst_name_addr, align 8
  %141 = load i32* %options, align 4
  %142 = call i32 @utimecmp(i8* %140, %struct.stat* %dst_sb, %struct.stat* %src_sb, i32 %141) nounwind
  %143 = icmp sge i32 %142, 0
  br i1 %143, label %bb106, label %bb115

bb106:                                            ; preds = %bb105
  %144 = load i8** %rename_succeeded_addr, align 8
  %145 = icmp ne i8* %144, null
  br i1 %145, label %bb107, label %bb108

bb107:                                            ; preds = %bb106
  %146 = load i8** %rename_succeeded_addr, align 8
  store i8 1, i8* %146, align 1
  br label %bb108

bb108:                                            ; preds = %bb107, %bb106
  %147 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %148 = load i64* %147, align 8
  %149 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %150 = load i64* %149, align 8
  %151 = load i8** %dst_name_addr, align 8
  %152 = call i8* @remember_copied(i8* %151, i64 %150, i64 %148) nounwind
  store i8* %152, i8** %earlier_file, align 8
  %153 = load i8** %earlier_file, align 8
  %154 = icmp ne i8* %153, null
  br i1 %154, label %bb109, label %bb114

bb109:                                            ; preds = %bb108
  %155 = load i8* %dereference, align 1
  %156 = zext i8 %155 to i32
  %157 = load %struct.cp_options** %x_addr, align 8
  %158 = getelementptr inbounds %struct.cp_options* %157, i32 0, i32 30
  %159 = load i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = load i8** %earlier_file, align 8
  %162 = load i8** %dst_name_addr, align 8
  %163 = trunc i32 %160 to i8
  %164 = trunc i32 %156 to i8
  %165 = call zeroext i8 @create_hard_link(i8* %161, i8* %162, i8 zeroext 1, i8 zeroext %163, i8 zeroext %164) nounwind
  %toBool110 = icmp ne i8 %165, 0
  %toBool110not = xor i1 %toBool110, true
  %toBool110not111 = zext i1 %toBool110not to i8
  %toBool113 = icmp ne i8 %toBool110not111, 0
  br i1 %toBool113, label %un_backup, label %bb114

bb114:                                            ; preds = %bb109, %bb108
  store i32 1, i32* %1, align 4
  br label %bb630

bb115:                                            ; preds = %bb105, %bb90, %bb89
  %166 = load %struct.cp_options** %x_addr, align 8
  %167 = getelementptr inbounds %struct.cp_options* %166, i32 0, i32 9
  %168 = load i8* %167, align 8
  %toBool116 = icmp ne i8 %168, 0
  br i1 %toBool116, label %bb117, label %bb123

bb117:                                            ; preds = %bb115
  %169 = load %struct.cp_options** %x_addr, align 8
  %170 = load i8** %dst_name_addr, align 8
  %171 = call zeroext i8 @abandon_move(%struct.cp_options* %169, i8* %170, %struct.stat* %dst_sb) nounwind
  %toBool118 = icmp ne i8 %171, 0
  br i1 %toBool118, label %bb119, label %bb132

bb119:                                            ; preds = %bb117
  %172 = load i8** %rename_succeeded_addr, align 8
  %173 = icmp ne i8* %172, null
  br i1 %173, label %bb120, label %bb121

bb120:                                            ; preds = %bb119
  %174 = load i8** %rename_succeeded_addr, align 8
  store i8 1, i8* %174, align 1
  br label %bb121

bb121:                                            ; preds = %bb120, %bb119
  store i32 1, i32* %1, align 4
  br label %bb630

bb123:                                            ; preds = %bb115
  %175 = load i32* %src_mode, align 4
  %176 = and i32 %175, 61440
  %177 = icmp ne i32 %176, 16384
  br i1 %177, label %bb124, label %bb132

bb124:                                            ; preds = %bb123
  %178 = load %struct.cp_options** %x_addr, align 8
  %179 = getelementptr inbounds %struct.cp_options* %178, i32 0, i32 2
  %180 = load i32* %179, align 8
  %181 = icmp eq i32 %180, 2
  br i1 %181, label %bb131, label %bb125

bb125:                                            ; preds = %bb124
  %182 = load %struct.cp_options** %x_addr, align 8
  %183 = getelementptr inbounds %struct.cp_options* %182, i32 0, i32 2
  %184 = load i32* %183, align 8
  %185 = icmp ne i32 %184, 3
  br i1 %185, label %bb132, label %bb126

bb126:                                            ; preds = %bb125
  %186 = load %struct.cp_options** %x_addr, align 8
  %187 = load i8** %dst_name_addr, align 8
  %188 = call zeroext i8 @overwrite_ok(%struct.cp_options* %186, i8* %187, %struct.stat* %dst_sb) nounwind
  %toBool127 = icmp ne i8 %188, 0
  %toBool127not = xor i1 %toBool127, true
  %toBool127not128 = zext i1 %toBool127not to i8
  %toBool130 = icmp ne i8 %toBool127not128, 0
  br i1 %toBool130, label %bb131, label %bb132

bb131:                                            ; preds = %bb126, %bb124
  store i32 1, i32* %1, align 4
  br label %bb630

bb132:                                            ; preds = %bb117, %bb126, %bb125, %bb123
  %189 = load i8* %return_now, align 1
  %toBool133 = icmp ne i8 %189, 0
  br i1 %toBool133, label %bb134, label %bb135

bb134:                                            ; preds = %bb132
  store i32 1, i32* %1, align 4
  br label %bb630

bb135:                                            ; preds = %bb132
  %190 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %191 = load i32* %190, align 8
  %192 = and i32 %191, 61440
  %193 = icmp ne i32 %192, 16384
  br i1 %193, label %bb136, label %bb151

bb136:                                            ; preds = %bb135
  %194 = load i32* %src_mode, align 4
  %195 = and i32 %194, 61440
  %196 = icmp eq i32 %195, 16384
  br i1 %196, label %bb137, label %bb145

bb137:                                            ; preds = %bb136
  %197 = load %struct.cp_options** %x_addr, align 8
  %198 = getelementptr inbounds %struct.cp_options* %197, i32 0, i32 9
  %199 = load i8* %198, align 8
  %toBool138 = icmp ne i8 %199, 0
  %toBool138not = xor i1 %toBool138, true
  %toBool138not139 = zext i1 %toBool138not to i8
  %toBool141 = icmp ne i8 %toBool138not139, 0
  br i1 %toBool141, label %bb144, label %bb142

bb142:                                            ; preds = %bb137
  %200 = load %struct.cp_options** %x_addr, align 8
  %201 = getelementptr inbounds %struct.cp_options* %200, i32 0, i32 0
  %202 = load i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %bb144, label %bb145

bb144:                                            ; preds = %bb142, %bb137
  %204 = load i8** %src_name_addr, align 8
  %205 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %204) nounwind
  %206 = load i8** %dst_name_addr, align 8
  %207 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %206) nounwind
  %208 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str40156, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %208, i8* %207, i8* %205) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb145:                                            ; preds = %bb142, %bb136
  %209 = load i8* %command_line_arg_addr, align 1
  %toBool146 = icmp ne i8 %209, 0
  br i1 %toBool146, label %bb147, label %bb151

bb147:                                            ; preds = %bb145
  %210 = load %struct.cp_options** %x_addr, align 8
  %211 = getelementptr inbounds %struct.cp_options* %210, i32 0, i32 0
  %212 = load i32* %211, align 8
  %213 = icmp ne i32 %212, 3
  br i1 %213, label %bb148, label %bb151

bb148:                                            ; preds = %bb147
  %214 = load %struct.cp_options** %x_addr, align 8
  %215 = getelementptr inbounds %struct.cp_options* %214, i32 0, i32 34
  %216 = load %struct.Hash_table** %215, align 8
  %217 = load i8** %dst_name_addr, align 8
  %218 = call zeroext i8 @seen_file(%struct.Hash_table* %216, i8* %217, %struct.stat* %dst_sb) nounwind
  %toBool149 = icmp ne i8 %218, 0
  br i1 %toBool149, label %bb150, label %bb151

bb150:                                            ; preds = %bb148
  %219 = load i8** %src_name_addr, align 8
  %220 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %219) nounwind
  %221 = load i8** %dst_name_addr, align 8
  %222 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %221) nounwind
  %223 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8]* @.str41157, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %223, i8* %222, i8* %220) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb151:                                            ; preds = %bb148, %bb147, %bb145, %bb135
  %224 = load i32* %src_mode, align 4
  %225 = and i32 %224, 61440
  %226 = icmp ne i32 %225, 16384
  br i1 %226, label %bb152, label %bb161

bb152:                                            ; preds = %bb151
  %227 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %228 = load i32* %227, align 8
  %229 = and i32 %228, 61440
  %230 = icmp eq i32 %229, 16384
  br i1 %230, label %bb153, label %bb161

bb153:                                            ; preds = %bb152
  %231 = load %struct.cp_options** %x_addr, align 8
  %232 = getelementptr inbounds %struct.cp_options* %231, i32 0, i32 9
  %233 = load i8* %232, align 8
  %toBool154 = icmp ne i8 %233, 0
  %toBool154not = xor i1 %toBool154, true
  %toBool154not155 = zext i1 %toBool154not to i8
  %toBool157 = icmp ne i8 %toBool154not155, 0
  br i1 %toBool157, label %bb160, label %bb158

bb158:                                            ; preds = %bb153
  %234 = load %struct.cp_options** %x_addr, align 8
  %235 = getelementptr inbounds %struct.cp_options* %234, i32 0, i32 0
  %236 = load i32* %235, align 8
  %237 = icmp eq i32 %236, 0
  br i1 %237, label %bb160, label %bb161

bb160:                                            ; preds = %bb158, %bb153
  %238 = load i8** %dst_name_addr, align 8
  %239 = call i8* @quotearg_style(i32 4, i8* %238) nounwind
  %240 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8]* @.str42158, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %240, i8* %239) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb161:                                            ; preds = %bb158, %bb152, %bb151
  %241 = load %struct.cp_options** %x_addr, align 8
  %242 = getelementptr inbounds %struct.cp_options* %241, i32 0, i32 9
  %243 = load i8* %242, align 8
  %toBool162 = icmp ne i8 %243, 0
  br i1 %toBool162, label %bb163, label %bb167

bb163:                                            ; preds = %bb161
  %244 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3
  %245 = load i32* %244, align 8
  %246 = and i32 %245, 61440
  %247 = icmp eq i32 %246, 16384
  br i1 %247, label %bb164, label %bb167

bb164:                                            ; preds = %bb163
  %248 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %249 = load i32* %248, align 8
  %250 = and i32 %249, 61440
  %251 = icmp ne i32 %250, 16384
  br i1 %251, label %bb165, label %bb167

bb165:                                            ; preds = %bb164
  %252 = load %struct.cp_options** %x_addr, align 8
  %253 = getelementptr inbounds %struct.cp_options* %252, i32 0, i32 0
  %254 = load i32* %253, align 8
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %bb166, label %bb167

bb166:                                            ; preds = %bb165
  %256 = load i8** %dst_name_addr, align 8
  %257 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %256) nounwind
  %258 = load i8** %src_name_addr, align 8
  %259 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %258) nounwind
  %260 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8]* @.str43159, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %260, i8* %259, i8* %257) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb167:                                            ; preds = %bb165, %bb164, %bb163, %bb161
  %261 = load %struct.cp_options** %x_addr, align 8
  %262 = getelementptr inbounds %struct.cp_options* %261, i32 0, i32 0
  %263 = load i32* %262, align 8
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %bb191, label %bb168

bb168:                                            ; preds = %bb167
  %265 = load i8** %src_name_addr, align 8
  %266 = call i8* @last_component(i8* %265) nounwind readonly
  %267 = call zeroext i8 @dot_or_dotdot(i8* %266) nounwind
  %toBool169 = icmp ne i8 %267, 0
  %toBool169not = xor i1 %toBool169, true
  %toBool169not170 = zext i1 %toBool169not to i8
  %toBool172 = icmp ne i8 %toBool169not170, 0
  %toBool172not = xor i1 %toBool172, true
  %toBool172not173 = zext i1 %toBool172not to i8
  %toBool175 = icmp ne i8 %toBool172not173, 0
  br i1 %toBool175, label %bb191, label %bb176

bb176:                                            ; preds = %bb168
  %268 = load %struct.cp_options** %x_addr, align 8
  %269 = getelementptr inbounds %struct.cp_options* %268, i32 0, i32 9
  %270 = load i8* %269, align 8
  %toBool177 = icmp ne i8 %270, 0
  br i1 %toBool177, label %bb179, label %bb178

bb178:                                            ; preds = %bb176
  %271 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %272 = load i32* %271, align 8
  %273 = and i32 %272, 61440
  %274 = icmp ne i32 %273, 16384
  br i1 %274, label %bb179, label %bb191

bb179:                                            ; preds = %bb178, %bb176
  %275 = load %struct.cp_options** %x_addr, align 8
  %276 = getelementptr inbounds %struct.cp_options* %275, i32 0, i32 0
  %277 = load i32* %276, align 8
  %278 = load i8** %dst_name_addr, align 8
  %279 = call i8* @find_backup_file_name(i8* %278, i32 %277) nounwind
  store i8* %279, i8** %tmp_backup, align 8
  %280 = load i8** %tmp_backup, align 8
  %281 = load i8** %src_name_addr, align 8
  %282 = call i32 @strcmp(i8* %280, i8* %281) nounwind readonly
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %bb180, label %bb185

bb180:                                            ; preds = %bb179
  %284 = load %struct.cp_options** %x_addr, align 8
  %285 = getelementptr inbounds %struct.cp_options* %284, i32 0, i32 9
  %286 = load i8* %285, align 8
  %toBool181 = icmp ne i8 %286, 0
  br i1 %toBool181, label %bb182, label %bb183

bb182:                                            ; preds = %bb180
  %287 = call i8* @gettext(i8* getelementptr inbounds ([50 x i8]* @.str44160, i64 0, i64 0)) nounwind
  store i8* %287, i8** %iftmp.108, align 8
  br label %bb184

bb183:                                            ; preds = %bb180
  %288 = call i8* @gettext(i8* getelementptr inbounds ([51 x i8]* @.str45161, i64 0, i64 0)) nounwind
  store i8* %288, i8** %iftmp.108, align 8
  br label %bb184

bb184:                                            ; preds = %bb183, %bb182
  %289 = load i8** %iftmp.108, align 8
  store i8* %289, i8** %fmt, align 8
  %290 = load i8** %src_name_addr, align 8
  %291 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %290) nounwind
  %292 = load i8** %dst_name_addr, align 8
  %293 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %292) nounwind
  %294 = load i8** %fmt, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %294, i8* %293, i8* %291) nounwind
  %295 = load i8** %tmp_backup, align 8
  call void @free(i8* %295) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb185:                                            ; preds = %bb179
  %296 = load i8** %tmp_backup, align 8
  store i8* %296, i8** %__old, align 8
  %297 = load i8** %__old, align 8
  %298 = call i64 @strlen(i8* %297) nounwind readonly
  %299 = add i64 %298, 1
  store i64 %299, i64* %__len, align 8
  %300 = load i64* %__len, align 8
  %301 = alloca i8, i64 %300, align 1
  store i8* %301, i8** %__new, align 8
  %302 = load i8** %__new, align 8
  %303 = load i8** %__old, align 8
  %304 = load i64* %__len, align 8
  %305 = call i8* @memcpy(i8* %302, i8* %303, i64 %304)
  store i8* %302, i8** %0, align 8
  %306 = load i8** %0, align 8
  store i8* %306, i8** %dst_backup, align 8
  %307 = load i8** %tmp_backup, align 8
  call void @free(i8* %307) nounwind
  %308 = load i8** %dst_name_addr, align 8
  %309 = load i8** %dst_backup, align 8
  %310 = call i32 @rename(i8* %308, i8* %309) nounwind
  %311 = icmp ne i32 %310, 0
  br i1 %311, label %bb186, label %bb189

bb186:                                            ; preds = %bb185
  %312 = call i32* @__errno_location() nounwind readnone
  %313 = load i32* %312, align 4
  %314 = icmp ne i32 %313, 2
  br i1 %314, label %bb187, label %bb188

bb187:                                            ; preds = %bb186
  %315 = load i8** %dst_name_addr, align 8
  %316 = call i8* @quotearg_style(i32 4, i8* %315) nounwind
  %317 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str46162, i64 0, i64 0)) nounwind
  %318 = call i32* @__errno_location() nounwind readnone
  %319 = load i32* %318, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %319, i8* %317, i8* %316) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb188:                                            ; preds = %bb186
  store i8* null, i8** %dst_backup, align 8
  br label %bb190

bb189:                                            ; preds = %bb185
  store i8 1, i8* %backup_succeeded, align 1
  br label %bb190

bb190:                                            ; preds = %bb189, %bb188
  store i8 1, i8* %new_dst_addr, align 1
  br label %bb213

bb191:                                            ; preds = %bb178, %bb168, %bb167
  %320 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %321 = load i32* %320, align 8
  %322 = and i32 %321, 61440
  %323 = icmp ne i32 %322, 16384
  br i1 %323, label %bb192, label %bb213

bb192:                                            ; preds = %bb191
  %324 = load %struct.cp_options** %x_addr, align 8
  %325 = getelementptr inbounds %struct.cp_options* %324, i32 0, i32 9
  %326 = load i8* %325, align 8
  %toBool193 = icmp ne i8 %326, 0
  %toBool193not = xor i1 %toBool193, true
  %toBool193not194 = zext i1 %toBool193not to i8
  %toBool196 = icmp ne i8 %toBool193not194, 0
  br i1 %toBool196, label %bb197, label %bb213

bb197:                                            ; preds = %bb192
  %327 = load %struct.cp_options** %x_addr, align 8
  %328 = getelementptr inbounds %struct.cp_options* %327, i32 0, i32 6
  %329 = load i8* %328, align 1
  %toBool198 = icmp ne i8 %329, 0
  br i1 %toBool198, label %bb207, label %bb199

bb199:                                            ; preds = %bb197
  %330 = load %struct.cp_options** %x_addr, align 8
  %331 = getelementptr inbounds %struct.cp_options* %330, i32 0, i32 18
  %332 = load i8* %331, align 1
  %toBool200 = icmp ne i8 %332, 0
  %toBool200not = xor i1 %toBool200, true
  %toBool200not201 = zext i1 %toBool200not to i8
  %toBool203 = icmp ne i8 %toBool200not201, 0
  br i1 %toBool203, label %bb205, label %bb204

bb204:                                            ; preds = %bb199
  %333 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 2
  %334 = load i64* %333, align 8
  %335 = icmp ugt i64 %334, 1
  br i1 %335, label %bb207, label %bb205

bb205:                                            ; preds = %bb204, %bb199
  %336 = load %struct.cp_options** %x_addr, align 8
  %337 = getelementptr inbounds %struct.cp_options* %336, i32 0, i32 1
  %338 = load i32* %337, align 4
  %339 = icmp ne i32 %338, 2
  br i1 %339, label %bb213, label %bb206

bb206:                                            ; preds = %bb205
  %340 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 3
  %341 = load i32* %340, align 8
  %342 = and i32 %341, 61440
  %343 = icmp ne i32 %342, 32768
  br i1 %343, label %bb207, label %bb213

bb207:                                            ; preds = %bb206, %bb204, %bb197
  %344 = load i8** %dst_name_addr, align 8
  %345 = call i32 @unlink(i8* %344) nounwind
  %346 = icmp ne i32 %345, 0
  br i1 %346, label %bb208, label %bb210

bb208:                                            ; preds = %bb207
  %347 = call i32* @__errno_location() nounwind readnone
  %348 = load i32* %347, align 4
  %349 = icmp ne i32 %348, 2
  br i1 %349, label %bb209, label %bb210

bb209:                                            ; preds = %bb208
  %350 = load i8** %dst_name_addr, align 8
  %351 = call i8* @quotearg_style(i32 4, i8* %350) nounwind
  %352 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str19135, i64 0, i64 0)) nounwind
  %353 = call i32* @__errno_location() nounwind readnone
  %354 = load i32* %353, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %354, i8* %352, i8* %351) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb210:                                            ; preds = %bb208, %bb207
  store i8 1, i8* %new_dst_addr, align 1
  %355 = load %struct.cp_options** %x_addr, align 8
  %356 = getelementptr inbounds %struct.cp_options* %355, i32 0, i32 30
  %357 = load i8* %356, align 1
  %toBool211 = icmp ne i8 %357, 0
  br i1 %toBool211, label %bb212, label %bb213

bb212:                                            ; preds = %bb210
  %358 = load i8** %dst_name_addr, align 8
  %359 = call i8* @quotearg_style(i32 4, i8* %358) nounwind
  %360 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str20136, i64 0, i64 0)) nounwind
  %361 = call i32 (i8*, ...)* @printf(i8* noalias %360, i8* %359) nounwind
  br label %bb213

bb213:                                            ; preds = %bb212, %bb210, %bb206, %bb205, %bb192, %bb191, %bb190, %bb79, %bb23
  %362 = load i8* %command_line_arg_addr, align 1
  %toBool214 = icmp ne i8 %362, 0
  br i1 %toBool214, label %bb215, label %bb234

bb215:                                            ; preds = %bb213
  %363 = load %struct.cp_options** %x_addr, align 8
  %364 = getelementptr inbounds %struct.cp_options* %363, i32 0, i32 34
  %365 = load %struct.Hash_table** %364, align 8
  %366 = icmp ne %struct.Hash_table* %365, null
  br i1 %366, label %bb216, label %bb234

bb216:                                            ; preds = %bb215
  %367 = load %struct.cp_options** %x_addr, align 8
  %368 = getelementptr inbounds %struct.cp_options* %367, i32 0, i32 9
  %369 = load i8* %368, align 8
  %toBool217 = icmp ne i8 %369, 0
  %toBool217not = xor i1 %toBool217, true
  %toBool217not218 = zext i1 %toBool217not to i8
  %toBool220 = icmp ne i8 %toBool217not218, 0
  br i1 %toBool220, label %bb221, label %bb234

bb221:                                            ; preds = %bb216
  %370 = load %struct.cp_options** %x_addr, align 8
  %371 = getelementptr inbounds %struct.cp_options* %370, i32 0, i32 0
  %372 = load i32* %371, align 8
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %bb222, label %bb234

bb222:                                            ; preds = %bb221
  store i8 1, i8* %lstat_ok, align 1
  %374 = load i8* %have_dst_lstat, align 1
  %toBool223 = icmp ne i8 %374, 0
  br i1 %toBool223, label %bb224, label %bb225

bb224:                                            ; preds = %bb222
  store %struct.stat* %dst_sb, %struct.stat** %dst_lstat_sb, align 8
  br label %bb228

bb225:                                            ; preds = %bb222
  %375 = load i8** %dst_name_addr, align 8
  %376 = call i32 @lstat(i8* noalias %375, %struct.stat* noalias %tmp_buf) nounwind
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %bb226, label %bb227

bb226:                                            ; preds = %bb225
  store %struct.stat* %tmp_buf, %struct.stat** %dst_lstat_sb, align 8
  br label %bb228

bb227:                                            ; preds = %bb225
  store i8 0, i8* %lstat_ok, align 1
  br label %bb228

bb228:                                            ; preds = %bb227, %bb226, %bb224
  %378 = load i8* %lstat_ok, align 1
  %toBool229 = icmp ne i8 %378, 0
  br i1 %toBool229, label %bb230, label %bb234

bb230:                                            ; preds = %bb228
  %379 = load %struct.stat** %dst_lstat_sb, align 8
  %380 = getelementptr inbounds %struct.stat* %379, i32 0, i32 3
  %381 = load i32* %380, align 8
  %382 = and i32 %381, 61440
  %383 = icmp eq i32 %382, 40960
  br i1 %383, label %bb231, label %bb234

bb231:                                            ; preds = %bb230
  %384 = load %struct.cp_options** %x_addr, align 8
  %385 = getelementptr inbounds %struct.cp_options* %384, i32 0, i32 34
  %386 = load %struct.Hash_table** %385, align 8
  %387 = load i8** %dst_name_addr, align 8
  %388 = load %struct.stat** %dst_lstat_sb, align 8
  %389 = call zeroext i8 @seen_file(%struct.Hash_table* %386, i8* %387, %struct.stat* %388) nounwind
  %toBool232 = icmp ne i8 %389, 0
  br i1 %toBool232, label %bb233, label %bb234

bb233:                                            ; preds = %bb231
  %390 = load i8** %dst_name_addr, align 8
  %391 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %390) nounwind
  %392 = load i8** %src_name_addr, align 8
  %393 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %392) nounwind
  %394 = call i8* @gettext(i8* getelementptr inbounds ([49 x i8]* @.str47163, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %394, i8* %393, i8* %391) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb234:                                            ; preds = %bb231, %bb230, %bb228, %bb221, %bb216, %bb215, %bb213
  %395 = load %struct.cp_options** %x_addr, align 8
  %396 = getelementptr inbounds %struct.cp_options* %395, i32 0, i32 30
  %397 = load i8* %396, align 1
  %toBool235 = icmp ne i8 %397, 0
  br i1 %toBool235, label %bb236, label %bb242

bb236:                                            ; preds = %bb234
  %398 = load i32* %src_mode, align 4
  %399 = and i32 %398, 61440
  %400 = icmp ne i32 %399, 16384
  br i1 %400, label %bb237, label %bb242

bb237:                                            ; preds = %bb236
  %401 = load i8* %backup_succeeded, align 1
  %toBool238 = icmp ne i8 %401, 0
  br i1 %toBool238, label %bb239, label %bb240

bb239:                                            ; preds = %bb237
  %402 = load i8** %dst_backup, align 8
  store i8* %402, i8** %iftmp.109, align 8
  br label %bb241

bb240:                                            ; preds = %bb237
  store i8* null, i8** %iftmp.109, align 8
  br label %bb241

bb241:                                            ; preds = %bb240, %bb239
  %403 = load i8** %src_name_addr, align 8
  %404 = load i8** %dst_name_addr, align 8
  %405 = load i8** %iftmp.109, align 8
  call void @emit_verbose(i8* %403, i8* %404, i8* %405) nounwind
  br label %bb242

bb242:                                            ; preds = %bb241, %bb236, %bb234
  %406 = load %struct.cp_options** %x_addr, align 8
  %407 = getelementptr inbounds %struct.cp_options* %406, i32 0, i32 26
  %408 = load i8* %407, align 1
  %toBool243 = icmp ne i8 %408, 0
  %toBool243not = xor i1 %toBool243, true
  %toBool243not244 = zext i1 %toBool243not to i8
  %toBool246 = icmp ne i8 %toBool243not244, 0
  br i1 %toBool246, label %bb253, label %bb247

bb247:                                            ; preds = %bb242
  %409 = load i32* %src_mode, align 4
  %410 = and i32 %409, 61440
  %411 = icmp ne i32 %410, 16384
  br i1 %411, label %bb253, label %bb248

bb248:                                            ; preds = %bb247
  %412 = load i8* %command_line_arg_addr, align 1
  %toBool249 = icmp ne i8 %412, 0
  %413 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %414 = load i64* %413, align 8
  %415 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %416 = load i64* %415, align 8
  br i1 %toBool249, label %bb250, label %bb251

bb250:                                            ; preds = %bb248
  %417 = load i8** %dst_name_addr, align 8
  %418 = call i8* @remember_copied(i8* %417, i64 %416, i64 %414) nounwind
  store i8* %418, i8** %earlier_file, align 8
  br label %bb276

bb251:                                            ; preds = %bb248
  %419 = call i8* @src_to_dest_lookup(i64 %416, i64 %414) nounwind
  store i8* %419, i8** %earlier_file, align 8
  br label %bb276

bb253:                                            ; preds = %bb247, %bb242
  %420 = load %struct.cp_options** %x_addr, align 8
  %421 = getelementptr inbounds %struct.cp_options* %420, i32 0, i32 9
  %422 = load i8* %421, align 8
  %toBool254 = icmp ne i8 %422, 0
  %toBool254not = xor i1 %toBool254, true
  %toBool254not255 = zext i1 %toBool254not to i8
  %toBool257 = icmp ne i8 %toBool254not255, 0
  br i1 %toBool257, label %bb260, label %bb258

bb258:                                            ; preds = %bb253
  %423 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 2
  %424 = load i64* %423, align 8
  %425 = icmp ne i64 %424, 1
  br i1 %425, label %bb260, label %bb259

bb259:                                            ; preds = %bb258
  %426 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %427 = load i64* %426, align 8
  %428 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %429 = load i64* %428, align 8
  %430 = call i8* @src_to_dest_lookup(i64 %429, i64 %427) nounwind
  store i8* %430, i8** %earlier_file, align 8
  br label %bb276

bb260:                                            ; preds = %bb258, %bb253
  %431 = load %struct.cp_options** %x_addr, align 8
  %432 = getelementptr inbounds %struct.cp_options* %431, i32 0, i32 18
  %433 = load i8* %432, align 1
  %toBool261 = icmp ne i8 %433, 0
  br i1 %toBool261, label %bb262, label %bb276

bb262:                                            ; preds = %bb260
  %434 = load %struct.cp_options** %x_addr, align 8
  %435 = getelementptr inbounds %struct.cp_options* %434, i32 0, i32 8
  %436 = load i8* %435, align 1
  %toBool263 = icmp ne i8 %436, 0
  %toBool263not = xor i1 %toBool263, true
  %toBool263not264 = zext i1 %toBool263not to i8
  %toBool266 = icmp ne i8 %toBool263not264, 0
  br i1 %toBool266, label %bb267, label %bb276

bb267:                                            ; preds = %bb262
  %437 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 2
  %438 = load i64* %437, align 8
  %439 = icmp ugt i64 %438, 1
  br i1 %439, label %bb275, label %bb268

bb268:                                            ; preds = %bb267
  %440 = load i8* %command_line_arg_addr, align 1
  %toBool269 = icmp ne i8 %440, 0
  %toBool269not = xor i1 %toBool269, true
  %toBool269not270 = zext i1 %toBool269not to i8
  %toBool272 = icmp ne i8 %toBool269not270, 0
  br i1 %toBool272, label %bb274, label %bb273

bb273:                                            ; preds = %bb268
  %441 = load %struct.cp_options** %x_addr, align 8
  %442 = getelementptr inbounds %struct.cp_options* %441, i32 0, i32 1
  %443 = load i32* %442, align 4
  %444 = icmp eq i32 %443, 3
  br i1 %444, label %bb275, label %bb274

bb274:                                            ; preds = %bb273, %bb268
  %445 = load %struct.cp_options** %x_addr, align 8
  %446 = getelementptr inbounds %struct.cp_options* %445, i32 0, i32 1
  %447 = load i32* %446, align 4
  %448 = icmp eq i32 %447, 4
  br i1 %448, label %bb275, label %bb276

bb275:                                            ; preds = %bb274, %bb273, %bb267
  %449 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %450 = load i64* %449, align 8
  %451 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %452 = load i64* %451, align 8
  %453 = load i8** %dst_name_addr, align 8
  %454 = call i8* @remember_copied(i8* %453, i64 %452, i64 %450) nounwind
  store i8* %454, i8** %earlier_file, align 8
  br label %bb276

bb276:                                            ; preds = %bb250, %bb251, %bb275, %bb274, %bb262, %bb260, %bb259
  %455 = load i8** %earlier_file, align 8
  %456 = icmp ne i8* %455, null
  br i1 %456, label %bb277, label %bb304

bb277:                                            ; preds = %bb276
  %457 = load i32* %src_mode, align 4
  %458 = and i32 %457, 61440
  %459 = icmp eq i32 %458, 16384
  br i1 %459, label %bb278, label %bb298

bb278:                                            ; preds = %bb277
  %460 = load i8** %src_name_addr, align 8
  %461 = load i8** %earlier_file, align 8
  %462 = call zeroext i8 @same_name(i8* %460, i8* %461) nounwind
  %toBool279 = icmp ne i8 %462, 0
  br i1 %toBool279, label %bb280, label %bb281

bb280:                                            ; preds = %bb278
  %463 = load i8** @top_level_dst_name, align 8
  %464 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %463) nounwind
  %465 = load i8** @top_level_src_name, align 8
  %466 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %465) nounwind
  %467 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str48164, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %467, i8* %466, i8* %464) nounwind
  %468 = load i8** %copy_into_self_addr, align 8
  store i8 1, i8* %468, align 1
  br label %un_backup

bb281:                                            ; preds = %bb278
  %469 = load i8** %dst_name_addr, align 8
  %470 = load i8** %earlier_file, align 8
  %471 = call zeroext i8 @same_name(i8* %469, i8* %470) nounwind
  %toBool282 = icmp ne i8 %471, 0
  br i1 %toBool282, label %bb283, label %bb288

bb283:                                            ; preds = %bb281
  %472 = load i8** @top_level_src_name, align 8
  %473 = call i8* @quotearg_style(i32 4, i8* %472) nounwind
  %474 = call i8* @gettext(i8* getelementptr inbounds ([54 x i8]* @.str49165, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %474, i8* %473) nounwind
  %475 = load %struct.cp_options** %x_addr, align 8
  %476 = getelementptr inbounds %struct.cp_options* %475, i32 0, i32 9
  %477 = load i8* %476, align 8
  %toBool284 = icmp ne i8 %477, 0
  br i1 %toBool284, label %bb285, label %bb287

bb285:                                            ; preds = %bb283
  %478 = load i8** %rename_succeeded_addr, align 8
  %479 = icmp ne i8* %478, null
  br i1 %479, label %bb286, label %bb287

bb286:                                            ; preds = %bb285
  %480 = load i8** %rename_succeeded_addr, align 8
  store i8 1, i8* %480, align 1
  br label %bb287

bb287:                                            ; preds = %bb286, %bb285, %bb283
  store i32 1, i32* %1, align 4
  br label %bb630

bb288:                                            ; preds = %bb281
  %481 = load %struct.cp_options** %x_addr, align 8
  %482 = getelementptr inbounds %struct.cp_options* %481, i32 0, i32 1
  %483 = load i32* %482, align 4
  %484 = icmp ne i32 %483, 4
  br i1 %484, label %bb289, label %bb304

bb289:                                            ; preds = %bb288
  %485 = load i8* %command_line_arg_addr, align 1
  %toBool290 = icmp ne i8 %485, 0
  %toBool290not = xor i1 %toBool290, true
  %toBool290not291 = zext i1 %toBool290not to i8
  %toBool293 = icmp ne i8 %toBool290not291, 0
  br i1 %toBool293, label %bb296, label %bb294

bb294:                                            ; preds = %bb289
  %486 = load %struct.cp_options** %x_addr, align 8
  %487 = getelementptr inbounds %struct.cp_options* %486, i32 0, i32 1
  %488 = load i32* %487, align 4
  %489 = icmp ne i32 %488, 3
  br i1 %489, label %bb296, label %bb304

bb296:                                            ; preds = %bb294, %bb289
  %490 = load i8** %earlier_file, align 8
  %491 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %490) nounwind
  %492 = load i8** %dst_name_addr, align 8
  %493 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %492) nounwind
  %494 = call i8* @gettext(i8* getelementptr inbounds ([45 x i8]* @.str50166, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %494, i8* %493, i8* %491) nounwind
  br label %un_backup

bb298:                                            ; preds = %bb277
  %495 = load i8* %dereference, align 1
  %496 = zext i8 %495 to i32
  %497 = load %struct.cp_options** %x_addr, align 8
  %498 = getelementptr inbounds %struct.cp_options* %497, i32 0, i32 30
  %499 = load i8* %498, align 1
  %500 = zext i8 %499 to i32
  %501 = load i8** %earlier_file, align 8
  %502 = load i8** %dst_name_addr, align 8
  %503 = trunc i32 %500 to i8
  %504 = trunc i32 %496 to i8
  %505 = call zeroext i8 @create_hard_link(i8* %501, i8* %502, i8 zeroext 1, i8 zeroext %503, i8 zeroext %504) nounwind
  %toBool299 = icmp ne i8 %505, 0
  %toBool299not = xor i1 %toBool299, true
  %toBool299not300 = zext i1 %toBool299not to i8
  %toBool302 = icmp ne i8 %toBool299not300, 0
  br i1 %toBool302, label %un_backup, label %bb303

bb303:                                            ; preds = %bb298
  store i32 1, i32* %1, align 4
  br label %bb630

bb304:                                            ; preds = %bb288, %bb294, %bb276
  %506 = load %struct.cp_options** %x_addr, align 8
  %507 = getelementptr inbounds %struct.cp_options* %506, i32 0, i32 9
  %508 = load i8* %507, align 8
  %toBool305 = icmp ne i8 %508, 0
  br i1 %toBool305, label %bb306, label %bb336

bb306:                                            ; preds = %bb304
  %509 = load i8** %src_name_addr, align 8
  %510 = load i8** %dst_name_addr, align 8
  %511 = call i32 @rename(i8* %509, i8* %510) nounwind
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %bb307, label %bb324

bb307:                                            ; preds = %bb306
  %513 = load %struct.cp_options** %x_addr, align 8
  %514 = getelementptr inbounds %struct.cp_options* %513, i32 0, i32 30
  %515 = load i8* %514, align 1
  %toBool308 = icmp ne i8 %515, 0
  br i1 %toBool308, label %bb309, label %bb315

bb309:                                            ; preds = %bb307
  %516 = load i32* %src_mode, align 4
  %517 = and i32 %516, 61440
  %518 = icmp eq i32 %517, 16384
  br i1 %518, label %bb310, label %bb315

bb310:                                            ; preds = %bb309
  %519 = load i8* %backup_succeeded, align 1
  %toBool311 = icmp ne i8 %519, 0
  br i1 %toBool311, label %bb312, label %bb313

bb312:                                            ; preds = %bb310
  %520 = load i8** %dst_backup, align 8
  store i8* %520, i8** %iftmp.113, align 8
  br label %bb314

bb313:                                            ; preds = %bb310
  store i8* null, i8** %iftmp.113, align 8
  br label %bb314

bb314:                                            ; preds = %bb313, %bb312
  %521 = load i8** %src_name_addr, align 8
  %522 = load i8** %dst_name_addr, align 8
  %523 = load i8** %iftmp.113, align 8
  call void @emit_verbose(i8* %521, i8* %522, i8* %523) nounwind
  br label %bb315

bb315:                                            ; preds = %bb314, %bb309, %bb307
  %524 = load %struct.cp_options** %x_addr, align 8
  %525 = getelementptr inbounds %struct.cp_options* %524, i32 0, i32 17
  %526 = load i8* %525, align 8
  %toBool316 = icmp ne i8 %526, 0
  br i1 %toBool316, label %bb317, label %bb318

bb317:                                            ; preds = %bb315
  %527 = load i8** %dst_name_addr, align 8
  %528 = load %struct.cp_options** %x_addr, align 8
  %529 = call zeroext i8 @set_file_security_ctx(i8* %527, i8 zeroext 0, i8 zeroext 1, %struct.cp_options* %528) nounwind
  br label %bb318

bb318:                                            ; preds = %bb317, %bb315
  %530 = load i8** %rename_succeeded_addr, align 8
  %531 = icmp ne i8* %530, null
  br i1 %531, label %bb319, label %bb320

bb319:                                            ; preds = %bb318
  %532 = load i8** %rename_succeeded_addr, align 8
  store i8 1, i8* %532, align 1
  br label %bb320

bb320:                                            ; preds = %bb319, %bb318
  %533 = load i8* %command_line_arg_addr, align 1
  %toBool321 = icmp ne i8 %533, 0
  br i1 %toBool321, label %bb322, label %bb323

bb322:                                            ; preds = %bb320
  %534 = load %struct.cp_options** %x_addr, align 8
  %535 = getelementptr inbounds %struct.cp_options* %534, i32 0, i32 34
  %536 = load %struct.Hash_table** %535, align 8
  %537 = load i8** %dst_name_addr, align 8
  call void @record_file(%struct.Hash_table* %536, i8* %537, %struct.stat* %src_sb) nounwind
  br label %bb323

bb323:                                            ; preds = %bb322, %bb320
  store i32 1, i32* %1, align 4
  br label %bb630

bb324:                                            ; preds = %bb306
  %538 = call i32* @__errno_location() nounwind readnone
  %539 = load i32* %538, align 4
  %540 = icmp eq i32 %539, 22
  br i1 %540, label %bb325, label %bb326

bb325:                                            ; preds = %bb324
  %541 = load i8** @top_level_dst_name, align 8
  %542 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %541) nounwind
  %543 = load i8** @top_level_src_name, align 8
  %544 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %543) nounwind
  %545 = call i8* @gettext(i8* getelementptr inbounds ([47 x i8]* @.str51167, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %545, i8* %544, i8* %542) nounwind
  %546 = load i8** %copy_into_self_addr, align 8
  store i8 1, i8* %546, align 1
  store i32 1, i32* %1, align 4
  br label %bb630

bb326:                                            ; preds = %bb324
  %547 = call i32* @__errno_location() nounwind readnone
  %548 = load i32* %547, align 4
  %549 = icmp ne i32 %548, 18
  br i1 %549, label %bb327, label %bb328

bb327:                                            ; preds = %bb326
  %550 = load i8** %dst_name_addr, align 8
  %551 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %550) nounwind
  %552 = load i8** %src_name_addr, align 8
  %553 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %552) nounwind
  %554 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str52168, i64 0, i64 0)) nounwind
  %555 = call i32* @__errno_location() nounwind readnone
  %556 = load i32* %555, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %556, i8* %554, i8* %553, i8* %551) nounwind
  %557 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %558 = load i64* %557, align 8
  %559 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %560 = load i64* %559, align 8
  call void @forget_created(i64 %560, i64 %558) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb328:                                            ; preds = %bb326
  %561 = load i32* %src_mode, align 4
  %562 = and i32 %561, 61440
  %563 = icmp eq i32 %562, 16384
  %564 = load i8** %dst_name_addr, align 8
  br i1 %563, label %bb329, label %bb330

bb329:                                            ; preds = %bb328
  %565 = call i32 @rmdir(i8* %564) nounwind
  %566 = icmp ne i32 %565, 0
  %567 = zext i1 %566 to i8
  store i8 %567, i8* %iftmp.116, align 1
  br label %bb331

bb330:                                            ; preds = %bb328
  %568 = call i32 @unlink(i8* %564) nounwind
  %569 = icmp ne i32 %568, 0
  %570 = zext i1 %569 to i8
  store i8 %570, i8* %iftmp.116, align 1
  br label %bb331

bb331:                                            ; preds = %bb330, %bb329
  %571 = load i8* %iftmp.116, align 1
  %toBool332 = icmp ne i8 %571, 0
  br i1 %toBool332, label %bb333, label %bb335

bb333:                                            ; preds = %bb331
  %572 = call i32* @__errno_location() nounwind readnone
  %573 = load i32* %572, align 4
  %574 = icmp ne i32 %573, 2
  br i1 %574, label %bb334, label %bb335

bb334:                                            ; preds = %bb333
  %575 = load i8** %dst_name_addr, align 8
  %576 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %575) nounwind
  %577 = load i8** %src_name_addr, align 8
  %578 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %577) nounwind
  %579 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8]* @.str53169, i64 0, i64 0)) nounwind
  %580 = call i32* @__errno_location() nounwind readnone
  %581 = load i32* %580, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %581, i8* %579, i8* %578, i8* %576) nounwind
  %582 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %583 = load i64* %582, align 8
  %584 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %585 = load i64* %584, align 8
  call void @forget_created(i64 %585, i64 %583) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb335:                                            ; preds = %bb333, %bb331
  store i8 1, i8* %new_dst_addr, align 1
  br label %bb336

bb336:                                            ; preds = %bb335, %bb304
  %586 = load %struct.cp_options** %x_addr, align 8
  %587 = getelementptr inbounds %struct.cp_options* %586, i32 0, i32 27
  %588 = load i8* %587, align 2
  %toBool337 = icmp ne i8 %588, 0
  br i1 %toBool337, label %bb338, label %bb339

bb338:                                            ; preds = %bb336
  %589 = load %struct.cp_options** %x_addr, align 8
  %590 = getelementptr inbounds %struct.cp_options* %589, i32 0, i32 4
  %591 = load i32* %590, align 8
  %592 = and i32 %591, 4095
  store i32 %592, i32* %iftmp.117, align 4
  br label %bb340

bb339:                                            ; preds = %bb336
  %593 = load i32* %src_mode, align 4
  %594 = and i32 %593, 4095
  store i32 %594, i32* %iftmp.117, align 4
  br label %bb340

bb340:                                            ; preds = %bb339, %bb338
  %595 = load i32* %iftmp.117, align 4
  store i32 %595, i32* %dst_mode_bits, align 4
  %596 = load %struct.cp_options** %x_addr, align 8
  %597 = getelementptr inbounds %struct.cp_options* %596, i32 0, i32 13
  %598 = load i8* %597, align 4
  %toBool341 = icmp ne i8 %598, 0
  br i1 %toBool341, label %bb342, label %bb343

bb342:                                            ; preds = %bb340
  store i32 63, i32* %iftmp.118, align 4
  br label %bb347

bb343:                                            ; preds = %bb340
  %599 = load i32* %src_mode, align 4
  %600 = and i32 %599, 61440
  %601 = icmp eq i32 %600, 16384
  br i1 %601, label %bb344, label %bb345

bb344:                                            ; preds = %bb343
  store i32 18, i32* %iftmp.119, align 4
  br label %bb346

bb345:                                            ; preds = %bb343
  store i32 0, i32* %iftmp.119, align 4
  br label %bb346

bb346:                                            ; preds = %bb345, %bb344
  %602 = load i32* %iftmp.119, align 4
  store i32 %602, i32* %iftmp.118, align 4
  br label %bb347

bb347:                                            ; preds = %bb346, %bb342
  %603 = load i32* %iftmp.118, align 4
  %604 = load i32* %dst_mode_bits, align 4
  %605 = and i32 %603, %604
  store i32 %605, i32* %omitted_permissions, align 4
  store i8 1, i8* %delayed_ok, align 1
  %606 = load i8* %new_dst_addr, align 1
  %607 = zext i8 %606 to i32
  %608 = load i8** %src_name_addr, align 8
  %609 = load i8** %dst_name_addr, align 8
  %610 = load i32* %src_mode, align 4
  %611 = trunc i32 %607 to i8
  %612 = load %struct.cp_options** %x_addr, align 8
  %613 = call zeroext i8 @set_process_security_ctx(i8* %608, i8* %609, i32 %610, i8 zeroext %611, %struct.cp_options* %612) nounwind
  %toBool348 = icmp ne i8 %613, 0
  %toBool348not = xor i1 %toBool348, true
  %toBool348not349 = zext i1 %toBool348not to i8
  %toBool351 = icmp ne i8 %toBool348not349, 0
  br i1 %toBool351, label %bb352, label %bb353

bb352:                                            ; preds = %bb347
  store i32 0, i32* %1, align 4
  br label %bb630

bb353:                                            ; preds = %bb347
  %614 = load i32* %src_mode, align 4
  %615 = and i32 %614, 61440
  %616 = icmp eq i32 %615, 16384
  br i1 %616, label %bb354, label %bb399

bb354:                                            ; preds = %bb353
  %617 = load %struct.dir_list** %ancestors_addr, align 8
  %618 = call zeroext i8 @is_ancestor(%struct.stat* %src_sb, %struct.dir_list* %617) nounwind readonly
  %toBool355 = icmp ne i8 %618, 0
  br i1 %toBool355, label %bb356, label %bb357

bb356:                                            ; preds = %bb354
  %619 = load i8** %src_name_addr, align 8
  %620 = call i8* @quotearg_style(i32 4, i8* %619) nounwind
  %621 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str54170, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %621, i8* %620) nounwind
  br label %un_backup

bb357:                                            ; preds = %bb354
  %622 = alloca i8, i64 24, align 1
  %623 = bitcast i8* %622 to %struct.dir_list*
  store %struct.dir_list* %623, %struct.dir_list** %dir, align 8
  %624 = load %struct.dir_list** %dir, align 8
  %625 = getelementptr inbounds %struct.dir_list* %624, i32 0, i32 0
  %626 = load %struct.dir_list** %ancestors_addr, align 8
  store %struct.dir_list* %626, %struct.dir_list** %625, align 8
  %627 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %628 = load i64* %627, align 8
  %629 = load %struct.dir_list** %dir, align 8
  %630 = getelementptr inbounds %struct.dir_list* %629, i32 0, i32 1
  store i64 %628, i64* %630, align 8
  %631 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %632 = load i64* %631, align 8
  %633 = load %struct.dir_list** %dir, align 8
  %634 = getelementptr inbounds %struct.dir_list* %633, i32 0, i32 2
  store i64 %632, i64* %634, align 8
  %635 = load i8* %new_dst_addr, align 1
  %toBool358 = icmp ne i8 %635, 0
  br i1 %toBool358, label %bb360, label %bb359

bb359:                                            ; preds = %bb357
  %636 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %637 = load i32* %636, align 8
  %638 = and i32 %637, 61440
  %639 = icmp ne i32 %638, 16384
  br i1 %639, label %bb360, label %bb378

bb360:                                            ; preds = %bb359, %bb357
  %640 = load i32* %omitted_permissions, align 4
  %not = xor i32 %640, -1
  %641 = load i32* %dst_mode_bits, align 4
  %642 = and i32 %not, %641
  %643 = load i8** %dst_name_addr, align 8
  %644 = call i32 @mkdir(i8* %643, i32 %642) nounwind
  %645 = icmp ne i32 %644, 0
  %646 = load i8** %dst_name_addr, align 8
  br i1 %645, label %bb362, label %bb363

bb362:                                            ; preds = %bb360
  %647 = call i8* @quotearg_style(i32 4, i8* %646) nounwind
  %648 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str55171, i64 0, i64 0)) nounwind
  %649 = call i32* @__errno_location() nounwind readnone
  %650 = load i32* %649, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %650, i8* %648, i8* %647) nounwind
  br label %un_backup

bb363:                                            ; preds = %bb360
  %651 = call i32 @lstat(i8* noalias %646, %struct.stat* noalias %dst_sb) nounwind
  %652 = icmp ne i32 %651, 0
  br i1 %652, label %bb364, label %bb365

bb364:                                            ; preds = %bb363
  %653 = load i8** %dst_name_addr, align 8
  %654 = call i8* @quotearg_style(i32 4, i8* %653) nounwind
  %655 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str36152, i64 0, i64 0)) nounwind
  %656 = call i32* @__errno_location() nounwind readnone
  %657 = load i32* %656, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %657, i8* %655, i8* %654) nounwind
  br label %un_backup

bb365:                                            ; preds = %bb363
  %658 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %659 = load i32* %658, align 8
  %660 = and i32 %659, 448
  %661 = icmp ne i32 %660, 448
  br i1 %661, label %bb366, label %bb368

bb366:                                            ; preds = %bb365
  %662 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %663 = load i32* %662, align 8
  store i32 %663, i32* %dst_mode, align 4
  store i8 1, i8* %restore_dst_mode, align 1
  %664 = load i32* %dst_mode, align 4
  %665 = or i32 %664, 448
  %666 = load i8** %dst_name_addr, align 8
  %667 = call i32 @chmod(i8* %666, i32 %665) nounwind
  %668 = icmp ne i32 %667, 0
  br i1 %668, label %bb367, label %bb368

bb367:                                            ; preds = %bb366
  %669 = load i8** %dst_name_addr, align 8
  %670 = call i8* @quotearg_style(i32 4, i8* %669) nounwind
  %671 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str56172, i64 0, i64 0)) nounwind
  %672 = call i32* @__errno_location() nounwind readnone
  %673 = load i32* %672, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %673, i8* %671, i8* %670) nounwind
  br label %un_backup

bb368:                                            ; preds = %bb366, %bb365
  %674 = load i8** %first_dir_created_per_command_line_arg_addr, align 8
  %675 = load i8* %674, align 1
  %toBool369 = icmp ne i8 %675, 0
  %toBool369not = xor i1 %toBool369, true
  %toBool369not370 = zext i1 %toBool369not to i8
  %toBool372 = icmp ne i8 %toBool369not370, 0
  br i1 %toBool372, label %bb373, label %bb374

bb373:                                            ; preds = %bb368
  %676 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 0
  %677 = load i64* %676, align 8
  %678 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 1
  %679 = load i64* %678, align 8
  %680 = load i8** %dst_name_addr, align 8
  %681 = call i8* @remember_copied(i8* %680, i64 %679, i64 %677) nounwind
  %682 = load i8** %first_dir_created_per_command_line_arg_addr, align 8
  store i8 1, i8* %682, align 1
  br label %bb374

bb374:                                            ; preds = %bb373, %bb368
  %683 = load %struct.cp_options** %x_addr, align 8
  %684 = getelementptr inbounds %struct.cp_options* %683, i32 0, i32 30
  %685 = load i8* %684, align 1
  %toBool375 = icmp ne i8 %685, 0
  br i1 %toBool375, label %bb376, label %bb389

bb376:                                            ; preds = %bb374
  %686 = load i8** %src_name_addr, align 8
  %687 = load i8** %dst_name_addr, align 8
  call void @emit_verbose(i8* %686, i8* %687, i8* null) nounwind
  br label %bb389

bb378:                                            ; preds = %bb359
  store i32 0, i32* %omitted_permissions, align 4
  %688 = load %struct.cp_options** %x_addr, align 8
  %689 = getelementptr inbounds %struct.cp_options* %688, i32 0, i32 17
  %690 = load i8* %689, align 8
  %toBool379 = icmp ne i8 %690, 0
  br i1 %toBool379, label %bb382, label %bb380

bb380:                                            ; preds = %bb378
  %691 = load %struct.cp_options** %x_addr, align 8
  %692 = getelementptr inbounds %struct.cp_options* %691, i32 0, i32 21
  %693 = load i8* %692, align 4
  %toBool381 = icmp ne i8 %693, 0
  br i1 %toBool381, label %bb382, label %bb389

bb382:                                            ; preds = %bb380, %bb378
  %694 = load %struct.cp_options** %x_addr, align 8
  %695 = getelementptr inbounds %struct.cp_options* %694, i32 0, i32 21
  %696 = load i8* %695, align 4
  %697 = zext i8 %696 to i32
  %698 = load i8** %dst_name_addr, align 8
  %699 = trunc i32 %697 to i8
  %700 = load %struct.cp_options** %x_addr, align 8
  %701 = call zeroext i8 @set_file_security_ctx(i8* %698, i8 zeroext %699, i8 zeroext 0, %struct.cp_options* %700) nounwind
  %toBool383 = icmp ne i8 %701, 0
  %toBool383not = xor i1 %toBool383, true
  %toBool383not384 = zext i1 %toBool383not to i8
  %toBool386 = icmp ne i8 %toBool383not384, 0
  br i1 %toBool386, label %bb387, label %bb389

bb387:                                            ; preds = %bb382
  %702 = load %struct.cp_options** %x_addr, align 8
  %703 = getelementptr inbounds %struct.cp_options* %702, i32 0, i32 22
  %704 = load i8* %703, align 1
  %toBool388 = icmp ne i8 %704, 0
  br i1 %toBool388, label %un_backup, label %bb389

bb389:                                            ; preds = %bb374, %bb376, %bb387, %bb382, %bb380
  %705 = load %struct.cp_options** %x_addr, align 8
  %706 = getelementptr inbounds %struct.cp_options* %705, i32 0, i32 12
  %707 = load i8* %706, align 1
  %toBool390 = icmp ne i8 %707, 0
  %toBool390not = xor i1 %toBool390, true
  %toBool390not391 = zext i1 %toBool390not to i8
  %toBool393 = icmp ne i8 %toBool390not391, 0
  br i1 %toBool393, label %bb397, label %bb394

bb394:                                            ; preds = %bb389
  %708 = load %struct.stat** %parent_addr, align 8
  %709 = icmp eq %struct.stat* %708, null
  br i1 %709, label %bb397, label %bb395

bb395:                                            ; preds = %bb394
  %710 = load %struct.stat** %parent_addr, align 8
  %711 = getelementptr inbounds %struct.stat* %710, i32 0, i32 0
  %712 = load i64* %711, align 8
  %713 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %714 = load i64* %713, align 8
  %715 = icmp eq i64 %712, %714
  br i1 %715, label %bb397, label %bb494

bb397:                                            ; preds = %bb395, %bb394, %bb389
  %716 = load i8* %new_dst_addr, align 1
  %717 = zext i8 %716 to i32
  %718 = load i8** %src_name_addr, align 8
  %719 = load i8** %dst_name_addr, align 8
  %720 = trunc i32 %717 to i8
  %721 = load %struct.dir_list** %dir, align 8
  %722 = load %struct.cp_options** %x_addr, align 8
  %723 = load i8** %first_dir_created_per_command_line_arg_addr, align 8
  %724 = load i8** %copy_into_self_addr, align 8
  %725 = call zeroext i8 @copy_dir(i8* %718, i8* %719, i8 zeroext %720, %struct.stat* %src_sb, %struct.dir_list* %721, %struct.cp_options* %722, i8* %723, i8* %724) nounwind
  store i8 %725, i8* %delayed_ok, align 1
  br label %bb494

bb399:                                            ; preds = %bb353
  %726 = load %struct.cp_options** %x_addr, align 8
  %727 = getelementptr inbounds %struct.cp_options* %726, i32 0, i32 28
  %728 = load i8* %727, align 1
  %toBool400 = icmp ne i8 %728, 0
  br i1 %toBool400, label %bb401, label %bb418

bb401:                                            ; preds = %bb399
  store i8 1, i8* %dest_is_symlink, align 1
  %729 = load i8** %src_name_addr, align 8
  %730 = load i8* %729, align 1
  %731 = icmp ne i8 %730, 47
  br i1 %731, label %bb402, label %bb415

bb402:                                            ; preds = %bb401
  %732 = load i8** %dst_name_addr, align 8
  %733 = call i8* @dir_name(i8* %732) nounwind
  store i8* %733, i8** %dst_parent, align 8
  %734 = load i8** %dst_parent, align 8
  %735 = call i32 @strcmp(i8* getelementptr inbounds ([2 x i8]* @.str57173, i64 0, i64 0), i8* %734) nounwind readonly
  %736 = icmp eq i32 %735, 0
  br i1 %736, label %bb407, label %bb403

bb403:                                            ; preds = %bb402
  %737 = call i32 @stat(i8* noalias getelementptr inbounds ([2 x i8]* @.str57173, i64 0, i64 0), %struct.stat* noalias %dot_sb) nounwind
  %738 = icmp ne i32 %737, 0
  br i1 %738, label %bb407, label %bb404

bb404:                                            ; preds = %bb403
  %739 = load i8** %dst_parent, align 8
  %740 = call i32 @stat(i8* noalias %739, %struct.stat* noalias %dst_parent_sb) nounwind
  %741 = icmp ne i32 %740, 0
  br i1 %741, label %bb407, label %bb405

bb405:                                            ; preds = %bb404
  %742 = getelementptr inbounds %struct.stat* %dot_sb, i32 0, i32 1
  %743 = load i64* %742, align 8
  %744 = getelementptr inbounds %struct.stat* %dst_parent_sb, i32 0, i32 1
  %745 = load i64* %744, align 8
  %746 = icmp ne i64 %743, %745
  br i1 %746, label %bb408, label %bb406

bb406:                                            ; preds = %bb405
  %747 = getelementptr inbounds %struct.stat* %dot_sb, i32 0, i32 0
  %748 = load i64* %747, align 8
  %749 = getelementptr inbounds %struct.stat* %dst_parent_sb, i32 0, i32 0
  %750 = load i64* %749, align 8
  %751 = icmp eq i64 %748, %750
  br i1 %751, label %bb407, label %bb408

bb407:                                            ; preds = %bb406, %bb404, %bb403, %bb402
  store i32 1, i32* %iftmp.123, align 4
  br label %bb409

bb408:                                            ; preds = %bb406, %bb405
  store i32 0, i32* %iftmp.123, align 4
  br label %bb409

bb409:                                            ; preds = %bb408, %bb407
  %752 = load i32* %iftmp.123, align 4
  %753 = trunc i32 %752 to i8
  store i8 %753, i8* %in_current_dir, align 1
  %754 = load i8** %dst_parent, align 8
  call void @free(i8* %754) nounwind
  %755 = load i8* %in_current_dir, align 1
  %toBool410 = icmp ne i8 %755, 0
  %toBool410not = xor i1 %toBool410, true
  %toBool410not411 = zext i1 %toBool410not to i8
  %toBool413 = icmp ne i8 %toBool410not411, 0
  br i1 %toBool413, label %bb414, label %bb415

bb414:                                            ; preds = %bb409
  %756 = load i8** %dst_name_addr, align 8
  %757 = call i8* @quotearg_n_style_colon(i32 0, i32 3, i8* %756) nounwind
  %758 = call i8* @gettext(i8* getelementptr inbounds ([63 x i8]* @.str58174, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %758, i8* %757) nounwind
  br label %un_backup

bb415:                                            ; preds = %bb409, %bb401
  %759 = load i8** %src_name_addr, align 8
  %760 = load i8** %dst_name_addr, align 8
  %761 = call i32 @symlink(i8* %759, i8* %760) nounwind
  %762 = icmp ne i32 %761, 0
  br i1 %762, label %bb416, label %bb494

bb416:                                            ; preds = %bb415
  %763 = load i8** %src_name_addr, align 8
  %764 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %763) nounwind
  %765 = load i8** %dst_name_addr, align 8
  %766 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %765) nounwind
  %767 = call i8* @gettext(i8* getelementptr inbounds ([37 x i8]* @.str59175, i64 0, i64 0)) nounwind
  %768 = call i32* @__errno_location() nounwind readnone
  %769 = load i32* %768, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %769, i8* %767, i8* %766, i8* %764) nounwind
  br label %un_backup

bb418:                                            ; preds = %bb399
  %770 = load %struct.cp_options** %x_addr, align 8
  %771 = getelementptr inbounds %struct.cp_options* %770, i32 0, i32 8
  %772 = load i8* %771, align 1
  %toBool419 = icmp ne i8 %772, 0
  br i1 %toBool419, label %bb420, label %bb426

bb420:                                            ; preds = %bb418
  %773 = load i8* %dereference, align 1
  %774 = zext i8 %773 to i32
  %775 = load i8** %src_name_addr, align 8
  %776 = load i8** %dst_name_addr, align 8
  %777 = trunc i32 %774 to i8
  %778 = call zeroext i8 @create_hard_link(i8* %775, i8* %776, i8 zeroext 0, i8 zeroext 0, i8 zeroext %777) nounwind
  %toBool421 = icmp ne i8 %778, 0
  %toBool421not = xor i1 %toBool421, true
  %toBool421not422 = zext i1 %toBool421not to i8
  %toBool424 = icmp ne i8 %toBool421not422, 0
  br i1 %toBool424, label %un_backup, label %bb494

bb426:                                            ; preds = %bb418
  %779 = load i32* %src_mode, align 4
  %780 = and i32 %779, 61440
  %781 = icmp eq i32 %780, 32768
  br i1 %781, label %bb433, label %bb427

bb427:                                            ; preds = %bb426
  %782 = load %struct.cp_options** %x_addr, align 8
  %783 = getelementptr inbounds %struct.cp_options* %782, i32 0, i32 5
  %784 = load i8* %783, align 4
  %toBool428 = icmp ne i8 %784, 0
  %toBool428not = xor i1 %toBool428, true
  %toBool428not429 = zext i1 %toBool428not to i8
  %toBool431 = icmp ne i8 %toBool428not429, 0
  br i1 %toBool431, label %bb439, label %bb432

bb432:                                            ; preds = %bb427
  %785 = load i32* %src_mode, align 4
  %786 = and i32 %785, 61440
  %787 = icmp ne i32 %786, 40960
  br i1 %787, label %bb433, label %bb439

bb433:                                            ; preds = %bb432, %bb426
  store i8 1, i8* %copied_as_regular, align 1
  %788 = load i32* %dst_mode_bits, align 4
  %789 = and i32 %788, 511
  %790 = load i8** %src_name_addr, align 8
  %791 = load i8** %dst_name_addr, align 8
  %792 = load %struct.cp_options** %x_addr, align 8
  %793 = load i32* %omitted_permissions, align 4
  %794 = call zeroext i8 @copy_reg(i8* %790, i8* %791, %struct.cp_options* %792, i32 %789, i32 %793, i8* %new_dst_addr, %struct.stat* %src_sb) nounwind
  %toBool434 = icmp ne i8 %794, 0
  %toBool434not = xor i1 %toBool434, true
  %toBool434not435 = zext i1 %toBool434not to i8
  %toBool437 = icmp ne i8 %toBool434not435, 0
  br i1 %toBool437, label %un_backup, label %bb494

bb439:                                            ; preds = %bb432, %bb427
  %795 = load i32* %src_mode, align 4
  %796 = and i32 %795, 61440
  %797 = icmp eq i32 %796, 4096
  br i1 %797, label %bb440, label %bb448

bb440:                                            ; preds = %bb439
  %798 = load i32* %omitted_permissions, align 4
  %not441 = xor i32 %798, -1
  %799 = load i32* %src_mode, align 4
  %800 = and i32 %not441, %799
  %801 = load i8** %dst_name_addr, align 8
  %802 = call i32 @mknod(i8* %801, i32 %800, i64 0) nounwind
  %803 = icmp ne i32 %802, 0
  br i1 %803, label %bb443, label %bb494

bb443:                                            ; preds = %bb440
  %804 = load i32* %omitted_permissions, align 4
  %not444 = xor i32 %804, -1
  %805 = load i32* %src_mode, align 4
  %806 = and i32 %not444, %805
  %807 = and i32 %806, -4097
  %808 = load i8** %dst_name_addr, align 8
  %809 = call i32 @mkfifo(i8* %808, i32 %807) nounwind
  %810 = icmp ne i32 %809, 0
  br i1 %810, label %bb446, label %bb494

bb446:                                            ; preds = %bb443
  %811 = load i8** %dst_name_addr, align 8
  %812 = call i8* @quotearg_style(i32 4, i8* %811) nounwind
  %813 = call i8* @gettext(i8* getelementptr inbounds ([22 x i8]* @.str60176, i64 0, i64 0)) nounwind
  %814 = call i32* @__errno_location() nounwind readnone
  %815 = load i32* %814, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %815, i8* %813, i8* %812) nounwind
  br label %un_backup

bb448:                                            ; preds = %bb439
  %816 = load i32* %src_mode, align 4
  %817 = and i32 %816, 61440
  %818 = icmp eq i32 %817, 24576
  br i1 %818, label %bb451, label %bb449

bb449:                                            ; preds = %bb448
  %819 = load i32* %src_mode, align 4
  %820 = and i32 %819, 61440
  %821 = icmp eq i32 %820, 8192
  br i1 %821, label %bb451, label %bb450

bb450:                                            ; preds = %bb449
  %822 = load i32* %src_mode, align 4
  %823 = and i32 %822, 61440
  %824 = icmp eq i32 %823, 49152
  br i1 %824, label %bb451, label %bb456

bb451:                                            ; preds = %bb450, %bb449, %bb448
  %825 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 7
  %826 = load i64* %825, align 8
  %827 = load i32* %omitted_permissions, align 4
  %not452 = xor i32 %827, -1
  %828 = load i32* %src_mode, align 4
  %829 = and i32 %not452, %828
  %830 = load i8** %dst_name_addr, align 8
  %831 = call i32 @mknod(i8* %830, i32 %829, i64 %826) nounwind
  %832 = icmp ne i32 %831, 0
  br i1 %832, label %bb454, label %bb494

bb454:                                            ; preds = %bb451
  %833 = load i8** %dst_name_addr, align 8
  %834 = call i8* @quotearg_style(i32 4, i8* %833) nounwind
  %835 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str61177, i64 0, i64 0)) nounwind
  %836 = call i32* @__errno_location() nounwind readnone
  %837 = load i32* %836, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %837, i8* %835, i8* %834) nounwind
  br label %un_backup

bb456:                                            ; preds = %bb450
  %838 = load i32* %src_mode, align 4
  %839 = and i32 %838, 61440
  %840 = icmp eq i32 %839, 40960
  br i1 %840, label %bb457, label %bb493

bb457:                                            ; preds = %bb456
  %841 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 8
  %842 = load i64* %841, align 8
  %843 = load i8** %src_name_addr, align 8
  %844 = call i8* @areadlink_with_size(i8* %843, i64 %842) nounwind
  store i8* %844, i8** %src_link_val, align 8
  store i8 1, i8* %dest_is_symlink, align 1
  %845 = load i8** %src_link_val, align 8
  %846 = icmp eq i8* %845, null
  br i1 %846, label %bb458, label %bb459

bb458:                                            ; preds = %bb457
  %847 = load i8** %src_name_addr, align 8
  %848 = call i8* @quotearg_style(i32 4, i8* %847) nounwind
  %849 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str62178, i64 0, i64 0)) nounwind
  %850 = call i32* @__errno_location() nounwind readnone
  %851 = load i32* %850, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %851, i8* %849, i8* %848) nounwind
  br label %un_backup

bb459:                                            ; preds = %bb457
  %852 = load i8** %src_link_val, align 8
  %853 = load i8** %dst_name_addr, align 8
  %854 = call i32 @symlink(i8* %852, i8* %853) nounwind
  %855 = icmp eq i32 %854, 0
  br i1 %855, label %bb460, label %bb461

bb460:                                            ; preds = %bb459
  %856 = load i8** %src_link_val, align 8
  call void @free(i8* %856) nounwind
  br label %bb480

bb461:                                            ; preds = %bb459
  %857 = call i32* @__errno_location() nounwind readnone
  %858 = load i32* %857, align 4
  store i32 %858, i32* %saved_errno, align 4
  store i8 0, i8* %same_link, align 1
  %859 = load %struct.cp_options** %x_addr, align 8
  %860 = getelementptr inbounds %struct.cp_options* %859, i32 0, i32 29
  %861 = load i8* %860, align 4
  %toBool462 = icmp ne i8 %861, 0
  br i1 %toBool462, label %bb463, label %bb474

bb463:                                            ; preds = %bb461
  %862 = load i8* %new_dst_addr, align 1
  %toBool464 = icmp ne i8 %862, 0
  %toBool464not = xor i1 %toBool464, true
  %toBool464not465 = zext i1 %toBool464not to i8
  %toBool467 = icmp ne i8 %toBool464not465, 0
  br i1 %toBool467, label %bb468, label %bb474

bb468:                                            ; preds = %bb463
  %863 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %864 = load i32* %863, align 8
  %865 = and i32 %864, 61440
  %866 = icmp eq i32 %865, 40960
  br i1 %866, label %bb469, label %bb474

bb469:                                            ; preds = %bb468
  %867 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 8
  %868 = load i64* %867, align 8
  %869 = load i8** %src_link_val, align 8
  %870 = call i64 @strlen(i8* %869) nounwind readonly
  %871 = icmp eq i64 %868, %870
  br i1 %871, label %bb470, label %bb474

bb470:                                            ; preds = %bb469
  %872 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 8
  %873 = load i64* %872, align 8
  %874 = load i8** %dst_name_addr, align 8
  %875 = call i8* @areadlink_with_size(i8* %874, i64 %873) nounwind
  store i8* %875, i8** %dest_link_val, align 8
  %876 = load i8** %dest_link_val, align 8
  %877 = icmp ne i8* %876, null
  br i1 %877, label %bb471, label %bb473

bb471:                                            ; preds = %bb470
  %878 = load i8** %dest_link_val, align 8
  %879 = load i8** %src_link_val, align 8
  %880 = call i32 @strcmp(i8* %878, i8* %879) nounwind readonly
  %881 = icmp eq i32 %880, 0
  br i1 %881, label %bb472, label %bb473

bb472:                                            ; preds = %bb471
  store i8 1, i8* %same_link, align 1
  br label %bb473

bb473:                                            ; preds = %bb472, %bb471, %bb470
  %882 = load i8** %dest_link_val, align 8
  call void @free(i8* %882) nounwind
  br label %bb474

bb474:                                            ; preds = %bb473, %bb469, %bb468, %bb463, %bb461
  %883 = load i8** %src_link_val, align 8
  call void @free(i8* %883) nounwind
  %884 = load i8* %same_link, align 1
  %toBool475 = icmp ne i8 %884, 0
  %toBool475not = xor i1 %toBool475, true
  %toBool475not476 = zext i1 %toBool475not to i8
  %toBool478 = icmp ne i8 %toBool475not476, 0
  br i1 %toBool478, label %bb479, label %bb480

bb479:                                            ; preds = %bb474
  %885 = load i8** %dst_name_addr, align 8
  %886 = call i8* @quotearg_style(i32 4, i8* %885) nounwind
  %887 = call i8* @gettext(i8* getelementptr inbounds ([31 x i8]* @.str63179, i64 0, i64 0)) nounwind
  %888 = load i32* %saved_errno, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %888, i8* %887, i8* %886) nounwind
  br label %un_backup

bb480:                                            ; preds = %bb474, %bb460
  %889 = load %struct.cp_options** %x_addr, align 8
  %890 = getelementptr inbounds %struct.cp_options* %889, i32 0, i32 21
  %891 = load i8* %890, align 4
  %toBool481 = icmp ne i8 %891, 0
  br i1 %toBool481, label %bb482, label %bb483

bb482:                                            ; preds = %bb480
  call void @restore_default_fscreatecon_or_die() nounwind
  br label %bb483

bb483:                                            ; preds = %bb482, %bb480
  %892 = load %struct.cp_options** %x_addr, align 8
  %893 = getelementptr inbounds %struct.cp_options* %892, i32 0, i32 13
  %894 = load i8* %893, align 4
  %toBool484 = icmp ne i8 %894, 0
  br i1 %toBool484, label %bb485, label %bb494

bb485:                                            ; preds = %bb483
  %895 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 5
  %896 = load i32* %895, align 8
  %897 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 4
  %898 = load i32* %897, align 4
  %899 = load i8** %dst_name_addr, align 8
  %900 = call i32 @lchown(i8* %899, i32 %898, i32 %896) nounwind
  %901 = icmp ne i32 %900, 0
  br i1 %901, label %bb486, label %bb494

bb486:                                            ; preds = %bb485
  %902 = load %struct.cp_options** %x_addr, align 8
  %903 = call zeroext i8 @chown_failure_ok(%struct.cp_options* %902) nounwind readonly
  %toBool487 = icmp ne i8 %903, 0
  %toBool487not = xor i1 %toBool487, true
  %toBool487not488 = zext i1 %toBool487not to i8
  %toBool490 = icmp ne i8 %toBool487not488, 0
  br i1 %toBool490, label %bb491, label %bb494

bb491:                                            ; preds = %bb486
  %904 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str11127, i64 0, i64 0)) nounwind
  %905 = call i32* @__errno_location() nounwind readnone
  %906 = load i32* %905, align 4
  %907 = load i8** %dst_name_addr, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %906, i8* %904, i8* %907) nounwind
  br label %un_backup

bb493:                                            ; preds = %bb456
  %908 = load i8** %src_name_addr, align 8
  %909 = call i8* @quotearg_style(i32 4, i8* %908) nounwind
  %910 = call i8* @gettext(i8* getelementptr inbounds ([25 x i8]* @.str64180, i64 0, i64 0)) nounwind
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %910, i8* %909) nounwind
  br label %un_backup

bb494:                                            ; preds = %bb483, %bb485, %bb486, %bb451, %bb440, %bb443, %bb433, %bb420, %bb415, %bb397, %bb395
  %911 = load i8* %new_dst_addr, align 1
  %toBool495 = icmp ne i8 %911, 0
  %toBool495not = xor i1 %toBool495, true
  %toBool495not496 = zext i1 %toBool495not to i8
  %toBool498 = icmp ne i8 %toBool495not496, 0
  br i1 %toBool498, label %bb499, label %bb516

bb499:                                            ; preds = %bb494
  %912 = load %struct.cp_options** %x_addr, align 8
  %913 = getelementptr inbounds %struct.cp_options* %912, i32 0, i32 5
  %914 = load i8* %913, align 4
  %toBool500 = icmp ne i8 %914, 0
  %toBool500not = xor i1 %toBool500, true
  %toBool500not501 = zext i1 %toBool500not to i8
  %toBool503 = icmp ne i8 %toBool500not501, 0
  br i1 %toBool503, label %bb504, label %bb516

bb504:                                            ; preds = %bb499
  %915 = load i32* %src_mode, align 4
  %916 = and i32 %915, 61440
  %917 = icmp ne i32 %916, 16384
  br i1 %917, label %bb505, label %bb516

bb505:                                            ; preds = %bb504
  %918 = load %struct.cp_options** %x_addr, align 8
  %919 = getelementptr inbounds %struct.cp_options* %918, i32 0, i32 17
  %920 = load i8* %919, align 8
  %toBool506 = icmp ne i8 %920, 0
  br i1 %toBool506, label %bb509, label %bb507

bb507:                                            ; preds = %bb505
  %921 = load %struct.cp_options** %x_addr, align 8
  %922 = getelementptr inbounds %struct.cp_options* %921, i32 0, i32 21
  %923 = load i8* %922, align 4
  %toBool508 = icmp ne i8 %923, 0
  br i1 %toBool508, label %bb509, label %bb516

bb509:                                            ; preds = %bb507, %bb505
  %924 = load %struct.cp_options** %x_addr, align 8
  %925 = getelementptr inbounds %struct.cp_options* %924, i32 0, i32 21
  %926 = load i8* %925, align 4
  %927 = zext i8 %926 to i32
  %928 = load i8** %dst_name_addr, align 8
  %929 = trunc i32 %927 to i8
  %930 = load %struct.cp_options** %x_addr, align 8
  %931 = call zeroext i8 @set_file_security_ctx(i8* %928, i8 zeroext %929, i8 zeroext 0, %struct.cp_options* %930) nounwind
  %toBool510 = icmp ne i8 %931, 0
  %toBool510not = xor i1 %toBool510, true
  %toBool510not511 = zext i1 %toBool510not to i8
  %toBool513 = icmp ne i8 %toBool510not511, 0
  br i1 %toBool513, label %bb514, label %bb516

bb514:                                            ; preds = %bb509
  %932 = load %struct.cp_options** %x_addr, align 8
  %933 = getelementptr inbounds %struct.cp_options* %932, i32 0, i32 22
  %934 = load i8* %933, align 1
  %toBool515 = icmp ne i8 %934, 0
  br i1 %toBool515, label %un_backup, label %bb516

bb516:                                            ; preds = %bb514, %bb509, %bb507, %bb504, %bb499, %bb494
  %935 = load i8* %command_line_arg_addr, align 1
  %toBool517 = icmp ne i8 %935, 0
  br i1 %toBool517, label %bb518, label %bb521

bb518:                                            ; preds = %bb516
  %936 = load %struct.cp_options** %x_addr, align 8
  %937 = getelementptr inbounds %struct.cp_options* %936, i32 0, i32 34
  %938 = load %struct.Hash_table** %937, align 8
  %939 = icmp ne %struct.Hash_table* %938, null
  br i1 %939, label %bb519, label %bb521

bb519:                                            ; preds = %bb518
  %940 = load i8** %dst_name_addr, align 8
  %941 = call i32 @lstat(i8* noalias %940, %struct.stat* noalias %sb) nounwind
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %bb520, label %bb521

bb520:                                            ; preds = %bb519
  %943 = load %struct.cp_options** %x_addr, align 8
  %944 = getelementptr inbounds %struct.cp_options* %943, i32 0, i32 34
  %945 = load %struct.Hash_table** %944, align 8
  %946 = load i8** %dst_name_addr, align 8
  call void @record_file(%struct.Hash_table* %945, i8* %946, %struct.stat* %sb) nounwind
  br label %bb521

bb521:                                            ; preds = %bb520, %bb519, %bb518, %bb516
  %947 = load %struct.cp_options** %x_addr, align 8
  %948 = getelementptr inbounds %struct.cp_options* %947, i32 0, i32 8
  %949 = load i8* %948, align 1
  %toBool522 = icmp ne i8 %949, 0
  br i1 %toBool522, label %bb523, label %bb525

bb523:                                            ; preds = %bb521
  %950 = load i32* %src_mode, align 4
  %951 = and i32 %950, 61440
  %952 = icmp ne i32 %951, 16384
  br i1 %952, label %bb524, label %bb525

bb524:                                            ; preds = %bb523
  %953 = load i8* %delayed_ok, align 1
  %954 = zext i8 %953 to i32
  store i32 %954, i32* %1, align 4
  br label %bb630

bb525:                                            ; preds = %bb523, %bb521
  %955 = load i8* %copied_as_regular, align 1
  %toBool526 = icmp ne i8 %955, 0
  br i1 %toBool526, label %bb527, label %bb528

bb527:                                            ; preds = %bb525
  %956 = load i8* %delayed_ok, align 1
  %957 = zext i8 %956 to i32
  store i32 %957, i32* %1, align 4
  br label %bb630

bb528:                                            ; preds = %bb525
  %958 = load %struct.cp_options** %x_addr, align 8
  %959 = getelementptr inbounds %struct.cp_options* %958, i32 0, i32 15
  %960 = load i8* %959, align 2
  %toBool529 = icmp ne i8 %960, 0
  br i1 %toBool529, label %bb530, label %bb547

bb530:                                            ; preds = %bb528
  %961 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 0
  %962 = call %struct.timespec @get_stat_atime(%struct.stat* %src_sb) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %961, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %962, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep531 = getelementptr inbounds %struct.timespec* %961, i32 0, i32 1
  %mrv_gr532 = extractvalue %struct.timespec %962, 1
  store i64 %mrv_gr532, i64* %mrv_gep531
  %963 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %964 = call %struct.timespec @get_stat_mtime(%struct.stat* %src_sb) nounwind readonly
  %mrv_gep533 = getelementptr inbounds %struct.timespec* %963, i32 0, i32 0
  %mrv_gr534 = extractvalue %struct.timespec %964, 0
  store i64 %mrv_gr534, i64* %mrv_gep533
  %mrv_gep535 = getelementptr inbounds %struct.timespec* %963, i32 0, i32 1
  %mrv_gr536 = extractvalue %struct.timespec %964, 1
  store i64 %mrv_gr536, i64* %mrv_gep535
  %965 = load i8* %dest_is_symlink, align 1
  %toBool537 = icmp ne i8 %965, 0
  %966 = load i8** %dst_name_addr, align 8
  %timespec539 = bitcast [2 x %struct.timespec]* %timespec to %struct.timespec*
  br i1 %toBool537, label %bb538, label %bb540

bb538:                                            ; preds = %bb530
  %967 = call i32 @utimens_symlink(i8* %966, %struct.timespec* %timespec539) nounwind
  %968 = icmp ne i32 %967, 0
  %969 = zext i1 %968 to i8
  store i8 %969, i8* %iftmp.126, align 1
  br label %bb542

bb540:                                            ; preds = %bb530
  %970 = call i32 @utimens(i8* %966, %struct.timespec* %timespec539) nounwind
  %971 = icmp ne i32 %970, 0
  %972 = zext i1 %971 to i8
  store i8 %972, i8* %iftmp.126, align 1
  br label %bb542

bb542:                                            ; preds = %bb540, %bb538
  %973 = load i8* %iftmp.126, align 1
  %toBool543 = icmp ne i8 %973, 0
  br i1 %toBool543, label %bb544, label %bb547

bb544:                                            ; preds = %bb542
  %974 = load i8** %dst_name_addr, align 8
  %975 = call i8* @quotearg_style(i32 4, i8* %974) nounwind
  %976 = call i8* @gettext(i8* getelementptr inbounds ([24 x i8]* @.str24140, i64 0, i64 0)) nounwind
  %977 = call i32* @__errno_location() nounwind readnone
  %978 = load i32* %977, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %978, i8* %976, i8* %975) nounwind
  %979 = load %struct.cp_options** %x_addr, align 8
  %980 = getelementptr inbounds %struct.cp_options* %979, i32 0, i32 20
  %981 = load i8* %980, align 1
  %toBool545 = icmp ne i8 %981, 0
  br i1 %toBool545, label %bb546, label %bb547

bb546:                                            ; preds = %bb544
  store i32 0, i32* %1, align 4
  br label %bb630

bb547:                                            ; preds = %bb544, %bb542, %bb528
  %982 = load i8* %dest_is_symlink, align 1
  %toBool548 = icmp ne i8 %982, 0
  %toBool548not = xor i1 %toBool548, true
  %toBool548not549 = zext i1 %toBool548not to i8
  %toBool551 = icmp ne i8 %toBool548not549, 0
  br i1 %toBool551, label %bb552, label %bb561

bb552:                                            ; preds = %bb547
  %983 = load %struct.cp_options** %x_addr, align 8
  %984 = getelementptr inbounds %struct.cp_options* %983, i32 0, i32 13
  %985 = load i8* %984, align 4
  %toBool553 = icmp ne i8 %985, 0
  br i1 %toBool553, label %bb554, label %bb561

bb554:                                            ; preds = %bb552
  %986 = load i8* %new_dst_addr, align 1
  %toBool555 = icmp ne i8 %986, 0
  br i1 %toBool555, label %bb558, label %bb556

bb556:                                            ; preds = %bb554
  %987 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 4
  %988 = load i32* %987, align 4
  %989 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 4
  %990 = load i32* %989, align 4
  %991 = icmp ne i32 %988, %990
  br i1 %991, label %bb558, label %bb557

bb557:                                            ; preds = %bb556
  %992 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 5
  %993 = load i32* %992, align 8
  %994 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 5
  %995 = load i32* %994, align 8
  %996 = icmp ne i32 %993, %995
  br i1 %996, label %bb558, label %bb561

bb558:                                            ; preds = %bb557, %bb556, %bb554
  %997 = load i8* %new_dst_addr, align 1
  %998 = zext i8 %997 to i32
  %999 = load %struct.cp_options** %x_addr, align 8
  %1000 = load i8** %dst_name_addr, align 8
  %1001 = trunc i32 %998 to i8
  %1002 = call i32 @set_owner(%struct.cp_options* %999, i8* %1000, i32 -1, %struct.stat* %src_sb, i8 zeroext %1001, %struct.stat* %dst_sb) nounwind
  switch i32 %1002, label %bb561 [
    i32 -1, label %bb559
    i32 0, label %bb560
  ]

bb559:                                            ; preds = %bb558
  store i32 0, i32* %1, align 4
  br label %bb630

bb560:                                            ; preds = %bb558
  %1003 = load i32* %src_mode, align 4
  %1004 = and i32 %1003, -3585
  store i32 %1004, i32* %src_mode, align 4
  br label %bb561

bb561:                                            ; preds = %bb560, %bb558, %bb557, %bb552, %bb547
  %1005 = load %struct.cp_options** %x_addr, align 8
  %1006 = getelementptr inbounds %struct.cp_options* %1005, i32 0, i32 23
  %1007 = load i8* %1006, align 2
  %toBool562 = icmp ne i8 %1007, 0
  br i1 %toBool562, label %bb563, label %bb571

bb563:                                            ; preds = %bb561
  %1008 = load i8** %src_name_addr, align 8
  %1009 = load i8** %dst_name_addr, align 8
  %1010 = load %struct.cp_options** %x_addr, align 8
  %1011 = call zeroext i8 @copy_attr(i8* %1008, i32 -1, i8* %1009, i32 -1, %struct.cp_options* %1010) nounwind
  %toBool564 = icmp ne i8 %1011, 0
  %toBool564not = xor i1 %toBool564, true
  %toBool564not565 = zext i1 %toBool564not to i8
  %toBool567 = icmp ne i8 %toBool564not565, 0
  br i1 %toBool567, label %bb568, label %bb571

bb568:                                            ; preds = %bb563
  %1012 = load %struct.cp_options** %x_addr, align 8
  %1013 = getelementptr inbounds %struct.cp_options* %1012, i32 0, i32 24
  %1014 = load i8* %1013, align 1
  %toBool569 = icmp ne i8 %1014, 0
  br i1 %toBool569, label %bb570, label %bb571

bb570:                                            ; preds = %bb568
  store i32 0, i32* %1, align 4
  br label %bb630

bb571:                                            ; preds = %bb568, %bb563, %bb561
  %1015 = load i8* %dest_is_symlink, align 1
  %toBool572 = icmp ne i8 %1015, 0
  br i1 %toBool572, label %bb573, label %bb574

bb573:                                            ; preds = %bb571
  %1016 = load i8* %delayed_ok, align 1
  %1017 = zext i8 %1016 to i32
  store i32 %1017, i32* %1, align 4
  br label %bb630

bb574:                                            ; preds = %bb571
  %1018 = load i8** %dst_name_addr, align 8
  call void @set_author(i8* %1018, i32 -1, %struct.stat* %src_sb) nounwind
  %1019 = load %struct.cp_options** %x_addr, align 8
  %1020 = getelementptr inbounds %struct.cp_options* %1019, i32 0, i32 14
  %1021 = load i8* %1020, align 1
  %toBool575 = icmp ne i8 %1021, 0
  br i1 %toBool575, label %bb578, label %bb576

bb576:                                            ; preds = %bb574
  %1022 = load %struct.cp_options** %x_addr, align 8
  %1023 = getelementptr inbounds %struct.cp_options* %1022, i32 0, i32 9
  %1024 = load i8* %1023, align 8
  %toBool577 = icmp ne i8 %1024, 0
  br i1 %toBool577, label %bb578, label %bb583

bb578:                                            ; preds = %bb576, %bb574
  %1025 = load i8** %src_name_addr, align 8
  %1026 = load i8** %dst_name_addr, align 8
  %1027 = load i32* %src_mode, align 4
  %1028 = call i32 @copy_acl(i8* %1025, i32 -1, i8* %1026, i32 -1, i32 %1027) nounwind
  %1029 = icmp ne i32 %1028, 0
  br i1 %1029, label %bb579, label %bb618

bb579:                                            ; preds = %bb578
  %1030 = load %struct.cp_options** %x_addr, align 8
  %1031 = getelementptr inbounds %struct.cp_options* %1030, i32 0, i32 20
  %1032 = load i8* %1031, align 1
  %toBool580 = icmp ne i8 %1032, 0
  br i1 %toBool580, label %bb581, label %bb618

bb581:                                            ; preds = %bb579
  store i32 0, i32* %1, align 4
  br label %bb630

bb583:                                            ; preds = %bb576
  %1033 = load %struct.cp_options** %x_addr, align 8
  %1034 = getelementptr inbounds %struct.cp_options* %1033, i32 0, i32 27
  %1035 = load i8* %1034, align 2
  %toBool584 = icmp ne i8 %1035, 0
  %1036 = load %struct.cp_options** %x_addr, align 8
  br i1 %toBool584, label %bb585, label %bb588

bb585:                                            ; preds = %bb583
  %1037 = getelementptr inbounds %struct.cp_options* %1036, i32 0, i32 4
  %1038 = load i32* %1037, align 8
  %1039 = load i8** %dst_name_addr, align 8
  %1040 = call i32 @set_acl(i8* %1039, i32 -1, i32 %1038) nounwind
  %1041 = icmp ne i32 %1040, 0
  br i1 %1041, label %bb586, label %bb618

bb586:                                            ; preds = %bb585
  store i32 0, i32* %1, align 4
  br label %bb630

bb588:                                            ; preds = %bb583
  %1042 = getelementptr inbounds %struct.cp_options* %1036, i32 0, i32 16
  %1043 = load i8* %1042, align 1
  %toBool589 = icmp ne i8 %1043, 0
  br i1 %toBool589, label %bb590, label %bb595

bb590:                                            ; preds = %bb588
  %1044 = call i32 @cached_umask() nounwind
  %not591 = xor i32 %1044, -1
  %1045 = and i32 %not591, 511
  %1046 = load i8** %dst_name_addr, align 8
  %1047 = call i32 @set_acl(i8* %1046, i32 -1, i32 %1045) nounwind
  %1048 = icmp ne i32 %1047, 0
  br i1 %1048, label %bb593, label %bb618

bb593:                                            ; preds = %bb590
  store i32 0, i32* %1, align 4
  br label %bb630

bb595:                                            ; preds = %bb588
  %1049 = load i32* %omitted_permissions, align 4
  %1050 = icmp ne i32 %1049, 0
  br i1 %1050, label %bb596, label %bb612

bb596:                                            ; preds = %bb595
  %1051 = call i32 @cached_umask() nounwind
  %not597 = xor i32 %1051, -1
  %1052 = load i32* %omitted_permissions, align 4
  %1053 = and i32 %not597, %1052
  store i32 %1053, i32* %omitted_permissions, align 4
  %1054 = load i32* %omitted_permissions, align 4
  %1055 = icmp ne i32 %1054, 0
  br i1 %1055, label %bb599, label %bb612

bb599:                                            ; preds = %bb596
  %1056 = load i8* %restore_dst_mode, align 1
  %toBool600 = icmp ne i8 %1056, 0
  %toBool600not = xor i1 %toBool600, true
  %toBool600not601 = zext i1 %toBool600not to i8
  %toBool603 = icmp ne i8 %toBool600not601, 0
  br i1 %toBool603, label %bb604, label %bb612

bb604:                                            ; preds = %bb599
  %1057 = load i8* %new_dst_addr, align 1
  %toBool605 = icmp ne i8 %1057, 0
  br i1 %toBool605, label %bb606, label %bb608

bb606:                                            ; preds = %bb604
  %1058 = load i8** %dst_name_addr, align 8
  %1059 = call i32 @lstat(i8* noalias %1058, %struct.stat* noalias %dst_sb) nounwind
  %1060 = icmp ne i32 %1059, 0
  br i1 %1060, label %bb607, label %bb608

bb607:                                            ; preds = %bb606
  %1061 = load i8** %dst_name_addr, align 8
  %1062 = call i8* @quotearg_style(i32 4, i8* %1061) nounwind
  %1063 = call i8* @gettext(i8* getelementptr inbounds ([15 x i8]* @.str36152, i64 0, i64 0)) nounwind
  %1064 = call i32* @__errno_location() nounwind readnone
  %1065 = load i32* %1064, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %1065, i8* %1063, i8* %1062) nounwind
  store i32 0, i32* %1, align 4
  br label %bb630

bb608:                                            ; preds = %bb606, %bb604
  %1066 = getelementptr inbounds %struct.stat* %dst_sb, i32 0, i32 3
  %1067 = load i32* %1066, align 8
  store i32 %1067, i32* %dst_mode, align 4
  %1068 = load i32* %dst_mode, align 4
  %not609 = xor i32 %1068, -1
  %1069 = load i32* %omitted_permissions, align 4
  %1070 = and i32 %not609, %1069
  %1071 = icmp ne i32 %1070, 0
  br i1 %1071, label %bb611, label %bb612

bb611:                                            ; preds = %bb608
  store i8 1, i8* %restore_dst_mode, align 1
  br label %bb612

bb612:                                            ; preds = %bb611, %bb608, %bb599, %bb596, %bb595
  %1072 = load i8* %restore_dst_mode, align 1
  %toBool613 = icmp ne i8 %1072, 0
  br i1 %toBool613, label %bb614, label %bb618

bb614:                                            ; preds = %bb612
  %1073 = load i32* %dst_mode, align 4
  %1074 = load i32* %omitted_permissions, align 4
  %1075 = or i32 %1073, %1074
  %1076 = load i8** %dst_name_addr, align 8
  %1077 = call i32 @chmod(i8* %1076, i32 %1075) nounwind
  %1078 = icmp ne i32 %1077, 0
  br i1 %1078, label %bb615, label %bb618

bb615:                                            ; preds = %bb614
  %1079 = load i8** %dst_name_addr, align 8
  %1080 = call i8* @quotearg_style(i32 4, i8* %1079) nounwind
  %1081 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str25141, i64 0, i64 0)) nounwind
  %1082 = call i32* @__errno_location() nounwind readnone
  %1083 = load i32* %1082, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %1083, i8* %1081, i8* %1080) nounwind
  %1084 = load %struct.cp_options** %x_addr, align 8
  %1085 = getelementptr inbounds %struct.cp_options* %1084, i32 0, i32 20
  %1086 = load i8* %1085, align 1
  %toBool616 = icmp ne i8 %1086, 0
  br i1 %toBool616, label %bb617, label %bb618

bb617:                                            ; preds = %bb615
  store i32 0, i32* %1, align 4
  br label %bb630

bb618:                                            ; preds = %bb590, %bb585, %bb578, %bb579, %bb615, %bb614, %bb612
  %1087 = load i8* %delayed_ok, align 1
  %1088 = zext i8 %1087 to i32
  store i32 %1088, i32* %1, align 4
  br label %bb630

un_backup:                                        ; preds = %bb514, %bb493, %bb491, %bb479, %bb458, %bb454, %bb446, %bb433, %bb420, %bb416, %bb414, %bb387, %bb367, %bb364, %bb362, %bb356, %bb298, %bb296, %bb280, %bb109
  %1089 = load %struct.cp_options** %x_addr, align 8
  %1090 = getelementptr inbounds %struct.cp_options* %1089, i32 0, i32 21
  %1091 = load i8* %1090, align 4
  %toBool619 = icmp ne i8 %1091, 0
  br i1 %toBool619, label %bb620, label %bb621

bb620:                                            ; preds = %un_backup
  call void @restore_default_fscreatecon_or_die() nounwind
  br label %bb621

bb621:                                            ; preds = %bb620, %un_backup
  %1092 = load i8** %earlier_file, align 8
  %1093 = icmp eq i8* %1092, null
  br i1 %1093, label %bb622, label %bb623

bb622:                                            ; preds = %bb621
  %1094 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 0
  %1095 = load i64* %1094, align 8
  %1096 = getelementptr inbounds %struct.stat* %src_sb, i32 0, i32 1
  %1097 = load i64* %1096, align 8
  call void @forget_created(i64 %1097, i64 %1095) nounwind
  br label %bb623

bb623:                                            ; preds = %bb622, %bb621
  %1098 = load i8** %dst_backup, align 8
  %1099 = icmp ne i8* %1098, null
  br i1 %1099, label %bb624, label %bb629

bb624:                                            ; preds = %bb623
  %1100 = load i8** %dst_backup, align 8
  %1101 = load i8** %dst_name_addr, align 8
  %1102 = call i32 @rename(i8* %1100, i8* %1101) nounwind
  %1103 = icmp ne i32 %1102, 0
  br i1 %1103, label %bb625, label %bb626

bb625:                                            ; preds = %bb624
  %1104 = load i8** %dst_name_addr, align 8
  %1105 = call i8* @quotearg_style(i32 4, i8* %1104) nounwind
  %1106 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str65181, i64 0, i64 0)) nounwind
  %1107 = call i32* @__errno_location() nounwind readnone
  %1108 = load i32* %1107, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %1108, i8* %1106, i8* %1105) nounwind
  br label %bb629

bb626:                                            ; preds = %bb624
  %1109 = load %struct.cp_options** %x_addr, align 8
  %1110 = getelementptr inbounds %struct.cp_options* %1109, i32 0, i32 30
  %1111 = load i8* %1110, align 1
  %toBool627 = icmp ne i8 %1111, 0
  br i1 %toBool627, label %bb628, label %bb629

bb628:                                            ; preds = %bb626
  %1112 = load i8** %dst_name_addr, align 8
  %1113 = call i8* @quotearg_n_style(i32 1, i32 4, i8* %1112) nounwind
  %1114 = load i8** %dst_backup, align 8
  %1115 = call i8* @quotearg_n_style(i32 0, i32 4, i8* %1114) nounwind
  %1116 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str66182, i64 0, i64 0)) nounwind
  %1117 = call i32 (i8*, ...)* @printf(i8* noalias %1116, i8* %1115, i8* %1113) nounwind
  br label %bb629

bb629:                                            ; preds = %bb628, %bb626, %bb625, %bb623
  store i32 0, i32* %1, align 4
  br label %bb630

bb630:                                            ; preds = %bb629, %bb618, %bb617, %bb607, %bb593, %bb586, %bb581, %bb573, %bb570, %bb559, %bb546, %bb527, %bb524, %bb352, %bb334, %bb327, %bb325, %bb323, %bb303, %bb287, %bb233, %bb209, %bb187, %bb184, %b
  %1118 = load i32* %1, align 4
  store i32 %1118, i32* %retval, align 4
  %retval631 = load i32* %retval
  %retval631632 = trunc i32 %retval631 to i8
  ret i8 %retval631632
}

define internal zeroext i8 @should_dereference(%struct.cp_options* %x, i8 zeroext %command_line_arg) nounwind readonly inlinehint {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %command_line_arg_addr = alloca i8, align 1
  %retval = alloca i32
  %iftmp.101 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  store i8 %command_line_arg, i8* %command_line_arg_addr
  %1 = load %struct.cp_options** %x_addr, align 8
  %2 = getelementptr inbounds %struct.cp_options* %1, i32 0, i32 1
  %3 = load i32* %2, align 4
  %4 = icmp eq i32 %3, 4
  br i1 %4, label %bb2, label %bb

bb:                                               ; preds = %entry
  %5 = load %struct.cp_options** %x_addr, align 8
  %6 = getelementptr inbounds %struct.cp_options* %5, i32 0, i32 1
  %7 = load i32* %6, align 4
  %8 = icmp ne i32 %7, 3
  br i1 %8, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %9 = load i8* %command_line_arg_addr, align 1
  %toBool = icmp ne i8 %9, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %entry
  store i32 1, i32* %iftmp.101, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb
  store i32 0, i32* %iftmp.101, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = load i32* %iftmp.101, align 4
  %11 = trunc i32 %10 to i8
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define internal zeroext i8 @dot_or_dotdot(i8* %file_name) nounwind inlinehint {
entry:
  %file_name_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.22 = alloca i32
  %0 = alloca i32
  %iftmp.21 = alloca i32
  %sep = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file_name, i8** %file_name_addr
  %1 = load i8** %file_name_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 0
  %3 = load i8* %2, align 1
  %4 = icmp eq i8 %3, 46
  br i1 %4, label %bb, label %bb8

bb:                                               ; preds = %entry
  %5 = load i8** %file_name_addr, align 8
  %6 = getelementptr inbounds i8* %5, i64 1
  %7 = load i8* %6, align 1
  %8 = icmp eq i8 %7, 46
  br i1 %8, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 2, i32* %iftmp.21, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  store i32 1, i32* %iftmp.21, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i8** %file_name_addr, align 8
  %10 = load i32* %iftmp.21, align 4
  %11 = sext i32 %10 to i64
  %12 = getelementptr inbounds i8* %9, i64 %11
  %13 = load i8* %12, align 1
  store i8 %13, i8* %sep, align 1
  %14 = load i8* %sep, align 1
  %15 = icmp eq i8 %14, 0
  %16 = load i8* %sep, align 1
  %17 = icmp eq i8 %16, 47
  %or.cond = or i1 %15, %17
  br i1 %or.cond, label %bb5, label %bb6

bb5:                                              ; preds = %bb3
  store i32 1, i32* %iftmp.22, align 4
  br label %bb7

bb6:                                              ; preds = %bb3
  store i32 0, i32* %iftmp.22, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i32* %iftmp.22, align 4
  %19 = trunc i32 %18 to i8
  %20 = zext i8 %19 to i32
  store i32 %20, i32* %0, align 4
  br label %bb9

bb8:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval10 = load i32* %retval
  %retval1011 = trunc i32 %retval10 to i8
  ret i8 %retval1011
}

declare i32 @mknod(i8*, i32, i64) nounwind

declare i32 @mkfifo(i8*, i32) nounwind

define internal i32 @utimens_symlink(i8* %file, %struct.timespec* %timespec) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %timespec_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.timespec* %timespec, %struct.timespec** %timespec_addr
  %1 = load i8** %file_addr, align 8
  %2 = load %struct.timespec** %timespec_addr, align 8
  %3 = call i32 @lutimens(i8* %1, %struct.timespec* %2) nounwind
  store i32 %3, i32* %err, align 4
  %4 = load i32* %err, align 4
  %5 = icmp ne i32 %4, 0
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = call i32* @__errno_location() nounwind readnone
  %7 = load i32* %6, align 4
  %8 = icmp eq i32 %7, 38
  br i1 %8, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 0, i32* %err, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  %9 = load i32* %err, align 4
  store i32 %9, i32* %0, align 4
  %10 = load i32* %0, align 4
  store i32 %10, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal zeroext i8 @valid_options(%struct.cp_options* %co) nounwind readonly {
entry:
  %co_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %co, %struct.cp_options** %co_addr
  %1 = load %struct.cp_options** %co_addr, align 8
  %2 = bitcast %struct.cp_options* %1 to i8*
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([11 x i8]* @.str67183, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2896, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb1:                                              ; preds = %entry
  %4 = load %struct.cp_options** %co_addr, align 8
  %5 = getelementptr inbounds %struct.cp_options* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = icmp ugt i32 %6, 3
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8]* @.str68184, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2897, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb3:                                              ; preds = %bb1
  %8 = load %struct.cp_options** %co_addr, align 8
  %9 = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 3
  %10 = load i32* %9, align 4
  %11 = icmp ne i32 %10, 1
  br i1 %11, label %bb4, label %bb7

bb4:                                              ; preds = %bb3
  %12 = load %struct.cp_options** %co_addr, align 8
  %13 = getelementptr inbounds %struct.cp_options* %12, i32 0, i32 3
  %14 = load i32* %13, align 4
  %15 = icmp ne i32 %14, 2
  br i1 %15, label %bb5, label %bb7

bb5:                                              ; preds = %bb4
  %16 = load %struct.cp_options** %co_addr, align 8
  %17 = getelementptr inbounds %struct.cp_options* %16, i32 0, i32 3
  %18 = load i32* %17, align 4
  %19 = icmp ne i32 %18, 3
  br i1 %19, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  call void @__assert_fail(i8* getelementptr inbounds ([36 x i8]* @.str69185, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2898, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb7:                                              ; preds = %bb5, %bb4, %bb3
  %20 = load %struct.cp_options** %co_addr, align 8
  %21 = getelementptr inbounds %struct.cp_options* %20, i32 0, i32 33
  %22 = load i32* %21, align 8
  %23 = icmp ne i32 %22, 0
  br i1 %23, label %bb8, label %bb11

bb8:                                              ; preds = %bb7
  %24 = load %struct.cp_options** %co_addr, align 8
  %25 = getelementptr inbounds %struct.cp_options* %24, i32 0, i32 33
  %26 = load i32* %25, align 8
  %27 = icmp ne i32 %26, 1
  br i1 %27, label %bb9, label %bb11

bb9:                                              ; preds = %bb8
  %28 = load %struct.cp_options** %co_addr, align 8
  %29 = getelementptr inbounds %struct.cp_options* %28, i32 0, i32 33
  %30 = load i32* %29, align 8
  %31 = icmp ne i32 %30, 2
  br i1 %31, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8]* @.str70186, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2899, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb11:                                             ; preds = %bb9, %bb8, %bb7
  %32 = load %struct.cp_options** %co_addr, align 8
  %33 = getelementptr inbounds %struct.cp_options* %32, i32 0, i32 8
  %34 = load i8* %33, align 1
  %toBool = icmp ne i8 %34, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot12 = zext i1 %toBoolnot to i8
  %toBool14 = icmp ne i8 %toBoolnot12, 0
  %toBool14not = xor i1 %toBool14, true
  %toBool14not15 = zext i1 %toBool14not to i8
  %toBool17 = icmp ne i8 %toBool14not15, 0
  br i1 %toBool17, label %bb18, label %bb27

bb18:                                             ; preds = %bb11
  %35 = load %struct.cp_options** %co_addr, align 8
  %36 = getelementptr inbounds %struct.cp_options* %35, i32 0, i32 28
  %37 = load i8* %36, align 1
  %toBool19 = icmp ne i8 %37, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  %toBool22not = xor i1 %toBool22, true
  %toBool22not23 = zext i1 %toBool22not to i8
  %toBool25 = icmp ne i8 %toBool22not23, 0
  br i1 %toBool25, label %bb26, label %bb27

bb26:                                             ; preds = %bb18
  call void @__assert_fail(i8* getelementptr inbounds ([38 x i8]* @.str71187, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2900, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb27:                                             ; preds = %bb18, %bb11
  %38 = load %struct.cp_options** %co_addr, align 8
  %39 = getelementptr inbounds %struct.cp_options* %38, i32 0, i32 33
  %40 = load i32* %39, align 8
  %41 = icmp eq i32 %40, 2
  br i1 %41, label %bb28, label %bb30

bb28:                                             ; preds = %bb27
  %42 = load %struct.cp_options** %co_addr, align 8
  %43 = getelementptr inbounds %struct.cp_options* %42, i32 0, i32 3
  %44 = load i32* %43, align 4
  %45 = icmp ne i32 %44, 2
  br i1 %45, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  call void @__assert_fail(i8* getelementptr inbounds ([73 x i8]* @.str72188, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2903, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.9235, i64 0, i64 0)) nore
  unreachable

bb30:                                             ; preds = %bb28, %bb27
  store i32 1, i32* %0, align 4
  %46 = load i32* %0, align 4
  store i32 %46, i32* %retval, align 4
  %retval31 = load i32* %retval
  %retval3132 = trunc i32 %retval31 to i8
  ret i8 %retval3132
}

define zeroext i8 @copy(i8* %src_name, i8* %dst_name, i8 zeroext %nonexistent_dst, %struct.cp_options* %options, i8* %copy_into_self, i8* %rename_succeeded) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %dst_name_addr = alloca i8*, align 8
  %nonexistent_dst_addr = alloca i8, align 1
  %options_addr = alloca %struct.cp_options*, align 8
  %copy_into_self_addr = alloca i8*, align 8
  %rename_succeeded_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %first_dir_created_per_command_line_arg = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i8 %nonexistent_dst, i8* %nonexistent_dst_addr
  store %struct.cp_options* %options, %struct.cp_options** %options_addr
  store i8* %copy_into_self, i8** %copy_into_self_addr
  store i8* %rename_succeeded, i8** %rename_succeeded_addr
  %1 = load %struct.cp_options** %options_addr, align 8
  %2 = call zeroext i8 @valid_options(%struct.cp_options* %1) nounwind readonly
  %toBool = icmp ne i8 %2, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb4

bb:                                               ; preds = %entry
  call void @__assert_fail(i8* getelementptr inbounds ([24 x i8]* @.str73189, i64 0, i64 0), i8* getelementptr inbounds ([11 x i8]* @.str31147, i64 0, i64 0), i32 2921, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.9286, i64 0, i64 0)) noret
  unreachable

bb4:                                              ; preds = %entry
  %3 = load i8** %src_name_addr, align 8
  store i8* %3, i8** @top_level_src_name, align 8
  %4 = load i8** %dst_name_addr, align 8
  store i8* %4, i8** @top_level_dst_name, align 8
  store i8 0, i8* %first_dir_created_per_command_line_arg, align 1
  %5 = load i8* %nonexistent_dst_addr, align 1
  %6 = zext i8 %5 to i32
  %7 = load i8** %src_name_addr, align 8
  %8 = load i8** %dst_name_addr, align 8
  %9 = trunc i32 %6 to i8
  %10 = load %struct.cp_options** %options_addr, align 8
  %11 = load i8** %copy_into_self_addr, align 8
  %12 = load i8** %rename_succeeded_addr, align 8
  %13 = call zeroext i8 @copy_internal(i8* %7, i8* %8, i8 zeroext %9, %struct.stat* null, %struct.dir_list* null, %struct.cp_options* %10, i8 zeroext 1, i8* %first_dir_created_per_command_line_arg, i8* %11, i8* %12) nounwind
  %14 = zext i8 %13 to i32
  store i32 %14, i32* %0, align 4
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define void @cp_options_default(%struct.cp_options* %x) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %0 = load %struct.cp_options** %x_addr, align 8
  %1 = bitcast %struct.cp_options* %0 to i8*
  %2 = call i8* @memset(i8* %1, i32 0, i64 72)
  %3 = call i32 @geteuid() nounwind
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i8
  %6 = load %struct.cp_options** %x_addr, align 8
  %7 = getelementptr inbounds %struct.cp_options* %6, i32 0, i32 11
  store i8 %5, i8* %7, align 2
  %8 = load %struct.cp_options** %x_addr, align 8
  %9 = getelementptr inbounds %struct.cp_options* %8, i32 0, i32 11
  %10 = load i8* %9, align 2
  %11 = load %struct.cp_options** %x_addr, align 8
  %12 = getelementptr inbounds %struct.cp_options* %11, i32 0, i32 10
  store i8 %10, i8* %12, align 1
  ret void
}

declare void @llvm.memset.p0i8.i64(i8* nocapture, i8, i64, i32, i1) nounwind

define zeroext i8 @chown_failure_ok(%struct.cp_options* %x) nounwind readonly {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %iftmp.131 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %bb1, label %bb

bb:                                               ; preds = %entry
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp eq i32 %5, 22
  br i1 %6, label %bb1, label %bb9

bb1:                                              ; preds = %bb, %entry
  %7 = load %struct.cp_options** %x_addr, align 8
  %8 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 10
  %9 = load i8* %8, align 1
  %toBool = icmp ne i8 %9, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  %toBool4not = xor i1 %toBool4, true
  %toBool4not5 = zext i1 %toBool4not to i8
  %toBool7 = icmp ne i8 %toBool4not5, 0
  br i1 %toBool7, label %bb9, label %bb8

bb8:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.131, align 4
  br label %bb10

bb9:                                              ; preds = %bb1, %bb
  store i32 0, i32* %iftmp.131, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %10 = load i32* %iftmp.131, align 4
  %11 = trunc i32 %10 to i8
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define internal zeroext i8 @owner_failure_ok(%struct.cp_options* %x) nounwind {
entry:
  %x_addr = alloca %struct.cp_options*, align 8
  %retval = alloca i32
  %iftmp.132 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cp_options* %x, %struct.cp_options** %x_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %bb1, label %bb

bb:                                               ; preds = %entry
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp eq i32 %5, 22
  br i1 %6, label %bb1, label %bb9

bb1:                                              ; preds = %bb, %entry
  %7 = load %struct.cp_options** %x_addr, align 8
  %8 = getelementptr inbounds %struct.cp_options* %7, i32 0, i32 11
  %9 = load i8* %8, align 2
  %toBool = icmp ne i8 %9, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  %toBool4not = xor i1 %toBool4, true
  %toBool4not5 = zext i1 %toBool4not to i8
  %toBool7 = icmp ne i8 %toBool4not5, 0
  br i1 %toBool7, label %bb9, label %bb8

bb8:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.132, align 4
  br label %bb10

bb9:                                              ; preds = %bb1, %bb
  store i32 0, i32* %iftmp.132, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %10 = load i32* %iftmp.132, align 4
  %11 = trunc i32 %10 to i8
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define i32 @cached_umask() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @mask.9343, align 4
  %2 = icmp eq i32 %1, -1
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = call i32 @umask(i32 0) nounwind
  store i32 %3, i32* @mask.9343, align 4
  %4 = load i32* @mask.9343, align 4
  %5 = call i32 @umask(i32 %4) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %6 = load i32* @mask.9343, align 4
  store i32 %6, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define internal i64 @src_to_dest_hash(i8* %x, i64 %table_size) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %2, %struct.Src_to_dest** %p, align 8
  %3 = load %struct.Src_to_dest** %p, align 8
  %4 = getelementptr inbounds %struct.Src_to_dest* %3, i32 0, i32 0
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @src_to_dest_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.34 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.Src_to_dest*
  %b = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %2, %struct.Src_to_dest** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %4, %struct.Src_to_dest** %b, align 8
  %5 = load %struct.Src_to_dest** %a, align 8
  %6 = getelementptr inbounds %struct.Src_to_dest* %5, i32 0, i32 0
  %7 = load i64* %6, align 8
  %8 = load %struct.Src_to_dest** %b, align 8
  %9 = getelementptr inbounds %struct.Src_to_dest* %8, i32 0, i32 0
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb2, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.Src_to_dest** %a, align 8
  %13 = getelementptr inbounds %struct.Src_to_dest* %12, i32 0, i32 1
  %14 = load i64* %13, align 8
  %15 = load %struct.Src_to_dest** %b, align 8
  %16 = getelementptr inbounds %struct.Src_to_dest* %15, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.34, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.34, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %19 = load i32* %iftmp.34, align 4
  %20 = trunc i32 %19 to i8
  %21 = zext i8 %20 to i32
  store i32 %21, i32* %0, align 4
  %22 = load i32* %0, align 4
  store i32 %22, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal void @src_to_dest_free(i8* %x) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %a = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  %0 = load i8** %x_addr, align 8
  %1 = bitcast i8* %0 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %1, %struct.Src_to_dest** %a, align 8
  %2 = load %struct.Src_to_dest** %a, align 8
  %3 = getelementptr inbounds %struct.Src_to_dest* %2, i32 0, i32 2
  %4 = load i8** %3, align 8
  call void @free(i8* %4) nounwind
  %5 = load i8** %x_addr, align 8
  call void @free(i8* %5) nounwind
  ret void
}

define void @forget_created(i64 %ino, i64 %dev) nounwind {
entry:
  %ino_addr = alloca i64, align 8
  %dev_addr = alloca i64, align 8
  %probe = alloca %struct.Src_to_dest
  %ent = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %ino, i64* %ino_addr
  store i64 %dev, i64* %dev_addr
  %0 = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 0
  %1 = load i64* %ino_addr, align 8
  store i64 %1, i64* %0, align 8
  %2 = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 1
  %3 = load i64* %dev_addr, align 8
  store i64 %3, i64* %2, align 8
  %4 = getelementptr inbounds %struct.Src_to_dest* %probe, i32 0, i32 2
  store i8* null, i8** %4, align 8
  %5 = load %struct.Hash_table** @src_to_dest, align 8
  %probe1 = bitcast %struct.Src_to_dest* %probe to i8*
  %6 = call i8* @hash_delete(%struct.Hash_table* %5, i8* %probe1) nounwind
  %7 = bitcast i8* %6 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %7, %struct.Src_to_dest** %ent, align 8
  %8 = load %struct.Src_to_dest** %ent, align 8
  %9 = icmp ne %struct.Src_to_dest* %8, null
  br i1 %9, label %bb, label %return

bb:                                               ; preds = %entry
  %10 = load %struct.Src_to_dest** %ent, align 8
  %11 = bitcast %struct.Src_to_dest* %10 to i8*
  call void @src_to_dest_free(i8* %11) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define i8* @src_to_dest_lookup(i64 %ino, i64 %dev) nounwind {
entry:
  %ino_addr = alloca i64, align 8
  %dev_addr = alloca i64, align 8
  %retval = alloca i8*
  %iftmp.37 = alloca i8*
  %0 = alloca i8*
  %ent = alloca %struct.Src_to_dest
  %e = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %ino, i64* %ino_addr
  store i64 %dev, i64* %dev_addr
  %1 = getelementptr inbounds %struct.Src_to_dest* %ent, i32 0, i32 0
  %2 = load i64* %ino_addr, align 8
  store i64 %2, i64* %1, align 8
  %3 = getelementptr inbounds %struct.Src_to_dest* %ent, i32 0, i32 1
  %4 = load i64* %dev_addr, align 8
  store i64 %4, i64* %3, align 8
  %5 = load %struct.Hash_table** @src_to_dest, align 8
  %ent1 = bitcast %struct.Src_to_dest* %ent to i8*
  %6 = call i8* @hash_lookup(%struct.Hash_table* %5, i8* %ent1) nounwind
  %7 = bitcast i8* %6 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %7, %struct.Src_to_dest** %e, align 8
  %8 = load %struct.Src_to_dest** %e, align 8
  %9 = icmp ne %struct.Src_to_dest* %8, null
  br i1 %9, label %bb, label %bb2

bb:                                               ; preds = %entry
  %10 = load %struct.Src_to_dest** %e, align 8
  %11 = getelementptr inbounds %struct.Src_to_dest* %10, i32 0, i32 2
  %12 = load i8** %11, align 8
  store i8* %12, i8** %iftmp.37, align 8
  br label %bb3

bb2:                                              ; preds = %entry
  store i8* null, i8** %iftmp.37, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb
  %13 = load i8** %iftmp.37, align 8
  store i8* %13, i8** %0, align 8
  %14 = load i8** %0, align 8
  store i8* %14, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define i8* @remember_copied(i8* %name, i64 %ino, i64 %dev) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %ino_addr = alloca i64, align 8
  %dev_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %ent = alloca %struct.Src_to_dest*
  %ent_from_table = alloca %struct.Src_to_dest*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i64 %ino, i64* %ino_addr
  store i64 %dev, i64* %dev_addr
  %1 = call noalias i8* @xmalloc(i64 24) nounwind
  %2 = bitcast i8* %1 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %2, %struct.Src_to_dest** %ent, align 8
  %3 = load i8** %name_addr, align 8
  %4 = call noalias i8* @xstrdup(i8* %3) nounwind
  %5 = load %struct.Src_to_dest** %ent, align 8
  %6 = getelementptr inbounds %struct.Src_to_dest* %5, i32 0, i32 2
  store i8* %4, i8** %6, align 8
  %7 = load %struct.Src_to_dest** %ent, align 8
  %8 = getelementptr inbounds %struct.Src_to_dest* %7, i32 0, i32 0
  %9 = load i64* %ino_addr, align 8
  store i64 %9, i64* %8, align 8
  %10 = load %struct.Src_to_dest** %ent, align 8
  %11 = getelementptr inbounds %struct.Src_to_dest* %10, i32 0, i32 1
  %12 = load i64* %dev_addr, align 8
  store i64 %12, i64* %11, align 8
  %13 = load %struct.Hash_table** @src_to_dest, align 8
  %14 = load %struct.Src_to_dest** %ent, align 8
  %15 = bitcast %struct.Src_to_dest* %14 to i8*
  %16 = call i8* @hash_insert(%struct.Hash_table* %13, i8* %15) nounwind
  %17 = bitcast i8* %16 to %struct.Src_to_dest*
  store %struct.Src_to_dest* %17, %struct.Src_to_dest** %ent_from_table, align 8
  %18 = load %struct.Src_to_dest** %ent_from_table, align 8
  %19 = icmp eq %struct.Src_to_dest* %18, null
  br i1 %19, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %20 = load %struct.Src_to_dest** %ent_from_table, align 8
  %21 = load %struct.Src_to_dest** %ent, align 8
  %22 = icmp ne %struct.Src_to_dest* %20, %21
  br i1 %22, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %23 = load %struct.Src_to_dest** %ent, align 8
  %24 = bitcast %struct.Src_to_dest* %23 to i8*
  call void @src_to_dest_free(i8* %24) nounwind
  %25 = load %struct.Src_to_dest** %ent_from_table, align 8
  %26 = getelementptr inbounds %struct.Src_to_dest* %25, i32 0, i32 2
  %27 = load i8** %26, align 8
  store i8* %27, i8** %0, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  store i8* null, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %28 = load i8** %0, align 8
  store i8* %28, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define void @hash_init() nounwind {
entry:
  %0 = call %struct.Hash_table* @hash_initialize(i64 103, %struct.Hash_tuning* null, i64 (i8*, i64)* @src_to_dest_hash, i8 (i8*, i8*)* @src_to_dest_compare, void (i8*)* @src_to_dest_free) nounwind
  store %struct.Hash_table* %0, %struct.Hash_table** @src_to_dest, align 8
  %1 = load %struct.Hash_table** @src_to_dest, align 8
  %2 = icmp eq %struct.Hash_table* %1, null
  br i1 %2, label %bb, label %return

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

return:                                           ; preds = %entry
  ret void
}

define void @forget_all() nounwind {
entry:
  %0 = load %struct.Hash_table** @src_to_dest, align 8
  call void @hash_free(%struct.Hash_table* %0) nounwind
  ret void
}

define internal zeroext i8 @extent_need_sync() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 1, i32* %0, align 4
  %1 = load i32* %0, align 4
  store i32 %1, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define void @extent_scan_init(i32 %src_fd, %struct.extent_scan* %scan) nounwind {
entry:
  %src_fd_addr = alloca i32, align 4
  %scan_addr = alloca %struct.extent_scan*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %src_fd, i32* %src_fd_addr
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan_addr
  %0 = load %struct.extent_scan** %scan_addr, align 8
  %1 = getelementptr inbounds %struct.extent_scan* %0, i32 0, i32 0
  %2 = load i32* %src_fd_addr, align 4
  store i32 %2, i32* %1, align 8
  %3 = load %struct.extent_scan** %scan_addr, align 8
  %4 = getelementptr inbounds %struct.extent_scan* %3, i32 0, i32 3
  store i64 0, i64* %4, align 8
  %5 = load %struct.extent_scan** %scan_addr, align 8
  %6 = getelementptr inbounds %struct.extent_scan* %5, i32 0, i32 6
  store %struct.extent_info* null, %struct.extent_info** %6, align 8
  %7 = load %struct.extent_scan** %scan_addr, align 8
  %8 = getelementptr inbounds %struct.extent_scan* %7, i32 0, i32 1
  store i64 0, i64* %8, align 8
  %9 = load %struct.extent_scan** %scan_addr, align 8
  %10 = getelementptr inbounds %struct.extent_scan* %9, i32 0, i32 4
  store i8 0, i8* %10, align 8
  %11 = load %struct.extent_scan** %scan_addr, align 8
  %12 = getelementptr inbounds %struct.extent_scan* %11, i32 0, i32 5
  store i8 0, i8* %12, align 1
  %13 = call zeroext i8 @extent_need_sync() nounwind
  %14 = zext i8 %13 to i32
  %15 = load %struct.extent_scan** %scan_addr, align 8
  %16 = getelementptr inbounds %struct.extent_scan* %15, i32 0, i32 2
  store i32 %14, i32* %16, align 8
  ret void
}

define zeroext i8 @extent_scan_read(%struct.extent_scan* %scan) nounwind {
entry:
  %scan_addr = alloca %struct.extent_scan*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %si = alloca i32
  %last_ei = alloca %struct.extent_info*
  %fiemap_buf = alloca %union..0anon
  %fiemap = alloca %struct.fiemap*
  %fm_extents = alloca %struct.fiemap_extent*
  %i = alloca i32
  %prev_idx = alloca i64
  %new_logical = alloca i64
  %length_adjust = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.extent_scan* %scan, %struct.extent_scan** %scan_addr
  store i32 0, i32* %si, align 4
  %1 = load %struct.extent_scan** %scan_addr, align 8
  %2 = getelementptr inbounds %struct.extent_scan* %1, i32 0, i32 6
  %3 = load %struct.extent_info** %2, align 8
  store %struct.extent_info* %3, %struct.extent_info** %last_ei, align 8
  br label %bb

bb:                                               ; preds = %bb45, %entry
  %4 = getelementptr inbounds %union..0anon* %fiemap_buf, i32 0, i32 0
  store %struct.fiemap* %4, %struct.fiemap** %fiemap, align 8
  %5 = load %struct.fiemap** %fiemap, align 8
  %6 = getelementptr inbounds %struct.fiemap* %5, i32 0, i32 6
  %7 = getelementptr inbounds [0 x %struct.fiemap_extent]* %6, i64 0, i64 0
  store %struct.fiemap_extent* %7, %struct.fiemap_extent** %fm_extents, align 8
  %fiemap_buf1 = bitcast %union..0anon* %fiemap_buf to i8*
  %8 = call i8* @memset(i8* %fiemap_buf1, i32 0, i64 4096)
  %9 = load %struct.extent_scan** %scan_addr, align 8
  %10 = getelementptr inbounds %struct.extent_scan* %9, i32 0, i32 1
  %11 = load i64* %10, align 8
  %12 = load %struct.fiemap** %fiemap, align 8
  %13 = getelementptr inbounds %struct.fiemap* %12, i32 0, i32 0
  store i64 %11, i64* %13, align 8
  %14 = load %struct.extent_scan** %scan_addr, align 8
  %15 = getelementptr inbounds %struct.extent_scan* %14, i32 0, i32 2
  %16 = load i32* %15, align 8
  %17 = load %struct.fiemap** %fiemap, align 8
  %18 = getelementptr inbounds %struct.fiemap* %17, i32 0, i32 2
  store i32 %16, i32* %18, align 8
  %19 = load %struct.fiemap** %fiemap, align 8
  %20 = getelementptr inbounds %struct.fiemap* %19, i32 0, i32 4
  store i32 72, i32* %20, align 8
  %21 = load %struct.extent_scan** %scan_addr, align 8
  %22 = getelementptr inbounds %struct.extent_scan* %21, i32 0, i32 1
  %23 = load i64* %22, align 8
  %not = xor i64 %23, -1
  %24 = load %struct.fiemap** %fiemap, align 8
  %25 = getelementptr inbounds %struct.fiemap* %24, i32 0, i32 1
  store i64 %not, i64* %25, align 8
  %26 = load %struct.extent_scan** %scan_addr, align 8
  %27 = getelementptr inbounds %struct.extent_scan* %26, i32 0, i32 0
  %28 = load i32* %27, align 8
  %29 = load %struct.fiemap** %fiemap, align 8
  %30 = call i32 (i32, i64, ...)* @ioctl(i32 %28, i64 3223348747, %struct.fiemap* %29) nounwind
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %bb3, label %bb6

bb3:                                              ; preds = %bb
  %32 = load %struct.extent_scan** %scan_addr, align 8
  %33 = getelementptr inbounds %struct.extent_scan* %32, i32 0, i32 1
  %34 = load i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %36 = load %struct.extent_scan** %scan_addr, align 8
  %37 = getelementptr inbounds %struct.extent_scan* %36, i32 0, i32 4
  store i8 1, i8* %37, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb48

bb6:                                              ; preds = %bb
  %38 = load %struct.fiemap** %fiemap, align 8
  %39 = getelementptr inbounds %struct.fiemap* %38, i32 0, i32 3
  %40 = load i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  %42 = load %struct.extent_scan** %scan_addr, align 8
  br i1 %41, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %43 = getelementptr inbounds %struct.extent_scan* %42, i32 0, i32 5
  store i8 1, i8* %43, align 1
  %44 = load %struct.extent_scan** %scan_addr, align 8
  %45 = getelementptr inbounds %struct.extent_scan* %44, i32 0, i32 1
  %46 = load i64* %45, align 8
  %47 = icmp ne i64 %46, 0
  %48 = zext i1 %47 to i32
  store i32 %48, i32* %0, align 4
  br label %bb48

bb8:                                              ; preds = %bb6
  %49 = getelementptr inbounds %struct.extent_scan* %42, i32 0, i32 3
  %50 = load i64* %49, align 8
  %51 = load %struct.fiemap** %fiemap, align 8
  %52 = getelementptr inbounds %struct.fiemap* %51, i32 0, i32 3
  %53 = load i32* %52, align 4
  %54 = zext i32 %53 to i64
  %not9 = xor i64 %54, -1
  %55 = icmp ugt i64 %50, %not9
  br i1 %55, label %bb11, label %bb12

bb11:                                             ; preds = %bb8
  call void @__assert_fail(i8* getelementptr inbounds ([55 x i8]* @.str203, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8]* @.str1204, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([17 x i8]* @__PRETTY_FUNCTION__.6092, i64 0, i64 0)) noreturn
  unreachable

bb12:                                             ; preds = %bb8
  %56 = load %struct.extent_scan** %scan_addr, align 8
  %57 = getelementptr inbounds %struct.extent_scan* %56, i32 0, i32 3
  %58 = load i64* %57, align 8
  %59 = load %struct.fiemap** %fiemap, align 8
  %60 = getelementptr inbounds %struct.fiemap* %59, i32 0, i32 3
  %61 = load i32* %60, align 4
  %62 = zext i32 %61 to i64
  %63 = add i64 %58, %62
  %64 = load %struct.extent_scan** %scan_addr, align 8
  %65 = getelementptr inbounds %struct.extent_scan* %64, i32 0, i32 3
  store i64 %63, i64* %65, align 8
  %66 = load %struct.extent_info** %last_ei, align 8
  %67 = ptrtoint %struct.extent_info* %66 to i64
  %68 = load %struct.extent_scan** %scan_addr, align 8
  %69 = getelementptr inbounds %struct.extent_scan* %68, i32 0, i32 6
  %70 = load %struct.extent_info** %69, align 8
  %71 = ptrtoint %struct.extent_info* %70 to i64
  %72 = sub nsw i64 %67, %71
  %int_cast_to_i64 = bitcast i64 24 to i64
  %73 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %74 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %74, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb12
  call void @klee_disable_symbex() nounwind
  %75 = sdiv exact i64 %72, 24
  store i64 %75, i64* %prev_idx, align 8
  %76 = load %struct.extent_scan** %scan_addr, align 8
  %77 = getelementptr inbounds %struct.extent_scan* %76, i32 0, i32 3
  %78 = load i64* %77, align 8
  %79 = load %struct.extent_scan** %scan_addr, align 8
  %80 = getelementptr inbounds %struct.extent_scan* %79, i32 0, i32 6
  %81 = load %struct.extent_info** %80, align 8
  %82 = bitcast %struct.extent_info* %81 to i8*
  %83 = call i8* @xnrealloc(i8* %82, i64 %78, i64 24) nounwind
  %84 = bitcast i8* %83 to %struct.extent_info*
  %85 = load %struct.extent_scan** %scan_addr, align 8
  %86 = getelementptr inbounds %struct.extent_scan* %85, i32 0, i32 6
  store %struct.extent_info* %84, %struct.extent_info** %86, align 8
  %87 = load %struct.extent_scan** %scan_addr, align 8
  %88 = getelementptr inbounds %struct.extent_scan* %87, i32 0, i32 6
  %89 = load %struct.extent_info** %88, align 8
  %90 = load i64* %prev_idx, align 8
  %91 = getelementptr inbounds %struct.extent_info* %89, i64 %90
  store %struct.extent_info* %91, %struct.extent_info** %last_ei, align 8
  store i32 0, i32* %i, align 4
  store i32 0, i32* %i, align 4
  br label %bb33

bb13:                                             ; preds = %bb33
  %92 = load %struct.fiemap_extent** %fm_extents, align 8
  %93 = load i32* %i, align 4
  %94 = zext i32 %93 to i64
  %95 = getelementptr inbounds %struct.fiemap_extent* %92, i64 %94
  %96 = getelementptr inbounds %struct.fiemap_extent* %95, i32 0, i32 0
  %97 = load i64* %96, align 8
  %98 = load %struct.fiemap_extent** %fm_extents, align 8
  %99 = load i32* %i, align 4
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %struct.fiemap_extent* %98, i64 %100
  %102 = getelementptr inbounds %struct.fiemap_extent* %101, i32 0, i32 2
  %103 = load i64* %102, align 8
  %104 = sub i64 9223372036854775807, %103
  %105 = icmp ugt i64 %97, %104
  br i1 %105, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  call void @__assert_fail(i8* getelementptr inbounds ([64 x i8]* @.str2205, i64 0, i64 0), i8* getelementptr inbounds ([18 x i8]* @.str1204, i64 0, i64 0), i32 141, i8* getelementptr inbounds ([17 x i8]* @__PRETTY_FUNCTION__.6092, i64 0, i64 0)) noretur
  unreachable

bb15:                                             ; preds = %bb13
  %106 = load i32* %si, align 4
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %bb19, label %bb16

bb16:                                             ; preds = %bb15
  %108 = load %struct.extent_info** %last_ei, align 8
  %109 = getelementptr inbounds %struct.extent_info* %108, i32 0, i32 2
  %110 = load i32* %109, align 8
  %111 = load %struct.fiemap_extent** %fm_extents, align 8
  %112 = load i32* %i, align 4
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %struct.fiemap_extent* %111, i64 %113
  %115 = getelementptr inbounds %struct.fiemap_extent* %114, i32 0, i32 4
  %116 = load i32* %115, align 8
  %117 = and i32 %116, -2
  %118 = icmp ne i32 %110, %117
  br i1 %118, label %bb19, label %bb17

bb17:                                             ; preds = %bb16
  %119 = load %struct.extent_info** %last_ei, align 8
  %120 = getelementptr inbounds %struct.extent_info* %119, i32 0, i32 0
  %121 = load i64* %120, align 8
  %122 = load %struct.extent_info** %last_ei, align 8
  %123 = getelementptr inbounds %struct.extent_info* %122, i32 0, i32 1
  %124 = load i64* %123, align 8
  %125 = add nsw i64 %121, %124
  %126 = load %struct.fiemap_extent** %fm_extents, align 8
  %127 = load i32* %i, align 4
  %128 = zext i32 %127 to i64
  %129 = getelementptr inbounds %struct.fiemap_extent* %126, i64 %128
  %130 = getelementptr inbounds %struct.fiemap_extent* %129, i32 0, i32 0
  %131 = load i64* %130, align 8
  %132 = icmp ne i64 %125, %131
  br i1 %132, label %bb19, label %bb18

bb18:                                             ; preds = %bb17
  %133 = load %struct.extent_info** %last_ei, align 8
  %134 = getelementptr inbounds %struct.extent_info* %133, i32 0, i32 1
  %135 = load i64* %134, align 8
  %136 = load %struct.fiemap_extent** %fm_extents, align 8
  %137 = load i32* %i, align 4
  %138 = zext i32 %137 to i64
  %139 = getelementptr inbounds %struct.fiemap_extent* %136, i64 %138
  %140 = getelementptr inbounds %struct.fiemap_extent* %139, i32 0, i32 2
  %141 = load i64* %140, align 8
  %142 = add i64 %135, %141
  %143 = load %struct.extent_info** %last_ei, align 8
  %144 = getelementptr inbounds %struct.extent_info* %143, i32 0, i32 1
  store i64 %142, i64* %144, align 8
  %145 = load %struct.fiemap_extent** %fm_extents, align 8
  %146 = load i32* %i, align 4
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds %struct.fiemap_extent* %145, i64 %147
  %149 = getelementptr inbounds %struct.fiemap_extent* %148, i32 0, i32 4
  %150 = load i32* %149, align 8
  %151 = load %struct.extent_info** %last_ei, align 8
  %152 = getelementptr inbounds %struct.extent_info* %151, i32 0, i32 2
  store i32 %150, i32* %152, align 8
  br label %bb32

bb19:                                             ; preds = %bb17, %bb16, %bb15
  %153 = load i32* %si, align 4
  %154 = icmp ne i32 %153, 0
  br i1 %154, label %bb21, label %bb20

bb20:                                             ; preds = %bb19
  %155 = load %struct.extent_scan** %scan_addr, align 8
  %156 = getelementptr inbounds %struct.extent_scan* %155, i32 0, i32 1
  %157 = load i64* %156, align 8
  %158 = load %struct.fiemap_extent** %fm_extents, align 8
  %159 = load i32* %i, align 4
  %160 = zext i32 %159 to i64
  %161 = getelementptr inbounds %struct.fiemap_extent* %158, i64 %160
  %162 = getelementptr inbounds %struct.fiemap_extent* %161, i32 0, i32 0
  %163 = load i64* %162, align 8
  %164 = icmp ugt i64 %157, %163
  br i1 %164, label %bb23, label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %165 = load i32* %si, align 4
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %bb31, label %bb22

bb22:                                             ; preds = %bb21
  %167 = load %struct.extent_info** %last_ei, align 8
  %168 = getelementptr inbounds %struct.extent_info* %167, i32 0, i32 0
  %169 = load i64* %168, align 8
  %170 = load %struct.extent_info** %last_ei, align 8
  %171 = getelementptr inbounds %struct.extent_info* %170, i32 0, i32 1
  %172 = load i64* %171, align 8
  %173 = add nsw i64 %169, %172
  %174 = load %struct.fiemap_extent** %fm_extents, align 8
  %175 = load i32* %i, align 4
  %176 = zext i32 %175 to i64
  %177 = getelementptr inbounds %struct.fiemap_extent* %174, i64 %176
  %178 = getelementptr inbounds %struct.fiemap_extent* %177, i32 0, i32 0
  %179 = load i64* %178, align 8
  %180 = icmp ugt i64 %173, %179
  br i1 %180, label %bb23, label %bb31

bb23:                                             ; preds = %bb22, %bb20
  %181 = load i32* %si, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  %183 = load %struct.extent_scan** %scan_addr, align 8
  %184 = getelementptr inbounds %struct.extent_scan* %183, i32 0, i32 1
  %185 = load i64* %184, align 8
  store i64 %185, i64* %new_logical, align 8
  br label %bb26

bb25:                                             ; preds = %bb23
  %186 = load %struct.extent_info** %last_ei, align 8
  %187 = getelementptr inbounds %struct.extent_info* %186, i32 0, i32 0
  %188 = load i64* %187, align 8
  %189 = load %struct.extent_info** %last_ei, align 8
  %190 = getelementptr inbounds %struct.extent_info* %189, i32 0, i32 1
  %191 = load i64* %190, align 8
  %192 = add nsw i64 %188, %191
  store i64 %192, i64* %new_logical, align 8
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24
  %193 = load %struct.fiemap_extent** %fm_extents, align 8
  %194 = load i32* %i, align 4
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds %struct.fiemap_extent* %193, i64 %195
  %197 = getelementptr inbounds %struct.fiemap_extent* %196, i32 0, i32 0
  %198 = load i64* %197, align 8
  %199 = load i64* %new_logical, align 8
  %200 = sub i64 %199, %198
  store i64 %200, i64* %length_adjust, align 8
  %201 = load %struct.fiemap_extent** %fm_extents, align 8
  %202 = load i32* %i, align 4
  %203 = zext i32 %202 to i64
  %204 = getelementptr inbounds %struct.fiemap_extent* %201, i64 %203
  %205 = getelementptr inbounds %struct.fiemap_extent* %204, i32 0, i32 2
  %206 = load i64* %205, align 8
  %207 = load i64* %length_adjust, align 8
  %208 = icmp ugt i64 %206, %207
  br i1 %208, label %bb27, label %bb30

bb27:                                             ; preds = %bb26
  %209 = load %struct.extent_scan** %scan_addr, align 8
  %210 = getelementptr inbounds %struct.extent_scan* %209, i32 0, i32 1
  %211 = load i64* %210, align 8
  %212 = icmp eq i64 %211, 0
  br i1 %212, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %213 = load %struct.extent_scan** %scan_addr, align 8
  %214 = getelementptr inbounds %struct.extent_scan* %213, i32 0, i32 4
  store i8 1, i8* %214, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  store i32 0, i32* %0, align 4
  br label %bb48

bb30:                                             ; preds = %bb26
  %215 = load %struct.fiemap_extent** %fm_extents, align 8
  %216 = load i32* %i, align 4
  %217 = zext i32 %216 to i64
  %218 = getelementptr inbounds %struct.fiemap_extent* %215, i64 %217
  %219 = getelementptr inbounds %struct.fiemap_extent* %218, i32 0, i32 0
  %220 = load i64* %new_logical, align 8
  store i64 %220, i64* %219, align 8
  %221 = load %struct.fiemap_extent** %fm_extents, align 8
  %222 = load i32* %i, align 4
  %223 = zext i32 %222 to i64
  %224 = getelementptr inbounds %struct.fiemap_extent* %221, i64 %223
  %225 = load %struct.fiemap_extent** %fm_extents, align 8
  %226 = load i32* %i, align 4
  %227 = zext i32 %226 to i64
  %228 = getelementptr inbounds %struct.fiemap_extent* %225, i64 %227
  %229 = getelementptr inbounds %struct.fiemap_extent* %228, i32 0, i32 2
  %230 = load i64* %229, align 8
  %231 = load i64* %length_adjust, align 8
  %232 = sub i64 %230, %231
  %233 = getelementptr inbounds %struct.fiemap_extent* %224, i32 0, i32 2
  store i64 %232, i64* %233, align 8
  %234 = load i32* %i, align 4
  %235 = sub i32 %234, 1
  store i32 %235, i32* %i, align 4
  br label %bb32

bb31:                                             ; preds = %bb22, %bb21
  %236 = load %struct.extent_scan** %scan_addr, align 8
  %237 = getelementptr inbounds %struct.extent_scan* %236, i32 0, i32 6
  %238 = load %struct.extent_info** %237, align 8
  %239 = load i32* %si, align 4
  %240 = zext i32 %239 to i64
  %241 = getelementptr inbounds %struct.extent_info* %238, i64 %240
  store %struct.extent_info* %241, %struct.extent_info** %last_ei, align 8
  %242 = load %struct.fiemap_extent** %fm_extents, align 8
  %243 = load i32* %i, align 4
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds %struct.fiemap_extent* %242, i64 %244
  %246 = getelementptr inbounds %struct.fiemap_extent* %245, i32 0, i32 0
  %247 = load i64* %246, align 8
  %248 = load %struct.extent_info** %last_ei, align 8
  %249 = getelementptr inbounds %struct.extent_info* %248, i32 0, i32 0
  store i64 %247, i64* %249, align 8
  %250 = load %struct.fiemap_extent** %fm_extents, align 8
  %251 = load i32* %i, align 4
  %252 = zext i32 %251 to i64
  %253 = getelementptr inbounds %struct.fiemap_extent* %250, i64 %252
  %254 = getelementptr inbounds %struct.fiemap_extent* %253, i32 0, i32 2
  %255 = load i64* %254, align 8
  %256 = load %struct.extent_info** %last_ei, align 8
  %257 = getelementptr inbounds %struct.extent_info* %256, i32 0, i32 1
  store i64 %255, i64* %257, align 8
  %258 = load %struct.fiemap_extent** %fm_extents, align 8
  %259 = load i32* %i, align 4
  %260 = zext i32 %259 to i64
  %261 = getelementptr inbounds %struct.fiemap_extent* %258, i64 %260
  %262 = getelementptr inbounds %struct.fiemap_extent* %261, i32 0, i32 4
  %263 = load i32* %262, align 8
  %264 = load %struct.extent_info** %last_ei, align 8
  %265 = getelementptr inbounds %struct.extent_info* %264, i32 0, i32 2
  store i32 %263, i32* %265, align 8
  %266 = load i32* %si, align 4
  %267 = add i32 %266, 1
  store i32 %267, i32* %si, align 4
  br label %bb32

bb32:                                             ; preds = %bb31, %bb30, %bb18
  %268 = load i32* %i, align 4
  %269 = add i32 %268, 1
  store i32 %269, i32* %i, align 4
  br label %bb33

bb33:                                             ; preds = %bb32, %klee_div_zero_check.exit
  %270 = load %struct.fiemap** %fiemap, align 8
  %271 = getelementptr inbounds %struct.fiemap* %270, i32 0, i32 3
  %272 = load i32* %271, align 4
  %273 = load i32* %i, align 4
  %274 = icmp ugt i32 %272, %273
  br i1 %274, label %bb13, label %bb34

bb34:                                             ; preds = %bb33
  %275 = load %struct.extent_info** %last_ei, align 8
  %276 = getelementptr inbounds %struct.extent_info* %275, i32 0, i32 2
  %277 = load i32* %276, align 8
  %278 = and i32 %277, 1
  %279 = trunc i32 %278 to i8
  %toBool = icmp ne i8 %279, 0
  br i1 %toBool, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %280 = load %struct.extent_scan** %scan_addr, align 8
  %281 = getelementptr inbounds %struct.extent_scan* %280, i32 0, i32 5
  store i8 1, i8* %281, align 1
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34
  %282 = load i32* %si, align 4
  %283 = icmp ugt i32 %282, 72
  br i1 %283, label %bb37, label %bb43

bb37:                                             ; preds = %bb36
  %284 = load %struct.extent_scan** %scan_addr, align 8
  %285 = getelementptr inbounds %struct.extent_scan* %284, i32 0, i32 5
  %286 = load i8* %285, align 1
  %toBool38 = icmp ne i8 %286, 0
  %toBool38not = xor i1 %toBool38, true
  %toBool38not39 = zext i1 %toBool38not to i8
  %toBool41 = icmp ne i8 %toBool38not39, 0
  br i1 %toBool41, label %bb42, label %bb43

bb42:                                             ; preds = %bb37
  %287 = load %struct.extent_scan** %scan_addr, align 8
  %288 = getelementptr inbounds %struct.extent_scan* %287, i32 0, i32 6
  %289 = load %struct.extent_info** %288, align 8
  %290 = load i32* %si, align 4
  %291 = sub i32 %290, 1
  store i32 %291, i32* %si, align 4
  %292 = load i32* %si, align 4
  %293 = zext i32 %292 to i64
  %294 = getelementptr inbounds %struct.extent_info* %289, i64 %293
  %295 = getelementptr inbounds %struct.extent_info* %294, i64 -1
  store %struct.extent_info* %295, %struct.extent_info** %last_ei, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb37, %bb36
  %296 = load i32* %si, align 4
  %297 = zext i32 %296 to i64
  %298 = load %struct.extent_scan** %scan_addr, align 8
  %299 = getelementptr inbounds %struct.extent_scan* %298, i32 0, i32 3
  store i64 %297, i64* %299, align 8
  %300 = load %struct.extent_scan** %scan_addr, align 8
  %301 = getelementptr inbounds %struct.extent_scan* %300, i32 0, i32 5
  %302 = load i8* %301, align 1
  %toBool44 = icmp ne i8 %302, 0
  br i1 %toBool44, label %bb47, label %bb45

bb45:                                             ; preds = %bb43
  %303 = load %struct.extent_info** %last_ei, align 8
  %304 = getelementptr inbounds %struct.extent_info* %303, i32 0, i32 0
  %305 = load i64* %304, align 8
  %306 = load %struct.extent_info** %last_ei, align 8
  %307 = getelementptr inbounds %struct.extent_info* %306, i32 0, i32 1
  %308 = load i64* %307, align 8
  %309 = add nsw i64 %305, %308
  %310 = load %struct.extent_scan** %scan_addr, align 8
  %311 = getelementptr inbounds %struct.extent_scan* %310, i32 0, i32 1
  store i64 %309, i64* %311, align 8
  %312 = load i32* %si, align 4
  %313 = icmp ugt i32 %312, 71
  br i1 %313, label %bb47, label %bb

bb47:                                             ; preds = %bb45, %bb43
  store i32 1, i32* %0, align 4
  br label %bb48

bb48:                                             ; preds = %bb47, %bb29, %bb7, %bb5
  %314 = load i32* %0, align 4
  store i32 %314, i32* %retval, align 4
  %retval49 = load i32* %retval
  %retval4950 = trunc i32 %retval49 to i8
  ret i8 %retval4950
}

define i32 @copy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %source_desc_addr = alloca i32, align 4
  %dst_name_addr = alloca i8*, align 8
  %dest_desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i32 %source_desc, i32* %source_desc_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i32 %dest_desc, i32* %dest_desc_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i8** %src_name_addr, align 8
  %2 = load i32* %source_desc_addr, align 4
  %3 = load i8** %dst_name_addr, align 8
  %4 = load i32* %dest_desc_addr, align 4
  %5 = load i32* %mode_addr, align 4
  %6 = call i32 @qcopy_acl(i8* %1, i32 %2, i8* %3, i32 %4, i32 %5) nounwind
  store i32 %6, i32* %ret, align 4
  %7 = load i32* %ret, align 4
  switch i32 %7, label %bb2 [
    i32 -2, label %bb
    i32 -1, label %bb1
  ]

bb:                                               ; preds = %entry
  %8 = load i8** %src_name_addr, align 8
  %9 = call i8* @quote(i8* %8) nounwind
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %10, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %11, i8* getelementptr inbounds ([3 x i8]* @.str210, i64 0, i64 0), i8* %9) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %12 = load i8** %dst_name_addr, align 8
  %13 = call i8* @quote(i8* %12) nounwind
  %14 = call i8* @gettext(i8* getelementptr inbounds ([30 x i8]* @.str1211, i64 0, i64 0)) nounwind
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %16, i8* %14, i8* %13) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb, %entry
  %17 = load i32* %ret, align 4
  store i32 %17, i32* %0, align 4
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_acl(i8* %name, i32 %desc, i32 %mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %desc, i32* %desc_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i8** %name_addr, align 8
  %2 = load i32* %desc_addr, align 4
  %3 = load i32* %mode_addr, align 4
  %4 = call i32 @qset_acl(i8* %1, i32 %2, i32 %3) nounwind
  store i32 %4, i32* %ret, align 4
  %5 = load i32* %ret, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %7 = load i8** %name_addr, align 8
  %8 = call i8* @quote(i8* %7) nounwind
  %9 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str213, i64 0, i64 0)) nounwind
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %10, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %11, i8* %9, i8* %8) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %12 = load i32* %ret, align 4
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define i8* @areadlink_with_size(i8* %file, i64 %size) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.1 = alloca i64
  %iftmp.0 = alloca i64
  %symlink_max = alloca i64
  %INITIAL_LIMIT_BOUND = alloca i64
  %initial_limit = alloca i64
  %buf_size = alloca i64
  %r = alloca i64
  %link_length = alloca i64
  %buffer = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 %size, i64* %size_addr
  store i64 1024, i64* %symlink_max, align 8
  store i64 8192, i64* %INITIAL_LIMIT_BOUND, align 8
  %1 = load i64* %symlink_max, align 8
  %2 = load i64* %INITIAL_LIMIT_BOUND, align 8
  %3 = icmp ult i64 %1, %2
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load i64* %symlink_max, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %iftmp.0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i64* %INITIAL_LIMIT_BOUND, align 8
  store i64 %6, i64* %iftmp.0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i64* %iftmp.0, align 8
  store i64 %7, i64* %initial_limit, align 8
  %8 = load i64* %size_addr, align 8
  %9 = load i64* %initial_limit, align 8
  %10 = icmp ult i64 %8, %9
  br i1 %10, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %11 = load i64* %size_addr, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %iftmp.1, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %13 = load i64* %initial_limit, align 8
  store i64 %13, i64* %iftmp.1, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %14 = load i64* %iftmp.1, align 8
  store i64 %14, i64* %buf_size, align 8
  br label %bb6

bb6:                                              ; preds = %bb14, %bb16, %bb5
  %15 = load i64* %buf_size, align 8
  %16 = call noalias i8* @malloc(i64 %15) nounwind
  store i8* %16, i8** %buffer, align 8
  %17 = load i8** %buffer, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb19

bb8:                                              ; preds = %bb6
  %19 = load i8** %file_addr, align 8
  %20 = load i8** %buffer, align 8
  %21 = load i64* %buf_size, align 8
  %22 = call i64 @readlink(i8* noalias %19, i8* noalias %20, i64 %21) nounwind
  store i64 %22, i64* %r, align 8
  %23 = load i64* %r, align 8
  store i64 %23, i64* %link_length, align 8
  %24 = load i64* %r, align 8
  %25 = icmp slt i64 %24, 0
  br i1 %25, label %bb9, label %bb11

bb9:                                              ; preds = %bb8
  %26 = call i32* @__errno_location() nounwind readnone
  %27 = load i32* %26, align 4
  %28 = icmp ne i32 %27, 34
  br i1 %28, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %29 = call i32* @__errno_location() nounwind readnone
  %30 = load i32* %29, align 4
  store i32 %30, i32* %saved_errno, align 4
  %31 = load i8** %buffer, align 8
  call void @free(i8* %31) nounwind
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %saved_errno, align 4
  store i32 %33, i32* %32, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb11:                                             ; preds = %bb9, %bb8
  %34 = load i64* %link_length, align 8
  %35 = load i64* %buf_size, align 8
  %36 = icmp ult i64 %34, %35
  %37 = load i8** %buffer, align 8
  br i1 %36, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %38 = load i64* %link_length, align 8
  %39 = getelementptr inbounds i8* %37, i64 %38
  store i8 0, i8* %39, align 1
  %40 = load i8** %buffer, align 8
  store i8* %40, i8** %0, align 8
  br label %bb19

bb13:                                             ; preds = %bb11
  call void @free(i8* %37) nounwind
  %41 = load i64* %buf_size, align 8
  %42 = icmp ule i64 %41, 4611686018427387903
  %43 = load i64* %buf_size, align 8
  br i1 %42, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  %44 = mul i64 %43, 2
  store i64 %44, i64* %buf_size, align 8
  br label %bb6

bb15:                                             ; preds = %bb13
  %45 = icmp ule i64 %43, 9223372036854775806
  br i1 %45, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i64 9223372036854775807, i64* %buf_size, align 8
  br label %bb6

bb17:                                             ; preds = %bb15
  %46 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %46, align 4
  store i8* null, i8** %0, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %bb12, %bb10, %bb7
  %47 = load i8** %0, align 8
  store i8* %47, i8** %retval, align 8
  %retval20 = load i8** %retval
  ret i8* %retval20
}

declare noalias i8* @malloc(i64) nounwind

define internal void @__argmatch_die() nounwind {
entry:
  call void @usage(i32 1) nounwind
  unreachable
}

define i64 @argmatch(i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %i = alloca i64
  %arglen = alloca i64
  %matchind = alloca i64
  %ambiguous = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 -1, i64* %matchind, align 8
  store i8 0, i8* %ambiguous, align 1
  %1 = load i8** %arg_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %arglen, align 8
  store i64 0, i64* %i, align 8
  br label %bb9

bb:                                               ; preds = %bb9
  %3 = load i8*** %arglist_addr, align 8
  %4 = load i64* %i, align 8
  %5 = getelementptr inbounds i8** %3, i64 %4
  %6 = load i8** %5, align 1
  %7 = load i8** %arg_addr, align 8
  %8 = load i64* %arglen, align 8
  %9 = call i32 @strncmp(i8* %6, i8* %7, i64 %8) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %11 = load i8*** %arglist_addr, align 8
  %12 = load i64* %i, align 8
  %13 = getelementptr inbounds i8** %11, i64 %12
  %14 = load i8** %13, align 1
  %15 = call i64 @strlen(i8* %14) nounwind readonly
  %16 = load i64* %arglen, align 8
  %17 = icmp eq i64 %15, %16
  br i1 %17, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %18 = load i64* %i, align 8
  store i64 %18, i64* %0, align 8
  br label %bb13

bb3:                                              ; preds = %bb1
  %19 = load i64* %matchind, align 8
  %20 = icmp eq i64 %19, -1
  br i1 %20, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %21 = load i64* %i, align 8
  store i64 %21, i64* %matchind, align 8
  br label %bb8

bb5:                                              ; preds = %bb3
  %22 = load i8** %vallist_addr, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %24 = load i64* %valsize_addr, align 8
  %25 = load i64* %i, align 8
  %26 = mul i64 %24, %25
  %27 = load i8** %vallist_addr, align 8
  %28 = getelementptr inbounds i8* %27, i64 %26
  %29 = load i64* %matchind, align 8
  %30 = load i64* %valsize_addr, align 8
  %31 = mul i64 %30, %29
  %32 = load i8** %vallist_addr, align 8
  %33 = getelementptr inbounds i8* %32, i64 %31
  %34 = load i64* %valsize_addr, align 8
  %35 = call i32 @memcmp(i8* %33, i8* %28, i64 %34) nounwind readonly
  %36 = icmp ne i32 %35, 0
  br i1 %36, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb5
  store i8 1, i8* %ambiguous, align 1
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb4, %bb
  %37 = load i64* %i, align 8
  %38 = add i64 %37, 1
  store i64 %38, i64* %i, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %entry
  %39 = load i8*** %arglist_addr, align 8
  %40 = load i64* %i, align 8
  %41 = getelementptr inbounds i8** %39, i64 %40
  %42 = load i8** %41, align 1
  %43 = icmp ne i8* %42, null
  br i1 %43, label %bb, label %bb10

bb10:                                             ; preds = %bb9
  %44 = load i8* %ambiguous, align 1
  %toBool = icmp ne i8 %44, 0
  br i1 %toBool, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i64 -2, i64* %0, align 8
  br label %bb13

bb12:                                             ; preds = %bb10
  %45 = load i64* %matchind, align 8
  store i64 %45, i64* %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11, %bb2
  %46 = load i64* %0, align 8
  store i64 %46, i64* %retval, align 8
  %retval14 = load i64* %retval
  ret i64 %retval14
}

define void @argmatch_invalid(i8* %context, i8* %value, i64 %problem) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %value_addr = alloca i8*, align 8
  %problem_addr = alloca i64, align 8
  %iftmp.17 = alloca i8*
  %format = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %value, i8** %value_addr
  store i64 %problem, i64* %problem_addr
  %0 = load i64* %problem_addr, align 8
  %1 = icmp eq i64 %0, -1
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = call i8* @gettext(i8* getelementptr inbounds ([27 x i8]* @.str217, i64 0, i64 0)) nounwind
  store i8* %2, i8** %iftmp.17, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %3 = call i8* @gettext(i8* getelementptr inbounds ([29 x i8]* @.str1218, i64 0, i64 0)) nounwind
  store i8* %3, i8** %iftmp.17, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i8** %iftmp.17, align 8
  store i8* %4, i8** %format, align 8
  %5 = load i8** %context_addr, align 8
  %6 = call i8* @quote_n(i32 1, i8* %5) nounwind
  %7 = load i8** %value_addr, align 8
  %8 = call i8* @quotearg_n_style(i32 0, i32 8, i8* %7) nounwind
  %9 = load i8** %format, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 0, i8* %9, i8* %8, i8* %6) nounwind
  ret void
}

define void @argmatch_valid(i8** %arglist, i8* %vallist, i64 %valsize) nounwind {
entry:
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %i = alloca i64
  %last_val = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i8* null, i8** %last_val, align 8
  %0 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %1 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str2219, i64 0, i64 0)) nounwind
  %2 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %1, %struct.FILE* noalias %0) nounwind
  store i64 0, i64* %i, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %3 = load i64* %i, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %5 = load i64* %valsize_addr, align 8
  %6 = load i64* %i, align 8
  %7 = mul i64 %5, %6
  %8 = load i8** %vallist_addr, align 8
  %9 = getelementptr inbounds i8* %8, i64 %7
  %10 = load i8** %last_val, align 8
  %11 = load i64* %valsize_addr, align 8
  %12 = call i32 @memcmp(i8* %10, i8* %9, i64 %11) nounwind readonly
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  %14 = load i8*** %arglist_addr, align 8
  %15 = load i64* %i, align 8
  %16 = getelementptr inbounds i8** %14, i64 %15
  %17 = load i8** %16, align 1
  %18 = call i8* @quote(i8* %17) nounwind
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str3220, i64 0, i64 0), i8* %18) nounwind
  %21 = load i64* %valsize_addr, align 8
  %22 = load i64* %i, align 8
  %23 = mul i64 %21, %22
  %24 = load i8** %vallist_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 %23
  store i8* %25, i8** %last_val, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %26 = load i8*** %arglist_addr, align 8
  %27 = load i64* %i, align 8
  %28 = getelementptr inbounds i8** %26, i64 %27
  %29 = load i8** %28, align 1
  %30 = call i8* @quote(i8* %29) nounwind
  %31 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %32 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %31, i8* noalias getelementptr inbounds ([5 x i8]* @.str4221, i64 0, i64 0), i8* %30) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %33 = load i64* %i, align 8
  %34 = add i64 %33, 1
  store i64 %34, i64* %i, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %35 = load i8*** %arglist_addr, align 8
  %36 = load i64* %i, align 8
  %37 = getelementptr inbounds i8** %35, i64 %36
  %38 = load i8** %37, align 1
  %39 = icmp ne i8* %38, null
  br i1 %39, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %40 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %41 = call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 10, %struct.FILE* %40) nounwind
  ret void
}

define i64 @__xargmatch_internal(i8* %context, i8* %arg, i8** %arglist, i8* %vallist, i64 %valsize, void ()* %exit_fn) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %exit_fn_addr = alloca void ()*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %arg, i8** %arg_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store void ()* %exit_fn, void ()** %exit_fn_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i8*** %arglist_addr, align 8
  %3 = load i8** %vallist_addr, align 8
  %4 = load i64* %valsize_addr, align 8
  %5 = call i64 @argmatch(i8* %1, i8** %2, i8* %3, i64 %4) nounwind readonly
  store i64 %5, i64* %res, align 8
  %6 = load i64* %res, align 8
  %7 = icmp sge i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = load i64* %res, align 8
  store i64 %8, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = load i8** %context_addr, align 8
  %10 = load i8** %arg_addr, align 8
  %11 = load i64* %res, align 8
  call void @argmatch_invalid(i8* %9, i8* %10, i64 %11) nounwind
  %12 = load i8*** %arglist_addr, align 8
  %13 = load i8** %vallist_addr, align 8
  %14 = load i64* %valsize_addr, align 8
  call void @argmatch_valid(i8** %12, i8* %13, i64 %14) nounwind
  %15 = load void ()** %exit_fn_addr, align 8
  call void %15() nounwind
  store i64 -1, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @argmatch_to_argument(i8* %value, i8** %arglist, i8* %vallist, i64 %valsize) nounwind readonly {
entry:
  %value_addr = alloca i8*, align 8
  %arglist_addr = alloca i8**, align 8
  %vallist_addr = alloca i8*, align 8
  %valsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %i = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %value, i8** %value_addr
  store i8** %arglist, i8*** %arglist_addr
  store i8* %vallist, i8** %vallist_addr
  store i64 %valsize, i64* %valsize_addr
  store i64 0, i64* %i, align 8
  br label %bb3

bb:                                               ; preds = %bb3
  %1 = load i64* %valsize_addr, align 8
  %2 = load i64* %i, align 8
  %3 = mul i64 %1, %2
  %4 = load i8** %vallist_addr, align 8
  %5 = getelementptr inbounds i8* %4, i64 %3
  %6 = load i8** %value_addr, align 8
  %7 = load i64* %valsize_addr, align 8
  %8 = call i32 @memcmp(i8* %6, i8* %5, i64 %7) nounwind readonly
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8*** %arglist_addr, align 8
  %11 = load i64* %i, align 8
  %12 = getelementptr inbounds i8** %10, i64 %11
  %13 = load i8** %12, align 1
  store i8* %13, i8** %0, align 8
  br label %bb5

bb2:                                              ; preds = %bb
  %14 = load i64* %i, align 8
  %15 = add i64 %14, 1
  store i64 %15, i64* %i, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %entry
  %16 = load i8*** %arglist_addr, align 8
  %17 = load i64* %i, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  %19 = load i8** %18, align 1
  %20 = icmp ne i8* %19, null
  br i1 %20, label %bb, label %bb4

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval6 = load i8** %retval
  ret i8* %retval6
}

define internal void @check_extension(i8* %file, i64 %filelen, i8 signext %e) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %filelen_addr = alloca i64, align 8
  %e_addr = alloca i8, align 1
  %iftmp.0 = alloca i64
  %base = alloca i8*
  %baselen = alloca i64
  %baselen_max = alloca i64
  %name_max = alloca i64
  %tmp = alloca [2 x i8]
  %size = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 %filelen, i64* %filelen_addr
  store i8 %e, i8* %e_addr
  %0 = load i8** %file_addr, align 8
  %1 = call i8* @last_component(i8* %0) nounwind readonly
  store i8* %1, i8** %base, align 8
  %2 = load i8** %base, align 8
  %3 = call i64 @base_len(i8* %2) nounwind readonly
  store i64 %3, i64* %baselen, align 8
  store i64 255, i64* %baselen_max, align 8
  %4 = load i64* %baselen, align 8
  %5 = icmp ugt i64 %4, 14
  br i1 %5, label %bb, label %bb7

bb:                                               ; preds = %entry
  %tmp1 = bitcast [2 x i8]* %tmp to i8*
  %6 = load i8** %base, align 8
  %7 = call i8* @memcpy(i8* %tmp1, i8* %6, i64 2)
  %8 = load i8** %base, align 8
  %9 = call i8* @memcpy(i8* %8, i8* getelementptr inbounds ([2 x i8]* @.str1225, i64 0, i64 0), i64 2)
  %10 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %10, align 4
  %11 = load i8** %file_addr, align 8
  %12 = call i64 @pathconf(i8* %11, i32 3) nounwind
  store i64 %12, i64* %name_max, align 8
  %13 = load i64* %name_max, align 8
  %14 = icmp sge i64 %13, 0
  br i1 %14, label %bb3, label %bb2

bb2:                                              ; preds = %bb
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %bb3, label %bb5

bb3:                                              ; preds = %bb2, %bb
  %18 = load i64* %name_max, align 8
  store i64 %18, i64* %baselen_max, align 8
  %19 = load i64* %baselen_max, align 8
  store i64 %19, i64* %size, align 8
  %20 = load i64* %name_max, align 8
  %21 = load i64* %size, align 8
  %22 = icmp ne i64 %20, %21
  br i1 %22, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %baselen_max, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb2
  %23 = load i8** %base, align 8
  %tmp6 = bitcast [2 x i8]* %tmp to i8*
  %24 = call i8* @memcpy(i8* %23, i8* %tmp6, i64 2)
  br label %bb7

bb7:                                              ; preds = %bb5, %entry
  %25 = load i64* %baselen_max, align 8
  %26 = load i64* %baselen, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %bb8, label %return

bb8:                                              ; preds = %bb7
  %28 = load i8** %file_addr, align 8
  %29 = load i64* %filelen_addr, align 8
  %30 = getelementptr inbounds i8* %28, i64 %29
  %31 = ptrtoint i8* %30 to i64
  %32 = load i8** %base, align 8
  %33 = ptrtoint i8* %32 to i64
  %34 = sub nsw i64 %31, %33
  store i64 %34, i64* %baselen, align 8
  %35 = load i64* %baselen_max, align 8
  %36 = load i64* %baselen, align 8
  %37 = icmp ule i64 %35, %36
  br i1 %37, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %38 = load i64* %baselen_max, align 8
  %39 = sub i64 %38, 1
  store i64 %39, i64* %baselen, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %40 = load i8** %base, align 8
  %41 = load i64* %baselen, align 8
  %42 = getelementptr inbounds i8* %40, i64 %41
  %43 = load i8* %e_addr, align 1
  store i8 %43, i8* %42, align 1
  %44 = load i64* %baselen, align 8
  %45 = add i64 %44, 1
  %46 = load i8** %base, align 8
  %47 = getelementptr inbounds i8* %46, i64 %45
  store i8 0, i8* %47, align 1
  br label %return

return:                                           ; preds = %bb7, %bb10
  ret void
}

define internal i32 @numbered_backup(i8** %buffer, i64 %buffer_size, i64 %filelen) nounwind {
entry:
  %buffer_addr = alloca i8**, align 8
  %buffer_size_addr = alloca i64, align 8
  %filelen_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %result = alloca i32
  %dirp = alloca %struct.DIR*
  %dp = alloca %struct.dirent*
  %buf = alloca i8*
  %versionlenmax = alloca i64
  %base = alloca i8*
  %base_offset = alloca i64
  %baselen = alloca i64
  %tmp = alloca [2 x i8]
  %p = alloca i8*
  %q = alloca i8*
  %all_9s = alloca i8
  %versionlen = alloca i64
  %new_buflen = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8** %buffer, i8*** %buffer_addr
  store i64 %buffer_size, i64* %buffer_size_addr
  store i64 %filelen, i64* %filelen_addr
  store i32 2, i32* %result, align 4
  %1 = load i8*** %buffer_addr, align 8
  %2 = load i8** %1, align 8
  store i8* %2, i8** %buf, align 8
  store i64 1, i64* %versionlenmax, align 8
  %3 = load i8** %buf, align 8
  %4 = call i8* @last_component(i8* %3) nounwind readonly
  store i8* %4, i8** %base, align 8
  %5 = load i8** %base, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = load i8** %buf, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = sub nsw i64 %6, %8
  store i64 %9, i64* %base_offset, align 8
  %10 = load i8** %base, align 8
  %11 = call i64 @base_len(i8* %10) nounwind readonly
  store i64 %11, i64* %baselen, align 8
  %tmp1 = bitcast [2 x i8]* %tmp to i8*
  %12 = load i8** %base, align 8
  %13 = call i8* @memcpy(i8* %tmp1, i8* %12, i64 2)
  %14 = load i8** %base, align 8
  %15 = call i8* @memcpy(i8* %14, i8* getelementptr inbounds ([2 x i8]* @.str1225, i64 0, i64 0), i64 2)
  %16 = load i8** %buf, align 8
  %17 = call %struct.DIR* @opendir_safer(i8* %16) nounwind
  store %struct.DIR* %17, %struct.DIR** %dirp, align 8
  %18 = load i8** %base, align 8
  %tmp2 = bitcast [2 x i8]* %tmp to i8*
  %19 = call i8* @memcpy(i8* %18, i8* %tmp2, i64 2)
  %20 = load i8** %base, align 8
  %21 = load i64* %baselen, align 8
  %22 = getelementptr inbounds i8* %20, i64 %21
  %23 = call i8* @memcpy(i8* %22, i8* getelementptr inbounds ([5 x i8]* @.str2226, i64 0, i64 0), i64 5)
  %24 = load %struct.DIR** %dirp, align 8
  %25 = icmp eq %struct.DIR* %24, null
  br i1 %25, label %bb, label %bb23

bb:                                               ; preds = %entry
  %26 = load i32* %result, align 4
  store i32 %26, i32* %0, align 4
  br label %bb25

bb4:                                              ; preds = %bb23
  %27 = load %struct.dirent** %dp, align 8
  %28 = getelementptr inbounds %struct.dirent* %27, i32 0, i32 0
  %29 = load i64* %28, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %bb23, label %bb5

bb5:                                              ; preds = %bb4
  %31 = load %struct.dirent** %dp, align 8
  %32 = getelementptr inbounds %struct.dirent* %31, i32 0, i32 4
  %33 = getelementptr inbounds [256 x i8]* %32, i64 0, i64 0
  %34 = call i64 @strlen(i8* %33) nounwind readonly
  %35 = load i64* %baselen, align 8
  %36 = add i64 %35, 4
  %37 = icmp ult i64 %34, %36
  br i1 %37, label %bb23, label %bb6

bb6:                                              ; preds = %bb5
  %38 = load i64* %baselen, align 8
  %39 = add i64 %38, 2
  %40 = load %struct.dirent** %dp, align 8
  %41 = getelementptr inbounds %struct.dirent* %40, i32 0, i32 4
  %42 = getelementptr inbounds [256 x i8]* %41, i64 0, i64 0
  %43 = load i8** %buf, align 8
  %44 = load i64* %base_offset, align 8
  %45 = getelementptr inbounds i8* %43, i64 %44
  %46 = call i32 @memcmp(i8* %45, i8* %42, i64 %39) nounwind readonly
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %bb23, label %bb7

bb7:                                              ; preds = %bb6
  %48 = load %struct.dirent** %dp, align 8
  %49 = getelementptr inbounds %struct.dirent* %48, i32 0, i32 4
  %50 = getelementptr inbounds [256 x i8]* %49, i64 0, i64 0
  %51 = load i64* %baselen, align 8
  %52 = getelementptr inbounds i8* %50, i64 %51
  %53 = getelementptr inbounds i8* %52, i64 2
  store i8* %53, i8** %p, align 8
  %54 = load i8** %p, align 8
  %55 = load i8* %54, align 1
  %56 = icmp sle i8 %55, 48
  br i1 %56, label %bb23, label %bb8

bb8:                                              ; preds = %bb7
  %57 = load i8** %p, align 8
  %58 = load i8* %57, align 1
  %59 = icmp sgt i8 %58, 57
  br i1 %59, label %bb23, label %bb9

bb9:                                              ; preds = %bb8
  %60 = load i8** %p, align 8
  %61 = load i8* %60, align 1
  %62 = icmp eq i8 %61, 57
  %63 = zext i1 %62 to i8
  store i8 %63, i8* %all_9s, align 1
  store i64 1, i64* %versionlen, align 8
  br label %bb11

bb10:                                             ; preds = %bb11
  %64 = load i8* %all_9s, align 1
  %65 = zext i8 %64 to i32
  %66 = load i8** %p, align 8
  %67 = load i64* %versionlen, align 8
  %68 = getelementptr inbounds i8* %66, i64 %67
  %69 = load i8* %68, align 1
  %70 = icmp eq i8 %69, 57
  %71 = zext i1 %70 to i32
  %72 = and i32 %65, %71
  %73 = icmp ne i32 %72, 0
  %74 = zext i1 %73 to i8
  store i8 %74, i8* %all_9s, align 1
  %75 = load i64* %versionlen, align 8
  %76 = add i64 %75, 1
  store i64 %76, i64* %versionlen, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %77 = load i8** %p, align 8
  %78 = load i64* %versionlen, align 8
  %79 = getelementptr inbounds i8* %77, i64 %78
  %80 = load i8* %79, align 1
  %81 = sext i8 %80 to i32
  %82 = sub i32 %81, 48
  %83 = icmp ule i32 %82, 9
  br i1 %83, label %bb10, label %bb12

bb12:                                             ; preds = %bb11
  %84 = load i8** %p, align 8
  %85 = load i64* %versionlen, align 8
  %86 = getelementptr inbounds i8* %84, i64 %85
  %87 = load i8* %86, align 1
  %88 = icmp ne i8 %87, 126
  br i1 %88, label %bb23, label %bb13

bb13:                                             ; preds = %bb12
  %89 = load i64* %versionlen, align 8
  %90 = add i64 %89, 1
  %91 = load i8** %p, align 8
  %92 = getelementptr inbounds i8* %91, i64 %90
  %93 = load i8* %92, align 1
  %94 = icmp ne i8 %93, 0
  br i1 %94, label %bb23, label %bb14

bb14:                                             ; preds = %bb13
  %95 = load i64* %versionlenmax, align 8
  %96 = load i64* %versionlen, align 8
  %97 = icmp ult i64 %95, %96
  br i1 %97, label %bb17, label %bb15

bb15:                                             ; preds = %bb14
  %98 = load i64* %versionlenmax, align 8
  %99 = load i64* %versionlen, align 8
  %100 = icmp ne i64 %98, %99
  br i1 %100, label %bb23, label %bb16

bb16:                                             ; preds = %bb15
  %101 = load i8** %buf, align 8
  %102 = load i64* %filelen_addr, align 8
  %103 = getelementptr inbounds i8* %101, i64 %102
  %104 = getelementptr inbounds i8* %103, i64 2
  %105 = load i8** %p, align 8
  %106 = load i64* %versionlen, align 8
  %107 = call i32 @memcmp(i8* %104, i8* %105, i64 %106) nounwind readonly
  %108 = icmp sgt i32 %107, 0
  br i1 %108, label %bb23, label %bb17

bb17:                                             ; preds = %bb16, %bb14
  %109 = load i8* %all_9s, align 1
  %110 = zext i8 %109 to i64
  %111 = load i64* %versionlen, align 8
  %112 = add i64 %110, %111
  store i64 %112, i64* %versionlenmax, align 8
  %113 = load i8* %all_9s, align 1
  %114 = zext i8 %113 to i32
  store i32 %114, i32* %result, align 4
  %115 = load i64* %filelen_addr, align 8
  %116 = load i64* %versionlenmax, align 8
  %117 = add i64 %115, %116
  %118 = add i64 %117, 3
  store i64 %118, i64* %new_buflen, align 8
  %119 = load i64* %buffer_size_addr, align 8
  %120 = load i64* %new_buflen, align 8
  %121 = icmp ule i64 %119, %120
  br i1 %121, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %122 = load i8** %buf, align 8
  %123 = load i64* %new_buflen, align 8
  %124 = call i8* @xnrealloc(i8* %122, i64 2, i64 %123) nounwind
  store i8* %124, i8** %buf, align 8
  %125 = load i64* %new_buflen, align 8
  %126 = mul i64 %125, 2
  store i64 %126, i64* %buffer_size_addr, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17
  %127 = load i8** %buf, align 8
  %128 = load i64* %filelen_addr, align 8
  %129 = getelementptr inbounds i8* %127, i64 %128
  store i8* %129, i8** %q, align 8
  %130 = load i8** %q, align 8
  store i8 46, i8* %130, align 1
  %131 = load i8** %q, align 8
  %132 = getelementptr inbounds i8* %131, i64 1
  store i8* %132, i8** %q, align 8
  %133 = load i8** %q, align 8
  store i8 126, i8* %133, align 1
  %134 = load i8** %q, align 8
  %135 = getelementptr inbounds i8* %134, i64 1
  store i8* %135, i8** %q, align 8
  %136 = load i8** %q, align 8
  store i8 48, i8* %136, align 1
  %137 = load i8* %all_9s, align 1
  %138 = zext i8 %137 to i32
  %139 = load i8** %q, align 8
  %140 = sext i32 %138 to i64
  %141 = getelementptr inbounds i8* %139, i64 %140
  store i8* %141, i8** %q, align 8
  %142 = load i64* %versionlen, align 8
  %143 = add i64 %142, 2
  %144 = load i8** %q, align 8
  %145 = load i8** %p, align 8
  %146 = call i8* @memcpy(i8* %144, i8* %145, i64 %143)
  %147 = load i8** %q, align 8
  %148 = load i64* %versionlen, align 8
  %149 = getelementptr inbounds i8* %147, i64 %148
  store i8* %149, i8** %q, align 8
  br label %bb21

bb20:                                             ; preds = %bb21
  store i8 48, i8* %155, align 1
  br label %bb21

bb21:                                             ; preds = %bb20, %bb19
  %150 = load i8** %q, align 8
  %151 = getelementptr inbounds i8* %150, i64 -1
  store i8* %151, i8** %q, align 8
  %152 = load i8** %q, align 8
  %153 = load i8* %152, align 1
  %154 = icmp eq i8 %153, 57
  %155 = load i8** %q, align 8
  br i1 %154, label %bb20, label %bb22

bb22:                                             ; preds = %bb21
  %156 = load i8* %155, align 1
  %157 = add nsw i8 %156, 1
  %158 = load i8** %q, align 8
  store i8 %157, i8* %158, align 1
  br label %bb23

bb23:                                             ; preds = %entry, %bb22, %bb16, %bb15, %bb13, %bb12, %bb8, %bb7, %bb6, %bb5, %bb4
  %159 = load %struct.DIR** %dirp, align 8
  %160 = call %struct.dirent* @readdir(%struct.DIR* %159) nounwind
  store %struct.dirent* %160, %struct.dirent** %dp, align 8
  %161 = load %struct.dirent** %dp, align 8
  %162 = icmp ne %struct.dirent* %161, null
  br i1 %162, label %bb4, label %bb24

bb24:                                             ; preds = %bb23
  %163 = load %struct.DIR** %dirp, align 8
  %164 = call i32 @closedir(%struct.DIR* %163) nounwind
  %165 = load i8*** %buffer_addr, align 8
  %166 = load i8** %buf, align 8
  store i8* %166, i8** %165, align 8
  %167 = load i32* %result, align 4
  store i32 %167, i32* %0, align 4
  br label %bb25

bb25:                                             ; preds = %bb24, %bb
  %168 = load i32* %0, align 4
  store i32 %168, i32* %retval, align 4
  %retval26 = load i32* %retval
  ret i32 %retval26
}

define i8* @find_backup_file_name(i8* %file, i32 %backup_type) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %backup_type_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %filelen = alloca i64
  %s = alloca i8*
  %ssize = alloca i64
  %simple = alloca i8
  %simple_backup_suffix_size = alloca i64
  %backup_suffix_size_guess = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %backup_type, i32* %backup_type_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %filelen, align 8
  store i8 1, i8* %simple, align 1
  %3 = load i8** @simple_backup_suffix, align 8
  %4 = call i64 @strlen(i8* %3) nounwind readonly
  %5 = add i64 %4, 1
  store i64 %5, i64* %simple_backup_suffix_size, align 8
  %6 = load i64* %simple_backup_suffix_size, align 8
  store i64 %6, i64* %backup_suffix_size_guess, align 8
  %7 = load i64* %backup_suffix_size_guess, align 8
  %8 = icmp ule i64 %7, 8
  br i1 %8, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 9, i64* %backup_suffix_size_guess, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %9 = load i64* %filelen, align 8
  %10 = load i64* %backup_suffix_size_guess, align 8
  %11 = add i64 %9, %10
  %12 = add i64 %11, 1
  store i64 %12, i64* %ssize, align 8
  %13 = load i64* %ssize, align 8
  %14 = call noalias i8* @xmalloc(i64 %13) nounwind
  store i8* %14, i8** %s, align 8
  %15 = load i64* %filelen, align 8
  %16 = add i64 %15, 1
  %17 = load i8** %s, align 8
  %18 = load i8** %file_addr, align 8
  %19 = call i8* @memcpy(i8* %17, i8* %18, i64 %16)
  %20 = load i32* %backup_type_addr, align 4
  %21 = icmp ne i32 %20, 1
  br i1 %21, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %22 = load i64* %ssize, align 8
  %23 = load i64* %filelen, align 8
  %24 = call i32 @numbered_backup(i8** %s, i64 %22, i64 %23) nounwind
  switch i32 %24, label %bb6 [
    i32 0, label %bb3
    i32 1, label %bb4
    i32 2, label %bb5
  ]

bb3:                                              ; preds = %bb2
  %25 = load i8** %s, align 8
  store i8* %25, i8** %0, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  store i8 0, i8* %simple, align 1
  br label %bb6

bb5:                                              ; preds = %bb2
  %26 = load i32* %backup_type_addr, align 4
  %27 = icmp eq i32 %26, 2
  %28 = zext i1 %27 to i8
  store i8 %28, i8* %simple, align 1
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb2, %bb1
  %29 = load i8* %simple, align 1
  %toBool = icmp ne i8 %29, 0
  br i1 %toBool, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %30 = load i8** @simple_backup_suffix, align 8
  %31 = load i8** %s, align 8
  %32 = load i64* %filelen, align 8
  %33 = getelementptr inbounds i8* %31, i64 %32
  %34 = load i64* %simple_backup_suffix_size, align 8
  %35 = call i8* @memcpy(i8* %33, i8* %30, i64 %34)
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %36 = load i8** %s, align 8
  %37 = load i64* %filelen, align 8
  call void @check_extension(i8* %36, i64 %37, i8 signext 126) nounwind
  %38 = load i8** %s, align 8
  store i8* %38, i8** %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i32 @get_version(i8* %context, i8* %version) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %version, i8** %version_addr
  %1 = load i8** %version_addr, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %version_addr, align 8
  %4 = load i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  store i32 2, i32* %0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %6 = load void ()** @argmatch_die, align 8
  %7 = load i8** %context_addr, align 8
  %8 = load i8** %version_addr, align 8
  %9 = call i64 @__xargmatch_internal(i8* %7, i8* %8, i8** getelementptr inbounds ([9 x i8*]* @backup_args, i64 0, i64 0), i8* bitcast ([8 x i32]* @backup_types to i8*), i64 4, void ()* %6) nounwind
  %10 = getelementptr inbounds [8 x i32]* @backup_types, i64 0, i64 %9
  %11 = load i32* %10, align 4
  store i32 %11, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i32 @xget_version(i8* %context, i8* %version) nounwind {
entry:
  %context_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %context, i8** %context_addr
  store i8* %version, i8** %version_addr
  %1 = load i8** %version_addr, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb2, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %version_addr, align 8
  %4 = load i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %6 = load i8** %context_addr, align 8
  %7 = load i8** %version_addr, align 8
  %8 = call i32 @get_version(i8* %6, i8* %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  %9 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str11235, i64 0, i64 0)) nounwind
  %10 = call i32 @get_version(i8* getelementptr inbounds ([17 x i8]* @.str12236, i64 0, i64 0), i8* %9) nounwind
  store i32 %10, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i64 @buffer_lcm(i64 %a, i64 %b, i64 %lcm_max) nounwind readnone {
entry:
  %a_addr = alloca i64, align 8
  %b_addr = alloca i64, align 8
  %lcm_max_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.0 = alloca i64
  %size = alloca i64
  %lcm = alloca i64
  %m = alloca i64
  %n = alloca i64
  %q = alloca i64
  %r = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %a, i64* %a_addr
  store i64 %b, i64* %b_addr
  store i64 %lcm_max, i64* %lcm_max_addr
  %1 = load i64* %a_addr, align 8
  %2 = icmp eq i64 %1, 0
  %3 = load i64* %b_addr, align 8
  %4 = icmp ne i64 %3, 0
  br i1 %2, label %bb, label %bb4

bb:                                               ; preds = %entry
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %5 = load i64* %b_addr, align 8
  store i64 %5, i64* %iftmp.0, align 8
  br label %bb3

bb2:                                              ; preds = %bb
  store i64 8192, i64* %iftmp.0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i64* %iftmp.0, align 8
  store i64 %6, i64* %size, align 8
  br label %bb12

bb4:                                              ; preds = %entry
  br i1 %4, label %bb5, label %bb11

bb5:                                              ; preds = %bb4
  %7 = load i64* %a_addr, align 8
  store i64 %7, i64* %m, align 8
  %8 = load i64* %b_addr, align 8
  store i64 %8, i64* %n, align 8
  br label %bb7

bb6:                                              ; preds = %klee_div_zero_check.exit
  %9 = load i64* %n, align 8
  store i64 %9, i64* %m, align 8
  %10 = load i64* %r, align 8
  store i64 %10, i64* %n, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %11 = load i64* %m, align 8
  %12 = load i64* %n, align 8
  %int_cast_to_i64 = bitcast i64 %12 to i64
  %13 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %14 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %14, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb7
  call void @klee_disable_symbex() nounwind
  %15 = urem i64 %11, %12
  store i64 %15, i64* %r, align 8
  %16 = load i64* %r, align 8
  %17 = icmp ne i64 %16, 0
  br i1 %17, label %bb6, label %bb8

bb8:                                              ; preds = %klee_div_zero_check.exit
  %18 = load i64* %a_addr, align 8
  %19 = load i64* %n, align 8
  %int_cast_to_i641 = bitcast i64 %19 to i64
  %20 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %21 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %21, label %bb.i3, label %klee_div_zero_check.exit4

bb.i3:                                            ; preds = %bb8
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit4:                        ; preds = %bb8
  call void @klee_disable_symbex() nounwind
  %22 = udiv i64 %18, %19
  store i64 %22, i64* %q, align 8
  %23 = load i64* %q, align 8
  %24 = load i64* %b_addr, align 8
  %25 = mul i64 %23, %24
  store i64 %25, i64* %lcm, align 8
  %26 = load i64* %lcm, align 8
  %27 = load i64* %lcm_max_addr, align 8
  %28 = icmp ule i64 %26, %27
  br i1 %28, label %bb9, label %bb11

bb9:                                              ; preds = %klee_div_zero_check.exit4
  %29 = load i64* %lcm, align 8
  %30 = load i64* %b_addr, align 8
  %int_cast_to_i642 = bitcast i64 %30 to i64
  %31 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %32 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %32, label %bb.i5, label %klee_div_zero_check.exit6

bb.i5:                                            ; preds = %bb9
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit6:                        ; preds = %bb9
  call void @klee_disable_symbex() nounwind
  %33 = udiv i64 %29, %30
  %34 = load i64* %q, align 8
  %35 = icmp eq i64 %33, %34
  br i1 %35, label %bb10, label %bb11

bb10:                                             ; preds = %klee_div_zero_check.exit6
  %36 = load i64* %lcm, align 8
  store i64 %36, i64* %0, align 8
  br label %bb13

bb11:                                             ; preds = %klee_div_zero_check.exit6, %klee_div_zero_check.exit4, %bb4
  %37 = load i64* %a_addr, align 8
  store i64 %37, i64* %size, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb3
  %38 = load i64* %size, align 8
  %39 = load i64* %lcm_max_addr, align 8
  %40 = icmp ule i64 %38, %39
  %min = select i1 %40, i64 %38, i64 %39
  store i64 %min, i64* %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10
  %41 = load i64* %0, align 8
  store i64 %41, i64* %retval, align 8
  %retval14 = load i64* %retval
  ret i64 %retval14
}

define void @close_stdin_set_file_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %0 = load i8** %file_addr, align 8
  store i8* %0, i8** @file_name, align 8
  ret void
}

define void @close_stdin() nounwind {
entry:
  %fail = alloca i8
  %close_error = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8 0, i8* %fail, align 1
  %0 = load %struct.FILE** bitcast (%4** @stdin to %struct.FILE**), align 8
  %1 = call i64 @freadahead(%struct.FILE* %0) nounwind readonly
  %2 = icmp ne i64 %1, 0
  br i1 %2, label %bb, label %bb3

bb:                                               ; preds = %entry
  %3 = load %struct.FILE** bitcast (%4** @stdin to %struct.FILE**), align 8
  %4 = call i32 @rpl_fseeko(%struct.FILE* %3, i64 0, i32 1) nounwind
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb3

bb1:                                              ; preds = %bb
  %6 = load %struct.FILE** bitcast (%4** @stdin to %struct.FILE**), align 8
  %7 = call i32 @rpl_fflush(%struct.FILE* %6) nounwind
  %8 = icmp ne i32 %7, 0
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 1, i8* %fail, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1, %bb, %entry
  %9 = load %struct.FILE** bitcast (%4** @stdin to %struct.FILE**), align 8
  %10 = call i32 @close_stream(%struct.FILE* %9) nounwind
  %11 = icmp ne i32 %10, 0
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %fail, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %12 = load i8* %fail, align 1
  %toBool = icmp ne i8 %12, 0
  br i1 %toBool, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %13 = call i8* @gettext(i8* getelementptr inbounds ([19 x i8]* @.str241, i64 0, i64 0)) nounwind
  store i8* %13, i8** %close_error, align 8
  %14 = load i8** @file_name, align 8
  %15 = icmp ne i8* %14, null
  br i1 %15, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %16 = load i8** @file_name, align 8
  %17 = call i8* @quotearg_colon(i8* %16) nounwind
  %18 = call i32* @__errno_location() nounwind readnone
  %19 = load i32* %18, align 4
  %20 = load i8** %close_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %19, i8* getelementptr inbounds ([7 x i8]* @.str1242, i64 0, i64 0), i8* %17, i8* %20) nounwind
  br label %bb9

bb8:                                              ; preds = %bb6
  %21 = call i32* @__errno_location() nounwind readnone
  %22 = load i32* %21, align 4
  %23 = load i8** %close_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %22, i8* getelementptr inbounds ([3 x i8]* @.str2243, i64 0, i64 0), i8* %23) nounwind
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb5
  call void @close_stdout() nounwind
  %24 = load i8* %fail, align 1
  %toBool10 = icmp ne i8 %24, 0
  br i1 %toBool10, label %bb11, label %return

bb11:                                             ; preds = %bb9
  %25 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %25) noreturn nounwind
  unreachable

return:                                           ; preds = %bb9
  ret void
}

declare void @_exit(i32) noreturn nounwind

define void @close_stdout_set_file_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %0 = load i8** %file_addr, align 8
  store i8* %0, i8** @file_name245, align 8
  ret void
}

define void @close_stdout_set_ignore_EPIPE(i8 zeroext %ignore) nounwind {
entry:
  %ignore_addr = alloca i8, align 1
  %"alloca point" = bitcast i32 0 to i32
  store i8 %ignore, i8* %ignore_addr
  %0 = load i8* %ignore_addr, align 1
  store i8 %0, i8* @ignore_EPIPE, align 1
  ret void
}

define void @close_stdout() nounwind {
entry:
  %write_error = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %1 = call i32 @close_stream(%struct.FILE* %0) nounwind
  %2 = icmp ne i32 %1, 0
  br i1 %2, label %bb, label %bb9

bb:                                               ; preds = %entry
  %3 = load i8* @ignore_EPIPE, align 1
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb4

bb4:                                              ; preds = %bb
  %4 = call i32* @__errno_location() nounwind readnone
  %5 = load i32* %4, align 4
  %6 = icmp ne i32 %5, 32
  br i1 %6, label %bb5, label %bb9

bb5:                                              ; preds = %bb4, %bb
  %7 = call i8* @gettext(i8* getelementptr inbounds ([12 x i8]* @.str246, i64 0, i64 0)) nounwind
  store i8* %7, i8** %write_error, align 8
  %8 = load i8** @file_name245, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %10 = load i8** @file_name245, align 8
  %11 = call i8* @quotearg_colon(i8* %10) nounwind
  %12 = call i32* @__errno_location() nounwind readnone
  %13 = load i32* %12, align 4
  %14 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %13, i8* getelementptr inbounds ([7 x i8]* @.str1247, i64 0, i64 0), i8* %11, i8* %14) nounwind
  br label %bb8

bb7:                                              ; preds = %bb5
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = load i8** %write_error, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %16, i8* getelementptr inbounds ([3 x i8]* @.str2248, i64 0, i64 0), i8* %17) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %18 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %18) noreturn nounwind
  unreachable

bb9:                                              ; preds = %bb4, %entry
  %19 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %20 = call i32 @close_stream(%struct.FILE* %19) nounwind
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb10, label %return

bb10:                                             ; preds = %bb9
  %22 = volatile load i32* @exit_failure, align 4
  call void @_exit(i32 %22) noreturn nounwind
  unreachable

return:                                           ; preds = %bb9
  ret void
}

define %struct.DIR* @opendir_safer(i8* %name) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca %struct.DIR*
  %0 = alloca %struct.DIR*
  %dp = alloca %struct.DIR*
  %fd = alloca i32
  %newdp = alloca %struct.DIR*
  %e = alloca i32
  %f = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = call %struct.DIR* @opendir(i8* %1) nounwind
  store %struct.DIR* %2, %struct.DIR** %dp, align 8
  %3 = load %struct.DIR** %dp, align 8
  %4 = icmp ne %struct.DIR* %3, null
  br i1 %4, label %bb, label %bb7

bb:                                               ; preds = %entry
  %5 = load %struct.DIR** %dp, align 8
  %6 = call i32 @dirfd(%struct.DIR* %5) nounwind
  store i32 %6, i32* %fd, align 4
  %7 = load i32* %fd, align 4
  %8 = icmp sge i32 %7, 0
  %9 = load i32* %fd, align 4
  %10 = icmp sle i32 %9, 2
  %or.cond = and i1 %8, %10
  br i1 %or.cond, label %bb2, label %bb7

bb2:                                              ; preds = %bb
  %11 = load i32* %fd, align 4
  %12 = call i32 @dup_safer(i32 %11) nounwind
  store i32 %12, i32* %f, align 4
  %13 = load i32* %f, align 4
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  store i32 %16, i32* %e, align 4
  store %struct.DIR* null, %struct.DIR** %newdp, align 8
  br label %bb6

bb4:                                              ; preds = %bb2
  %17 = load i32* %f, align 4
  %18 = call %struct.DIR* @fdopendir(i32 %17) nounwind
  store %struct.DIR* %18, %struct.DIR** %newdp, align 8
  %19 = call i32* @__errno_location() nounwind readnone
  %20 = load i32* %19, align 4
  store i32 %20, i32* %e, align 4
  %21 = load %struct.DIR** %newdp, align 8
  %22 = icmp eq %struct.DIR* %21, null
  br i1 %22, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %23 = load i32* %f, align 4
  %24 = call i32 @close(i32 %23) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %25 = load %struct.DIR** %dp, align 8
  %26 = call i32 @closedir(%struct.DIR* %25) nounwind
  %27 = call i32* @__errno_location() nounwind readnone
  %28 = load i32* %e, align 4
  store i32 %28, i32* %27, align 4
  %29 = load %struct.DIR** %newdp, align 8
  store %struct.DIR* %29, %struct.DIR** %dp, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb, %entry
  %30 = load %struct.DIR** %dp, align 8
  store %struct.DIR* %30, %struct.DIR** %0, align 8
  %31 = load %struct.DIR** %0, align 8
  store %struct.DIR* %31, %struct.DIR** %retval, align 8
  %retval8 = load %struct.DIR** %retval
  ret %struct.DIR* %retval8
}

declare %struct.DIR* @fdopendir(i32)

define i8* @dir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i8* @mdir_name(i8* %1) nounwind
  store i8* %2, i8** %result, align 8
  %3 = load i8** %result, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %result, align 8
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i64 @dir_len(i8* %file) nounwind readonly {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.0 = alloca i32
  %prefix_length = alloca i64
  %length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i64 0, i64* %prefix_length, align 8
  %1 = load i64* %prefix_length, align 8
  %2 = icmp ne i64 %1, 0
  br i1 %2, label %bb2, label %bb

bb:                                               ; preds = %entry
  %3 = load i8** %file_addr, align 8
  %4 = getelementptr inbounds i8* %3, i64 0
  %5 = load i8* %4, align 1
  %6 = icmp ne i8 %5, 47
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4
  %8 = sext i32 %7 to i64
  %9 = load i64* %prefix_length, align 8
  %10 = add i64 %8, %9
  store i64 %10, i64* %prefix_length, align 8
  %11 = load i8** %file_addr, align 8
  %12 = call i8* @last_component(i8* %11) nounwind readonly
  %13 = ptrtoint i8* %12 to i64
  %14 = load i8** %file_addr, align 8
  %15 = ptrtoint i8* %14 to i64
  %16 = sub nsw i64 %13, %15
  store i64 %16, i64* %length, align 8
  br label %bb6

bb4:                                              ; preds = %bb6
  %17 = load i64* %length, align 8
  %18 = sub i64 %17, 1
  %19 = load i8** %file_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = icmp ne i8 %21, 47
  br i1 %22, label %bb7, label %bb5

bb5:                                              ; preds = %bb4
  %23 = load i64* %length, align 8
  %24 = sub i64 %23, 1
  store i64 %24, i64* %length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb3
  %25 = load i64* %prefix_length, align 8
  %26 = load i64* %length, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %bb4, label %bb7

bb7:                                              ; preds = %bb6, %bb4
  %28 = load i64* %length, align 8
  store i64 %28, i64* %0, align 8
  %29 = load i64* %0, align 8
  store i64 %29, i64* %retval, align 8
  %retval8 = load i64* %retval
  ret i64 %retval8
}

define i8* @mdir_name(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %length = alloca i64
  %append_dot = alloca i8
  %dir = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i64 @dir_len(i8* %1) nounwind readonly
  store i64 %2, i64* %length, align 8
  %3 = load i64* %length, align 8
  %4 = icmp eq i64 %3, 0
  %5 = zext i1 %4 to i8
  store i8 %5, i8* %append_dot, align 1
  %6 = load i8* %append_dot, align 1
  %7 = zext i8 %6 to i64
  %8 = load i64* %length, align 8
  %9 = add i64 %7, %8
  %10 = add i64 %9, 1
  %11 = call noalias i8* @malloc(i64 %10) nounwind
  store i8* %11, i8** %dir, align 8
  %12 = load i8** %dir, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb4

bb1:                                              ; preds = %entry
  %14 = load i8** %dir, align 8
  %15 = load i8** %file_addr, align 8
  %16 = load i64* %length, align 8
  %17 = call i8* @memcpy(i8* %14, i8* %15, i64 %16)
  %18 = load i8* %append_dot, align 1
  %toBool = icmp ne i8 %18, 0
  br i1 %toBool, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %19 = load i8** %dir, align 8
  %20 = load i64* %length, align 8
  %21 = getelementptr inbounds i8* %19, i64 %20
  store i8 46, i8* %21, align 1
  %22 = load i64* %length, align 8
  %23 = add i64 %22, 1
  store i64 %23, i64* %length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %24 = load i8** %dir, align 8
  %25 = load i64* %length, align 8
  %26 = getelementptr inbounds i8* %24, i64 %25
  store i8 0, i8* %26, align 1
  %27 = load i8** %dir, align 8
  store i8* %27, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %28 = load i8** %0, align 8
  store i8* %28, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define i8* @last_component(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %base = alloca i8*
  %p = alloca i8*
  %saw_slash = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 0
  store i8* %2, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb1

bb:                                               ; preds = %bb1
  %3 = getelementptr inbounds i8* %7, i64 1
  store i8* %3, i8** %base, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i8** %base, align 8
  %5 = load i8* %4, align 1
  %6 = icmp eq i8 %5, 47
  %7 = load i8** %base, align 8
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i8* %7, i8** %p, align 8
  br label %bb8

bb3:                                              ; preds = %bb8
  %8 = load i8** %p, align 8
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i8 1, i8* %saw_slash, align 1
  br label %bb7

bb5:                                              ; preds = %bb3
  %11 = load i8* %saw_slash, align 1
  %toBool = icmp ne i8 %11, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %12 = load i8** %p, align 8
  store i8* %12, i8** %base, align 8
  store i8 0, i8* %saw_slash, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5, %bb4
  %13 = load i8** %p, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  store i8* %14, i8** %p, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb2
  %15 = load i8** %p, align 8
  %16 = load i8* %15, align 1
  %17 = icmp ne i8 %16, 0
  br i1 %17, label %bb3, label %bb9

bb9:                                              ; preds = %bb8
  %18 = load i8** %base, align 8
  store i8* %18, i8** %0, align 8
  %19 = load i8** %0, align 8
  store i8* %19, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i64 @base_len(i8* %name) nounwind readonly {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %len = alloca i64
  %prefix_len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i64 0, i64* %prefix_len, align 8
  %1 = load i8** %name_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  store i64 %2, i64* %len, align 8
  br label %bb1

bb:                                               ; preds = %bb2
  %3 = load i64* %len, align 8
  %4 = sub i64 %3, 1
  store i64 %4, i64* %len, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %5 = load i64* %len, align 8
  %6 = icmp ule i64 %5, 1
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load i64* %len, align 8
  %8 = sub i64 %7, 1
  %9 = load i8** %name_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 %8
  %11 = load i8* %10, align 1
  %12 = icmp eq i8 %11, 47
  br i1 %12, label %bb, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i64* %len, align 8
  store i64 %13, i64* %0, align 8
  %14 = load i64* %0, align 8
  store i64 %14, i64* %retval, align 8
  %retval4 = load i64* %retval
  ret i64 %retval4
}

define zeroext i8 @strip_trailing_slashes(i8* %file) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %base = alloca i8*
  %base_lim = alloca i8*
  %had_slash = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  %1 = load i8** %file_addr, align 8
  %2 = call i8* @last_component(i8* %1) nounwind readonly
  store i8* %2, i8** %base, align 8
  %3 = load i8** %base, align 8
  %4 = load i8* %3, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %file_addr, align 8
  store i8* %6, i8** %base, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %7 = load i8** %base, align 8
  %8 = call i64 @base_len(i8* %7) nounwind readonly
  %9 = load i8** %base, align 8
  %10 = getelementptr inbounds i8* %9, i64 %8
  store i8* %10, i8** %base_lim, align 8
  %11 = load i8** %base_lim, align 8
  %12 = load i8* %11, align 1
  %13 = icmp ne i8 %12, 0
  %14 = zext i1 %13 to i8
  store i8 %14, i8* %had_slash, align 1
  %15 = load i8** %base_lim, align 8
  store i8 0, i8* %15, align 1
  %16 = load i8* %had_slash, align 1
  %17 = zext i8 %16 to i32
  store i32 %17, i32* %0, align 4
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval2 = load i32* %retval
  %retval23 = trunc i32 %retval2 to i8
  ret i8 %retval23
}

define void @fdadvise(i32 %fd, i64 %offset, i64 %len, i32 %advice) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %offset_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %advice_addr = alloca i32, align 4
  %__x = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i64 %offset, i64* %offset_addr
  store i64 %len, i64* %len_addr
  store i32 %advice, i32* %advice_addr
  %0 = load i32* %advice_addr, align 4
  %1 = load i32* %fd_addr, align 4
  %2 = load i64* %offset_addr, align 8
  %3 = load i64* %len_addr, align 8
  %4 = call i32 @posix_fadvise(i32 %1, i64 %2, i64 %3, i32 %0) nounwind
  store i32 %4, i32* %__x, align 4
  ret void
}

declare i32 @posix_fadvise(i32, i64, i64, i32) nounwind

define void @fadvise(%struct.FILE* %fp, i32 %advice) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %advice_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i32 %advice, i32* %advice_addr
  %0 = load %struct.FILE** %fp_addr, align 8
  %1 = icmp ne %struct.FILE* %0, null
  br i1 %1, label %bb, label %return

bb:                                               ; preds = %entry
  %2 = load %struct.FILE** %fp_addr, align 8
  %3 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %2) nounwind
  %4 = load i32* %advice_addr, align 4
  call void @fdadvise(i32 %3, i64 0, i64 0, i32 %4) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define i32 @open_safer(i8* %file, i32 %flags, ...) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %flags_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.0 = alloca i8*
  %mode = alloca i32
  %ap = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %flags, i32* %flags_addr
  store i32 0, i32* %mode, align 4
  %1 = load i32* %flags_addr, align 4
  %2 = and i32 %1, 64
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %ap1 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap12 = bitcast %struct.__va_list_tag* %ap1 to i8*
  call void @llvm.va_start(i8* %ap12)
  %4 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %5 = getelementptr inbounds %struct.__va_list_tag* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = icmp uge i32 %6, 48
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  br i1 %7, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 3
  %10 = load i8** %9, align 8
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %12 = getelementptr inbounds %struct.__va_list_tag* %11, i32 0, i32 0
  %13 = load i32* %12, align 8
  %14 = inttoptr i32 %13 to i8*
  %15 = ptrtoint i8* %10 to i64
  %16 = ptrtoint i8* %14 to i64
  %17 = add i64 %15, %16
  %18 = inttoptr i64 %17 to i8*
  store i8* %18, i8** %addr.0, align 8
  %19 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %20 = getelementptr inbounds %struct.__va_list_tag* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = add i32 %21, 8
  %23 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %24 = getelementptr inbounds %struct.__va_list_tag* %23, i32 0, i32 0
  store i32 %22, i32* %24, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %25 = getelementptr inbounds %struct.__va_list_tag* %8, i32 0, i32 2
  %26 = load i8** %25, align 8
  store i8* %26, i8** %addr.0, align 8
  %27 = getelementptr inbounds i8* %26, i64 8
  %28 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %29 = getelementptr inbounds %struct.__va_list_tag* %28, i32 0, i32 2
  store i8* %27, i8** %29, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %30 = load i8** %addr.0, align 8
  %31 = bitcast i8* %30 to i32*
  %32 = load i32* %31, align 4
  store i32 %32, i32* %mode, align 4
  %ap6 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap67 = bitcast %struct.__va_list_tag* %ap6 to i8*
  call void @llvm.va_end(i8* %ap67)
  br label %bb8

bb8:                                              ; preds = %bb5, %entry
  %33 = load i8** %file_addr, align 8
  %34 = load i32* %flags_addr, align 4
  %35 = load i32* %mode, align 4
  %36 = call i32 (i8*, i32, ...)* @open(i8* %33, i32 %34, i32 %35) nounwind
  %37 = call i32 @fd_safer(i32 %36) nounwind
  store i32 %37, i32* %0, align 4
  %38 = load i32* %0, align 4
  store i32 %38, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define void @record_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %ent = alloca %struct.F_triple*
  %ent_from_table = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %0 = load %struct.Hash_table** %ht_addr, align 8
  %1 = icmp eq %struct.Hash_table* %0, null
  br i1 %1, label %return, label %bb

bb:                                               ; preds = %entry
  %2 = call noalias i8* @xmalloc(i64 24) nounwind
  %3 = bitcast i8* %2 to %struct.F_triple*
  store %struct.F_triple* %3, %struct.F_triple** %ent, align 8
  %4 = load i8** %file_addr, align 8
  %5 = call noalias i8* @xstrdup(i8* %4) nounwind
  %6 = load %struct.F_triple** %ent, align 8
  %7 = getelementptr inbounds %struct.F_triple* %6, i32 0, i32 0
  store i8* %5, i8** %7, align 8
  %8 = load %struct.stat** %stats_addr, align 8
  %9 = getelementptr inbounds %struct.stat* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load %struct.F_triple** %ent, align 8
  %12 = getelementptr inbounds %struct.F_triple* %11, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  %13 = load %struct.stat** %stats_addr, align 8
  %14 = getelementptr inbounds %struct.stat* %13, i32 0, i32 0
  %15 = load i64* %14, align 8
  %16 = load %struct.F_triple** %ent, align 8
  %17 = getelementptr inbounds %struct.F_triple* %16, i32 0, i32 2
  store i64 %15, i64* %17, align 8
  %18 = load %struct.Hash_table** %ht_addr, align 8
  %19 = load %struct.F_triple** %ent, align 8
  %20 = bitcast %struct.F_triple* %19 to i8*
  %21 = call i8* @hash_insert(%struct.Hash_table* %18, i8* %20) nounwind
  %22 = bitcast i8* %21 to %struct.F_triple*
  store %struct.F_triple* %22, %struct.F_triple** %ent_from_table, align 8
  %23 = load %struct.F_triple** %ent_from_table, align 8
  %24 = icmp eq %struct.F_triple* %23, null
  br i1 %24, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb
  %25 = load %struct.F_triple** %ent_from_table, align 8
  %26 = load %struct.F_triple** %ent, align 8
  %27 = icmp ne %struct.F_triple* %25, %26
  br i1 %27, label %bb3, label %return

bb3:                                              ; preds = %bb2
  %28 = load %struct.F_triple** %ent, align 8
  %29 = bitcast %struct.F_triple* %28 to i8*
  call void @triple_free(i8* %29) nounwind
  br label %return

return:                                           ; preds = %entry, %bb2, %bb3
  ret void
}

define zeroext i8 @seen_file(%struct.Hash_table* %ht, i8* %file, %struct.stat* %stats) nounwind {
entry:
  %ht_addr = alloca %struct.Hash_table*, align 8
  %file_addr = alloca i8*, align 8
  %stats_addr = alloca %struct.stat*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_ent = alloca %struct.F_triple
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %ht, %struct.Hash_table** %ht_addr
  store i8* %file, i8** %file_addr
  store %struct.stat* %stats, %struct.stat** %stats_addr
  %1 = load %struct.Hash_table** %ht_addr, align 8
  %2 = bitcast %struct.Hash_table* %1 to i8*
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb3

bb1:                                              ; preds = %entry
  %4 = load i8** %file_addr, align 8
  %5 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 0
  store i8* %4, i8** %5, align 8
  %6 = load %struct.stat** %stats_addr, align 8
  %7 = getelementptr inbounds %struct.stat* %6, i32 0, i32 1
  %8 = load i64* %7, align 8
  %9 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 1
  store i64 %8, i64* %9, align 8
  %10 = load %struct.stat** %stats_addr, align 8
  %11 = getelementptr inbounds %struct.stat* %10, i32 0, i32 0
  %12 = load i64* %11, align 8
  %13 = getelementptr inbounds %struct.F_triple* %new_ent, i32 0, i32 2
  store i64 %12, i64* %13, align 8
  %14 = load %struct.Hash_table** %ht_addr, align 8
  %new_ent2 = bitcast %struct.F_triple* %new_ent to i8*
  %15 = call i8* @hash_lookup(%struct.Hash_table* %14, i8* %new_ent2) nounwind
  %16 = icmp ne i8* %15, null
  %17 = zext i1 %16 to i32
  store i32 %17, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb1, %bb
  %18 = load i32* %0, align 4
  store i32 %18, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal signext i8 @ftypelet(i32 %bits) nounwind {
entry:
  %bits_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %bits, i32* %bits_addr
  %1 = load i32* %bits_addr, align 4
  %2 = and i32 %1, 61440
  %3 = icmp eq i32 %2, 32768
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 45, i32* %0, align 4
  br label %bb14

bb1:                                              ; preds = %entry
  %4 = load i32* %bits_addr, align 4
  %5 = and i32 %4, 61440
  %6 = icmp eq i32 %5, 16384
  br i1 %6, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 100, i32* %0, align 4
  br label %bb14

bb3:                                              ; preds = %bb1
  %7 = load i32* %bits_addr, align 4
  %8 = and i32 %7, 61440
  %9 = icmp eq i32 %8, 24576
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 98, i32* %0, align 4
  br label %bb14

bb5:                                              ; preds = %bb3
  %10 = load i32* %bits_addr, align 4
  %11 = and i32 %10, 61440
  %12 = icmp eq i32 %11, 8192
  br i1 %12, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 99, i32* %0, align 4
  br label %bb14

bb7:                                              ; preds = %bb5
  %13 = load i32* %bits_addr, align 4
  %14 = and i32 %13, 61440
  %15 = icmp eq i32 %14, 40960
  br i1 %15, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 108, i32* %0, align 4
  br label %bb14

bb9:                                              ; preds = %bb7
  %16 = load i32* %bits_addr, align 4
  %17 = and i32 %16, 61440
  %18 = icmp eq i32 %17, 4096
  br i1 %18, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store i32 112, i32* %0, align 4
  br label %bb14

bb11:                                             ; preds = %bb9
  %19 = load i32* %bits_addr, align 4
  %20 = and i32 %19, 61440
  %21 = icmp eq i32 %20, 49152
  br i1 %21, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i32 115, i32* %0, align 4
  br label %bb14

bb13:                                             ; preds = %bb11
  store i32 63, i32* %0, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12, %bb10, %bb8, %bb6, %bb4, %bb2, %bb
  %22 = load i32* %0, align 4
  store i32 %22, i32* %retval, align 4
  %retval15 = load i32* %retval
  %retval1516 = trunc i32 %retval15 to i8
  ret i8 %retval1516
}

define void @strmode(i32 %mode, i8* %str) nounwind {
entry:
  %mode_addr = alloca i32, align 4
  %str_addr = alloca i8*, align 8
  %iftmp.15 = alloca i8
  %iftmp.13 = alloca i8
  %iftmp.12 = alloca i8
  %iftmp.11 = alloca i8
  %iftmp.10 = alloca i8
  %iftmp.9 = alloca i8
  %iftmp.8 = alloca i8
  %iftmp.7 = alloca i8
  %iftmp.6 = alloca i8
  %iftmp.5 = alloca i8
  %iftmp.4 = alloca i8
  %iftmp.3 = alloca i8
  %iftmp.2 = alloca i8
  %iftmp.1 = alloca i8
  %iftmp.0 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %mode, i32* %mode_addr
  store i8* %str, i8** %str_addr
  %0 = load i32* %mode_addr, align 4
  %1 = call signext i8 @ftypelet(i32 %0) nounwind
  %2 = load i8** %str_addr, align 8
  %3 = getelementptr inbounds i8* %2, i64 0
  store i8 %1, i8* %3, align 1
  %4 = load i32* %mode_addr, align 4
  %5 = and i32 %4, 256
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8 114, i8* %iftmp.0, align 1
  br label %bb2

bb1:                                              ; preds = %entry
  store i8 45, i8* %iftmp.0, align 1
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %7 = load i8** %str_addr, align 8
  %8 = getelementptr inbounds i8* %7, i64 1
  %9 = load i8* %iftmp.0, align 1
  store i8 %9, i8* %8, align 1
  %10 = load i32* %mode_addr, align 4
  %11 = and i32 %10, 128
  %12 = icmp ne i32 %11, 0
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8 119, i8* %iftmp.1, align 1
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8 45, i8* %iftmp.1, align 1
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %13 = load i8** %str_addr, align 8
  %14 = getelementptr inbounds i8* %13, i64 2
  %15 = load i8* %iftmp.1, align 1
  store i8 %15, i8* %14, align 1
  %16 = load i32* %mode_addr, align 4
  %17 = and i32 %16, 2048
  %18 = icmp ne i32 %17, 0
  %19 = load i32* %mode_addr, align 4
  %20 = and i32 %19, 64
  %21 = icmp ne i32 %20, 0
  br i1 %18, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
  br i1 %21, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i8 115, i8* %iftmp.3, align 1
  br label %bb9

bb8:                                              ; preds = %bb6
  store i8 83, i8* %iftmp.3, align 1
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i8* %iftmp.3, align 1
  store i8 %22, i8* %iftmp.2, align 1
  br label %bb14

bb10:                                             ; preds = %bb5
  br i1 %21, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i8 120, i8* %iftmp.4, align 1
  br label %bb13

bb12:                                             ; preds = %bb10
  store i8 45, i8* %iftmp.4, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %23 = load i8* %iftmp.4, align 1
  store i8 %23, i8* %iftmp.2, align 1
  br label %bb14

bb14:                                             ; preds = %bb13, %bb9
  %24 = load i8** %str_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 3
  %26 = load i8* %iftmp.2, align 1
  store i8 %26, i8* %25, align 1
  %27 = load i32* %mode_addr, align 4
  %28 = and i32 %27, 32
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  store i8 114, i8* %iftmp.5, align 1
  br label %bb17

bb16:                                             ; preds = %bb14
  store i8 45, i8* %iftmp.5, align 1
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %30 = load i8** %str_addr, align 8
  %31 = getelementptr inbounds i8* %30, i64 4
  %32 = load i8* %iftmp.5, align 1
  store i8 %32, i8* %31, align 1
  %33 = load i32* %mode_addr, align 4
  %34 = and i32 %33, 16
  %35 = icmp ne i32 %34, 0
  br i1 %35, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  store i8 119, i8* %iftmp.6, align 1
  br label %bb20

bb19:                                             ; preds = %bb17
  store i8 45, i8* %iftmp.6, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %36 = load i8** %str_addr, align 8
  %37 = getelementptr inbounds i8* %36, i64 5
  %38 = load i8* %iftmp.6, align 1
  store i8 %38, i8* %37, align 1
  %39 = load i32* %mode_addr, align 4
  %40 = and i32 %39, 1024
  %41 = icmp ne i32 %40, 0
  %42 = load i32* %mode_addr, align 4
  %43 = and i32 %42, 8
  %44 = icmp ne i32 %43, 0
  br i1 %41, label %bb21, label %bb25

bb21:                                             ; preds = %bb20
  br i1 %44, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  store i8 115, i8* %iftmp.8, align 1
  br label %bb24

bb23:                                             ; preds = %bb21
  store i8 83, i8* %iftmp.8, align 1
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %45 = load i8* %iftmp.8, align 1
  store i8 %45, i8* %iftmp.7, align 1
  br label %bb29

bb25:                                             ; preds = %bb20
  br i1 %44, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  store i8 120, i8* %iftmp.9, align 1
  br label %bb28

bb27:                                             ; preds = %bb25
  store i8 45, i8* %iftmp.9, align 1
  br label %bb28

bb28:                                             ; preds = %bb27, %bb26
  %46 = load i8* %iftmp.9, align 1
  store i8 %46, i8* %iftmp.7, align 1
  br label %bb29

bb29:                                             ; preds = %bb28, %bb24
  %47 = load i8** %str_addr, align 8
  %48 = getelementptr inbounds i8* %47, i64 6
  %49 = load i8* %iftmp.7, align 1
  store i8 %49, i8* %48, align 1
  %50 = load i32* %mode_addr, align 4
  %51 = and i32 %50, 4
  %52 = icmp ne i32 %51, 0
  br i1 %52, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  store i8 114, i8* %iftmp.10, align 1
  br label %bb32

bb31:                                             ; preds = %bb29
  store i8 45, i8* %iftmp.10, align 1
  br label %bb32

bb32:                                             ; preds = %bb31, %bb30
  %53 = load i8** %str_addr, align 8
  %54 = getelementptr inbounds i8* %53, i64 7
  %55 = load i8* %iftmp.10, align 1
  store i8 %55, i8* %54, align 1
  %56 = load i32* %mode_addr, align 4
  %57 = and i32 %56, 2
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
  store i8 119, i8* %iftmp.11, align 1
  br label %bb35

bb34:                                             ; preds = %bb32
  store i8 45, i8* %iftmp.11, align 1
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %59 = load i8** %str_addr, align 8
  %60 = getelementptr inbounds i8* %59, i64 8
  %61 = load i8* %iftmp.11, align 1
  store i8 %61, i8* %60, align 1
  %62 = load i32* %mode_addr, align 4
  %63 = and i32 %62, 512
  %64 = icmp ne i32 %63, 0
  %65 = load i32* %mode_addr, align 4
  %66 = and i32 %65, 1
  %67 = trunc i32 %66 to i8
  %toBool = icmp ne i8 %67, 0
  br i1 %64, label %bb36, label %bb40

bb36:                                             ; preds = %bb35
  br i1 %toBool, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  store i8 116, i8* %iftmp.13, align 1
  br label %bb39

bb38:                                             ; preds = %bb36
  store i8 84, i8* %iftmp.13, align 1
  br label %bb39

bb39:                                             ; preds = %bb38, %bb37
  %68 = load i8* %iftmp.13, align 1
  store i8 %68, i8* %iftmp.12, align 1
  br label %bb45

bb40:                                             ; preds = %bb35
  br i1 %toBool, label %bb42, label %bb43

bb42:                                             ; preds = %bb40
  store i8 120, i8* %iftmp.15, align 1
  br label %bb44

bb43:                                             ; preds = %bb40
  store i8 45, i8* %iftmp.15, align 1
  br label %bb44

bb44:                                             ; preds = %bb43, %bb42
  %69 = load i8* %iftmp.15, align 1
  store i8 %69, i8* %iftmp.12, align 1
  br label %bb45

bb45:                                             ; preds = %bb44, %bb39
  %70 = load i8** %str_addr, align 8
  %71 = getelementptr inbounds i8* %70, i64 9
  %72 = load i8* %iftmp.12, align 1
  store i8 %72, i8* %71, align 1
  %73 = load i8** %str_addr, align 8
  %74 = getelementptr inbounds i8* %73, i64 10
  store i8 32, i8* %74, align 1
  %75 = load i8** %str_addr, align 8
  %76 = getelementptr inbounds i8* %75, i64 11
  store i8 0, i8* %76, align 1
  ret void
}

define void @filemodestring(%struct.stat* %statp, i8* %str) nounwind {
entry:
  %statp_addr = alloca %struct.stat*, align 8
  %str_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %statp, %struct.stat** %statp_addr
  store i8* %str, i8** %str_addr
  %0 = load %struct.stat** %statp_addr, align 8
  %1 = getelementptr inbounds %struct.stat* %0, i32 0, i32 3
  %2 = load i32* %1, align 8
  %3 = load i8** %str_addr, align 8
  call void @strmode(i32 %2, i8* %3) nounwind
  ret void
}

define i8* @file_name_concat(i8* %dir, i8* %abase, i8** %base_in_result) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %abase_addr = alloca i8*, align 8
  %base_in_result_addr = alloca i8**, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  store i8* %abase, i8** %abase_addr
  store i8** %base_in_result, i8*** %base_in_result_addr
  %1 = load i8** %dir_addr, align 8
  %2 = load i8** %abase_addr, align 8
  %3 = load i8*** %base_in_result_addr, align 8
  %4 = call i8* @mfile_name_concat(i8* %1, i8* %2, i8** %3) nounwind
  store i8* %4, i8** %p, align 8
  %5 = load i8** %p, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %7 = load i8** %p, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define internal i8* @longest_relative_suffix(i8* %f) nounwind readonly {
entry:
  %f_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %f, i8** %f_addr
  %1 = load i8** %f_addr, align 8
  %2 = getelementptr inbounds i8* %1, i64 0
  store i8* %2, i8** %f_addr, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %3 = getelementptr inbounds i8* %7, i64 1
  store i8* %3, i8** %f_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = load i8** %f_addr, align 8
  %5 = load i8* %4, align 1
  %6 = icmp eq i8 %5, 47
  %7 = load i8** %f_addr, align 8
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @mfile_name_concat(i8* %dir, i8* %abase, i8** %base_in_result) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %abase_addr = alloca i8*, align 8
  %base_in_result_addr = alloca i8**, align 8
  %retval = alloca i8*
  %iftmp.3 = alloca i64
  %0 = alloca i8*
  %iftmp.2 = alloca i32
  %dirbase = alloca i8*
  %dirbaselen = alloca i64
  %dirlen = alloca i64
  %needs_separator = alloca i64
  %base = alloca i8*
  %baselen = alloca i64
  %p_concat = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  store i8* %abase, i8** %abase_addr
  store i8** %base_in_result, i8*** %base_in_result_addr
  %1 = load i8** %dir_addr, align 8
  %2 = call i8* @last_component(i8* %1) nounwind readonly
  store i8* %2, i8** %dirbase, align 8
  %3 = load i8** %dirbase, align 8
  %4 = call i64 @base_len(i8* %3) nounwind readonly
  store i64 %4, i64* %dirbaselen, align 8
  %5 = load i8** %dirbase, align 8
  %6 = ptrtoint i8* %5 to i64
  %7 = load i8** %dir_addr, align 8
  %8 = ptrtoint i8* %7 to i64
  %9 = sub nsw i64 %6, %8
  %10 = load i64* %dirbaselen, align 8
  %11 = add i64 %9, %10
  store i64 %11, i64* %dirlen, align 8
  %12 = load i64* %dirbaselen, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %bb2, label %bb

bb:                                               ; preds = %entry
  %14 = load i64* %dirbaselen, align 8
  %15 = sub i64 %14, 1
  %16 = load i8** %dirbase, align 8
  %17 = getelementptr inbounds i8* %16, i64 %15
  %18 = load i8* %17, align 1
  %19 = icmp eq i8 %18, 47
  br i1 %19, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.2, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.2, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %20 = load i32* %iftmp.2, align 4
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %needs_separator, align 8
  %22 = load i8** %abase_addr, align 8
  %23 = call i8* @longest_relative_suffix(i8* %22) nounwind readonly
  store i8* %23, i8** %base, align 8
  %24 = load i8** %base, align 8
  %25 = call i64 @strlen(i8* %24) nounwind readonly
  store i64 %25, i64* %baselen, align 8
  %26 = load i64* %dirlen, align 8
  %27 = load i64* %needs_separator, align 8
  %28 = add i64 %26, %27
  %29 = load i64* %baselen, align 8
  %30 = add i64 %28, %29
  %31 = add i64 %30, 1
  %32 = call noalias i8* @malloc(i64 %31) nounwind
  store i8* %32, i8** %p_concat, align 8
  %33 = load i8** %p_concat, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8
  br label %bb11

bb5:                                              ; preds = %bb3
  %35 = load i8** %p_concat, align 8
  %36 = load i8** %dir_addr, align 8
  %37 = load i64* %dirlen, align 8
  %38 = call i8* @mempcpy(i8* noalias %35, i8* noalias %36, i64 %37) nounwind
  store i8* %38, i8** %p, align 8
  %39 = load i8** %p, align 8
  store i8 47, i8* %39, align 1
  %40 = load i8** %p, align 8
  %41 = load i64* %needs_separator, align 8
  %42 = getelementptr inbounds i8* %40, i64 %41
  store i8* %42, i8** %p, align 8
  %43 = load i8*** %base_in_result_addr, align 8
  %44 = icmp ne i8** %43, null
  br i1 %44, label %bb6, label %bb10

bb6:                                              ; preds = %bb5
  %45 = load i8** %abase_addr, align 8
  %46 = getelementptr inbounds i8* %45, i64 0
  %47 = load i8* %46, align 1
  %48 = icmp eq i8 %47, 47
  br i1 %48, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i64 -1, i64* %iftmp.3, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  store i64 0, i64* %iftmp.3, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %49 = load i8** %p, align 8
  %50 = load i64* %iftmp.3, align 8
  %51 = getelementptr inbounds i8* %49, i64 %50
  %52 = load i8*** %base_in_result_addr, align 8
  store i8* %51, i8** %52, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb5
  %53 = load i8** %p, align 8
  %54 = load i8** %base, align 8
  %55 = load i64* %baselen, align 8
  %56 = call i8* @mempcpy(i8* noalias %53, i8* noalias %54, i64 %55) nounwind
  store i8* %56, i8** %p, align 8
  %57 = load i8** %p, align 8
  store i8 0, i8* %57, align 1
  %58 = load i8** %p_concat, align 8
  store i8* %58, i8** %0, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb4
  %59 = load i8** %0, align 8
  store i8* %59, i8** %retval, align 8
  %retval12 = load i8** %retval
  ret i8* %retval12
}

define i64 @full_write(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %buf_addr = alloca i8*, align 8
  %count_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %total = alloca i64
  %ptr = alloca i8*
  %n_rw = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %buf, i8** %buf_addr
  store i64 %count, i64* %count_addr
  store i64 0, i64* %total, align 8
  %1 = load i8** %buf_addr, align 8
  store i8* %1, i8** %ptr, align 8
  br label %bb4

bb:                                               ; preds = %bb4
  %2 = load i32* %fd_addr, align 4
  %3 = load i8** %ptr, align 8
  %4 = load i64* %count_addr, align 8
  %5 = call i64 @safe_write(i32 %2, i8* %3, i64 %4) nounwind
  store i64 %5, i64* %n_rw, align 8
  %6 = load i64* %n_rw, align 8
  %7 = icmp eq i64 %6, -1
  br i1 %7, label %bb5, label %bb1

bb1:                                              ; preds = %bb
  %8 = load i64* %n_rw, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %10 = call i32* @__errno_location() nounwind readnone
  store i32 28, i32* %10, align 4
  br label %bb5

bb3:                                              ; preds = %bb1
  %11 = load i64* %total, align 8
  %12 = load i64* %n_rw, align 8
  %13 = add i64 %11, %12
  store i64 %13, i64* %total, align 8
  %14 = load i8** %ptr, align 8
  %15 = load i64* %n_rw, align 8
  %16 = getelementptr inbounds i8* %14, i64 %15
  store i8* %16, i8** %ptr, align 8
  %17 = load i64* %count_addr, align 8
  %18 = load i64* %n_rw, align 8
  %19 = sub i64 %17, %18
  store i64 %19, i64* %count_addr, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %entry
  %20 = load i64* %count_addr, align 8
  %21 = icmp ne i64 %20, 0
  br i1 %21, label %bb, label %bb5

bb5:                                              ; preds = %bb4, %bb2, %bb
  %22 = load i64* %total, align 8
  store i64 %22, i64* %0, align 8
  %23 = load i64* %0, align 8
  store i64 %23, i64* %retval, align 8
  %retval6 = load i64* %retval
  ret i64 %retval6
}

define i64 @hash_get_n_buckets(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 2
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_buckets_used(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 3
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_n_entries(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  store i64 %3, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @hash_get_max_bucket_length(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bucket = alloca %struct.hash_entry*
  %max_bucket_length = alloca i64
  %cursor = alloca %struct.hash_entry*
  %bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %max_bucket_length, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.hash_entry** %2, align 8
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8
  store i64 1, i64* %bucket_length, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %9 = add i64 %15, 1
  store i64 %9, i64* %bucket_length, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %10 = load %struct.hash_entry** %cursor, align 8
  %11 = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1
  %12 = load %struct.hash_entry** %11, align 8
  store %struct.hash_entry* %12, %struct.hash_entry** %cursor, align 8
  %13 = load %struct.hash_entry** %cursor, align 8
  %14 = icmp ne %struct.hash_entry* %13, null
  %15 = load i64* %bucket_length, align 8
  br i1 %14, label %bb2, label %bb4

bb4:                                              ; preds = %bb3
  %16 = load i64* %max_bucket_length, align 8
  %17 = icmp ugt i64 %15, %16
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = load i64* %bucket_length, align 8
  store i64 %18, i64* %max_bucket_length, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb
  %19 = load %struct.hash_entry** %bucket, align 8
  %20 = getelementptr inbounds %struct.hash_entry* %19, i64 1
  store %struct.hash_entry* %20, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 1
  %23 = load %struct.hash_entry** %22, align 8
  %24 = load %struct.hash_entry** %bucket, align 8
  %25 = icmp ugt %struct.hash_entry* %23, %24
  br i1 %25, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %26 = load i64* %max_bucket_length, align 8
  store i64 %26, i64* %0, align 8
  %27 = load i64* %0, align 8
  store i64 %27, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define zeroext i8 @hash_table_ok(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.hash_entry*
  %n_buckets_used = alloca i64
  %n_entries = alloca i64
  %cursor = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 0, i64* %n_buckets_used, align 8
  store i64 0, i64* %n_entries, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.hash_entry** %2, align 8
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  br label %bb5

bb:                                               ; preds = %bb5
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb4

bb1:                                              ; preds = %bb
  %8 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8
  %9 = load i64* %n_buckets_used, align 8
  %10 = add i64 %9, 1
  store i64 %10, i64* %n_buckets_used, align 8
  %11 = load i64* %n_entries, align 8
  %12 = add i64 %11, 1
  store i64 %12, i64* %n_entries, align 8
  br label %bb3

bb2:                                              ; preds = %bb3
  %13 = load i64* %n_entries, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %n_entries, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load %struct.hash_entry** %cursor, align 8
  %16 = getelementptr inbounds %struct.hash_entry* %15, i32 0, i32 1
  %17 = load %struct.hash_entry** %16, align 8
  store %struct.hash_entry* %17, %struct.hash_entry** %cursor, align 8
  %18 = load %struct.hash_entry** %cursor, align 8
  %19 = icmp ne %struct.hash_entry* %18, null
  br i1 %19, label %bb2, label %bb4

bb4:                                              ; preds = %bb3, %bb
  %20 = load %struct.hash_entry** %bucket, align 8
  %21 = getelementptr inbounds %struct.hash_entry* %20, i64 1
  store %struct.hash_entry* %21, %struct.hash_entry** %bucket, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %entry
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 1
  %24 = load %struct.hash_entry** %23, align 8
  %25 = load %struct.hash_entry** %bucket, align 8
  %26 = icmp ugt %struct.hash_entry* %24, %25
  br i1 %26, label %bb, label %bb6

bb6:                                              ; preds = %bb5
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = getelementptr inbounds %struct.Hash_table* %27, i32 0, i32 3
  %29 = load i64* %28, align 8
  %30 = load i64* %n_buckets_used, align 8
  %31 = icmp eq i64 %29, %30
  br i1 %31, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 4
  %34 = load i64* %33, align 8
  %35 = load i64* %n_entries, align 8
  %36 = icmp eq i64 %34, %35
  br i1 %36, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %37 = load i32* %0, align 4
  store i32 %37, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define void @hash_print_statistics(%struct.Hash_table* %table, %struct.FILE* %stream) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %stream_addr = alloca %struct.FILE*, align 8
  %n_entries = alloca i64
  %n_buckets = alloca i64
  %n_buckets_used = alloca i64
  %max_bucket_length = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = call i64 @hash_get_n_entries(%struct.Hash_table* %0) nounwind readonly
  store i64 %1, i64* %n_entries, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = call i64 @hash_get_n_buckets(%struct.Hash_table* %2) nounwind readonly
  store i64 %3, i64* %n_buckets, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = call i64 @hash_get_n_buckets_used(%struct.Hash_table* %4) nounwind readonly
  store i64 %5, i64* %n_buckets_used, align 8
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = call i64 @hash_get_max_bucket_length(%struct.Hash_table* %6) nounwind readonly
  store i64 %7, i64* %max_bucket_length, align 8
  %8 = load %struct.FILE** %stream_addr, align 8
  %9 = load i64* %n_entries, align 8
  %10 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %8, i8* noalias getelementptr inbounds ([24 x i8]* @.str266, i64 0, i64 0), i64 %9) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = load i64* %n_buckets, align 8
  %13 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([24 x i8]* @.str1267, i64 0, i64 0), i64 %12) nounwind
  %14 = load i64* %n_buckets_used, align 8
  %15 = uitofp i64 %14 to double
  %16 = fmul double %15, 1.000000e+02
  %17 = load i64* %n_buckets, align 8
  %18 = uitofp i64 %17 to double
  %19 = fdiv double %16, %18
  %20 = load %struct.FILE** %stream_addr, align 8
  %21 = load i64* %n_buckets_used, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %20, i8* noalias getelementptr inbounds ([33 x i8]* @.str2268, i64 0, i64 0), i64 %21, double %19) nounwind
  %23 = load %struct.FILE** %stream_addr, align 8
  %24 = load i64* %max_bucket_length, align 8
  %25 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %23, i8* noalias getelementptr inbounds ([24 x i8]* @.str3269, i64 0, i64 0), i64 %24) nounwind
  ret void
}

define internal %struct.hash_entry* @safe_hasher(%struct.Hash_table* %table, i8* %key) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %key_addr = alloca i8*, align 8
  %retval = alloca %struct.hash_entry*
  %0 = alloca %struct.hash_entry*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %key, i8** %key_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 6
  %3 = load i64 (i8*, i64)** %2, align 8
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 2
  %6 = load i64* %5, align 8
  %7 = load i8** %key_addr, align 8
  %8 = call i64 %3(i8* %7, i64 %6) nounwind
  store i64 %8, i64* %n, align 8
  %9 = load %struct.Hash_table** %table_addr, align 8
  %10 = getelementptr inbounds %struct.Hash_table* %9, i32 0, i32 2
  %11 = load i64* %10, align 8
  %12 = load i64* %n, align 8
  %13 = icmp ule i64 %11, %12
  br i1 %13, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 0
  %16 = load %struct.hash_entry** %15, align 8
  %17 = load i64* %n, align 8
  %18 = getelementptr inbounds %struct.hash_entry* %16, i64 %17
  store %struct.hash_entry* %18, %struct.hash_entry** %0, align 8
  %19 = load %struct.hash_entry** %0, align 8
  store %struct.hash_entry* %19, %struct.hash_entry** %retval, align 8
  %retval2 = load %struct.hash_entry** %retval
  ret %struct.hash_entry* %retval2
}

define i8* @hash_lookup(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.hash_entry* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb9

bb2:                                              ; preds = %entry
  %8 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8
  br label %bb7

bb3:                                              ; preds = %bb7
  %9 = load %struct.hash_entry** %cursor, align 8
  %10 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8** %entry_addr, align 8
  %13 = icmp eq i8* %11, %12
  br i1 %13, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %14 = load %struct.Hash_table** %table_addr, align 8
  %15 = getelementptr inbounds %struct.Hash_table* %14, i32 0, i32 7
  %16 = load i8 (i8*, i8*)** %15, align 8
  %17 = load %struct.hash_entry** %cursor, align 8
  %18 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  %20 = load i8** %entry_addr, align 8
  %21 = call zeroext i8 %16(i8* %20, i8* %19) nounwind
  %toBool = icmp ne i8 %21, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  %22 = load %struct.hash_entry** %cursor, align 8
  %23 = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  store i8* %24, i8** %0, align 8
  br label %bb9

bb6:                                              ; preds = %bb4
  %25 = load %struct.hash_entry** %cursor, align 8
  %26 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 1
  %27 = load %struct.hash_entry** %26, align 8
  store %struct.hash_entry* %27, %struct.hash_entry** %cursor, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb2
  %28 = load %struct.hash_entry** %cursor, align 8
  %29 = icmp ne %struct.hash_entry* %28, null
  br i1 %29, label %bb3, label %bb8

bb8:                                              ; preds = %bb7
  store i8* null, i8** %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb5, %bb
  %30 = load i8** %0, align 8
  store i8* %30, i8** %retval, align 8
  %retval10 = load i8** %retval
  ret i8* %retval10
}

define i8* @hash_get_first(%struct.Hash_table* %table) nounwind readonly {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 4
  %3 = load i64* %2, align 8
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb7

bb1:                                              ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 0
  %7 = load %struct.hash_entry** %6, align 8
  store %struct.hash_entry* %7, %struct.hash_entry** %bucket, align 8
  br label %bb2

bb2:                                              ; preds = %bb6, %bb1
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 1
  %10 = load %struct.hash_entry** %9, align 8
  %11 = load %struct.hash_entry** %bucket, align 8
  %12 = icmp ule %struct.hash_entry* %10, %11
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %13 = load %struct.hash_entry** %bucket, align 8
  %14 = getelementptr inbounds %struct.hash_entry* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  %17 = load %struct.hash_entry** %bucket, align 8
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %18 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 0
  %19 = load i8** %18, align 8
  store i8* %19, i8** %0, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %20 = getelementptr inbounds %struct.hash_entry* %17, i64 1
  store %struct.hash_entry* %20, %struct.hash_entry** %bucket, align 8
  br label %bb2

bb7:                                              ; preds = %bb5, %bb
  %21 = load i8** %0, align 8
  store i8* %21, i8** %retval, align 8
  %retval8 = load i8** %retval
  ret i8* %retval8
}

define i8* @hash_get_next(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.hash_entry* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  %4 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %4, %struct.hash_entry** %cursor, align 8
  br label %bb

bb:                                               ; preds = %bb4, %entry
  %5 = load %struct.hash_entry** %cursor, align 8
  %6 = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load i8** %entry_addr, align 8
  %9 = icmp eq i8* %7, %8
  br i1 %9, label %bb2, label %bb4

bb2:                                              ; preds = %bb
  %10 = load %struct.hash_entry** %cursor, align 8
  %11 = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 1
  %12 = load %struct.hash_entry** %11, align 8
  %13 = icmp ne %struct.hash_entry* %12, null
  br i1 %13, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %14 = load %struct.hash_entry** %cursor, align 8
  %15 = getelementptr inbounds %struct.hash_entry* %14, i32 0, i32 1
  %16 = load %struct.hash_entry** %15, align 8
  %17 = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 0
  %18 = load i8** %17, align 8
  store i8* %18, i8** %0, align 8
  br label %bb10

bb4:                                              ; preds = %bb2, %bb
  %19 = load %struct.hash_entry** %cursor, align 8
  %20 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 1
  %21 = load %struct.hash_entry** %20, align 8
  store %struct.hash_entry* %21, %struct.hash_entry** %cursor, align 8
  %22 = load %struct.hash_entry** %cursor, align 8
  %23 = bitcast %struct.hash_entry* %22 to i8*
  %24 = icmp ne i8* %23, null
  br i1 %24, label %bb, label %bb8

bb6:                                              ; preds = %bb8
  %25 = load %struct.hash_entry** %bucket, align 8
  %26 = getelementptr inbounds %struct.hash_entry* %25, i32 0, i32 0
  %27 = load i8** %26, align 8
  %28 = icmp ne i8* %27, null
  br i1 %28, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %29 = load %struct.hash_entry** %bucket, align 8
  %30 = getelementptr inbounds %struct.hash_entry* %29, i32 0, i32 0
  %31 = load i8** %30, align 8
  store i8* %31, i8** %0, align 8
  br label %bb10

bb8:                                              ; preds = %bb4, %bb6
  %32 = load %struct.hash_entry** %bucket, align 8
  %33 = getelementptr inbounds %struct.hash_entry* %32, i64 1
  store %struct.hash_entry* %33, %struct.hash_entry** %bucket, align 8
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 1
  %36 = load %struct.hash_entry** %35, align 8
  %37 = load %struct.hash_entry** %bucket, align 8
  %38 = icmp ult %struct.hash_entry* %37, %36
  br i1 %38, label %bb6, label %bb9

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define i64 @hash_get_entries(%struct.Hash_table* %table, i8** %buffer, i64 %buffer_size) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %buffer_addr = alloca i8**, align 8
  %buffer_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8** %buffer, i8*** %buffer_addr
  store i64 %buffer_size, i64* %buffer_size_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.hash_entry** %2, align 8
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb:                                               ; preds = %bb7
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %8 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  %9 = load i64* %counter, align 8
  %10 = load i64* %buffer_size_addr, align 8
  %11 = icmp uge i64 %9, %10
  br i1 %11, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %12 = load i64* %counter, align 8
  store i64 %12, i64* %0, align 8
  br label %bb9

bb4:                                              ; preds = %bb2
  %13 = load %struct.hash_entry** %cursor, align 8
  %14 = getelementptr inbounds %struct.hash_entry* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  %16 = load i8*** %buffer_addr, align 8
  %17 = load i64* %counter, align 8
  %18 = getelementptr inbounds i8** %16, i64 %17
  store i8* %15, i8** %18, align 1
  %19 = load i64* %counter, align 8
  %20 = add i64 %19, 1
  store i64 %20, i64* %counter, align 8
  %21 = load %struct.hash_entry** %cursor, align 8
  %22 = getelementptr inbounds %struct.hash_entry* %21, i32 0, i32 1
  %23 = load %struct.hash_entry** %22, align 8
  store %struct.hash_entry* %23, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %24 = load %struct.hash_entry** %cursor, align 8
  %25 = icmp ne %struct.hash_entry* %24, null
  br i1 %25, label %bb2, label %bb6

bb6:                                              ; preds = %bb5, %bb
  %26 = load %struct.hash_entry** %bucket, align 8
  %27 = getelementptr inbounds %struct.hash_entry* %26, i64 1
  store %struct.hash_entry* %27, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %entry
  %28 = load %struct.Hash_table** %table_addr, align 8
  %29 = getelementptr inbounds %struct.Hash_table* %28, i32 0, i32 1
  %30 = load %struct.hash_entry** %29, align 8
  %31 = load %struct.hash_entry** %bucket, align 8
  %32 = icmp ugt %struct.hash_entry* %30, %31
  br i1 %32, label %bb, label %bb8

bb8:                                              ; preds = %bb7
  %33 = load i64* %counter, align 8
  store i64 %33, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb3
  %34 = load i64* %0, align 8
  store i64 %34, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define i64 @hash_do_for_each(%struct.Hash_table* %table, i8 (i8*, i8*)* %processor, i8* %processor_data) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %processor_addr = alloca i8 (i8*, i8*)*, align 8
  %processor_data_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %counter = alloca i64
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8 (i8*, i8*)* %processor, i8 (i8*, i8*)** %processor_addr
  store i8* %processor_data, i8** %processor_data_addr
  store i64 0, i64* %counter, align 8
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.hash_entry** %2, align 8
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %8 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %8, %struct.hash_entry** %cursor, align 8
  br label %bb8

bb2:                                              ; preds = %bb8
  %9 = load %struct.hash_entry** %cursor, align 8
  %10 = getelementptr inbounds %struct.hash_entry* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i8 (i8*, i8*)** %processor_addr, align 8
  %13 = load i8** %processor_data_addr, align 8
  %14 = call zeroext i8 %12(i8* %11, i8* %13) nounwind
  %toBool = icmp ne i8 %14, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot3 = zext i1 %toBoolnot to i8
  %toBool5 = icmp ne i8 %toBoolnot3, 0
  %15 = load i64* %counter, align 8
  br i1 %toBool5, label %bb6, label %bb7

bb6:                                              ; preds = %bb2
  store i64 %15, i64* %0, align 8
  br label %bb12

bb7:                                              ; preds = %bb2
  %16 = add i64 %15, 1
  store i64 %16, i64* %counter, align 8
  %17 = load %struct.hash_entry** %cursor, align 8
  %18 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1
  %19 = load %struct.hash_entry** %18, align 8
  store %struct.hash_entry* %19, %struct.hash_entry** %cursor, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  %20 = load %struct.hash_entry** %cursor, align 8
  %21 = icmp ne %struct.hash_entry* %20, null
  br i1 %21, label %bb2, label %bb9

bb9:                                              ; preds = %bb8, %bb
  %22 = load %struct.hash_entry** %bucket, align 8
  %23 = getelementptr inbounds %struct.hash_entry* %22, i64 1
  store %struct.hash_entry* %23, %struct.hash_entry** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %24 = load %struct.Hash_table** %table_addr, align 8
  %25 = getelementptr inbounds %struct.Hash_table* %24, i32 0, i32 1
  %26 = load %struct.hash_entry** %25, align 8
  %27 = load %struct.hash_entry** %bucket, align 8
  %28 = icmp ugt %struct.hash_entry* %26, %27
  br i1 %28, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %29 = load i64* %counter, align 8
  store i64 %29, i64* %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb6
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval13 = load i64* %retval
  ret i64 %retval13
}

define i64 @hash_string(i8* %string, i64 %n_buckets) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %n_buckets_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %value = alloca i64
  %ch = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %n_buckets, i64* %n_buckets_addr
  store i64 0, i64* %value, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = mul i64 %15, 31
  %2 = load i8* %ch, align 1
  %3 = zext i8 %2 to i64
  %4 = add i64 %1, %3
  %5 = load i64* %n_buckets_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %value, align 8
  %9 = load i8** %string_addr, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %string_addr, align 8
  br label %bb1

bb1:                                              ; preds = %klee_div_zero_check.exit, %entry
  %11 = load i8** %string_addr, align 8
  %12 = load i8* %11, align 1
  store i8 %12, i8* %ch, align 1
  %13 = load i8* %ch, align 1
  %14 = icmp ne i8 %13, 0
  %15 = load i64* %value, align 8
  br i1 %14, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  store i64 %15, i64* %0, align 8
  %16 = load i64* %0, align 8
  store i64 %16, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal zeroext i8 @is_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %divisor = alloca i64
  %square = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store i64 3, i64* %divisor, align 8
  %1 = load i64* %divisor, align 8
  %2 = load i64* %divisor, align 8
  %3 = mul i64 %1, %2
  store i64 %3, i64* %square, align 8
  br label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  %4 = load i64* %divisor, align 8
  %5 = add i64 %4, 1
  store i64 %5, i64* %divisor, align 8
  %6 = load i64* %divisor, align 8
  %7 = mul i64 %6, 4
  %8 = load i64* %square, align 8
  %9 = add i64 %7, %8
  store i64 %9, i64* %square, align 8
  %10 = load i64* %divisor, align 8
  %11 = add i64 %10, 1
  store i64 %11, i64* %divisor, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %square, align 8
  %13 = load i64* %candidate_addr, align 8
  %14 = icmp uge i64 %12, %13
  br i1 %14, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %15 = load i64* %candidate_addr, align 8
  %16 = load i64* %divisor, align 8
  %int_cast_to_i64 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %18, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %19 = urem i64 %15, %16
  %20 = icmp ne i64 %19, 0
  br i1 %20, label %bb, label %bb3

bb3:                                              ; preds = %klee_div_zero_check.exit, %bb1
  %21 = load i64* %candidate_addr, align 8
  %22 = load i64* %divisor, align 8
  %int_cast_to_i641 = bitcast i64 %22 to i64
  %23 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %24 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %24, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %25 = urem i64 %21, %22
  %26 = icmp ne i64 %25, 0
  %27 = zext i1 %26 to i32
  store i32 %27, i32* %0, align 4
  %28 = load i32* %0, align 4
  store i32 %28, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define internal i64 @next_prime(i64 %candidate) nounwind readnone {
entry:
  %candidate_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  %1 = load i64* %candidate_addr, align 8
  %2 = icmp ule i64 %1, 9
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 10, i64* %candidate_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i64* %candidate_addr, align 8
  %4 = or i64 %3, 1
  store i64 %4, i64* %candidate_addr, align 8
  br label %bb3

bb2:                                              ; preds = %bb4
  %5 = load i64* %candidate_addr, align 8
  %6 = add i64 %5, 2
  store i64 %6, i64* %candidate_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i64* %candidate_addr, align 8
  %8 = icmp eq i64 %7, -1
  br i1 %8, label %bb8, label %bb4

bb4:                                              ; preds = %bb3
  %9 = load i64* %candidate_addr, align 8
  %10 = call zeroext i8 @is_prime(i64 %9) nounwind readnone
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot5 = zext i1 %toBoolnot to i8
  %toBool7 = icmp ne i8 %toBoolnot5, 0
  br i1 %toBool7, label %bb2, label %bb8

bb8:                                              ; preds = %bb4, %bb3
  %11 = load i64* %candidate_addr, align 8
  store i64 %11, i64* %0, align 8
  %12 = load i64* %0, align 8
  store i64 %12, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define void @hash_reset_tuning(%struct.Hash_tuning* %tuning) nounwind {
entry:
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %0 = load %struct.Hash_tuning** %tuning_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 0
  %2 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 0), align 4
  store float %2, float* %1, align 4
  %3 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 1
  %4 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 1), align 4
  store float %4, float* %3, align 4
  %5 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 2
  %6 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 2), align 4
  store float %6, float* %5, align 4
  %7 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 3
  %8 = load float* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 3), align 4
  store float %8, float* %7, align 4
  %9 = getelementptr inbounds %struct.Hash_tuning* %0, i32 0, i32 4
  %10 = load i8* getelementptr inbounds (%struct.Hash_tuning* @default_tuning, i64 0, i32 4), align 4
  store i8 %10, i8* %9, align 4
  ret void
}

define internal i64 @raw_hasher(i8* %data, i64 %n) nounwind {
entry:
  %data_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %val = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %data, i8** %data_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %data_addr, align 8
  %2 = ptrtoint i8* %1 to i64
  %3 = call i64 @rotr_sz(i64 %2, i32 3) nounwind
  store i64 %3, i64* %val, align 8
  %4 = load i64* %val, align 8
  %5 = load i64* %n_addr, align 8
  %int_cast_to_i64 = bitcast i64 %5 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %8 = urem i64 %4, %5
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @raw_comparator(i8* %a, i8* %b) nounwind {
entry:
  %a_addr = alloca i8*, align 8
  %b_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %a, i8** %a_addr
  store i8* %b, i8** %b_addr
  %1 = load i8** %a_addr, align 8
  %2 = load i8** %b_addr, align 8
  %3 = icmp eq i8* %1, %2
  %4 = zext i1 %3 to i32
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define internal zeroext i8 @check_tuning(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %tuning = alloca %struct.Hash_tuning*
  %epsilon = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  store %struct.Hash_tuning* %3, %struct.Hash_tuning** %tuning, align 8
  %4 = load %struct.Hash_tuning** %tuning, align 8
  %5 = icmp eq %struct.Hash_tuning* %4, @default_tuning
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb10

bb1:                                              ; preds = %entry
  store float 0x3FB99999A0000000, float* %epsilon, align 4
  %6 = load %struct.Hash_tuning** %tuning, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = load float* %epsilon, align 4
  %10 = fcmp ogt float %8, %9
  br i1 %10, label %bb2, label %bb9

bb2:                                              ; preds = %bb1
  %11 = load %struct.Hash_tuning** %tuning, align 8
  %12 = getelementptr inbounds %struct.Hash_tuning* %11, i32 0, i32 2
  %13 = load float* %12, align 4
  %14 = load float* %epsilon, align 4
  %15 = fsub float 1.000000e+00, %14
  %16 = fcmp olt float %13, %15
  br i1 %16, label %bb3, label %bb9

bb3:                                              ; preds = %bb2
  %17 = load float* %epsilon, align 4
  %18 = fadd float %17, 1.000000e+00
  %19 = load %struct.Hash_tuning** %tuning, align 8
  %20 = getelementptr inbounds %struct.Hash_tuning* %19, i32 0, i32 3
  %21 = load float* %20, align 4
  %22 = fcmp olt float %18, %21
  br i1 %22, label %bb4, label %bb9

bb4:                                              ; preds = %bb3
  %23 = load %struct.Hash_tuning** %tuning, align 8
  %24 = getelementptr inbounds %struct.Hash_tuning* %23, i32 0, i32 0
  %25 = load float* %24, align 4
  %26 = fcmp oge float %25, 0.000000e+00
  br i1 %26, label %bb5, label %bb9

bb5:                                              ; preds = %bb4
  %27 = load %struct.Hash_tuning** %tuning, align 8
  %28 = getelementptr inbounds %struct.Hash_tuning* %27, i32 0, i32 0
  %29 = load float* %28, align 4
  %30 = load float* %epsilon, align 4
  %31 = fadd float %29, %30
  %32 = load %struct.Hash_tuning** %tuning, align 8
  %33 = getelementptr inbounds %struct.Hash_tuning* %32, i32 0, i32 1
  %34 = load float* %33, align 4
  %35 = fcmp olt float %31, %34
  br i1 %35, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %36 = load %struct.Hash_tuning** %tuning, align 8
  %37 = getelementptr inbounds %struct.Hash_tuning* %36, i32 0, i32 1
  %38 = load float* %37, align 4
  %39 = fcmp ole float %38, 1.000000e+00
  br i1 %39, label %bb7, label %bb9

bb7:                                              ; preds = %bb6
  %40 = load %struct.Hash_tuning** %tuning, align 8
  %41 = getelementptr inbounds %struct.Hash_tuning* %40, i32 0, i32 0
  %42 = load float* %41, align 4
  %43 = load float* %epsilon, align 4
  %44 = fadd float %42, %43
  %45 = load %struct.Hash_tuning** %tuning, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 2
  %47 = load float* %46, align 4
  %48 = fcmp olt float %44, %47
  br i1 %48, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i32 1, i32* %0, align 4
  br label %bb10

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1
  %49 = load %struct.Hash_table** %table_addr, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %50, align 8
  store i32 0, i32* %0, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb
  %51 = load i32* %0, align 4
  store i32 %51, i32* %retval, align 4
  %retval11 = load i32* %retval
  %retval1112 = trunc i32 %retval11 to i8
  ret i8 %retval1112
}

define internal i64 @compute_bucket_size(i64 %candidate, %struct.Hash_tuning* %tuning) nounwind readonly {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %new_candidate = alloca float
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  %1 = load %struct.Hash_tuning** %tuning_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_tuning* %1, i32 0, i32 4
  %3 = load i8* %2, align 4
  %toBool = icmp ne i8 %3, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb6

bb:                                               ; preds = %entry
  %4 = load i64* %candidate_addr, align 8
  %5 = uitofp i64 %4 to float
  %6 = load %struct.Hash_tuning** %tuning_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_tuning* %6, i32 0, i32 2
  %8 = load float* %7, align 4
  %9 = fdiv float %5, %8
  store float %9, float* %new_candidate, align 4
  %10 = load float* %new_candidate, align 4
  %11 = fcmp oge float %10, 0x43F0000000000000
  br i1 %11, label %bb4, label %bb5

bb4:                                              ; preds = %bb
  store i64 0, i64* %0, align 8
  br label %bb9

bb5:                                              ; preds = %bb
  %12 = load float* %new_candidate, align 4
  %13 = fptoui float %12 to i64
  store i64 %13, i64* %candidate_addr, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %14 = load i64* %candidate_addr, align 8
  %15 = call i64 @next_prime(i64 %14) nounwind readnone
  store i64 %15, i64* %candidate_addr, align 8
  %16 = load i64* %candidate_addr, align 8
  %17 = icmp ugt i64 %16, 2305843009213693951
  br i1 %17, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i64 0, i64* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb6
  %18 = load i64* %candidate_addr, align 8
  store i64 %18, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %19 = load i64* %0, align 8
  store i64 %19, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define %struct.Hash_table* @hash_initialize(i64 %candidate, %struct.Hash_tuning* %tuning, i64 (i8*, i64)* %hasher, i8 (i8*, i8*)* %comparator, void (i8*)* %data_freer) nounwind {
entry:
  %candidate_addr = alloca i64, align 8
  %tuning_addr = alloca %struct.Hash_tuning*, align 8
  %hasher_addr = alloca i64 (i8*, i64)*, align 8
  %comparator_addr = alloca i8 (i8*, i8*)*, align 8
  %data_freer_addr = alloca void (i8*)*, align 8
  %retval = alloca %struct.Hash_table*
  %0 = alloca %struct.Hash_table*
  %table = alloca %struct.Hash_table*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %candidate, i64* %candidate_addr
  store %struct.Hash_tuning* %tuning, %struct.Hash_tuning** %tuning_addr
  store i64 (i8*, i64)* %hasher, i64 (i8*, i64)** %hasher_addr
  store i8 (i8*, i8*)* %comparator, i8 (i8*, i8*)** %comparator_addr
  store void (i8*)* %data_freer, void (i8*)** %data_freer_addr
  %1 = load i64 (i8*, i64)** %hasher_addr, align 8
  %2 = icmp eq i64 (i8*, i64)* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 (i8*, i64)* @raw_hasher, i64 (i8*, i64)** %hasher_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i8 (i8*, i8*)** %comparator_addr, align 8
  %4 = icmp eq i8 (i8*, i8*)* %3, null
  br i1 %4, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i8 (i8*, i8*)* @raw_comparator, i8 (i8*, i8*)** %comparator_addr, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = call noalias i8* @malloc(i64 80) nounwind
  %6 = bitcast i8* %5 to %struct.Hash_table*
  store %struct.Hash_table* %6, %struct.Hash_table** %table, align 8
  %7 = load %struct.Hash_table** %table, align 8
  %8 = icmp eq %struct.Hash_table* %7, null
  br i1 %8, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb5:                                              ; preds = %bb3
  %9 = load %struct.Hash_tuning** %tuning_addr, align 8
  %10 = icmp eq %struct.Hash_tuning* %9, null
  br i1 %10, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store %struct.Hash_tuning* @default_tuning, %struct.Hash_tuning** %tuning_addr, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %11 = load %struct.Hash_table** %table, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 5
  %13 = load %struct.Hash_tuning** %tuning_addr, align 8
  store %struct.Hash_tuning* %13, %struct.Hash_tuning** %12, align 8
  %14 = load %struct.Hash_table** %table, align 8
  %15 = call zeroext i8 @check_tuning(%struct.Hash_table* %14) nounwind
  %toBool = icmp ne i8 %15, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot8 = zext i1 %toBoolnot to i8
  %toBool10 = icmp ne i8 %toBoolnot8, 0
  br i1 %toBool10, label %fail, label %bb11

bb11:                                             ; preds = %bb7
  %16 = load i64* %candidate_addr, align 8
  %17 = load %struct.Hash_tuning** %tuning_addr, align 8
  %18 = call i64 @compute_bucket_size(i64 %16, %struct.Hash_tuning* %17) nounwind readonly
  %19 = load %struct.Hash_table** %table, align 8
  %20 = getelementptr inbounds %struct.Hash_table* %19, i32 0, i32 2
  store i64 %18, i64* %20, align 8
  %21 = load %struct.Hash_table** %table, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %fail, label %bb12

bb12:                                             ; preds = %bb11
  %25 = load %struct.Hash_table** %table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 2
  %27 = load i64* %26, align 8
  %28 = call noalias i8* @calloc(i64 %27, i64 16) nounwind
  %29 = bitcast i8* %28 to %struct.hash_entry*
  %30 = load %struct.Hash_table** %table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 0
  store %struct.hash_entry* %29, %struct.hash_entry** %31, align 8
  %32 = load %struct.Hash_table** %table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 0
  %34 = load %struct.hash_entry** %33, align 8
  %35 = icmp eq %struct.hash_entry* %34, null
  br i1 %35, label %fail, label %bb13

bb13:                                             ; preds = %bb12
  %36 = load %struct.Hash_table** %table, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 0
  %38 = load %struct.hash_entry** %37, align 8
  %39 = load %struct.Hash_table** %table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 2
  %41 = load i64* %40, align 8
  %42 = getelementptr inbounds %struct.hash_entry* %38, i64 %41
  %43 = load %struct.Hash_table** %table, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 1
  store %struct.hash_entry* %42, %struct.hash_entry** %44, align 8
  %45 = load %struct.Hash_table** %table, align 8
  %46 = getelementptr inbounds %struct.Hash_table* %45, i32 0, i32 3
  store i64 0, i64* %46, align 8
  %47 = load %struct.Hash_table** %table, align 8
  %48 = getelementptr inbounds %struct.Hash_table* %47, i32 0, i32 4
  store i64 0, i64* %48, align 8
  %49 = load %struct.Hash_table** %table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 6
  %51 = load i64 (i8*, i64)** %hasher_addr, align 8
  store i64 (i8*, i64)* %51, i64 (i8*, i64)** %50, align 8
  %52 = load %struct.Hash_table** %table, align 8
  %53 = getelementptr inbounds %struct.Hash_table* %52, i32 0, i32 7
  %54 = load i8 (i8*, i8*)** %comparator_addr, align 8
  store i8 (i8*, i8*)* %54, i8 (i8*, i8*)** %53, align 8
  %55 = load %struct.Hash_table** %table, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 8
  %57 = load void (i8*)** %data_freer_addr, align 8
  store void (i8*)* %57, void (i8*)** %56, align 8
  %58 = load %struct.Hash_table** %table, align 8
  %59 = getelementptr inbounds %struct.Hash_table* %58, i32 0, i32 9
  store %struct.hash_entry* null, %struct.hash_entry** %59, align 8
  %60 = load %struct.Hash_table** %table, align 8
  store %struct.Hash_table* %60, %struct.Hash_table** %0, align 8
  br label %bb14

fail:                                             ; preds = %bb12, %bb11, %bb7
  %61 = load %struct.Hash_table** %table, align 8
  %62 = bitcast %struct.Hash_table* %61 to i8*
  call void @free(i8* %62) nounwind
  store %struct.Hash_table* null, %struct.Hash_table** %0, align 8
  br label %bb14

bb14:                                             ; preds = %fail, %bb13, %bb4
  %63 = load %struct.Hash_table** %0, align 8
  store %struct.Hash_table* %63, %struct.Hash_table** %retval, align 8
  %retval15 = load %struct.Hash_table** %retval
  ret %struct.Hash_table* %retval15
}

define void @hash_clear(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %next = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 0
  %2 = load %struct.hash_entry** %1, align 8
  store %struct.hash_entry* %2, %struct.hash_entry** %bucket, align 8
  br label %bb10

bb:                                               ; preds = %bb10
  %3 = load %struct.hash_entry** %bucket, align 8
  %4 = getelementptr inbounds %struct.hash_entry* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb1, label %bb9

bb1:                                              ; preds = %bb
  %7 = load %struct.hash_entry** %bucket, align 8
  %8 = getelementptr inbounds %struct.hash_entry* %7, i32 0, i32 1
  %9 = load %struct.hash_entry** %8, align 8
  store %struct.hash_entry* %9, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  br i1 %35, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 8
  %12 = load void (i8*)** %11, align 8
  %13 = load %struct.hash_entry** %cursor, align 8
  %14 = getelementptr inbounds %struct.hash_entry* %13, i32 0, i32 0
  %15 = load i8** %14, align 8
  call void %12(i8* %15) nounwind
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %16 = load %struct.hash_entry** %cursor, align 8
  %17 = getelementptr inbounds %struct.hash_entry* %16, i32 0, i32 0
  store i8* null, i8** %17, align 8
  %18 = load %struct.hash_entry** %cursor, align 8
  %19 = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 1
  %20 = load %struct.hash_entry** %19, align 8
  store %struct.hash_entry* %20, %struct.hash_entry** %next, align 8
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 9
  %23 = load %struct.hash_entry** %22, align 8
  %24 = load %struct.hash_entry** %cursor, align 8
  %25 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 1
  store %struct.hash_entry* %23, %struct.hash_entry** %25, align 8
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 9
  %28 = load %struct.hash_entry** %cursor, align 8
  store %struct.hash_entry* %28, %struct.hash_entry** %27, align 8
  %29 = load %struct.hash_entry** %next, align 8
  store %struct.hash_entry* %29, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb1
  %30 = load %struct.hash_entry** %cursor, align 8
  %31 = icmp ne %struct.hash_entry* %30, null
  %32 = load %struct.Hash_table** %table_addr, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 8
  %34 = load void (i8*)** %33, align 8
  %35 = icmp ne void (i8*)* %34, null
  br i1 %31, label %bb2, label %bb6

bb6:                                              ; preds = %bb5
  br i1 %35, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 8
  %38 = load void (i8*)** %37, align 8
  %39 = load %struct.hash_entry** %bucket, align 8
  %40 = getelementptr inbounds %struct.hash_entry* %39, i32 0, i32 0
  %41 = load i8** %40, align 8
  call void %38(i8* %41) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %42 = load %struct.hash_entry** %bucket, align 8
  %43 = getelementptr inbounds %struct.hash_entry* %42, i32 0, i32 0
  store i8* null, i8** %43, align 8
  %44 = load %struct.hash_entry** %bucket, align 8
  %45 = getelementptr inbounds %struct.hash_entry* %44, i32 0, i32 1
  store %struct.hash_entry* null, %struct.hash_entry** %45, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb
  %46 = load %struct.hash_entry** %bucket, align 8
  %47 = getelementptr inbounds %struct.hash_entry* %46, i64 1
  store %struct.hash_entry* %47, %struct.hash_entry** %bucket, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %entry
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 1
  %50 = load %struct.hash_entry** %49, align 8
  %51 = load %struct.hash_entry** %bucket, align 8
  %52 = icmp ugt %struct.hash_entry* %50, %51
  br i1 %52, label %bb, label %bb11

bb11:                                             ; preds = %bb10
  %53 = load %struct.Hash_table** %table_addr, align 8
  %54 = getelementptr inbounds %struct.Hash_table* %53, i32 0, i32 3
  store i64 0, i64* %54, align 8
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 4
  store i64 0, i64* %56, align 8
  ret void
}

define void @hash_free(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %next = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %0 = load %struct.Hash_table** %table_addr, align 8
  %1 = getelementptr inbounds %struct.Hash_table* %0, i32 0, i32 8
  %2 = load void (i8*)** %1, align 8
  %3 = icmp ne void (i8*)* %2, null
  br i1 %3, label %bb, label %bb8

bb:                                               ; preds = %entry
  %4 = load %struct.Hash_table** %table_addr, align 8
  %5 = getelementptr inbounds %struct.Hash_table* %4, i32 0, i32 4
  %6 = load i64* %5, align 8
  %7 = icmp ne i64 %6, 0
  br i1 %7, label %bb1, label %bb8

bb1:                                              ; preds = %bb
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 0
  %10 = load %struct.hash_entry** %9, align 8
  store %struct.hash_entry* %10, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb2:                                              ; preds = %bb7
  %11 = load %struct.hash_entry** %bucket, align 8
  %12 = getelementptr inbounds %struct.hash_entry* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  %14 = icmp ne i8* %13, null
  br i1 %14, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %15 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %15, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb4:                                              ; preds = %bb5
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 8
  %18 = load void (i8*)** %17, align 8
  %19 = load %struct.hash_entry** %cursor, align 8
  %20 = getelementptr inbounds %struct.hash_entry* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  call void %18(i8* %21) nounwind
  %22 = load %struct.hash_entry** %cursor, align 8
  %23 = getelementptr inbounds %struct.hash_entry* %22, i32 0, i32 1
  %24 = load %struct.hash_entry** %23, align 8
  store %struct.hash_entry* %24, %struct.hash_entry** %cursor, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %25 = load %struct.hash_entry** %cursor, align 8
  %26 = icmp ne %struct.hash_entry* %25, null
  br i1 %26, label %bb4, label %bb6

bb6:                                              ; preds = %bb5, %bb2
  %27 = load %struct.hash_entry** %bucket, align 8
  %28 = getelementptr inbounds %struct.hash_entry* %27, i64 1
  store %struct.hash_entry* %28, %struct.hash_entry** %bucket, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 1
  %31 = load %struct.hash_entry** %30, align 8
  %32 = load %struct.hash_entry** %bucket, align 8
  %33 = icmp ugt %struct.hash_entry* %31, %32
  br i1 %33, label %bb2, label %bb8

bb8:                                              ; preds = %bb7, %bb, %entry
  %34 = load %struct.Hash_table** %table_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 0
  %36 = load %struct.hash_entry** %35, align 8
  store %struct.hash_entry* %36, %struct.hash_entry** %bucket, align 8
  br label %bb13

bb9:                                              ; preds = %bb13
  %37 = load %struct.hash_entry** %bucket, align 8
  %38 = getelementptr inbounds %struct.hash_entry* %37, i32 0, i32 1
  %39 = load %struct.hash_entry** %38, align 8
  store %struct.hash_entry* %39, %struct.hash_entry** %cursor, align 8
  br label %bb11

bb10:                                             ; preds = %bb11
  %40 = load %struct.hash_entry** %cursor, align 8
  %41 = getelementptr inbounds %struct.hash_entry* %40, i32 0, i32 1
  %42 = load %struct.hash_entry** %41, align 8
  store %struct.hash_entry* %42, %struct.hash_entry** %next, align 8
  %43 = load %struct.hash_entry** %cursor, align 8
  %44 = bitcast %struct.hash_entry* %43 to i8*
  call void @free(i8* %44) nounwind
  %45 = load %struct.hash_entry** %next, align 8
  store %struct.hash_entry* %45, %struct.hash_entry** %cursor, align 8
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %46 = load %struct.hash_entry** %cursor, align 8
  %47 = icmp ne %struct.hash_entry* %46, null
  br i1 %47, label %bb10, label %bb12

bb12:                                             ; preds = %bb11
  %48 = load %struct.hash_entry** %bucket, align 8
  %49 = getelementptr inbounds %struct.hash_entry* %48, i64 1
  store %struct.hash_entry* %49, %struct.hash_entry** %bucket, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb8
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 1
  %52 = load %struct.hash_entry** %51, align 8
  %53 = load %struct.hash_entry** %bucket, align 8
  %54 = icmp ugt %struct.hash_entry* %52, %53
  br i1 %54, label %bb9, label %bb14

bb14:                                             ; preds = %bb13
  %55 = load %struct.Hash_table** %table_addr, align 8
  %56 = getelementptr inbounds %struct.Hash_table* %55, i32 0, i32 9
  %57 = load %struct.hash_entry** %56, align 8
  store %struct.hash_entry* %57, %struct.hash_entry** %cursor, align 8
  br label %bb16

bb15:                                             ; preds = %bb16
  %58 = load %struct.hash_entry** %cursor, align 8
  %59 = getelementptr inbounds %struct.hash_entry* %58, i32 0, i32 1
  %60 = load %struct.hash_entry** %59, align 8
  store %struct.hash_entry* %60, %struct.hash_entry** %next, align 8
  %61 = load %struct.hash_entry** %cursor, align 8
  %62 = bitcast %struct.hash_entry* %61 to i8*
  call void @free(i8* %62) nounwind
  %63 = load %struct.hash_entry** %next, align 8
  store %struct.hash_entry* %63, %struct.hash_entry** %cursor, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %64 = load %struct.hash_entry** %cursor, align 8
  %65 = icmp ne %struct.hash_entry* %64, null
  br i1 %65, label %bb15, label %bb17

bb17:                                             ; preds = %bb16
  %66 = load %struct.Hash_table** %table_addr, align 8
  %67 = getelementptr inbounds %struct.Hash_table* %66, i32 0, i32 0
  %68 = load %struct.hash_entry** %67, align 8
  %69 = bitcast %struct.hash_entry* %68 to i8*
  call void @free(i8* %69) nounwind
  %70 = load %struct.Hash_table** %table_addr, align 8
  %71 = bitcast %struct.Hash_table* %70 to i8*
  call void @free(i8* %71) nounwind
  ret void
}

define internal %struct.hash_entry* @allocate_entry(%struct.Hash_table* %table) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %retval = alloca %struct.hash_entry*
  %0 = alloca %struct.hash_entry*
  %new = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 9
  %3 = load %struct.hash_entry** %2, align 8
  %4 = icmp ne %struct.hash_entry* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.Hash_table** %table_addr, align 8
  %6 = getelementptr inbounds %struct.Hash_table* %5, i32 0, i32 9
  %7 = load %struct.hash_entry** %6, align 8
  store %struct.hash_entry* %7, %struct.hash_entry** %new, align 8
  %8 = load %struct.hash_entry** %new, align 8
  %9 = getelementptr inbounds %struct.hash_entry* %8, i32 0, i32 1
  %10 = load %struct.hash_entry** %9, align 8
  %11 = load %struct.Hash_table** %table_addr, align 8
  %12 = getelementptr inbounds %struct.Hash_table* %11, i32 0, i32 9
  store %struct.hash_entry* %10, %struct.hash_entry** %12, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %13 = call noalias i8* @malloc(i64 16) nounwind
  %14 = bitcast i8* %13 to %struct.hash_entry*
  store %struct.hash_entry* %14, %struct.hash_entry** %new, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %15 = load %struct.hash_entry** %new, align 8
  store %struct.hash_entry* %15, %struct.hash_entry** %0, align 8
  %16 = load %struct.hash_entry** %0, align 8
  store %struct.hash_entry* %16, %struct.hash_entry** %retval, align 8
  %retval3 = load %struct.hash_entry** %retval
  ret %struct.hash_entry* %retval3
}

define internal void @free_entry(%struct.Hash_table* %table, %struct.hash_entry* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca %struct.hash_entry*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store %struct.hash_entry* %entry1, %struct.hash_entry** %entry_addr
  %0 = load %struct.hash_entry** %entry_addr, align 8
  %1 = getelementptr inbounds %struct.hash_entry* %0, i32 0, i32 0
  store i8* null, i8** %1, align 8
  %2 = load %struct.Hash_table** %table_addr, align 8
  %3 = getelementptr inbounds %struct.Hash_table* %2, i32 0, i32 9
  %4 = load %struct.hash_entry** %3, align 8
  %5 = load %struct.hash_entry** %entry_addr, align 8
  %6 = getelementptr inbounds %struct.hash_entry* %5, i32 0, i32 1
  store %struct.hash_entry* %4, %struct.hash_entry** %6, align 8
  %7 = load %struct.Hash_table** %table_addr, align 8
  %8 = getelementptr inbounds %struct.Hash_table* %7, i32 0, i32 9
  %9 = load %struct.hash_entry** %entry_addr, align 8
  store %struct.hash_entry* %9, %struct.hash_entry** %8, align 8
  ret void
}

define internal i8* @hash_find_entry(%struct.Hash_table* %table, i8* %entry1, %struct.hash_entry** %bucket_head, i8 zeroext %delete) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %bucket_head_addr = alloca %struct.hash_entry**, align 8
  %delete_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %data = alloca i8*
  %next = alloca %struct.hash_entry*
  %data15 = alloca i8*
  %next18 = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store %struct.hash_entry** %bucket_head, %struct.hash_entry*** %bucket_head_addr
  store i8 %delete, i8* %delete_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call %struct.hash_entry* @safe_hasher(%struct.Hash_table* %1, i8* %2) nounwind
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  %4 = load %struct.hash_entry*** %bucket_head_addr, align 8
  %5 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %5, %struct.hash_entry** %4, align 8
  %6 = load %struct.hash_entry** %bucket, align 8
  %7 = getelementptr inbounds %struct.hash_entry* %6, i32 0, i32 0
  %8 = load i8** %7, align 8
  %9 = icmp eq i8* %8, null
  br i1 %9, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb23

bb2:                                              ; preds = %entry
  %10 = load %struct.hash_entry** %bucket, align 8
  %11 = getelementptr inbounds %struct.hash_entry* %10, i32 0, i32 0
  %12 = load i8** %11, align 8
  %13 = load i8** %entry_addr, align 8
  %14 = icmp eq i8* %12, %13
  br i1 %14, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %15 = load %struct.Hash_table** %table_addr, align 8
  %16 = getelementptr inbounds %struct.Hash_table* %15, i32 0, i32 7
  %17 = load i8 (i8*, i8*)** %16, align 8
  %18 = load %struct.hash_entry** %bucket, align 8
  %19 = getelementptr inbounds %struct.hash_entry* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8** %entry_addr, align 8
  %22 = call zeroext i8 %17(i8* %21, i8* %20) nounwind
  %toBool = icmp ne i8 %22, 0
  br i1 %toBool, label %bb4, label %bb10

bb4:                                              ; preds = %bb3, %bb2
  %23 = load %struct.hash_entry** %bucket, align 8
  %24 = getelementptr inbounds %struct.hash_entry* %23, i32 0, i32 0
  %25 = load i8** %24, align 8
  store i8* %25, i8** %data, align 8
  %26 = load i8* %delete_addr, align 1
  %toBool5 = icmp ne i8 %26, 0
  br i1 %toBool5, label %bb6, label %bb9

bb6:                                              ; preds = %bb4
  %27 = load %struct.hash_entry** %bucket, align 8
  %28 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 1
  %29 = load %struct.hash_entry** %28, align 8
  %30 = icmp ne %struct.hash_entry* %29, null
  %31 = load %struct.hash_entry** %bucket, align 8
  br i1 %30, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %32 = getelementptr inbounds %struct.hash_entry* %31, i32 0, i32 1
  %33 = load %struct.hash_entry** %32, align 8
  store %struct.hash_entry* %33, %struct.hash_entry** %next, align 8
  %34 = load %struct.hash_entry** %bucket, align 8
  %35 = load %struct.hash_entry** %next, align 8
  %36 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 0
  %37 = getelementptr inbounds %struct.hash_entry* %35, i32 0, i32 0
  %38 = load i8** %37, align 8
  store i8* %38, i8** %36, align 8
  %39 = getelementptr inbounds %struct.hash_entry* %34, i32 0, i32 1
  %40 = getelementptr inbounds %struct.hash_entry* %35, i32 0, i32 1
  %41 = load %struct.hash_entry** %40, align 8
  store %struct.hash_entry* %41, %struct.hash_entry** %39, align 8
  %42 = load %struct.Hash_table** %table_addr, align 8
  %43 = load %struct.hash_entry** %next, align 8
  call void @free_entry(%struct.Hash_table* %42, %struct.hash_entry* %43) nounwind
  br label %bb9

bb8:                                              ; preds = %bb6
  %44 = getelementptr inbounds %struct.hash_entry* %31, i32 0, i32 0
  store i8* null, i8** %44, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7, %bb4
  %45 = load i8** %data, align 8
  store i8* %45, i8** %0, align 8
  br label %bb23

bb10:                                             ; preds = %bb3
  %46 = load %struct.hash_entry** %bucket, align 8
  store %struct.hash_entry* %46, %struct.hash_entry** %cursor, align 8
  br label %bb21

bb11:                                             ; preds = %bb21
  %47 = load %struct.hash_entry** %cursor, align 8
  %48 = getelementptr inbounds %struct.hash_entry* %47, i32 0, i32 1
  %49 = load %struct.hash_entry** %48, align 8
  %50 = getelementptr inbounds %struct.hash_entry* %49, i32 0, i32 0
  %51 = load i8** %50, align 8
  %52 = load i8** %entry_addr, align 8
  %53 = icmp eq i8* %51, %52
  br i1 %53, label %bb14, label %bb12

bb12:                                             ; preds = %bb11
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 7
  %56 = load i8 (i8*, i8*)** %55, align 8
  %57 = load %struct.hash_entry** %cursor, align 8
  %58 = getelementptr inbounds %struct.hash_entry* %57, i32 0, i32 1
  %59 = load %struct.hash_entry** %58, align 8
  %60 = getelementptr inbounds %struct.hash_entry* %59, i32 0, i32 0
  %61 = load i8** %60, align 8
  %62 = load i8** %entry_addr, align 8
  %63 = call zeroext i8 %56(i8* %62, i8* %61) nounwind
  %toBool13 = icmp ne i8 %63, 0
  br i1 %toBool13, label %bb14, label %bb20

bb14:                                             ; preds = %bb12, %bb11
  %64 = load %struct.hash_entry** %cursor, align 8
  %65 = getelementptr inbounds %struct.hash_entry* %64, i32 0, i32 1
  %66 = load %struct.hash_entry** %65, align 8
  %67 = getelementptr inbounds %struct.hash_entry* %66, i32 0, i32 0
  %68 = load i8** %67, align 8
  store i8* %68, i8** %data15, align 8
  %69 = load i8* %delete_addr, align 1
  %toBool16 = icmp ne i8 %69, 0
  br i1 %toBool16, label %bb17, label %bb19

bb17:                                             ; preds = %bb14
  %70 = load %struct.hash_entry** %cursor, align 8
  %71 = getelementptr inbounds %struct.hash_entry* %70, i32 0, i32 1
  %72 = load %struct.hash_entry** %71, align 8
  store %struct.hash_entry* %72, %struct.hash_entry** %next18, align 8
  %73 = load %struct.hash_entry** %next18, align 8
  %74 = getelementptr inbounds %struct.hash_entry* %73, i32 0, i32 1
  %75 = load %struct.hash_entry** %74, align 8
  %76 = load %struct.hash_entry** %cursor, align 8
  %77 = getelementptr inbounds %struct.hash_entry* %76, i32 0, i32 1
  store %struct.hash_entry* %75, %struct.hash_entry** %77, align 8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = load %struct.hash_entry** %next18, align 8
  call void @free_entry(%struct.Hash_table* %78, %struct.hash_entry* %79) nounwind
  br label %bb19

bb19:                                             ; preds = %bb17, %bb14
  %80 = load i8** %data15, align 8
  store i8* %80, i8** %0, align 8
  br label %bb23

bb20:                                             ; preds = %bb12
  %81 = load %struct.hash_entry** %cursor, align 8
  %82 = getelementptr inbounds %struct.hash_entry* %81, i32 0, i32 1
  %83 = load %struct.hash_entry** %82, align 8
  store %struct.hash_entry* %83, %struct.hash_entry** %cursor, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb10
  %84 = load %struct.hash_entry** %cursor, align 8
  %85 = getelementptr inbounds %struct.hash_entry* %84, i32 0, i32 1
  %86 = load %struct.hash_entry** %85, align 8
  %87 = icmp ne %struct.hash_entry* %86, null
  br i1 %87, label %bb11, label %bb22

bb22:                                             ; preds = %bb21
  store i8* null, i8** %0, align 8
  br label %bb23

bb23:                                             ; preds = %bb22, %bb19, %bb9, %bb
  %88 = load i8** %0, align 8
  store i8* %88, i8** %retval, align 8
  %retval24 = load i8** %retval
  ret i8* %retval24
}

define internal zeroext i8 @transfer_entries(%struct.Hash_table* %dst, %struct.Hash_table* %src, i8 zeroext %safe) nounwind {
entry:
  %dst_addr = alloca %struct.Hash_table*, align 8
  %src_addr = alloca %struct.Hash_table*, align 8
  %safe_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %bucket = alloca %struct.hash_entry*
  %cursor = alloca %struct.hash_entry*
  %next = alloca %struct.hash_entry*
  %data = alloca i8*
  %new_bucket = alloca %struct.hash_entry*
  %new_entry = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %dst, %struct.Hash_table** %dst_addr
  store %struct.Hash_table* %src, %struct.Hash_table** %src_addr
  store i8 %safe, i8* %safe_addr
  %1 = load %struct.Hash_table** %src_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 0
  %3 = load %struct.hash_entry** %2, align 8
  store %struct.hash_entry* %3, %struct.hash_entry** %bucket, align 8
  br label %bb15

bb:                                               ; preds = %bb15
  %4 = load %struct.hash_entry** %bucket, align 8
  %5 = getelementptr inbounds %struct.hash_entry* %4, i32 0, i32 0
  %6 = load i8** %5, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb1, label %bb14

bb1:                                              ; preds = %bb
  %8 = load %struct.hash_entry** %bucket, align 8
  %9 = getelementptr inbounds %struct.hash_entry* %8, i32 0, i32 1
  %10 = load %struct.hash_entry** %9, align 8
  store %struct.hash_entry* %10, %struct.hash_entry** %cursor, align 8
  br label %bb6

bb2:                                              ; preds = %bb6
  %11 = load %struct.hash_entry** %cursor, align 8
  %12 = getelementptr inbounds %struct.hash_entry* %11, i32 0, i32 0
  %13 = load i8** %12, align 8
  store i8* %13, i8** %data, align 8
  %14 = load %struct.Hash_table** %dst_addr, align 8
  %15 = load i8** %data, align 8
  %16 = call %struct.hash_entry* @safe_hasher(%struct.Hash_table* %14, i8* %15) nounwind
  store %struct.hash_entry* %16, %struct.hash_entry** %new_bucket, align 8
  %17 = load %struct.hash_entry** %cursor, align 8
  %18 = getelementptr inbounds %struct.hash_entry* %17, i32 0, i32 1
  %19 = load %struct.hash_entry** %18, align 8
  store %struct.hash_entry* %19, %struct.hash_entry** %next, align 8
  %20 = load %struct.hash_entry** %new_bucket, align 8
  %21 = getelementptr inbounds %struct.hash_entry* %20, i32 0, i32 0
  %22 = load i8** %21, align 8
  %23 = icmp ne i8* %22, null
  %24 = load %struct.hash_entry** %new_bucket, align 8
  br i1 %23, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %25 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 1
  %26 = load %struct.hash_entry** %25, align 8
  %27 = load %struct.hash_entry** %cursor, align 8
  %28 = getelementptr inbounds %struct.hash_entry* %27, i32 0, i32 1
  store %struct.hash_entry* %26, %struct.hash_entry** %28, align 8
  %29 = load %struct.hash_entry** %new_bucket, align 8
  %30 = getelementptr inbounds %struct.hash_entry* %29, i32 0, i32 1
  %31 = load %struct.hash_entry** %cursor, align 8
  store %struct.hash_entry* %31, %struct.hash_entry** %30, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %32 = getelementptr inbounds %struct.hash_entry* %24, i32 0, i32 0
  %33 = load i8** %data, align 8
  store i8* %33, i8** %32, align 8
  %34 = load %struct.Hash_table** %dst_addr, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 3
  %36 = load i64* %35, align 8
  %37 = add i64 %36, 1
  %38 = load %struct.Hash_table** %dst_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 3
  store i64 %37, i64* %39, align 8
  %40 = load %struct.Hash_table** %dst_addr, align 8
  %41 = load %struct.hash_entry** %cursor, align 8
  call void @free_entry(%struct.Hash_table* %40, %struct.hash_entry* %41) nounwind
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %42 = load %struct.hash_entry** %next, align 8
  store %struct.hash_entry* %42, %struct.hash_entry** %cursor, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %43 = load %struct.hash_entry** %cursor, align 8
  %44 = icmp ne %struct.hash_entry* %43, null
  br i1 %44, label %bb2, label %bb7

bb7:                                              ; preds = %bb6
  %45 = load %struct.hash_entry** %bucket, align 8
  %46 = getelementptr inbounds %struct.hash_entry* %45, i32 0, i32 0
  %47 = load i8** %46, align 8
  store i8* %47, i8** %data, align 8
  %48 = load %struct.hash_entry** %bucket, align 8
  %49 = getelementptr inbounds %struct.hash_entry* %48, i32 0, i32 1
  store %struct.hash_entry* null, %struct.hash_entry** %49, align 8
  %50 = load i8* %safe_addr, align 1
  %toBool = icmp ne i8 %50, 0
  br i1 %toBool, label %bb14, label %bb8

bb8:                                              ; preds = %bb7
  %51 = load %struct.Hash_table** %dst_addr, align 8
  %52 = load i8** %data, align 8
  %53 = call %struct.hash_entry* @safe_hasher(%struct.Hash_table* %51, i8* %52) nounwind
  store %struct.hash_entry* %53, %struct.hash_entry** %new_bucket, align 8
  %54 = load %struct.hash_entry** %new_bucket, align 8
  %55 = getelementptr inbounds %struct.hash_entry* %54, i32 0, i32 0
  %56 = load i8** %55, align 8
  %57 = icmp ne i8* %56, null
  br i1 %57, label %bb9, label %bb12

bb9:                                              ; preds = %bb8
  %58 = load %struct.Hash_table** %dst_addr, align 8
  %59 = call %struct.hash_entry* @allocate_entry(%struct.Hash_table* %58) nounwind
  store %struct.hash_entry* %59, %struct.hash_entry** %new_entry, align 8
  %60 = load %struct.hash_entry** %new_entry, align 8
  %61 = icmp eq %struct.hash_entry* %60, null
  br i1 %61, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store i32 0, i32* %0, align 4
  br label %bb17

bb11:                                             ; preds = %bb9
  %62 = load %struct.hash_entry** %new_entry, align 8
  %63 = getelementptr inbounds %struct.hash_entry* %62, i32 0, i32 0
  %64 = load i8** %data, align 8
  store i8* %64, i8** %63, align 8
  %65 = load %struct.hash_entry** %new_bucket, align 8
  %66 = getelementptr inbounds %struct.hash_entry* %65, i32 0, i32 1
  %67 = load %struct.hash_entry** %66, align 8
  %68 = load %struct.hash_entry** %new_entry, align 8
  %69 = getelementptr inbounds %struct.hash_entry* %68, i32 0, i32 1
  store %struct.hash_entry* %67, %struct.hash_entry** %69, align 8
  %70 = load %struct.hash_entry** %new_bucket, align 8
  %71 = getelementptr inbounds %struct.hash_entry* %70, i32 0, i32 1
  %72 = load %struct.hash_entry** %new_entry, align 8
  store %struct.hash_entry* %72, %struct.hash_entry** %71, align 8
  br label %bb13

bb12:                                             ; preds = %bb8
  %73 = load %struct.hash_entry** %new_bucket, align 8
  %74 = getelementptr inbounds %struct.hash_entry* %73, i32 0, i32 0
  %75 = load i8** %data, align 8
  store i8* %75, i8** %74, align 8
  %76 = load %struct.Hash_table** %dst_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 3
  %78 = load i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = load %struct.Hash_table** %dst_addr, align 8
  %81 = getelementptr inbounds %struct.Hash_table* %80, i32 0, i32 3
  store i64 %79, i64* %81, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %82 = load %struct.hash_entry** %bucket, align 8
  %83 = getelementptr inbounds %struct.hash_entry* %82, i32 0, i32 0
  store i8* null, i8** %83, align 8
  %84 = load %struct.Hash_table** %src_addr, align 8
  %85 = getelementptr inbounds %struct.Hash_table* %84, i32 0, i32 3
  %86 = load i64* %85, align 8
  %87 = sub i64 %86, 1
  %88 = load %struct.Hash_table** %src_addr, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 3
  store i64 %87, i64* %89, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb7, %bb
  %90 = load %struct.hash_entry** %bucket, align 8
  %91 = getelementptr inbounds %struct.hash_entry* %90, i64 1
  store %struct.hash_entry* %91, %struct.hash_entry** %bucket, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %entry
  %92 = load %struct.Hash_table** %src_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 1
  %94 = load %struct.hash_entry** %93, align 8
  %95 = load %struct.hash_entry** %bucket, align 8
  %96 = icmp ugt %struct.hash_entry* %94, %95
  br i1 %96, label %bb, label %bb16

bb16:                                             ; preds = %bb15
  store i32 1, i32* %0, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb10
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval18 = load i32* %retval
  %retval1819 = trunc i32 %retval18 to i8
  ret i8 %retval1819
}

define zeroext i8 @hash_rehash(%struct.Hash_table* %table, i64 %candidate) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %candidate_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %storage = alloca %struct.Hash_table
  %new_table = alloca %struct.Hash_table*
  %new_size = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i64 %candidate, i64* %candidate_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = getelementptr inbounds %struct.Hash_table* %1, i32 0, i32 5
  %3 = load %struct.Hash_tuning** %2, align 8
  %4 = load i64* %candidate_addr, align 8
  %5 = call i64 @compute_bucket_size(i64 %4, %struct.Hash_tuning* %3) nounwind readonly
  store i64 %5, i64* %new_size, align 8
  %6 = load i64* %new_size, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb19

bb1:                                              ; preds = %entry
  %8 = load %struct.Hash_table** %table_addr, align 8
  %9 = getelementptr inbounds %struct.Hash_table* %8, i32 0, i32 2
  %10 = load i64* %9, align 8
  %11 = load i64* %new_size, align 8
  %12 = icmp eq i64 %10, %11
  br i1 %12, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 1, i32* %0, align 4
  br label %bb19

bb3:                                              ; preds = %bb1
  store %struct.Hash_table* %storage, %struct.Hash_table** %new_table, align 8
  %13 = load i64* %new_size, align 8
  %14 = call noalias i8* @calloc(i64 %13, i64 16) nounwind
  %15 = bitcast i8* %14 to %struct.hash_entry*
  %16 = load %struct.Hash_table** %new_table, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 0
  store %struct.hash_entry* %15, %struct.hash_entry** %17, align 8
  %18 = load %struct.Hash_table** %new_table, align 8
  %19 = getelementptr inbounds %struct.Hash_table* %18, i32 0, i32 0
  %20 = load %struct.hash_entry** %19, align 8
  %21 = icmp eq %struct.hash_entry* %20, null
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 0, i32* %0, align 4
  br label %bb19

bb5:                                              ; preds = %bb3
  %22 = load %struct.Hash_table** %new_table, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 2
  %24 = load i64* %new_size, align 8
  store i64 %24, i64* %23, align 8
  %25 = load %struct.Hash_table** %new_table, align 8
  %26 = getelementptr inbounds %struct.Hash_table* %25, i32 0, i32 0
  %27 = load %struct.hash_entry** %26, align 8
  %28 = load i64* %new_size, align 8
  %29 = getelementptr inbounds %struct.hash_entry* %27, i64 %28
  %30 = load %struct.Hash_table** %new_table, align 8
  %31 = getelementptr inbounds %struct.Hash_table* %30, i32 0, i32 1
  store %struct.hash_entry* %29, %struct.hash_entry** %31, align 8
  %32 = load %struct.Hash_table** %new_table, align 8
  %33 = getelementptr inbounds %struct.Hash_table* %32, i32 0, i32 3
  store i64 0, i64* %33, align 8
  %34 = load %struct.Hash_table** %new_table, align 8
  %35 = getelementptr inbounds %struct.Hash_table* %34, i32 0, i32 4
  store i64 0, i64* %35, align 8
  %36 = load %struct.Hash_table** %table_addr, align 8
  %37 = getelementptr inbounds %struct.Hash_table* %36, i32 0, i32 5
  %38 = load %struct.Hash_tuning** %37, align 8
  %39 = load %struct.Hash_table** %new_table, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 5
  store %struct.Hash_tuning* %38, %struct.Hash_tuning** %40, align 8
  %41 = load %struct.Hash_table** %table_addr, align 8
  %42 = getelementptr inbounds %struct.Hash_table* %41, i32 0, i32 6
  %43 = load i64 (i8*, i64)** %42, align 8
  %44 = load %struct.Hash_table** %new_table, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 6
  store i64 (i8*, i64)* %43, i64 (i8*, i64)** %45, align 8
  %46 = load %struct.Hash_table** %table_addr, align 8
  %47 = getelementptr inbounds %struct.Hash_table* %46, i32 0, i32 7
  %48 = load i8 (i8*, i8*)** %47, align 8
  %49 = load %struct.Hash_table** %new_table, align 8
  %50 = getelementptr inbounds %struct.Hash_table* %49, i32 0, i32 7
  store i8 (i8*, i8*)* %48, i8 (i8*, i8*)** %50, align 8
  %51 = load %struct.Hash_table** %table_addr, align 8
  %52 = getelementptr inbounds %struct.Hash_table* %51, i32 0, i32 8
  %53 = load void (i8*)** %52, align 8
  %54 = load %struct.Hash_table** %new_table, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 8
  store void (i8*)* %53, void (i8*)** %55, align 8
  %56 = load %struct.Hash_table** %table_addr, align 8
  %57 = getelementptr inbounds %struct.Hash_table* %56, i32 0, i32 9
  %58 = load %struct.hash_entry** %57, align 8
  %59 = load %struct.Hash_table** %new_table, align 8
  %60 = getelementptr inbounds %struct.Hash_table* %59, i32 0, i32 9
  store %struct.hash_entry* %58, %struct.hash_entry** %60, align 8
  %61 = load %struct.Hash_table** %new_table, align 8
  %62 = load %struct.Hash_table** %table_addr, align 8
  %63 = call zeroext i8 @transfer_entries(%struct.Hash_table* %61, %struct.Hash_table* %62, i8 zeroext 0) nounwind
  %toBool = icmp ne i8 %63, 0
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %64 = load %struct.Hash_table** %table_addr, align 8
  %65 = getelementptr inbounds %struct.Hash_table* %64, i32 0, i32 0
  %66 = load %struct.hash_entry** %65, align 8
  %67 = bitcast %struct.hash_entry* %66 to i8*
  call void @free(i8* %67) nounwind
  %68 = load %struct.Hash_table** %new_table, align 8
  %69 = getelementptr inbounds %struct.Hash_table* %68, i32 0, i32 0
  %70 = load %struct.hash_entry** %69, align 8
  %71 = load %struct.Hash_table** %table_addr, align 8
  %72 = getelementptr inbounds %struct.Hash_table* %71, i32 0, i32 0
  store %struct.hash_entry* %70, %struct.hash_entry** %72, align 8
  %73 = load %struct.Hash_table** %new_table, align 8
  %74 = getelementptr inbounds %struct.Hash_table* %73, i32 0, i32 1
  %75 = load %struct.hash_entry** %74, align 8
  %76 = load %struct.Hash_table** %table_addr, align 8
  %77 = getelementptr inbounds %struct.Hash_table* %76, i32 0, i32 1
  store %struct.hash_entry* %75, %struct.hash_entry** %77, align 8
  %78 = load %struct.Hash_table** %new_table, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 2
  %80 = load i64* %79, align 8
  %81 = load %struct.Hash_table** %table_addr, align 8
  %82 = getelementptr inbounds %struct.Hash_table* %81, i32 0, i32 2
  store i64 %80, i64* %82, align 8
  %83 = load %struct.Hash_table** %new_table, align 8
  %84 = getelementptr inbounds %struct.Hash_table* %83, i32 0, i32 3
  %85 = load i64* %84, align 8
  %86 = load %struct.Hash_table** %table_addr, align 8
  %87 = getelementptr inbounds %struct.Hash_table* %86, i32 0, i32 3
  store i64 %85, i64* %87, align 8
  %88 = load %struct.Hash_table** %new_table, align 8
  %89 = getelementptr inbounds %struct.Hash_table* %88, i32 0, i32 9
  %90 = load %struct.hash_entry** %89, align 8
  %91 = load %struct.Hash_table** %table_addr, align 8
  %92 = getelementptr inbounds %struct.Hash_table* %91, i32 0, i32 9
  store %struct.hash_entry* %90, %struct.hash_entry** %92, align 8
  store i32 1, i32* %0, align 4
  br label %bb19

bb7:                                              ; preds = %bb5
  %93 = load %struct.Hash_table** %new_table, align 8
  %94 = getelementptr inbounds %struct.Hash_table* %93, i32 0, i32 9
  %95 = load %struct.hash_entry** %94, align 8
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 9
  store %struct.hash_entry* %95, %struct.hash_entry** %97, align 8
  %98 = load %struct.Hash_table** %table_addr, align 8
  %99 = load %struct.Hash_table** %new_table, align 8
  %100 = call zeroext i8 @transfer_entries(%struct.Hash_table* %98, %struct.Hash_table* %99, i8 zeroext 1) nounwind
  %toBool8 = icmp ne i8 %100, 0
  %toBool8not = xor i1 %toBool8, true
  %toBool8not9 = zext i1 %toBool8not to i8
  %toBool11 = icmp ne i8 %toBool8not9, 0
  br i1 %toBool11, label %bb17, label %bb12

bb12:                                             ; preds = %bb7
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = load %struct.Hash_table** %new_table, align 8
  %103 = call zeroext i8 @transfer_entries(%struct.Hash_table* %101, %struct.Hash_table* %102, i8 zeroext 0) nounwind
  %toBool13 = icmp ne i8 %103, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb18

bb17:                                             ; preds = %bb12, %bb7
  call void @abort() noreturn nounwind
  unreachable

bb18:                                             ; preds = %bb12
  %104 = load %struct.Hash_table** %new_table, align 8
  %105 = getelementptr inbounds %struct.Hash_table* %104, i32 0, i32 0
  %106 = load %struct.hash_entry** %105, align 8
  %107 = bitcast %struct.hash_entry* %106 to i8*
  call void @free(i8* %107) nounwind
  store i32 0, i32* %0, align 4
  br label %bb19

bb19:                                             ; preds = %bb18, %bb6, %bb4, %bb2, %bb
  %108 = load i32* %0, align 4
  store i32 %108, i32* %retval, align 4
  %retval20 = load i32* %retval
  %retval2021 = trunc i32 %retval20 to i8
  ret i8 %retval2021
}

define i32 @hash_insert_if_absent(%struct.Hash_table* %table, i8* %entry1, i8** %matched_ent) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %matched_ent_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.3 = alloca float
  %0 = alloca i32
  %data = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca float
  %new_entry = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  store i8** %matched_ent, i8*** %matched_ent_addr
  %1 = load i8** %entry_addr, align 8
  %2 = icmp eq i8* %1, null
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = load %struct.Hash_table** %table_addr, align 8
  %4 = load i8** %entry_addr, align 8
  %5 = call i8* @hash_find_entry(%struct.Hash_table* %3, i8* %4, %struct.hash_entry** %bucket, i8 zeroext 0) nounwind
  store i8* %5, i8** %data, align 8
  %6 = load i8** %data, align 8
  %7 = icmp ne i8* %6, null
  br i1 %7, label %bb3, label %bb6

bb3:                                              ; preds = %bb2
  %8 = load i8*** %matched_ent_addr, align 8
  %9 = icmp ne i8** %8, null
  br i1 %9, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %10 = load i8*** %matched_ent_addr, align 8
  %11 = load i8** %data, align 8
  store i8* %11, i8** %10, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb26

bb6:                                              ; preds = %bb2
  %12 = load %struct.Hash_table** %table_addr, align 8
  %13 = getelementptr inbounds %struct.Hash_table* %12, i32 0, i32 3
  %14 = load i64* %13, align 8
  %15 = uitofp i64 %14 to float
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 5
  %18 = load %struct.Hash_tuning** %17, align 8
  %19 = getelementptr inbounds %struct.Hash_tuning* %18, i32 0, i32 2
  %20 = load float* %19, align 4
  %21 = load %struct.Hash_table** %table_addr, align 8
  %22 = getelementptr inbounds %struct.Hash_table* %21, i32 0, i32 2
  %23 = load i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = fmul float %20, %24
  %26 = fcmp ogt float %15, %25
  br i1 %26, label %bb7, label %bb21

bb7:                                              ; preds = %bb6
  %27 = load %struct.Hash_table** %table_addr, align 8
  %28 = call zeroext i8 @check_tuning(%struct.Hash_table* %27) nounwind
  %29 = load %struct.Hash_table** %table_addr, align 8
  %30 = getelementptr inbounds %struct.Hash_table* %29, i32 0, i32 3
  %31 = load i64* %30, align 8
  %32 = uitofp i64 %31 to float
  %33 = load %struct.Hash_table** %table_addr, align 8
  %34 = getelementptr inbounds %struct.Hash_table* %33, i32 0, i32 5
  %35 = load %struct.Hash_tuning** %34, align 8
  %36 = getelementptr inbounds %struct.Hash_tuning* %35, i32 0, i32 2
  %37 = load float* %36, align 4
  %38 = load %struct.Hash_table** %table_addr, align 8
  %39 = getelementptr inbounds %struct.Hash_table* %38, i32 0, i32 2
  %40 = load i64* %39, align 8
  %41 = uitofp i64 %40 to float
  %42 = fmul float %37, %41
  %43 = fcmp ogt float %32, %42
  br i1 %43, label %bb8, label %bb21

bb8:                                              ; preds = %bb7
  %44 = load %struct.Hash_table** %table_addr, align 8
  %45 = getelementptr inbounds %struct.Hash_table* %44, i32 0, i32 5
  %46 = load %struct.Hash_tuning** %45, align 8
  store %struct.Hash_tuning* %46, %struct.Hash_tuning** %tuning, align 8
  %47 = load %struct.Hash_tuning** %tuning, align 8
  %48 = getelementptr inbounds %struct.Hash_tuning* %47, i32 0, i32 4
  %49 = load i8* %48, align 4
  %toBool = icmp ne i8 %49, 0
  %50 = load %struct.Hash_table** %table_addr, align 8
  %51 = getelementptr inbounds %struct.Hash_table* %50, i32 0, i32 2
  %52 = load i64* %51, align 8
  %53 = uitofp i64 %52 to float
  %54 = load %struct.Hash_tuning** %tuning, align 8
  %55 = getelementptr inbounds %struct.Hash_tuning* %54, i32 0, i32 3
  %56 = load float* %55, align 4
  %57 = fmul float %53, %56
  br i1 %toBool, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store float %57, float* %iftmp.3, align 4
  br label %bb11

bb10:                                             ; preds = %bb8
  %58 = load %struct.Hash_tuning** %tuning, align 8
  %59 = getelementptr inbounds %struct.Hash_tuning* %58, i32 0, i32 2
  %60 = load float* %59, align 4
  %61 = fmul float %57, %60
  store float %61, float* %iftmp.3, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9
  %62 = load float* %iftmp.3, align 4
  store float %62, float* %candidate, align 4
  %63 = load float* %candidate, align 4
  %64 = fcmp oge float %63, 0x43F0000000000000
  br i1 %64, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i32 -1, i32* %0, align 4
  br label %bb26

bb13:                                             ; preds = %bb11
  %65 = load float* %candidate, align 4
  %66 = fptoui float %65 to i64
  %67 = load %struct.Hash_table** %table_addr, align 8
  %68 = call zeroext i8 @hash_rehash(%struct.Hash_table* %67, i64 %66) nounwind
  %toBool14 = icmp ne i8 %68, 0
  %toBool14not = xor i1 %toBool14, true
  %toBool14not15 = zext i1 %toBool14not to i8
  %toBool17 = icmp ne i8 %toBool14not15, 0
  br i1 %toBool17, label %bb18, label %bb19

bb18:                                             ; preds = %bb13
  store i32 -1, i32* %0, align 4
  br label %bb26

bb19:                                             ; preds = %bb13
  %69 = load %struct.Hash_table** %table_addr, align 8
  %70 = load i8** %entry_addr, align 8
  %71 = call i8* @hash_find_entry(%struct.Hash_table* %69, i8* %70, %struct.hash_entry** %bucket, i8 zeroext 0) nounwind
  %72 = icmp ne i8* %71, null
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  call void @abort() noreturn nounwind
  unreachable

bb21:                                             ; preds = %bb19, %bb7, %bb6
  %73 = load %struct.hash_entry** %bucket, align 8
  %74 = getelementptr inbounds %struct.hash_entry* %73, i32 0, i32 0
  %75 = load i8** %74, align 8
  %76 = icmp ne i8* %75, null
  br i1 %76, label %bb22, label %bb25

bb22:                                             ; preds = %bb21
  %77 = load %struct.Hash_table** %table_addr, align 8
  %78 = call %struct.hash_entry* @allocate_entry(%struct.Hash_table* %77) nounwind
  store %struct.hash_entry* %78, %struct.hash_entry** %new_entry, align 8
  %79 = load %struct.hash_entry** %new_entry, align 8
  %80 = icmp eq %struct.hash_entry* %79, null
  br i1 %80, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  store i32 -1, i32* %0, align 4
  br label %bb26

bb24:                                             ; preds = %bb22
  %81 = load i8** %entry_addr, align 8
  %82 = load %struct.hash_entry** %new_entry, align 8
  %83 = getelementptr inbounds %struct.hash_entry* %82, i32 0, i32 0
  store i8* %81, i8** %83, align 8
  %84 = load %struct.hash_entry** %bucket, align 8
  %85 = getelementptr inbounds %struct.hash_entry* %84, i32 0, i32 1
  %86 = load %struct.hash_entry** %85, align 8
  %87 = load %struct.hash_entry** %new_entry, align 8
  %88 = getelementptr inbounds %struct.hash_entry* %87, i32 0, i32 1
  store %struct.hash_entry* %86, %struct.hash_entry** %88, align 8
  %89 = load %struct.hash_entry** %bucket, align 8
  %90 = getelementptr inbounds %struct.hash_entry* %89, i32 0, i32 1
  %91 = load %struct.hash_entry** %new_entry, align 8
  store %struct.hash_entry* %91, %struct.hash_entry** %90, align 8
  %92 = load %struct.Hash_table** %table_addr, align 8
  %93 = getelementptr inbounds %struct.Hash_table* %92, i32 0, i32 4
  %94 = load i64* %93, align 8
  %95 = add i64 %94, 1
  %96 = load %struct.Hash_table** %table_addr, align 8
  %97 = getelementptr inbounds %struct.Hash_table* %96, i32 0, i32 4
  store i64 %95, i64* %97, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb25:                                             ; preds = %bb21
  %98 = load %struct.hash_entry** %bucket, align 8
  %99 = load i8** %entry_addr, align 8
  %100 = getelementptr inbounds %struct.hash_entry* %98, i32 0, i32 0
  store i8* %99, i8** %100, align 8
  %101 = load %struct.Hash_table** %table_addr, align 8
  %102 = getelementptr inbounds %struct.Hash_table* %101, i32 0, i32 4
  %103 = load i64* %102, align 8
  %104 = add i64 %103, 1
  %105 = load %struct.Hash_table** %table_addr, align 8
  %106 = getelementptr inbounds %struct.Hash_table* %105, i32 0, i32 4
  store i64 %104, i64* %106, align 8
  %107 = load %struct.Hash_table** %table_addr, align 8
  %108 = getelementptr inbounds %struct.Hash_table* %107, i32 0, i32 3
  %109 = load i64* %108, align 8
  %110 = add i64 %109, 1
  %111 = load %struct.Hash_table** %table_addr, align 8
  %112 = getelementptr inbounds %struct.Hash_table* %111, i32 0, i32 3
  store i64 %110, i64* %112, align 8
  store i32 1, i32* %0, align 4
  br label %bb26

bb26:                                             ; preds = %bb25, %bb24, %bb23, %bb18, %bb12, %bb5
  %113 = load i32* %0, align 4
  store i32 %113, i32* %retval, align 4
  %retval27 = load i32* %retval
  ret i32 %retval27
}

define i8* @hash_insert(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.11 = alloca i8*
  %iftmp.10 = alloca i8*
  %0 = alloca i8*
  %matched_ent = alloca i8*
  %err = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i32 @hash_insert_if_absent(%struct.Hash_table* %1, i8* %2, i8** %matched_ent) nounwind
  store i32 %3, i32* %err, align 4
  %4 = load i32* %err, align 4
  %5 = icmp ne i32 %4, -1
  br i1 %5, label %bb, label %bb5

bb:                                               ; preds = %entry
  %6 = load i32* %err, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  %8 = load i8** %matched_ent, align 8
  store i8* %8, i8** %iftmp.11, align 8
  br label %bb4

bb3:                                              ; preds = %bb
  %9 = load i8** %entry_addr, align 8
  store i8* %9, i8** %iftmp.11, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %10 = load i8** %iftmp.11, align 8
  store i8* %10, i8** %iftmp.10, align 8
  br label %bb6

bb5:                                              ; preds = %entry
  store i8* null, i8** %iftmp.10, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i8** %iftmp.10, align 8
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define i8* @hash_delete(%struct.Hash_table* %table, i8* %entry1) nounwind {
entry:
  %table_addr = alloca %struct.Hash_table*, align 8
  %entry_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.13 = alloca i64
  %0 = alloca i8*
  %data = alloca i8*
  %bucket = alloca %struct.hash_entry*
  %tuning = alloca %struct.Hash_tuning*
  %candidate = alloca i64
  %cursor = alloca %struct.hash_entry*
  %next = alloca %struct.hash_entry*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.Hash_table* %table, %struct.Hash_table** %table_addr
  store i8* %entry1, i8** %entry_addr
  %1 = load %struct.Hash_table** %table_addr, align 8
  %2 = load i8** %entry_addr, align 8
  %3 = call i8* @hash_find_entry(%struct.Hash_table* %1, i8* %2, %struct.hash_entry** %bucket, i8 zeroext 1) nounwind
  store i8* %3, i8** %data, align 8
  %4 = load i8** %data, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb18

bb2:                                              ; preds = %entry
  %6 = load %struct.Hash_table** %table_addr, align 8
  %7 = getelementptr inbounds %struct.Hash_table* %6, i32 0, i32 4
  %8 = load i64* %7, align 8
  %9 = sub i64 %8, 1
  %10 = load %struct.Hash_table** %table_addr, align 8
  %11 = getelementptr inbounds %struct.Hash_table* %10, i32 0, i32 4
  store i64 %9, i64* %11, align 8
  %12 = load %struct.hash_entry** %bucket, align 8
  %13 = getelementptr inbounds %struct.hash_entry* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %bb3, label %bb17

bb3:                                              ; preds = %bb2
  %16 = load %struct.Hash_table** %table_addr, align 8
  %17 = getelementptr inbounds %struct.Hash_table* %16, i32 0, i32 3
  %18 = load i64* %17, align 8
  %19 = sub i64 %18, 1
  %20 = load %struct.Hash_table** %table_addr, align 8
  %21 = getelementptr inbounds %struct.Hash_table* %20, i32 0, i32 3
  store i64 %19, i64* %21, align 8
  %22 = load %struct.Hash_table** %table_addr, align 8
  %23 = getelementptr inbounds %struct.Hash_table* %22, i32 0, i32 3
  %24 = load i64* %23, align 8
  %25 = uitofp i64 %24 to float
  %26 = load %struct.Hash_table** %table_addr, align 8
  %27 = getelementptr inbounds %struct.Hash_table* %26, i32 0, i32 5
  %28 = load %struct.Hash_tuning** %27, align 8
  %29 = getelementptr inbounds %struct.Hash_tuning* %28, i32 0, i32 0
  %30 = load float* %29, align 4
  %31 = load %struct.Hash_table** %table_addr, align 8
  %32 = getelementptr inbounds %struct.Hash_table* %31, i32 0, i32 2
  %33 = load i64* %32, align 8
  %34 = uitofp i64 %33 to float
  %35 = fmul float %30, %34
  %36 = fcmp olt float %25, %35
  br i1 %36, label %bb4, label %bb17

bb4:                                              ; preds = %bb3
  %37 = load %struct.Hash_table** %table_addr, align 8
  %38 = call zeroext i8 @check_tuning(%struct.Hash_table* %37) nounwind
  %39 = load %struct.Hash_table** %table_addr, align 8
  %40 = getelementptr inbounds %struct.Hash_table* %39, i32 0, i32 3
  %41 = load i64* %40, align 8
  %42 = uitofp i64 %41 to float
  %43 = load %struct.Hash_table** %table_addr, align 8
  %44 = getelementptr inbounds %struct.Hash_table* %43, i32 0, i32 5
  %45 = load %struct.Hash_tuning** %44, align 8
  %46 = getelementptr inbounds %struct.Hash_tuning* %45, i32 0, i32 0
  %47 = load float* %46, align 4
  %48 = load %struct.Hash_table** %table_addr, align 8
  %49 = getelementptr inbounds %struct.Hash_table* %48, i32 0, i32 2
  %50 = load i64* %49, align 8
  %51 = uitofp i64 %50 to float
  %52 = fmul float %47, %51
  %53 = fcmp olt float %42, %52
  br i1 %53, label %bb5, label %bb17

bb5:                                              ; preds = %bb4
  %54 = load %struct.Hash_table** %table_addr, align 8
  %55 = getelementptr inbounds %struct.Hash_table* %54, i32 0, i32 5
  %56 = load %struct.Hash_tuning** %55, align 8
  store %struct.Hash_tuning* %56, %struct.Hash_tuning** %tuning, align 8
  %57 = load %struct.Hash_tuning** %tuning, align 8
  %58 = getelementptr inbounds %struct.Hash_tuning* %57, i32 0, i32 4
  %59 = load i8* %58, align 4
  %toBool = icmp ne i8 %59, 0
  %60 = load %struct.Hash_table** %table_addr, align 8
  %61 = getelementptr inbounds %struct.Hash_table* %60, i32 0, i32 2
  %62 = load i64* %61, align 8
  %63 = uitofp i64 %62 to float
  %64 = load %struct.Hash_tuning** %tuning, align 8
  %65 = getelementptr inbounds %struct.Hash_tuning* %64, i32 0, i32 1
  %66 = load float* %65, align 4
  %67 = fmul float %63, %66
  br i1 %toBool, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %68 = fptoui float %67 to i64
  store i64 %68, i64* %iftmp.13, align 8
  br label %bb8

bb7:                                              ; preds = %bb5
  %69 = load %struct.Hash_tuning** %tuning, align 8
  %70 = getelementptr inbounds %struct.Hash_tuning* %69, i32 0, i32 2
  %71 = load float* %70, align 4
  %72 = fmul float %67, %71
  %73 = fptoui float %72 to i64
  store i64 %73, i64* %iftmp.13, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %74 = load i64* %iftmp.13, align 8
  store i64 %74, i64* %candidate, align 8
  %75 = load %struct.Hash_table** %table_addr, align 8
  %76 = load i64* %candidate, align 8
  %77 = call zeroext i8 @hash_rehash(%struct.Hash_table* %75, i64 %76) nounwind
  %toBool9 = icmp ne i8 %77, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb17

bb13:                                             ; preds = %bb8
  %78 = load %struct.Hash_table** %table_addr, align 8
  %79 = getelementptr inbounds %struct.Hash_table* %78, i32 0, i32 9
  %80 = load %struct.hash_entry** %79, align 8
  store %struct.hash_entry* %80, %struct.hash_entry** %cursor, align 8
  br label %bb15

bb14:                                             ; preds = %bb15
  %81 = load %struct.hash_entry** %cursor, align 8
  %82 = getelementptr inbounds %struct.hash_entry* %81, i32 0, i32 1
  %83 = load %struct.hash_entry** %82, align 8
  store %struct.hash_entry* %83, %struct.hash_entry** %next, align 8
  %84 = load %struct.hash_entry** %cursor, align 8
  %85 = bitcast %struct.hash_entry* %84 to i8*
  call void @free(i8* %85) nounwind
  %86 = load %struct.hash_entry** %next, align 8
  store %struct.hash_entry* %86, %struct.hash_entry** %cursor, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %87 = load %struct.hash_entry** %cursor, align 8
  %88 = icmp ne %struct.hash_entry* %87, null
  br i1 %88, label %bb14, label %bb16

bb16:                                             ; preds = %bb15
  %89 = load %struct.Hash_table** %table_addr, align 8
  %90 = getelementptr inbounds %struct.Hash_table* %89, i32 0, i32 9
  store %struct.hash_entry* null, %struct.hash_entry** %90, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb8, %bb4, %bb3, %bb2
  %91 = load i8** %data, align 8
  store i8* %91, i8** %0, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb
  %92 = load i8** %0, align 8
  store i8* %92, i8** %retval, align 8
  %retval19 = load i8** %retval
  ret i8* %retval19
}

define i64 @triple_hash(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 0
  %5 = load i8** %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %7 = call i64 @hash_pjw(i8* %5, i64 %6) nounwind readonly
  store i64 %7, i64* %tmp, align 8
  %8 = load %struct.F_triple** %p, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = load i64* %tmp, align 8
  %12 = xor i64 %10, %11
  %13 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %13 to i64
  %14 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %15 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %15, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %16 = urem i64 %12, %13
  store i64 %16, i64* %0, align 8
  %17 = load i64* %0, align 8
  store i64 %17, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @triple_hash_no_name(i8* %x, i64 %table_size) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %p, align 8
  %3 = load %struct.F_triple** %p, align 8
  %4 = getelementptr inbounds %struct.F_triple* %3, i32 0, i32 1
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i8 @triple_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb6, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb6, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call zeroext i8 @same_name(i8* %24, i8* %21) nounwind
  %toBool = icmp ne i8 %25, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb6, label %bb5

bb5:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.0, align 4
  br label %bb7

bb6:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %iftmp.0, align 4
  %27 = trunc i32 %26 to i8
  %28 = zext i8 %27 to i32
  store i32 %28, i32* %0, align 4
  %29 = load i32* %0, align 4
  store i32 %29, i32* %retval, align 4
  %retval8 = load i32* %retval
  %retval89 = trunc i32 %retval8 to i8
  ret i8 %retval89
}

define zeroext i8 @triple_compare_ino_str(i8* %x, i8* %y) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %a = alloca %struct.F_triple*
  %b = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.F_triple*
  store %struct.F_triple* %2, %struct.F_triple** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.F_triple*
  store %struct.F_triple* %4, %struct.F_triple** %b, align 8
  %5 = load %struct.F_triple** %a, align 8
  %6 = getelementptr inbounds %struct.F_triple* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.F_triple** %b, align 8
  %9 = getelementptr inbounds %struct.F_triple* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp ne i64 %7, %10
  br i1 %11, label %bb3, label %bb

bb:                                               ; preds = %entry
  %12 = load %struct.F_triple** %a, align 8
  %13 = getelementptr inbounds %struct.F_triple* %12, i32 0, i32 2
  %14 = load i64* %13, align 8
  %15 = load %struct.F_triple** %b, align 8
  %16 = getelementptr inbounds %struct.F_triple* %15, i32 0, i32 2
  %17 = load i64* %16, align 8
  %18 = icmp ne i64 %14, %17
  br i1 %18, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %19 = load %struct.F_triple** %b, align 8
  %20 = getelementptr inbounds %struct.F_triple* %19, i32 0, i32 0
  %21 = load i8** %20, align 8
  %22 = load %struct.F_triple** %a, align 8
  %23 = getelementptr inbounds %struct.F_triple* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = call i32 @strcmp(i8* %24, i8* %21) nounwind readonly
  %26 = icmp ne i32 %25, 0
  br i1 %26, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  store i32 1, i32* %iftmp.1, align 4
  br label %bb4

bb3:                                              ; preds = %bb1, %bb, %entry
  store i32 0, i32* %iftmp.1, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %27 = load i32* %iftmp.1, align 4
  %28 = trunc i32 %27 to i8
  %29 = zext i8 %28 to i32
  store i32 %29, i32* %0, align 4
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define void @triple_free(i8* %x) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %a = alloca %struct.F_triple*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  %0 = load i8** %x_addr, align 8
  %1 = bitcast i8* %0 to %struct.F_triple*
  store %struct.F_triple* %1, %struct.F_triple** %a, align 8
  %2 = load %struct.F_triple** %a, align 8
  %3 = getelementptr inbounds %struct.F_triple* %2, i32 0, i32 0
  %4 = load i8** %3, align 8
  call void @free(i8* %4) nounwind
  %5 = load %struct.F_triple** %a, align 8
  %6 = bitcast %struct.F_triple* %5 to i8*
  call void @free(i8* %6) nounwind
  ret void
}

define void @set_program_name(i8* %argv0) nounwind {
entry:
  %argv0_addr = alloca i8*, align 8
  %iftmp.2 = alloca i8*
  %slash = alloca i8*
  %base = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %argv0, i8** %argv0_addr
  %0 = load i8** %argv0_addr, align 8
  %1 = icmp eq i8* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8
  %3 = bitcast %struct.FILE* %2 to i8*
  %4 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([56 x i8]* @.str280, i64 0, i64 0), i64 1, i64 55, i8* %3) nounwind
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = load i8** %argv0_addr, align 8
  %6 = call i8* @strrchr(i8* %5, i32 47) nounwind readonly
  store i8* %6, i8** %slash, align 8
  %7 = load i8** %slash, align 8
  %8 = icmp ne i8* %7, null
  br i1 %8, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %9 = load i8** %slash, align 8
  %10 = getelementptr inbounds i8* %9, i64 1
  store i8* %10, i8** %iftmp.2, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %11 = load i8** %argv0_addr, align 8
  store i8* %11, i8** %iftmp.2, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %12 = load i8** %iftmp.2, align 8
  store i8* %12, i8** %base, align 8
  %13 = load i8** %base, align 8
  %14 = ptrtoint i8* %13 to i64
  %15 = load i8** %argv0_addr, align 8
  %16 = ptrtoint i8* %15 to i64
  %17 = sub nsw i64 %14, %16
  %18 = icmp sgt i64 %17, 6
  br i1 %18, label %bb5, label %bb8

bb5:                                              ; preds = %bb4
  %19 = load i8** %base, align 8
  %20 = getelementptr inbounds i8* %19, i64 -7
  %21 = call i32 @strncmp(i8* %20, i8* getelementptr inbounds ([8 x i8]* @.str1281, i64 0, i64 0), i64 7) nounwind readonly
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %23 = load i8** %base, align 8
  store i8* %23, i8** %argv0_addr, align 8
  %24 = load i8** %base, align 8
  %25 = call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([4 x i8]* @.str2282, i64 0, i64 0), i64 3) nounwind readonly
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %27 = load i8** %base, align 8
  %28 = getelementptr inbounds i8* %27, i64 3
  store i8* %28, i8** %argv0_addr, align 8
  %29 = load i8** %argv0_addr, align 8
  store i8* %29, i8** @program_invocation_short_name, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  %30 = load i8** %argv0_addr, align 8
  store i8* %30, i8** @program_name, align 8
  %31 = load i8** %argv0_addr, align 8
  store i8* %31, i8** @program_invocation_name, align 8
  ret void
}

define internal zeroext i8 @mbsstr_trimmed_wordbounded(i8* %string, i8* %sub) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %sub_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.24 = alloca i32
  %iftmp.23 = alloca i32
  %iftmp.22 = alloca i32
  %iftmp.21 = alloca i32
  %iftmp.20 = alloca i32
  %tsub = alloca i8*
  %found = alloca i8
  %tsub_in_string = alloca i8*
  %string_iter = alloca %struct.mbui_iterator_t
  %word_boundary_before = alloca i8
  %word_boundary_after = alloca i8
  %last_char_before_tsub = alloca %struct.mbchar
  %tsub_iter = alloca %struct.mbui_iterator_t
  %first_char_after_tsub = alloca %struct.mbchar
  %word_boundary_before69 = alloca i8
  %p = alloca i8*
  %word_boundary_after70 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i8* %sub, i8** %sub_addr
  %1 = load i8** %sub_addr, align 8
  %2 = call i8* @trim2(i8* %1, i32 2) nounwind
  store i8* %2, i8** %tsub, align 8
  store i8 0, i8* %found, align 1
  br label %bb83

bb:                                               ; preds = %bb83
  %3 = load i8** %string_addr, align 8
  %4 = load i8** %tsub, align 8
  %5 = call i8* @mbsstr(i8* %3, i8* %4) nounwind readonly
  store i8* %5, i8** %tsub_in_string, align 8
  %6 = load i8** %tsub_in_string, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb84, label %bb1

bb1:                                              ; preds = %bb
  %8 = call i64 @_stdlib_mb_cur_max() nounwind
  %9 = icmp ugt i64 %8, 1
  br i1 %9, label %bb2, label %bb68

bb2:                                              ; preds = %bb1
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %11 = getelementptr inbounds %struct.mbchar* %10, i32 0, i32 0
  %12 = load i8** %string_addr, align 8
  store i8* %12, i8** %11, align 8
  %13 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %15 = bitcast %struct.mbstate_t* %14 to i8*
  %16 = call i8* @memset(i8* %15, i32 0, i64 8)
  %17 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %17, align 4
  store i8 1, i8* %word_boundary_before, align 1
  %18 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8** %tsub_in_string, align 8
  %22 = icmp ult i8* %20, %21
  br i1 %22, label %bb3, label %bb18

bb3:                                              ; preds = %bb12, %bb2
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %24 = getelementptr inbounds %struct.mbchar* %23, i32 0, i32 2
  %25 = load i8* %24, align 8
  %toBool = icmp ne i8 %25, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot4 = zext i1 %toBoolnot to i8
  %toBool6 = icmp ne i8 %toBoolnot4, 0
  br i1 %toBool6, label %bb8, label %bb7

bb7:                                              ; preds = %bb3
  %26 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 3
  %28 = load i32* %27, align 4
  %29 = icmp ne i32 %28, 0
  br i1 %29, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb3
  store i32 1, i32* %iftmp.20, align 4
  br label %bb10

bb9:                                              ; preds = %bb7
  store i32 0, i32* %iftmp.20, align 4
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %30 = load i32* %iftmp.20, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  call void @abort() noreturn nounwind
  unreachable

bb12:                                             ; preds = %bb10
  %32 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %last_char_before_tsub13 = bitcast %struct.mbchar* %last_char_before_tsub to i8*
  %33 = bitcast %struct.mbchar* %32 to i8*
  %34 = call i8* @memcpy(i8* %last_char_before_tsub13, i8* %33, i64 48)
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %36 = getelementptr inbounds %struct.mbchar* %35, i32 0, i32 0
  %37 = load i8** %36, align 8
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 1
  %40 = load i64* %39, align 8
  %41 = getelementptr inbounds i8* %37, i64 %40
  %42 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %43 = getelementptr inbounds %struct.mbchar* %42, i32 0, i32 0
  store i8* %41, i8** %43, align 8
  %44 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %44, align 4
  %45 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %46 = getelementptr inbounds %struct.mbchar* %45, i32 0, i32 0
  %47 = load i8** %46, align 8
  %48 = load i8** %tsub_in_string, align 8
  %49 = icmp ult i8* %47, %48
  br i1 %49, label %bb3, label %bb14

bb14:                                             ; preds = %bb12
  %50 = getelementptr inbounds %struct.mbchar* %last_char_before_tsub, i32 0, i32 2
  %51 = load i8* %50, align 8
  %toBool15 = icmp ne i8 %51, 0
  br i1 %toBool15, label %bb16, label %bb18

bb16:                                             ; preds = %bb14
  %52 = getelementptr inbounds %struct.mbchar* %last_char_before_tsub, i32 0, i32 3
  %53 = load i32* %52, align 4
  %54 = call i32 @iswalnum(i32 %53) nounwind readonly
  %55 = icmp ne i32 %54, 0
  br i1 %55, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  store i8 0, i8* %word_boundary_before, align 1
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb14, %bb2
  %56 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %57 = getelementptr inbounds %struct.mbchar* %56, i32 0, i32 0
  %58 = load i8** %tsub_in_string, align 8
  store i8* %58, i8** %57, align 8
  %59 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %59, align 8
  %60 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %61 = bitcast %struct.mbstate_t* %60 to i8*
  %62 = call i8* @memset(i8* %61, i32 0, i64 8)
  %63 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %63, align 4
  %64 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %65 = getelementptr inbounds %struct.mbchar* %64, i32 0, i32 0
  %66 = load i8** %tsub, align 8
  store i8* %66, i8** %65, align 8
  %67 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 0
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 1
  %69 = bitcast %struct.mbstate_t* %68 to i8*
  %70 = call i8* @memset(i8* %69, i32 0, i64 8)
  %71 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 2
  store i8 0, i8* %71, align 4
  br label %bb30

bb19:                                             ; preds = %bb38
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 2
  %74 = load i8* %73, align 8
  %toBool20 = icmp ne i8 %74, 0
  %toBool20not = xor i1 %toBool20, true
  %toBool20not21 = zext i1 %toBool20not to i8
  %toBool23 = icmp ne i8 %toBool20not21, 0
  br i1 %toBool23, label %bb25, label %bb24

bb24:                                             ; preds = %bb19
  %75 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 3
  %77 = load i32* %76, align 4
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %bb25, label %bb26

bb25:                                             ; preds = %bb24, %bb19
  store i32 1, i32* %iftmp.21, align 4
  br label %bb27

bb26:                                             ; preds = %bb24
  store i32 0, i32* %iftmp.21, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %79 = load i32* %iftmp.21, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  call void @abort() noreturn nounwind
  unreachable

bb29:                                             ; preds = %bb27
  %81 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 0
  %83 = load i8** %82, align 8
  %84 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 1
  %86 = load i64* %85, align 8
  %87 = getelementptr inbounds i8* %83, i64 %86
  %88 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 0
  store i8* %87, i8** %89, align 8
  %90 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %92 = getelementptr inbounds %struct.mbchar* %91, i32 0, i32 0
  %93 = load i8** %92, align 8
  %94 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %95 = getelementptr inbounds %struct.mbchar* %94, i32 0, i32 1
  %96 = load i64* %95, align 8
  %97 = getelementptr inbounds i8* %93, i64 %96
  %98 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %99 = getelementptr inbounds %struct.mbchar* %98, i32 0, i32 0
  store i8* %97, i8** %99, align 8
  %100 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 2
  store i8 0, i8* %100, align 4
  br label %bb30

bb30:                                             ; preds = %bb29, %bb18
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %tsub_iter) nounwind
  %101 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %102 = getelementptr inbounds %struct.mbchar* %101, i32 0, i32 2
  %103 = load i8* %102, align 8
  %toBool31 = icmp ne i8 %103, 0
  %toBool31not = xor i1 %toBool31, true
  %toBool31not32 = zext i1 %toBool31not to i8
  %toBool34 = icmp ne i8 %toBool31not32, 0
  br i1 %toBool34, label %bb36, label %bb35

bb35:                                             ; preds = %bb30
  %104 = getelementptr inbounds %struct.mbui_iterator_t* %tsub_iter, i32 0, i32 3
  %105 = getelementptr inbounds %struct.mbchar* %104, i32 0, i32 3
  %106 = load i32* %105, align 4
  %107 = icmp ne i32 %106, 0
  br i1 %107, label %bb36, label %bb37

bb36:                                             ; preds = %bb35, %bb30
  store i32 1, i32* %iftmp.22, align 4
  br label %bb38

bb37:                                             ; preds = %bb35
  store i32 0, i32* %iftmp.22, align 4
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %108 = load i32* %iftmp.22, align 4
  %109 = icmp ne i32 %108, 0
  br i1 %109, label %bb19, label %bb39

bb39:                                             ; preds = %bb38
  store i8 1, i8* %word_boundary_after, align 1
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %110 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %111 = getelementptr inbounds %struct.mbchar* %110, i32 0, i32 2
  %112 = load i8* %111, align 8
  %toBool40 = icmp ne i8 %112, 0
  %toBool40not = xor i1 %toBool40, true
  %toBool40not41 = zext i1 %toBool40not to i8
  %toBool43 = icmp ne i8 %toBool40not41, 0
  br i1 %toBool43, label %bb45, label %bb44

bb44:                                             ; preds = %bb39
  %113 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %114 = getelementptr inbounds %struct.mbchar* %113, i32 0, i32 3
  %115 = load i32* %114, align 4
  %116 = icmp ne i32 %115, 0
  br i1 %116, label %bb45, label %bb46

bb45:                                             ; preds = %bb44, %bb39
  store i32 1, i32* %iftmp.23, align 4
  br label %bb47

bb46:                                             ; preds = %bb44
  store i32 0, i32* %iftmp.23, align 4
  br label %bb47

bb47:                                             ; preds = %bb46, %bb45
  %117 = load i32* %iftmp.23, align 4
  %118 = icmp ne i32 %117, 0
  br i1 %118, label %bb48, label %bb53

bb48:                                             ; preds = %bb47
  %119 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %first_char_after_tsub49 = bitcast %struct.mbchar* %first_char_after_tsub to i8*
  %120 = bitcast %struct.mbchar* %119 to i8*
  %121 = call i8* @memcpy(i8* %first_char_after_tsub49, i8* %120, i64 48)
  %122 = getelementptr inbounds %struct.mbchar* %first_char_after_tsub, i32 0, i32 2
  %123 = load i8* %122, align 8
  %toBool50 = icmp ne i8 %123, 0
  br i1 %toBool50, label %bb51, label %bb53

bb51:                                             ; preds = %bb48
  %124 = getelementptr inbounds %struct.mbchar* %first_char_after_tsub, i32 0, i32 3
  %125 = load i32* %124, align 4
  %126 = call i32 @iswalnum(i32 %125) nounwind readonly
  %127 = icmp ne i32 %126, 0
  br i1 %127, label %bb52, label %bb53

bb52:                                             ; preds = %bb51
  store i8 0, i8* %word_boundary_after, align 1
  br label %bb53

bb53:                                             ; preds = %bb52, %bb51, %bb48, %bb47
  %128 = load i8* %word_boundary_before, align 1
  %toBool54 = icmp ne i8 %128, 0
  br i1 %toBool54, label %bb55, label %bb58

bb55:                                             ; preds = %bb53
  %129 = load i8* %word_boundary_after, align 1
  %toBool56 = icmp ne i8 %129, 0
  br i1 %toBool56, label %bb57, label %bb58

bb57:                                             ; preds = %bb55
  store i8 1, i8* %found, align 1
  br label %bb84

bb58:                                             ; preds = %bb55, %bb53
  %130 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %131 = getelementptr inbounds %struct.mbchar* %130, i32 0, i32 0
  %132 = load i8** %tsub_in_string, align 8
  store i8* %132, i8** %131, align 8
  %133 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 0
  store i8 0, i8* %133, align 8
  %134 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 1
  %135 = bitcast %struct.mbstate_t* %134 to i8*
  %136 = call i8* @memset(i8* %135, i32 0, i64 8)
  %137 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 2
  store i8 0, i8* %137, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %string_iter) nounwind
  %138 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %139 = getelementptr inbounds %struct.mbchar* %138, i32 0, i32 2
  %140 = load i8* %139, align 8
  %toBool59 = icmp ne i8 %140, 0
  %toBool59not = xor i1 %toBool59, true
  %toBool59not60 = zext i1 %toBool59not to i8
  %toBool62 = icmp ne i8 %toBool59not60, 0
  br i1 %toBool62, label %bb64, label %bb63

bb63:                                             ; preds = %bb58
  %141 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %142 = getelementptr inbounds %struct.mbchar* %141, i32 0, i32 3
  %143 = load i32* %142, align 4
  %144 = icmp ne i32 %143, 0
  br i1 %144, label %bb64, label %bb65

bb64:                                             ; preds = %bb63, %bb58
  store i32 1, i32* %iftmp.24, align 4
  br label %bb66

bb65:                                             ; preds = %bb63
  store i32 0, i32* %iftmp.24, align 4
  br label %bb66

bb66:                                             ; preds = %bb65, %bb64
  %145 = load i32* %iftmp.24, align 4
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %bb84, label %bb67

bb67:                                             ; preds = %bb66
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %string_iter, i32 0, i32 3
  %148 = getelementptr inbounds %struct.mbchar* %147, i32 0, i32 1
  %149 = load i64* %148, align 8
  %150 = load i8** %tsub_in_string, align 8
  %151 = getelementptr inbounds i8* %150, i64 %149
  store i8* %151, i8** %string_addr, align 8
  br label %bb83

bb68:                                             ; preds = %bb1
  store i8 1, i8* %word_boundary_before69, align 1
  %152 = load i8** %string_addr, align 8
  %153 = load i8** %tsub_in_string, align 8
  %154 = icmp ult i8* %152, %153
  br i1 %154, label %bb71, label %bb73

bb71:                                             ; preds = %bb68
  %155 = call i16** @__ctype_b_loc() nounwind readnone
  %156 = load i16** %155, align 8
  %157 = load i8** %tsub_in_string, align 8
  %158 = getelementptr inbounds i8* %157, i64 -1
  %159 = load i8* %158, align 1
  %160 = zext i8 %159 to i32
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i16* %156, i64 %161
  %163 = load i16* %162, align 1
  %164 = zext i16 %163 to i32
  %165 = and i32 %164, 8
  %166 = icmp ne i32 %165, 0
  br i1 %166, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  store i8 0, i8* %word_boundary_before69, align 1
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71, %bb68
  %167 = load i8** %tsub, align 8
  %168 = call i64 @strlen(i8* %167) nounwind readonly
  %169 = load i8** %tsub_in_string, align 8
  %170 = getelementptr inbounds i8* %169, i64 %168
  store i8* %170, i8** %p, align 8
  store i8 1, i8* %word_boundary_after70, align 1
  %171 = load i8** %p, align 8
  %172 = load i8* %171, align 1
  %173 = icmp ne i8 %172, 0
  br i1 %173, label %bb74, label %bb76

bb74:                                             ; preds = %bb73
  %174 = call i16** @__ctype_b_loc() nounwind readnone
  %175 = load i16** %174, align 8
  %176 = load i8** %p, align 8
  %177 = load i8* %176, align 1
  %178 = zext i8 %177 to i32
  %179 = sext i32 %178 to i64
  %180 = getelementptr inbounds i16* %175, i64 %179
  %181 = load i16* %180, align 1
  %182 = zext i16 %181 to i32
  %183 = and i32 %182, 8
  %184 = icmp ne i32 %183, 0
  br i1 %184, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  store i8 0, i8* %word_boundary_after70, align 1
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74, %bb73
  %185 = load i8* %word_boundary_before69, align 1
  %toBool77 = icmp ne i8 %185, 0
  br i1 %toBool77, label %bb78, label %bb81

bb78:                                             ; preds = %bb76
  %186 = load i8* %word_boundary_after70, align 1
  %toBool79 = icmp ne i8 %186, 0
  br i1 %toBool79, label %bb80, label %bb81

bb80:                                             ; preds = %bb78
  store i8 1, i8* %found, align 1
  br label %bb84

bb81:                                             ; preds = %bb78, %bb76
  %187 = load i8** %tsub_in_string, align 8
  %188 = load i8* %187, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %bb84, label %bb82

bb82:                                             ; preds = %bb81
  %190 = load i8** %tsub_in_string, align 8
  %191 = getelementptr inbounds i8* %190, i64 1
  store i8* %191, i8** %string_addr, align 8
  br label %bb83

bb83:                                             ; preds = %bb82, %bb67, %entry
  %192 = load i8** %string_addr, align 8
  %193 = load i8* %192, align 1
  %194 = icmp ne i8 %193, 0
  br i1 %194, label %bb, label %bb84

bb84:                                             ; preds = %bb83, %bb81, %bb80, %bb66, %bb57, %bb
  %195 = load i8** %tsub, align 8
  call void @free(i8* %195) nounwind
  %196 = load i8* %found, align 1
  %197 = zext i8 %196 to i32
  store i32 %197, i32* %0, align 4
  %198 = load i32* %0, align 4
  store i32 %198, i32* %retval, align 4
  %retval85 = load i32* %retval
  %retval8586 = trunc i32 %retval85 to i8
  ret i8 %retval8586
}

declare i16** @__ctype_b_loc() nounwind readnone

define i8* @proper_name(i8* %name) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %translation = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = load i8** %translation, align 8
  %4 = load i8** %name_addr, align 8
  %5 = icmp ne i8* %3, %4
  br i1 %5, label %bb, label %bb3

bb:                                               ; preds = %entry
  %6 = load i8** %translation, align 8
  %7 = load i8** %name_addr, align 8
  %8 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %6, i8* %7) nounwind
  %toBool = icmp ne i8 %8, 0
  %9 = load i8** %translation, align 8
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i8* %9, i8** %0, align 8
  br label %bb4

bb2:                                              ; preds = %bb
  %10 = call i64 @strlen(i8* %9) nounwind readonly
  %11 = load i8** %name_addr, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  %13 = add i64 %10, %12
  %14 = add i64 %13, 4
  %15 = call noalias i8* @xmalloc(i64 %14) nounwind
  store i8* %15, i8** %result, align 8
  %16 = load i8** %result, align 8
  %17 = load i8** %translation, align 8
  %18 = load i8** %name_addr, align 8
  %19 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %16, i8* noalias getelementptr inbounds ([8 x i8]* @.str4288, i64 0, i64 0), i8* %17, i8* %18) nounwind
  %20 = load i8** %result, align 8
  store i8* %20, i8** %0, align 8
  br label %bb4

bb3:                                              ; preds = %entry
  %21 = load i8** %name_addr, align 8
  store i8* %21, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb1
  %22 = load i8** %0, align 8
  store i8* %22, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define i8* @proper_name_utf8(i8* %name_ascii, i8* %name_utf8) nounwind {
entry:
  %name_ascii_addr = alloca i8*, align 8
  %name_utf8_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.27 = alloca i8*
  %iftmp.25 = alloca i8*
  %translation = alloca i8*
  %locale_code = alloca i8*
  %alloc_name_converted = alloca i8*
  %alloc_name_converted_translit = alloca i8*
  %name_converted = alloca i8*
  %name_converted_translit = alloca i8*
  %name = alloca i8*
  %converted_translit = alloca i8*
  %len = alloca i64
  %locale_code_translit = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name_ascii, i8** %name_ascii_addr
  store i8* %name_utf8, i8** %name_utf8_addr
  %1 = load i8** %name_ascii_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = call i8* @locale_charset() nounwind
  store i8* %3, i8** %locale_code, align 8
  store i8* null, i8** %alloc_name_converted, align 8
  store i8* null, i8** %alloc_name_converted_translit, align 8
  store i8* null, i8** %name_converted, align 8
  store i8* null, i8** %name_converted_translit, align 8
  %4 = load i8** %locale_code, align 8
  %5 = call i32 @c_strcasecmp(i8* %4, i8* getelementptr inbounds ([6 x i8]* @.str5289, i64 0, i64 0)) nounwind readonly
  %6 = icmp ne i32 %5, 0
  %7 = load i8** %name_utf8_addr, align 8
  br i1 %6, label %bb, label %bb5

bb:                                               ; preds = %entry
  %8 = load i8** %locale_code, align 8
  %9 = call i8* @xstr_iconv(i8* %7, i8* getelementptr inbounds ([6 x i8]* @.str5289, i64 0, i64 0), i8* %8) nounwind
  store i8* %9, i8** %alloc_name_converted, align 8
  %10 = load i8** %alloc_name_converted, align 8
  store i8* %10, i8** %name_converted, align 8
  %11 = load i8** %locale_code, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  store i64 %12, i64* %len, align 8
  %13 = load i64* %len, align 8
  %14 = add i64 %13, 11
  %15 = call noalias i8* @xmalloc(i64 %14) nounwind
  store i8* %15, i8** %locale_code_translit, align 8
  %16 = load i8** %locale_code_translit, align 8
  %17 = load i8** %locale_code, align 8
  %18 = load i64* %len, align 8
  %19 = call i8* @memcpy(i8* %16, i8* %17, i64 %18)
  %20 = load i8** %locale_code_translit, align 8
  %21 = load i64* %len, align 8
  %22 = getelementptr inbounds i8* %20, i64 %21
  %23 = call i8* @memcpy(i8* %22, i8* getelementptr inbounds ([11 x i8]* @.str6290, i64 0, i64 0), i64 11)
  %24 = load i8** %name_utf8_addr, align 8
  %25 = load i8** %locale_code_translit, align 8
  %26 = call i8* @xstr_iconv(i8* %24, i8* getelementptr inbounds ([6 x i8]* @.str5289, i64 0, i64 0), i8* %25) nounwind
  store i8* %26, i8** %converted_translit, align 8
  %27 = load i8** %locale_code_translit, align 8
  call void @free(i8* %27) nounwind
  %28 = load i8** %converted_translit, align 8
  %29 = icmp ne i8* %28, null
  br i1 %29, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %30 = load i8** %converted_translit, align 8
  %31 = call i8* @strchr(i8* %30, i32 63) nounwind readonly
  %32 = icmp ne i8* %31, null
  %33 = load i8** %converted_translit, align 8
  br i1 %32, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  call void @free(i8* %33) nounwind
  br label %bb6

bb3:                                              ; preds = %bb1
  store i8* %33, i8** %alloc_name_converted_translit, align 8
  %34 = load i8** %alloc_name_converted_translit, align 8
  store i8* %34, i8** %name_converted_translit, align 8
  br label %bb6

bb5:                                              ; preds = %entry
  store i8* %7, i8** %name_converted, align 8
  %35 = load i8** %name_utf8_addr, align 8
  store i8* %35, i8** %name_converted_translit, align 8
  br label %bb6

bb6:                                              ; preds = %bb, %bb2, %bb3, %bb5
  %36 = load i8** %name_converted, align 8
  %37 = icmp eq i8* %36, null
  br i1 %37, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %38 = load i8** %name_converted_translit, align 8
  %39 = icmp ne i8* %38, null
  br i1 %39, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %40 = load i8** %name_converted_translit, align 8
  store i8* %40, i8** %iftmp.27, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  %41 = load i8** %name_ascii_addr, align 8
  store i8* %41, i8** %iftmp.27, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %42 = load i8** %iftmp.27, align 8
  store i8* %42, i8** %iftmp.25, align 8
  br label %bb12

bb11:                                             ; preds = %bb6
  %43 = load i8** %name_converted, align 8
  store i8* %43, i8** %iftmp.25, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %44 = load i8** %iftmp.25, align 8
  store i8* %44, i8** %name, align 8
  %45 = load i8** %translation, align 8
  %46 = load i8** %name_ascii_addr, align 8
  %47 = call i32 @strcmp(i8* %45, i8* %46) nounwind readonly
  %48 = icmp ne i32 %47, 0
  br i1 %48, label %bb13, label %bb30

bb13:                                             ; preds = %bb12
  %49 = load i8** %translation, align 8
  %50 = load i8** %name_ascii_addr, align 8
  %51 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %49, i8* %50) nounwind
  %toBool = icmp ne i8 %51, 0
  br i1 %toBool, label %bb20, label %bb14

bb14:                                             ; preds = %bb13
  %52 = load i8** %name_converted, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %bb17, label %bb15

bb15:                                             ; preds = %bb14
  %54 = load i8** %translation, align 8
  %55 = load i8** %name_converted, align 8
  %56 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %54, i8* %55) nounwind
  %toBool16 = icmp ne i8 %56, 0
  br i1 %toBool16, label %bb20, label %bb17

bb17:                                             ; preds = %bb15, %bb14
  %57 = load i8** %name_converted_translit, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %bb25, label %bb18

bb18:                                             ; preds = %bb17
  %59 = load i8** %translation, align 8
  %60 = load i8** %name_converted_translit, align 8
  %61 = call zeroext i8 @mbsstr_trimmed_wordbounded(i8* %59, i8* %60) nounwind
  %toBool19 = icmp ne i8 %61, 0
  br i1 %toBool19, label %bb20, label %bb25

bb20:                                             ; preds = %bb18, %bb15, %bb13
  %62 = load i8** %alloc_name_converted, align 8
  %63 = icmp ne i8* %62, null
  br i1 %63, label %bb21, label %bb22

bb21:                                             ; preds = %bb20
  %64 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %64) nounwind
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %65 = load i8** %alloc_name_converted_translit, align 8
  %66 = icmp ne i8* %65, null
  br i1 %66, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %67 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %67) nounwind
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %68 = load i8** %translation, align 8
  store i8* %68, i8** %0, align 8
  br label %bb37

bb25:                                             ; preds = %bb18, %bb17
  %69 = load i8** %translation, align 8
  %70 = call i64 @strlen(i8* %69) nounwind readonly
  %71 = load i8** %name, align 8
  %72 = call i64 @strlen(i8* %71) nounwind readonly
  %73 = add i64 %70, %72
  %74 = add i64 %73, 4
  %75 = call noalias i8* @xmalloc(i64 %74) nounwind
  store i8* %75, i8** %result, align 8
  %76 = load i8** %result, align 8
  %77 = load i8** %translation, align 8
  %78 = load i8** %name, align 8
  %79 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %76, i8* noalias getelementptr inbounds ([8 x i8]* @.str4288, i64 0, i64 0), i8* %77, i8* %78) nounwind
  %80 = load i8** %alloc_name_converted, align 8
  %81 = icmp ne i8* %80, null
  br i1 %81, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %82 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %82) nounwind
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %83 = load i8** %alloc_name_converted_translit, align 8
  %84 = icmp ne i8* %83, null
  br i1 %84, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  %85 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %85) nounwind
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %86 = load i8** %result, align 8
  store i8* %86, i8** %0, align 8
  br label %bb37

bb30:                                             ; preds = %bb12
  %87 = load i8** %alloc_name_converted, align 8
  %88 = icmp ne i8* %87, null
  br i1 %88, label %bb31, label %bb33

bb31:                                             ; preds = %bb30
  %89 = load i8** %alloc_name_converted, align 8
  %90 = load i8** %name, align 8
  %91 = icmp ne i8* %89, %90
  br i1 %91, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %92 = load i8** %alloc_name_converted, align 8
  call void @free(i8* %92) nounwind
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %93 = load i8** %alloc_name_converted_translit, align 8
  %94 = icmp ne i8* %93, null
  br i1 %94, label %bb34, label %bb36

bb34:                                             ; preds = %bb33
  %95 = load i8** %alloc_name_converted_translit, align 8
  %96 = load i8** %name, align 8
  %97 = icmp ne i8* %95, %96
  br i1 %97, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %98 = load i8** %alloc_name_converted_translit, align 8
  call void @free(i8* %98) nounwind
  br label %bb36

bb36:                                             ; preds = %bb35, %bb34, %bb33
  %99 = load i8** %name, align 8
  store i8* %99, i8** %0, align 8
  br label %bb37

bb37:                                             ; preds = %bb36, %bb29, %bb24
  %100 = load i8** %0, align 8
  store i8* %100, i8** %retval, align 8
  %retval38 = load i8** %retval
  ret i8* %retval38
}

define i32 @qcopy_acl(i8* %src_name, i32 %source_desc, i8* %dst_name, i32 %dest_desc, i32 %mode) nounwind {
entry:
  %src_name_addr = alloca i8*, align 8
  %source_desc_addr = alloca i32, align 4
  %dst_name_addr = alloca i8*, align 8
  %dest_desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %ctx = alloca %struct.cd_buf
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src_name, i8** %src_name_addr
  store i32 %source_desc, i32* %source_desc_addr
  store i8* %dst_name, i8** %dst_name_addr
  store i32 %dest_desc, i32* %dest_desc_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i8** %src_name_addr, align 8
  %2 = load i32* %source_desc_addr, align 4
  %3 = load i32* %mode_addr, align 4
  %4 = call i32 @get_permissions(i8* %1, i32 %2, i32 %3, %struct.cd_buf* %ctx) nounwind
  store i32 %4, i32* %ret, align 4
  %5 = load i32* %ret, align 4
  %6 = icmp ne i32 %5, 0
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 -2, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %7 = load i8** %dst_name_addr, align 8
  %8 = load i32* %dest_desc_addr, align 4
  %9 = call i32 @set_permissions(%struct.cd_buf* %ctx, i8* %7, i32 %8) nounwind
  store i32 %9, i32* %ret, align 4
  call void @free_permission_context(%struct.cd_buf* %ctx) nounwind readnone
  %10 = load i32* %ret, align 4
  store i32 %10, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

declare void @free_permission_context(%struct.cd_buf*) nounwind readnone

define i32 @qset_acl(i8* %name, i32 %desc, i32 %mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %ctx = alloca %struct.cd_buf
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %desc, i32* %desc_addr
  store i32 %mode, i32* %mode_addr
  %ctx1 = bitcast %struct.cd_buf* %ctx to i8*
  %1 = call i8* @memset(i8* %ctx1, i32 0, i64 4)
  %2 = getelementptr inbounds %struct.cd_buf* %ctx, i32 0, i32 0
  %3 = load i32* %mode_addr, align 4
  store i32 %3, i32* %2, align 4
  %4 = load i8** %name_addr, align 8
  %5 = load i32* %desc_addr, align 4
  %6 = call i32 @set_permissions(%struct.cd_buf* %ctx, i8* %4, i32 %5) nounwind
  store i32 %6, i32* %ret, align 4
  call void @free_permission_context(%struct.cd_buf* %ctx) nounwind readnone
  %7 = load i32* %ret, align 4
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define %struct.quoting_options* @clone_quoting_options(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca %struct.quoting_options*
  %0 = alloca %struct.quoting_options*
  %iftmp.16 = alloca %struct.quoting_options*
  %e = alloca i32
  %p = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = icmp ne %struct.quoting_options* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %5, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.16, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %6 = load %struct.quoting_options** %iftmp.16, align 8
  %7 = bitcast %struct.quoting_options* %6 to i8*
  %8 = call i8* @xmemdup(i8* %7, i64 56) nounwind
  %9 = bitcast i8* %8 to %struct.quoting_options*
  store %struct.quoting_options* %9, %struct.quoting_options** %p, align 8
  %10 = call i32* @__errno_location() nounwind readnone
  %11 = load i32* %e, align 4
  store i32 %11, i32* %10, align 4
  %12 = load %struct.quoting_options** %p, align 8
  store %struct.quoting_options* %12, %struct.quoting_options** %0, align 8
  %13 = load %struct.quoting_options** %0, align 8
  store %struct.quoting_options* %13, %struct.quoting_options** %retval, align 8
  %retval3 = load %struct.quoting_options** %retval
  ret %struct.quoting_options* %retval3
}

define i32 @get_quoting_style(%struct.quoting_options* %o) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i32
  %iftmp.17 = alloca %struct.quoting_options*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.17, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.17, align 8
  %5 = getelementptr inbounds %struct.quoting_options* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  store i32 %6, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @set_quoting_style(%struct.quoting_options* %o, i32 %s) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %s_addr = alloca i32, align 4
  %iftmp.18 = alloca %struct.quoting_options*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %s, i32* %s_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp ne %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %2, %struct.quoting_options** %iftmp.18, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.18, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %3 = load %struct.quoting_options** %iftmp.18, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 0
  %5 = load i32* %s_addr, align 4
  store i32 %5, i32* %4, align 8
  ret void
}

define i32 @set_char_quoting(%struct.quoting_options* %o, i8 signext %c, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %c_addr = alloca i8, align 1
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.19 = alloca %struct.quoting_options*
  %uc = alloca i8
  %p = alloca i32*
  %shift = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8 %c, i8* %c_addr
  store i32 %i, i32* %i_addr
  %1 = load i8* %c_addr, align 1
  store i8 %1, i8* %uc, align 1
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = icmp ne %struct.quoting_options* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %iftmp.19, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.19, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %5 = load %struct.quoting_options** %iftmp.19, align 8
  %6 = getelementptr inbounds %struct.quoting_options* %5, i32 0, i32 2
  %7 = getelementptr inbounds [8 x i32]* %6, i64 0, i64 0
  %8 = load i8* %uc, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %11 = udiv i8 %8, 32
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds i32* %7, i64 %12
  store i32* %13, i32** %p, align 8
  %14 = load i8* %uc, align 1
  %15 = zext i8 %14 to i32
  %16 = and i32 %15, 31
  store i32 %16, i32* %shift, align 4
  %17 = load i32** %p, align 8
  %18 = load i32* %17, align 4
  %19 = load i32* %shift, align 4
  %int_cast_to_i641 = zext i32 %19 to i64
  %20 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %20, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %21 = lshr i32 %18, %19
  %22 = and i32 %21, 1
  store i32 %22, i32* %r, align 4
  %23 = load i32** %p, align 8
  %24 = load i32* %23, align 4
  %25 = load i32* %i_addr, align 4
  %26 = and i32 %25, 1
  %27 = load i32* %r, align 4
  %28 = xor i32 %26, %27
  %29 = load i32* %shift, align 4
  %int_cast_to_i642 = zext i32 %29 to i64
  %30 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %30, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %31 = shl i32 %28, %29
  %32 = xor i32 %24, %31
  %33 = load i32** %p, align 8
  store i32 %32, i32* %33, align 4
  %34 = load i32* %r, align 4
  store i32 %34, i32* %0, align 4
  %35 = load i32* %0, align 4
  store i32 %35, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_quoting_flags(%struct.quoting_options* %o, i32 %i) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %i_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i32 %i, i32* %i_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp eq %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = getelementptr inbounds %struct.quoting_options* %3, i32 0, i32 1
  %5 = load i32* %4, align 4
  store i32 %5, i32* %r, align 4
  %6 = load %struct.quoting_options** %o_addr, align 8
  %7 = getelementptr inbounds %struct.quoting_options* %6, i32 0, i32 1
  %8 = load i32* %i_addr, align 4
  store i32 %8, i32* %7, align 4
  %9 = load i32* %r, align 4
  store i32 %9, i32* %0, align 4
  %10 = load i32* %0, align 4
  store i32 %10, i32* %retval, align 4
  %retval2 = load i32* %retval
  ret i32 %retval2
}

define void @set_custom_quoting(%struct.quoting_options* %o, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %o_addr = alloca %struct.quoting_options*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  %0 = load %struct.quoting_options** %o_addr, align 8
  %1 = icmp eq %struct.quoting_options* %0, null
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %o_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load %struct.quoting_options** %o_addr, align 8
  %3 = getelementptr inbounds %struct.quoting_options* %2, i32 0, i32 0
  store i32 10, i32* %3, align 8
  %4 = load i8** %left_quote_addr, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %6 = load i8** %right_quote_addr, align 8
  %7 = icmp eq i8* %6, null
  br i1 %7, label %bb3, label %bb4

bb3:                                              ; preds = %bb2, %bb1
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %8 = load %struct.quoting_options** %o_addr, align 8
  %9 = getelementptr inbounds %struct.quoting_options* %8, i32 0, i32 3
  %10 = load i8** %left_quote_addr, align 8
  store i8* %10, i8** %9, align 8
  %11 = load %struct.quoting_options** %o_addr, align 8
  %12 = getelementptr inbounds %struct.quoting_options* %11, i32 0, i32 4
  %13 = load i8** %right_quote_addr, align 8
  store i8* %13, i8** %12, align 8
  ret void
}

define internal void @quoting_options_from_style(%struct.quoting_options* noalias sret %agg.result, i32 %style) nounwind {
entry:
  %style_addr = alloca i32, align 4
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %style, i32* %style_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %0 = call i8* @memset(i8* %o1, i32 0, i64 56)
  %1 = load i32* %style_addr, align 4
  %2 = icmp eq i32 %1, 10
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb2:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.quoting_options* %o, i32 0, i32 0
  %4 = load i32* %style_addr, align 4
  store i32 %4, i32* %3, align 8
  %agg.result3 = bitcast %struct.quoting_options* %agg.result to i8*
  %o4 = bitcast %struct.quoting_options* %o to i8*
  %5 = call i8* @memcpy(i8* %agg.result3, i8* %o4, i64 56)
  ret void
}

define internal i8* @gettext_quote(i8* %msgid, i32 %s) nounwind {
entry:
  %msgid_addr = alloca i8*, align 8
  %s_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.22 = alloca i8*
  %iftmp.21 = alloca i8*
  %iftmp.20 = alloca i8*
  %0 = alloca i8*
  %translation = alloca i8*
  %locale_code = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %msgid, i8** %msgid_addr
  store i32 %s, i32* %s_addr
  %1 = load i8** %msgid_addr, align 8
  %2 = call i8* @gettext(i8* %1) nounwind
  store i8* %2, i8** %translation, align 8
  %3 = load i8** %translation, align 8
  %4 = load i8** %msgid_addr, align 8
  %5 = icmp ne i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %translation, align 8
  store i8* %6, i8** %0, align 8
  br label %bb15

bb1:                                              ; preds = %entry
  %7 = call i8* @locale_charset() nounwind
  store i8* %7, i8** %locale_code, align 8
  %8 = load i8** %locale_code, align 8
  %9 = call i32 @c_strcasecmp(i8* %8, i8* getelementptr inbounds ([6 x i8]* @.str10304, i64 0, i64 0)) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb2, label %bb6

bb2:                                              ; preds = %bb1
  %11 = load i8** %msgid_addr, align 8
  %12 = getelementptr inbounds i8* %11, i64 0
  %13 = load i8* %12, align 1
  %14 = icmp eq i8 %13, 96
  br i1 %14, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str11305, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([4 x i8]* @.str12306, i64 0, i64 0), i8** %iftmp.20, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %15 = load i8** %iftmp.20, align 8
  store i8* %15, i8** %0, align 8
  br label %bb15

bb6:                                              ; preds = %bb1
  %16 = load i8** %locale_code, align 8
  %17 = call i32 @c_strcasecmp(i8* %16, i8* getelementptr inbounds ([8 x i8]* @.str13307, i64 0, i64 0)) nounwind readonly
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %19 = load i8** %msgid_addr, align 8
  %20 = getelementptr inbounds i8* %19, i64 0
  %21 = load i8* %20, align 1
  %22 = icmp eq i8 %21, 96
  br i1 %22, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([4 x i8]* @.str14308, i64 0, i64 0), i8** %iftmp.21, align 8
  br label %bb10

bb9:                                              ; preds = %bb7
  store i8* getelementptr inbounds ([3 x i8]* @.str15309, i64 0, i64 0), i8** %iftmp.21, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %23 = load i8** %iftmp.21, align 8
  store i8* %23, i8** %0, align 8
  br label %bb15

bb11:                                             ; preds = %bb6
  %24 = load i32* %s_addr, align 4
  %25 = icmp eq i32 %24, 9
  br i1 %25, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str16310, i64 0, i64 0), i8** %iftmp.22, align 8
  br label %bb14

bb13:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([2 x i8]* @.str17311, i64 0, i64 0), i8** %iftmp.22, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %26 = load i8** %iftmp.22, align 8
  store i8* %26, i8** %0, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb10, %bb5, %bb
  %27 = load i8** %0, align 8
  store i8* %27, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define internal i64 @quotearg_buffer_restyled(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, i32 %quoting_style, i32 %flags, i32* %quote_these_too, i8* %left_quote, i8* %right_quote) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %quoting_style_addr = alloca i32, align 4
  %flags_addr = alloca i32, align 4
  %quote_these_too_addr = alloca i32*, align 8
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.29 = alloca i8
  %iftmp.24 = alloca i8
  %iftmp.23 = alloca i64
  %i = alloca i64
  %len = alloca i64
  %quote_string = alloca i8*
  %quote_string_len = alloca i64
  %backslash_escapes = alloca i8
  %unibyte_locale = alloca i8
  %elide_outer_quotes = alloca i8
  %pending_shell_escape_end = alloca i8
  %c = alloca i8
  %esc = alloca i8
  %is_right_quote = alloca i8
  %escaping = alloca i8
  %m = alloca i64
  %printable = alloca i8
  %mbstate = alloca %struct.mbstate_t
  %w = alloca i32
  %bytes = alloca i64
  %j = alloca i64
  %ilim = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i32 %quoting_style, i32* %quoting_style_addr
  store i32 %flags, i32* %flags_addr
  store i32* %quote_these_too, i32** %quote_these_too_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i64 0, i64* %len, align 8
  store i8* null, i8** %quote_string, align 8
  store i64 0, i64* %quote_string_len, align 8
  store i8 0, i8* %backslash_escapes, align 1
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp eq i64 %1, 1
  %3 = zext i1 %2 to i8
  store i8 %3, i8* %unibyte_locale, align 1
  %4 = load i32* %flags_addr, align 4
  %5 = and i32 %4, 2
  %6 = icmp ne i32 %5, 0
  %7 = zext i1 %6 to i8
  store i8 %7, i8* %elide_outer_quotes, align 1
  store i8 0, i8* %pending_shell_escape_end, align 1
  %8 = load i32* %quoting_style_addr, align 4
  switch i32 %8, label %bb41 [
    i32 0, label %bb40
    i32 1, label %bb24
    i32 2, label %bb31
    i32 3, label %bb23
    i32 4, label %bb25
    i32 5, label %bb1
    i32 6, label %bb
    i32 7, label %bb9
    i32 8, label %bb10
    i32 9, label %bb10
    i32 10, label %bb10
  ]

bb:                                               ; preds = %entry
  store i32 5, i32* %quoting_style_addr, align 4
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %9 = load i8* %elide_outer_quotes, align 1
  %toBool = icmp ne i8 %9, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot2 = zext i1 %toBoolnot to i8
  %toBool4 = icmp ne i8 %toBoolnot2, 0
  br i1 %toBool4, label %bb5, label %bb8

bb5:                                              ; preds = %bb1
  %10 = load i64* %len, align 8
  %11 = load i64* %buffersize_addr, align 8
  %12 = icmp ult i64 %10, %11
  br i1 %12, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %13 = load i8** %buffer_addr, align 8
  %14 = load i64* %len, align 8
  %15 = getelementptr inbounds i8* %13, i64 %14
  store i8 34, i8* %15, align 1
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %16 = load i64* %len, align 8
  %17 = add i64 %16, 1
  store i64 %17, i64* %len, align 8
  br label %bb8

bb8:                                              ; preds = %bb7, %bb1
  store i8 1, i8* %backslash_escapes, align 1
  store i8* getelementptr inbounds ([2 x i8]* @.str16310, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb42

bb9:                                              ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb42

bb10:                                             ; preds = %entry, %entry, %entry
  %18 = load i32* %quoting_style_addr, align 4
  %19 = icmp ne i32 %18, 10
  br i1 %19, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %20 = load i32* %quoting_style_addr, align 4
  %21 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str18312, i64 0, i64 0), i32 %20) nounwind
  store i8* %21, i8** %left_quote_addr, align 8
  %22 = load i32* %quoting_style_addr, align 4
  %23 = call i8* @gettext_quote(i8* getelementptr inbounds ([2 x i8]* @.str17311, i64 0, i64 0), i32 %22) nounwind
  store i8* %23, i8** %right_quote_addr, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %24 = load i8* %elide_outer_quotes, align 1
  %toBool13 = icmp ne i8 %24, 0
  %toBool13not = xor i1 %toBool13, true
  %toBool13not14 = zext i1 %toBool13not to i8
  %toBool16 = icmp ne i8 %toBool13not14, 0
  br i1 %toBool16, label %bb17, label %bb22

bb17:                                             ; preds = %bb12
  %25 = load i8** %left_quote_addr, align 8
  store i8* %25, i8** %quote_string, align 8
  br label %bb21

bb18:                                             ; preds = %bb21
  %26 = load i64* %len, align 8
  %27 = load i64* %buffersize_addr, align 8
  %28 = icmp ult i64 %26, %27
  br i1 %28, label %bb19, label %bb20

bb19:                                             ; preds = %bb18
  %29 = load i8** %quote_string, align 8
  %30 = load i8* %29, align 1
  %31 = load i8** %buffer_addr, align 8
  %32 = load i64* %len, align 8
  %33 = getelementptr inbounds i8* %31, i64 %32
  store i8 %30, i8* %33, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb18
  %34 = load i64* %len, align 8
  %35 = add i64 %34, 1
  store i64 %35, i64* %len, align 8
  %36 = load i8** %quote_string, align 8
  %37 = getelementptr inbounds i8* %36, i64 1
  store i8* %37, i8** %quote_string, align 8
  br label %bb21

bb21:                                             ; preds = %bb20, %bb17
  %38 = load i8** %quote_string, align 8
  %39 = load i8* %38, align 1
  %40 = icmp ne i8 %39, 0
  br i1 %40, label %bb18, label %bb22

bb22:                                             ; preds = %bb21, %bb12
  store i8 1, i8* %backslash_escapes, align 1
  %41 = load i8** %right_quote_addr, align 8
  store i8* %41, i8** %quote_string, align 8
  %42 = load i8** %quote_string, align 8
  %43 = call i64 @strlen(i8* %42) nounwind readonly
  store i64 %43, i64* %quote_string_len, align 8
  br label %bb42

bb23:                                             ; preds = %entry
  store i8 1, i8* %backslash_escapes, align 1
  br label %bb24

bb24:                                             ; preds = %bb23, %entry
  store i8 1, i8* %elide_outer_quotes, align 1
  br label %bb25

bb25:                                             ; preds = %bb24, %entry
  %44 = load i8* %elide_outer_quotes, align 1
  %toBool26 = icmp ne i8 %44, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  br i1 %toBool29, label %bb30, label %bb31

bb30:                                             ; preds = %bb25
  store i8 1, i8* %backslash_escapes, align 1
  br label %bb31

bb31:                                             ; preds = %bb30, %bb25, %entry
  store i32 2, i32* %quoting_style_addr, align 4
  %45 = load i8* %elide_outer_quotes, align 1
  %toBool32 = icmp ne i8 %45, 0
  %toBool32not = xor i1 %toBool32, true
  %toBool32not33 = zext i1 %toBool32not to i8
  %toBool35 = icmp ne i8 %toBool32not33, 0
  br i1 %toBool35, label %bb36, label %bb39

bb36:                                             ; preds = %bb31
  %46 = load i64* %len, align 8
  %47 = load i64* %buffersize_addr, align 8
  %48 = icmp ult i64 %46, %47
  br i1 %48, label %bb37, label %bb38

bb37:                                             ; preds = %bb36
  %49 = load i8** %buffer_addr, align 8
  %50 = load i64* %len, align 8
  %51 = getelementptr inbounds i8* %49, i64 %50
  store i8 39, i8* %51, align 1
  br label %bb38

bb38:                                             ; preds = %bb37, %bb36
  %52 = load i64* %len, align 8
  %53 = add i64 %52, 1
  store i64 %53, i64* %len, align 8
  br label %bb39

bb39:                                             ; preds = %bb38, %bb31
  store i8* getelementptr inbounds ([2 x i8]* @.str17311, i64 0, i64 0), i8** %quote_string, align 8
  store i64 1, i64* %quote_string_len, align 8
  br label %bb42

bb40:                                             ; preds = %entry
  store i8 0, i8* %elide_outer_quotes, align 1
  br label %bb42

bb41:                                             ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb42:                                             ; preds = %bb40, %bb39, %bb22, %bb9, %bb8
  store i64 0, i64* %i, align 8
  br label %bb297

bb43:                                             ; preds = %bb300
  store i8 0, i8* %is_right_quote, align 1
  store i8 0, i8* %escaping, align 1
  %54 = load i8* %backslash_escapes, align 1
  %toBool44 = icmp ne i8 %54, 0
  br i1 %toBool44, label %bb45, label %bb56

bb45:                                             ; preds = %bb43
  %55 = load i32* %quoting_style_addr, align 4
  %56 = icmp ne i32 %55, 2
  br i1 %56, label %bb46, label %bb56

bb46:                                             ; preds = %bb45
  %57 = load i64* %quote_string_len, align 8
  %58 = icmp ne i64 %57, 0
  br i1 %58, label %bb47, label %bb56

bb47:                                             ; preds = %bb46
  %59 = load i64* %i, align 8
  %60 = load i64* %quote_string_len, align 8
  %61 = add i64 %59, %60
  %62 = load i64* %argsize_addr, align 8
  %63 = icmp ne i64 %62, -1
  br i1 %63, label %bb50, label %bb48

bb48:                                             ; preds = %bb47
  %64 = load i64* %quote_string_len, align 8
  %65 = icmp ule i64 %64, 1
  br i1 %65, label %bb50, label %bb49

bb49:                                             ; preds = %bb48
  %66 = load i8** %arg_addr, align 8
  %67 = call i64 @strlen(i8* %66) nounwind readonly
  store i64 %67, i64* %argsize_addr, align 8
  %68 = load i64* %argsize_addr, align 8
  store i64 %68, i64* %iftmp.23, align 8
  br label %bb51

bb50:                                             ; preds = %bb48, %bb47
  %69 = load i64* %argsize_addr, align 8
  store i64 %69, i64* %iftmp.23, align 8
  br label %bb51

bb51:                                             ; preds = %bb50, %bb49
  %70 = load i64* %iftmp.23, align 8
  %71 = icmp ule i64 %61, %70
  br i1 %71, label %bb52, label %bb56

bb52:                                             ; preds = %bb51
  %72 = load i8** %arg_addr, align 8
  %73 = load i64* %i, align 8
  %74 = getelementptr inbounds i8* %72, i64 %73
  %75 = load i8** %quote_string, align 8
  %76 = load i64* %quote_string_len, align 8
  %77 = call i32 @memcmp(i8* %74, i8* %75, i64 %76) nounwind readonly
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %bb53, label %bb56

bb53:                                             ; preds = %bb52
  %79 = load i8* %elide_outer_quotes, align 1
  %toBool54 = icmp ne i8 %79, 0
  br i1 %toBool54, label %force_outer_quoting_style, label %bb55

bb55:                                             ; preds = %bb53
  store i8 1, i8* %is_right_quote, align 1
  br label %bb56

bb56:                                             ; preds = %bb55, %bb52, %bb51, %bb46, %bb45, %bb43
  %80 = load i8** %arg_addr, align 8
  %81 = load i64* %i, align 8
  %82 = getelementptr inbounds i8* %80, i64 %81
  %83 = load i8* %82, align 1
  store i8 %83, i8* %c, align 1
  %84 = load i8* %c, align 1
  %85 = zext i8 %84 to i32
  switch i32 %85, label %bb152 [
    i32 0, label %bb57
    i32 7, label %bb109
    i32 8, label %bb110
    i32 9, label %bb114
    i32 10, label %bb112
    i32 11, label %bb115
    i32 12, label %bb111
    i32 13, label %bb113
    i32 32, label %bb136
    i32 33, label %bb136
    i32 34, label %bb136
    i32 35, label %bb135
    i32 36, label %bb136
    i32 37, label %bb247
    i32 38, label %bb136
    i32 39, label %bb140
    i32 40, label %bb136
    i32 41, label %bb136
    i32 42, label %bb136
    i32 43, label %bb247
    i32 44, label %bb247
    i32 45, label %bb247
    i32 46, label %bb247
    i32 47, label %bb247
    i32 48, label %bb247
    i32 49, label %bb247
    i32 50, label %bb247
    i32 51, label %bb247
    i32 52, label %bb247
    i32 53, label %bb247
    i32 54, label %bb247
    i32 55, label %bb247
    i32 56, label %bb247
    i32 57, label %bb247
    i32 58, label %bb247
    i32 59, label %bb136
    i32 60, label %bb136
    i32 61, label %bb136
    i32 62, label %bb136
    i32 63, label %bb89
    i32 65, label %bb247
    i32 66, label %bb247
    i32 67, label %bb247
    i32 68, label %bb247
    i32 69, label %bb247
    i32 70, label %bb247
    i32 71, label %bb247
    i32 72, label %bb247
    i32 73, label %bb247
    i32 74, label %bb247
    i32 75, label %bb247
    i32 76, label %bb247
    i32 77, label %bb247
    i32 78, label %bb247
    i32 79, label %bb247
    i32 80, label %bb247
    i32 81, label %bb247
    i32 82, label %bb247
    i32 83, label %bb247
    i32 84, label %bb247
    i32 85, label %bb247
    i32 86, label %bb247
    i32 87, label %bb247
    i32 88, label %bb247
    i32 89, label %bb247
    i32 90, label %bb247
    i32 91, label %bb136
    i32 92, label %bb116
    i32 93, label %bb247
    i32 94, label %bb136
    i32 95, label %bb247
    i32 96, label %bb136
    i32 97, label %bb247
    i32 98, label %bb247
    i32 99, label %bb247
    i32 100, label %bb247
    i32 101, label %bb247
    i32 102, label %bb247
    i32 103, label %bb247
    i32 104, label %bb247
    i32 105, label %bb247
    i32 106, label %bb247
    i32 107, label %bb247
    i32 108, label %bb247
    i32 109, label %bb247
    i32 110, label %bb247
    i32 111, label %bb247
    i32 112, label %bb247
    i32 113, label %bb247
    i32 114, label %bb247
    i32 115, label %bb247
    i32 116, label %bb247
    i32 117, label %bb247
    i32 118, label %bb247
    i32 119, label %bb247
    i32 120, label %bb247
    i32 121, label %bb247
    i32 122, label %bb247
    i32 123, label %bb130
    i32 124, label %bb136
    i32 125, label %bb130
    i32 126, label %bb135
  ]

bb57:                                             ; preds = %bb56
  %86 = load i8* %backslash_escapes, align 1
  %toBool58 = icmp ne i8 %86, 0
  br i1 %toBool58, label %bb59, label %bb86

bb59:                                             ; preds = %bb57
  %87 = load i8* %elide_outer_quotes, align 1
  %toBool60 = icmp ne i8 %87, 0
  br i1 %toBool60, label %force_outer_quoting_style, label %bb61

bb61:                                             ; preds = %bb59
  store i8 1, i8* %escaping, align 1
  %88 = load i32* %quoting_style_addr, align 4
  %89 = icmp eq i32 %88, 2
  br i1 %89, label %bb62, label %bb74

bb62:                                             ; preds = %bb61
  %90 = load i8* %pending_shell_escape_end, align 1
  %toBool63 = icmp ne i8 %90, 0
  %toBool63not = xor i1 %toBool63, true
  %toBool63not64 = zext i1 %toBool63not to i8
  %toBool66 = icmp ne i8 %toBool63not64, 0
  br i1 %toBool66, label %bb67, label %bb74

bb67:                                             ; preds = %bb62
  %91 = load i64* %len, align 8
  %92 = load i64* %buffersize_addr, align 8
  %93 = icmp ult i64 %91, %92
  br i1 %93, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  %94 = load i8** %buffer_addr, align 8
  %95 = load i64* %len, align 8
  %96 = getelementptr inbounds i8* %94, i64 %95
  store i8 39, i8* %96, align 1
  br label %bb69

bb69:                                             ; preds = %bb68, %bb67
  %97 = load i64* %len, align 8
  %98 = add i64 %97, 1
  store i64 %98, i64* %len, align 8
  %99 = load i64* %len, align 8
  %100 = load i64* %buffersize_addr, align 8
  %101 = icmp ult i64 %99, %100
  br i1 %101, label %bb70, label %bb71

bb70:                                             ; preds = %bb69
  %102 = load i8** %buffer_addr, align 8
  %103 = load i64* %len, align 8
  %104 = getelementptr inbounds i8* %102, i64 %103
  store i8 36, i8* %104, align 1
  br label %bb71

bb71:                                             ; preds = %bb70, %bb69
  %105 = load i64* %len, align 8
  %106 = add i64 %105, 1
  store i64 %106, i64* %len, align 8
  %107 = load i64* %len, align 8
  %108 = load i64* %buffersize_addr, align 8
  %109 = icmp ult i64 %107, %108
  br i1 %109, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  %110 = load i8** %buffer_addr, align 8
  %111 = load i64* %len, align 8
  %112 = getelementptr inbounds i8* %110, i64 %111
  store i8 39, i8* %112, align 1
  br label %bb73

bb73:                                             ; preds = %bb72, %bb71
  %113 = load i64* %len, align 8
  %114 = add i64 %113, 1
  store i64 %114, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb74

bb74:                                             ; preds = %bb73, %bb62, %bb61
  %115 = load i64* %len, align 8
  %116 = load i64* %buffersize_addr, align 8
  %117 = icmp ult i64 %115, %116
  br i1 %117, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  %118 = load i8** %buffer_addr, align 8
  %119 = load i64* %len, align 8
  %120 = getelementptr inbounds i8* %118, i64 %119
  store i8 92, i8* %120, align 1
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74
  %121 = load i64* %len, align 8
  %122 = add i64 %121, 1
  store i64 %122, i64* %len, align 8
  %123 = load i32* %quoting_style_addr, align 4
  %124 = icmp ne i32 %123, 2
  br i1 %124, label %bb77, label %bb85

bb77:                                             ; preds = %bb76
  %125 = load i64* %i, align 8
  %126 = add i64 %125, 1
  %127 = load i64* %argsize_addr, align 8
  %128 = icmp ult i64 %126, %127
  br i1 %128, label %bb78, label %bb85

bb78:                                             ; preds = %bb77
  %129 = load i64* %i, align 8
  %130 = add i64 %129, 1
  %131 = load i8** %arg_addr, align 8
  %132 = getelementptr inbounds i8* %131, i64 %130
  %133 = load i8* %132, align 1
  %134 = icmp sgt i8 %133, 47
  br i1 %134, label %bb79, label %bb85

bb79:                                             ; preds = %bb78
  %135 = load i64* %i, align 8
  %136 = add i64 %135, 1
  %137 = load i8** %arg_addr, align 8
  %138 = getelementptr inbounds i8* %137, i64 %136
  %139 = load i8* %138, align 1
  %140 = icmp sle i8 %139, 57
  br i1 %140, label %bb80, label %bb85

bb80:                                             ; preds = %bb79
  %141 = load i64* %len, align 8
  %142 = load i64* %buffersize_addr, align 8
  %143 = icmp ult i64 %141, %142
  br i1 %143, label %bb81, label %bb82

bb81:                                             ; preds = %bb80
  %144 = load i8** %buffer_addr, align 8
  %145 = load i64* %len, align 8
  %146 = getelementptr inbounds i8* %144, i64 %145
  store i8 48, i8* %146, align 1
  br label %bb82

bb82:                                             ; preds = %bb81, %bb80
  %147 = load i64* %len, align 8
  %148 = add i64 %147, 1
  store i64 %148, i64* %len, align 8
  %149 = load i64* %len, align 8
  %150 = load i64* %buffersize_addr, align 8
  %151 = icmp ult i64 %149, %150
  br i1 %151, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %152 = load i8** %buffer_addr, align 8
  %153 = load i64* %len, align 8
  %154 = getelementptr inbounds i8* %152, i64 %153
  store i8 48, i8* %154, align 1
  br label %bb84

bb84:                                             ; preds = %bb83, %bb82
  %155 = load i64* %len, align 8
  %156 = add i64 %155, 1
  store i64 %156, i64* %len, align 8
  br label %bb85

bb85:                                             ; preds = %bb84, %bb79, %bb78, %bb77, %bb76
  store i8 48, i8* %c, align 1
  br label %bb247

bb86:                                             ; preds = %bb57
  %157 = load i32* %flags_addr, align 4
  %158 = and i32 %157, 1
  %159 = trunc i32 %158 to i8
  %toBool87 = icmp ne i8 %159, 0
  br i1 %toBool87, label %bb296, label %bb247

bb89:                                             ; preds = %bb56
  %160 = load i32* %quoting_style_addr, align 4
  switch i32 %160, label %bb247 [
    i32 2, label %bb90
    i32 5, label %bb93
  ]

bb90:                                             ; preds = %bb89
  %161 = load i8* %elide_outer_quotes, align 1
  %toBool91 = icmp ne i8 %161, 0
  br i1 %toBool91, label %force_outer_quoting_style, label %bb247

bb93:                                             ; preds = %bb89
  %162 = load i32* %flags_addr, align 4
  %163 = and i32 %162, 4
  %164 = icmp ne i32 %163, 0
  br i1 %164, label %bb94, label %bb247

bb94:                                             ; preds = %bb93
  %165 = load i64* %i, align 8
  %166 = add i64 %165, 2
  %167 = load i64* %argsize_addr, align 8
  %168 = icmp ult i64 %166, %167
  br i1 %168, label %bb95, label %bb247

bb95:                                             ; preds = %bb94
  %169 = load i64* %i, align 8
  %170 = add i64 %169, 1
  %171 = load i8** %arg_addr, align 8
  %172 = getelementptr inbounds i8* %171, i64 %170
  %173 = load i8* %172, align 1
  %174 = icmp eq i8 %173, 63
  br i1 %174, label %bb96, label %bb247

bb96:                                             ; preds = %bb95
  %175 = load i64* %i, align 8
  %176 = add i64 %175, 2
  %177 = load i8** %arg_addr, align 8
  %178 = getelementptr inbounds i8* %177, i64 %176
  %179 = load i8* %178, align 1
  %180 = sext i8 %179 to i32
  switch i32 %180, label %bb247 [
    i32 33, label %bb97
    i32 39, label %bb97
    i32 40, label %bb97
    i32 41, label %bb97
    i32 45, label %bb97
    i32 47, label %bb97
    i32 60, label %bb97
    i32 61, label %bb97
    i32 62, label %bb97
  ]

bb97:                                             ; preds = %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96, %bb96
  %181 = load i8* %elide_outer_quotes, align 1
  %toBool98 = icmp ne i8 %181, 0
  br i1 %toBool98, label %force_outer_quoting_style, label %bb99

bb99:                                             ; preds = %bb97
  %182 = load i64* %i, align 8
  %183 = add i64 %182, 2
  %184 = load i8** %arg_addr, align 8
  %185 = getelementptr inbounds i8* %184, i64 %183
  %186 = load i8* %185, align 1
  store i8 %186, i8* %c, align 1
  %187 = load i64* %i, align 8
  %188 = add i64 %187, 2
  store i64 %188, i64* %i, align 8
  %189 = load i64* %len, align 8
  %190 = load i64* %buffersize_addr, align 8
  %191 = icmp ult i64 %189, %190
  br i1 %191, label %bb100, label %bb101

bb100:                                            ; preds = %bb99
  %192 = load i8** %buffer_addr, align 8
  %193 = load i64* %len, align 8
  %194 = getelementptr inbounds i8* %192, i64 %193
  store i8 63, i8* %194, align 1
  br label %bb101

bb101:                                            ; preds = %bb100, %bb99
  %195 = load i64* %len, align 8
  %196 = add i64 %195, 1
  store i64 %196, i64* %len, align 8
  %197 = load i64* %len, align 8
  %198 = load i64* %buffersize_addr, align 8
  %199 = icmp ult i64 %197, %198
  br i1 %199, label %bb102, label %bb103

bb102:                                            ; preds = %bb101
  %200 = load i8** %buffer_addr, align 8
  %201 = load i64* %len, align 8
  %202 = getelementptr inbounds i8* %200, i64 %201
  store i8 34, i8* %202, align 1
  br label %bb103

bb103:                                            ; preds = %bb102, %bb101
  %203 = load i64* %len, align 8
  %204 = add i64 %203, 1
  store i64 %204, i64* %len, align 8
  %205 = load i64* %len, align 8
  %206 = load i64* %buffersize_addr, align 8
  %207 = icmp ult i64 %205, %206
  br i1 %207, label %bb104, label %bb105

bb104:                                            ; preds = %bb103
  %208 = load i8** %buffer_addr, align 8
  %209 = load i64* %len, align 8
  %210 = getelementptr inbounds i8* %208, i64 %209
  store i8 34, i8* %210, align 1
  br label %bb105

bb105:                                            ; preds = %bb104, %bb103
  %211 = load i64* %len, align 8
  %212 = add i64 %211, 1
  store i64 %212, i64* %len, align 8
  %213 = load i64* %len, align 8
  %214 = load i64* %buffersize_addr, align 8
  %215 = icmp ult i64 %213, %214
  br i1 %215, label %bb106, label %bb107

bb106:                                            ; preds = %bb105
  %216 = load i8** %buffer_addr, align 8
  %217 = load i64* %len, align 8
  %218 = getelementptr inbounds i8* %216, i64 %217
  store i8 63, i8* %218, align 1
  br label %bb107

bb107:                                            ; preds = %bb106, %bb105
  %219 = load i64* %len, align 8
  %220 = add i64 %219, 1
  store i64 %220, i64* %len, align 8
  br label %bb247

bb109:                                            ; preds = %bb56
  store i8 97, i8* %esc, align 1
  br label %c_escape

bb110:                                            ; preds = %bb56
  store i8 98, i8* %esc, align 1
  br label %c_escape

bb111:                                            ; preds = %bb56
  store i8 102, i8* %esc, align 1
  br label %c_escape

bb112:                                            ; preds = %bb56
  store i8 110, i8* %esc, align 1
  br label %c_and_shell_escape

bb113:                                            ; preds = %bb56
  store i8 114, i8* %esc, align 1
  br label %c_and_shell_escape

bb114:                                            ; preds = %bb56
  store i8 116, i8* %esc, align 1
  br label %c_and_shell_escape

bb115:                                            ; preds = %bb56
  store i8 118, i8* %esc, align 1
  br label %c_escape

bb116:                                            ; preds = %bb56
  %221 = load i8* %c, align 1
  store i8 %221, i8* %esc, align 1
  %222 = load i32* %quoting_style_addr, align 4
  %223 = icmp eq i32 %222, 2
  br i1 %223, label %bb117, label %bb120

bb117:                                            ; preds = %bb116
  %224 = load i8* %elide_outer_quotes, align 1
  %toBool118 = icmp ne i8 %224, 0
  br i1 %toBool118, label %force_outer_quoting_style, label %store_c

bb120:                                            ; preds = %bb116
  %225 = load i8* %backslash_escapes, align 1
  %toBool121 = icmp ne i8 %225, 0
  br i1 %toBool121, label %bb122, label %c_and_shell_escape

bb122:                                            ; preds = %bb120
  %226 = load i8* %elide_outer_quotes, align 1
  %toBool123 = icmp ne i8 %226, 0
  br i1 %toBool123, label %bb124, label %c_and_shell_escape

bb124:                                            ; preds = %bb122
  %227 = load i64* %quote_string_len, align 8
  %228 = icmp ne i64 %227, 0
  br i1 %228, label %store_c, label %c_and_shell_escape

c_and_shell_escape:                               ; preds = %bb124, %bb122, %bb120, %bb114, %bb113, %bb112
  %229 = load i32* %quoting_style_addr, align 4
  %230 = icmp eq i32 %229, 2
  br i1 %230, label %bb125, label %c_escape

bb125:                                            ; preds = %c_and_shell_escape
  %231 = load i8* %elide_outer_quotes, align 1
  %toBool126 = icmp ne i8 %231, 0
  br i1 %toBool126, label %force_outer_quoting_style, label %c_escape

c_escape:                                         ; preds = %bb125, %c_and_shell_escape, %bb115, %bb111, %bb110, %bb109
  %232 = load i8* %backslash_escapes, align 1
  %toBool127 = icmp ne i8 %232, 0
  br i1 %toBool127, label %bb128, label %bb247

bb128:                                            ; preds = %c_escape
  %233 = load i8* %esc, align 1
  store i8 %233, i8* %c, align 1
  br label %store_escape

bb130:                                            ; preds = %bb56, %bb56
  %234 = load i64* %argsize_addr, align 8
  %235 = icmp eq i64 %234, -1
  br i1 %235, label %bb131, label %bb132

bb131:                                            ; preds = %bb130
  %236 = load i8** %arg_addr, align 8
  %237 = getelementptr inbounds i8* %236, i64 1
  %238 = load i8* %237, align 1
  %239 = icmp ne i8 %238, 0
  %240 = zext i1 %239 to i8
  store i8 %240, i8* %iftmp.24, align 1
  br label %bb133

bb132:                                            ; preds = %bb130
  %241 = load i64* %argsize_addr, align 8
  %242 = icmp ne i64 %241, 1
  %243 = zext i1 %242 to i8
  store i8 %243, i8* %iftmp.24, align 1
  br label %bb133

bb133:                                            ; preds = %bb132, %bb131
  %244 = load i8* %iftmp.24, align 1
  %toBool134 = icmp ne i8 %244, 0
  br i1 %toBool134, label %bb247, label %bb135

bb135:                                            ; preds = %bb133, %bb56, %bb56
  %245 = load i64* %i, align 8
  %246 = icmp ne i64 %245, 0
  br i1 %246, label %bb247, label %bb136

bb136:                                            ; preds = %bb135, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56
  %247 = load i32* %quoting_style_addr, align 4
  %248 = icmp eq i32 %247, 2
  br i1 %248, label %bb137, label %bb247

bb137:                                            ; preds = %bb136
  %249 = load i8* %elide_outer_quotes, align 1
  %toBool138 = icmp ne i8 %249, 0
  br i1 %toBool138, label %force_outer_quoting_style, label %bb247

bb140:                                            ; preds = %bb56
  %250 = load i32* %quoting_style_addr, align 4
  %251 = icmp eq i32 %250, 2
  br i1 %251, label %bb141, label %bb247

bb141:                                            ; preds = %bb140
  %252 = load i8* %elide_outer_quotes, align 1
  %toBool142 = icmp ne i8 %252, 0
  br i1 %toBool142, label %force_outer_quoting_style, label %bb143

bb143:                                            ; preds = %bb141
  %253 = load i64* %len, align 8
  %254 = load i64* %buffersize_addr, align 8
  %255 = icmp ult i64 %253, %254
  br i1 %255, label %bb144, label %bb145

bb144:                                            ; preds = %bb143
  %256 = load i8** %buffer_addr, align 8
  %257 = load i64* %len, align 8
  %258 = getelementptr inbounds i8* %256, i64 %257
  store i8 39, i8* %258, align 1
  br label %bb145

bb145:                                            ; preds = %bb144, %bb143
  %259 = load i64* %len, align 8
  %260 = add i64 %259, 1
  store i64 %260, i64* %len, align 8
  %261 = load i64* %len, align 8
  %262 = load i64* %buffersize_addr, align 8
  %263 = icmp ult i64 %261, %262
  br i1 %263, label %bb146, label %bb147

bb146:                                            ; preds = %bb145
  %264 = load i8** %buffer_addr, align 8
  %265 = load i64* %len, align 8
  %266 = getelementptr inbounds i8* %264, i64 %265
  store i8 92, i8* %266, align 1
  br label %bb147

bb147:                                            ; preds = %bb146, %bb145
  %267 = load i64* %len, align 8
  %268 = add i64 %267, 1
  store i64 %268, i64* %len, align 8
  %269 = load i64* %len, align 8
  %270 = load i64* %buffersize_addr, align 8
  %271 = icmp ult i64 %269, %270
  br i1 %271, label %bb148, label %bb149

bb148:                                            ; preds = %bb147
  %272 = load i8** %buffer_addr, align 8
  %273 = load i64* %len, align 8
  %274 = getelementptr inbounds i8* %272, i64 %273
  store i8 39, i8* %274, align 1
  br label %bb149

bb149:                                            ; preds = %bb148, %bb147
  %275 = load i64* %len, align 8
  %276 = add i64 %275, 1
  store i64 %276, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb247

bb152:                                            ; preds = %bb56
  %277 = load i8* %unibyte_locale, align 1
  %toBool153 = icmp ne i8 %277, 0
  br i1 %toBool153, label %bb154, label %bb155

bb154:                                            ; preds = %bb152
  store i64 1, i64* %m, align 8
  %278 = call i16** @__ctype_b_loc() nounwind readnone
  %279 = load i16** %278, align 8
  %280 = load i8* %c, align 1
  %281 = zext i8 %280 to i32
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i16* %279, i64 %282
  %284 = load i16* %283, align 1
  %285 = zext i16 %284 to i32
  %286 = and i32 %285, 16384
  %287 = icmp ne i32 %286, 0
  %288 = zext i1 %287 to i8
  store i8 %288, i8* %printable, align 1
  br label %bb178

bb155:                                            ; preds = %bb152
  %mbstate156 = bitcast %struct.mbstate_t* %mbstate to i8*
  %289 = call i8* @memset(i8* %mbstate156, i32 0, i64 8)
  store i64 0, i64* %m, align 8
  store i8 1, i8* %printable, align 1
  %290 = load i64* %argsize_addr, align 8
  %291 = icmp eq i64 %290, -1
  br i1 %291, label %bb157, label %bb158

bb157:                                            ; preds = %bb155
  %292 = load i8** %arg_addr, align 8
  %293 = call i64 @strlen(i8* %292) nounwind readonly
  store i64 %293, i64* %argsize_addr, align 8
  br label %bb158

bb158:                                            ; preds = %bb177, %bb157, %bb155
  %294 = load i64* %i, align 8
  %295 = load i64* %m, align 8
  %296 = add i64 %294, %295
  %297 = load i64* %argsize_addr, align 8
  %298 = sub i64 %297, %296
  %299 = load i64* %i, align 8
  %300 = load i64* %m, align 8
  %301 = add i64 %299, %300
  %302 = load i8** %arg_addr, align 8
  %303 = getelementptr inbounds i8* %302, i64 %301
  %304 = call i64 @rpl_mbrtowc(i32* %w, i8* %303, i64 %298, %struct.mbstate_t* %mbstate) nounwind
  store i64 %304, i64* %bytes, align 8
  %305 = load i64* %bytes, align 8
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %bb178, label %bb159

bb159:                                            ; preds = %bb158
  %307 = load i64* %bytes, align 8
  %308 = icmp eq i64 %307, -1
  br i1 %308, label %bb160, label %bb161

bb160:                                            ; preds = %bb159
  store i8 0, i8* %printable, align 1
  br label %bb178

bb161:                                            ; preds = %bb159
  %309 = load i64* %bytes, align 8
  %310 = icmp eq i64 %309, -2
  br i1 %310, label %bb162, label %bb167

bb162:                                            ; preds = %bb161
  store i8 0, i8* %printable, align 1
  br label %bb164

bb163:                                            ; preds = %bb165
  %311 = load i64* %m, align 8
  %312 = add i64 %311, 1
  store i64 %312, i64* %m, align 8
  br label %bb164

bb164:                                            ; preds = %bb163, %bb162
  %313 = load i64* %i, align 8
  %314 = load i64* %m, align 8
  %315 = add i64 %313, %314
  %316 = load i64* %argsize_addr, align 8
  %317 = icmp uge i64 %315, %316
  br i1 %317, label %bb178, label %bb165

bb165:                                            ; preds = %bb164
  %318 = load i64* %i, align 8
  %319 = load i64* %m, align 8
  %320 = add i64 %318, %319
  %321 = load i8** %arg_addr, align 8
  %322 = getelementptr inbounds i8* %321, i64 %320
  %323 = load i8* %322, align 1
  %324 = icmp ne i8 %323, 0
  br i1 %324, label %bb163, label %bb178

bb167:                                            ; preds = %bb161
  %325 = load i8* %elide_outer_quotes, align 1
  %toBool168 = icmp ne i8 %325, 0
  br i1 %toBool168, label %bb169, label %bb175

bb169:                                            ; preds = %bb167
  %326 = load i32* %quoting_style_addr, align 4
  %327 = icmp eq i32 %326, 2
  br i1 %327, label %bb170, label %bb175

bb170:                                            ; preds = %bb169
  store i64 1, i64* %j, align 8
  br label %bb174

bb171:                                            ; preds = %bb174
  %328 = load i64* %i, align 8
  %329 = load i64* %m, align 8
  %330 = add i64 %328, %329
  %331 = load i64* %j, align 8
  %332 = add i64 %330, %331
  %333 = load i8** %arg_addr, align 8
  %334 = getelementptr inbounds i8* %333, i64 %332
  %335 = load i8* %334, align 1
  %336 = sext i8 %335 to i32
  switch i32 %336, label %bb173 [
    i32 91, label %force_outer_quoting_style
    i32 92, label %force_outer_quoting_style
    i32 94, label %force_outer_quoting_style
    i32 96, label %force_outer_quoting_style
    i32 124, label %force_outer_quoting_style
  ]

bb173:                                            ; preds = %bb171
  %337 = load i64* %j, align 8
  %338 = add i64 %337, 1
  store i64 %338, i64* %j, align 8
  br label %bb174

bb174:                                            ; preds = %bb173, %bb170
  %339 = load i64* %j, align 8
  %340 = load i64* %bytes, align 8
  %341 = icmp ult i64 %339, %340
  br i1 %341, label %bb171, label %bb175

bb175:                                            ; preds = %bb174, %bb169, %bb167
  %342 = load i32* %w, align 4
  %343 = call i32 @iswprint(i32 %342) nounwind readonly
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %bb176, label %bb177

bb176:                                            ; preds = %bb175
  store i8 0, i8* %printable, align 1
  br label %bb177

bb177:                                            ; preds = %bb176, %bb175
  %345 = load i64* %m, align 8
  %346 = load i64* %bytes, align 8
  %347 = add i64 %345, %346
  store i64 %347, i64* %m, align 8
  %348 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %mbstate) nounwind readonly
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %bb158, label %bb178

bb178:                                            ; preds = %bb164, %bb165, %bb177, %bb160, %bb158, %bb154
  %350 = load i64* %m, align 8
  %351 = icmp ugt i64 %350, 1
  br i1 %351, label %bb189, label %bb179

bb179:                                            ; preds = %bb178
  %352 = load i8* %backslash_escapes, align 1
  %toBool180 = icmp ne i8 %352, 0
  %toBool180not = xor i1 %toBool180, true
  %toBool180not181 = zext i1 %toBool180not to i8
  %toBool183 = icmp ne i8 %toBool180not181, 0
  br i1 %toBool183, label %bb247, label %bb184

bb184:                                            ; preds = %bb179
  %353 = load i8* %printable, align 1
  %toBool185 = icmp ne i8 %353, 0
  %toBool185not = xor i1 %toBool185, true
  %toBool185not186 = zext i1 %toBool185not to i8
  %toBool188 = icmp ne i8 %toBool185not186, 0
  br i1 %toBool188, label %bb189, label %bb247

bb189:                                            ; preds = %bb184, %bb178
  %354 = load i64* %i, align 8
  %355 = load i64* %m, align 8
  %356 = add i64 %354, %355
  store i64 %356, i64* %ilim, align 8
  br label %bb190

bb190:                                            ; preds = %bb245, %bb189
  %357 = load i8* %backslash_escapes, align 1
  %toBool191 = icmp ne i8 %357, 0
  %toBool191not = xor i1 %toBool191, true
  %toBool191not192 = zext i1 %toBool191not to i8
  %toBool194 = icmp ne i8 %toBool191not192, 0
  br i1 %toBool194, label %bb225, label %bb195

bb195:                                            ; preds = %bb190
  %358 = load i8* %printable, align 1
  %toBool196 = icmp ne i8 %358, 0
  %toBool196not = xor i1 %toBool196, true
  %toBool196not197 = zext i1 %toBool196not to i8
  %toBool199 = icmp ne i8 %toBool196not197, 0
  %toBool199not = xor i1 %toBool199, true
  %toBool199not200 = zext i1 %toBool199not to i8
  %toBool202 = icmp ne i8 %toBool199not200, 0
  br i1 %toBool202, label %bb225, label %bb203

bb203:                                            ; preds = %bb195
  %359 = load i8* %elide_outer_quotes, align 1
  %toBool204 = icmp ne i8 %359, 0
  br i1 %toBool204, label %force_outer_quoting_style, label %bb205

bb205:                                            ; preds = %bb203
  store i8 1, i8* %escaping, align 1
  %360 = load i32* %quoting_style_addr, align 4
  %361 = icmp eq i32 %360, 2
  br i1 %361, label %bb206, label %bb218

bb206:                                            ; preds = %bb205
  %362 = load i8* %pending_shell_escape_end, align 1
  %toBool207 = icmp ne i8 %362, 0
  %toBool207not = xor i1 %toBool207, true
  %toBool207not208 = zext i1 %toBool207not to i8
  %toBool210 = icmp ne i8 %toBool207not208, 0
  br i1 %toBool210, label %bb211, label %bb218

bb211:                                            ; preds = %bb206
  %363 = load i64* %len, align 8
  %364 = load i64* %buffersize_addr, align 8
  %365 = icmp ult i64 %363, %364
  br i1 %365, label %bb212, label %bb213

bb212:                                            ; preds = %bb211
  %366 = load i8** %buffer_addr, align 8
  %367 = load i64* %len, align 8
  %368 = getelementptr inbounds i8* %366, i64 %367
  store i8 39, i8* %368, align 1
  br label %bb213

bb213:                                            ; preds = %bb212, %bb211
  %369 = load i64* %len, align 8
  %370 = add i64 %369, 1
  store i64 %370, i64* %len, align 8
  %371 = load i64* %len, align 8
  %372 = load i64* %buffersize_addr, align 8
  %373 = icmp ult i64 %371, %372
  br i1 %373, label %bb214, label %bb215

bb214:                                            ; preds = %bb213
  %374 = load i8** %buffer_addr, align 8
  %375 = load i64* %len, align 8
  %376 = getelementptr inbounds i8* %374, i64 %375
  store i8 36, i8* %376, align 1
  br label %bb215

bb215:                                            ; preds = %bb214, %bb213
  %377 = load i64* %len, align 8
  %378 = add i64 %377, 1
  store i64 %378, i64* %len, align 8
  %379 = load i64* %len, align 8
  %380 = load i64* %buffersize_addr, align 8
  %381 = icmp ult i64 %379, %380
  br i1 %381, label %bb216, label %bb217

bb216:                                            ; preds = %bb215
  %382 = load i8** %buffer_addr, align 8
  %383 = load i64* %len, align 8
  %384 = getelementptr inbounds i8* %382, i64 %383
  store i8 39, i8* %384, align 1
  br label %bb217

bb217:                                            ; preds = %bb216, %bb215
  %385 = load i64* %len, align 8
  %386 = add i64 %385, 1
  store i64 %386, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb218

bb218:                                            ; preds = %bb217, %bb206, %bb205
  %387 = load i64* %len, align 8
  %388 = load i64* %buffersize_addr, align 8
  %389 = icmp ult i64 %387, %388
  br i1 %389, label %bb219, label %bb220

bb219:                                            ; preds = %bb218
  %390 = load i8** %buffer_addr, align 8
  %391 = load i64* %len, align 8
  %392 = getelementptr inbounds i8* %390, i64 %391
  store i8 92, i8* %392, align 1
  br label %bb220

bb220:                                            ; preds = %bb219, %bb218
  %393 = load i64* %len, align 8
  %394 = add i64 %393, 1
  store i64 %394, i64* %len, align 8
  %395 = load i64* %len, align 8
  %396 = load i64* %buffersize_addr, align 8
  %397 = icmp ult i64 %395, %396
  br i1 %397, label %bb221, label %bb222

bb221:                                            ; preds = %bb220
  %398 = load i8* %c, align 1
  %int_cast_to_i641 = zext i8 6 to i64
  %399 = icmp ult i64 %int_cast_to_i641, 8
  br i1 %399, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb221
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb221
  %400 = lshr i8 %398, 6
  %401 = add i8 %400, 48
  %402 = load i8** %buffer_addr, align 8
  %403 = load i64* %len, align 8
  %404 = getelementptr inbounds i8* %402, i64 %403
  store i8 %401, i8* %404, align 1
  br label %bb222

bb222:                                            ; preds = %klee_overshift_check.exit, %bb220
  %405 = load i64* %len, align 8
  %406 = add i64 %405, 1
  store i64 %406, i64* %len, align 8
  %407 = load i64* %len, align 8
  %408 = load i64* %buffersize_addr, align 8
  %409 = icmp ult i64 %407, %408
  br i1 %409, label %bb223, label %bb224

bb223:                                            ; preds = %bb222
  %410 = load i8* %c, align 1
  %int_cast_to_i642 = zext i8 3 to i64
  %411 = icmp ult i64 %int_cast_to_i642, 8
  br i1 %411, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %bb223
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %bb223
  %412 = lshr i8 %410, 3
  %413 = and i8 %412, 7
  %414 = add i8 %413, 48
  %415 = load i8** %buffer_addr, align 8
  %416 = load i64* %len, align 8
  %417 = getelementptr inbounds i8* %415, i64 %416
  store i8 %414, i8* %417, align 1
  br label %bb224

bb224:                                            ; preds = %klee_overshift_check.exit6, %bb222
  %418 = load i64* %len, align 8
  %419 = add i64 %418, 1
  store i64 %419, i64* %len, align 8
  %420 = load i8* %c, align 1
  %421 = and i8 %420, 7
  %422 = add i8 %421, 48
  store i8 %422, i8* %c, align 1
  br label %bb230

bb225:                                            ; preds = %bb195, %bb190
  %423 = load i8* %is_right_quote, align 1
  %toBool226 = icmp ne i8 %423, 0
  br i1 %toBool226, label %bb227, label %bb230

bb227:                                            ; preds = %bb225
  %424 = load i64* %len, align 8
  %425 = load i64* %buffersize_addr, align 8
  %426 = icmp ult i64 %424, %425
  br i1 %426, label %bb228, label %bb229

bb228:                                            ; preds = %bb227
  %427 = load i8** %buffer_addr, align 8
  %428 = load i64* %len, align 8
  %429 = getelementptr inbounds i8* %427, i64 %428
  store i8 92, i8* %429, align 1
  br label %bb229

bb229:                                            ; preds = %bb228, %bb227
  %430 = load i64* %len, align 8
  %431 = add i64 %430, 1
  store i64 %431, i64* %len, align 8
  store i8 0, i8* %is_right_quote, align 1
  br label %bb230

bb230:                                            ; preds = %bb229, %bb225, %bb224
  %432 = load i64* %i, align 8
  %433 = add i64 %432, 1
  %434 = load i64* %ilim, align 8
  %435 = icmp uge i64 %433, %434
  br i1 %435, label %store_c, label %bb231

bb231:                                            ; preds = %bb230
  %436 = load i8* %pending_shell_escape_end, align 1
  %toBool232 = icmp ne i8 %436, 0
  br i1 %toBool232, label %bb233, label %bb243

bb233:                                            ; preds = %bb231
  %437 = load i8* %escaping, align 1
  %toBool234 = icmp ne i8 %437, 0
  %toBool234not = xor i1 %toBool234, true
  %toBool234not235 = zext i1 %toBool234not to i8
  %toBool237 = icmp ne i8 %toBool234not235, 0
  br i1 %toBool237, label %bb238, label %bb243

bb238:                                            ; preds = %bb233
  %438 = load i64* %len, align 8
  %439 = load i64* %buffersize_addr, align 8
  %440 = icmp ult i64 %438, %439
  br i1 %440, label %bb239, label %bb240

bb239:                                            ; preds = %bb238
  %441 = load i8** %buffer_addr, align 8
  %442 = load i64* %len, align 8
  %443 = getelementptr inbounds i8* %441, i64 %442
  store i8 39, i8* %443, align 1
  br label %bb240

bb240:                                            ; preds = %bb239, %bb238
  %444 = load i64* %len, align 8
  %445 = add i64 %444, 1
  store i64 %445, i64* %len, align 8
  %446 = load i64* %len, align 8
  %447 = load i64* %buffersize_addr, align 8
  %448 = icmp ult i64 %446, %447
  br i1 %448, label %bb241, label %bb242

bb241:                                            ; preds = %bb240
  %449 = load i8** %buffer_addr, align 8
  %450 = load i64* %len, align 8
  %451 = getelementptr inbounds i8* %449, i64 %450
  store i8 39, i8* %451, align 1
  br label %bb242

bb242:                                            ; preds = %bb241, %bb240
  %452 = load i64* %len, align 8
  %453 = add i64 %452, 1
  store i64 %453, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb243

bb243:                                            ; preds = %bb242, %bb233, %bb231
  %454 = load i64* %len, align 8
  %455 = load i64* %buffersize_addr, align 8
  %456 = icmp ult i64 %454, %455
  br i1 %456, label %bb244, label %bb245

bb244:                                            ; preds = %bb243
  %457 = load i8* %c, align 1
  %458 = load i8** %buffer_addr, align 8
  %459 = load i64* %len, align 8
  %460 = getelementptr inbounds i8* %458, i64 %459
  store i8 %457, i8* %460, align 1
  br label %bb245

bb245:                                            ; preds = %bb244, %bb243
  %461 = load i64* %len, align 8
  %462 = add i64 %461, 1
  store i64 %462, i64* %len, align 8
  %463 = load i64* %i, align 8
  %464 = add i64 %463, 1
  store i64 %464, i64* %i, align 8
  %465 = load i8** %arg_addr, align 8
  %466 = load i64* %i, align 8
  %467 = getelementptr inbounds i8* %465, i64 %466
  %468 = load i8* %467, align 1
  store i8 %468, i8* %c, align 1
  br label %bb190

bb247:                                            ; preds = %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56, %bb56
  %469 = load i8* %backslash_escapes, align 1
  %toBool248 = icmp ne i8 %469, 0
  %toBool248not = xor i1 %toBool248, true
  %toBool248not249 = zext i1 %toBool248not to i8
  %toBool251 = icmp ne i8 %toBool248not249, 0
  br i1 %toBool251, label %bb253, label %bb252

bb252:                                            ; preds = %bb247
  %470 = load i32* %quoting_style_addr, align 4
  %471 = icmp eq i32 %470, 2
  br i1 %471, label %bb253, label %bb258

bb253:                                            ; preds = %bb252, %bb247
  %472 = load i8* %elide_outer_quotes, align 1
  %toBool254 = icmp ne i8 %472, 0
  %toBool254not = xor i1 %toBool254, true
  %toBool254not255 = zext i1 %toBool254not to i8
  %toBool257 = icmp ne i8 %toBool254not255, 0
  br i1 %toBool257, label %bb260, label %bb258

bb258:                                            ; preds = %bb253, %bb252
  %473 = load i32** %quote_these_too_addr, align 8
  %474 = icmp eq i32* %473, null
  br i1 %474, label %bb260, label %bb259

bb259:                                            ; preds = %bb258
  %475 = load i8* %c, align 1
  %int_cast_to_i64 = zext i8 32 to i64
  %476 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %477 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %477, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb259
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb259
  call void @klee_disable_symbex() nounwind
  %478 = udiv i8 %475, 32
  %479 = zext i8 %478 to i64
  %480 = load i32** %quote_these_too_addr, align 8
  %481 = getelementptr inbounds i32* %480, i64 %479
  %482 = load i32* %481, align 1
  %483 = load i8* %c, align 1
  %484 = zext i8 %483 to i32
  %485 = and i32 %484, 31
  %int_cast_to_i643 = zext i32 %485 to i64
  %486 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %486, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %klee_div_zero_check.exit
  %487 = lshr i32 %482, %485
  %488 = and i32 %487, 1
  %489 = icmp eq i32 %488, 0
  br i1 %489, label %bb260, label %store_escape

bb260:                                            ; preds = %klee_overshift_check.exit8, %bb258, %bb253
  %490 = load i8* %is_right_quote, align 1
  %toBool261 = icmp ne i8 %490, 0
  %toBool261not = xor i1 %toBool261, true
  %toBool261not262 = zext i1 %toBool261not to i8
  %toBool264 = icmp ne i8 %toBool261not262, 0
  br i1 %toBool264, label %store_c, label %store_escape

store_escape:                                     ; preds = %bb260, %klee_overshift_check.exit8, %bb128
  %491 = load i8* %elide_outer_quotes, align 1
  %toBool265 = icmp ne i8 %491, 0
  br i1 %toBool265, label %force_outer_quoting_style, label %bb266

bb266:                                            ; preds = %store_escape
  store i8 1, i8* %escaping, align 1
  %492 = load i32* %quoting_style_addr, align 4
  %493 = icmp eq i32 %492, 2
  br i1 %493, label %bb267, label %bb279

bb267:                                            ; preds = %bb266
  %494 = load i8* %pending_shell_escape_end, align 1
  %toBool268 = icmp ne i8 %494, 0
  %toBool268not = xor i1 %toBool268, true
  %toBool268not269 = zext i1 %toBool268not to i8
  %toBool271 = icmp ne i8 %toBool268not269, 0
  br i1 %toBool271, label %bb272, label %bb279

bb272:                                            ; preds = %bb267
  %495 = load i64* %len, align 8
  %496 = load i64* %buffersize_addr, align 8
  %497 = icmp ult i64 %495, %496
  br i1 %497, label %bb273, label %bb274

bb273:                                            ; preds = %bb272
  %498 = load i8** %buffer_addr, align 8
  %499 = load i64* %len, align 8
  %500 = getelementptr inbounds i8* %498, i64 %499
  store i8 39, i8* %500, align 1
  br label %bb274

bb274:                                            ; preds = %bb273, %bb272
  %501 = load i64* %len, align 8
  %502 = add i64 %501, 1
  store i64 %502, i64* %len, align 8
  %503 = load i64* %len, align 8
  %504 = load i64* %buffersize_addr, align 8
  %505 = icmp ult i64 %503, %504
  br i1 %505, label %bb275, label %bb276

bb275:                                            ; preds = %bb274
  %506 = load i8** %buffer_addr, align 8
  %507 = load i64* %len, align 8
  %508 = getelementptr inbounds i8* %506, i64 %507
  store i8 36, i8* %508, align 1
  br label %bb276

bb276:                                            ; preds = %bb275, %bb274
  %509 = load i64* %len, align 8
  %510 = add i64 %509, 1
  store i64 %510, i64* %len, align 8
  %511 = load i64* %len, align 8
  %512 = load i64* %buffersize_addr, align 8
  %513 = icmp ult i64 %511, %512
  br i1 %513, label %bb277, label %bb278

bb277:                                            ; preds = %bb276
  %514 = load i8** %buffer_addr, align 8
  %515 = load i64* %len, align 8
  %516 = getelementptr inbounds i8* %514, i64 %515
  store i8 39, i8* %516, align 1
  br label %bb278

bb278:                                            ; preds = %bb277, %bb276
  %517 = load i64* %len, align 8
  %518 = add i64 %517, 1
  store i64 %518, i64* %len, align 8
  store i8 1, i8* %pending_shell_escape_end, align 1
  br label %bb279

bb279:                                            ; preds = %bb278, %bb267, %bb266
  %519 = load i64* %len, align 8
  %520 = load i64* %buffersize_addr, align 8
  %521 = icmp ult i64 %519, %520
  br i1 %521, label %bb280, label %bb281

bb280:                                            ; preds = %bb279
  %522 = load i8** %buffer_addr, align 8
  %523 = load i64* %len, align 8
  %524 = getelementptr inbounds i8* %522, i64 %523
  store i8 92, i8* %524, align 1
  br label %bb281

bb281:                                            ; preds = %bb280, %bb279
  %525 = load i64* %len, align 8
  %526 = add i64 %525, 1
  store i64 %526, i64* %len, align 8
  br label %store_c

store_c:                                          ; preds = %bb230, %bb117, %bb281, %bb260, %bb124
  %527 = load i8* %pending_shell_escape_end, align 1
  %toBool282 = icmp ne i8 %527, 0
  br i1 %toBool282, label %bb283, label %bb293

bb283:                                            ; preds = %store_c
  %528 = load i8* %escaping, align 1
  %toBool284 = icmp ne i8 %528, 0
  %toBool284not = xor i1 %toBool284, true
  %toBool284not285 = zext i1 %toBool284not to i8
  %toBool287 = icmp ne i8 %toBool284not285, 0
  br i1 %toBool287, label %bb288, label %bb293

bb288:                                            ; preds = %bb283
  %529 = load i64* %len, align 8
  %530 = load i64* %buffersize_addr, align 8
  %531 = icmp ult i64 %529, %530
  br i1 %531, label %bb289, label %bb290

bb289:                                            ; preds = %bb288
  %532 = load i8** %buffer_addr, align 8
  %533 = load i64* %len, align 8
  %534 = getelementptr inbounds i8* %532, i64 %533
  store i8 39, i8* %534, align 1
  br label %bb290

bb290:                                            ; preds = %bb289, %bb288
  %535 = load i64* %len, align 8
  %536 = add i64 %535, 1
  store i64 %536, i64* %len, align 8
  %537 = load i64* %len, align 8
  %538 = load i64* %buffersize_addr, align 8
  %539 = icmp ult i64 %537, %538
  br i1 %539, label %bb291, label %bb292

bb291:                                            ; preds = %bb290
  %540 = load i8** %buffer_addr, align 8
  %541 = load i64* %len, align 8
  %542 = getelementptr inbounds i8* %540, i64 %541
  store i8 39, i8* %542, align 1
  br label %bb292

bb292:                                            ; preds = %bb291, %bb290
  %543 = load i64* %len, align 8
  %544 = add i64 %543, 1
  store i64 %544, i64* %len, align 8
  store i8 0, i8* %pending_shell_escape_end, align 1
  br label %bb293

bb293:                                            ; preds = %bb292, %bb283, %store_c
  %545 = load i64* %len, align 8
  %546 = load i64* %buffersize_addr, align 8
  %547 = icmp ult i64 %545, %546
  br i1 %547, label %bb294, label %bb295

bb294:                                            ; preds = %bb293
  %548 = load i8* %c, align 1
  %549 = load i8** %buffer_addr, align 8
  %550 = load i64* %len, align 8
  %551 = getelementptr inbounds i8* %549, i64 %550
  store i8 %548, i8* %551, align 1
  br label %bb295

bb295:                                            ; preds = %bb294, %bb293
  %552 = load i64* %len, align 8
  %553 = add i64 %552, 1
  store i64 %553, i64* %len, align 8
  br label %bb296

bb296:                                            ; preds = %bb295, %bb86
  %554 = load i64* %i, align 8
  %555 = add i64 %554, 1
  store i64 %555, i64* %i, align 8
  br label %bb297

bb297:                                            ; preds = %bb296, %bb42
  %556 = load i64* %argsize_addr, align 8
  %557 = icmp eq i64 %556, -1
  br i1 %557, label %bb298, label %bb299

bb298:                                            ; preds = %bb297
  %558 = load i8** %arg_addr, align 8
  %559 = load i64* %i, align 8
  %560 = getelementptr inbounds i8* %558, i64 %559
  %561 = load i8* %560, align 1
  %562 = icmp ne i8 %561, 0
  %563 = zext i1 %562 to i8
  store i8 %563, i8* %iftmp.29, align 1
  br label %bb300

bb299:                                            ; preds = %bb297
  %564 = load i64* %i, align 8
  %565 = load i64* %argsize_addr, align 8
  %566 = icmp ne i64 %564, %565
  %567 = zext i1 %566 to i8
  store i8 %567, i8* %iftmp.29, align 1
  br label %bb300

bb300:                                            ; preds = %bb299, %bb298
  %568 = load i8* %iftmp.29, align 1
  %toBool301 = icmp ne i8 %568, 0
  br i1 %toBool301, label %bb43, label %bb302

bb302:                                            ; preds = %bb300
  %569 = load i64* %len, align 8
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %bb303, label %bb306

bb303:                                            ; preds = %bb302
  %571 = load i32* %quoting_style_addr, align 4
  %572 = icmp eq i32 %571, 2
  br i1 %572, label %bb304, label %bb306

bb304:                                            ; preds = %bb303
  %573 = load i8* %elide_outer_quotes, align 1
  %toBool305 = icmp ne i8 %573, 0
  br i1 %toBool305, label %force_outer_quoting_style, label %bb306

bb306:                                            ; preds = %bb304, %bb303, %bb302
  %574 = load i8** %quote_string, align 8
  %575 = icmp ne i8* %574, null
  br i1 %575, label %bb307, label %bb317

bb307:                                            ; preds = %bb306
  %576 = load i8* %elide_outer_quotes, align 1
  %toBool308 = icmp ne i8 %576, 0
  %toBool308not = xor i1 %toBool308, true
  %toBool308not309 = zext i1 %toBool308not to i8
  %toBool311 = icmp ne i8 %toBool308not309, 0
  br i1 %toBool311, label %bb316, label %bb317

bb313:                                            ; preds = %bb316
  %577 = load i64* %len, align 8
  %578 = load i64* %buffersize_addr, align 8
  %579 = icmp ult i64 %577, %578
  br i1 %579, label %bb314, label %bb315

bb314:                                            ; preds = %bb313
  %580 = load i8** %quote_string, align 8
  %581 = load i8* %580, align 1
  %582 = load i8** %buffer_addr, align 8
  %583 = load i64* %len, align 8
  %584 = getelementptr inbounds i8* %582, i64 %583
  store i8 %581, i8* %584, align 1
  br label %bb315

bb315:                                            ; preds = %bb314, %bb313
  %585 = load i64* %len, align 8
  %586 = add i64 %585, 1
  store i64 %586, i64* %len, align 8
  %587 = load i8** %quote_string, align 8
  %588 = getelementptr inbounds i8* %587, i64 1
  store i8* %588, i8** %quote_string, align 8
  br label %bb316

bb316:                                            ; preds = %bb307, %bb315
  %589 = load i8** %quote_string, align 8
  %590 = load i8* %589, align 1
  %591 = icmp ne i8 %590, 0
  br i1 %591, label %bb313, label %bb317

bb317:                                            ; preds = %bb316, %bb307, %bb306
  %592 = load i64* %len, align 8
  %593 = load i64* %buffersize_addr, align 8
  %594 = icmp ult i64 %592, %593
  br i1 %594, label %bb318, label %bb319

bb318:                                            ; preds = %bb317
  %595 = load i8** %buffer_addr, align 8
  %596 = load i64* %len, align 8
  %597 = getelementptr inbounds i8* %595, i64 %596
  store i8 0, i8* %597, align 1
  br label %bb319

bb319:                                            ; preds = %bb318, %bb317
  %598 = load i64* %len, align 8
  store i64 %598, i64* %0, align 8
  br label %bb324

force_outer_quoting_style:                        ; preds = %bb171, %bb171, %bb171, %bb171, %bb171, %bb304, %store_escape, %bb203, %bb141, %bb137, %bb125, %bb117, %bb97, %bb90, %bb59, %bb53
  %599 = load i32* %quoting_style_addr, align 4
  %600 = icmp eq i32 %599, 2
  br i1 %600, label %bb320, label %bb323

bb320:                                            ; preds = %force_outer_quoting_style
  %601 = load i8* %backslash_escapes, align 1
  %toBool321 = icmp ne i8 %601, 0
  br i1 %toBool321, label %bb322, label %bb323

bb322:                                            ; preds = %bb320
  store i32 4, i32* %quoting_style_addr, align 4
  br label %bb323

bb323:                                            ; preds = %bb322, %bb320, %force_outer_quoting_style
  %602 = load i32* %flags_addr, align 4
  %603 = and i32 %602, -3
  %604 = load i8** %buffer_addr, align 8
  %605 = load i64* %buffersize_addr, align 8
  %606 = load i8** %arg_addr, align 8
  %607 = load i64* %argsize_addr, align 8
  %608 = load i32* %quoting_style_addr, align 4
  %609 = load i8** %left_quote_addr, align 8
  %610 = load i8** %right_quote_addr, align 8
  %611 = call i64 @quotearg_buffer_restyled(i8* %604, i64 %605, i8* %606, i64 %607, i32 %608, i32 %603, i32* null, i8* %609, i8* %610) nounwind
  store i64 %611, i64* %0, align 8
  br label %bb324

bb324:                                            ; preds = %bb323, %bb319
  %612 = load i64* %0, align 8
  store i64 %612, i64* %retval, align 8
  %retval325 = load i64* %retval
  ret i64 %retval325
}

define i64 @quotearg_buffer(i8* %buffer, i64 %buffersize, i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %buffersize_addr = alloca i64, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.30 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %r = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %buffersize, i64* %buffersize_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.30, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.30, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.30, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 4
  %9 = load i8** %8, align 8
  %10 = load %struct.quoting_options** %p, align 8
  %11 = getelementptr inbounds %struct.quoting_options* %10, i32 0, i32 3
  %12 = load i8** %11, align 8
  %13 = load %struct.quoting_options** %p, align 8
  %14 = getelementptr inbounds %struct.quoting_options* %13, i32 0, i32 2
  %15 = getelementptr inbounds [8 x i32]* %14, i64 0, i64 0
  %16 = load %struct.quoting_options** %p, align 8
  %17 = getelementptr inbounds %struct.quoting_options* %16, i32 0, i32 1
  %18 = load i32* %17, align 4
  %19 = load %struct.quoting_options** %p, align 8
  %20 = getelementptr inbounds %struct.quoting_options* %19, i32 0, i32 0
  %21 = load i32* %20, align 8
  %22 = load i8** %buffer_addr, align 8
  %23 = load i64* %buffersize_addr, align 8
  %24 = load i8** %arg_addr, align 8
  %25 = load i64* %argsize_addr, align 8
  %26 = call i64 @quotearg_buffer_restyled(i8* %22, i64 %23, i8* %24, i64 %25, i32 %21, i32 %18, i32* %15, i8* %12, i8* %9) nounwind
  store i64 %26, i64* %r, align 8
  %27 = call i32* @__errno_location() nounwind readnone
  %28 = load i32* %e, align 4
  store i32 %28, i32* %27, align 4
  %29 = load i64* %r, align 8
  store i64 %29, i64* %0, align 8
  %30 = load i64* %0, align 8
  store i64 %30, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i8* @quotearg_alloc(i8* %arg, i64 %argsize, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = load %struct.quoting_options** %o_addr, align 8
  %4 = call i8* @quotearg_alloc_mem(i8* %1, i64 %2, i64* null, %struct.quoting_options* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_alloc_mem(i8* %arg, i64 %argsize, i64* %size, %struct.quoting_options* %o) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %size_addr = alloca i64*, align 8
  %o_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.31 = alloca %struct.quoting_options*
  %p = alloca %struct.quoting_options*
  %e = alloca i32
  %flags = alloca i32
  %bufsize = alloca i64
  %buf = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i64* %size, i64** %size_addr
  store %struct.quoting_options* %o, %struct.quoting_options** %o_addr
  %1 = load %struct.quoting_options** %o_addr, align 8
  %2 = icmp ne %struct.quoting_options* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load %struct.quoting_options** %o_addr, align 8
  store %struct.quoting_options* %3, %struct.quoting_options** %iftmp.31, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store %struct.quoting_options* @default_quoting_options, %struct.quoting_options** %iftmp.31, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load %struct.quoting_options** %iftmp.31, align 8
  store %struct.quoting_options* %4, %struct.quoting_options** %p, align 8
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  store i32 %6, i32* %e, align 4
  %7 = load %struct.quoting_options** %p, align 8
  %8 = getelementptr inbounds %struct.quoting_options* %7, i32 0, i32 1
  %9 = load i32* %8, align 4
  %10 = load i64** %size_addr, align 8
  %11 = icmp eq i64* %10, null
  %12 = zext i1 %11 to i32
  %13 = or i32 %9, %12
  store i32 %13, i32* %flags, align 4
  %14 = load %struct.quoting_options** %p, align 8
  %15 = getelementptr inbounds %struct.quoting_options* %14, i32 0, i32 4
  %16 = load i8** %15, align 8
  %17 = load %struct.quoting_options** %p, align 8
  %18 = getelementptr inbounds %struct.quoting_options* %17, i32 0, i32 3
  %19 = load i8** %18, align 8
  %20 = load %struct.quoting_options** %p, align 8
  %21 = getelementptr inbounds %struct.quoting_options* %20, i32 0, i32 2
  %22 = getelementptr inbounds [8 x i32]* %21, i64 0, i64 0
  %23 = load %struct.quoting_options** %p, align 8
  %24 = getelementptr inbounds %struct.quoting_options* %23, i32 0, i32 0
  %25 = load i32* %24, align 8
  %26 = load i8** %arg_addr, align 8
  %27 = load i64* %argsize_addr, align 8
  %28 = load i32* %flags, align 4
  %29 = call i64 @quotearg_buffer_restyled(i8* null, i64 0, i8* %26, i64 %27, i32 %25, i32 %28, i32* %22, i8* %19, i8* %16) nounwind
  %30 = add i64 %29, 1
  store i64 %30, i64* %bufsize, align 8
  %31 = load i64* %bufsize, align 8
  %32 = call noalias i8* @xcharalloc(i64 %31) nounwind
  store i8* %32, i8** %buf, align 8
  %33 = load %struct.quoting_options** %p, align 8
  %34 = getelementptr inbounds %struct.quoting_options* %33, i32 0, i32 4
  %35 = load i8** %34, align 8
  %36 = load %struct.quoting_options** %p, align 8
  %37 = getelementptr inbounds %struct.quoting_options* %36, i32 0, i32 3
  %38 = load i8** %37, align 8
  %39 = load %struct.quoting_options** %p, align 8
  %40 = getelementptr inbounds %struct.quoting_options* %39, i32 0, i32 2
  %41 = getelementptr inbounds [8 x i32]* %40, i64 0, i64 0
  %42 = load %struct.quoting_options** %p, align 8
  %43 = getelementptr inbounds %struct.quoting_options* %42, i32 0, i32 0
  %44 = load i32* %43, align 8
  %45 = load i8** %buf, align 8
  %46 = load i64* %bufsize, align 8
  %47 = load i8** %arg_addr, align 8
  %48 = load i64* %argsize_addr, align 8
  %49 = load i32* %flags, align 4
  %50 = call i64 @quotearg_buffer_restyled(i8* %45, i64 %46, i8* %47, i64 %48, i32 %44, i32 %49, i32* %41, i8* %38, i8* %35) nounwind
  %51 = call i32* @__errno_location() nounwind readnone
  %52 = load i32* %e, align 4
  store i32 %52, i32* %51, align 4
  %53 = load i64** %size_addr, align 8
  %54 = icmp ne i64* %53, null
  br i1 %54, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %55 = load i64* %bufsize, align 8
  %56 = sub i64 %55, 1
  %57 = load i64** %size_addr, align 8
  store i64 %56, i64* %57, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %58 = load i8** %buf, align 8
  store i8* %58, i8** %0, align 8
  %59 = load i8** %0, align 8
  store i8* %59, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define void @quotearg_free() nounwind {
entry:
  %sv = alloca %struct.slotvec*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %0, %struct.slotvec** %sv, align 8
  store i32 1, i32* %i, align 4
  br label %bb1

bb:                                               ; preds = %bb1
  %1 = load i32* %i, align 4
  %2 = zext i32 %1 to i64
  %3 = getelementptr inbounds %struct.slotvec* %11, i64 %2
  %4 = getelementptr inbounds %struct.slotvec* %3, i32 0, i32 1
  %5 = load i8** %4, align 8
  call void @free(i8* %5) nounwind
  %6 = load i32* %i, align 4
  %7 = add i32 %6, 1
  store i32 %7, i32* %i, align 4
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* @nslots, align 4
  %9 = load i32* %i, align 4
  %10 = icmp ult i32 %9, %8
  %11 = load %struct.slotvec** %sv, align 8
  br i1 %10, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.slotvec* %11, i64 0
  %13 = getelementptr inbounds %struct.slotvec* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = icmp ne i8* %14, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %16 = load %struct.slotvec** %sv, align 8
  %17 = getelementptr inbounds %struct.slotvec* %16, i64 0
  %18 = getelementptr inbounds %struct.slotvec* %17, i32 0, i32 1
  %19 = load i8** %18, align 8
  call void @free(i8* %19) nounwind
  store i64 256, i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 16
  store i8* getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0), i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %20 = load %struct.slotvec** %sv, align 8
  %21 = icmp ne %struct.slotvec* %20, @slotvec0
  br i1 %21, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %22 = load %struct.slotvec** %sv, align 8
  %23 = bitcast %struct.slotvec* %22 to i8*
  call void @free(i8* %23) nounwind
  store %struct.slotvec* @slotvec0, %struct.slotvec** @slotvec, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  store i32 1, i32* @nslots, align 4
  ret void
}

define internal i8* @quotearg_n_options(i32 %n, i8* %arg, i64 %argsize, %struct.quoting_options* %options) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %options_addr = alloca %struct.quoting_options*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.34 = alloca i8*
  %e = alloca i32
  %n0 = alloca i32
  %sv = alloca %struct.slotvec*
  %n1 = alloca i64
  %preallocated = alloca i8
  %size = alloca i64
  %val = alloca i8*
  %flags = alloca i32
  %qsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store %struct.quoting_options* %options, %struct.quoting_options** %options_addr
  %1 = call i32* @__errno_location() nounwind readnone
  %2 = load i32* %1, align 4
  store i32 %2, i32* %e, align 4
  %3 = load i32* %n_addr, align 4
  store i32 %3, i32* %n0, align 4
  %4 = load %struct.slotvec** @slotvec, align 8
  store %struct.slotvec* %4, %struct.slotvec** %sv, align 8
  %5 = load i32* %n_addr, align 4
  %6 = icmp slt i32 %5, 0
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @abort() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %7 = load i32* @nslots, align 4
  %8 = load i32* %n0, align 4
  %9 = icmp ule i32 %7, %8
  br i1 %9, label %bb2, label %bb11

bb2:                                              ; preds = %bb1
  %10 = load i32* %n0, align 4
  %11 = add i32 %10, 1
  %12 = zext i32 %11 to i64
  store i64 %12, i64* %n1, align 8
  %13 = load %struct.slotvec** %sv, align 8
  %14 = icmp eq %struct.slotvec* %13, @slotvec0
  %15 = zext i1 %14 to i8
  store i8 %15, i8* %preallocated, align 1
  %16 = load i64* %n1, align 8
  %17 = icmp ugt i64 %16, 1152921504606846975
  br i1 %17, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @xalloc_die() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %18 = load i64* %n1, align 8
  %19 = mul i64 %18, 16
  %20 = load i8* %preallocated, align 1
  %toBool = icmp ne i8 %20, 0
  br i1 %toBool, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i8* null, i8** %iftmp.34, align 8
  br label %bb7

bb6:                                              ; preds = %bb4
  %21 = load %struct.slotvec** %sv, align 8
  %22 = bitcast %struct.slotvec* %21 to i8*
  store i8* %22, i8** %iftmp.34, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %23 = load i8** %iftmp.34, align 8
  %24 = call i8* @xrealloc(i8* %23, i64 %19) nounwind
  %25 = bitcast i8* %24 to %struct.slotvec*
  store %struct.slotvec* %25, %struct.slotvec** %sv, align 8
  %26 = load %struct.slotvec** %sv, align 8
  store %struct.slotvec* %26, %struct.slotvec** @slotvec, align 8
  %27 = load i8* %preallocated, align 1
  %toBool8 = icmp ne i8 %27, 0
  br i1 %toBool8, label %bb9, label %bb10

bb9:                                              ; preds = %bb7
  %28 = load %struct.slotvec** %sv, align 8
  %29 = getelementptr inbounds %struct.slotvec* %28, i32 0, i32 0
  %30 = load i64* getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 0), align 8
  store i64 %30, i64* %29, align 8
  %31 = getelementptr inbounds %struct.slotvec* %28, i32 0, i32 1
  %32 = load i8** getelementptr inbounds (%struct.slotvec* @slotvec0, i64 0, i32 1), align 8
  store i8* %32, i8** %31, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb7
  %33 = load i32* @nslots, align 4
  %34 = zext i32 %33 to i64
  %35 = load i64* %n1, align 8
  %36 = sub i64 %35, %34
  %37 = mul i64 %36, 16
  %38 = load i32* @nslots, align 4
  %39 = load %struct.slotvec** %sv, align 8
  %40 = zext i32 %38 to i64
  %41 = getelementptr inbounds %struct.slotvec* %39, i64 %40
  %42 = bitcast %struct.slotvec* %41 to i8*
  %43 = call i8* @memset(i8* %42, i32 0, i64 %37)
  %44 = load i64* %n1, align 8
  %45 = trunc i64 %44 to i32
  store i32 %45, i32* @nslots, align 4
  br label %bb11

bb11:                                             ; preds = %bb10, %bb1
  %46 = load %struct.slotvec** %sv, align 8
  %47 = load i32* %n_addr, align 4
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %struct.slotvec* %46, i64 %48
  %50 = getelementptr inbounds %struct.slotvec* %49, i32 0, i32 0
  %51 = load i64* %50, align 8
  store i64 %51, i64* %size, align 8
  %52 = load %struct.slotvec** %sv, align 8
  %53 = load i32* %n_addr, align 4
  %54 = sext i32 %53 to i64
  %55 = getelementptr inbounds %struct.slotvec* %52, i64 %54
  %56 = getelementptr inbounds %struct.slotvec* %55, i32 0, i32 1
  %57 = load i8** %56, align 8
  store i8* %57, i8** %val, align 8
  %58 = load %struct.quoting_options** %options_addr, align 8
  %59 = getelementptr inbounds %struct.quoting_options* %58, i32 0, i32 1
  %60 = load i32* %59, align 4
  %61 = or i32 %60, 1
  store i32 %61, i32* %flags, align 4
  %62 = load %struct.quoting_options** %options_addr, align 8
  %63 = getelementptr inbounds %struct.quoting_options* %62, i32 0, i32 4
  %64 = load i8** %63, align 8
  %65 = load %struct.quoting_options** %options_addr, align 8
  %66 = getelementptr inbounds %struct.quoting_options* %65, i32 0, i32 3
  %67 = load i8** %66, align 8
  %68 = load %struct.quoting_options** %options_addr, align 8
  %69 = getelementptr inbounds %struct.quoting_options* %68, i32 0, i32 2
  %70 = getelementptr inbounds [8 x i32]* %69, i64 0, i64 0
  %71 = load %struct.quoting_options** %options_addr, align 8
  %72 = getelementptr inbounds %struct.quoting_options* %71, i32 0, i32 0
  %73 = load i32* %72, align 8
  %74 = load i8** %val, align 8
  %75 = load i64* %size, align 8
  %76 = load i8** %arg_addr, align 8
  %77 = load i64* %argsize_addr, align 8
  %78 = load i32* %flags, align 4
  %79 = call i64 @quotearg_buffer_restyled(i8* %74, i64 %75, i8* %76, i64 %77, i32 %73, i32 %78, i32* %70, i8* %67, i8* %64) nounwind
  store i64 %79, i64* %qsize, align 8
  %80 = load i64* %size, align 8
  %81 = load i64* %qsize, align 8
  %82 = icmp ule i64 %80, %81
  br i1 %82, label %bb12, label %bb15

bb12:                                             ; preds = %bb11
  %83 = load %struct.slotvec** %sv, align 8
  %84 = load i32* %n_addr, align 4
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds %struct.slotvec* %83, i64 %85
  %87 = load i64* %qsize, align 8
  %88 = add i64 %87, 1
  store i64 %88, i64* %size, align 8
  %89 = getelementptr inbounds %struct.slotvec* %86, i32 0, i32 0
  %90 = load i64* %size, align 8
  store i64 %90, i64* %89, align 8
  %91 = load i8** %val, align 8
  %92 = icmp ne i8* %91, getelementptr inbounds ([256 x i8]* @slot0, i64 0, i64 0)
  br i1 %92, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %93 = load i8** %val, align 8
  call void @free(i8* %93) nounwind
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12
  %94 = load %struct.slotvec** %sv, align 8
  %95 = load i32* %n_addr, align 4
  %96 = sext i32 %95 to i64
  %97 = getelementptr inbounds %struct.slotvec* %94, i64 %96
  %98 = load i64* %size, align 8
  %99 = call noalias i8* @xcharalloc(i64 %98) nounwind
  store i8* %99, i8** %val, align 8
  %100 = getelementptr inbounds %struct.slotvec* %97, i32 0, i32 1
  %101 = load i8** %val, align 8
  store i8* %101, i8** %100, align 8
  %102 = load %struct.quoting_options** %options_addr, align 8
  %103 = getelementptr inbounds %struct.quoting_options* %102, i32 0, i32 4
  %104 = load i8** %103, align 8
  %105 = load %struct.quoting_options** %options_addr, align 8
  %106 = getelementptr inbounds %struct.quoting_options* %105, i32 0, i32 3
  %107 = load i8** %106, align 8
  %108 = load %struct.quoting_options** %options_addr, align 8
  %109 = getelementptr inbounds %struct.quoting_options* %108, i32 0, i32 2
  %110 = getelementptr inbounds [8 x i32]* %109, i64 0, i64 0
  %111 = load %struct.quoting_options** %options_addr, align 8
  %112 = getelementptr inbounds %struct.quoting_options* %111, i32 0, i32 0
  %113 = load i32* %112, align 8
  %114 = load i8** %val, align 8
  %115 = load i64* %size, align 8
  %116 = load i8** %arg_addr, align 8
  %117 = load i64* %argsize_addr, align 8
  %118 = load i32* %flags, align 4
  %119 = call i64 @quotearg_buffer_restyled(i8* %114, i64 %115, i8* %116, i64 %117, i32 %113, i32 %118, i32* %110, i8* %107, i8* %104) nounwind
  br label %bb15

bb15:                                             ; preds = %bb14, %bb11
  %120 = call i32* @__errno_location() nounwind readnone
  %121 = load i32* %e, align 4
  store i32 %121, i32* %120, align 4
  %122 = load i8** %val, align 8
  store i8* %122, i8** %0, align 8
  %123 = load i8** %0, align 8
  store i8* %123, i8** %retval, align 8
  %retval16 = load i8** %retval
  ret i8* %retval16
}

define i8* @quotearg_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 -1, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @default_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style(i32 %n, i32 %s, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 -1, %struct.quoting_options* %o) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style_mem(i32 %n, i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %o, i32 %1) nounwind
  %2 = load i32* %n_addr, align 4
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_options(i32 %2, i8* %3, i64 %4, %struct.quoting_options* %o) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style(i32 %s, i8* %arg) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quotearg_n_style(i32 0, i32 %1, i8* %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_style_mem(i32 %s, i8* %arg, i64 %argsize) nounwind {
entry:
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %s_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_style_mem(i32 0, i32 %1, i8* %2, i64 %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_char_mem(i8* %arg, i64 %argsize, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %options = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  store i8 %ch, i8* %ch_addr
  %options1 = bitcast %struct.quoting_options* %options to i8*
  %1 = call i8* @memcpy(i8* %options1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8* %ch_addr, align 1
  %3 = sext i8 %2 to i32
  %4 = trunc i32 %3 to i8
  %5 = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext %4, i32 1) nounwind
  %6 = load i8** %arg_addr, align 8
  %7 = load i64* %argsize_addr, align 8
  %8 = call i8* @quotearg_n_options(i32 0, i8* %6, i64 %7, %struct.quoting_options* %options) nounwind
  store i8* %8, i8** %0, align 8
  %9 = load i8** %0, align 8
  store i8* %9, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_char(i8* %arg, i8 signext %ch) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %ch_addr = alloca i8, align 1
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i8 %ch, i8* %ch_addr
  %1 = load i8* %ch_addr, align 1
  %2 = sext i8 %1 to i32
  %3 = load i8** %arg_addr, align 8
  %4 = trunc i32 %2 to i8
  %5 = call i8* @quotearg_char_mem(i8* %3, i64 -1, i8 signext %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quotearg_char(i8* %1, i8 signext 58) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_colon_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quotearg_char_mem(i8* %1, i64 %2, i8 signext 58) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_style_colon(i32 %n, i32 %s, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %s_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %options = alloca %struct.quoting_options
  %memtmp = alloca %struct.quoting_options, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i32 %s, i32* %s_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %s_addr, align 4
  call void @quoting_options_from_style(%struct.quoting_options* noalias sret %memtmp, i32 %1) nounwind
  %options1 = bitcast %struct.quoting_options* %options to i8*
  %memtmp2 = bitcast %struct.quoting_options* %memtmp to i8*
  %2 = call i8* @memcpy(i8* %options1, i8* %memtmp2, i64 56)
  %3 = call i32 @set_char_quoting(%struct.quoting_options* %options, i8 signext 58, i32 1) nounwind
  %4 = load i32* %n_addr, align 4
  %5 = load i8** %arg_addr, align 8
  %6 = call i8* @quotearg_n_options(i32 %4, i8* %5, i64 -1, %struct.quoting_options* %options) nounwind
  store i8* %6, i8** %0, align 8
  %7 = load i8** %0, align 8
  store i8* %7, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @quotearg_n_custom(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  %4 = load i8** %arg_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 %1, i8* %2, i8* %3, i8* %4, i64 -1) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_n_custom_mem(i32 %n, i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %o = alloca %struct.quoting_options
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %o1 = bitcast %struct.quoting_options* %o to i8*
  %1 = call i8* @memcpy(i8* %o1, i8* bitcast (%struct.quoting_options* @default_quoting_options to i8*), i64 56)
  %2 = load i8** %left_quote_addr, align 8
  %3 = load i8** %right_quote_addr, align 8
  call void @set_custom_quoting(%struct.quoting_options* %o, i8* %2, i8* %3) nounwind
  %4 = load i32* %n_addr, align 4
  %5 = load i8** %arg_addr, align 8
  %6 = load i64* %argsize_addr, align 8
  %7 = call i8* @quotearg_n_options(i32 %4, i8* %5, i64 %6, %struct.quoting_options* %o) nounwind
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @quotearg_custom(i8* %left_quote, i8* %right_quote, i8* %arg) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = call i8* @quotearg_n_custom(i32 0, i8* %1, i8* %2, i8* %3) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quotearg_custom_mem(i8* %left_quote, i8* %right_quote, i8* %arg, i64 %argsize) nounwind {
entry:
  %left_quote_addr = alloca i8*, align 8
  %right_quote_addr = alloca i8*, align 8
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %left_quote, i8** %left_quote_addr
  store i8* %right_quote, i8** %right_quote_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %left_quote_addr, align 8
  %2 = load i8** %right_quote_addr, align 8
  %3 = load i8** %arg_addr, align 8
  %4 = load i64* %argsize_addr, align 8
  %5 = call i8* @quotearg_n_custom_mem(i32 0, i8* %1, i8* %2, i8* %3, i64 %4) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n_mem(i32 %n, i8* %arg, i64 %argsize) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = load i64* %argsize_addr, align 8
  %4 = call i8* @quotearg_n_options(i32 %1, i8* %2, i64 %3, %struct.quoting_options* @quote_quoting_options) nounwind
  store i8* %4, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_mem(i8* %arg, i64 %argsize) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %argsize_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  store i64 %argsize, i64* %argsize_addr
  %1 = load i8** %arg_addr, align 8
  %2 = load i64* %argsize_addr, align 8
  %3 = call i8* @quote_n_mem(i32 0, i8* %1, i64 %2) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote_n(i32 %n, i8* %arg) nounwind {
entry:
  %n_addr = alloca i32, align 4
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %n, i32* %n_addr
  store i8* %arg, i8** %arg_addr
  %1 = load i32* %n_addr, align 4
  %2 = load i8** %arg_addr, align 8
  %3 = call i8* @quote_n_mem(i32 %1, i8* %2, i64 -1) nounwind
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i8* @quote(i8* %arg) nounwind {
entry:
  %arg_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %arg, i8** %arg_addr
  %1 = load i8** %arg_addr, align 8
  %2 = call i8* @quote_n(i32 0, i8* %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i64 @safe_write(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %buf_addr = alloca i8*, align 8
  %count_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %result = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %buf, i8** %buf_addr
  store i64 %count, i64* %count_addr
  br label %bb

bb:                                               ; preds = %bb2, %bb5, %entry
  %1 = load i32* %fd_addr, align 4
  %2 = load i8** %buf_addr, align 8
  %3 = load i64* %count_addr, align 8
  %4 = call i64 @write(i32 %1, i8* %2, i64 %3) nounwind
  store i64 %4, i64* %result, align 8
  %5 = load i64* %result, align 8
  %6 = icmp sge i64 %5, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = load i64* %result, align 8
  store i64 %7, i64* %0, align 8
  br label %bb8

bb2:                                              ; preds = %bb
  %8 = call i32* @__errno_location() nounwind readnone
  %9 = load i32* %8, align 4
  %10 = icmp eq i32 %9, 4
  br i1 %10, label %bb, label %bb3

bb3:                                              ; preds = %bb2
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %11, align 4
  %13 = icmp ne i32 %12, 22
  br i1 %13, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %14 = load i64* %count_addr, align 8
  %15 = icmp ule i64 %14, 2147475456
  br i1 %15, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  store i64 2147475456, i64* %count_addr, align 8
  br label %bb

bb6:                                              ; preds = %bb4, %bb3
  %16 = load i64* %result, align 8
  store i64 %16, i64* %0, align 8
  br label %bb8

bb8:                                              ; preds = %bb6, %bb1
  %17 = load i64* %0, align 8
  store i64 %17, i64* %retval, align 8
  %retval9 = load i64* %retval
  ret i64 %retval9
}

define zeroext i8 @same_name(i8* %source, i8* %dest) nounwind {
entry:
  %source_addr = alloca i8*, align 8
  %dest_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca i32
  %iftmp.0 = alloca i32
  %source_basename = alloca i8*
  %dest_basename = alloca i8*
  %source_baselen = alloca i64
  %dest_baselen = alloca i64
  %identical_basenames = alloca i8
  %compare_dirs = alloca i8
  %same = alloca i8
  %source_dir_stats = alloca %struct.stat
  %dest_dir_stats = alloca %struct.stat
  %source_dirname = alloca i8*
  %dest_dirname = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %source, i8** %source_addr
  store i8* %dest, i8** %dest_addr
  %1 = load i8** %source_addr, align 8
  %2 = call i8* @last_component(i8* %1) nounwind readonly
  store i8* %2, i8** %source_basename, align 8
  %3 = load i8** %dest_addr, align 8
  %4 = call i8* @last_component(i8* %3) nounwind readonly
  store i8* %4, i8** %dest_basename, align 8
  %5 = load i8** %source_basename, align 8
  %6 = call i64 @base_len(i8* %5) nounwind readonly
  store i64 %6, i64* %source_baselen, align 8
  %7 = load i8** %dest_basename, align 8
  %8 = call i64 @base_len(i8* %7) nounwind readonly
  store i64 %8, i64* %dest_baselen, align 8
  %9 = load i64* %source_baselen, align 8
  %10 = load i64* %dest_baselen, align 8
  %11 = icmp ne i64 %9, %10
  br i1 %11, label %bb2, label %bb

bb:                                               ; preds = %entry
  %12 = load i8** %source_basename, align 8
  %13 = load i8** %dest_basename, align 8
  %14 = load i64* %dest_baselen, align 8
  %15 = call i32 @memcmp(i8* %12, i8* %13, i64 %14) nounwind readonly
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  %18 = trunc i32 %17 to i8
  store i8 %18, i8* %identical_basenames, align 1
  %19 = load i8* %identical_basenames, align 1
  store i8 %19, i8* %compare_dirs, align 1
  store i8 0, i8* %same, align 1
  %20 = load i8* %compare_dirs, align 1
  %toBool = icmp ne i8 %20, 0
  br i1 %toBool, label %bb4, label %bb13

bb4:                                              ; preds = %bb3
  %21 = load i8** %source_addr, align 8
  %22 = call i8* @dir_name(i8* %21) nounwind
  store i8* %22, i8** %source_dirname, align 8
  %23 = load i8** %dest_addr, align 8
  %24 = call i8* @dir_name(i8* %23) nounwind
  store i8* %24, i8** %dest_dirname, align 8
  %25 = load i8** %source_dirname, align 8
  %26 = call i32 @stat(i8* noalias %25, %struct.stat* noalias %source_dir_stats) nounwind
  %27 = icmp ne i32 %26, 0
  br i1 %27, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  %28 = call i32* @__errno_location() nounwind readnone
  %29 = load i32* %28, align 4
  %30 = load i8** %source_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %29, i8* getelementptr inbounds ([3 x i8]* @.str320, i64 0, i64 0), i8* %30) nounwind
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %31 = load i8** %dest_dirname, align 8
  %32 = call i32 @stat(i8* noalias %31, %struct.stat* noalias %dest_dir_stats) nounwind
  %33 = icmp ne i32 %32, 0
  br i1 %33, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  %34 = call i32* @__errno_location() nounwind readnone
  %35 = load i32* %34, align 4
  %36 = load i8** %dest_dirname, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 1, i32 %35, i8* getelementptr inbounds ([3 x i8]* @.str320, i64 0, i64 0), i8* %36) nounwind
  br label %bb8

bb8:                                              ; preds = %bb7, %bb6
  %37 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 1
  %38 = load i64* %37, align 8
  %39 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 1
  %40 = load i64* %39, align 8
  %41 = icmp ne i64 %38, %40
  br i1 %41, label %bb11, label %bb9

bb9:                                              ; preds = %bb8
  %42 = getelementptr inbounds %struct.stat* %source_dir_stats, i32 0, i32 0
  %43 = load i64* %42, align 8
  %44 = getelementptr inbounds %struct.stat* %dest_dir_stats, i32 0, i32 0
  %45 = load i64* %44, align 8
  %46 = icmp ne i64 %43, %45
  br i1 %46, label %bb11, label %bb10

bb10:                                             ; preds = %bb9
  store i32 1, i32* %iftmp.1, align 4
  br label %bb12

bb11:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %iftmp.1, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %47 = load i32* %iftmp.1, align 4
  %48 = trunc i32 %47 to i8
  store i8 %48, i8* %same, align 1
  %49 = load i8** %source_dirname, align 8
  call void @free(i8* %49) nounwind
  %50 = load i8** %dest_dirname, align 8
  call void @free(i8* %50) nounwind
  br label %bb13

bb13:                                             ; preds = %bb12, %bb3
  %51 = load i8* %same, align 1
  %52 = zext i8 %51 to i32
  store i32 %52, i32* %0, align 4
  %53 = load i32* %0, align 4
  store i32 %53, i32* %retval, align 4
  %retval14 = load i32* %retval
  %retval1415 = trunc i32 %retval14 to i8
  ret i8 %retval1415
}

define internal i32 @direntry_cmp_name(i8* %a, i8* %b) nounwind {
entry:
  %a_addr = alloca i8*, align 8
  %b_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %dea = alloca %struct.direntry_t*
  %deb = alloca %struct.direntry_t*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %a, i8** %a_addr
  store i8* %b, i8** %b_addr
  %1 = load i8** %a_addr, align 8
  %2 = bitcast i8* %1 to %struct.direntry_t*
  store %struct.direntry_t* %2, %struct.direntry_t** %dea, align 8
  %3 = load i8** %b_addr, align 8
  %4 = bitcast i8* %3 to %struct.direntry_t*
  store %struct.direntry_t* %4, %struct.direntry_t** %deb, align 8
  %5 = load %struct.direntry_t** %deb, align 8
  %6 = getelementptr inbounds %struct.direntry_t* %5, i32 0, i32 0
  %7 = load i8** %6, align 8
  %8 = load %struct.direntry_t** %dea, align 8
  %9 = getelementptr inbounds %struct.direntry_t* %8, i32 0, i32 0
  %10 = load i8** %9, align 8
  %11 = call i32 @strcmp(i8* %10, i8* %7) nounwind readonly
  store i32 %11, i32* %0, align 4
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal i32 @direntry_cmp_inode(i8* %a, i8* %b) nounwind {
entry:
  %a_addr = alloca i8*, align 8
  %b_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %dea = alloca %struct.direntry_t*
  %deb = alloca %struct.direntry_t*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %a, i8** %a_addr
  store i8* %b, i8** %b_addr
  %1 = load i8** %a_addr, align 8
  %2 = bitcast i8* %1 to %struct.direntry_t*
  store %struct.direntry_t* %2, %struct.direntry_t** %dea, align 8
  %3 = load i8** %b_addr, align 8
  %4 = bitcast i8* %3 to %struct.direntry_t*
  store %struct.direntry_t* %4, %struct.direntry_t** %deb, align 8
  %5 = load %struct.direntry_t** %dea, align 8
  %6 = getelementptr inbounds %struct.direntry_t* %5, i32 0, i32 1
  %7 = load i64* %6, align 8
  %8 = load %struct.direntry_t** %deb, align 8
  %9 = getelementptr inbounds %struct.direntry_t* %8, i32 0, i32 1
  %10 = load i64* %9, align 8
  %11 = icmp uge i64 %7, %10
  br i1 %11, label %bb, label %bb1

bb:                                               ; preds = %entry
  %12 = load %struct.direntry_t** %dea, align 8
  %13 = getelementptr inbounds %struct.direntry_t* %12, i32 0, i32 1
  %14 = load i64* %13, align 8
  %15 = load %struct.direntry_t** %deb, align 8
  %16 = getelementptr inbounds %struct.direntry_t* %15, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = icmp ugt i64 %14, %17
  %19 = zext i1 %18 to i32
  store i32 %19, i32* %iftmp.0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 -1, i32* %iftmp.0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %20 = load i32* %iftmp.0, align 4
  store i32 %20, i32* %0, align 4
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i8* @streamsavedir(%struct.DIR* %dirp, i32 %option) nounwind {
entry:
  %dirp_addr = alloca %struct.DIR*, align 8
  %option_addr = alloca i32, align 4
  %retval = alloca i8*
  %iftmp.3 = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i8*
  %name_space = alloca i8*
  %allocated = alloca i64
  %entries = alloca %struct.direntry_t*
  %entries_allocated = alloca i64
  %entries_used = alloca i64
  %used = alloca i64
  %readdir_errno = alloca i32
  %cmp = alloca i32 (i8*, i8*)*
  %dp = alloca %struct.dirent*
  %entry2 = alloca i8*
  %entry_size = alloca i64
  %n = alloca i64
  %n16 = alloca i64
  %i = alloca i64
  %dest = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.DIR* %dirp, %struct.DIR** %dirp_addr
  store i32 %option, i32* %option_addr
  store i8* null, i8** %name_space, align 8
  store i64 0, i64* %allocated, align 8
  store %struct.direntry_t* null, %struct.direntry_t** %entries, align 8
  store i64 0, i64* %entries_allocated, align 8
  store i64 0, i64* %entries_used, align 8
  store i64 0, i64* %used, align 8
  %1 = load i32* %option_addr, align 4
  %2 = zext i32 %1 to i64
  %3 = getelementptr inbounds [3 x i32 (i8*, i8*)*]* @comparison_function_table, i64 0, i64 %2
  %4 = load i32 (i8*, i8*)** %3, align 8
  store i32 (i8*, i8*)* %4, i32 (i8*, i8*)** %cmp, align 8
  %5 = load %struct.DIR** %dirp_addr, align 8
  %6 = icmp eq %struct.DIR* %5, null
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb34

bb1:                                              ; preds = %bb9, %bb20, %entry
  %7 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %7, align 4
  %8 = load %struct.DIR** %dirp_addr, align 8
  %9 = call %struct.dirent* @readdir(%struct.DIR* %8) nounwind
  store %struct.dirent* %9, %struct.dirent** %dp, align 8
  %10 = load %struct.dirent** %dp, align 8
  %11 = icmp eq %struct.dirent* %10, null
  br i1 %11, label %bb22, label %bb3

bb3:                                              ; preds = %bb1
  %12 = load %struct.dirent** %dp, align 8
  %13 = getelementptr inbounds %struct.dirent* %12, i32 0, i32 4
  %14 = getelementptr inbounds [256 x i8]* %13, i64 0, i64 0
  store i8* %14, i8** %entry2, align 8
  %15 = load i8** %entry2, align 8
  %16 = getelementptr inbounds i8* %15, i64 0
  %17 = load i8* %16, align 1
  %18 = icmp eq i8 %17, 46
  br i1 %18, label %bb4, label %bb8

bb4:                                              ; preds = %bb3
  %19 = load i8** %entry2, align 8
  %20 = getelementptr inbounds i8* %19, i64 1
  %21 = load i8* %20, align 1
  %22 = icmp ne i8 %21, 46
  br i1 %22, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  store i32 1, i32* %iftmp.3, align 4
  br label %bb7

bb6:                                              ; preds = %bb4
  store i32 2, i32* %iftmp.3, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %23 = load i32* %iftmp.3, align 4
  store i32 %23, i32* %iftmp.2, align 4
  br label %bb9

bb8:                                              ; preds = %bb3
  store i32 0, i32* %iftmp.2, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %24 = load i8** %entry2, align 8
  %25 = load i32* %iftmp.2, align 4
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8* %24, i64 %26
  %28 = load i8* %27, align 1
  %29 = icmp ne i8 %28, 0
  br i1 %29, label %bb10, label %bb1

bb10:                                             ; preds = %bb9
  %30 = load %struct.dirent** %dp, align 8
  %31 = getelementptr inbounds %struct.dirent* %30, i32 0, i32 4
  %32 = getelementptr inbounds [256 x i8]* %31, i64 0, i64 0
  %33 = call i64 @strlen(i8* %32) nounwind readonly
  %34 = add i64 %33, 1
  store i64 %34, i64* %entry_size, align 8
  %35 = load i32 (i8*, i8*)** %cmp, align 8
  %36 = icmp ne i32 (i8*, i8*)* %35, null
  br i1 %36, label %bb11, label %bb14

bb11:                                             ; preds = %bb10
  %37 = load i64* %entries_allocated, align 8
  %38 = load i64* %entries_used, align 8
  %39 = icmp eq i64 %37, %38
  br i1 %39, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %40 = load i64* %entries_allocated, align 8
  store i64 %40, i64* %n, align 8
  %41 = load %struct.direntry_t** %entries, align 8
  %42 = bitcast %struct.direntry_t* %41 to i8*
  %43 = call i8* @x2nrealloc(i8* %42, i64* %n, i64 16) nounwind
  %44 = bitcast i8* %43 to %struct.direntry_t*
  store %struct.direntry_t* %44, %struct.direntry_t** %entries, align 8
  %45 = load i64* %n, align 8
  store i64 %45, i64* %entries_allocated, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb11
  %46 = load %struct.direntry_t** %entries, align 8
  %47 = load i64* %entries_used, align 8
  %48 = getelementptr inbounds %struct.direntry_t* %46, i64 %47
  %49 = load i8** %entry2, align 8
  %50 = call noalias i8* @xstrdup(i8* %49) nounwind
  %51 = getelementptr inbounds %struct.direntry_t* %48, i32 0, i32 0
  store i8* %50, i8** %51, align 8
  %52 = load %struct.direntry_t** %entries, align 8
  %53 = load i64* %entries_used, align 8
  %54 = getelementptr inbounds %struct.direntry_t* %52, i64 %53
  %55 = load %struct.dirent** %dp, align 8
  %56 = getelementptr inbounds %struct.dirent* %55, i32 0, i32 0
  %57 = load i64* %56, align 8
  %58 = getelementptr inbounds %struct.direntry_t* %54, i32 0, i32 1
  store i64 %57, i64* %58, align 8
  %59 = load i64* %entries_used, align 8
  %60 = add i64 %59, 1
  store i64 %60, i64* %entries_used, align 8
  br label %bb20

bb14:                                             ; preds = %bb10
  %61 = load i64* %allocated, align 8
  %62 = load i64* %used, align 8
  %63 = sub i64 %61, %62
  %64 = load i64* %entry_size, align 8
  %65 = icmp ule i64 %63, %64
  br i1 %65, label %bb15, label %bb19

bb15:                                             ; preds = %bb14
  %66 = load i64* %used, align 8
  %67 = load i64* %entry_size, align 8
  %68 = add i64 %66, %67
  store i64 %68, i64* %n16, align 8
  %69 = load i64* %n16, align 8
  %70 = load i64* %used, align 8
  %71 = icmp ult i64 %69, %70
  br i1 %71, label %bb17, label %bb18

bb17:                                             ; preds = %bb15
  call void @xalloc_die() noreturn nounwind
  unreachable

bb18:                                             ; preds = %bb15
  %72 = load i8** %name_space, align 8
  %73 = call i8* @x2nrealloc(i8* %72, i64* %n16, i64 1) nounwind
  store i8* %73, i8** %name_space, align 8
  %74 = load i64* %n16, align 8
  store i64 %74, i64* %allocated, align 8
  br label %bb19

bb19:                                             ; preds = %bb18, %bb14
  %75 = load i8** %name_space, align 8
  %76 = load i64* %used, align 8
  %77 = getelementptr inbounds i8* %75, i64 %76
  %78 = load i8** %entry2, align 8
  %79 = load i64* %entry_size, align 8
  %80 = call i8* @memcpy(i8* %77, i8* %78, i64 %79)
  br label %bb20

bb20:                                             ; preds = %bb19, %bb13
  %81 = load i64* %used, align 8
  %82 = load i64* %entry_size, align 8
  %83 = add i64 %81, %82
  store i64 %83, i64* %used, align 8
  br label %bb1

bb22:                                             ; preds = %bb1
  %84 = call i32* @__errno_location() nounwind readnone
  %85 = load i32* %84, align 4
  store i32 %85, i32* %readdir_errno, align 4
  %86 = load i32* %readdir_errno, align 4
  %87 = icmp ne i32 %86, 0
  br i1 %87, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %88 = load %struct.direntry_t** %entries, align 8
  %89 = bitcast %struct.direntry_t* %88 to i8*
  call void @free(i8* %89) nounwind
  %90 = load i8** %name_space, align 8
  call void @free(i8* %90) nounwind
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %readdir_errno, align 4
  store i32 %92, i32* %91, align 4
  store i8* null, i8** %0, align 8
  br label %bb34

bb24:                                             ; preds = %bb22
  %93 = load i32 (i8*, i8*)** %cmp, align 8
  %94 = icmp ne i32 (i8*, i8*)* %93, null
  br i1 %94, label %bb25, label %bb31

bb25:                                             ; preds = %bb24
  %95 = load i64* %entries_used, align 8
  %96 = icmp ne i64 %95, 0
  br i1 %96, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %97 = load %struct.direntry_t** %entries, align 8
  %98 = bitcast %struct.direntry_t* %97 to i8*
  %99 = load i64* %entries_used, align 8
  %100 = load i32 (i8*, i8*)** %cmp, align 8
  call void @qsort(i8* %98, i64 %99, i64 16, i32 (i8*, i8*)* %100) nounwind
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25
  %101 = load i64* %used, align 8
  %102 = add i64 %101, 1
  %103 = call noalias i8* @xmalloc(i64 %102) nounwind
  store i8* %103, i8** %name_space, align 8
  store i64 0, i64* %used, align 8
  store i64 0, i64* %i, align 8
  br label %bb29

bb28:                                             ; preds = %bb29
  %104 = load i8** %name_space, align 8
  %105 = load i64* %used, align 8
  %106 = getelementptr inbounds i8* %104, i64 %105
  store i8* %106, i8** %dest, align 8
  %107 = load %struct.direntry_t** %entries, align 8
  %108 = load i64* %i, align 8
  %109 = getelementptr inbounds %struct.direntry_t* %107, i64 %108
  %110 = getelementptr inbounds %struct.direntry_t* %109, i32 0, i32 0
  %111 = load i8** %110, align 8
  %112 = load i8** %dest, align 8
  %113 = call i8* @stpcpy(i8* noalias %112, i8* noalias %111) nounwind
  %114 = ptrtoint i8* %113 to i64
  %115 = load i8** %dest, align 8
  %116 = ptrtoint i8* %115 to i64
  %117 = sub nsw i64 %114, %116
  %118 = load i64* %used, align 8
  %119 = add i64 %117, %118
  %120 = add i64 %119, 1
  store i64 %120, i64* %used, align 8
  %121 = load %struct.direntry_t** %entries, align 8
  %122 = load i64* %i, align 8
  %123 = getelementptr inbounds %struct.direntry_t* %121, i64 %122
  %124 = getelementptr inbounds %struct.direntry_t* %123, i32 0, i32 0
  %125 = load i8** %124, align 8
  call void @free(i8* %125) nounwind
  %126 = load i64* %i, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %i, align 8
  br label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %128 = load i64* %i, align 8
  %129 = load i64* %entries_used, align 8
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %bb28, label %bb30

bb30:                                             ; preds = %bb29
  %131 = load %struct.direntry_t** %entries, align 8
  %132 = bitcast %struct.direntry_t* %131 to i8*
  call void @free(i8* %132) nounwind
  br label %bb33

bb31:                                             ; preds = %bb24
  %133 = load i64* %used, align 8
  %134 = load i64* %allocated, align 8
  %135 = icmp eq i64 %133, %134
  br i1 %135, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %136 = load i64* %used, align 8
  %137 = add i64 %136, 1
  %138 = load i8** %name_space, align 8
  %139 = call i8* @xrealloc(i8* %138, i64 %137) nounwind
  store i8* %139, i8** %name_space, align 8
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %140 = load i8** %name_space, align 8
  %141 = load i64* %used, align 8
  %142 = getelementptr inbounds i8* %140, i64 %141
  store i8 0, i8* %142, align 1
  %143 = load i8** %name_space, align 8
  store i8* %143, i8** %0, align 8
  br label %bb34

bb34:                                             ; preds = %bb33, %bb23, %bb
  %144 = load i8** %0, align 8
  store i8* %144, i8** %retval, align 8
  %retval35 = load i8** %retval
  ret i8* %retval35
}

define i8* @savedir(i8* %dir, i32 %option) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %option_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %dirp = alloca %struct.DIR*
  %name_space = alloca i8*
  %closedir_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  store i32 %option, i32* %option_addr
  %1 = load i8** %dir_addr, align 8
  %2 = call %struct.DIR* @opendir_safer(i8* %1) nounwind
  store %struct.DIR* %2, %struct.DIR** %dirp, align 8
  %3 = load %struct.DIR** %dirp, align 8
  %4 = icmp eq %struct.DIR* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8
  br label %bb4

bb1:                                              ; preds = %entry
  %5 = load %struct.DIR** %dirp, align 8
  %6 = load i32* %option_addr, align 4
  %7 = call i8* @streamsavedir(%struct.DIR* %5, i32 %6) nounwind
  store i8* %7, i8** %name_space, align 8
  %8 = load %struct.DIR** %dirp, align 8
  %9 = call i32 @closedir(%struct.DIR* %8) nounwind
  %10 = icmp ne i32 %9, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %11, align 4
  store i32 %12, i32* %closedir_errno, align 4
  %13 = load i8** %name_space, align 8
  call void @free(i8* %13) nounwind
  %14 = call i32* @__errno_location() nounwind readnone
  %15 = load i32* %closedir_errno, align 4
  store i32 %15, i32* %14, align 4
  store i8* null, i8** %0, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  %16 = load i8** %name_space, align 8
  store i8* %16, i8** %0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2, %bb
  %17 = load i8** %0, align 8
  store i8* %17, i8** %retval, align 8
  %retval5 = load i8** %retval
  ret i8* %retval5
}

define i32 @getcon(i8** %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define void @freecon(i8* %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %con, i8** %con_addr
  ret void
}

define i32 @getfscreatecon(i8** %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @setfscreatecon(i8* %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @matchpathcon(i8* %file, i32 %m, i8** %con) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %m_addr = alloca i32, align 4
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i32 %m, i32* %m_addr
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @getfilecon(i8* %file, i8** %con) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @lgetfilecon(i8* %file, i8** %con) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @fgetfilecon(i32 %fd, i8** %con) nounwind inlinehint {
entry:
  %fd_addr = alloca i32, align 4
  %con_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8** %con, i8*** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @setfilecon(i8* %file, i8* %con) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @lsetfilecon(i8* %file, i8* %con) nounwind inlinehint {
entry:
  %file_addr = alloca i8*, align 8
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @fsetfilecon(i32 %fd, i8* %con) nounwind inlinehint {
entry:
  %fd_addr = alloca i32, align 4
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @security_check_context(i8* %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @security_check_context_raw(i8* %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @setexeccon(i8* %con) nounwind inlinehint {
entry:
  %con_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %con, i8** %con_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @security_compute_create(i8* %scon, i8* %tcon, i16 zeroext %tclass, i8** %newcon) nounwind inlinehint {
entry:
  %scon_addr = alloca i8*, align 8
  %tcon_addr = alloca i8*, align 8
  %tclass_addr = alloca i16, align 2
  %newcon_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %scon, i8** %scon_addr
  store i8* %tcon, i8** %tcon_addr
  store i16 %tclass, i16* %tclass_addr
  store i8** %newcon, i8*** %newcon_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define zeroext i16 @string_to_security_class(i8* %name) nounwind inlinehint {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 0, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define i32 @matchpathcon_init_prefix(i8* %path, i8* %prefix) nounwind inlinehint {
entry:
  %path_addr = alloca i8*, align 8
  %prefix_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i8* %prefix, i8** %prefix_addr
  %1 = call i32* @__errno_location() nounwind readnone
  store i32 95, i32* %1, align 4
  store i32 -1, i32* %0, align 4
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i64 @get_stat_atime_ns(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 11
  %3 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  store i64 %4, i64* %0, align 8
  %5 = load i64* %0, align 8
  store i64 %5, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @get_stat_ctime_ns(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 13
  %3 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  store i64 %4, i64* %0, align 8
  %5 = load i64* %0, align 8
  store i64 %5, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @get_stat_mtime_ns(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 12
  %3 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  store i64 %4, i64* %0, align 8
  %5 = load i64* %0, align 8
  store i64 %5, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @get_stat_birthtime_ns(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  store i64 0, i64* %0, align 8
  %1 = load i64* %0, align 8
  store i64 %1, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define %struct.timespec @get_stat_atime(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca %struct.timespec
  %0 = alloca %struct.timespec
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 11
  %3 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 0
  %5 = load i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %8 = load i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %11 = load i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %14 = load i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %mrv_gep = getelementptr %struct.timespec* %retval, i32 0, i32 0
  %mrv = load i64* %mrv_gep
  %mrv_gep1 = getelementptr %struct.timespec* %retval, i32 0, i32 1
  %mrv2 = load i64* %mrv_gep1
  %mrv3 = insertvalue %struct.timespec undef, i64 %mrv, 0
  %mrv4 = insertvalue %struct.timespec %mrv3, i64 %mrv2, 1
  ret %struct.timespec %mrv4
}

define %struct.timespec @get_stat_ctime(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca %struct.timespec
  %0 = alloca %struct.timespec
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 13
  %3 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 0
  %5 = load i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %8 = load i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %11 = load i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %14 = load i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %mrv_gep = getelementptr %struct.timespec* %retval, i32 0, i32 0
  %mrv = load i64* %mrv_gep
  %mrv_gep1 = getelementptr %struct.timespec* %retval, i32 0, i32 1
  %mrv2 = load i64* %mrv_gep1
  %mrv3 = insertvalue %struct.timespec undef, i64 %mrv, 0
  %mrv4 = insertvalue %struct.timespec %mrv3, i64 %mrv2, 1
  ret %struct.timespec %mrv4
}

define %struct.timespec @get_stat_mtime(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca %struct.timespec
  %0 = alloca %struct.timespec
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = load %struct.stat** %st_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 12
  %3 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 0
  %5 = load i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %8 = load i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %11 = load i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %14 = load i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %mrv_gep = getelementptr %struct.timespec* %retval, i32 0, i32 0
  %mrv = load i64* %mrv_gep
  %mrv_gep1 = getelementptr %struct.timespec* %retval, i32 0, i32 1
  %mrv2 = load i64* %mrv_gep1
  %mrv3 = insertvalue %struct.timespec undef, i64 %mrv, 0
  %mrv4 = insertvalue %struct.timespec %mrv3, i64 %mrv2, 1
  ret %struct.timespec %mrv4
}

define %struct.timespec @get_stat_birthtime(%struct.stat* %st) nounwind readonly inlinehint {
entry:
  %st_addr = alloca %struct.stat*, align 8
  %retval = alloca %struct.timespec
  %0 = alloca %struct.timespec
  %t = alloca %struct.timespec
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %st, %struct.stat** %st_addr
  %1 = getelementptr inbounds %struct.timespec* %t, i32 0, i32 0
  store i64 -1, i64* %1, align 8
  %2 = getelementptr inbounds %struct.timespec* %t, i32 0, i32 1
  store i64 -1, i64* %2, align 8
  %3 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %4 = getelementptr inbounds %struct.timespec* %t, i32 0, i32 0
  %5 = load i64* %4, align 8
  store i64 %5, i64* %3, align 8
  %6 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %7 = getelementptr inbounds %struct.timespec* %t, i32 0, i32 1
  %8 = load i64* %7, align 8
  store i64 %8, i64* %6, align 8
  %9 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 0
  %11 = load i64* %10, align 8
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %struct.timespec* %retval, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %0, i32 0, i32 1
  %14 = load i64* %13, align 8
  store i64 %14, i64* %12, align 8
  %mrv_gep = getelementptr %struct.timespec* %retval, i32 0, i32 0
  %mrv = load i64* %mrv_gep
  %mrv_gep1 = getelementptr %struct.timespec* %retval, i32 0, i32 1
  %mrv2 = load i64* %mrv_gep1
  %mrv3 = insertvalue %struct.timespec undef, i64 %mrv, 0
  %mrv4 = insertvalue %struct.timespec %mrv3, i64 %mrv2, 1
  ret %struct.timespec %mrv4
}

define i8* @trim2(i8* %s, i32 %how) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %how_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %d = alloca i8*
  %i = alloca %struct.mbi_iterator_t
  %state = alloca i32
  %r = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %how, i32* %how_addr
  %1 = load i8** %s_addr, align 8
  %2 = call noalias i8* @strdup(i8* %1) nounwind
  store i8* %2, i8** %d, align 8
  %3 = load i8** %d, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %5 = call i64 @_stdlib_mb_cur_max() nounwind
  %6 = icmp ugt i64 %5, 1
  %7 = load i32* %how_addr, align 4
  %8 = icmp ne i32 %7, 0
  br i1 %6, label %bb2, label %bb55

bb2:                                              ; preds = %bb1
  br i1 %8, label %bb3, label %bb12

bb3:                                              ; preds = %bb2
  %9 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %10 = getelementptr inbounds %struct.mbchar* %9, i32 0, i32 0
  %11 = load i8** %d, align 8
  store i8* %11, i8** %10, align 8
  %12 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %13 = getelementptr inbounds %struct.mbchar* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = load i8** %d, align 8
  %16 = call i64 @strlen(i8* %15) nounwind readonly
  %17 = getelementptr inbounds i8* %14, i64 %16
  %18 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 1
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 2
  %21 = bitcast %struct.mbstate_t* %20 to i8*
  %22 = call i8* @memset(i8* %21, i32 0, i64 8)
  %23 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %23, align 4
  br label %bb5

bb4:                                              ; preds = %bb10
  %24 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 0
  %26 = load i8** %25, align 8
  %27 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 1
  %29 = load i64* %28, align 8
  %30 = getelementptr inbounds i8* %26, i64 %29
  %31 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %32 = getelementptr inbounds %struct.mbchar* %31, i32 0, i32 0
  store i8* %30, i8** %32, align 8
  %33 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %33, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %34 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %35 = getelementptr inbounds %struct.mbchar* %34, i32 0, i32 0
  %36 = load i8** %35, align 8
  %37 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  %38 = load i8** %37, align 8
  %39 = icmp uge i8* %36, %38
  br i1 %39, label %bb11, label %bb6

bb6:                                              ; preds = %bb5
  call void @mbiter_multi_next(%struct.mbi_iterator_t* %i) nounwind
  %40 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %41 = getelementptr inbounds %struct.mbchar* %40, i32 0, i32 2
  %42 = load i8* %41, align 8
  %toBool = icmp ne i8 %42, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot7 = zext i1 %toBoolnot to i8
  %toBool9 = icmp ne i8 %toBoolnot7, 0
  br i1 %toBool9, label %bb11, label %bb10

bb10:                                             ; preds = %bb6
  %43 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %44 = getelementptr inbounds %struct.mbchar* %43, i32 0, i32 3
  %45 = load i32* %44, align 4
  %46 = call i32 @iswspace(i32 %45) nounwind readonly
  %47 = icmp ne i32 %46, 0
  br i1 %47, label %bb4, label %bb11

bb11:                                             ; preds = %bb10, %bb6, %bb5
  %48 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %49 = getelementptr inbounds %struct.mbchar* %48, i32 0, i32 0
  %50 = load i8** %49, align 8
  %51 = call i64 @strlen(i8* %50) nounwind readonly
  %52 = add i64 %51, 1
  %53 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %54 = getelementptr inbounds %struct.mbchar* %53, i32 0, i32 0
  %55 = load i8** %54, align 8
  %56 = load i8** %d, align 8
  %57 = call i8* @memmove(i8* %56, i8* %55, i64 %52)
  br label %bb12

bb12:                                             ; preds = %bb11, %bb2
  %58 = load i32* %how_addr, align 4
  %59 = icmp ne i32 %58, 1
  br i1 %59, label %bb13, label %bb66

bb13:                                             ; preds = %bb12
  store i32 0, i32* %state, align 4
  %60 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %61 = getelementptr inbounds %struct.mbchar* %60, i32 0, i32 0
  %62 = load i8** %d, align 8
  store i8* %62, i8** %61, align 8
  %63 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %64 = getelementptr inbounds %struct.mbchar* %63, i32 0, i32 0
  %65 = load i8** %64, align 8
  %66 = load i8** %d, align 8
  %67 = call i64 @strlen(i8* %66) nounwind readonly
  %68 = getelementptr inbounds i8* %65, i64 %67
  %69 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  store i8* %68, i8** %69, align 8
  %70 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 1
  store i8 0, i8* %70, align 8
  %71 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 2
  %72 = bitcast %struct.mbstate_t* %71 to i8*
  %73 = call i8* @memset(i8* %72, i32 0, i64 8)
  %74 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %74, align 4
  br label %bb50

bb14:                                             ; preds = %bb51
  %75 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 2
  %77 = load i8* %76, align 8
  %toBool15 = icmp ne i8 %77, 0
  br i1 %toBool15, label %bb16, label %bb17

bb16:                                             ; preds = %bb14
  %78 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %79 = getelementptr inbounds %struct.mbchar* %78, i32 0, i32 3
  %80 = load i32* %79, align 4
  %81 = call i32 @iswspace(i32 %80) nounwind readonly
  %82 = icmp ne i32 %81, 0
  br i1 %82, label %bb49, label %bb17

bb17:                                             ; preds = %bb51, %bb16, %bb14
  %83 = load i32* %state, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %bb18, label %bb25

bb18:                                             ; preds = %bb17
  %85 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %86 = getelementptr inbounds %struct.mbchar* %85, i32 0, i32 2
  %87 = load i8* %86, align 8
  %toBool19 = icmp ne i8 %87, 0
  %toBool19not = xor i1 %toBool19, true
  %toBool19not20 = zext i1 %toBool19not to i8
  %toBool22 = icmp ne i8 %toBool19not20, 0
  br i1 %toBool22, label %bb24, label %bb23

bb23:                                             ; preds = %bb18
  %88 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 3
  %90 = load i32* %89, align 4
  %91 = call i32 @iswspace(i32 %90) nounwind readonly
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %bb24, label %bb25

bb24:                                             ; preds = %bb23, %bb18
  store i32 1, i32* %state, align 4
  br label %bb49

bb25:                                             ; preds = %bb23, %bb17
  %93 = load i32* %state, align 4
  %94 = icmp eq i32 %93, 1
  br i1 %94, label %bb26, label %bb32

bb26:                                             ; preds = %bb25
  %95 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %96 = getelementptr inbounds %struct.mbchar* %95, i32 0, i32 2
  %97 = load i8* %96, align 8
  %toBool27 = icmp ne i8 %97, 0
  %toBool27not = xor i1 %toBool27, true
  %toBool27not28 = zext i1 %toBool27not to i8
  %toBool30 = icmp ne i8 %toBool27not28, 0
  br i1 %toBool30, label %bb49, label %bb31

bb31:                                             ; preds = %bb26
  %98 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %99 = getelementptr inbounds %struct.mbchar* %98, i32 0, i32 3
  %100 = load i32* %99, align 4
  %101 = call i32 @iswspace(i32 %100) nounwind readonly
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %bb49, label %bb32

bb32:                                             ; preds = %bb31, %bb25
  %103 = load i32* %state, align 4
  %104 = icmp ne i32 %103, 1
  br i1 %104, label %bb40, label %bb33

bb33:                                             ; preds = %bb32
  %105 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %106 = getelementptr inbounds %struct.mbchar* %105, i32 0, i32 2
  %107 = load i8* %106, align 8
  %toBool34 = icmp ne i8 %107, 0
  %toBool34not = xor i1 %toBool34, true
  %toBool34not35 = zext i1 %toBool34not to i8
  %toBool37 = icmp ne i8 %toBool34not35, 0
  br i1 %toBool37, label %bb40, label %bb38

bb38:                                             ; preds = %bb33
  %108 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %109 = getelementptr inbounds %struct.mbchar* %108, i32 0, i32 3
  %110 = load i32* %109, align 4
  %111 = call i32 @iswspace(i32 %110) nounwind readonly
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  store i32 2, i32* %state, align 4
  %113 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %114 = getelementptr inbounds %struct.mbchar* %113, i32 0, i32 0
  %115 = load i8** %114, align 8
  store i8* %115, i8** %r, align 8
  br label %bb49

bb40:                                             ; preds = %bb38, %bb33, %bb32
  %116 = load i32* %state, align 4
  %117 = icmp ne i32 %116, 2
  br i1 %117, label %bb48, label %bb41

bb41:                                             ; preds = %bb40
  %118 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %119 = getelementptr inbounds %struct.mbchar* %118, i32 0, i32 2
  %120 = load i8* %119, align 8
  %toBool42 = icmp ne i8 %120, 0
  %toBool42not = xor i1 %toBool42, true
  %toBool42not43 = zext i1 %toBool42not to i8
  %toBool45 = icmp ne i8 %toBool42not43, 0
  br i1 %toBool45, label %bb48, label %bb46

bb46:                                             ; preds = %bb41
  %121 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %122 = getelementptr inbounds %struct.mbchar* %121, i32 0, i32 3
  %123 = load i32* %122, align 4
  %124 = call i32 @iswspace(i32 %123) nounwind readonly
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %bb48, label %bb49

bb48:                                             ; preds = %bb46, %bb41, %bb40
  store i32 1, i32* %state, align 4
  br label %bb49

bb49:                                             ; preds = %bb46, %bb48, %bb39, %bb31, %bb26, %bb24, %bb16
  %126 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %127 = getelementptr inbounds %struct.mbchar* %126, i32 0, i32 0
  %128 = load i8** %127, align 8
  %129 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %130 = getelementptr inbounds %struct.mbchar* %129, i32 0, i32 1
  %131 = load i64* %130, align 8
  %132 = getelementptr inbounds i8* %128, i64 %131
  %133 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %134 = getelementptr inbounds %struct.mbchar* %133, i32 0, i32 0
  store i8* %132, i8** %134, align 8
  %135 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 3
  store i8 0, i8* %135, align 4
  br label %bb50

bb50:                                             ; preds = %bb49, %bb13
  %136 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 4
  %137 = getelementptr inbounds %struct.mbchar* %136, i32 0, i32 0
  %138 = load i8** %137, align 8
  %139 = getelementptr inbounds %struct.mbi_iterator_t* %i, i32 0, i32 0
  %140 = load i8** %139, align 8
  %141 = icmp uge i8* %138, %140
  br i1 %141, label %bb52, label %bb51

bb51:                                             ; preds = %bb50
  call void @mbiter_multi_next(%struct.mbi_iterator_t* %i) nounwind
  %142 = load i32* %state, align 4
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %bb14, label %bb17

bb52:                                             ; preds = %bb50
  %144 = load i32* %state, align 4
  %145 = icmp eq i32 %144, 2
  br i1 %145, label %bb53, label %bb66

bb53:                                             ; preds = %bb52
  %146 = load i8** %r, align 8
  store i8 0, i8* %146, align 1
  br label %bb66

bb55:                                             ; preds = %bb1
  br i1 %8, label %bb56, label %bb61

bb56:                                             ; preds = %bb55
  %147 = load i8** %d, align 8
  store i8* %147, i8** %p, align 8
  br label %bb58

bb57:                                             ; preds = %bb59
  %148 = load i8** %p, align 8
  %149 = getelementptr inbounds i8* %148, i64 1
  store i8* %149, i8** %p, align 8
  br label %bb58

bb58:                                             ; preds = %bb57, %bb56
  %150 = load i8** %p, align 8
  %151 = load i8* %150, align 1
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %bb60, label %bb59

bb59:                                             ; preds = %bb58
  %153 = call i16** @__ctype_b_loc() nounwind readnone
  %154 = load i16** %153, align 8
  %155 = load i8** %p, align 8
  %156 = load i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i16* %154, i64 %158
  %160 = load i16* %159, align 1
  %161 = zext i16 %160 to i32
  %162 = and i32 %161, 8192
  %163 = icmp ne i32 %162, 0
  br i1 %163, label %bb57, label %bb60

bb60:                                             ; preds = %bb59, %bb58
  %164 = load i8** %p, align 8
  %165 = call i64 @strlen(i8* %164) nounwind readonly
  %166 = add i64 %165, 1
  %167 = load i8** %d, align 8
  %168 = load i8** %p, align 8
  %169 = call i8* @memmove(i8* %167, i8* %168, i64 %166)
  br label %bb61

bb61:                                             ; preds = %bb60, %bb55
  %170 = load i32* %how_addr, align 4
  %171 = icmp ne i32 %170, 1
  br i1 %171, label %bb62, label %bb66

bb62:                                             ; preds = %bb61
  %172 = load i8** %d, align 8
  %173 = call i64 @strlen(i8* %172) nounwind readonly
  %174 = load i8** %d, align 8
  %175 = getelementptr inbounds i8* %174, i64 %173
  %176 = getelementptr inbounds i8* %175, i64 -1
  store i8* %176, i8** %p, align 8
  br label %bb64

bb63:                                             ; preds = %bb65
  %177 = load i8** %p, align 8
  store i8 0, i8* %177, align 1
  %178 = load i8** %p, align 8
  %179 = getelementptr inbounds i8* %178, i64 -1
  store i8* %179, i8** %p, align 8
  br label %bb64

bb64:                                             ; preds = %bb63, %bb62
  %180 = load i8** %p, align 8
  %181 = load i8** %d, align 8
  %182 = icmp ult i8* %180, %181
  br i1 %182, label %bb66, label %bb65

bb65:                                             ; preds = %bb64
  %183 = call i16** @__ctype_b_loc() nounwind readnone
  %184 = load i16** %183, align 8
  %185 = load i8** %p, align 8
  %186 = load i8* %185, align 1
  %187 = zext i8 %186 to i32
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds i16* %184, i64 %188
  %190 = load i16* %189, align 1
  %191 = zext i16 %190 to i32
  %192 = and i32 %191, 8192
  %193 = icmp ne i32 %192, 0
  br i1 %193, label %bb63, label %bb66

bb66:                                             ; preds = %bb12, %bb52, %bb53, %bb65, %bb64, %bb61
  %194 = load i8** %d, align 8
  store i8* %194, i8** %0, align 8
  %195 = load i8** %0, align 8
  store i8* %195, i8** %retval, align 8
  %retval67 = load i8** %retval
  ret i8* %retval67
}

declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture, i64, i32, i1) nounwind

define i32 @dup_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 0, i32 3) nounwind
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @fd_safer(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca i32
  %e = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = icmp sge i32 %1, 0
  %3 = load i32* %fd_addr, align 4
  %4 = icmp sle i32 %3, 2
  %or.cond = and i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  %5 = load i32* %fd_addr, align 4
  %6 = call i32 @dup_safer(i32 %5) nounwind
  store i32 %6, i32* %f, align 4
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  store i32 %8, i32* %e, align 4
  %9 = load i32* %fd_addr, align 4
  %10 = call i32 @close(i32 %9) nounwind
  %11 = call i32* @__errno_location() nounwind readnone
  %12 = load i32* %e, align 4
  store i32 %12, i32* %11, align 4
  %13 = load i32* %f, align 4
  store i32 %13, i32* %fd_addr, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %entry
  %14 = load i32* %fd_addr, align 4
  store i32 %14, i32* %0, align 4
  %15 = load i32* %0, align 4
  store i32 %15, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i64 @dev_info_hash(i8* %x, i64 %table_size) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %table_size_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca %struct.fs_res*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %table_size, i64* %table_size_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.fs_res*
  store %struct.fs_res* %2, %struct.fs_res** %p, align 8
  %3 = load %struct.fs_res** %p, align 8
  %4 = getelementptr inbounds %struct.fs_res* %3, i32 0, i32 0
  %5 = load i64* %4, align 8
  %6 = load i64* %table_size_addr, align 8
  %int_cast_to_i64 = bitcast i64 %6 to i64
  %7 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %8 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %8, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %9 = urem i64 %5, %6
  store i64 %9, i64* %0, align 8
  %10 = load i64* %0, align 8
  store i64 %10, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal zeroext i8 @dev_info_compare(i8* %x, i8* %y) nounwind {
entry:
  %x_addr = alloca i8*, align 8
  %y_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %a = alloca %struct.fs_res*
  %b = alloca %struct.fs_res*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i8* %y, i8** %y_addr
  %1 = load i8** %x_addr, align 8
  %2 = bitcast i8* %1 to %struct.fs_res*
  store %struct.fs_res* %2, %struct.fs_res** %a, align 8
  %3 = load i8** %y_addr, align 8
  %4 = bitcast i8* %3 to %struct.fs_res*
  store %struct.fs_res* %4, %struct.fs_res** %b, align 8
  %5 = load %struct.fs_res** %a, align 8
  %6 = getelementptr inbounds %struct.fs_res* %5, i32 0, i32 0
  %7 = load i64* %6, align 8
  %8 = load %struct.fs_res** %b, align 8
  %9 = getelementptr inbounds %struct.fs_res* %8, i32 0, i32 0
  %10 = load i64* %9, align 8
  %11 = icmp eq i64 %7, %10
  %12 = zext i1 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i32 @utimecmp(i8* %dst_name, %struct.stat* %dst_stat, %struct.stat* %src_stat, i32 %options) nounwind {
entry:
  %dst_name_addr = alloca i8*, align 8
  %dst_stat_addr = alloca %struct.stat*, align 8
  %src_stat_addr = alloca %struct.stat*, align 8
  %options_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.16 = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i8
  %0 = alloca i32
  %dst_s = alloca i64
  %src_s = alloca i64
  %dst_ns = alloca i32
  %src_ns = alloca i32
  %dst_res = alloca %struct.fs_res*
  %tmp_dst_res = alloca %struct.fs_res
  %res = alloca i32
  %dst_a_s = alloca i64
  %dst_c_s = alloca i64
  %dst_m_s = alloca i64
  %dst_a_ns = alloca i32
  %dst_c_ns = alloca i32
  %dst_m_ns = alloca i32
  %odd_second = alloca i8
  %a = alloca i32
  %c = alloca i32
  %m = alloca i32
  %SR10 = alloca i32
  %timespec = alloca [2 x %struct.timespec]
  %dst_status = alloca %struct.stat
  %s = alloca i64
  %stat_result = alloca i32
  %old_res = alloca i32
  %a70 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst_name, i8** %dst_name_addr
  store %struct.stat* %dst_stat, %struct.stat** %dst_stat_addr
  store %struct.stat* %src_stat, %struct.stat** %src_stat_addr
  store i32 %options, i32* %options_addr
  %1 = load %struct.stat** %dst_stat_addr, align 8
  %2 = getelementptr inbounds %struct.stat* %1, i32 0, i32 12
  %3 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 0
  %4 = load i64* %3, align 8
  store i64 %4, i64* %dst_s, align 8
  %5 = load %struct.stat** %src_stat_addr, align 8
  %6 = getelementptr inbounds %struct.stat* %5, i32 0, i32 12
  %7 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 0
  %8 = load i64* %7, align 8
  store i64 %8, i64* %src_s, align 8
  %9 = load %struct.stat** %dst_stat_addr, align 8
  %10 = call i64 @get_stat_mtime_ns(%struct.stat* %9) nounwind readonly
  %11 = trunc i64 %10 to i32
  store i32 %11, i32* %dst_ns, align 4
  %12 = load %struct.stat** %src_stat_addr, align 8
  %13 = call i64 @get_stat_mtime_ns(%struct.stat* %12) nounwind readonly
  %14 = trunc i64 %13 to i32
  store i32 %14, i32* %src_ns, align 4
  %15 = load i32* %options_addr, align 4
  %16 = and i32 %15, 1
  %17 = trunc i32 %16 to i8
  %toBool = icmp ne i8 %17, 0
  br i1 %toBool, label %bb, label %bb80

bb:                                               ; preds = %entry
  store %struct.fs_res* null, %struct.fs_res** %dst_res, align 8
  %18 = load i64* %dst_s, align 8
  %19 = load i64* %src_s, align 8
  %20 = icmp eq i64 %18, %19
  br i1 %20, label %bb1, label %bb3

bb1:                                              ; preds = %bb
  %21 = load i32* %dst_ns, align 4
  %22 = load i32* %src_ns, align 4
  %23 = icmp eq i32 %21, %22
  br i1 %23, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  store i32 0, i32* %0, align 4
  br label %bb90

bb3:                                              ; preds = %bb1, %bb
  %24 = load i64* %src_s, align 8
  %25 = sub nsw i64 %24, 2
  %26 = load i64* %dst_s, align 8
  %27 = icmp sge i64 %25, %26
  br i1 %27, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4
  br label %bb90

bb5:                                              ; preds = %bb3
  %28 = load i64* %dst_s, align 8
  %29 = sub nsw i64 %28, 2
  %30 = load i64* %src_s, align 8
  %31 = icmp sge i64 %29, %30
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 1, i32* %0, align 4
  br label %bb90

bb7:                                              ; preds = %bb5
  %32 = load %struct.Hash_table** @ht.4270, align 8
  %33 = icmp eq %struct.Hash_table* %32, null
  br i1 %33, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %34 = call %struct.Hash_table* @hash_initialize(i64 16, %struct.Hash_tuning* null, i64 (i8*, i64)* @dev_info_hash, i8 (i8*, i8*)* @dev_info_compare, void (i8*)* @free) nounwind
  store %struct.Hash_table* %34, %struct.Hash_table** @ht.4270, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %35 = load %struct.Hash_table** @ht.4270, align 8
  %36 = icmp ne %struct.Hash_table* %35, null
  br i1 %36, label %bb10, label %low_memory

bb10:                                             ; preds = %bb9
  %37 = load %struct.fs_res** @new_dst_res.4271, align 8
  %38 = icmp eq %struct.fs_res* %37, null
  br i1 %38, label %bb11, label %bb13

bb11:                                             ; preds = %bb10
  %39 = call noalias i8* @malloc(i64 16) nounwind
  %40 = bitcast i8* %39 to %struct.fs_res*
  store %struct.fs_res* %40, %struct.fs_res** @new_dst_res.4271, align 8
  %41 = load %struct.fs_res** @new_dst_res.4271, align 8
  %42 = icmp eq %struct.fs_res* %41, null
  br i1 %42, label %low_memory, label %bb12

bb12:                                             ; preds = %bb11
  %43 = load %struct.fs_res** @new_dst_res.4271, align 8
  %44 = getelementptr inbounds %struct.fs_res* %43, i32 0, i32 1
  store i32 2000000000, i32* %44, align 8
  %45 = load %struct.fs_res** @new_dst_res.4271, align 8
  %46 = getelementptr inbounds %struct.fs_res* %45, i32 0, i32 2
  store i8 0, i8* %46, align 4
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10
  %47 = load %struct.fs_res** @new_dst_res.4271, align 8
  %48 = load %struct.stat** %dst_stat_addr, align 8
  %49 = getelementptr inbounds %struct.stat* %48, i32 0, i32 0
  %50 = load i64* %49, align 8
  %51 = getelementptr inbounds %struct.fs_res* %47, i32 0, i32 0
  store i64 %50, i64* %51, align 8
  %52 = load %struct.fs_res** @new_dst_res.4271, align 8
  %53 = load %struct.Hash_table** @ht.4270, align 8
  %54 = bitcast %struct.fs_res* %52 to i8*
  %55 = call i8* @hash_insert(%struct.Hash_table* %53, i8* %54) nounwind
  %56 = bitcast i8* %55 to %struct.fs_res*
  store %struct.fs_res* %56, %struct.fs_res** %dst_res, align 8
  %57 = load %struct.fs_res** %dst_res, align 8
  %58 = icmp eq %struct.fs_res* %57, null
  br i1 %58, label %low_memory, label %bb14

bb14:                                             ; preds = %bb13
  %59 = load %struct.fs_res** @new_dst_res.4271, align 8
  %60 = load %struct.fs_res** %dst_res, align 8
  %61 = icmp eq %struct.fs_res* %60, %59
  br i1 %61, label %bb15, label %bb21

bb15:                                             ; preds = %bb14
  store %struct.fs_res* null, %struct.fs_res** @new_dst_res.4271, align 8
  br label %bb21

low_memory:                                       ; preds = %bb13, %bb11, %bb9
  %62 = load %struct.Hash_table** @ht.4270, align 8
  %63 = icmp ne %struct.Hash_table* %62, null
  br i1 %63, label %bb17, label %bb19

bb17:                                             ; preds = %low_memory
  %64 = load %struct.stat** %dst_stat_addr, align 8
  %65 = getelementptr inbounds %struct.stat* %64, i32 0, i32 0
  %66 = load i64* %65, align 8
  %67 = getelementptr inbounds %struct.fs_res* %tmp_dst_res, i32 0, i32 0
  store i64 %66, i64* %67, align 8
  %68 = load %struct.Hash_table** @ht.4270, align 8
  %tmp_dst_res18 = bitcast %struct.fs_res* %tmp_dst_res to i8*
  %69 = call i8* @hash_lookup(%struct.Hash_table* %68, i8* %tmp_dst_res18) nounwind
  %70 = bitcast i8* %69 to %struct.fs_res*
  store %struct.fs_res* %70, %struct.fs_res** %dst_res, align 8
  br label %bb19

bb19:                                             ; preds = %bb17, %low_memory
  %71 = load %struct.fs_res** %dst_res, align 8
  %72 = icmp eq %struct.fs_res* %71, null
  br i1 %72, label %bb20, label %bb21

bb20:                                             ; preds = %bb19
  store %struct.fs_res* %tmp_dst_res, %struct.fs_res** %dst_res, align 8
  %73 = load %struct.fs_res** %dst_res, align 8
  %74 = getelementptr inbounds %struct.fs_res* %73, i32 0, i32 1
  store i32 2000000000, i32* %74, align 8
  %75 = load %struct.fs_res** %dst_res, align 8
  %76 = getelementptr inbounds %struct.fs_res* %75, i32 0, i32 2
  store i8 0, i8* %76, align 4
  br label %bb21

bb21:                                             ; preds = %bb14, %bb15, %bb20, %bb19
  %77 = load %struct.fs_res** %dst_res, align 8
  %78 = getelementptr inbounds %struct.fs_res* %77, i32 0, i32 1
  %79 = load i32* %78, align 8
  store i32 %79, i32* %res, align 4
  %80 = load %struct.fs_res** %dst_res, align 8
  %81 = getelementptr inbounds %struct.fs_res* %80, i32 0, i32 2
  %82 = load i8* %81, align 4
  %toBool22 = icmp ne i8 %82, 0
  %toBool22not = xor i1 %toBool22, true
  %toBool22not23 = zext i1 %toBool22not to i8
  %toBool25 = icmp ne i8 %toBool22not23, 0
  br i1 %toBool25, label %bb26, label %bb77

bb26:                                             ; preds = %bb21
  %83 = load %struct.stat** %dst_stat_addr, align 8
  %84 = getelementptr inbounds %struct.stat* %83, i32 0, i32 11
  %85 = getelementptr inbounds %struct.timespec* %84, i32 0, i32 0
  %86 = load i64* %85, align 8
  store i64 %86, i64* %dst_a_s, align 8
  %87 = load %struct.stat** %dst_stat_addr, align 8
  %88 = getelementptr inbounds %struct.stat* %87, i32 0, i32 13
  %89 = getelementptr inbounds %struct.timespec* %88, i32 0, i32 0
  %90 = load i64* %89, align 8
  store i64 %90, i64* %dst_c_s, align 8
  %91 = load i64* %dst_s, align 8
  store i64 %91, i64* %dst_m_s, align 8
  %92 = load %struct.stat** %dst_stat_addr, align 8
  %93 = call i64 @get_stat_atime_ns(%struct.stat* %92) nounwind readonly
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %dst_a_ns, align 4
  %95 = load %struct.stat** %dst_stat_addr, align 8
  %96 = call i64 @get_stat_ctime_ns(%struct.stat* %95) nounwind readonly
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %dst_c_ns, align 4
  %98 = load i32* %dst_ns, align 4
  store i32 %98, i32* %dst_m_ns, align 4
  %99 = load i64* %dst_a_s, align 8
  %100 = load i64* %dst_c_s, align 8
  %101 = or i64 %99, %100
  %102 = load i64* %dst_m_s, align 8
  %103 = or i64 %101, %102
  %104 = trunc i64 %103 to i32
  %105 = and i32 %104, 1
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %odd_second, align 1
  %107 = load i32* %dst_a_ns, align 4
  store i32 %107, i32* %a, align 4
  %108 = load i32* %dst_c_ns, align 4
  store i32 %108, i32* %c, align 4
  %109 = load i32* %dst_m_ns, align 4
  store i32 %109, i32* %m, align 4
  store i32 1, i32* %SR10, align 4
  %110 = load i32* %SR10, align 4
  %111 = mul nsw i32 %110, 10
  store i32 %111, i32* %SR10, align 4
  %112 = load i32* %a, align 4
  %113 = load i32* %SR10, align 4
  %int_cast_to_i64 = zext i32 %113 to i64
  %114 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %115 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %115, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb26
  call void @klee_disable_symbex() nounwind
  %116 = srem i32 %112, %113
  %117 = load i32* %c, align 4
  %118 = load i32* %SR10, align 4
  %int_cast_to_i641 = zext i32 %118 to i64
  %119 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %120 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %120, label %bb.i18, label %klee_div_zero_check.exit19

bb.i18:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit19:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %121 = srem i32 %117, %118
  %122 = or i32 %116, %121
  %123 = load i32* %m, align 4
  %124 = load i32* %SR10, align 4
  %int_cast_to_i642 = zext i32 %124 to i64
  %125 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %126 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %126, label %bb.i20, label %klee_div_zero_check.exit21

bb.i20:                                           ; preds = %klee_div_zero_check.exit19
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit21:                       ; preds = %klee_div_zero_check.exit19
  call void @klee_disable_symbex() nounwind
  %127 = srem i32 %123, %124
  %128 = or i32 %122, %127
  %129 = icmp ne i32 %128, 0
  br i1 %129, label %bb27, label %bb28

bb27:                                             ; preds = %klee_div_zero_check.exit21
  store i32 1, i32* %res, align 4
  br label %bb40

bb28:                                             ; preds = %klee_div_zero_check.exit21
  %130 = load i32* %SR10, align 4
  store i32 %130, i32* %res, align 4
  %131 = load i32* %a, align 4
  %132 = load i32* %SR10, align 4
  %int_cast_to_i643 = zext i32 %132 to i64
  %133 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %134 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %134, label %bb.i22, label %klee_div_zero_check.exit23

bb.i22:                                           ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit23:                       ; preds = %bb28
  call void @klee_disable_symbex() nounwind
  %135 = sdiv i32 %131, %132
  store i32 %135, i32* %a, align 4
  %136 = load i32* %c, align 4
  %137 = load i32* %SR10, align 4
  %int_cast_to_i644 = zext i32 %137 to i64
  %138 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %139 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %139, label %bb.i24, label %klee_div_zero_check.exit25

bb.i24:                                           ; preds = %klee_div_zero_check.exit23
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit25:                       ; preds = %klee_div_zero_check.exit23
  call void @klee_disable_symbex() nounwind
  %140 = sdiv i32 %136, %137
  store i32 %140, i32* %c, align 4
  %141 = load i32* %m, align 4
  %142 = load i32* %SR10, align 4
  %int_cast_to_i645 = zext i32 %142 to i64
  %143 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %144 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %144, label %bb.i26, label %klee_div_zero_check.exit27

bb.i26:                                           ; preds = %klee_div_zero_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit27:                       ; preds = %klee_div_zero_check.exit25
  call void @klee_disable_symbex() nounwind
  %145 = sdiv i32 %141, %142
  store i32 %145, i32* %m, align 4
  br label %bb38

bb29:                                             ; preds = %klee_div_zero_check.exit39
  %146 = load i32* %res, align 4
  %147 = icmp eq i32 %146, 1000000000
  br i1 %147, label %bb30, label %bb37

bb30:                                             ; preds = %bb29
  %148 = load i8* %odd_second, align 1
  %toBool31 = icmp ne i8 %148, 0
  %toBool31not = xor i1 %toBool31, true
  %toBool31not32 = zext i1 %toBool31not to i8
  %toBool34 = icmp ne i8 %toBool31not32, 0
  br i1 %toBool34, label %bb35, label %bb40

bb35:                                             ; preds = %bb30
  %149 = load i32* %res, align 4
  %150 = mul nsw i32 %149, 2
  store i32 %150, i32* %res, align 4
  br label %bb40

bb37:                                             ; preds = %bb29
  %151 = load i32* %res, align 4
  %152 = mul nsw i32 %151, 10
  store i32 %152, i32* %res, align 4
  %153 = load i32* %a, align 4
  %int_cast_to_i646 = zext i32 10 to i64
  %154 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %155 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %155, label %bb.i28, label %klee_div_zero_check.exit29

bb.i28:                                           ; preds = %bb37
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit29:                       ; preds = %bb37
  call void @klee_disable_symbex() nounwind
  %156 = sdiv i32 %153, 10
  store i32 %156, i32* %a, align 4
  %157 = load i32* %c, align 4
  %int_cast_to_i647 = zext i32 10 to i64
  %158 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %159 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %159, label %bb.i30, label %klee_div_zero_check.exit31

bb.i30:                                           ; preds = %klee_div_zero_check.exit29
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit31:                       ; preds = %klee_div_zero_check.exit29
  call void @klee_disable_symbex() nounwind
  %160 = sdiv i32 %157, 10
  store i32 %160, i32* %c, align 4
  %161 = load i32* %m, align 4
  %int_cast_to_i648 = zext i32 10 to i64
  %162 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %163 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %163, label %bb.i32, label %klee_div_zero_check.exit33

bb.i32:                                           ; preds = %klee_div_zero_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit33:                       ; preds = %klee_div_zero_check.exit31
  call void @klee_disable_symbex() nounwind
  %164 = sdiv i32 %161, 10
  store i32 %164, i32* %m, align 4
  br label %bb38

bb38:                                             ; preds = %klee_div_zero_check.exit33, %klee_div_zero_check.exit27
  %165 = load %struct.fs_res** %dst_res, align 8
  %166 = getelementptr inbounds %struct.fs_res* %165, i32 0, i32 1
  %167 = load i32* %166, align 8
  %168 = load i32* %res, align 4
  %169 = icmp sle i32 %167, %168
  br i1 %169, label %bb40, label %bb39

bb39:                                             ; preds = %bb38
  %170 = load i32* %a, align 4
  %int_cast_to_i649 = zext i32 10 to i64
  %171 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %172 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %172, label %bb.i34, label %klee_div_zero_check.exit35

bb.i34:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit35:                       ; preds = %bb39
  call void @klee_disable_symbex() nounwind
  %173 = srem i32 %170, 10
  %174 = load i32* %c, align 4
  %int_cast_to_i6410 = zext i32 10 to i64
  %175 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %176 = icmp eq i64 %int_cast_to_i6410, 0
  br i1 %176, label %bb.i36, label %klee_div_zero_check.exit37

bb.i36:                                           ; preds = %klee_div_zero_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit37:                       ; preds = %klee_div_zero_check.exit35
  call void @klee_disable_symbex() nounwind
  %177 = srem i32 %174, 10
  %178 = or i32 %173, %177
  %179 = load i32* %m, align 4
  %int_cast_to_i6411 = zext i32 10 to i64
  %180 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %181 = icmp eq i64 %int_cast_to_i6411, 0
  br i1 %181, label %bb.i38, label %klee_div_zero_check.exit39

bb.i38:                                           ; preds = %klee_div_zero_check.exit37
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit39:                       ; preds = %klee_div_zero_check.exit37
  call void @klee_disable_symbex() nounwind
  %182 = srem i32 %179, 10
  %183 = or i32 %178, %182
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %bb29, label %bb40

bb40:                                             ; preds = %bb30, %bb35, %klee_div_zero_check.exit39, %bb38, %bb27
  %185 = load %struct.fs_res** %dst_res, align 8
  %186 = getelementptr inbounds %struct.fs_res* %185, i32 0, i32 1
  %187 = load i32* %res, align 4
  store i32 %187, i32* %186, align 8
  %188 = load i32* %res, align 4
  %189 = icmp sgt i32 %188, 1
  br i1 %189, label %bb41, label %bb76

bb41:                                             ; preds = %bb40
  %190 = load i32* %src_ns, align 4
  store i32 %190, i32* %src_ns, align 4
  %191 = load i32* %res, align 4
  %192 = icmp eq i32 %191, 2000000000
  %193 = zext i1 %192 to i32
  %not = xor i32 %193, -1
  %194 = sext i32 %not to i64
  %195 = load i64* %src_s, align 8
  %196 = and i64 %194, %195
  store i64 %196, i64* %s, align 8
  %197 = load i64* %src_s, align 8
  %198 = load i64* %dst_s, align 8
  %199 = icmp slt i64 %197, %198
  br i1 %199, label %bb45, label %bb43

bb43:                                             ; preds = %bb41
  %200 = load i64* %src_s, align 8
  %201 = load i64* %dst_s, align 8
  %202 = icmp ne i64 %200, %201
  br i1 %202, label %bb46, label %bb44

bb44:                                             ; preds = %bb43
  %203 = load i32* %src_ns, align 4
  %204 = load i32* %dst_ns, align 4
  %205 = icmp sle i32 %203, %204
  br i1 %205, label %bb45, label %bb46

bb45:                                             ; preds = %bb44, %bb41
  store i32 1, i32* %0, align 4
  br label %bb90

bb46:                                             ; preds = %bb44, %bb43
  %206 = load i64* %dst_s, align 8
  %207 = load i64* %s, align 8
  %208 = icmp slt i64 %206, %207
  br i1 %208, label %bb49, label %bb47

bb47:                                             ; preds = %bb46
  %209 = load i64* %dst_s, align 8
  %210 = load i64* %s, align 8
  %211 = icmp ne i64 %209, %210
  br i1 %211, label %bb50, label %bb48

bb48:                                             ; preds = %bb47
  %212 = load i32* %src_ns, align 4
  %213 = load i32* %res, align 4
  %int_cast_to_i6412 = zext i32 %213 to i64
  %214 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %215 = icmp eq i64 %int_cast_to_i6412, 0
  br i1 %215, label %bb.i40, label %klee_div_zero_check.exit41

bb.i40:                                           ; preds = %bb48
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit41:                       ; preds = %bb48
  call void @klee_disable_symbex() nounwind
  %216 = srem i32 %212, %213
  %217 = load i32* %src_ns, align 4
  %218 = sub nsw i32 %217, %216
  %219 = load i32* %dst_ns, align 4
  %220 = icmp sgt i32 %218, %219
  br i1 %220, label %bb49, label %bb50

bb49:                                             ; preds = %klee_div_zero_check.exit41, %bb46
  store i32 -1, i32* %0, align 4
  br label %bb90

bb50:                                             ; preds = %klee_div_zero_check.exit41, %bb47
  %221 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 0
  %222 = getelementptr inbounds %struct.timespec* %221, i32 0, i32 0
  %223 = load i64* %dst_a_s, align 8
  store i64 %223, i64* %222, align 8
  %224 = load i32* %dst_a_ns, align 4
  %225 = sext i32 %224 to i64
  %226 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 0
  %227 = getelementptr inbounds %struct.timespec* %226, i32 0, i32 1
  store i64 %225, i64* %227, align 8
  %228 = load i32* %res, align 4
  %229 = icmp eq i32 %228, 2000000000
  %230 = zext i1 %229 to i64
  %231 = load i64* %dst_m_s, align 8
  %232 = or i64 %230, %231
  %233 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %234 = getelementptr inbounds %struct.timespec* %233, i32 0, i32 0
  store i64 %232, i64* %234, align 8
  %235 = load i32* %res, align 4
  %int_cast_to_i6413 = zext i32 9 to i64
  %236 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %237 = icmp eq i64 %int_cast_to_i6413, 0
  br i1 %237, label %bb.i42, label %klee_div_zero_check.exit43

bb.i42:                                           ; preds = %bb50
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit43:                       ; preds = %bb50
  call void @klee_disable_symbex() nounwind
  %238 = sdiv i32 %235, 9
  %239 = load i32* %dst_m_ns, align 4
  %240 = add nsw i32 %238, %239
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %243 = getelementptr inbounds %struct.timespec* %242, i32 0, i32 1
  store i64 %241, i64* %243, align 8
  %244 = load %struct.stat** %dst_stat_addr, align 8
  %245 = getelementptr inbounds %struct.stat* %244, i32 0, i32 3
  %246 = load i32* %245, align 8
  %247 = and i32 %246, 61440
  %248 = icmp eq i32 %247, 40960
  %249 = load i8** %dst_name_addr, align 8
  %timespec52 = bitcast [2 x %struct.timespec]* %timespec to %struct.timespec*
  br i1 %248, label %bb51, label %bb53

bb51:                                             ; preds = %klee_div_zero_check.exit43
  %250 = call i32 @lutimens(i8* %249, %struct.timespec* %timespec52) nounwind
  %251 = icmp ne i32 %250, 0
  %252 = zext i1 %251 to i8
  store i8 %252, i8* %iftmp.12, align 1
  br label %bb55

bb53:                                             ; preds = %klee_div_zero_check.exit43
  %253 = call i32 @utimens(i8* %249, %struct.timespec* %timespec52) nounwind
  %254 = icmp ne i32 %253, 0
  %255 = zext i1 %254 to i8
  store i8 %255, i8* %iftmp.12, align 1
  br label %bb55

bb55:                                             ; preds = %bb53, %bb51
  %256 = load i8* %iftmp.12, align 1
  %toBool56 = icmp ne i8 %256, 0
  br i1 %toBool56, label %bb57, label %bb58

bb57:                                             ; preds = %bb55
  store i32 -2, i32* %0, align 4
  br label %bb90

bb58:                                             ; preds = %bb55
  %257 = load %struct.stat** %dst_stat_addr, align 8
  %258 = getelementptr inbounds %struct.stat* %257, i32 0, i32 3
  %259 = load i32* %258, align 8
  %260 = and i32 %259, 61440
  %261 = icmp eq i32 %260, 40960
  %262 = load i8** %dst_name_addr, align 8
  br i1 %261, label %bb59, label %bb60

bb59:                                             ; preds = %bb58
  %263 = call i32 @lstat(i8* noalias %262, %struct.stat* noalias %dst_status) nounwind
  store i32 %263, i32* %iftmp.13, align 4
  br label %bb61

bb60:                                             ; preds = %bb58
  %264 = call i32 @stat(i8* noalias %262, %struct.stat* noalias %dst_status) nounwind
  store i32 %264, i32* %iftmp.13, align 4
  br label %bb61

bb61:                                             ; preds = %bb60, %bb59
  %265 = load i32* %iftmp.13, align 4
  store i32 %265, i32* %stat_result, align 4
  %266 = load i32* %stat_result, align 4
  %267 = sext i32 %266 to i64
  %268 = getelementptr inbounds %struct.stat* %dst_status, i32 0, i32 12
  %269 = getelementptr inbounds %struct.timespec* %268, i32 0, i32 0
  %270 = load i64* %269, align 8
  %271 = load i64* %dst_m_s, align 8
  %272 = xor i64 %270, %271
  %273 = or i64 %267, %272
  %274 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) nounwind readonly
  %275 = load i32* %dst_m_ns, align 4
  %276 = sext i32 %275 to i64
  %277 = xor i64 %274, %276
  %278 = or i64 %273, %277
  %279 = icmp ne i64 %278, 0
  br i1 %279, label %bb62, label %bb67

bb62:                                             ; preds = %bb61
  %280 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %281 = getelementptr inbounds %struct.timespec* %280, i32 0, i32 0
  %282 = load i64* %dst_m_s, align 8
  store i64 %282, i64* %281, align 8
  %283 = load i32* %dst_m_ns, align 4
  %284 = sext i32 %283 to i64
  %285 = getelementptr inbounds [2 x %struct.timespec]* %timespec, i64 0, i64 1
  %286 = getelementptr inbounds %struct.timespec* %285, i32 0, i32 1
  store i64 %284, i64* %286, align 8
  %287 = load %struct.stat** %dst_stat_addr, align 8
  %288 = getelementptr inbounds %struct.stat* %287, i32 0, i32 3
  %289 = load i32* %288, align 8
  %290 = and i32 %289, 61440
  %291 = icmp eq i32 %290, 40960
  %292 = load i8** %dst_name_addr, align 8
  %timespec64 = bitcast [2 x %struct.timespec]* %timespec to %struct.timespec*
  br i1 %291, label %bb63, label %bb65

bb63:                                             ; preds = %bb62
  %293 = call i32 @lutimens(i8* %292, %struct.timespec* %timespec64) nounwind
  br label %bb67

bb65:                                             ; preds = %bb62
  %294 = call i32 @utimens(i8* %292, %struct.timespec* %timespec64) nounwind
  br label %bb67

bb67:                                             ; preds = %bb65, %bb63, %bb61
  %295 = load i32* %stat_result, align 4
  %296 = icmp ne i32 %295, 0
  br i1 %296, label %bb68, label %bb69

bb68:                                             ; preds = %bb67
  store i32 -2, i32* %0, align 4
  br label %bb90

bb69:                                             ; preds = %bb67
  %297 = load i32* %res, align 4
  store i32 %297, i32* %old_res, align 4
  %298 = getelementptr inbounds %struct.stat* %dst_status, i32 0, i32 12
  %299 = getelementptr inbounds %struct.timespec* %298, i32 0, i32 0
  %300 = load i64* %299, align 8
  %301 = and i64 %300, 1
  %302 = mul nsw i64 %301, 1000000000
  %303 = trunc i64 %302 to i32
  %304 = call i64 @get_stat_mtime_ns(%struct.stat* %dst_status) nounwind readonly
  %305 = trunc i64 %304 to i32
  %306 = add i32 %303, %305
  store i32 %306, i32* %a70, align 4
  store i32 1, i32* %res, align 4
  %307 = load i32* %a70, align 4
  %308 = load i32* %res, align 4
  %int_cast_to_i6414 = zext i32 %308 to i64
  %309 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %310 = icmp eq i64 %int_cast_to_i6414, 0
  br i1 %310, label %bb.i44, label %klee_div_zero_check.exit45

bb.i44:                                           ; preds = %bb69
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit45:                       ; preds = %bb69
  call void @klee_disable_symbex() nounwind
  %311 = sdiv i32 %307, %308
  store i32 %311, i32* %a70, align 4
  br label %bb75

bb71:                                             ; preds = %klee_div_zero_check.exit49
  %312 = load i32* %res, align 4
  %313 = icmp eq i32 %312, 1000000000
  %314 = load i32* %res, align 4
  br i1 %313, label %bb72, label %bb73

bb72:                                             ; preds = %bb71
  %315 = mul nsw i32 %314, 2
  store i32 %315, i32* %res, align 4
  br label %bb76

bb73:                                             ; preds = %bb71
  %316 = mul nsw i32 %314, 10
  store i32 %316, i32* %res, align 4
  %317 = load i32* %res, align 4
  %318 = load i32* %old_res, align 4
  %319 = icmp eq i32 %317, %318
  br i1 %319, label %bb76, label %bb74

bb74:                                             ; preds = %bb73
  %320 = load i32* %a70, align 4
  %int_cast_to_i6415 = zext i32 10 to i64
  %321 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %322 = icmp eq i64 %int_cast_to_i6415, 0
  br i1 %322, label %bb.i46, label %klee_div_zero_check.exit47

bb.i46:                                           ; preds = %bb74
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit47:                       ; preds = %bb74
  call void @klee_disable_symbex() nounwind
  %323 = sdiv i32 %320, 10
  store i32 %323, i32* %a70, align 4
  br label %bb75

bb75:                                             ; preds = %klee_div_zero_check.exit47, %klee_div_zero_check.exit45
  %324 = load i32* %a70, align 4
  %int_cast_to_i6416 = zext i32 10 to i64
  %325 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %326 = icmp eq i64 %int_cast_to_i6416, 0
  br i1 %326, label %bb.i48, label %klee_div_zero_check.exit49

bb.i48:                                           ; preds = %bb75
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit49:                       ; preds = %bb75
  call void @klee_disable_symbex() nounwind
  %327 = srem i32 %324, 10
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %bb71, label %bb76

bb76:                                             ; preds = %klee_div_zero_check.exit49, %bb73, %bb72, %bb40
  %329 = load %struct.fs_res** %dst_res, align 8
  %330 = getelementptr inbounds %struct.fs_res* %329, i32 0, i32 1
  %331 = load i32* %res, align 4
  store i32 %331, i32* %330, align 8
  %332 = load %struct.fs_res** %dst_res, align 8
  %333 = getelementptr inbounds %struct.fs_res* %332, i32 0, i32 2
  store i8 1, i8* %333, align 4
  br label %bb77

bb77:                                             ; preds = %bb76, %bb21
  %334 = load i32* %res, align 4
  %335 = icmp eq i32 %334, 2000000000
  %336 = zext i1 %335 to i32
  %not78 = xor i32 %336, -1
  %337 = sext i32 %not78 to i64
  %338 = load i64* %src_s, align 8
  %339 = and i64 %337, %338
  store i64 %339, i64* %src_s, align 8
  %340 = load i32* %src_ns, align 4
  %341 = load i32* %res, align 4
  %int_cast_to_i6417 = zext i32 %341 to i64
  %342 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %343 = icmp eq i64 %int_cast_to_i6417, 0
  br i1 %343, label %bb.i50, label %klee_div_zero_check.exit51

bb.i50:                                           ; preds = %bb77
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit51:                       ; preds = %bb77
  call void @klee_disable_symbex() nounwind
  %344 = srem i32 %340, %341
  %345 = load i32* %src_ns, align 4
  %346 = sub nsw i32 %345, %344
  store i32 %346, i32* %src_ns, align 4
  br label %bb80

bb80:                                             ; preds = %klee_div_zero_check.exit51, %entry
  %347 = load i64* %dst_s, align 8
  %348 = load i64* %src_s, align 8
  %349 = icmp sge i64 %347, %348
  br i1 %349, label %bb81, label %bb88

bb81:                                             ; preds = %bb80
  %350 = load i64* %dst_s, align 8
  %351 = load i64* %src_s, align 8
  %352 = icmp sle i64 %350, %351
  br i1 %352, label %bb82, label %bb86

bb82:                                             ; preds = %bb81
  %353 = load i32* %dst_ns, align 4
  %354 = load i32* %src_ns, align 4
  %355 = icmp sge i32 %353, %354
  br i1 %355, label %bb83, label %bb84

bb83:                                             ; preds = %bb82
  %356 = load i32* %dst_ns, align 4
  %357 = load i32* %src_ns, align 4
  %358 = icmp sgt i32 %356, %357
  %359 = zext i1 %358 to i32
  store i32 %359, i32* %iftmp.16, align 4
  br label %bb85

bb84:                                             ; preds = %bb82
  store i32 -1, i32* %iftmp.16, align 4
  br label %bb85

bb85:                                             ; preds = %bb84, %bb83
  %360 = load i32* %iftmp.16, align 4
  store i32 %360, i32* %iftmp.15, align 4
  br label %bb87

bb86:                                             ; preds = %bb81
  store i32 1, i32* %iftmp.15, align 4
  br label %bb87

bb87:                                             ; preds = %bb86, %bb85
  %361 = load i32* %iftmp.15, align 4
  store i32 %361, i32* %iftmp.14, align 4
  br label %bb89

bb88:                                             ; preds = %bb80
  store i32 -1, i32* %iftmp.14, align 4
  br label %bb89

bb89:                                             ; preds = %bb88, %bb87
  %362 = load i32* %iftmp.14, align 4
  store i32 %362, i32* %0, align 4
  br label %bb90

bb90:                                             ; preds = %bb89, %bb68, %bb57, %bb49, %bb45, %bb6, %bb4, %bb2
  %363 = load i32* %0, align 4
  store i32 %363, i32* %retval, align 4
  %retval91 = load i32* %retval
  ret i32 %retval91
}

define i32 @lutimensat(i32 %dir, i8* %file, %struct.timespec* %times) nounwind inlinehint {
entry:
  %dir_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %times_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %dir, i32* %dir_addr
  store i8* %file, i8** %file_addr
  store %struct.timespec* %times, %struct.timespec** %times_addr
  %1 = load i32* %dir_addr, align 4
  %2 = load i8** %file_addr, align 8
  %3 = load %struct.timespec** %times_addr, align 8
  %4 = call i32 @rpl_utimensat(i32 %1, i8* %2, %struct.timespec* %3, i32 256) nounwind
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal i32 @validate_timespec(%struct.timespec* %timespec) nounwind {
entry:
  %timespec_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %result = alloca i32
  %utime_omit_count = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.timespec* %timespec, %struct.timespec** %timespec_addr
  store i32 0, i32* %result, align 4
  store i32 0, i32* %utime_omit_count, align 4
  %1 = load %struct.timespec** %timespec_addr, align 8
  %2 = getelementptr inbounds %struct.timespec* %1, i64 0
  %3 = getelementptr inbounds %struct.timespec* %2, i32 0, i32 1
  %4 = load i64* %3, align 8
  %5 = icmp eq i64 %4, 1073741823
  br i1 %5, label %bb3, label %bb

bb:                                               ; preds = %entry
  %6 = load %struct.timespec** %timespec_addr, align 8
  %7 = getelementptr inbounds %struct.timespec* %6, i64 0
  %8 = getelementptr inbounds %struct.timespec* %7, i32 0, i32 1
  %9 = load i64* %8, align 8
  %10 = icmp eq i64 %9, 1073741822
  br i1 %10, label %bb3, label %bb1

bb1:                                              ; preds = %bb
  %11 = load %struct.timespec** %timespec_addr, align 8
  %12 = getelementptr inbounds %struct.timespec* %11, i64 0
  %13 = getelementptr inbounds %struct.timespec* %12, i32 0, i32 1
  %14 = load i64* %13, align 8
  %15 = icmp slt i64 %14, 0
  br i1 %15, label %bb7, label %bb2

bb2:                                              ; preds = %bb1
  %16 = load %struct.timespec** %timespec_addr, align 8
  %17 = getelementptr inbounds %struct.timespec* %16, i64 0
  %18 = getelementptr inbounds %struct.timespec* %17, i32 0, i32 1
  %19 = load i64* %18, align 8
  %20 = icmp sgt i64 %19, 999999999
  br i1 %20, label %bb7, label %bb3

bb3:                                              ; preds = %bb2, %bb, %entry
  %21 = load %struct.timespec** %timespec_addr, align 8
  %22 = getelementptr inbounds %struct.timespec* %21, i64 1
  %23 = getelementptr inbounds %struct.timespec* %22, i32 0, i32 1
  %24 = load i64* %23, align 8
  %25 = icmp eq i64 %24, 1073741823
  br i1 %25, label %bb8, label %bb4

bb4:                                              ; preds = %bb3
  %26 = load %struct.timespec** %timespec_addr, align 8
  %27 = getelementptr inbounds %struct.timespec* %26, i64 1
  %28 = getelementptr inbounds %struct.timespec* %27, i32 0, i32 1
  %29 = load i64* %28, align 8
  %30 = icmp eq i64 %29, 1073741822
  br i1 %30, label %bb8, label %bb5

bb5:                                              ; preds = %bb4
  %31 = load %struct.timespec** %timespec_addr, align 8
  %32 = getelementptr inbounds %struct.timespec* %31, i64 1
  %33 = getelementptr inbounds %struct.timespec* %32, i32 0, i32 1
  %34 = load i64* %33, align 8
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %bb7, label %bb6

bb6:                                              ; preds = %bb5
  %36 = load %struct.timespec** %timespec_addr, align 8
  %37 = getelementptr inbounds %struct.timespec* %36, i64 1
  %38 = getelementptr inbounds %struct.timespec* %37, i32 0, i32 1
  %39 = load i64* %38, align 8
  %40 = icmp sgt i64 %39, 999999999
  br i1 %40, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb5, %bb2, %bb1
  %41 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %41, align 4
  store i32 -1, i32* %0, align 4
  br label %bb17

bb8:                                              ; preds = %bb6, %bb4, %bb3
  %42 = load %struct.timespec** %timespec_addr, align 8
  %43 = getelementptr inbounds %struct.timespec* %42, i64 0
  %44 = getelementptr inbounds %struct.timespec* %43, i32 0, i32 1
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 1073741823
  br i1 %46, label %bb10, label %bb9

bb9:                                              ; preds = %bb8
  %47 = load %struct.timespec** %timespec_addr, align 8
  %48 = getelementptr inbounds %struct.timespec* %47, i64 0
  %49 = getelementptr inbounds %struct.timespec* %48, i32 0, i32 1
  %50 = load i64* %49, align 8
  %51 = icmp eq i64 %50, 1073741822
  br i1 %51, label %bb10, label %bb12

bb10:                                             ; preds = %bb9, %bb8
  %52 = load %struct.timespec** %timespec_addr, align 8
  %53 = getelementptr inbounds %struct.timespec* %52, i64 0
  %54 = getelementptr inbounds %struct.timespec* %53, i32 0, i32 0
  store i64 0, i64* %54, align 8
  store i32 1, i32* %result, align 4
  %55 = load %struct.timespec** %timespec_addr, align 8
  %56 = getelementptr inbounds %struct.timespec* %55, i64 0
  %57 = getelementptr inbounds %struct.timespec* %56, i32 0, i32 1
  %58 = load i64* %57, align 8
  %59 = icmp eq i64 %58, 1073741822
  br i1 %59, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %60 = load i32* %utime_omit_count, align 4
  %61 = add nsw i32 %60, 1
  store i32 %61, i32* %utime_omit_count, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10, %bb9
  %62 = load %struct.timespec** %timespec_addr, align 8
  %63 = getelementptr inbounds %struct.timespec* %62, i64 1
  %64 = getelementptr inbounds %struct.timespec* %63, i32 0, i32 1
  %65 = load i64* %64, align 8
  %66 = icmp eq i64 %65, 1073741823
  br i1 %66, label %bb14, label %bb13

bb13:                                             ; preds = %bb12
  %67 = load %struct.timespec** %timespec_addr, align 8
  %68 = getelementptr inbounds %struct.timespec* %67, i64 1
  %69 = getelementptr inbounds %struct.timespec* %68, i32 0, i32 1
  %70 = load i64* %69, align 8
  %71 = icmp eq i64 %70, 1073741822
  br i1 %71, label %bb14, label %bb16

bb14:                                             ; preds = %bb13, %bb12
  %72 = load %struct.timespec** %timespec_addr, align 8
  %73 = getelementptr inbounds %struct.timespec* %72, i64 1
  %74 = getelementptr inbounds %struct.timespec* %73, i32 0, i32 0
  store i64 0, i64* %74, align 8
  store i32 1, i32* %result, align 4
  %75 = load %struct.timespec** %timespec_addr, align 8
  %76 = getelementptr inbounds %struct.timespec* %75, i64 1
  %77 = getelementptr inbounds %struct.timespec* %76, i32 0, i32 1
  %78 = load i64* %77, align 8
  %79 = icmp eq i64 %78, 1073741822
  br i1 %79, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  %80 = load i32* %utime_omit_count, align 4
  %81 = add nsw i32 %80, 1
  store i32 %81, i32* %utime_omit_count, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14, %bb13
  %82 = load i32* %utime_omit_count, align 4
  %83 = icmp eq i32 %82, 1
  %84 = zext i1 %83 to i32
  %85 = load i32* %result, align 4
  %86 = add nsw i32 %84, %85
  store i32 %86, i32* %0, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb7
  %87 = load i32* %0, align 4
  store i32 %87, i32* %retval, align 4
  %retval18 = load i32* %retval
  ret i32 %retval18
}

define internal zeroext i8 @update_timespec(%struct.stat* %statbuf, %struct.timespec** %ts) nounwind {
entry:
  %statbuf_addr = alloca %struct.stat*, align 8
  %ts_addr = alloca %struct.timespec**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %timespec = alloca %struct.timespec*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.stat* %statbuf, %struct.stat** %statbuf_addr
  store %struct.timespec** %ts, %struct.timespec*** %ts_addr
  %1 = load %struct.timespec*** %ts_addr, align 8
  %2 = load %struct.timespec** %1, align 8
  store %struct.timespec* %2, %struct.timespec** %timespec, align 8
  %3 = load %struct.timespec** %timespec, align 8
  %4 = getelementptr inbounds %struct.timespec* %3, i64 0
  %5 = getelementptr inbounds %struct.timespec* %4, i32 0, i32 1
  %6 = load i64* %5, align 8
  %7 = icmp eq i64 %6, 1073741822
  br i1 %7, label %bb, label %bb2

bb:                                               ; preds = %entry
  %8 = load %struct.timespec** %timespec, align 8
  %9 = getelementptr inbounds %struct.timespec* %8, i64 1
  %10 = getelementptr inbounds %struct.timespec* %9, i32 0, i32 1
  %11 = load i64* %10, align 8
  %12 = icmp eq i64 %11, 1073741822
  br i1 %12, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 1, i32* %0, align 4
  br label %bb20

bb2:                                              ; preds = %bb, %entry
  %13 = load %struct.timespec** %timespec, align 8
  %14 = getelementptr inbounds %struct.timespec* %13, i64 0
  %15 = getelementptr inbounds %struct.timespec* %14, i32 0, i32 1
  %16 = load i64* %15, align 8
  %17 = icmp eq i64 %16, 1073741823
  br i1 %17, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %18 = load %struct.timespec** %timespec, align 8
  %19 = getelementptr inbounds %struct.timespec* %18, i64 1
  %20 = getelementptr inbounds %struct.timespec* %19, i32 0, i32 1
  %21 = load i64* %20, align 8
  %22 = icmp eq i64 %21, 1073741823
  br i1 %22, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %23 = load %struct.timespec*** %ts_addr, align 8
  store %struct.timespec* null, %struct.timespec** %23, align 8
  store i32 0, i32* %0, align 4
  br label %bb20

bb5:                                              ; preds = %bb3, %bb2
  %24 = load %struct.timespec** %timespec, align 8
  %25 = getelementptr inbounds %struct.timespec* %24, i64 0
  %26 = getelementptr inbounds %struct.timespec* %25, i32 0, i32 1
  %27 = load i64* %26, align 8
  %28 = icmp eq i64 %27, 1073741822
  %29 = load %struct.timespec** %timespec, align 8
  %30 = getelementptr inbounds %struct.timespec* %29, i64 0
  br i1 %28, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %31 = load %struct.stat** %statbuf_addr, align 8
  %32 = call %struct.timespec @get_stat_atime(%struct.stat* %31) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %30, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %32, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep7 = getelementptr inbounds %struct.timespec* %30, i32 0, i32 1
  %mrv_gr8 = extractvalue %struct.timespec %32, 1
  store i64 %mrv_gr8, i64* %mrv_gep7
  br label %bb11

bb9:                                              ; preds = %bb5
  %33 = getelementptr inbounds %struct.timespec* %30, i32 0, i32 1
  %34 = load i64* %33, align 8
  %35 = icmp eq i64 %34, 1073741823
  br i1 %35, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %36 = load %struct.timespec** %timespec, align 8
  %37 = getelementptr inbounds %struct.timespec* %36, i64 0
  call void @gettime(%struct.timespec* %37) nounwind
  br label %bb11

bb11:                                             ; preds = %bb10, %bb9, %bb6
  %38 = load %struct.timespec** %timespec, align 8
  %39 = getelementptr inbounds %struct.timespec* %38, i64 1
  %40 = getelementptr inbounds %struct.timespec* %39, i32 0, i32 1
  %41 = load i64* %40, align 8
  %42 = icmp eq i64 %41, 1073741822
  %43 = load %struct.timespec** %timespec, align 8
  %44 = getelementptr inbounds %struct.timespec* %43, i64 1
  br i1 %42, label %bb12, label %bb17

bb12:                                             ; preds = %bb11
  %45 = load %struct.stat** %statbuf_addr, align 8
  %46 = call %struct.timespec @get_stat_mtime(%struct.stat* %45) nounwind readonly
  %mrv_gep13 = getelementptr inbounds %struct.timespec* %44, i32 0, i32 0
  %mrv_gr14 = extractvalue %struct.timespec %46, 0
  store i64 %mrv_gr14, i64* %mrv_gep13
  %mrv_gep15 = getelementptr inbounds %struct.timespec* %44, i32 0, i32 1
  %mrv_gr16 = extractvalue %struct.timespec %46, 1
  store i64 %mrv_gr16, i64* %mrv_gep15
  br label %bb19

bb17:                                             ; preds = %bb11
  %47 = getelementptr inbounds %struct.timespec* %44, i32 0, i32 1
  %48 = load i64* %47, align 8
  %49 = icmp eq i64 %48, 1073741823
  br i1 %49, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %50 = load %struct.timespec** %timespec, align 8
  %51 = getelementptr inbounds %struct.timespec* %50, i64 1
  call void @gettime(%struct.timespec* %51) nounwind
  br label %bb19

bb19:                                             ; preds = %bb18, %bb17, %bb12
  store i32 0, i32* %0, align 4
  br label %bb20

bb20:                                             ; preds = %bb19, %bb4, %bb1
  %52 = load i32* %0, align 4
  store i32 %52, i32* %retval, align 4
  %retval21 = load i32* %retval
  %retval2122 = trunc i32 %retval21 to i8
  ret i8 %retval2122
}

define i32 @fdutimens(i32 %fd, i8* %file, %struct.timespec* %timespec) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %timespec_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i8
  %iftmp.8 = alloca i8
  %0 = alloca i32
  %iftmp.4 = alloca %struct.timespec*
  %adjusted_timespec = alloca [2 x %struct.timespec]
  %ts = alloca %struct.timespec*
  %adjustment_needed = alloca i32
  %st = alloca %struct.stat
  %result = alloca i32
  %timeval = alloca [2 x %struct.timespec]
  %t = alloca %struct.timespec*
  %abig = alloca i8
  %mbig = alloca i8
  %adiff = alloca i64
  %mdiff = alloca i64
  %tt = alloca %struct.timespec*
  %truncated_timeval = alloca [2 x %struct.timespec]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %file, i8** %file_addr
  store %struct.timespec* %timespec, %struct.timespec** %timespec_addr
  %1 = load %struct.timespec** %timespec_addr, align 8
  %2 = icmp ne %struct.timespec* %1, null
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  %adjusted_timespec1 = bitcast [2 x %struct.timespec]* %adjusted_timespec to %struct.timespec*
  store %struct.timespec* %adjusted_timespec1, %struct.timespec** %iftmp.4, align 8
  br label %bb3

bb2:                                              ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %iftmp.4, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb
  %3 = load %struct.timespec** %iftmp.4, align 8
  store %struct.timespec* %3, %struct.timespec** %ts, align 8
  store i32 0, i32* %adjustment_needed, align 4
  %4 = load %struct.timespec** %ts, align 8
  %5 = icmp ne %struct.timespec* %4, null
  br i1 %5, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %6 = getelementptr inbounds [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0
  %7 = load %struct.timespec** %timespec_addr, align 8
  %8 = getelementptr inbounds %struct.timespec* %7, i64 0
  %9 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %8, i32 0, i32 0
  %11 = load i64* %10, align 1
  store i64 %11, i64* %9, align 1
  %12 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %8, i32 0, i32 1
  %14 = load i64* %13, align 1
  store i64 %14, i64* %12, align 1
  %15 = getelementptr inbounds [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1
  %16 = load %struct.timespec** %timespec_addr, align 8
  %17 = getelementptr inbounds %struct.timespec* %16, i64 1
  %18 = getelementptr inbounds %struct.timespec* %15, i32 0, i32 0
  %19 = getelementptr inbounds %struct.timespec* %17, i32 0, i32 0
  %20 = load i64* %19, align 1
  store i64 %20, i64* %18, align 1
  %21 = getelementptr inbounds %struct.timespec* %15, i32 0, i32 1
  %22 = getelementptr inbounds %struct.timespec* %17, i32 0, i32 1
  %23 = load i64* %22, align 1
  store i64 %23, i64* %21, align 1
  %24 = load %struct.timespec** %ts, align 8
  %25 = call i32 @validate_timespec(%struct.timespec* %24) nounwind
  store i32 %25, i32* %adjustment_needed, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %26 = load i32* %adjustment_needed, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 -1, i32* %0, align 4
  br label %bb80

bb7:                                              ; preds = %bb5
  %28 = load i32* %fd_addr, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %bb8, label %bb10

bb8:                                              ; preds = %bb7
  %30 = load i8** %file_addr, align 8
  %31 = icmp eq i8* %30, null
  br i1 %31, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %32 = call i32* @__errno_location() nounwind readnone
  store i32 9, i32* %32, align 4
  store i32 -1, i32* %0, align 4
  br label %bb80

bb10:                                             ; preds = %bb8, %bb7
  %33 = load i32* @utimensat_works_really, align 4
  %34 = icmp sge i32 %33, 0
  br i1 %34, label %bb11, label %bb40

bb11:                                             ; preds = %bb10
  %35 = load i32* %adjustment_needed, align 4
  %36 = icmp eq i32 %35, 2
  br i1 %36, label %bb12, label %bb28

bb12:                                             ; preds = %bb11
  %37 = load i32* %fd_addr, align 4
  %38 = icmp slt i32 %37, 0
  br i1 %38, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %39 = load i8** %file_addr, align 8
  %40 = call i32 @stat(i8* noalias %39, %struct.stat* noalias %st) nounwind
  %41 = icmp ne i32 %40, 0
  %42 = zext i1 %41 to i8
  store i8 %42, i8* %iftmp.8, align 1
  br label %bb15

bb14:                                             ; preds = %bb12
  %43 = load i32* %fd_addr, align 4
  %44 = call i32 @fstat(i32 %43, %struct.stat* %st) nounwind
  %45 = icmp ne i32 %44, 0
  %46 = zext i1 %45 to i8
  store i8 %46, i8* %iftmp.8, align 1
  br label %bb15

bb15:                                             ; preds = %bb14, %bb13
  %47 = load i8* %iftmp.8, align 1
  %toBool = icmp ne i8 %47, 0
  br i1 %toBool, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  store i32 -1, i32* %0, align 4
  br label %bb80

bb17:                                             ; preds = %bb15
  %48 = load %struct.timespec** %ts, align 8
  %49 = getelementptr inbounds %struct.timespec* %48, i64 0
  %50 = getelementptr inbounds %struct.timespec* %49, i32 0, i32 1
  %51 = load i64* %50, align 8
  %52 = icmp eq i64 %51, 1073741822
  %53 = load %struct.timespec** %ts, align 8
  br i1 %52, label %bb18, label %bb21

bb18:                                             ; preds = %bb17
  %54 = getelementptr inbounds %struct.timespec* %53, i64 0
  %55 = call %struct.timespec @get_stat_atime(%struct.stat* %st) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %54, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %55, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep19 = getelementptr inbounds %struct.timespec* %54, i32 0, i32 1
  %mrv_gr20 = extractvalue %struct.timespec %55, 1
  store i64 %mrv_gr20, i64* %mrv_gep19
  br label %bb27

bb21:                                             ; preds = %bb17
  %56 = getelementptr inbounds %struct.timespec* %53, i64 1
  %57 = getelementptr inbounds %struct.timespec* %56, i32 0, i32 1
  %58 = load i64* %57, align 8
  %59 = icmp eq i64 %58, 1073741822
  br i1 %59, label %bb22, label %bb27

bb22:                                             ; preds = %bb21
  %60 = load %struct.timespec** %ts, align 8
  %61 = getelementptr inbounds %struct.timespec* %60, i64 1
  %62 = call %struct.timespec @get_stat_mtime(%struct.stat* %st) nounwind readonly
  %mrv_gep23 = getelementptr inbounds %struct.timespec* %61, i32 0, i32 0
  %mrv_gr24 = extractvalue %struct.timespec %62, 0
  store i64 %mrv_gr24, i64* %mrv_gep23
  %mrv_gep25 = getelementptr inbounds %struct.timespec* %61, i32 0, i32 1
  %mrv_gr26 = extractvalue %struct.timespec %62, 1
  store i64 %mrv_gr26, i64* %mrv_gep25
  br label %bb27

bb27:                                             ; preds = %bb22, %bb21, %bb18
  %63 = load i32* %adjustment_needed, align 4
  %64 = add nsw i32 %63, 1
  store i32 %64, i32* %adjustment_needed, align 4
  br label %bb28

bb28:                                             ; preds = %bb27, %bb11
  %65 = load i32* %fd_addr, align 4
  %66 = icmp slt i32 %65, 0
  br i1 %66, label %bb29, label %bb34

bb29:                                             ; preds = %bb28
  %67 = load %struct.timespec** %ts, align 8
  %68 = load i8** %file_addr, align 8
  %69 = call i32 @utimensat(i32 -100, i8* %68, %struct.timespec* %67, i32 0) nounwind
  store i32 %69, i32* %result, align 4
  %70 = load i32* %result, align 4
  %71 = icmp sgt i32 %70, 0
  br i1 %71, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %72 = call i32* @__errno_location() nounwind readnone
  store i32 38, i32* %72, align 4
  br label %bb31

bb31:                                             ; preds = %bb30, %bb29
  %73 = load i32* %result, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %bb33, label %bb32

bb32:                                             ; preds = %bb31
  %75 = call i32* @__errno_location() nounwind readnone
  %76 = load i32* %75, align 4
  %77 = icmp ne i32 %76, 38
  br i1 %77, label %bb33, label %bb34

bb33:                                             ; preds = %bb32, %bb31
  store i32 1, i32* @utimensat_works_really, align 4
  %78 = load i32* %result, align 4
  store i32 %78, i32* %0, align 4
  br label %bb80

bb34:                                             ; preds = %bb32, %bb28
  %79 = load i32* %fd_addr, align 4
  %80 = icmp sge i32 %79, 0
  br i1 %80, label %bb35, label %bb40

bb35:                                             ; preds = %bb34
  %81 = load %struct.timespec** %ts, align 8
  %82 = load i32* %fd_addr, align 4
  %83 = call i32 @futimens(i32 %82, %struct.timespec* %81) nounwind
  store i32 %83, i32* %result, align 4
  %84 = load i32* %result, align 4
  %85 = icmp sgt i32 %84, 0
  br i1 %85, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  %86 = call i32* @__errno_location() nounwind readnone
  store i32 38, i32* %86, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %87 = load i32* %result, align 4
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %bb39, label %bb38

bb38:                                             ; preds = %bb37
  %89 = call i32* @__errno_location() nounwind readnone
  %90 = load i32* %89, align 4
  %91 = icmp ne i32 %90, 38
  br i1 %91, label %bb39, label %bb40

bb39:                                             ; preds = %bb38, %bb37
  store i32 1, i32* @utimensat_works_really, align 4
  %92 = load i32* %result, align 4
  store i32 %92, i32* %0, align 4
  br label %bb80

bb40:                                             ; preds = %bb38, %bb34, %bb10
  store i32 -1, i32* @utimensat_works_really, align 4
  store i32 -1, i32* @lutimensat_works_really, align 4
  %93 = load i32* %adjustment_needed, align 4
  %94 = icmp ne i32 %93, 0
  br i1 %94, label %bb41, label %bb52

bb41:                                             ; preds = %bb40
  %95 = load i32* %adjustment_needed, align 4
  %96 = icmp ne i32 %95, 3
  br i1 %96, label %bb42, label %bb48

bb42:                                             ; preds = %bb41
  %97 = load i32* %fd_addr, align 4
  %98 = icmp slt i32 %97, 0
  br i1 %98, label %bb43, label %bb44

bb43:                                             ; preds = %bb42
  %99 = load i8** %file_addr, align 8
  %100 = call i32 @stat(i8* noalias %99, %struct.stat* noalias %st) nounwind
  %101 = icmp ne i32 %100, 0
  %102 = zext i1 %101 to i8
  store i8 %102, i8* %iftmp.15, align 1
  br label %bb45

bb44:                                             ; preds = %bb42
  %103 = load i32* %fd_addr, align 4
  %104 = call i32 @fstat(i32 %103, %struct.stat* %st) nounwind
  %105 = icmp ne i32 %104, 0
  %106 = zext i1 %105 to i8
  store i8 %106, i8* %iftmp.15, align 1
  br label %bb45

bb45:                                             ; preds = %bb44, %bb43
  %107 = load i8* %iftmp.15, align 1
  %toBool46 = icmp ne i8 %107, 0
  br i1 %toBool46, label %bb47, label %bb48

bb47:                                             ; preds = %bb45
  store i32 -1, i32* %0, align 4
  br label %bb80

bb48:                                             ; preds = %bb45, %bb41
  %108 = load %struct.timespec** %ts, align 8
  %109 = icmp ne %struct.timespec* %108, null
  br i1 %109, label %bb49, label %bb52

bb49:                                             ; preds = %bb48
  %110 = call zeroext i8 @update_timespec(%struct.stat* %st, %struct.timespec** %ts) nounwind
  %toBool50 = icmp ne i8 %110, 0
  br i1 %toBool50, label %bb51, label %bb52

bb51:                                             ; preds = %bb49
  store i32 0, i32* %0, align 4
  br label %bb80

bb52:                                             ; preds = %bb49, %bb48, %bb40
  %111 = load %struct.timespec** %ts, align 8
  %112 = icmp ne %struct.timespec* %111, null
  br i1 %112, label %bb53, label %bb55

bb53:                                             ; preds = %bb52
  %113 = load %struct.timespec** %ts, align 8
  %114 = getelementptr inbounds %struct.timespec* %113, i64 0
  %115 = getelementptr inbounds %struct.timespec* %114, i32 0, i32 0
  %116 = load i64* %115, align 8
  %117 = getelementptr inbounds [2 x %struct.timespec]* %timeval, i64 0, i64 0
  %118 = getelementptr inbounds %struct.timespec* %117, i32 0, i32 0
  store i64 %116, i64* %118, align 8
  %119 = load %struct.timespec** %ts, align 8
  %120 = getelementptr inbounds %struct.timespec* %119, i64 0
  %121 = getelementptr inbounds %struct.timespec* %120, i32 0, i32 1
  %122 = load i64* %121, align 8
  %int_cast_to_i64 = bitcast i64 1000 to i64
  %123 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %124 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %124, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb53
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb53
  call void @klee_disable_symbex() nounwind
  %125 = sdiv i64 %122, 1000
  %126 = getelementptr inbounds [2 x %struct.timespec]* %timeval, i64 0, i64 0
  %127 = getelementptr inbounds %struct.timespec* %126, i32 0, i32 1
  store i64 %125, i64* %127, align 8
  %128 = load %struct.timespec** %ts, align 8
  %129 = getelementptr inbounds %struct.timespec* %128, i64 1
  %130 = getelementptr inbounds %struct.timespec* %129, i32 0, i32 0
  %131 = load i64* %130, align 8
  %132 = getelementptr inbounds [2 x %struct.timespec]* %timeval, i64 0, i64 1
  %133 = getelementptr inbounds %struct.timespec* %132, i32 0, i32 0
  store i64 %131, i64* %133, align 8
  %134 = load %struct.timespec** %ts, align 8
  %135 = getelementptr inbounds %struct.timespec* %134, i64 1
  %136 = getelementptr inbounds %struct.timespec* %135, i32 0, i32 1
  %137 = load i64* %136, align 8
  %int_cast_to_i641 = bitcast i64 1000 to i64
  %138 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %139 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %139, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %140 = sdiv i64 %137, 1000
  %141 = getelementptr inbounds [2 x %struct.timespec]* %timeval, i64 0, i64 1
  %142 = getelementptr inbounds %struct.timespec* %141, i32 0, i32 1
  store i64 %140, i64* %142, align 8
  %timeval54 = bitcast [2 x %struct.timespec]* %timeval to %struct.timespec*
  store %struct.timespec* %timeval54, %struct.timespec** %t, align 8
  br label %bb56

bb55:                                             ; preds = %bb52
  store %struct.timespec* null, %struct.timespec** %t, align 8
  br label %bb56

bb56:                                             ; preds = %bb55, %klee_div_zero_check.exit3
  %143 = load i32* %fd_addr, align 4
  %144 = icmp slt i32 %143, 0
  br i1 %144, label %bb57, label %bb58

bb57:                                             ; preds = %bb56
  %145 = load i8** %file_addr, align 8
  %146 = load %struct.timespec** %t, align 8
  %147 = call i32 @futimesat(i32 -100, i8* %145, %struct.timespec* %146) nounwind
  store i32 %147, i32* %0, align 4
  br label %bb80

bb58:                                             ; preds = %bb56
  %148 = load i32* %fd_addr, align 4
  %149 = load %struct.timespec** %t, align 8
  %150 = call i32 @futimesat(i32 %148, i8* null, %struct.timespec* %149) nounwind
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %bb59, label %bb77

bb59:                                             ; preds = %bb58
  %152 = load %struct.timespec** %t, align 8
  %153 = icmp ne %struct.timespec* %152, null
  br i1 %153, label %bb60, label %bb76

bb60:                                             ; preds = %bb59
  %154 = load %struct.timespec** %t, align 8
  %155 = getelementptr inbounds %struct.timespec* %154, i64 0
  %156 = getelementptr inbounds %struct.timespec* %155, i32 0, i32 1
  %157 = load i64* %156, align 8
  %158 = icmp sgt i64 %157, 499999
  %159 = zext i1 %158 to i8
  store i8 %159, i8* %abig, align 1
  %160 = load %struct.timespec** %t, align 8
  %161 = getelementptr inbounds %struct.timespec* %160, i64 1
  %162 = getelementptr inbounds %struct.timespec* %161, i32 0, i32 1
  %163 = load i64* %162, align 8
  %164 = icmp sgt i64 %163, 499999
  %165 = zext i1 %164 to i8
  store i8 %165, i8* %mbig, align 1
  %166 = load i8* %abig, align 1
  %167 = zext i8 %166 to i32
  %168 = load i8* %mbig, align 1
  %169 = zext i8 %168 to i32
  %170 = or i32 %167, %169
  %171 = icmp ne i32 %170, 0
  br i1 %171, label %bb61, label %bb76

bb61:                                             ; preds = %bb60
  %172 = load i32* %fd_addr, align 4
  %173 = call i32 @fstat(i32 %172, %struct.stat* %st) nounwind
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %bb62, label %bb76

bb62:                                             ; preds = %bb61
  %175 = getelementptr inbounds %struct.stat* %st, i32 0, i32 11
  %176 = getelementptr inbounds %struct.timespec* %175, i32 0, i32 0
  %177 = load i64* %176, align 8
  %178 = load %struct.timespec** %t, align 8
  %179 = getelementptr inbounds %struct.timespec* %178, i64 0
  %180 = getelementptr inbounds %struct.timespec* %179, i32 0, i32 0
  %181 = load i64* %180, align 8
  %182 = sub nsw i64 %177, %181
  store i64 %182, i64* %adiff, align 8
  %183 = getelementptr inbounds %struct.stat* %st, i32 0, i32 12
  %184 = getelementptr inbounds %struct.timespec* %183, i32 0, i32 0
  %185 = load i64* %184, align 8
  %186 = load %struct.timespec** %t, align 8
  %187 = getelementptr inbounds %struct.timespec* %186, i64 1
  %188 = getelementptr inbounds %struct.timespec* %187, i32 0, i32 0
  %189 = load i64* %188, align 8
  %190 = sub nsw i64 %185, %189
  store i64 %190, i64* %mdiff, align 8
  store %struct.timespec* null, %struct.timespec** %tt, align 8
  %191 = getelementptr inbounds [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 0
  %192 = load %struct.timespec** %t, align 8
  %193 = getelementptr inbounds %struct.timespec* %192, i64 0
  %194 = getelementptr inbounds %struct.timespec* %191, i32 0, i32 0
  %195 = getelementptr inbounds %struct.timespec* %193, i32 0, i32 0
  %196 = load i64* %195, align 1
  store i64 %196, i64* %194, align 1
  %197 = getelementptr inbounds %struct.timespec* %191, i32 0, i32 1
  %198 = getelementptr inbounds %struct.timespec* %193, i32 0, i32 1
  %199 = load i64* %198, align 1
  store i64 %199, i64* %197, align 1
  %200 = getelementptr inbounds [2 x %struct.timespec]* %truncated_timeval, i64 0, i64 1
  %201 = load %struct.timespec** %t, align 8
  %202 = getelementptr inbounds %struct.timespec* %201, i64 1
  %203 = getelementptr inbounds %struct.timespec* %200, i32 0, i32 0
  %204 = getelementptr inbounds %struct.timespec* %202, i32 0, i32 0
  %205 = load i64* %204, align 1
  store i64 %205, i64* %203, align 1
  %206 = getelementptr inbounds %struct.timespec* %200, i32 0, i32 1
  %207 = getelementptr inbounds %struct.timespec* %202, i32 0, i32 1
  %208 = load i64* %207, align 1
  store i64 %208, i64* %206, align 1
  %209 = load i8* %abig, align 1
  %toBool63 = icmp ne i8 %209, 0
  br i1 %toBool63, label %bb64, label %bb68

bb64:                                             ; preds = %bb62
  %210 = load i64* %adiff, align 8
  %211 = icmp eq i64 %210, 1
  br i1 %211, label %bb65, label %bb68

bb65:                                             ; preds = %bb64
  %212 = call i64 @get_stat_atime_ns(%struct.stat* %st) nounwind readonly
  %213 = icmp eq i64 %212, 0
  br i1 %213, label %bb66, label %bb68

bb66:                                             ; preds = %bb65
  %truncated_timeval67 = bitcast [2 x %struct.timespec]* %truncated_timeval to %struct.timespec*
  store %struct.timespec* %truncated_timeval67, %struct.timespec** %tt, align 8
  %214 = load %struct.timespec** %tt, align 8
  %215 = getelementptr inbounds %struct.timespec* %214, i64 0
  %216 = getelementptr inbounds %struct.timespec* %215, i32 0, i32 1
  store i64 0, i64* %216, align 8
  br label %bb68

bb68:                                             ; preds = %bb66, %bb65, %bb64, %bb62
  %217 = load i8* %mbig, align 1
  %toBool69 = icmp ne i8 %217, 0
  br i1 %toBool69, label %bb70, label %bb74

bb70:                                             ; preds = %bb68
  %218 = load i64* %mdiff, align 8
  %219 = icmp eq i64 %218, 1
  br i1 %219, label %bb71, label %bb74

bb71:                                             ; preds = %bb70
  %220 = call i64 @get_stat_mtime_ns(%struct.stat* %st) nounwind readonly
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %bb72, label %bb74

bb72:                                             ; preds = %bb71
  %truncated_timeval73 = bitcast [2 x %struct.timespec]* %truncated_timeval to %struct.timespec*
  store %struct.timespec* %truncated_timeval73, %struct.timespec** %tt, align 8
  %222 = load %struct.timespec** %tt, align 8
  %223 = getelementptr inbounds %struct.timespec* %222, i64 1
  %224 = getelementptr inbounds %struct.timespec* %223, i32 0, i32 1
  store i64 0, i64* %224, align 8
  br label %bb74

bb74:                                             ; preds = %bb72, %bb71, %bb70, %bb68
  %225 = load %struct.timespec** %tt, align 8
  %226 = icmp ne %struct.timespec* %225, null
  br i1 %226, label %bb75, label %bb76

bb75:                                             ; preds = %bb74
  %227 = load i32* %fd_addr, align 4
  %228 = load %struct.timespec** %tt, align 8
  %229 = call i32 @futimesat(i32 %227, i8* null, %struct.timespec* %228) nounwind
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74, %bb61, %bb60, %bb59
  store i32 0, i32* %0, align 4
  br label %bb80

bb77:                                             ; preds = %bb58
  %230 = load i8** %file_addr, align 8
  %231 = icmp eq i8* %230, null
  br i1 %231, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  store i32 -1, i32* %0, align 4
  br label %bb80

bb79:                                             ; preds = %bb77
  %232 = load i8** %file_addr, align 8
  %233 = load %struct.timespec** %t, align 8
  %234 = call i32 @utimes(i8* %232, %struct.timespec* %233) nounwind
  store i32 %234, i32* %0, align 4
  br label %bb80

bb80:                                             ; preds = %bb79, %bb78, %bb76, %bb57, %bb51, %bb47, %bb39, %bb33, %bb16, %bb9, %bb6
  %235 = load i32* %0, align 4
  store i32 %235, i32* %retval, align 4
  %retval81 = load i32* %retval
  ret i32 %retval81
}

declare i32 @utimensat(i32, i8*, %struct.timespec*, i32) nounwind

define i32 @utimens(i8* %file, %struct.timespec* %timespec) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %timespec_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.timespec* %timespec, %struct.timespec** %timespec_addr
  %1 = load i8** %file_addr, align 8
  %2 = load %struct.timespec** %timespec_addr, align 8
  %3 = call i32 @fdutimens(i32 -1, i8* %1, %struct.timespec* %2) nounwind
  store i32 %3, i32* %0, align 4
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @lutimens(i8* %file, %struct.timespec* %timespec) nounwind {
entry:
  %file_addr = alloca i8*, align 8
  %timespec_addr = alloca %struct.timespec*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.22 = alloca %struct.timespec*
  %adjusted_timespec = alloca [2 x %struct.timespec]
  %ts = alloca %struct.timespec*
  %adjustment_needed = alloca i32
  %st = alloca %struct.stat
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %file, i8** %file_addr
  store %struct.timespec* %timespec, %struct.timespec** %timespec_addr
  %1 = load %struct.timespec** %timespec_addr, align 8
  %2 = icmp ne %struct.timespec* %1, null
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  %adjusted_timespec1 = bitcast [2 x %struct.timespec]* %adjusted_timespec to %struct.timespec*
  store %struct.timespec* %adjusted_timespec1, %struct.timespec** %iftmp.22, align 8
  br label %bb3

bb2:                                              ; preds = %entry
  store %struct.timespec* null, %struct.timespec** %iftmp.22, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb
  %3 = load %struct.timespec** %iftmp.22, align 8
  store %struct.timespec* %3, %struct.timespec** %ts, align 8
  store i32 0, i32* %adjustment_needed, align 4
  %4 = load %struct.timespec** %ts, align 8
  %5 = icmp ne %struct.timespec* %4, null
  br i1 %5, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %6 = getelementptr inbounds [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 0
  %7 = load %struct.timespec** %timespec_addr, align 8
  %8 = getelementptr inbounds %struct.timespec* %7, i64 0
  %9 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 0
  %10 = getelementptr inbounds %struct.timespec* %8, i32 0, i32 0
  %11 = load i64* %10, align 1
  store i64 %11, i64* %9, align 1
  %12 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 1
  %13 = getelementptr inbounds %struct.timespec* %8, i32 0, i32 1
  %14 = load i64* %13, align 1
  store i64 %14, i64* %12, align 1
  %15 = getelementptr inbounds [2 x %struct.timespec]* %adjusted_timespec, i64 0, i64 1
  %16 = load %struct.timespec** %timespec_addr, align 8
  %17 = getelementptr inbounds %struct.timespec* %16, i64 1
  %18 = getelementptr inbounds %struct.timespec* %15, i32 0, i32 0
  %19 = getelementptr inbounds %struct.timespec* %17, i32 0, i32 0
  %20 = load i64* %19, align 1
  store i64 %20, i64* %18, align 1
  %21 = getelementptr inbounds %struct.timespec* %15, i32 0, i32 1
  %22 = getelementptr inbounds %struct.timespec* %17, i32 0, i32 1
  %23 = load i64* %22, align 1
  store i64 %23, i64* %21, align 1
  %24 = load %struct.timespec** %ts, align 8
  %25 = call i32 @validate_timespec(%struct.timespec* %24) nounwind
  store i32 %25, i32* %adjustment_needed, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %26 = load i32* %adjustment_needed, align 4
  %27 = icmp slt i32 %26, 0
  br i1 %27, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 -1, i32* %0, align 4
  br label %bb40

bb7:                                              ; preds = %bb5
  %28 = load i32* @lutimensat_works_really, align 4
  %29 = icmp sge i32 %28, 0
  br i1 %29, label %bb8, label %bb27

bb8:                                              ; preds = %bb7
  %30 = load i32* %adjustment_needed, align 4
  %31 = icmp eq i32 %30, 2
  br i1 %31, label %bb9, label %bb22

bb9:                                              ; preds = %bb8
  %32 = load i8** %file_addr, align 8
  %33 = call i32 @lstat(i8* noalias %32, %struct.stat* noalias %st) nounwind
  %34 = icmp ne i32 %33, 0
  br i1 %34, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  store i32 -1, i32* %0, align 4
  br label %bb40

bb11:                                             ; preds = %bb9
  %35 = load %struct.timespec** %ts, align 8
  %36 = getelementptr inbounds %struct.timespec* %35, i64 0
  %37 = getelementptr inbounds %struct.timespec* %36, i32 0, i32 1
  %38 = load i64* %37, align 8
  %39 = icmp eq i64 %38, 1073741822
  %40 = load %struct.timespec** %ts, align 8
  br i1 %39, label %bb12, label %bb15

bb12:                                             ; preds = %bb11
  %41 = getelementptr inbounds %struct.timespec* %40, i64 0
  %42 = call %struct.timespec @get_stat_atime(%struct.stat* %st) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %41, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %42, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep13 = getelementptr inbounds %struct.timespec* %41, i32 0, i32 1
  %mrv_gr14 = extractvalue %struct.timespec %42, 1
  store i64 %mrv_gr14, i64* %mrv_gep13
  br label %bb21

bb15:                                             ; preds = %bb11
  %43 = getelementptr inbounds %struct.timespec* %40, i64 1
  %44 = getelementptr inbounds %struct.timespec* %43, i32 0, i32 1
  %45 = load i64* %44, align 8
  %46 = icmp eq i64 %45, 1073741822
  br i1 %46, label %bb16, label %bb21

bb16:                                             ; preds = %bb15
  %47 = load %struct.timespec** %ts, align 8
  %48 = getelementptr inbounds %struct.timespec* %47, i64 1
  %49 = call %struct.timespec @get_stat_mtime(%struct.stat* %st) nounwind readonly
  %mrv_gep17 = getelementptr inbounds %struct.timespec* %48, i32 0, i32 0
  %mrv_gr18 = extractvalue %struct.timespec %49, 0
  store i64 %mrv_gr18, i64* %mrv_gep17
  %mrv_gep19 = getelementptr inbounds %struct.timespec* %48, i32 0, i32 1
  %mrv_gr20 = extractvalue %struct.timespec %49, 1
  store i64 %mrv_gr20, i64* %mrv_gep19
  br label %bb21

bb21:                                             ; preds = %bb16, %bb15, %bb12
  %50 = load i32* %adjustment_needed, align 4
  %51 = add nsw i32 %50, 1
  store i32 %51, i32* %adjustment_needed, align 4
  br label %bb22

bb22:                                             ; preds = %bb21, %bb8
  %52 = load %struct.timespec** %ts, align 8
  %53 = load i8** %file_addr, align 8
  %54 = call i32 @utimensat(i32 -100, i8* %53, %struct.timespec* %52, i32 256) nounwind
  store i32 %54, i32* %result, align 4
  %55 = load i32* %result, align 4
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %57 = call i32* @__errno_location() nounwind readnone
  store i32 38, i32* %57, align 4
  br label %bb24

bb24:                                             ; preds = %bb23, %bb22
  %58 = load i32* %result, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %bb26, label %bb25

bb25:                                             ; preds = %bb24
  %60 = call i32* @__errno_location() nounwind readnone
  %61 = load i32* %60, align 4
  %62 = icmp ne i32 %61, 38
  br i1 %62, label %bb26, label %bb27

bb26:                                             ; preds = %bb25, %bb24
  store i32 1, i32* @utimensat_works_really, align 4
  store i32 1, i32* @lutimensat_works_really, align 4
  %63 = load i32* %result, align 4
  store i32 %63, i32* %0, align 4
  br label %bb40

bb27:                                             ; preds = %bb25, %bb7
  store i32 -1, i32* @lutimensat_works_really, align 4
  %64 = load i32* %adjustment_needed, align 4
  %65 = icmp ne i32 %64, 0
  br i1 %65, label %bb28, label %bb34

bb28:                                             ; preds = %bb27
  %66 = load i32* %adjustment_needed, align 4
  %67 = icmp ne i32 %66, 3
  br i1 %67, label %bb29, label %bb31

bb29:                                             ; preds = %bb28
  %68 = load i8** %file_addr, align 8
  %69 = call i32 @lstat(i8* noalias %68, %struct.stat* noalias %st) nounwind
  %70 = icmp ne i32 %69, 0
  br i1 %70, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  store i32 -1, i32* %0, align 4
  br label %bb40

bb31:                                             ; preds = %bb29, %bb28
  %71 = load %struct.timespec** %ts, align 8
  %72 = icmp ne %struct.timespec* %71, null
  br i1 %72, label %bb32, label %bb34

bb32:                                             ; preds = %bb31
  %73 = call zeroext i8 @update_timespec(%struct.stat* %st, %struct.timespec** %ts) nounwind
  %toBool = icmp ne i8 %73, 0
  br i1 %toBool, label %bb33, label %bb34

bb33:                                             ; preds = %bb32
  store i32 0, i32* %0, align 4
  br label %bb40

bb34:                                             ; preds = %bb32, %bb31, %bb27
  %74 = load i32* %adjustment_needed, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %bb35, label %bb37

bb35:                                             ; preds = %bb34
  %76 = load i8** %file_addr, align 8
  %77 = call i32 @lstat(i8* noalias %76, %struct.stat* noalias %st) nounwind
  %78 = icmp ne i32 %77, 0
  br i1 %78, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  store i32 -1, i32* %0, align 4
  br label %bb40

bb37:                                             ; preds = %bb35, %bb34
  %79 = getelementptr inbounds %struct.stat* %st, i32 0, i32 3
  %80 = load i32* %79, align 8
  %81 = and i32 %80, 61440
  %82 = icmp ne i32 %81, 40960
  br i1 %82, label %bb38, label %bb39

bb38:                                             ; preds = %bb37
  %83 = load %struct.timespec** %ts, align 8
  %84 = load i8** %file_addr, align 8
  %85 = call i32 @fdutimens(i32 -1, i8* %84, %struct.timespec* %83) nounwind
  store i32 %85, i32* %0, align 4
  br label %bb40

bb39:                                             ; preds = %bb37
  %86 = call i32* @__errno_location() nounwind readnone
  store i32 38, i32* %86, align 4
  store i32 -1, i32* %0, align 4
  br label %bb40

bb40:                                             ; preds = %bb39, %bb38, %bb36, %bb33, %bb30, %bb26, %bb10, %bb6
  %87 = load i32* %0, align 4
  store i32 %87, i32* %retval, align 4
  %retval41 = load i32* %retval
  ret i32 %retval41
}

define void @verror(i32 %status, i32 %errnum, i8* %format, %struct.__va_list_tag* %args) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %format_addr = alloca i8*, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  %0 = load i32* %status_addr, align 4
  %1 = load i32* %errnum_addr, align 4
  %2 = load i8** %format_addr, align 8
  %3 = load %struct.__va_list_tag** %args_addr, align 8
  call void @verror_at_line(i32 %0, i32 %1, i8* null, i32 0, i8* %2, %struct.__va_list_tag* %3) nounwind
  ret void
}

define void @verror_at_line(i32 %status, i32 %errnum, i8* %file, i32 %line_number, i8* %format, %struct.__va_list_tag* %args) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %line_number_addr = alloca i32, align 4
  %format_addr = alloca i8*, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %message = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %file, i8** %file_addr
  store i32 %line_number, i32* %line_number_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  %0 = load i8** %format_addr, align 8
  %1 = load %struct.__va_list_tag** %args_addr, align 8
  %2 = call i8* @xvasprintf(i8* %0, %struct.__va_list_tag* %1) nounwind
  store i8* %2, i8** %message, align 8
  %3 = load i8** %message, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %5 = load i8** %file_addr, align 8
  %6 = icmp ne i8* %5, null
  %7 = load i32* %status_addr, align 4
  %8 = load i32* %errnum_addr, align 4
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %9 = load i8** %file_addr, align 8
  %10 = load i32* %line_number_addr, align 4
  %11 = load i8** %message, align 8
  call void (i32, i32, i8*, i32, i8*, ...)* @__error_at_line(i32 %7, i32 %8, i8* %9, i32 %10, i8* getelementptr inbounds ([3 x i8]* @.str340, i64 0, i64 0), i8* %11) nounwind
  br label %bb3

bb2:                                              ; preds = %bb
  %12 = load i8** %message, align 8
  call void (i32, i32, i8*, ...)* @__error(i32 %7, i32 %8, i8* getelementptr inbounds ([3 x i8]* @.str340, i64 0, i64 0), i8* %12) nounwind
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i8** %message, align 8
  call void @free(i8* %13) nounwind
  ret void

bb4:                                              ; preds = %entry
  %14 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8]* @.str1341, i64 0, i64 0)) nounwind
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 0, i32 %16, i8* %14) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define void @version_etc_arn(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors, i64 %n_authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 %n_authors, i64* %n_authors_addr
  %0 = load i8** %command_name_addr, align 8
  %1 = icmp ne i8* %0, null
  %2 = load %struct.FILE** %stream_addr, align 8
  br i1 %1, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i8** %command_name_addr, align 8
  %4 = load i8** %package_addr, align 8
  %5 = load i8** %version_addr, align 8
  %6 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([12 x i8]* @.str343, i64 0, i64 0), i8* %3, i8* %4, i8* %5) nounwind
  br label %bb2

bb1:                                              ; preds = %entry
  %7 = load i8** %package_addr, align 8
  %8 = load i8** %version_addr, align 8
  %9 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %2, i8* noalias getelementptr inbounds ([7 x i8]* @.str1344, i64 0, i64 0), i8* %7, i8* %8) nounwind
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = call i8* @gettext(i8* getelementptr inbounds ([4 x i8]* @.str2345, i64 0, i64 0)) nounwind
  %11 = load %struct.FILE** %stream_addr, align 8
  %12 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %11, i8* noalias getelementptr inbounds ([47 x i8]* @version_etc_copyright, i64 0, i64 0), i8* %10, i32 2016) noun
  %13 = call i8* @gettext(i8* getelementptr inbounds ([203 x i8]* @.str3346, i64 0, i64 0)) nounwind
  %14 = load %struct.FILE** %stream_addr, align 8
  %15 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %13, %struct.FILE* noalias %14) nounwind
  %16 = load i64* %n_authors_addr, align 8
  switch i64 %16, label %bb13 [
    i64 0, label %bb3
    i64 1, label %bb4
    i64 2, label %bb5
    i64 3, label %bb6
    i64 4, label %bb7
    i64 5, label %bb8
    i64 6, label %bb9
    i64 7, label %bb10
    i64 8, label %bb11
    i64 9, label %bb12
  ]

bb3:                                              ; preds = %bb2
  call void @abort() noreturn nounwind
  unreachable

bb4:                                              ; preds = %bb2
  %17 = load i8*** %authors_addr, align 8
  %18 = getelementptr inbounds i8** %17, i64 0
  %19 = load i8** %18, align 1
  %20 = call i8* @gettext(i8* getelementptr inbounds ([16 x i8]* @.str4347, i64 0, i64 0)) nounwind
  %21 = load %struct.FILE** %stream_addr, align 8
  %22 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %21, i8* noalias %20, i8* %19) nounwind
  br label %return

bb5:                                              ; preds = %bb2
  %23 = load i8*** %authors_addr, align 8
  %24 = getelementptr inbounds i8** %23, i64 1
  %25 = load i8** %24, align 1
  %26 = load i8*** %authors_addr, align 8
  %27 = getelementptr inbounds i8** %26, i64 0
  %28 = load i8** %27, align 1
  %29 = call i8* @gettext(i8* getelementptr inbounds ([23 x i8]* @.str5348, i64 0, i64 0)) nounwind
  %30 = load %struct.FILE** %stream_addr, align 8
  %31 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %30, i8* noalias %29, i8* %28, i8* %25) nounwind
  br label %return

bb6:                                              ; preds = %bb2
  %32 = load i8*** %authors_addr, align 8
  %33 = getelementptr inbounds i8** %32, i64 2
  %34 = load i8** %33, align 1
  %35 = load i8*** %authors_addr, align 8
  %36 = getelementptr inbounds i8** %35, i64 1
  %37 = load i8** %36, align 1
  %38 = load i8*** %authors_addr, align 8
  %39 = getelementptr inbounds i8** %38, i64 0
  %40 = load i8** %39, align 1
  %41 = call i8* @gettext(i8* getelementptr inbounds ([28 x i8]* @.str6349, i64 0, i64 0)) nounwind
  %42 = load %struct.FILE** %stream_addr, align 8
  %43 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias %41, i8* %40, i8* %37, i8* %34) nounwind
  br label %return

bb7:                                              ; preds = %bb2
  %44 = load i8*** %authors_addr, align 8
  %45 = getelementptr inbounds i8** %44, i64 3
  %46 = load i8** %45, align 1
  %47 = load i8*** %authors_addr, align 8
  %48 = getelementptr inbounds i8** %47, i64 2
  %49 = load i8** %48, align 1
  %50 = load i8*** %authors_addr, align 8
  %51 = getelementptr inbounds i8** %50, i64 1
  %52 = load i8** %51, align 1
  %53 = load i8*** %authors_addr, align 8
  %54 = getelementptr inbounds i8** %53, i64 0
  %55 = load i8** %54, align 1
  %56 = call i8* @gettext(i8* getelementptr inbounds ([32 x i8]* @.str7350, i64 0, i64 0)) nounwind
  %57 = load %struct.FILE** %stream_addr, align 8
  %58 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %57, i8* noalias %56, i8* %55, i8* %52, i8* %49, i8* %46) nounwind
  br label %return

bb8:                                              ; preds = %bb2
  %59 = load i8*** %authors_addr, align 8
  %60 = getelementptr inbounds i8** %59, i64 4
  %61 = load i8** %60, align 1
  %62 = load i8*** %authors_addr, align 8
  %63 = getelementptr inbounds i8** %62, i64 3
  %64 = load i8** %63, align 1
  %65 = load i8*** %authors_addr, align 8
  %66 = getelementptr inbounds i8** %65, i64 2
  %67 = load i8** %66, align 1
  %68 = load i8*** %authors_addr, align 8
  %69 = getelementptr inbounds i8** %68, i64 1
  %70 = load i8** %69, align 1
  %71 = load i8*** %authors_addr, align 8
  %72 = getelementptr inbounds i8** %71, i64 0
  %73 = load i8** %72, align 1
  %74 = call i8* @gettext(i8* getelementptr inbounds ([36 x i8]* @.str8351, i64 0, i64 0)) nounwind
  %75 = load %struct.FILE** %stream_addr, align 8
  %76 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %75, i8* noalias %74, i8* %73, i8* %70, i8* %67, i8* %64, i8* %61) nounwind
  br label %return

bb9:                                              ; preds = %bb2
  %77 = load i8*** %authors_addr, align 8
  %78 = getelementptr inbounds i8** %77, i64 5
  %79 = load i8** %78, align 1
  %80 = load i8*** %authors_addr, align 8
  %81 = getelementptr inbounds i8** %80, i64 4
  %82 = load i8** %81, align 1
  %83 = load i8*** %authors_addr, align 8
  %84 = getelementptr inbounds i8** %83, i64 3
  %85 = load i8** %84, align 1
  %86 = load i8*** %authors_addr, align 8
  %87 = getelementptr inbounds i8** %86, i64 2
  %88 = load i8** %87, align 1
  %89 = load i8*** %authors_addr, align 8
  %90 = getelementptr inbounds i8** %89, i64 1
  %91 = load i8** %90, align 1
  %92 = load i8*** %authors_addr, align 8
  %93 = getelementptr inbounds i8** %92, i64 0
  %94 = load i8** %93, align 1
  %95 = call i8* @gettext(i8* getelementptr inbounds ([40 x i8]* @.str9352, i64 0, i64 0)) nounwind
  %96 = load %struct.FILE** %stream_addr, align 8
  %97 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %96, i8* noalias %95, i8* %94, i8* %91, i8* %88, i8* %85, i8* %82, i8* %79) nounwind
  br label %return

bb10:                                             ; preds = %bb2
  %98 = load i8*** %authors_addr, align 8
  %99 = getelementptr inbounds i8** %98, i64 6
  %100 = load i8** %99, align 1
  %101 = load i8*** %authors_addr, align 8
  %102 = getelementptr inbounds i8** %101, i64 5
  %103 = load i8** %102, align 1
  %104 = load i8*** %authors_addr, align 8
  %105 = getelementptr inbounds i8** %104, i64 4
  %106 = load i8** %105, align 1
  %107 = load i8*** %authors_addr, align 8
  %108 = getelementptr inbounds i8** %107, i64 3
  %109 = load i8** %108, align 1
  %110 = load i8*** %authors_addr, align 8
  %111 = getelementptr inbounds i8** %110, i64 2
  %112 = load i8** %111, align 1
  %113 = load i8*** %authors_addr, align 8
  %114 = getelementptr inbounds i8** %113, i64 1
  %115 = load i8** %114, align 1
  %116 = load i8*** %authors_addr, align 8
  %117 = getelementptr inbounds i8** %116, i64 0
  %118 = load i8** %117, align 1
  %119 = call i8* @gettext(i8* getelementptr inbounds ([44 x i8]* @.str10353, i64 0, i64 0)) nounwind
  %120 = load %struct.FILE** %stream_addr, align 8
  %121 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %120, i8* noalias %119, i8* %118, i8* %115, i8* %112, i8* %109, i8* %106, i8* %103, i8* %100) nounwind
  br label %return

bb11:                                             ; preds = %bb2
  %122 = load i8*** %authors_addr, align 8
  %123 = getelementptr inbounds i8** %122, i64 7
  %124 = load i8** %123, align 1
  %125 = load i8*** %authors_addr, align 8
  %126 = getelementptr inbounds i8** %125, i64 6
  %127 = load i8** %126, align 1
  %128 = load i8*** %authors_addr, align 8
  %129 = getelementptr inbounds i8** %128, i64 5
  %130 = load i8** %129, align 1
  %131 = load i8*** %authors_addr, align 8
  %132 = getelementptr inbounds i8** %131, i64 4
  %133 = load i8** %132, align 1
  %134 = load i8*** %authors_addr, align 8
  %135 = getelementptr inbounds i8** %134, i64 3
  %136 = load i8** %135, align 1
  %137 = load i8*** %authors_addr, align 8
  %138 = getelementptr inbounds i8** %137, i64 2
  %139 = load i8** %138, align 1
  %140 = load i8*** %authors_addr, align 8
  %141 = getelementptr inbounds i8** %140, i64 1
  %142 = load i8** %141, align 1
  %143 = load i8*** %authors_addr, align 8
  %144 = getelementptr inbounds i8** %143, i64 0
  %145 = load i8** %144, align 1
  %146 = call i8* @gettext(i8* getelementptr inbounds ([48 x i8]* @.str11354, i64 0, i64 0)) nounwind
  %147 = load %struct.FILE** %stream_addr, align 8
  %148 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %147, i8* noalias %146, i8* %145, i8* %142, i8* %139, i8* %136, i8* %133, i8* %130, i8* %127, i8* %124) nounwind
  br label %return

bb12:                                             ; preds = %bb2
  %149 = load i8*** %authors_addr, align 8
  %150 = getelementptr inbounds i8** %149, i64 8
  %151 = load i8** %150, align 1
  %152 = load i8*** %authors_addr, align 8
  %153 = getelementptr inbounds i8** %152, i64 7
  %154 = load i8** %153, align 1
  %155 = load i8*** %authors_addr, align 8
  %156 = getelementptr inbounds i8** %155, i64 6
  %157 = load i8** %156, align 1
  %158 = load i8*** %authors_addr, align 8
  %159 = getelementptr inbounds i8** %158, i64 5
  %160 = load i8** %159, align 1
  %161 = load i8*** %authors_addr, align 8
  %162 = getelementptr inbounds i8** %161, i64 4
  %163 = load i8** %162, align 1
  %164 = load i8*** %authors_addr, align 8
  %165 = getelementptr inbounds i8** %164, i64 3
  %166 = load i8** %165, align 1
  %167 = load i8*** %authors_addr, align 8
  %168 = getelementptr inbounds i8** %167, i64 2
  %169 = load i8** %168, align 1
  %170 = load i8*** %authors_addr, align 8
  %171 = getelementptr inbounds i8** %170, i64 1
  %172 = load i8** %171, align 1
  %173 = load i8*** %authors_addr, align 8
  %174 = getelementptr inbounds i8** %173, i64 0
  %175 = load i8** %174, align 1
  %176 = call i8* @gettext(i8* getelementptr inbounds ([52 x i8]* @.str12355, i64 0, i64 0)) nounwind
  %177 = load %struct.FILE** %stream_addr, align 8
  %178 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %177, i8* noalias %176, i8* %175, i8* %172, i8* %169, i8* %166, i8* %163, i8* %160, i8* %157, i8* %154, i8* %151)
  br label %return

bb13:                                             ; preds = %bb2
  %179 = load i8*** %authors_addr, align 8
  %180 = getelementptr inbounds i8** %179, i64 8
  %181 = load i8** %180, align 1
  %182 = load i8*** %authors_addr, align 8
  %183 = getelementptr inbounds i8** %182, i64 7
  %184 = load i8** %183, align 1
  %185 = load i8*** %authors_addr, align 8
  %186 = getelementptr inbounds i8** %185, i64 6
  %187 = load i8** %186, align 1
  %188 = load i8*** %authors_addr, align 8
  %189 = getelementptr inbounds i8** %188, i64 5
  %190 = load i8** %189, align 1
  %191 = load i8*** %authors_addr, align 8
  %192 = getelementptr inbounds i8** %191, i64 4
  %193 = load i8** %192, align 1
  %194 = load i8*** %authors_addr, align 8
  %195 = getelementptr inbounds i8** %194, i64 3
  %196 = load i8** %195, align 1
  %197 = load i8*** %authors_addr, align 8
  %198 = getelementptr inbounds i8** %197, i64 2
  %199 = load i8** %198, align 1
  %200 = load i8*** %authors_addr, align 8
  %201 = getelementptr inbounds i8** %200, i64 1
  %202 = load i8** %201, align 1
  %203 = load i8*** %authors_addr, align 8
  %204 = getelementptr inbounds i8** %203, i64 0
  %205 = load i8** %204, align 1
  %206 = call i8* @gettext(i8* getelementptr inbounds ([60 x i8]* @.str13356, i64 0, i64 0)) nounwind
  %207 = load %struct.FILE** %stream_addr, align 8
  %208 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %207, i8* noalias %206, i8* %205, i8* %202, i8* %199, i8* %196, i8* %193, i8* %190, i8* %187, i8* %184, i8* %181)
  br label %return

return:                                           ; preds = %bb4, %bb5, %bb6, %bb7, %bb8, %bb9, %bb10, %bb11, %bb12, %bb13
  ret void
}

define void @version_etc_ar(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, i8** %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca i8**, align 8
  %n_authors = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store i8** %authors, i8*** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i8*** %authors_addr, align 8
  %3 = load i64* %n_authors, align 8
  %4 = getelementptr inbounds i8** %2, i64 %3
  %5 = load i8** %4, align 1
  %6 = icmp ne i8* %5, null
  br i1 %6, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load %struct.FILE** %stream_addr, align 8
  %8 = load i8** %command_name_addr, align 8
  %9 = load i8** %package_addr, align 8
  %10 = load i8** %version_addr, align 8
  %11 = load i8*** %authors_addr, align 8
  %12 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %7, i8* %8, i8* %9, i8* %10, i8** %11, i64 %12) nounwind
  ret void
}

define void @version_etc_va(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, %struct.__va_list_tag* %authors) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors_addr = alloca %struct.__va_list_tag*, align 8
  %addr.16 = alloca i8*
  %n_authors = alloca i64
  %authtab = alloca [10 x i8*]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  store %struct.__va_list_tag* %authors, %struct.__va_list_tag** %authors_addr
  store i64 0, i64* %n_authors, align 8
  br label %bb1

bb:                                               ; preds = %bb5
  %0 = load i64* %n_authors, align 8
  %1 = add i64 %0, 1
  store i64 %1, i64* %n_authors, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %2 = load i64* %n_authors, align 8
  %3 = icmp ugt i64 %2, 9
  br i1 %3, label %bb6, label %bb2

bb2:                                              ; preds = %bb1
  %4 = load i64* %n_authors, align 8
  %5 = load %struct.__va_list_tag** %authors_addr, align 8
  %6 = getelementptr inbounds %struct.__va_list_tag* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = icmp uge i32 %7, 48
  %9 = load %struct.__va_list_tag** %authors_addr, align 8
  br i1 %8, label %bb4, label %bb3

bb3:                                              ; preds = %bb2
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 3
  %11 = load i8** %10, align 8
  %12 = load %struct.__va_list_tag** %authors_addr, align 8
  %13 = getelementptr inbounds %struct.__va_list_tag* %12, i32 0, i32 0
  %14 = load i32* %13, align 8
  %15 = inttoptr i32 %14 to i8*
  %16 = ptrtoint i8* %11 to i64
  %17 = ptrtoint i8* %15 to i64
  %18 = add i64 %16, %17
  %19 = inttoptr i64 %18 to i8*
  store i8* %19, i8** %addr.16, align 8
  %20 = load %struct.__va_list_tag** %authors_addr, align 8
  %21 = getelementptr inbounds %struct.__va_list_tag* %20, i32 0, i32 0
  %22 = load i32* %21, align 8
  %23 = add i32 %22, 8
  %24 = load %struct.__va_list_tag** %authors_addr, align 8
  %25 = getelementptr inbounds %struct.__va_list_tag* %24, i32 0, i32 0
  store i32 %23, i32* %25, align 8
  br label %bb5

bb4:                                              ; preds = %bb2
  %26 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 2
  %27 = load i8** %26, align 8
  store i8* %27, i8** %addr.16, align 8
  %28 = getelementptr inbounds i8* %27, i64 8
  %29 = load %struct.__va_list_tag** %authors_addr, align 8
  %30 = getelementptr inbounds %struct.__va_list_tag* %29, i32 0, i32 2
  store i8* %28, i8** %30, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %31 = load i8** %addr.16, align 8
  %32 = bitcast i8* %31 to i8**
  %33 = load i8** %32, align 8
  %34 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds [10 x i8*]* %authtab, i64 0, i64 %4
  %36 = load i8** %35, align 8
  %37 = icmp ne i8* %36, null
  br i1 %37, label %bb, label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %38 = load %struct.FILE** %stream_addr, align 8
  %39 = load i8** %command_name_addr, align 8
  %40 = load i8** %package_addr, align 8
  %41 = load i8** %version_addr, align 8
  %authtab7 = bitcast [10 x i8*]* %authtab to i8**
  %42 = load i64* %n_authors, align 8
  call void @version_etc_arn(%struct.FILE* %38, i8* %39, i8* %40, i8* %41, i8** %authtab7, i64 %42) nounwind
  ret void
}

define void @version_etc(%struct.FILE* %stream, i8* %command_name, i8* %package, i8* %version, ...) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %command_name_addr = alloca i8*, align 8
  %package_addr = alloca i8*, align 8
  %version_addr = alloca i8*, align 8
  %authors = alloca [1 x %struct.__va_list_tag]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  store i8* %command_name, i8** %command_name_addr
  store i8* %package, i8** %package_addr
  store i8* %version, i8** %version_addr
  %authors1 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors12 = bitcast %struct.__va_list_tag* %authors1 to i8*
  call void @llvm.va_start(i8* %authors12)
  %0 = load %struct.FILE** %stream_addr, align 8
  %1 = load i8** %command_name_addr, align 8
  %2 = load i8** %package_addr, align 8
  %3 = load i8** %version_addr, align 8
  %authors3 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  call void @version_etc_va(%struct.FILE* %0, i8* %1, i8* %2, i8* %3, %struct.__va_list_tag* %authors3) nounwind
  %authors4 = bitcast [1 x %struct.__va_list_tag]* %authors to %struct.__va_list_tag*
  %authors45 = bitcast %struct.__va_list_tag* %authors4 to i8*
  call void @llvm.va_end(i8* %authors45)
  ret void
}

define void @emit_bug_reporting_address() nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([21 x i8]* @.str14357, i64 0, i64 0)) nounwind
  %1 = call i32 (i8*, ...)* @printf(i8* noalias %0, i8* getelementptr inbounds ([22 x i8]* @.str15358, i64 0, i64 0)) nounwind
  %2 = call i8* @gettext(i8* getelementptr inbounds ([20 x i8]* @.str16359, i64 0, i64 0)) nounwind
  %3 = call i32 (i8*, ...)* @printf(i8* noalias %2, i8* getelementptr inbounds ([14 x i8]* @.str17360, i64 0, i64 0), i8* getelementptr inbounds ([39 x i8]* @.str18361, i64 0, i64 0)) nounwind
  %4 = load %struct.FILE** bitcast (%4** @stdout to %struct.FILE**), align 8
  %5 = call i8* @gettext(i8* getelementptr inbounds ([64 x i8]* @.str19362, i64 0, i64 0)) nounwind
  %6 = call i32 bitcast (i32 (i8*, %4*)* @fputs_unlocked to i32 (i8*, %struct.FILE*)*)(i8* noalias %5, %struct.FILE* noalias %4) nounwind
  ret void
}

define zeroext i8 @can_write_any_file() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %can = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i8* @initialized.2472, align 1
  %toBool = icmp ne i8 %1, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb, label %bb4

bb:                                               ; preds = %entry
  store i8 0, i8* %can, align 1
  %2 = call i32 @geteuid() nounwind
  %3 = icmp eq i32 %2, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %can, align 1
  %5 = load i8* %can, align 1
  store i8 %5, i8* @can_write.2473, align 1
  store i8 1, i8* @initialized.2472, align 1
  br label %bb4

bb4:                                              ; preds = %bb, %entry
  %6 = load i8* @can_write.2473, align 1
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define noalias i8* @xnmalloc(i64 %n, i64 %s) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 -1, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = call noalias i8* @xmalloc(i64 %9) nounwind
  store i8* %10, i8** %0, align 8
  %11 = load i8** %0, align 8
  store i8* %11, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @xnrealloc(i8* %p, i64 %n, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %1 to i64
  %2 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %3 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %3, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %4 = udiv i64 -1, %1
  %5 = load i64* %n_addr, align 8
  %6 = icmp ult i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %klee_div_zero_check.exit
  %7 = load i64* %n_addr, align 8
  %8 = load i64* %s_addr, align 8
  %9 = mul i64 %7, %8
  %10 = load i8** %p_addr, align 8
  %11 = call i8* @xrealloc(i8* %10, i64 %9) nounwind
  store i8* %11, i8** %0, align 8
  %12 = load i8** %0, align 8
  store i8* %12, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @x2nrealloc(i8* %p, i64* %pn, i64 %s) nounwind inlinehint {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  store i64 %s, i64* %s_addr
  %1 = load i64** %pn_addr, align 8
  %2 = load i64* %1, align 8
  store i64 %2, i64* %n, align 8
  %3 = load i8** %p_addr, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb3

bb:                                               ; preds = %entry
  %5 = load i64* %n, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %bb1, label %bb6

bb1:                                              ; preds = %bb
  %7 = load i64* %s_addr, align 8
  %int_cast_to_i64 = bitcast i64 %7 to i64
  %8 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %9 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %9, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %10 = udiv i64 128, %7
  store i64 %10, i64* %n, align 8
  %11 = load i64* %n, align 8
  %12 = icmp eq i64 %11, 0
  %13 = zext i1 %12 to i64
  %14 = load i64* %n, align 8
  %15 = add i64 %13, %14
  store i64 %15, i64* %n, align 8
  br label %bb6

bb3:                                              ; preds = %entry
  %16 = load i64* %s_addr, align 8
  %int_cast_to_i641 = bitcast i64 %16 to i64
  %17 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %18 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %18, label %bb.i3, label %klee_div_zero_check.exit4

bb.i3:                                            ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit4:                        ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %19 = udiv i64 -6148914691236517206, %16
  %20 = load i64* %n, align 8
  %21 = icmp ule i64 %19, %20
  br i1 %21, label %bb4, label %bb5

bb4:                                              ; preds = %klee_div_zero_check.exit4
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %klee_div_zero_check.exit4
  %22 = load i64* %n, align 8
  %int_cast_to_i642 = bitcast i64 2 to i64
  %23 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %24 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %24, label %bb.i5, label %klee_div_zero_check.exit6

bb.i5:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit6:                        ; preds = %bb5
  call void @klee_disable_symbex() nounwind
  %25 = udiv i64 %22, 2
  %26 = load i64* %n, align 8
  %27 = add i64 %25, %26
  %28 = add i64 %27, 1
  store i64 %28, i64* %n, align 8
  br label %bb6

bb6:                                              ; preds = %bb, %klee_div_zero_check.exit, %klee_div_zero_check.exit6
  %29 = load i64** %pn_addr, align 8
  %30 = load i64* %n, align 8
  store i64 %30, i64* %29, align 8
  %31 = load i64* %n, align 8
  %32 = load i64* %s_addr, align 8
  %33 = mul i64 %31, %32
  %34 = load i8** %p_addr, align 8
  %35 = call i8* @xrealloc(i8* %34, i64 %33) nounwind
  store i8* %35, i8** %0, align 8
  %36 = load i8** %0, align 8
  store i8* %36, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

define noalias i8* @xcharalloc(i64 %n) nounwind inlinehint {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  store i8* %2, i8** %0, align 8
  %3 = load i8** %0, align 8
  store i8* %3, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xmalloc(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = call noalias i8* @malloc(i64 %1) nounwind
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %bb, label %bb2

bb:                                               ; preds = %entry
  %5 = load i64* %n_addr, align 8
  %6 = icmp ne i64 %5, 0
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %7 = load i8** %p, align 8
  store i8* %7, i8** %0, align 8
  %8 = load i8** %0, align 8
  store i8* %8, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xrealloc(i8* %p, i64 %n) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = icmp eq i64 %1, 0
  br i1 %2, label %bb, label %bb2

bb:                                               ; preds = %entry
  %3 = load i8** %p_addr, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %5 = load i8** %p_addr, align 8
  call void @free(i8* %5) nounwind
  store i8* null, i8** %0, align 8
  br label %bb6

bb2:                                              ; preds = %bb, %entry
  %6 = load i8** %p_addr, align 8
  %7 = load i64* %n_addr, align 8
  %8 = call i8* @realloc(i8* %6, i64 %7) nounwind
  store i8* %8, i8** %p_addr, align 8
  %9 = load i8** %p_addr, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %11 = load i64* %n_addr, align 8
  %12 = icmp ne i64 %11, 0
  br i1 %12, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  call void @xalloc_die() noreturn nounwind
  unreachable

bb5:                                              ; preds = %bb3, %bb2
  %13 = load i8** %p_addr, align 8
  store i8* %13, i8** %0, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %bb1
  %14 = load i8** %0, align 8
  store i8* %14, i8** %retval, align 8
  %retval7 = load i8** %retval
  ret i8* %retval7
}

declare i8* @realloc(i8*, i64) nounwind

define i8* @x2realloc(i8* %p, i64* %pn) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %pn_addr = alloca i64*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64* %pn, i64** %pn_addr
  %1 = load i8** %p_addr, align 8
  %2 = load i64** %pn_addr, align 8
  %3 = call i8* @x2nrealloc(i8* %1, i64* %2, i64 1) nounwind inlinehint
  store i8* %3, i8** %0, align 8
  %4 = load i8** %0, align 8
  store i8* %4, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xzalloc(i64 %s) nounwind {
entry:
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i64* %s_addr, align 8
  %4 = call i8* @memset(i8* %2, i32 0, i64 %3)
  store i8* %2, i8** %0, align 8
  %5 = load i8** %0, align 8
  store i8* %5, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xcalloc(i64 %n, i64 %s) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %n_addr, align 8
  %2 = load i64* %s_addr, align 8
  %3 = call noalias i8* @calloc(i64 %1, i64 %2) nounwind
  store i8* %3, i8** %p, align 8
  %4 = load i8** %p, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  call void @xalloc_die() noreturn nounwind
  unreachable

bb1:                                              ; preds = %entry
  %6 = load i8** %p, align 8
  store i8* %6, i8** %0, align 8
  %7 = load i8** %0, align 8
  store i8* %7, i8** %retval, align 8
  %retval2 = load i8** %retval
  ret i8* %retval2
}

define i8* @xmemdup(i8* %p, i64 %s) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %s_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  store i64 %s, i64* %s_addr
  %1 = load i64* %s_addr, align 8
  %2 = call noalias i8* @xmalloc(i64 %1) nounwind
  %3 = load i8** %p_addr, align 8
  %4 = load i64* %s_addr, align 8
  %5 = call i8* @memcpy(i8* %2, i8* %3, i64 %4)
  store i8* %2, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define noalias i8* @xstrdup(i8* %string) nounwind {
entry:
  %string_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  %1 = load i8** %string_addr, align 8
  %2 = call i64 @strlen(i8* %1) nounwind readonly
  %3 = add i64 %2, 1
  %4 = load i8** %string_addr, align 8
  %5 = call i8* @xmemdup(i8* %4, i64 %3) nounwind
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define void @xalloc_die() noreturn nounwind {
entry:
  %0 = call i8* @gettext(i8* getelementptr inbounds ([17 x i8]* @.str373, i64 0, i64 0)) nounwind
  %1 = volatile load i32* @exit_failure, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 %1, i32 0, i8* getelementptr inbounds ([3 x i8]* @.str1374, i64 0, i64 0), i8* %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define i32 @xmem_cd_iconv(i8* %src, i64 %srclen, i8* %cd, i8** %resultp, i64* %lengthp) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %srclen_addr = alloca i64, align 8
  %cd_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %lengthp_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64 %srclen, i64* %srclen_addr
  store i8* %cd, i8** %cd_addr
  store i8** %resultp, i8*** %resultp_addr
  store i64* %lengthp, i64** %lengthp_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i64* %srclen_addr, align 8
  %3 = load i8** %cd_addr, align 8
  %4 = load i8*** %resultp_addr, align 8
  %5 = load i64** %lengthp_addr, align 8
  %6 = call i32 @mem_cd_iconv(i8* %1, i64 %2, i8* %3, i8** %4, i64* %5) nounwind
  store i32 %6, i32* %retval1, align 4
  %7 = load i32* %retval1, align 4
  %8 = icmp slt i32 %7, 0
  br i1 %8, label %bb, label %bb3

bb:                                               ; preds = %entry
  %9 = call i32* @__errno_location() nounwind readnone
  %10 = load i32* %9, align 4
  %11 = icmp eq i32 %10, 12
  br i1 %11, label %bb2, label %bb3

bb2:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb3:                                              ; preds = %bb, %entry
  %12 = load i32* %retval1, align 4
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i8* @xstr_cd_iconv(i8* %src, i8* %cd) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %cd_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %cd, i8** %cd_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8** %cd_addr, align 8
  %3 = call i8* @str_cd_iconv(i8* %1, i8* %2) nounwind
  store i8* %3, i8** %result, align 8
  %4 = load i8** %result, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = call i32* @__errno_location() nounwind readnone
  %7 = load i32* %6, align 4
  %8 = icmp eq i32 %7, 12
  br i1 %8, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %9 = load i8** %result, align 8
  store i8* %9, i8** %0, align 8
  %10 = load i8** %0, align 8
  store i8* %10, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define i8* @xstr_iconv(i8* %src, i8* %from_codeset, i8* %to_codeset) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %from_codeset_addr = alloca i8*, align 8
  %to_codeset_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %from_codeset, i8** %from_codeset_addr
  store i8* %to_codeset, i8** %to_codeset_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8** %from_codeset_addr, align 8
  %3 = load i8** %to_codeset_addr, align 8
  %4 = call i8* @str_iconv(i8* %1, i8* %2, i8* %3) nounwind
  store i8* %4, i8** %result, align 8
  %5 = load i8** %result, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb, label %bb2

bb:                                               ; preds = %entry
  %7 = call i32* @__errno_location() nounwind readnone
  %8 = load i32* %7, align 4
  %9 = icmp eq i32 %8, 12
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  call void @xalloc_die() noreturn nounwind
  unreachable

bb2:                                              ; preds = %bb, %entry
  %10 = load i8** %result, align 8
  store i8* %10, i8** %0, align 8
  %11 = load i8** %0, align 8
  store i8* %11, i8** %retval, align 8
  %retval3 = load i8** %retval
  ret i8* %retval3
}

define internal i8* @xstrcat(i64 %argcount, %struct.__va_list_tag* %args) nounwind {
entry:
  %argcount_addr = alloca i64, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i8*
  %addr.3 = alloca i8*
  %0 = alloca i8*
  %addr.1 = alloca i8*
  %result = alloca i8*
  %ap = alloca [1 x %struct.__va_list_tag]
  %totalsize = alloca i64
  %i = alloca i64
  %p = alloca i8*
  %next = alloca i8*
  %next14 = alloca i8*
  %len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %argcount, i64* %argcount_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  store i64 0, i64* %totalsize, align 8
  %ap1 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %1 = load %struct.__va_list_tag** %args_addr, align 8
  %ap12 = bitcast %struct.__va_list_tag* %ap1 to i8*
  %2 = bitcast %struct.__va_list_tag* %1 to i8*
  %vacopy.cast.dst = bitcast i8* %ap12 to i64*
  %vacopy.cast.src = bitcast i8* %2 to i64*
  %3 = load i64* %vacopy.cast.src
  store i64 %3, i64* %vacopy.cast.dst
  %4 = getelementptr i64* %vacopy.cast.dst, i64 1
  %5 = getelementptr i64* %vacopy.cast.src, i64 1
  %6 = load i64* %5
  store i64 %6, i64* %4
  %7 = getelementptr i64* %4, i64 1
  %8 = getelementptr i64* %5, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = load i64* %argcount_addr, align 8
  store i64 %10, i64* %i, align 8
  br label %bb6

bb:                                               ; preds = %bb6
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %12 = getelementptr inbounds %struct.__va_list_tag* %11, i32 0, i32 0
  %13 = load i32* %12, align 8
  %14 = icmp uge i32 %13, 48
  %15 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  br i1 %14, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %16 = getelementptr inbounds %struct.__va_list_tag* %15, i32 0, i32 3
  %17 = load i8** %16, align 8
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %19 = getelementptr inbounds %struct.__va_list_tag* %18, i32 0, i32 0
  %20 = load i32* %19, align 8
  %21 = inttoptr i32 %20 to i8*
  %22 = ptrtoint i8* %17 to i64
  %23 = ptrtoint i8* %21 to i64
  %24 = add i64 %22, %23
  %25 = inttoptr i64 %24 to i8*
  store i8* %25, i8** %addr.1, align 8
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %27 = getelementptr inbounds %struct.__va_list_tag* %26, i32 0, i32 0
  %28 = load i32* %27, align 8
  %29 = add i32 %28, 8
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %31 = getelementptr inbounds %struct.__va_list_tag* %30, i32 0, i32 0
  store i32 %29, i32* %31, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %32 = getelementptr inbounds %struct.__va_list_tag* %15, i32 0, i32 2
  %33 = load i8** %32, align 8
  store i8* %33, i8** %addr.1, align 8
  %34 = getelementptr inbounds i8* %33, i64 8
  %35 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0
  %36 = getelementptr inbounds %struct.__va_list_tag* %35, i32 0, i32 2
  store i8* %34, i8** %36, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %37 = load i8** %addr.1, align 8
  %38 = bitcast i8* %37 to i8**
  %39 = load i8** %38, align 8
  store i8* %39, i8** %next, align 8
  %40 = load i8** %next, align 8
  %41 = call i64 @strlen(i8* %40) nounwind readonly
  %42 = load i64* %totalsize, align 8
  %43 = call i64 @xsum(i64 %42, i64 %41) nounwind readonly
  store i64 %43, i64* %totalsize, align 8
  %44 = load i64* %i, align 8
  %45 = sub i64 %44, 1
  store i64 %45, i64* %i, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %46 = load i64* %i, align 8
  %47 = icmp ne i64 %46, 0
  br i1 %47, label %bb, label %bb7

bb7:                                              ; preds = %bb6
  %ap8 = bitcast [1 x %struct.__va_list_tag]* %ap to %struct.__va_list_tag*
  %ap89 = bitcast %struct.__va_list_tag* %ap8 to i8*
  call void @llvm.va_end(i8* %ap89)
  %48 = load i64* %totalsize, align 8
  %49 = icmp eq i64 %48, -1
  %50 = load i64* %totalsize, align 8
  %51 = icmp ugt i64 %50, 2147483647
  %or.cond = or i1 %49, %51
  br i1 %or.cond, label %bb11, label %bb12

bb11:                                             ; preds = %bb7
  %52 = call i32* @__errno_location() nounwind readnone
  store i32 75, i32* %52, align 4
  store i8* null, i8** %0, align 8
  br label %bb20

bb12:                                             ; preds = %bb7
  %53 = load i64* %totalsize, align 8
  %54 = add i64 %53, 1
  %55 = call noalias i8* @xmalloc(i64 %54) nounwind
  store i8* %55, i8** %result, align 8
  %56 = load i8** %result, align 8
  store i8* %56, i8** %p, align 8
  %57 = load i64* %argcount_addr, align 8
  store i64 %57, i64* %i, align 8
  br label %bb18

bb13:                                             ; preds = %bb18
  %58 = load %struct.__va_list_tag** %args_addr, align 8
  %59 = getelementptr inbounds %struct.__va_list_tag* %58, i32 0, i32 0
  %60 = load i32* %59, align 8
  %61 = icmp uge i32 %60, 48
  %62 = load %struct.__va_list_tag** %args_addr, align 8
  br i1 %61, label %bb16, label %bb15

bb15:                                             ; preds = %bb13
  %63 = getelementptr inbounds %struct.__va_list_tag* %62, i32 0, i32 3
  %64 = load i8** %63, align 8
  %65 = load %struct.__va_list_tag** %args_addr, align 8
  %66 = getelementptr inbounds %struct.__va_list_tag* %65, i32 0, i32 0
  %67 = load i32* %66, align 8
  %68 = inttoptr i32 %67 to i8*
  %69 = ptrtoint i8* %64 to i64
  %70 = ptrtoint i8* %68 to i64
  %71 = add i64 %69, %70
  %72 = inttoptr i64 %71 to i8*
  store i8* %72, i8** %addr.3, align 8
  %73 = load %struct.__va_list_tag** %args_addr, align 8
  %74 = getelementptr inbounds %struct.__va_list_tag* %73, i32 0, i32 0
  %75 = load i32* %74, align 8
  %76 = add i32 %75, 8
  %77 = load %struct.__va_list_tag** %args_addr, align 8
  %78 = getelementptr inbounds %struct.__va_list_tag* %77, i32 0, i32 0
  store i32 %76, i32* %78, align 8
  br label %bb17

bb16:                                             ; preds = %bb13
  %79 = getelementptr inbounds %struct.__va_list_tag* %62, i32 0, i32 2
  %80 = load i8** %79, align 8
  store i8* %80, i8** %addr.3, align 8
  %81 = getelementptr inbounds i8* %80, i64 8
  %82 = load %struct.__va_list_tag** %args_addr, align 8
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 2
  store i8* %81, i8** %83, align 8
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %84 = load i8** %addr.3, align 8
  %85 = bitcast i8* %84 to i8**
  %86 = load i8** %85, align 8
  store i8* %86, i8** %next14, align 8
  %87 = load i8** %next14, align 8
  %88 = call i64 @strlen(i8* %87) nounwind readonly
  store i64 %88, i64* %len, align 8
  %89 = load i8** %p, align 8
  %90 = load i8** %next14, align 8
  %91 = load i64* %len, align 8
  %92 = call i8* @memcpy(i8* %89, i8* %90, i64 %91)
  %93 = load i8** %p, align 8
  %94 = load i64* %len, align 8
  %95 = getelementptr inbounds i8* %93, i64 %94
  store i8* %95, i8** %p, align 8
  %96 = load i64* %i, align 8
  %97 = sub i64 %96, 1
  store i64 %97, i64* %i, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb12
  %98 = load i64* %i, align 8
  %99 = icmp ne i64 %98, 0
  br i1 %99, label %bb13, label %bb19

bb19:                                             ; preds = %bb18
  %100 = load i8** %p, align 8
  store i8 0, i8* %100, align 1
  %101 = load i8** %result, align 8
  store i8* %101, i8** %0, align 8
  br label %bb20

bb20:                                             ; preds = %bb19, %bb11
  %102 = load i8** %0, align 8
  store i8* %102, i8** %retval, align 8
  %retval21 = load i8** %retval
  ret i8* %retval21
}

declare void @llvm.va_copy(i8*, i8*) nounwind

define i8* @xvasprintf(i8* %format, %struct.__va_list_tag* %args) nounwind {
entry:
  %format_addr = alloca i8*, align 8
  %args_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %argcount = alloca i64
  %f = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %args, %struct.__va_list_tag** %args_addr
  store i64 0, i64* %argcount, align 8
  %1 = load i8** %format_addr, align 8
  store i8* %1, i8** %f, align 8
  br label %bb

bb:                                               ; preds = %bb4, %entry
  %2 = load i8** %f, align 8
  %3 = load i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %5 = load i64* %argcount, align 8
  %6 = load %struct.__va_list_tag** %args_addr, align 8
  %7 = call i8* @xstrcat(i64 %5, %struct.__va_list_tag* %6) nounwind
  store i8* %7, i8** %0, align 8
  br label %bb10

bb2:                                              ; preds = %bb
  %8 = load i8** %f, align 8
  %9 = load i8* %8, align 1
  %10 = icmp ne i8 %9, 37
  br i1 %10, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %11 = load i8** %f, align 8
  %12 = getelementptr inbounds i8* %11, i64 1
  store i8* %12, i8** %f, align 8
  %13 = load i8** %f, align 8
  %14 = load i8* %13, align 1
  %15 = icmp ne i8 %14, 115
  br i1 %15, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %16 = load i8** %f, align 8
  %17 = getelementptr inbounds i8* %16, i64 1
  store i8* %17, i8** %f, align 8
  %18 = load i64* %argcount, align 8
  %19 = add i64 %18, 1
  store i64 %19, i64* %argcount, align 8
  br label %bb

bb5:                                              ; preds = %bb3, %bb2
  %20 = load i8** %format_addr, align 8
  %21 = load %struct.__va_list_tag** %args_addr, align 8
  %22 = call i32 @vasprintf(i8** noalias %result, i8* noalias %20, %struct.__va_list_tag* %21) nounwind
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %bb6, label %bb9

bb6:                                              ; preds = %bb5
  %24 = call i32* @__errno_location() nounwind readnone
  %25 = load i32* %24, align 4
  %26 = icmp eq i32 %25, 12
  br i1 %26, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  call void @xalloc_die() noreturn nounwind
  unreachable

bb8:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8
  br label %bb10

bb9:                                              ; preds = %bb5
  %27 = load i8** %result, align 8
  store i8* %27, i8** %0, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8, %bb1
  %28 = load i8** %0, align 8
  store i8* %28, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define zeroext i8 @yesno() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %yes = alloca i8
  %response = alloca i8*
  %response_size = alloca i64
  %response_len = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* null, i8** %response, align 8
  store i64 0, i64* %response_size, align 8
  %1 = load %struct.FILE** bitcast (%4** @stdin to %struct.FILE**), align 8
  %2 = call i64 bitcast (i64 (i8**, i64*, %4*)* @getline to i64 (i8**, i64*, %struct.FILE*)*)(i8** noalias %response, i64* noalias %response_size, %struct.FILE* noalias %1) nounwind
  store i64 %2, i64* %response_len, align 8
  %3 = load i64* %response_len, align 8
  %4 = icmp sle i64 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8 0, i8* %yes, align 1
  br label %bb4

bb1:                                              ; preds = %entry
  %5 = load i8** %response, align 8
  %6 = load i64* %response_len, align 8
  %7 = sub nsw i64 %6, 1
  %8 = getelementptr inbounds i8* %5, i64 %7
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 10
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %11 = load i8** %response, align 8
  %12 = load i64* %response_len, align 8
  %13 = sub nsw i64 %12, 1
  %14 = getelementptr inbounds i8* %11, i64 %13
  store i8 0, i8* %14, align 1
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load i8** %response, align 8
  %16 = call i32 @rpmatch(i8* %15) nounwind
  %17 = icmp sgt i32 %16, 0
  %18 = zext i1 %17 to i8
  store i8 %18, i8* %yes, align 1
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %19 = load i8** %response, align 8
  call void @free(i8* %19) nounwind
  %20 = load i8* %yes, align 1
  %21 = zext i8 %20 to i32
  store i32 %21, i32* %0, align 4
  %22 = load i32* %0, align 4
  store i32 %22, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

declare i32 @rpmatch(i8*) nounwind

define i32 @rpl_fcntl(i32 %fd, i32 %action, ...) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %action_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %addr.4 = alloca i8*
  %addr.0 = alloca i8*
  %arg = alloca [1 x %struct.__va_list_tag]
  %result = alloca i32
  %target = alloca i32
  %flags = alloca i32
  %saved_errno = alloca i32
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %action, i32* %action_addr
  store i32 -1, i32* %result, align 4
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*
  call void @llvm.va_start(i8* %arg12)
  %1 = load i32* %action_addr, align 4
  %cond = icmp eq i32 %1, 1030
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %3 = getelementptr inbounds %struct.__va_list_tag* %2, i32 0, i32 0
  %4 = load i32* %3, align 8
  %5 = icmp uge i32 %4, 48
  %6 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  br i1 %cond, label %bb, label %bb19

bb:                                               ; preds = %entry
  br i1 %5, label %bb4, label %bb3

bb3:                                              ; preds = %bb
  %7 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %8 = load i8** %7, align 8
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %10 = getelementptr inbounds %struct.__va_list_tag* %9, i32 0, i32 0
  %11 = load i32* %10, align 8
  %12 = inttoptr i32 %11 to i8*
  %13 = ptrtoint i8* %8 to i64
  %14 = ptrtoint i8* %12 to i64
  %15 = add i64 %13, %14
  %16 = inttoptr i64 %15 to i8*
  store i8* %16, i8** %addr.0, align 8
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %18 = getelementptr inbounds %struct.__va_list_tag* %17, i32 0, i32 0
  %19 = load i32* %18, align 8
  %20 = add i32 %19, 8
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %22 = getelementptr inbounds %struct.__va_list_tag* %21, i32 0, i32 0
  store i32 %20, i32* %22, align 8
  br label %bb5

bb4:                                              ; preds = %bb
  %23 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %24 = load i8** %23, align 8
  store i8* %24, i8** %addr.0, align 8
  %25 = getelementptr inbounds i8* %24, i64 8
  %26 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %27 = getelementptr inbounds %struct.__va_list_tag* %26, i32 0, i32 2
  store i8* %25, i8** %27, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %28 = load i8** %addr.0, align 8
  %29 = bitcast i8* %28 to i32*
  %30 = load i32* %29, align 4
  store i32 %30, i32* %target, align 4
  %31 = load i32* @have_dupfd_cloexec.2627, align 4
  %32 = icmp sge i32 %31, 0
  %33 = load i32* %fd_addr, align 4
  br i1 %32, label %bb6, label %bb12

bb6:                                              ; preds = %bb5
  %34 = load i32* %action_addr, align 4
  %35 = load i32* %target, align 4
  %36 = call i32 (i32, i32, ...)* @fcntl(i32 %33, i32 %34, i32 %35) nounwind
  store i32 %36, i32* %result, align 4
  %37 = load i32* %result, align 4
  %38 = icmp sge i32 %37, 0
  br i1 %38, label %bb8, label %bb7

bb7:                                              ; preds = %bb6
  %39 = call i32* @__errno_location() nounwind readnone
  %40 = load i32* %39, align 4
  %41 = icmp ne i32 %40, 22
  br i1 %41, label %bb8, label %bb9

bb8:                                              ; preds = %bb7, %bb6
  store i32 1, i32* @have_dupfd_cloexec.2627, align 4
  br label %bb13

bb9:                                              ; preds = %bb7
  %42 = load i32* %fd_addr, align 4
  %43 = load i32* %target, align 4
  %44 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %42, i32 0, i32 %43) nounwind
  store i32 %44, i32* %result, align 4
  %45 = load i32* %result, align 4
  %46 = icmp slt i32 %45, 0
  br i1 %46, label %bb23, label %bb10

bb10:                                             ; preds = %bb9
  store i32 -1, i32* @have_dupfd_cloexec.2627, align 4
  br label %bb13

bb12:                                             ; preds = %bb5
  %47 = load i32* %target, align 4
  %48 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %33, i32 0, i32 %47) nounwind
  store i32 %48, i32* %result, align 4
  br label %bb13

bb13:                                             ; preds = %bb8, %bb10, %bb12
  %49 = load i32* %result, align 4
  %50 = icmp sge i32 %49, 0
  %51 = load i32* @have_dupfd_cloexec.2627, align 4
  %52 = icmp eq i32 %51, -1
  %or.cond = and i1 %50, %52
  br i1 %or.cond, label %bb15, label %bb23

bb15:                                             ; preds = %bb13
  %53 = load i32* %result, align 4
  %54 = call i32 (i32, i32, ...)* @fcntl(i32 %53, i32 1) nounwind
  store i32 %54, i32* %flags, align 4
  %55 = load i32* %flags, align 4
  %56 = icmp slt i32 %55, 0
  br i1 %56, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %57 = load i32* %flags, align 4
  %58 = or i32 %57, 1
  %59 = load i32* %result, align 4
  %60 = call i32 (i32, i32, ...)* @fcntl(i32 %59, i32 2, i32 %58) nounwind
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %bb17, label %bb23

bb17:                                             ; preds = %bb16, %bb15
  %62 = call i32* @__errno_location() nounwind readnone
  %63 = load i32* %62, align 4
  store i32 %63, i32* %saved_errno, align 4
  %64 = load i32* %result, align 4
  %65 = call i32 @close(i32 %64) nounwind
  %66 = call i32* @__errno_location() nounwind readnone
  %67 = load i32* %saved_errno, align 4
  store i32 %67, i32* %66, align 4
  store i32 -1, i32* %result, align 4
  br label %bb23

bb19:                                             ; preds = %entry
  br i1 %5, label %bb21, label %bb20

bb20:                                             ; preds = %bb19
  %68 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 3
  %69 = load i8** %68, align 8
  %70 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %71 = getelementptr inbounds %struct.__va_list_tag* %70, i32 0, i32 0
  %72 = load i32* %71, align 8
  %73 = inttoptr i32 %72 to i8*
  %74 = ptrtoint i8* %69 to i64
  %75 = ptrtoint i8* %73 to i64
  %76 = add i64 %74, %75
  %77 = inttoptr i64 %76 to i8*
  store i8* %77, i8** %addr.4, align 8
  %78 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0
  %80 = load i32* %79, align 8
  %81 = add i32 %80, 8
  %82 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 0
  store i32 %81, i32* %83, align 8
  br label %bb22

bb21:                                             ; preds = %bb19
  %84 = getelementptr inbounds %struct.__va_list_tag* %6, i32 0, i32 2
  %85 = load i8** %84, align 8
  store i8* %85, i8** %addr.4, align 8
  %86 = getelementptr inbounds i8* %85, i64 8
  %87 = getelementptr inbounds [1 x %struct.__va_list_tag]* %arg, i64 0, i64 0
  %88 = getelementptr inbounds %struct.__va_list_tag* %87, i32 0, i32 2
  store i8* %86, i8** %88, align 8
  br label %bb22

bb22:                                             ; preds = %bb21, %bb20
  %89 = load i8** %addr.4, align 8
  %90 = bitcast i8* %89 to i8**
  %91 = load i8** %90, align 8
  store i8* %91, i8** %p, align 8
  %92 = load i32* %fd_addr, align 4
  %93 = load i32* %action_addr, align 4
  %94 = load i8** %p, align 8
  %95 = call i32 (i32, i32, ...)* @fcntl(i32 %92, i32 %93, i8* %94) nounwind
  store i32 %95, i32* %result, align 4
  br label %bb23

bb23:                                             ; preds = %bb13, %bb16, %bb17, %bb22, %bb9
  %arg24 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*
  %arg2425 = bitcast %struct.__va_list_tag* %arg24 to i8*
  call void @llvm.va_end(i8* %arg2425)
  %96 = load i32* %result, align 4
  store i32 %96, i32* %0, align 4
  %97 = load i32* %0, align 4
  store i32 %97, i32* %retval, align 4
  %retval26 = load i32* %retval
  ret i32 %retval26
}

define internal void @clear_ungetc_buffer_preserving_position(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  %0 = load %struct.FILE** %fp_addr, align 8
  %1 = getelementptr inbounds %struct.FILE* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = and i32 %2, 256
  %4 = icmp ne i32 %3, 0
  br i1 %4, label %bb, label %return

bb:                                               ; preds = %entry
  %5 = load %struct.FILE** %fp_addr, align 8
  %6 = call i32 @rpl_fseeko(%struct.FILE* %5, i64 0, i32 1) nounwind
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

define i32 @rpl_fflush(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = icmp eq %struct.FILE* %1, null
  br i1 %2, label %bb1, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.FILE** %stream_addr, align 8
  %4 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %3) nounwind
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %6 = load %struct.FILE** %stream_addr, align 8
  %7 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %6) nounwind
  store i32 %7, i32* %0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %8 = load %struct.FILE** %stream_addr, align 8
  call void @clear_ungetc_buffer_preserving_position(%struct.FILE* %8) nounwind
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fflush_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  store i32 %10, i32* %0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval4 = load i32* %retval
  ret i32 %retval4
}

define i64 @freadahead(%struct.FILE* %fp) nounwind readonly {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = getelementptr inbounds %struct.FILE* %1, i32 0, i32 5
  %3 = load i8** %2, align 8
  %4 = load %struct.FILE** %fp_addr, align 8
  %5 = getelementptr inbounds %struct.FILE* %4, i32 0, i32 4
  %6 = load i8** %5, align 8
  %7 = icmp ugt i8* %3, %6
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i64 0, i64* %0, align 8
  br label %bb5

bb1:                                              ; preds = %entry
  %8 = load %struct.FILE** %fp_addr, align 8
  %9 = getelementptr inbounds %struct.FILE* %8, i32 0, i32 2
  %10 = load i8** %9, align 8
  %11 = ptrtoint i8* %10 to i64
  %12 = load %struct.FILE** %fp_addr, align 8
  %13 = getelementptr inbounds %struct.FILE* %12, i32 0, i32 1
  %14 = load i8** %13, align 8
  %15 = ptrtoint i8* %14 to i64
  %16 = sub nsw i64 %11, %15
  %17 = load %struct.FILE** %fp_addr, align 8
  %18 = getelementptr inbounds %struct.FILE* %17, i32 0, i32 0
  %19 = load i32* %18, align 8
  %20 = and i32 %19, 256
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %22 = load %struct.FILE** %fp_addr, align 8
  %23 = getelementptr inbounds %struct.FILE* %22, i32 0, i32 11
  %24 = load i8** %23, align 8
  %25 = ptrtoint i8* %24 to i64
  %26 = load %struct.FILE** %fp_addr, align 8
  %27 = getelementptr inbounds %struct.FILE* %26, i32 0, i32 9
  %28 = load i8** %27, align 8
  %29 = ptrtoint i8* %28 to i64
  %30 = sub nsw i64 %25, %29
  store i64 %30, i64* %iftmp.0, align 8
  br label %bb4

bb3:                                              ; preds = %bb1
  store i64 0, i64* %iftmp.0, align 8
  br label %bb4

bb4:                                              ; preds = %bb3, %bb2
  %31 = load i64* %iftmp.0, align 8
  %32 = add nsw i64 %16, %31
  store i64 %32, i64* %0, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb
  %33 = load i64* %0, align 8
  store i64 %33, i64* %retval, align 8
  %retval6 = load i64* %retval
  ret i64 %retval6
}

define i32 @rpl_fseeko(%struct.FILE* %fp, i64 %offset, i32 %whence) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = getelementptr inbounds %struct.FILE* %1, i32 0, i32 2
  %3 = load i8** %2, align 8
  %4 = load %struct.FILE** %fp_addr, align 8
  %5 = getelementptr inbounds %struct.FILE* %4, i32 0, i32 1
  %6 = load i8** %5, align 8
  %7 = icmp eq i8* %3, %6
  br i1 %7, label %bb, label %bb5

bb:                                               ; preds = %entry
  %8 = load %struct.FILE** %fp_addr, align 8
  %9 = getelementptr inbounds %struct.FILE* %8, i32 0, i32 5
  %10 = load i8** %9, align 8
  %11 = load %struct.FILE** %fp_addr, align 8
  %12 = getelementptr inbounds %struct.FILE* %11, i32 0, i32 4
  %13 = load i8** %12, align 8
  %14 = icmp eq i8* %10, %13
  br i1 %14, label %bb1, label %bb5

bb1:                                              ; preds = %bb
  %15 = load %struct.FILE** %fp_addr, align 8
  %16 = getelementptr inbounds %struct.FILE* %15, i32 0, i32 9
  %17 = load i8** %16, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb2, label %bb5

bb2:                                              ; preds = %bb1
  %19 = load %struct.FILE** %fp_addr, align 8
  %20 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %19) nounwind
  %21 = load i64* %offset_addr, align 8
  %22 = load i32* %whence_addr, align 4
  %23 = call i64 @lseek(i32 %20, i64 %21, i32 %22) nounwind
  store i64 %23, i64* %pos, align 8
  %24 = load i64* %pos, align 8
  %25 = icmp eq i64 %24, -1
  br i1 %25, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 -1, i32* %0, align 4
  br label %bb6

bb4:                                              ; preds = %bb2
  %26 = load %struct.FILE** %fp_addr, align 8
  %27 = getelementptr inbounds %struct.FILE* %26, i32 0, i32 0
  %28 = load i32* %27, align 8
  %29 = and i32 %28, -17
  %30 = load %struct.FILE** %fp_addr, align 8
  %31 = getelementptr inbounds %struct.FILE* %30, i32 0, i32 0
  store i32 %29, i32* %31, align 8
  %32 = load %struct.FILE** %fp_addr, align 8
  %33 = getelementptr inbounds %struct.FILE* %32, i32 0, i32 21
  %34 = load i64* %pos, align 8
  store i64 %34, i64* %33, align 8
  store i32 0, i32* %0, align 4
  br label %bb6

bb5:                                              ; preds = %bb1, %bb, %entry
  %35 = load %struct.FILE** %fp_addr, align 8
  %36 = load i64* %offset_addr, align 8
  %37 = load i32* %whence_addr, align 4
  %38 = call i32 bitcast (i32 (%4*, i64, i32)* @fseek to i32 (%struct.FILE*, i64, i32)*)(%struct.FILE* %35, i64 %36, i32 %37) nounwind
  store i32 %38, i32* %0, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4, %bb3
  %39 = load i32* %0, align 4
  store i32 %39, i32* %retval, align 4
  %retval7 = load i32* %retval
  ret i32 %retval7
}

define i64 @rpl_mbrtowc(i32* %pwc, i8* %s, i64 %n, %struct.mbstate_t* %ps) nounwind {
entry:
  %pwc_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %ps_addr = alloca %struct.mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %ret = alloca i64
  %wc = alloca i32
  %uc = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwc, i32** %pwc_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  store %struct.mbstate_t* %ps, %struct.mbstate_t** %ps_addr
  %1 = load i32** %pwc_addr, align 8
  %2 = icmp eq i32* %1, null
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32* %wc, i32** %pwc_addr, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %3 = load i32** %pwc_addr, align 8
  %4 = load i8** %s_addr, align 8
  %5 = load i64* %n_addr, align 8
  %6 = load %struct.mbstate_t** %ps_addr, align 8
  %7 = call i64 bitcast (i64 (i32*, i8*, i64, %struct.__mbstate_t*)* @mbrtowc to i64 (i32*, i8*, i64, %struct.mbstate_t*)*)(i32* noalias %3, i8* noalias %4, i64 %5, %struct.mbstate_t* noalias %6) nounwind
  store i64 %7, i64* %ret, align 8
  %8 = load i64* %ret, align 8
  %9 = icmp ugt i64 %8, -3
  br i1 %9, label %bb2, label %bb8

bb2:                                              ; preds = %bb1
  %10 = load i64* %n_addr, align 8
  %11 = icmp ne i64 %10, 0
  br i1 %11, label %bb3, label %bb8

bb3:                                              ; preds = %bb2
  %12 = call zeroext i8 @hard_locale(i32 0) nounwind
  %toBool = icmp ne i8 %12, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot4 = zext i1 %toBoolnot to i8
  %toBool6 = icmp ne i8 %toBoolnot4, 0
  br i1 %toBool6, label %bb7, label %bb8

bb7:                                              ; preds = %bb3
  %13 = load i8** %s_addr, align 8
  %14 = load i8* %13, align 1
  store i8 %14, i8* %uc, align 1
  %15 = load i8* %uc, align 1
  %16 = zext i8 %15 to i32
  %17 = load i32** %pwc_addr, align 8
  store i32 %16, i32* %17, align 4
  store i64 1, i64* %0, align 8
  br label %bb9

bb8:                                              ; preds = %bb3, %bb2, %bb1
  %18 = load i64* %ret, align 8
  store i64 %18, i64* %0, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %19 = load i64* %0, align 8
  store i64 %19, i64* %retval, align 8
  %retval10 = load i64* %retval
  ret i64 %retval10
}

define i32 @rpl_utimensat(i32 %fd, i8* %file, %struct.timespec* %times, i32 %flag) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %times_addr = alloca %struct.timespec*, align 8
  %flag_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %ts = alloca [2 x %struct.timespec]
  %result = alloca i32
  %st = alloca %struct.stat
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %file, i8** %file_addr
  store %struct.timespec* %times, %struct.timespec** %times_addr
  store i32 %flag, i32* %flag_addr
  %1 = load i32* @utimensat_works_really.2379, align 4
  %2 = icmp sge i32 %1, 0
  br i1 %2, label %bb, label %bb30

bb:                                               ; preds = %entry
  %3 = load %struct.timespec** %times_addr, align 8
  %4 = icmp ne %struct.timespec* %3, null
  br i1 %4, label %bb1, label %bb22

bb1:                                              ; preds = %bb
  %5 = load %struct.timespec** %times_addr, align 8
  %6 = getelementptr inbounds %struct.timespec* %5, i64 0
  %7 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 1
  %8 = load i64* %7, align 8
  %9 = icmp eq i64 %8, 1073741822
  br i1 %9, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %10 = load %struct.timespec** %times_addr, align 8
  %11 = getelementptr inbounds %struct.timespec* %10, i64 1
  %12 = getelementptr inbounds %struct.timespec* %11, i32 0, i32 1
  %13 = load i64* %12, align 8
  %14 = icmp eq i64 %13, 1073741822
  br i1 %14, label %bb3, label %bb22

bb3:                                              ; preds = %bb2, %bb1
  %15 = load i32* %fd_addr, align 4
  %16 = load i8** %file_addr, align 8
  %17 = load i32* %flag_addr, align 4
  %18 = call i32 @fstatat(i32 %15, i8* noalias %16, %struct.stat* noalias %st, i32 %17) nounwind
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4
  br label %bb34

bb5:                                              ; preds = %bb3
  %20 = load %struct.timespec** %times_addr, align 8
  %21 = getelementptr inbounds %struct.timespec* %20, i64 0
  %22 = getelementptr inbounds %struct.timespec* %21, i32 0, i32 1
  %23 = load i64* %22, align 8
  %24 = icmp eq i64 %23, 1073741822
  br i1 %24, label %bb6, label %bb8

bb6:                                              ; preds = %bb5
  %25 = load %struct.timespec** %times_addr, align 8
  %26 = getelementptr inbounds %struct.timespec* %25, i64 1
  %27 = getelementptr inbounds %struct.timespec* %26, i32 0, i32 1
  %28 = load i64* %27, align 8
  %29 = icmp eq i64 %28, 1073741822
  br i1 %29, label %bb7, label %bb8

bb7:                                              ; preds = %bb6
  store i32 0, i32* %0, align 4
  br label %bb34

bb8:                                              ; preds = %bb6, %bb5
  %30 = load %struct.timespec** %times_addr, align 8
  %31 = getelementptr inbounds %struct.timespec* %30, i64 0
  %32 = getelementptr inbounds %struct.timespec* %31, i32 0, i32 1
  %33 = load i64* %32, align 8
  %34 = icmp eq i64 %33, 1073741822
  %35 = getelementptr inbounds [2 x %struct.timespec]* %ts, i64 0, i64 0
  br i1 %34, label %bb9, label %bb12

bb9:                                              ; preds = %bb8
  %36 = call %struct.timespec @get_stat_atime(%struct.stat* %st) nounwind readonly
  %mrv_gep = getelementptr inbounds %struct.timespec* %35, i32 0, i32 0
  %mrv_gr = extractvalue %struct.timespec %36, 0
  store i64 %mrv_gr, i64* %mrv_gep
  %mrv_gep10 = getelementptr inbounds %struct.timespec* %35, i32 0, i32 1
  %mrv_gr11 = extractvalue %struct.timespec %36, 1
  store i64 %mrv_gr11, i64* %mrv_gep10
  br label %bb13

bb12:                                             ; preds = %bb8
  %37 = load %struct.timespec** %times_addr, align 8
  %38 = getelementptr inbounds %struct.timespec* %37, i64 0
  %39 = getelementptr inbounds %struct.timespec* %35, i32 0, i32 0
  %40 = getelementptr inbounds %struct.timespec* %38, i32 0, i32 0
  %41 = load i64* %40, align 1
  store i64 %41, i64* %39, align 1
  %42 = getelementptr inbounds %struct.timespec* %35, i32 0, i32 1
  %43 = getelementptr inbounds %struct.timespec* %38, i32 0, i32 1
  %44 = load i64* %43, align 1
  store i64 %44, i64* %42, align 1
  br label %bb13

bb13:                                             ; preds = %bb12, %bb9
  %45 = load %struct.timespec** %times_addr, align 8
  %46 = getelementptr inbounds %struct.timespec* %45, i64 1
  %47 = getelementptr inbounds %struct.timespec* %46, i32 0, i32 1
  %48 = load i64* %47, align 8
  %49 = icmp eq i64 %48, 1073741822
  %50 = getelementptr inbounds [2 x %struct.timespec]* %ts, i64 0, i64 1
  br i1 %49, label %bb14, label %bb19

bb14:                                             ; preds = %bb13
  %51 = call %struct.timespec @get_stat_mtime(%struct.stat* %st) nounwind readonly
  %mrv_gep15 = getelementptr inbounds %struct.timespec* %50, i32 0, i32 0
  %mrv_gr16 = extractvalue %struct.timespec %51, 0
  store i64 %mrv_gr16, i64* %mrv_gep15
  %mrv_gep17 = getelementptr inbounds %struct.timespec* %50, i32 0, i32 1
  %mrv_gr18 = extractvalue %struct.timespec %51, 1
  store i64 %mrv_gr18, i64* %mrv_gep17
  br label %bb20

bb19:                                             ; preds = %bb13
  %52 = load %struct.timespec** %times_addr, align 8
  %53 = getelementptr inbounds %struct.timespec* %52, i64 1
  %54 = getelementptr inbounds %struct.timespec* %50, i32 0, i32 0
  %55 = getelementptr inbounds %struct.timespec* %53, i32 0, i32 0
  %56 = load i64* %55, align 1
  store i64 %56, i64* %54, align 1
  %57 = getelementptr inbounds %struct.timespec* %50, i32 0, i32 1
  %58 = getelementptr inbounds %struct.timespec* %53, i32 0, i32 1
  %59 = load i64* %58, align 1
  store i64 %59, i64* %57, align 1
  br label %bb20

bb20:                                             ; preds = %bb19, %bb14
  %ts21 = bitcast [2 x %struct.timespec]* %ts to %struct.timespec*
  store %struct.timespec* %ts21, %struct.timespec** %times_addr, align 8
  br label %bb22

bb22:                                             ; preds = %bb20, %bb2, %bb
  %60 = load i32* %fd_addr, align 4
  %61 = load i8** %file_addr, align 8
  %62 = load %struct.timespec** %times_addr, align 8
  %63 = load i32* %flag_addr, align 4
  %64 = call i32 @utimensat(i32 %60, i8* %61, %struct.timespec* %62, i32 %63) nounwind
  store i32 %64, i32* %result, align 4
  %65 = load i32* %result, align 4
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %bb23, label %bb26

bb23:                                             ; preds = %bb22
  %67 = call i32* @__errno_location() nounwind readnone
  %68 = load i32* %67, align 4
  %69 = icmp eq i32 %68, 22
  br i1 %69, label %bb24, label %bb26

bb24:                                             ; preds = %bb23
  %70 = load i32* %flag_addr, align 4
  %71 = and i32 %70, -257
  %72 = icmp ne i32 %71, 0
  br i1 %72, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %73 = load i32* %result, align 4
  store i32 %73, i32* %0, align 4
  br label %bb34

bb26:                                             ; preds = %bb24, %bb23, %bb22
  %74 = load i32* %result, align 4
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %bb29, label %bb27

bb27:                                             ; preds = %bb26
  %76 = call i32* @__errno_location() nounwind readnone
  %77 = load i32* %76, align 4
  %78 = icmp eq i32 %77, 38
  br i1 %78, label %bb30, label %bb28

bb28:                                             ; preds = %bb27
  %79 = call i32* @__errno_location() nounwind readnone
  %80 = load i32* %79, align 4
  %81 = icmp ne i32 %80, 22
  br i1 %81, label %bb29, label %bb30

bb29:                                             ; preds = %bb28, %bb26
  store i32 1, i32* @utimensat_works_really.2379, align 4
  %82 = load i32* %result, align 4
  store i32 %82, i32* %0, align 4
  br label %bb34

bb30:                                             ; preds = %bb28, %bb27, %entry
  %83 = load i32* @utimensat_works_really.2379, align 4
  %84 = icmp sge i32 %83, 0
  br i1 %84, label %bb31, label %bb33

bb31:                                             ; preds = %bb30
  %85 = call i32* @__errno_location() nounwind readnone
  %86 = load i32* %85, align 4
  %87 = icmp eq i32 %86, 38
  br i1 %87, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  store i32 -1, i32* @utimensat_works_really.2379, align 4
  br label %bb33

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %88 = load i32* %fd_addr, align 4
  %89 = load i8** %file_addr, align 8
  %90 = load %struct.timespec** %times_addr, align 8
  %91 = load i32* %flag_addr, align 4
  %92 = call i32 @local_utimensat(i32 %88, i8* %89, %struct.timespec* %90, i32 %91) nounwind
  store i32 %92, i32* %0, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb29, %bb25, %bb7, %bb4
  %93 = load i32* %0, align 4
  store i32 %93, i32* %retval, align 4
  %retval35 = load i32* %retval
  ret i32 %retval35
}

define internal i32 @local_utimensat(i32 %fd, i8* %file, %struct.timespec* %ts, i32 %flag) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %ts_addr = alloca %struct.timespec*, align 8
  %flag_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.9 = alloca i32
  %iftmp.8 = alloca i32
  %iftmp.7 = alloca i32
  %iftmp.6 = alloca i32
  %0 = alloca i32
  %saved_cwd = alloca %struct.saved_cwd
  %saved_errno = alloca i32
  %err = alloca i32
  %proc_buf = alloca [4032 x i8]
  %proc_file = alloca i8*
  %proc_result = alloca i32
  %proc_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i8* %file, i8** %file_addr
  store %struct.timespec* %ts, %struct.timespec** %ts_addr
  store i32 %flag, i32* %flag_addr
  %1 = load i32* %flag_addr, align 4
  %2 = and i32 %1, -257
  %3 = icmp ne i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = call i32* @__errno_location() nounwind readnone
  store i32 22, i32* %4, align 4
  store i32 -1, i32* %0, align 4
  br label %bb42

bb1:                                              ; preds = %entry
  %5 = load i32* %fd_addr, align 4
  %6 = icmp eq i32 %5, -100
  br i1 %6, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %7 = load i8** %file_addr, align 8
  %8 = getelementptr inbounds i8* %7, i64 0
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 47
  br i1 %10, label %bb3, label %bb7

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %flag_addr, align 4
  %12 = icmp eq i32 %11, 256
  %13 = load i8** %file_addr, align 8
  %14 = load %struct.timespec** %ts_addr, align 8
  br i1 %12, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %15 = call i32 @lutimens(i8* %13, %struct.timespec* %14) nounwind
  store i32 %15, i32* %iftmp.6, align 4
  br label %bb6

bb5:                                              ; preds = %bb3
  %16 = call i32 @utimens(i8* %13, %struct.timespec* %14) nounwind
  store i32 %16, i32* %iftmp.6, align 4
  br label %bb6

bb6:                                              ; preds = %bb5, %bb4
  %17 = load i32* %iftmp.6, align 4
  store i32 %17, i32* %0, align 4
  br label %bb42

bb7:                                              ; preds = %bb2
  %proc_buf8 = bitcast [4032 x i8]* %proc_buf to i8*
  %18 = load i32* %fd_addr, align 4
  %19 = load i8** %file_addr, align 8
  %20 = call i8* @openat_proc_name(i8* %proc_buf8, i32 %18, i8* %19) nounwind
  store i8* %20, i8** %proc_file, align 8
  %21 = load i8** %proc_file, align 8
  %22 = icmp ne i8* %21, null
  br i1 %22, label %bb9, label %bb24

bb9:                                              ; preds = %bb7
  %23 = load i32* %flag_addr, align 4
  %24 = icmp eq i32 %23, 256
  %25 = load i8** %proc_file, align 8
  %26 = load %struct.timespec** %ts_addr, align 8
  br i1 %24, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %27 = call i32 @lutimens(i8* %25, %struct.timespec* %26) nounwind
  store i32 %27, i32* %iftmp.7, align 4
  br label %bb12

bb11:                                             ; preds = %bb9
  %28 = call i32 @utimens(i8* %25, %struct.timespec* %26) nounwind
  store i32 %28, i32* %iftmp.7, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %29 = load i32* %iftmp.7, align 4
  store i32 %29, i32* %proc_result, align 4
  %30 = call i32* @__errno_location() nounwind readnone
  %31 = load i32* %30, align 4
  store i32 %31, i32* %proc_errno, align 4
  %proc_buf13 = bitcast [4032 x i8]* %proc_buf to i8*
  %32 = load i8** %proc_file, align 8
  %33 = icmp ne i8* %proc_buf13, %32
  br i1 %33, label %bb14, label %bb15

bb14:                                             ; preds = %bb12
  %34 = load i8** %proc_file, align 8
  call void @free(i8* %34) nounwind
  br label %bb15

bb15:                                             ; preds = %bb14, %bb12
  %35 = load i32* %proc_result, align 4
  %36 = icmp ne i32 %35, -1
  br i1 %36, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %37 = load i32* %proc_result, align 4
  store i32 %37, i32* %0, align 4
  br label %bb42

bb17:                                             ; preds = %bb15
  %38 = load i32* %proc_errno, align 4
  %39 = icmp ne i32 %38, 20
  %40 = load i32* %proc_errno, align 4
  %41 = icmp ne i32 %40, 2
  %or.cond = and i1 %39, %41
  %42 = load i32* %proc_errno, align 4
  %43 = icmp ne i32 %42, 1
  %or.cond3 = and i1 %or.cond, %43
  %44 = load i32* %proc_errno, align 4
  %45 = icmp ne i32 %44, 13
  %or.cond5 = and i1 %or.cond3, %45
  %46 = load i32* %proc_errno, align 4
  %47 = icmp ne i32 %46, 38
  %or.cond7 = and i1 %or.cond5, %47
  %48 = load i32* %proc_errno, align 4
  %49 = icmp ne i32 %48, 95
  %or.cond9 = and i1 %or.cond7, %49
  br i1 %or.cond9, label %bb23, label %bb24

bb23:                                             ; preds = %bb17
  %50 = call i32* @__errno_location() nounwind readnone
  %51 = load i32* %proc_errno, align 4
  store i32 %51, i32* %50, align 4
  %52 = load i32* %proc_result, align 4
  store i32 %52, i32* %0, align 4
  br label %bb42

bb24:                                             ; preds = %bb17, %bb7
  %53 = call i32 @save_cwd(%struct.saved_cwd* %saved_cwd) nounwind
  %54 = icmp ne i32 %53, 0
  br i1 %54, label %bb25, label %bb26

bb25:                                             ; preds = %bb24
  %55 = call i32* @__errno_location() nounwind readnone
  %56 = load i32* %55, align 4
  call void @openat_save_fail(i32 %56) noreturn nounwind
  unreachable

bb26:                                             ; preds = %bb24
  %57 = load i32* %fd_addr, align 4
  %58 = icmp sge i32 %57, 0
  br i1 %58, label %bb27, label %bb29

bb27:                                             ; preds = %bb26
  %59 = getelementptr inbounds %struct.saved_cwd* %saved_cwd, i32 0, i32 0
  %60 = load i32* %59, align 8
  %61 = load i32* %fd_addr, align 4
  %62 = icmp eq i32 %60, %61
  br i1 %62, label %bb28, label %bb29

bb28:                                             ; preds = %bb27
  call void @free_cwd(%struct.saved_cwd* %saved_cwd) nounwind
  %63 = call i32* @__errno_location() nounwind readnone
  store i32 9, i32* %63, align 4
  store i32 -1, i32* %0, align 4
  br label %bb42

bb29:                                             ; preds = %bb27, %bb26
  %64 = load i32* %fd_addr, align 4
  %65 = call i32 @fchdir(i32 %64) nounwind
  %66 = icmp ne i32 %65, 0
  br i1 %66, label %bb30, label %bb31

bb30:                                             ; preds = %bb29
  %67 = call i32* @__errno_location() nounwind readnone
  %68 = load i32* %67, align 4
  store i32 %68, i32* %saved_errno, align 4
  call void @free_cwd(%struct.saved_cwd* %saved_cwd) nounwind
  %69 = call i32* @__errno_location() nounwind readnone
  %70 = load i32* %saved_errno, align 4
  store i32 %70, i32* %69, align 4
  store i32 -1, i32* %0, align 4
  br label %bb42

bb31:                                             ; preds = %bb29
  %71 = load i32* %flag_addr, align 4
  %72 = icmp eq i32 %71, 256
  %73 = load i8** %file_addr, align 8
  %74 = load %struct.timespec** %ts_addr, align 8
  br i1 %72, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  %75 = call i32 @lutimens(i8* %73, %struct.timespec* %74) nounwind
  store i32 %75, i32* %iftmp.8, align 4
  br label %bb34

bb33:                                             ; preds = %bb31
  %76 = call i32 @utimens(i8* %73, %struct.timespec* %74) nounwind
  store i32 %76, i32* %iftmp.8, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32
  %77 = load i32* %iftmp.8, align 4
  store i32 %77, i32* %err, align 4
  %78 = load i32* %err, align 4
  %79 = icmp eq i32 %78, -1
  br i1 %79, label %bb35, label %bb36

bb35:                                             ; preds = %bb34
  %80 = call i32* @__errno_location() nounwind readnone
  %81 = load i32* %80, align 4
  store i32 %81, i32* %iftmp.9, align 4
  br label %bb37

bb36:                                             ; preds = %bb34
  store i32 0, i32* %iftmp.9, align 4
  br label %bb37

bb37:                                             ; preds = %bb36, %bb35
  %82 = load i32* %iftmp.9, align 4
  store i32 %82, i32* %saved_errno, align 4
  %83 = call i32 @restore_cwd(%struct.saved_cwd* %saved_cwd) nounwind
  %84 = icmp ne i32 %83, 0
  br i1 %84, label %bb38, label %bb39

bb38:                                             ; preds = %bb37
  %85 = call i32* @__errno_location() nounwind readnone
  %86 = load i32* %85, align 4
  call void @openat_restore_fail(i32 %86) noreturn nounwind
  unreachable

bb39:                                             ; preds = %bb37
  call void @free_cwd(%struct.saved_cwd* %saved_cwd) nounwind
  %87 = load i32* %saved_errno, align 4
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  %89 = call i32* @__errno_location() nounwind readnone
  %90 = load i32* %saved_errno, align 4
  store i32 %90, i32* %89, align 4
  br label %bb41

bb41:                                             ; preds = %bb40, %bb39
  %91 = load i32* %err, align 4
  store i32 %91, i32* %0, align 4
  br label %bb42

bb42:                                             ; preds = %bb41, %bb30, %bb28, %bb23, %bb16, %bb6, %bb
  %92 = load i32* %0, align 4
  store i32 %92, i32* %retval, align 4
  %retval43 = load i32* %retval
  ret i32 %retval43
}

define i32 @get_permissions(i8* %name, i32 %desc, i32 %mode, %struct.cd_buf* %ctx) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %ctx_addr = alloca %struct.cd_buf*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %desc, i32* %desc_addr
  store i32 %mode, i32* %mode_addr
  store %struct.cd_buf* %ctx, %struct.cd_buf** %ctx_addr
  %1 = load %struct.cd_buf** %ctx_addr, align 8
  %2 = bitcast %struct.cd_buf* %1 to i8*
  %3 = call i8* @memset(i8* %2, i32 0, i64 4)
  %4 = load %struct.cd_buf** %ctx_addr, align 8
  %5 = getelementptr inbounds %struct.cd_buf* %4, i32 0, i32 0
  %6 = load i32* %mode_addr, align 4
  store i32 %6, i32* %5, align 4
  store i32 0, i32* %0, align 4
  %7 = load i32* %0, align 4
  store i32 %7, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @chmod_or_fchmod(i8* %name, i32 %desc, i32 %mode) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %desc_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  store i32 %desc, i32* %desc_addr
  store i32 %mode, i32* %mode_addr
  %1 = load i32* %desc_addr, align 4
  %2 = icmp ne i32 %1, -1
  br i1 %2, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = load i32* %desc_addr, align 4
  %4 = load i32* %mode_addr, align 4
  %5 = call i32 @fchmod(i32 %3, i32 %4) nounwind
  store i32 %5, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %6 = load i8** %name_addr, align 8
  %7 = load i32* %mode_addr, align 4
  %8 = call i32 @chmod(i8* %6, i32 %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_permissions(%struct.cd_buf* %ctx, i8* %name, i32 %desc) nounwind {
entry:
  %ctx_addr = alloca %struct.cd_buf*, align 8
  %name_addr = alloca i8*, align 8
  %desc_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %acls_set = alloca i8
  %early_chmod = alloca i8
  %must_chmod = alloca i8
  %ret = alloca i32
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %ctx, %struct.cd_buf** %ctx_addr
  store i8* %name, i8** %name_addr
  store i32 %desc, i32* %desc_addr
  store i8 0, i8* %acls_set, align 1
  store i8 0, i8* %must_chmod, align 1
  store i32 0, i32* %ret, align 4
  store i8 1, i8* %early_chmod, align 1
  %1 = load i8* %early_chmod, align 1
  %toBool = icmp ne i8 %1, 0
  br i1 %toBool, label %bb, label %bb2

bb:                                               ; preds = %entry
  %2 = load %struct.cd_buf** %ctx_addr, align 8
  %3 = getelementptr inbounds %struct.cd_buf* %2, i32 0, i32 0
  %4 = load i32* %3, align 4
  %5 = load i8** %name_addr, align 8
  %6 = load i32* %desc_addr, align 4
  %7 = call i32 @chmod_or_fchmod(i8* %5, i32 %6, i32 %4) nounwind
  store i32 %7, i32* %ret, align 4
  %8 = load i32* %ret, align 4
  %9 = icmp ne i32 %8, 0
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4
  br label %bb15

bb2:                                              ; preds = %bb, %entry
  %10 = load i8* %must_chmod, align 1
  %toBool3 = icmp ne i8 %10, 0
  br i1 %toBool3, label %bb4, label %bb14

bb4:                                              ; preds = %bb2
  %11 = load i8* %early_chmod, align 1
  %toBool5 = icmp ne i8 %11, 0
  %toBool5not = xor i1 %toBool5, true
  %toBool5not6 = zext i1 %toBool5not to i8
  %toBool8 = icmp ne i8 %toBool5not6, 0
  br i1 %toBool8, label %bb9, label %bb14

bb9:                                              ; preds = %bb4
  %12 = load i32* %ret, align 4
  %13 = icmp ne i32 %12, 0
  br i1 %13, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %14 = call i32* @__errno_location() nounwind readnone
  %15 = load i32* %14, align 4
  store i32 %15, i32* %iftmp.0, align 4
  br label %bb12

bb11:                                             ; preds = %bb9
  store i32 0, i32* %iftmp.0, align 4
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %16 = load i32* %iftmp.0, align 4
  store i32 %16, i32* %saved_errno, align 4
  %17 = load %struct.cd_buf** %ctx_addr, align 8
  %18 = getelementptr inbounds %struct.cd_buf* %17, i32 0, i32 0
  %19 = load i32* %18, align 4
  %20 = load i8** %name_addr, align 8
  %21 = load i32* %desc_addr, align 4
  %22 = call i32 @chmod_or_fchmod(i8* %20, i32 %21, i32 %19) nounwind
  store i32 %22, i32* %ret, align 4
  %23 = load i32* %saved_errno, align 4
  %24 = icmp ne i32 %23, 0
  br i1 %24, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %25 = call i32* @__errno_location() nounwind readnone
  %26 = load i32* %saved_errno, align 4
  store i32 %26, i32* %25, align 4
  store i32 -1, i32* %ret, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb12, %bb4, %bb2
  %27 = load i32* %ret, align 4
  store i32 %27, i32* %0, align 4
  br label %bb15

bb15:                                             ; preds = %bb14, %bb1
  %28 = load i32* %0, align 4
  store i32 %28, i32* %retval, align 4
  %retval16 = load i32* %retval
  ret i32 %retval16
}

define i64 @rotl64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr64(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i32 @rotl32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i32 @rotr32(i32 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i32, align 4
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %x, i32* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i32* %x_addr, align 4
  %2 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %2 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i32 %1, %2
  %5 = sub i32 32, %2
  %int_cast_to_i641 = zext i32 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i32 %1, %5
  %8 = or i32 %4, %7
  store i32 %8, i32* %0, align 4
  %9 = load i32* %0, align 4
  store i32 %9, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i64 @rotl_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = shl i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = lshr i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @rotr_sz(i64 %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i64, align 8
  %n_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %x, i64* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i64* %x_addr, align 8
  %2 = load i32* %n_addr, align 4
  %.cast = zext i32 %2 to i64
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %4 = lshr i64 %1, %.cast
  %5 = sub i64 64, %.cast
  %int_cast_to_i641 = bitcast i64 %5 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %7 = shl i64 %1, %5
  %8 = or i64 %4, %7
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define zeroext i16 @rotl16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i16 @rotr16(i16 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i16, align 2
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i16 %x, i16* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i16* %x_addr, align 2
  %2 = zext i16 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i16
  %7 = load i16* %x_addr, align 2
  %8 = zext i16 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 16, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i16
  %14 = or i16 %6, %13
  %15 = zext i16 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i16
  ret i16 %retval12
}

define zeroext i8 @rotl8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = ashr i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define zeroext i8 @rotr8(i8 zeroext %x, i32 %n) nounwind inlinehint {
entry:
  %x_addr = alloca i8, align 1
  %n_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %x, i8* %x_addr
  store i32 %n, i32* %n_addr
  %1 = load i8* %x_addr, align 1
  %2 = zext i8 %1 to i32
  %3 = load i32* %n_addr, align 4
  %int_cast_to_i64 = zext i32 %3 to i64
  %4 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %4, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = ashr i32 %2, %3
  %6 = trunc i32 %5 to i8
  %7 = load i8* %x_addr, align 1
  %8 = zext i8 %7 to i32
  %9 = load i32* %n_addr, align 4
  %10 = sub nsw i32 8, %9
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = shl i32 %8, %10
  %13 = trunc i32 %12 to i8
  %14 = or i8 %6, %13
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i32 @c_strcasecmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %iftmp.2 = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %p1 = alloca i8*
  %p2 = alloca i8*
  %c1 = alloca i8
  %c2 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8
  store i8* %1, i8** %p1, align 8
  %2 = load i8** %s2_addr, align 8
  store i8* %2, i8** %p2, align 8
  %3 = load i8** %p1, align 8
  %4 = load i8** %p2, align 8
  %5 = icmp eq i8* %3, %4
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb4

bb1:                                              ; preds = %bb2, %entry
  %6 = load i8** %p1, align 8
  %7 = load i8* %6, align 1
  %8 = zext i8 %7 to i32
  %9 = call i32 @c_tolower(i32 %8) nounwind
  %10 = trunc i32 %9 to i8
  store i8 %10, i8* %c1, align 1
  %11 = load i8** %p2, align 8
  %12 = load i8* %11, align 1
  %13 = zext i8 %12 to i32
  %14 = call i32 @c_tolower(i32 %13) nounwind
  %15 = trunc i32 %14 to i8
  store i8 %15, i8* %c2, align 1
  %16 = load i8* %c1, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %18 = load i8** %p1, align 8
  %19 = getelementptr inbounds i8* %18, i64 1
  store i8* %19, i8** %p1, align 8
  %20 = load i8** %p2, align 8
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %p2, align 8
  %22 = load i8* %c1, align 1
  %23 = load i8* %c2, align 1
  %24 = icmp eq i8 %22, %23
  br i1 %24, label %bb1, label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %25 = load i8* %c1, align 1
  %26 = zext i8 %25 to i32
  %27 = load i8* %c2, align 1
  %28 = zext i8 %27 to i32
  %29 = sub nsw i32 %26, %28
  store i32 %29, i32* %0, align 4
  br label %bb4

bb4:                                              ; preds = %bb3, %bb
  %30 = load i32* %0, align 4
  store i32 %30, i32* %retval, align 4
  %retval5 = load i32* %retval
  ret i32 %retval5
}

define i32 @close_stream(%struct.FILE* %stream) nounwind {
entry:
  %stream_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %some_pending = alloca i8
  %prev_fail = alloca i8
  %fclose_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %stream, %struct.FILE** %stream_addr
  %1 = load %struct.FILE** %stream_addr, align 8
  %2 = call i64 bitcast (i64 (%4*)* @__fpending to i64 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  %3 = icmp ne i64 %2, 0
  %4 = zext i1 %3 to i8
  store i8 %4, i8* %some_pending, align 1
  %5 = load %struct.FILE** %stream_addr, align 8
  %6 = call i32 bitcast (i32 (%4*)* @ferror_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %7 = icmp ne i32 %6, 0
  %8 = zext i1 %7 to i8
  store i8 %8, i8* %prev_fail, align 1
  %9 = load %struct.FILE** %stream_addr, align 8
  %10 = call i32 @rpl_fclose(%struct.FILE* %9) nounwind
  %11 = icmp ne i32 %10, 0
  %12 = zext i1 %11 to i8
  store i8 %12, i8* %fclose_fail, align 1
  %13 = load i8* %prev_fail, align 1
  %toBool = icmp ne i8 %13, 0
  br i1 %toBool, label %bb8, label %bb

bb:                                               ; preds = %entry
  %14 = load i8* %fclose_fail, align 1
  %toBool1 = icmp ne i8 %14, 0
  %toBool1not = xor i1 %toBool1, true
  %toBool1not2 = zext i1 %toBool1not to i8
  %toBool4 = icmp ne i8 %toBool1not2, 0
  br i1 %toBool4, label %bb15, label %bb5

bb5:                                              ; preds = %bb
  %15 = load i8* %some_pending, align 1
  %toBool6 = icmp ne i8 %15, 0
  br i1 %toBool6, label %bb8, label %bb7

bb7:                                              ; preds = %bb5
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  %18 = icmp ne i32 %17, 9
  br i1 %18, label %bb8, label %bb15

bb8:                                              ; preds = %bb7, %bb5, %entry
  %19 = load i8* %fclose_fail, align 1
  %toBool9 = icmp ne i8 %19, 0
  %toBool9not = xor i1 %toBool9, true
  %toBool9not10 = zext i1 %toBool9not to i8
  %toBool12 = icmp ne i8 %toBool9not10, 0
  br i1 %toBool12, label %bb13, label %bb14

bb13:                                             ; preds = %bb8
  %20 = call i32* @__errno_location() nounwind readnone
  store i32 0, i32* %20, align 4
  br label %bb14

bb14:                                             ; preds = %bb13, %bb8
  store i32 -1, i32* %0, align 4
  br label %bb16

bb15:                                             ; preds = %bb7, %bb
  store i32 0, i32* %0, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %21 = load i32* %0, align 4
  store i32 %21, i32* %retval, align 4
  %retval17 = load i32* %retval
  ret i32 %retval17
}

define void @gettime(%struct.timespec* %ts) nounwind {
entry:
  %ts_addr = alloca %struct.timespec*, align 8
  %tv = alloca %struct.timespec
  %"alloca point" = bitcast i32 0 to i32
  store %struct.timespec* %ts, %struct.timespec** %ts_addr
  %0 = load %struct.timespec** %ts_addr, align 8
  %1 = call i32 @clock_gettime(i32 0, %struct.timespec* %0) nounwind
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %return, label %bb

bb:                                               ; preds = %entry
  %3 = call i32 @gettimeofday(%struct.timespec* noalias %tv, %struct.__mbstate_t* noalias null) nounwind
  %4 = getelementptr inbounds %struct.timespec* %tv, i32 0, i32 0
  %5 = load i64* %4, align 8
  %6 = load %struct.timespec** %ts_addr, align 8
  %7 = getelementptr inbounds %struct.timespec* %6, i32 0, i32 0
  store i64 %5, i64* %7, align 8
  %8 = getelementptr inbounds %struct.timespec* %tv, i32 0, i32 1
  %9 = load i64* %8, align 8
  %10 = mul nsw i64 %9, 1000
  %11 = load %struct.timespec** %ts_addr, align 8
  %12 = getelementptr inbounds %struct.timespec* %11, i32 0, i32 1
  store i64 %10, i64* %12, align 8
  br label %return

return:                                           ; preds = %entry, %bb
  ret void
}

declare i32 @gettimeofday(%struct.timespec* noalias, %struct.__mbstate_t* noalias) nounwind

define zeroext i8 @hard_locale(i32 %category) nounwind {
entry:
  %category_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %hard = alloca i8
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %category, i32* %category_addr
  store i8 1, i8* %hard, align 1
  %1 = load i32* %category_addr, align 4
  %2 = call i8* @setlocale(i32 %1, i8* null) nounwind
  store i8* %2, i8** %p, align 8
  %3 = load i8** %p, align 8
  %4 = icmp ne i8* %3, null
  br i1 %4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %5 = load i8** %p, align 8
  %6 = call i32 @strcmp(i8* %5, i8* getelementptr inbounds ([2 x i8]* @.str391, i64 0, i64 0)) nounwind readonly
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %8 = load i8** %p, align 8
  %9 = call i32 @strcmp(i8* %8, i8* getelementptr inbounds ([6 x i8]* @.str1392, i64 0, i64 0)) nounwind readonly
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %bb2, label %bb4

bb2:                                              ; preds = %bb1, %bb
  store i8 0, i8* %hard, align 1
  br label %bb4

bb4:                                              ; preds = %bb1, %bb2, %entry
  %11 = load i8* %hard, align 1
  %12 = zext i8 %11 to i32
  store i32 %12, i32* %0, align 4
  %13 = load i32* %0, align 4
  store i32 %13, i32* %retval, align 4
  %retval5 = load i32* %retval
  %retval56 = trunc i32 %retval5 to i8
  ret i8 %retval56
}

define i64 @hash_pjw(i8* %x, i64 %tablesize) nounwind readonly {
entry:
  %x_addr = alloca i8*, align 8
  %tablesize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %h = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %x, i8** %x_addr
  store i64 %tablesize, i64* %tablesize_addr
  store i64 0, i64* %h, align 8
  %1 = load i8** %x_addr, align 8
  store i8* %1, i8** %s, align 8
  br label %bb1

bb:                                               ; preds = %bb1
  %2 = load i8** %s, align 8
  %3 = load i8* %2, align 1
  %4 = sext i8 %3 to i64
  %5 = load i64* %h, align 8
  %int_cast_to_i641 = bitcast i64 55 to i64
  %6 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %6, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %7 = lshr i64 %5, 55
  %int_cast_to_i642 = bitcast i64 9 to i64
  %8 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %8, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %9 = shl i64 %5, 9
  %10 = or i64 %7, %9
  %11 = add i64 %4, %10
  store i64 %11, i64* %h, align 8
  %12 = load i8** %s, align 8
  %13 = getelementptr inbounds i8* %12, i64 1
  store i8* %13, i8** %s, align 8
  br label %bb1

bb1:                                              ; preds = %klee_overshift_check.exit5, %entry
  %14 = load i8** %s, align 8
  %15 = load i8* %14, align 1
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %bb, label %bb2

bb2:                                              ; preds = %bb1
  %17 = load i64* %h, align 8
  %18 = load i64* %tablesize_addr, align 8
  %int_cast_to_i64 = bitcast i64 %18 to i64
  %19 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %20 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %20, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %21 = urem i64 %17, %18
  store i64 %21, i64* %0, align 8
  %22 = load i64* %0, align 8
  store i64 %22, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define internal i8* @get_charset_aliases() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.2 = alloca i32
  %cp = alloca i8*
  %dir = alloca i8*
  %base = alloca i8*
  %file_name = alloca i8*
  %dir_len = alloca i64
  %base_len = alloca i64
  %add_slash = alloca i32
  %fd = alloca i32
  %fp = alloca %struct.FILE*
  %res_ptr = alloca i8*
  %res_size = alloca i64
  %c = alloca i32
  %buf1 = alloca [51 x i8]
  %buf2 = alloca [51 x i8]
  %l1 = alloca i64
  %l2 = alloca i64
  %old_res_ptr = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = volatile load i8** @charset_aliases, align 8
  store i8* %1, i8** %cp, align 8
  %2 = load i8** %cp, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb46

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([14 x i8]* @.str395, i64 0, i64 0), i8** %base, align 8
  %4 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str1396, i64 0, i64 0)) nounwind
  store i8* %4, i8** %dir, align 8
  %5 = load i8** %dir, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %bb2, label %bb1

bb1:                                              ; preds = %bb
  %7 = load i8** %dir, align 8
  %8 = getelementptr inbounds i8* %7, i64 0
  %9 = load i8* %8, align 1
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %bb2, label %bb3

bb2:                                              ; preds = %bb1, %bb
  store i8* getelementptr inbounds ([15 x i8]* @.str2397, i64 0, i64 0), i8** %dir, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %dir, align 8
  %12 = call i64 @strlen(i8* %11) nounwind readonly
  store i64 %12, i64* %dir_len, align 8
  %13 = load i8** %base, align 8
  %14 = call i64 @strlen(i8* %13) nounwind readonly
  store i64 %14, i64* %base_len, align 8
  %15 = load i64* %dir_len, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %17 = load i64* %dir_len, align 8
  %18 = sub i64 %17, 1
  %19 = load i8** %dir, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = load i8* %20, align 1
  %22 = icmp eq i8 %21, 47
  br i1 %22, label %bb6, label %bb5

bb5:                                              ; preds = %bb4
  store i32 1, i32* %iftmp.2, align 4
  br label %bb7

bb6:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %iftmp.2, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %23 = load i32* %iftmp.2, align 4
  store i32 %23, i32* %add_slash, align 4
  %24 = load i32* %add_slash, align 4
  %25 = sext i32 %24 to i64
  %26 = load i64* %dir_len, align 8
  %27 = add i64 %25, %26
  %28 = load i64* %base_len, align 8
  %29 = add i64 %27, %28
  %30 = add i64 %29, 1
  %31 = call noalias i8* @malloc(i64 %30) nounwind
  store i8* %31, i8** %file_name, align 8
  %32 = load i8** %file_name, align 8
  %33 = icmp ne i8* %32, null
  br i1 %33, label %bb8, label %bb11

bb8:                                              ; preds = %bb7
  %34 = load i8** %file_name, align 8
  %35 = load i8** %dir, align 8
  %36 = load i64* %dir_len, align 8
  %37 = call i8* @memcpy(i8* %34, i8* %35, i64 %36)
  %38 = load i32* %add_slash, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %40 = load i8** %file_name, align 8
  %41 = load i64* %dir_len, align 8
  %42 = getelementptr inbounds i8* %40, i64 %41
  store i8 47, i8* %42, align 1
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %43 = load i64* %base_len, align 8
  %44 = add i64 %43, 1
  %45 = load i8** %file_name, align 8
  %46 = load i64* %dir_len, align 8
  %47 = getelementptr inbounds i8* %45, i64 %46
  %48 = load i32* %add_slash, align 4
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8* %47, i64 %49
  %51 = load i8** %base, align 8
  %52 = call i8* @memcpy(i8* %50, i8* %51, i64 %44)
  br label %bb11

bb11:                                             ; preds = %bb10, %bb7
  %53 = load i8** %file_name, align 8
  %54 = icmp eq i8* %53, null
  br i1 %54, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  store i8* getelementptr inbounds ([1 x i8]* @.str3398, i64 0, i64 0), i8** %cp, align 8
  br label %bb45

bb13:                                             ; preds = %bb11
  %55 = load i8** %file_name, align 8
  %56 = call i32 (i8*, i32, ...)* @open(i8* %55, i32 131072) nounwind
  store i32 %56, i32* %fd, align 4
  %57 = load i32* %fd, align 4
  %58 = icmp slt i32 %57, 0
  br i1 %58, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i8* getelementptr inbounds ([1 x i8]* @.str3398, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb15:                                             ; preds = %bb13
  %59 = load i32* %fd, align 4
  %60 = call %struct.FILE* bitcast (%4* (i32, i8*)* @fdopen to %struct.FILE* (i32, i8*)*)(i32 %59, i8* getelementptr inbounds ([2 x i8]* @.str4399, i64 0, i64 0)) nounwind
  store %struct.FILE* %60, %struct.FILE** %fp, align 8
  %61 = load %struct.FILE** %fp, align 8
  %62 = icmp eq %struct.FILE* %61, null
  br i1 %62, label %bb16, label %bb17

bb16:                                             ; preds = %bb15
  %63 = load i32* %fd, align 4
  %64 = call i32 @close(i32 %63) nounwind
  store i8* getelementptr inbounds ([1 x i8]* @.str3398, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb17:                                             ; preds = %bb15
  store i8* null, i8** %res_ptr, align 8
  store i64 0, i64* %res_size, align 8
  br label %bb18

bb18:                                             ; preds = %bb19, %bb37, %bb25, %bb17
  %65 = load %struct.FILE** %fp, align 8
  %66 = call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %65) nounwind
  store i32 %66, i32* %c, align 4
  %67 = load i32* %c, align 4
  %68 = icmp eq i32 %67, -1
  br i1 %68, label %bb41, label %bb19

bb19:                                             ; preds = %bb18
  %69 = load i32* %c, align 4
  %70 = icmp eq i32 %69, 10
  %71 = load i32* %c, align 4
  %72 = icmp eq i32 %71, 32
  %or.cond = or i1 %70, %72
  %73 = load i32* %c, align 4
  %74 = icmp eq i32 %73, 9
  %or.cond3 = or i1 %or.cond, %74
  br i1 %or.cond3, label %bb18, label %bb22

bb22:                                             ; preds = %bb19
  %75 = load i32* %c, align 4
  %76 = icmp eq i32 %75, 35
  br i1 %76, label %bb23, label %bb27

bb23:                                             ; preds = %bb23, %bb22
  %77 = load %struct.FILE** %fp, align 8
  %78 = call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %77) nounwind
  store i32 %78, i32* %c, align 4
  %79 = load i32* %c, align 4
  %80 = icmp ne i32 %79, -1
  %81 = load i32* %c, align 4
  %82 = icmp ne i32 %81, 10
  %or.cond5 = and i1 %80, %82
  br i1 %or.cond5, label %bb23, label %bb25

bb25:                                             ; preds = %bb23
  %83 = load i32* %c, align 4
  %84 = icmp eq i32 %83, -1
  br i1 %84, label %bb41, label %bb18

bb27:                                             ; preds = %bb22
  %85 = load i32* %c, align 4
  %86 = load %struct.FILE** %fp, align 8
  %87 = call i32 bitcast (i32 (i32, %4*)* @ungetc to i32 (i32, %struct.FILE*)*)(i32 %85, %struct.FILE* %86) nounwind
  %88 = load %struct.FILE** %fp, align 8
  %buf128 = bitcast [51 x i8]* %buf1 to i8*
  %buf229 = bitcast [51 x i8]* %buf2 to i8*
  %89 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fscanf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %88, i8* noalias getelementptr inbounds ([10 x i8]* @.str5400, i64 0, i64 0), i8* %buf128, i8* %buf229) nounwind
  %90 = icmp sle i32 %89, 1
  br i1 %90, label %bb41, label %bb30

bb30:                                             ; preds = %bb27
  %buf131 = bitcast [51 x i8]* %buf1 to i8*
  %91 = call i64 @strlen(i8* %buf131) nounwind readonly
  store i64 %91, i64* %l1, align 8
  %buf232 = bitcast [51 x i8]* %buf2 to i8*
  %92 = call i64 @strlen(i8* %buf232) nounwind readonly
  store i64 %92, i64* %l2, align 8
  %93 = load i8** %res_ptr, align 8
  store i8* %93, i8** %old_res_ptr, align 8
  %94 = load i64* %res_size, align 8
  %95 = icmp eq i64 %94, 0
  %96 = load i64* %l1, align 8
  %97 = load i64* %l2, align 8
  %98 = add i64 %96, %97
  br i1 %95, label %bb33, label %bb34

bb33:                                             ; preds = %bb30
  %99 = add i64 %98, 2
  store i64 %99, i64* %res_size, align 8
  %100 = load i64* %res_size, align 8
  %101 = add i64 %100, 1
  %102 = call noalias i8* @malloc(i64 %101) nounwind
  store i8* %102, i8** %res_ptr, align 8
  br label %bb35

bb34:                                             ; preds = %bb30
  %103 = load i64* %res_size, align 8
  %104 = add i64 %98, %103
  %105 = add i64 %104, 2
  store i64 %105, i64* %res_size, align 8
  %106 = load i64* %res_size, align 8
  %107 = add i64 %106, 1
  %108 = load i8** %res_ptr, align 8
  %109 = call i8* @realloc(i8* %108, i64 %107) nounwind
  store i8* %109, i8** %res_ptr, align 8
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %110 = load i8** %res_ptr, align 8
  %111 = icmp eq i8* %110, null
  br i1 %111, label %bb36, label %bb37

bb36:                                             ; preds = %bb35
  store i64 0, i64* %res_size, align 8
  %112 = load i8** %old_res_ptr, align 8
  call void @free(i8* %112) nounwind
  br label %bb41

bb37:                                             ; preds = %bb35
  %113 = load i8** %res_ptr, align 8
  %114 = load i64* %res_size, align 8
  %115 = getelementptr inbounds i8* %113, i64 %114
  %116 = load i64* %l2, align 8
  %117 = add i64 %116, 1
  %118 = sub nsw i64 0, %117
  %119 = getelementptr inbounds i8* %115, i64 %118
  %120 = load i64* %l1, align 8
  %121 = add i64 %120, 1
  %122 = sub nsw i64 0, %121
  %123 = getelementptr inbounds i8* %119, i64 %122
  %buf138 = bitcast [51 x i8]* %buf1 to i8*
  %124 = call i8* @strcpy(i8* noalias %123, i8* noalias %buf138) nounwind
  %125 = load i8** %res_ptr, align 8
  %126 = load i64* %res_size, align 8
  %127 = getelementptr inbounds i8* %125, i64 %126
  %128 = load i64* %l2, align 8
  %129 = add i64 %128, 1
  %130 = sub nsw i64 0, %129
  %131 = getelementptr inbounds i8* %127, i64 %130
  %buf239 = bitcast [51 x i8]* %buf2 to i8*
  %132 = call i8* @strcpy(i8* noalias %131, i8* noalias %buf239) nounwind
  br label %bb18

bb41:                                             ; preds = %bb36, %bb27, %bb25, %bb18
  %133 = load %struct.FILE** %fp, align 8
  %134 = call i32 @rpl_fclose(%struct.FILE* %133) nounwind
  %135 = load i64* %res_size, align 8
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %bb42, label %bb43

bb42:                                             ; preds = %bb41
  store i8* getelementptr inbounds ([1 x i8]* @.str3398, i64 0, i64 0), i8** %cp, align 8
  br label %bb44

bb43:                                             ; preds = %bb41
  %137 = load i8** %res_ptr, align 8
  %138 = load i64* %res_size, align 8
  %139 = getelementptr inbounds i8* %137, i64 %138
  store i8 0, i8* %139, align 1
  %140 = load i8** %res_ptr, align 8
  store i8* %140, i8** %cp, align 8
  br label %bb44

bb44:                                             ; preds = %bb43, %bb42, %bb16, %bb14
  %141 = load i8** %file_name, align 8
  call void @free(i8* %141) nounwind
  br label %bb45

bb45:                                             ; preds = %bb44, %bb12
  %142 = load i8** %cp, align 8
  volatile store i8* %142, i8** @charset_aliases, align 8
  br label %bb46

bb46:                                             ; preds = %bb45, %entry
  %143 = load i8** %cp, align 8
  store i8* %143, i8** %0, align 8
  %144 = load i8** %0, align 8
  store i8* %144, i8** %retval, align 8
  %retval47 = load i8** %retval
  ret i8* %retval47
}

define i8* @locale_charset() nounwind {
entry:
  %retval = alloca i8*
  %0 = alloca i8*
  %codeset = alloca i8*
  %aliases = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i8* @nl_langinfo(i32 14) nounwind
  store i8* %1, i8** %codeset, align 8
  %2 = load i8** %codeset, align 8
  %3 = icmp eq i8* %2, null
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([1 x i8]* @.str3398, i64 0, i64 0), i8** %codeset, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %4 = call i8* @get_charset_aliases() nounwind
  store i8* %4, i8** %aliases, align 8
  br label %bb7

bb2:                                              ; preds = %bb7
  %5 = load i8** %codeset, align 8
  %6 = load i8** %aliases, align 8
  %7 = call i32 @strcmp(i8* %5, i8* %6) nounwind readonly
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %bb5, label %bb3

bb3:                                              ; preds = %bb2
  %9 = load i8** %aliases, align 8
  %10 = getelementptr inbounds i8* %9, i64 0
  %11 = load i8* %10, align 1
  %12 = icmp ne i8 %11, 42
  br i1 %12, label %bb6, label %bb4

bb4:                                              ; preds = %bb3
  %13 = load i8** %aliases, align 8
  %14 = getelementptr inbounds i8* %13, i64 1
  %15 = load i8* %14, align 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb2
  %17 = load i8** %aliases, align 8
  %18 = call i64 @strlen(i8* %17) nounwind readonly
  %19 = load i8** %aliases, align 8
  %20 = getelementptr inbounds i8* %19, i64 %18
  %21 = getelementptr inbounds i8* %20, i64 1
  store i8* %21, i8** %codeset, align 8
  br label %bb8

bb6:                                              ; preds = %bb4, %bb3
  %22 = load i8** %aliases, align 8
  %23 = call i64 @strlen(i8* %22) nounwind readonly
  %24 = add i64 %23, 1
  %25 = load i8** %aliases, align 8
  %26 = getelementptr inbounds i8* %25, i64 %24
  store i8* %26, i8** %aliases, align 8
  %27 = load i8** %aliases, align 8
  %28 = call i64 @strlen(i8* %27) nounwind readonly
  %29 = add i64 %28, 1
  %30 = load i8** %aliases, align 8
  %31 = getelementptr inbounds i8* %30, i64 %29
  store i8* %31, i8** %aliases, align 8
  br label %bb7

bb7:                                              ; preds = %bb6, %bb1
  %32 = load i8** %aliases, align 8
  %33 = load i8* %32, align 1
  %34 = icmp ne i8 %33, 0
  br i1 %34, label %bb2, label %bb8

bb8:                                              ; preds = %bb7, %bb5
  %35 = load i8** %codeset, align 8
  %36 = getelementptr inbounds i8* %35, i64 0
  %37 = load i8* %36, align 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  store i8* getelementptr inbounds ([6 x i8]* @.str6401, i64 0, i64 0), i8** %codeset, align 8
  br label %bb10

bb10:                                             ; preds = %bb9, %bb8
  %39 = load i8** %codeset, align 8
  store i8* %39, i8** %0, align 8
  %40 = load i8** %0, align 8
  store i8* %40, i8** %retval, align 8
  %retval11 = load i8** %retval
  ret i8* %retval11
}

define void @mbiter_multi_next(%struct.mbi_iterator_t* %iter) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %iter, %struct.mbi_iterator_t** %iter_addr
  %0 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 3
  %2 = load i8* %1, align 4
  %toBool = icmp ne i8 %2, 0
  br i1 %toBool, label %return, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbi_iterator_t* %3, i32 0, i32 1
  %5 = load i8* %4, align 8
  %toBool1 = icmp ne i8 %5, 0
  br i1 %toBool1, label %with_shift, label %bb2

bb2:                                              ; preds = %bb
  %6 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbi_iterator_t* %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = trunc i32 %11 to i8
  %13 = call zeroext i8 @is_basic(i8 signext %12) nounwind
  %toBool3 = icmp ne i8 %13, 0
  %14 = load %struct.mbi_iterator_t** %iter_addr, align 8
  br i1 %toBool3, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 4
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  store i64 1, i64* %16, align 8
  %17 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %18 = getelementptr inbounds %struct.mbi_iterator_t* %17, i32 0, i32 4
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %24 = getelementptr inbounds %struct.mbi_iterator_t* %23, i32 0, i32 4
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 3
  store i32 %22, i32* %25, align 4
  %26 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbi_iterator_t* %26, i32 0, i32 4
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 2
  store i8 1, i8* %28, align 8
  br label %bb18

bb5:                                              ; preds = %bb2
  %29 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 2
  %30 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %29) nounwind readonly
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str403, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1404, i64 0, i64 0), i32 142, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3311, i64 0, i64 0)) noreturn
  unreachable

bb7:                                              ; preds = %bb5
  %32 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %33 = getelementptr inbounds %struct.mbi_iterator_t* %32, i32 0, i32 1
  store i8 1, i8* %33, align 8
  br label %with_shift

with_shift:                                       ; preds = %bb7, %bb
  %34 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %35 = getelementptr inbounds %struct.mbi_iterator_t* %34, i32 0, i32 2
  %36 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %37 = getelementptr inbounds %struct.mbi_iterator_t* %36, i32 0, i32 0
  %38 = load i8** %37, align 8
  %39 = ptrtoint i8* %38 to i64
  %40 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %41 = getelementptr inbounds %struct.mbi_iterator_t* %40, i32 0, i32 4
  %42 = getelementptr inbounds %struct.mbchar* %41, i32 0, i32 0
  %43 = load i8** %42, align 8
  %44 = ptrtoint i8* %43 to i64
  %45 = sub nsw i64 %39, %44
  %46 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %47 = getelementptr inbounds %struct.mbi_iterator_t* %46, i32 0, i32 4
  %48 = getelementptr inbounds %struct.mbchar* %47, i32 0, i32 0
  %49 = load i8** %48, align 8
  %50 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %51 = getelementptr inbounds %struct.mbi_iterator_t* %50, i32 0, i32 4
  %52 = getelementptr inbounds %struct.mbchar* %51, i32 0, i32 3
  %53 = call i64 @rpl_mbrtowc(i32* %52, i8* %49, i64 %45, %struct.mbstate_t* %35) nounwind
  %54 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %55 = getelementptr inbounds %struct.mbi_iterator_t* %54, i32 0, i32 4
  %56 = getelementptr inbounds %struct.mbchar* %55, i32 0, i32 1
  store i64 %53, i64* %56, align 8
  %57 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %58 = getelementptr inbounds %struct.mbi_iterator_t* %57, i32 0, i32 4
  %59 = getelementptr inbounds %struct.mbchar* %58, i32 0, i32 1
  %60 = load i64* %59, align 8
  %61 = icmp eq i64 %60, -1
  %62 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %63 = getelementptr inbounds %struct.mbi_iterator_t* %62, i32 0, i32 4
  %64 = getelementptr inbounds %struct.mbchar* %63, i32 0, i32 1
  br i1 %61, label %bb8, label %bb9

bb8:                                              ; preds = %with_shift
  store i64 1, i64* %64, align 8
  %65 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %66 = getelementptr inbounds %struct.mbi_iterator_t* %65, i32 0, i32 4
  %67 = getelementptr inbounds %struct.mbchar* %66, i32 0, i32 2
  store i8 0, i8* %67, align 8
  br label %bb18

bb9:                                              ; preds = %with_shift
  %68 = load i64* %64, align 8
  %69 = icmp eq i64 %68, -2
  %70 = load %struct.mbi_iterator_t** %iter_addr, align 8
  br i1 %69, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %71 = getelementptr inbounds %struct.mbi_iterator_t* %70, i32 0, i32 0
  %72 = load i8** %71, align 8
  %73 = ptrtoint i8* %72 to i64
  %74 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %75 = getelementptr inbounds %struct.mbi_iterator_t* %74, i32 0, i32 4
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 0
  %77 = load i8** %76, align 8
  %78 = ptrtoint i8* %77 to i64
  %79 = sub nsw i64 %73, %78
  %80 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %81 = getelementptr inbounds %struct.mbi_iterator_t* %80, i32 0, i32 4
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 1
  store i64 %79, i64* %82, align 8
  %83 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %84 = getelementptr inbounds %struct.mbi_iterator_t* %83, i32 0, i32 4
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 2
  store i8 0, i8* %85, align 8
  br label %bb18

bb11:                                             ; preds = %bb9
  %86 = getelementptr inbounds %struct.mbi_iterator_t* %70, i32 0, i32 4
  %87 = getelementptr inbounds %struct.mbchar* %86, i32 0, i32 1
  %88 = load i64* %87, align 8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %bb12, label %bb16

bb12:                                             ; preds = %bb11
  %90 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %91 = getelementptr inbounds %struct.mbi_iterator_t* %90, i32 0, i32 4
  %92 = getelementptr inbounds %struct.mbchar* %91, i32 0, i32 1
  store i64 1, i64* %92, align 8
  %93 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %94 = getelementptr inbounds %struct.mbi_iterator_t* %93, i32 0, i32 4
  %95 = getelementptr inbounds %struct.mbchar* %94, i32 0, i32 0
  %96 = load i8** %95, align 8
  %97 = load i8* %96, align 1
  %98 = icmp ne i8 %97, 0
  br i1 %98, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str2405, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1404, i64 0, i64 0), i32 169, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3311, i64 0, i64 0)) noretur
  unreachable

bb14:                                             ; preds = %bb12
  %99 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %100 = getelementptr inbounds %struct.mbi_iterator_t* %99, i32 0, i32 4
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 3
  %102 = load i32* %101, align 4
  %103 = icmp ne i32 %102, 0
  br i1 %103, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str3406, i64 0, i64 0), i8* getelementptr inbounds ([13 x i8]* @.str1404, i64 0, i64 0), i32 170, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.3311, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14, %bb11
  %104 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %105 = getelementptr inbounds %struct.mbi_iterator_t* %104, i32 0, i32 4
  %106 = getelementptr inbounds %struct.mbchar* %105, i32 0, i32 2
  store i8 1, i8* %106, align 8
  %107 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %108 = getelementptr inbounds %struct.mbi_iterator_t* %107, i32 0, i32 2
  %109 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %108) nounwind readonly
  %110 = icmp ne i32 %109, 0
  br i1 %110, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %111 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %112 = getelementptr inbounds %struct.mbi_iterator_t* %111, i32 0, i32 1
  store i8 0, i8* %112, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb10, %bb8, %bb4
  %113 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %114 = getelementptr inbounds %struct.mbi_iterator_t* %113, i32 0, i32 3
  store i8 1, i8* %114, align 4
  br label %return

return:                                           ; preds = %entry, %bb18
  ret void
}

define void @mbiter_multi_reloc(%struct.mbi_iterator_t* %iter, i64 %ptrdiff) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %ptrdiff_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %iter, %struct.mbi_iterator_t** %iter_addr
  store i64 %ptrdiff, i64* %ptrdiff_addr
  %0 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 4
  %2 = getelementptr inbounds %struct.mbchar* %1, i32 0, i32 0
  %3 = load i8** %2, align 8
  %4 = load i64* %ptrdiff_addr, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  %6 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbi_iterator_t* %6, i32 0, i32 4
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  %9 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %10 = getelementptr inbounds %struct.mbi_iterator_t* %9, i32 0, i32 0
  %11 = load i8** %10, align 8
  %12 = load i64* %ptrdiff_addr, align 8
  %13 = getelementptr inbounds i8* %11, i64 %12
  %14 = load %struct.mbi_iterator_t** %iter_addr, align 8
  %15 = getelementptr inbounds %struct.mbi_iterator_t* %14, i32 0, i32 0
  store i8* %13, i8** %15, align 8
  ret void
}

define void @mbiter_multi_copy(%struct.mbi_iterator_t* %new_iter, %struct.mbi_iterator_t* %old_iter) nounwind inlinehint {
entry:
  %new_iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %old_iter_addr = alloca %struct.mbi_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbi_iterator_t* %new_iter, %struct.mbi_iterator_t** %new_iter_addr
  store %struct.mbi_iterator_t* %old_iter, %struct.mbi_iterator_t** %old_iter_addr
  %0 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbi_iterator_t* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  %3 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbi_iterator_t* %3, i32 0, i32 0
  store i8* %2, i8** %4, align 8
  %5 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %6 = getelementptr inbounds %struct.mbi_iterator_t* %5, i32 0, i32 1
  %7 = load i8* %6, align 8
  %8 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %9 = getelementptr inbounds %struct.mbi_iterator_t* %8, i32 0, i32 1
  store i8 %7, i8* %9, align 8
  %10 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %11 = getelementptr inbounds %struct.mbi_iterator_t* %10, i32 0, i32 1
  %12 = load i8* %11, align 8
  %toBool = icmp ne i8 %12, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %13 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %14 = getelementptr inbounds %struct.mbi_iterator_t* %13, i32 0, i32 2
  %15 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %16 = getelementptr inbounds %struct.mbi_iterator_t* %15, i32 0, i32 2
  %17 = bitcast %struct.mbstate_t* %16 to i8*
  %18 = bitcast %struct.mbstate_t* %14 to i8*
  %19 = call i8* @memcpy(i8* %17, i8* %18, i64 8)
  br label %bb2

bb1:                                              ; preds = %entry
  %20 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %21 = getelementptr inbounds %struct.mbi_iterator_t* %20, i32 0, i32 2
  %22 = bitcast %struct.mbstate_t* %21 to i8*
  %23 = call i8* @memset(i8* %22, i32 0, i64 8)
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %24 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %25 = getelementptr inbounds %struct.mbi_iterator_t* %24, i32 0, i32 3
  %26 = load i8* %25, align 4
  %27 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %28 = getelementptr inbounds %struct.mbi_iterator_t* %27, i32 0, i32 3
  store i8 %26, i8* %28, align 4
  %29 = load %struct.mbi_iterator_t** %old_iter_addr, align 8
  %30 = getelementptr inbounds %struct.mbi_iterator_t* %29, i32 0, i32 4
  %31 = load %struct.mbi_iterator_t** %new_iter_addr, align 8
  %32 = getelementptr inbounds %struct.mbi_iterator_t* %31, i32 0, i32 4
  call void @mb_copy(%struct.mbchar* %32, %struct.mbchar* %30) nounwind
  ret void
}

define internal zeroext i8 @knuth_morris_pratt(i8* %haystack, i8* %needle, i64 %needle_len, i8** %resultp) nounwind {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %needle_len_addr = alloca i64, align 8
  %resultp_addr = alloca i8**, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.5 = alloca i64*
  %iftmp.4 = alloca i64*
  %m = alloca i64
  %table = alloca i64*
  %i = alloca i64
  %j = alloca i64
  %b = alloca i8
  %j17 = alloca i64
  %rhaystack = alloca i8*
  %phaystack = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  store i64 %needle_len, i64* %needle_len_addr
  store i8** %resultp, i8*** %resultp_addr
  %1 = load i64* %needle_len_addr, align 8
  store i64 %1, i64* %m, align 8
  %2 = load i64* %m, align 8
  %3 = icmp ule i64 %2, 2305843009213693951
  br i1 %3, label %bb, label %bb4

bb:                                               ; preds = %entry
  %4 = load i64* %m, align 8
  %5 = mul i64 %4, 8
  %6 = icmp ule i64 %5, 4015
  %7 = load i64* %m, align 8
  %8 = mul i64 %7, 8
  br i1 %6, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %9 = add i64 %8, 16
  %10 = alloca i8, i64 %9, align 1
  %11 = getelementptr inbounds i8* %10, i64 16
  %12 = bitcast i8* %11 to i64*
  store i64* %12, i64** %iftmp.5, align 8
  br label %bb3

bb2:                                              ; preds = %bb
  %13 = call i8* @mmalloca(i64 %8) nounwind
  %14 = bitcast i8* %13 to i64*
  store i64* %14, i64** %iftmp.5, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %15 = load i64** %iftmp.5, align 8
  store i64* %15, i64** %iftmp.4, align 8
  br label %bb5

bb4:                                              ; preds = %entry
  store i64* null, i64** %iftmp.4, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %16 = load i64** %iftmp.4, align 8
  store i64* %16, i64** %table, align 8
  %17 = load i64** %table, align 8
  %18 = icmp eq i64* %17, null
  br i1 %18, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 0, i32* %0, align 4
  br label %bb27

bb7:                                              ; preds = %bb5
  %19 = load i64** %table, align 8
  %20 = getelementptr inbounds i64* %19, i64 1
  store i64 1, i64* %20, align 1
  store i64 0, i64* %j, align 8
  store i64 2, i64* %i, align 8
  br label %bb15

bb8:                                              ; preds = %bb15
  %21 = load i64* %i, align 8
  %22 = sub i64 %21, 1
  %23 = load i8** %needle_addr, align 8
  %24 = getelementptr inbounds i8* %23, i64 %22
  %25 = load i8* %24, align 1
  store i8 %25, i8* %b, align 1
  br label %bb9

bb9:                                              ; preds = %bb13, %bb8
  %26 = load i8** %needle_addr, align 8
  %27 = load i64* %j, align 8
  %28 = getelementptr inbounds i8* %26, i64 %27
  %29 = load i8* %28, align 1
  %30 = load i8* %b, align 1
  %31 = icmp eq i8 %29, %30
  %32 = load i64* %j, align 8
  br i1 %31, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %33 = add i64 %32, 1
  store i64 %33, i64* %j, align 8
  %34 = load i64* %i, align 8
  %35 = load i64* %j, align 8
  %36 = sub i64 %34, %35
  %37 = load i64** %table, align 8
  %38 = load i64* %i, align 8
  %39 = getelementptr inbounds i64* %37, i64 %38
  store i64 %36, i64* %39, align 1
  br label %bb14

bb11:                                             ; preds = %bb9
  %40 = icmp eq i64 %32, 0
  %41 = load i64** %table, align 8
  br i1 %40, label %bb12, label %bb13

bb12:                                             ; preds = %bb11
  %42 = load i64* %i, align 8
  %43 = getelementptr inbounds i64* %41, i64 %42
  %44 = load i64* %i, align 8
  store i64 %44, i64* %43, align 1
  br label %bb14

bb13:                                             ; preds = %bb11
  %45 = load i64* %j, align 8
  %46 = getelementptr inbounds i64* %41, i64 %45
  %47 = load i64* %46, align 1
  %48 = load i64* %j, align 8
  %49 = sub i64 %48, %47
  store i64 %49, i64* %j, align 8
  br label %bb9

bb14:                                             ; preds = %bb12, %bb10
  %50 = load i64* %i, align 8
  %51 = add i64 %50, 1
  store i64 %51, i64* %i, align 8
  br label %bb15

bb15:                                             ; preds = %bb14, %bb7
  %52 = load i64* %i, align 8
  %53 = load i64* %m, align 8
  %54 = icmp ult i64 %52, %53
  br i1 %54, label %bb8, label %bb16

bb16:                                             ; preds = %bb15
  %55 = load i8*** %resultp_addr, align 8
  store i8* null, i8** %55, align 8
  store i64 0, i64* %j17, align 8
  %56 = load i8** %haystack_addr, align 8
  store i8* %56, i8** %rhaystack, align 8
  %57 = load i8** %haystack_addr, align 8
  store i8* %57, i8** %phaystack, align 8
  br label %bb25

bb18:                                             ; preds = %bb25
  %58 = load i8** %needle_addr, align 8
  %59 = load i64* %j17, align 8
  %60 = getelementptr inbounds i8* %58, i64 %59
  %61 = load i8* %60, align 1
  %62 = load i8** %phaystack, align 8
  %63 = load i8* %62, align 1
  %64 = icmp eq i8 %61, %63
  %65 = load i64* %j17, align 8
  br i1 %64, label %bb19, label %bb22

bb19:                                             ; preds = %bb18
  %66 = add i64 %65, 1
  store i64 %66, i64* %j17, align 8
  %67 = load i8** %phaystack, align 8
  %68 = getelementptr inbounds i8* %67, i64 1
  store i8* %68, i8** %phaystack, align 8
  %69 = load i64* %j17, align 8
  %70 = load i64* %m, align 8
  %71 = icmp eq i64 %69, %70
  br i1 %71, label %bb20, label %bb25

bb20:                                             ; preds = %bb19
  %72 = load i8*** %resultp_addr, align 8
  %73 = load i8** %rhaystack, align 8
  store i8* %73, i8** %72, align 8
  br label %bb26

bb22:                                             ; preds = %bb18
  %74 = icmp ne i64 %65, 0
  br i1 %74, label %bb23, label %bb24

bb23:                                             ; preds = %bb22
  %75 = load i64** %table, align 8
  %76 = load i64* %j17, align 8
  %77 = getelementptr inbounds i64* %75, i64 %76
  %78 = load i64* %77, align 1
  %79 = load i8** %rhaystack, align 8
  %80 = getelementptr inbounds i8* %79, i64 %78
  store i8* %80, i8** %rhaystack, align 8
  %81 = load i64** %table, align 8
  %82 = load i64* %j17, align 8
  %83 = getelementptr inbounds i64* %81, i64 %82
  %84 = load i64* %83, align 1
  %85 = load i64* %j17, align 8
  %86 = sub i64 %85, %84
  store i64 %86, i64* %j17, align 8
  br label %bb25

bb24:                                             ; preds = %bb22
  %87 = load i8** %rhaystack, align 8
  %88 = getelementptr inbounds i8* %87, i64 1
  store i8* %88, i8** %rhaystack, align 8
  %89 = load i8** %phaystack, align 8
  %90 = getelementptr inbounds i8* %89, i64 1
  store i8* %90, i8** %phaystack, align 8
  br label %bb25

bb25:                                             ; preds = %bb19, %bb24, %bb23, %bb16
  %91 = load i8** %phaystack, align 8
  %92 = load i8* %91, align 1
  %93 = icmp ne i8 %92, 0
  br i1 %93, label %bb18, label %bb26

bb26:                                             ; preds = %bb25, %bb20
  %94 = load i64** %table, align 8
  %95 = bitcast i64* %94 to i8*
  call void @freea(i8* %95) nounwind
  store i32 1, i32* %0, align 4
  br label %bb27

bb27:                                             ; preds = %bb26, %bb6
  %96 = load i32* %0, align 4
  store i32 %96, i32* %retval, align 4
  %retval28 = load i32* %retval
  %retval2829 = trunc i32 %retval28 to i8
  ret i8 %retval2829
}

define internal zeroext i8 @knuth_morris_pratt_multibyte(i8* %haystack, i8* %needle, i8** %resultp) nounwind {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i32
  %iftmp.11 = alloca i8
  %iftmp.10 = alloca i32
  %iftmp.9 = alloca i8
  %iftmp.8 = alloca i32
  %0 = alloca i32
  %iftmp.7 = alloca i8*
  %iftmp.6 = alloca i8*
  %m = alloca i64
  %needle_mbchars = alloca %struct.mbchar*
  %table = alloca i64*
  %memory = alloca i8*
  %table_memory = alloca i8*
  %iter = alloca %struct.mbui_iterator_t
  %j = alloca i64
  %i = alloca i64
  %j18 = alloca i64
  %b = alloca %struct.mbchar*
  %j45 = alloca i64
  %rhaystack = alloca %struct.mbui_iterator_t
  %phaystack = alloca %struct.mbui_iterator_t
  %count = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  store i8** %resultp, i8*** %resultp_addr
  %1 = load i8** %needle_addr, align 8
  %2 = call i64 @mbslen(i8* %1) nounwind readonly
  store i64 %2, i64* %m, align 8
  %3 = load i64* %m, align 8
  %4 = icmp ule i64 %3, 329406144173384850
  br i1 %4, label %bb, label %bb4

bb:                                               ; preds = %entry
  %5 = load i64* %m, align 8
  %6 = mul i64 %5, 56
  %7 = icmp ule i64 %6, 4015
  %8 = load i64* %m, align 8
  %9 = mul i64 %8, 56
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = add i64 %9, 16
  %11 = alloca i8, i64 %10, align 1
  %12 = getelementptr inbounds i8* %11, i64 16
  store i8* %12, i8** %iftmp.7, align 8
  br label %bb3

bb2:                                              ; preds = %bb
  %13 = call i8* @mmalloca(i64 %9) nounwind
  store i8* %13, i8** %iftmp.7, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %14 = load i8** %iftmp.7, align 8
  store i8* %14, i8** %iftmp.6, align 8
  br label %bb5

bb4:                                              ; preds = %entry
  store i8* null, i8** %iftmp.6, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %15 = load i8** %iftmp.6, align 8
  store i8* %15, i8** %memory, align 8
  %16 = load i8** %memory, align 8
  %17 = icmp eq i8* %16, null
  br i1 %17, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  store i32 0, i32* %0, align 4
  br label %bb103

bb7:                                              ; preds = %bb5
  %18 = load i8** %memory, align 8
  %19 = bitcast i8* %18 to %struct.mbchar*
  store %struct.mbchar* %19, %struct.mbchar** %needle_mbchars, align 8
  %20 = load %struct.mbchar** %needle_mbchars, align 8
  %21 = load i64* %m, align 8
  %22 = getelementptr inbounds %struct.mbchar* %20, i64 %21
  %23 = bitcast %struct.mbchar* %22 to i8*
  store i8* %23, i8** %table_memory, align 8
  %24 = load i8** %table_memory, align 8
  %25 = bitcast i8* %24 to i64*
  store i64* %25, i64** %table, align 8
  store i64 0, i64* %j, align 8
  %26 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 0
  %28 = load i8** %needle_addr, align 8
  store i8* %28, i8** %27, align 8
  %29 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 0
  store i8 0, i8* %29, align 8
  %30 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 1
  %31 = bitcast %struct.mbstate_t* %30 to i8*
  %32 = call i8* @memset(i8* %31, i32 0, i64 8)
  %33 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %33, align 4
  br label %bb9

bb8:                                              ; preds = %bb16
  %34 = load %struct.mbchar** %needle_mbchars, align 8
  %35 = load i64* %j, align 8
  %36 = getelementptr inbounds %struct.mbchar* %34, i64 %35
  %37 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  call void @mb_copy(%struct.mbchar* %36, %struct.mbchar* %37) nounwind
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 0
  %40 = load i8** %39, align 8
  %41 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %42 = getelementptr inbounds %struct.mbchar* %41, i32 0, i32 1
  %43 = load i64* %42, align 8
  %44 = getelementptr inbounds i8* %40, i64 %43
  %45 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %46 = getelementptr inbounds %struct.mbchar* %45, i32 0, i32 0
  store i8* %44, i8** %46, align 8
  %47 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %47, align 4
  %48 = load i64* %j, align 8
  %49 = add i64 %48, 1
  store i64 %49, i64* %j, align 8
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind
  %50 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %51 = getelementptr inbounds %struct.mbchar* %50, i32 0, i32 2
  %52 = load i8* %51, align 8
  %toBool = icmp ne i8 %52, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot10 = zext i1 %toBoolnot to i8
  %toBool12 = icmp ne i8 %toBoolnot10, 0
  br i1 %toBool12, label %bb14, label %bb13

bb13:                                             ; preds = %bb9
  %53 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %54 = getelementptr inbounds %struct.mbchar* %53, i32 0, i32 3
  %55 = load i32* %54, align 4
  %56 = icmp ne i32 %55, 0
  br i1 %56, label %bb14, label %bb15

bb14:                                             ; preds = %bb13, %bb9
  store i32 1, i32* %iftmp.8, align 4
  br label %bb16

bb15:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.8, align 4
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14
  %57 = load i32* %iftmp.8, align 4
  %58 = icmp ne i32 %57, 0
  br i1 %58, label %bb8, label %bb17

bb17:                                             ; preds = %bb16
  %59 = load i64** %table, align 8
  %60 = getelementptr inbounds i64* %59, i64 1
  store i64 1, i64* %60, align 1
  store i64 0, i64* %j18, align 8
  store i64 2, i64* %i, align 8
  br label %bb43

bb19:                                             ; preds = %bb43
  %61 = load i64* %i, align 8
  %62 = sub i64 %61, 1
  %63 = load %struct.mbchar** %needle_mbchars, align 8
  %64 = getelementptr inbounds %struct.mbchar* %63, i64 %62
  store %struct.mbchar* %64, %struct.mbchar** %b, align 8
  br label %bb20

bb20:                                             ; preds = %bb41, %bb19
  %65 = load %struct.mbchar** %b, align 8
  %66 = getelementptr inbounds %struct.mbchar* %65, i32 0, i32 2
  %67 = load i8* %66, align 8
  %toBool21 = icmp ne i8 %67, 0
  %toBool21not = xor i1 %toBool21, true
  %toBool21not22 = zext i1 %toBool21not to i8
  %toBool24 = icmp ne i8 %toBool21not22, 0
  br i1 %toBool24, label %bb31, label %bb25

bb25:                                             ; preds = %bb20
  %68 = load %struct.mbchar** %needle_mbchars, align 8
  %69 = load i64* %j18, align 8
  %70 = getelementptr inbounds %struct.mbchar* %68, i64 %69
  %71 = getelementptr inbounds %struct.mbchar* %70, i32 0, i32 2
  %72 = load i8* %71, align 8
  %toBool26 = icmp ne i8 %72, 0
  %toBool26not = xor i1 %toBool26, true
  %toBool26not27 = zext i1 %toBool26not to i8
  %toBool29 = icmp ne i8 %toBool26not27, 0
  br i1 %toBool29, label %bb31, label %bb30

bb30:                                             ; preds = %bb25
  %73 = load %struct.mbchar** %b, align 8
  %74 = getelementptr inbounds %struct.mbchar* %73, i32 0, i32 3
  %75 = load i32* %74, align 4
  %76 = load %struct.mbchar** %needle_mbchars, align 8
  %77 = load i64* %j18, align 8
  %78 = getelementptr inbounds %struct.mbchar* %76, i64 %77
  %79 = getelementptr inbounds %struct.mbchar* %78, i32 0, i32 3
  %80 = load i32* %79, align 4
  %81 = icmp eq i32 %75, %80
  %82 = zext i1 %81 to i8
  store i8 %82, i8* %iftmp.9, align 1
  br label %bb36

bb31:                                             ; preds = %bb25, %bb20
  %83 = load %struct.mbchar** %b, align 8
  %84 = getelementptr inbounds %struct.mbchar* %83, i32 0, i32 1
  %85 = load i64* %84, align 8
  %86 = load %struct.mbchar** %needle_mbchars, align 8
  %87 = load i64* %j18, align 8
  %88 = getelementptr inbounds %struct.mbchar* %86, i64 %87
  %89 = getelementptr inbounds %struct.mbchar* %88, i32 0, i32 1
  %90 = load i64* %89, align 8
  %91 = icmp ne i64 %85, %90
  br i1 %91, label %bb34, label %bb32

bb32:                                             ; preds = %bb31
  %92 = load %struct.mbchar** %b, align 8
  %93 = getelementptr inbounds %struct.mbchar* %92, i32 0, i32 1
  %94 = load i64* %93, align 8
  %95 = load %struct.mbchar** %needle_mbchars, align 8
  %96 = load i64* %j18, align 8
  %97 = getelementptr inbounds %struct.mbchar* %95, i64 %96
  %98 = getelementptr inbounds %struct.mbchar* %97, i32 0, i32 0
  %99 = load i8** %98, align 8
  %100 = load %struct.mbchar** %b, align 8
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 0
  %102 = load i8** %101, align 8
  %103 = call i32 @memcmp(i8* %102, i8* %99, i64 %94) nounwind readonly
  %104 = icmp ne i32 %103, 0
  br i1 %104, label %bb34, label %bb33

bb33:                                             ; preds = %bb32
  store i32 1, i32* %iftmp.10, align 4
  br label %bb35

bb34:                                             ; preds = %bb32, %bb31
  store i32 0, i32* %iftmp.10, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %bb33
  %105 = load i32* %iftmp.10, align 4
  %106 = trunc i32 %105 to i8
  store i8 %106, i8* %iftmp.9, align 1
  br label %bb36

bb36:                                             ; preds = %bb35, %bb30
  %107 = load i8* %iftmp.9, align 1
  %toBool37 = icmp ne i8 %107, 0
  %108 = load i64* %j18, align 8
  br i1 %toBool37, label %bb38, label %bb39

bb38:                                             ; preds = %bb36
  %109 = add i64 %108, 1
  store i64 %109, i64* %j18, align 8
  %110 = load i64* %i, align 8
  %111 = load i64* %j18, align 8
  %112 = sub i64 %110, %111
  %113 = load i64** %table, align 8
  %114 = load i64* %i, align 8
  %115 = getelementptr inbounds i64* %113, i64 %114
  store i64 %112, i64* %115, align 1
  br label %bb42

bb39:                                             ; preds = %bb36
  %116 = icmp eq i64 %108, 0
  %117 = load i64** %table, align 8
  br i1 %116, label %bb40, label %bb41

bb40:                                             ; preds = %bb39
  %118 = load i64* %i, align 8
  %119 = getelementptr inbounds i64* %117, i64 %118
  %120 = load i64* %i, align 8
  store i64 %120, i64* %119, align 1
  br label %bb42

bb41:                                             ; preds = %bb39
  %121 = load i64* %j18, align 8
  %122 = getelementptr inbounds i64* %117, i64 %121
  %123 = load i64* %122, align 1
  %124 = load i64* %j18, align 8
  %125 = sub i64 %124, %123
  store i64 %125, i64* %j18, align 8
  br label %bb20

bb42:                                             ; preds = %bb40, %bb38
  %126 = load i64* %i, align 8
  %127 = add i64 %126, 1
  store i64 %127, i64* %i, align 8
  br label %bb43

bb43:                                             ; preds = %bb42, %bb17
  %128 = load i64* %i, align 8
  %129 = load i64* %m, align 8
  %130 = icmp ult i64 %128, %129
  br i1 %130, label %bb19, label %bb44

bb44:                                             ; preds = %bb43
  %131 = load i8*** %resultp_addr, align 8
  store i8* null, i8** %131, align 8
  store i64 0, i64* %j45, align 8
  %132 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %133 = getelementptr inbounds %struct.mbchar* %132, i32 0, i32 0
  %134 = load i8** %haystack_addr, align 8
  store i8* %134, i8** %133, align 8
  %135 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 0
  store i8 0, i8* %135, align 8
  %136 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 1
  %137 = bitcast %struct.mbstate_t* %136 to i8*
  %138 = call i8* @memset(i8* %137, i32 0, i64 8)
  %139 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %139, align 4
  %140 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %141 = getelementptr inbounds %struct.mbchar* %140, i32 0, i32 0
  %142 = load i8** %haystack_addr, align 8
  store i8* %142, i8** %141, align 8
  %143 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 0
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 1
  %145 = bitcast %struct.mbstate_t* %144 to i8*
  %146 = call i8* @memset(i8* %145, i32 0, i64 8)
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %147, align 4
  br label %bb93

bb46:                                             ; preds = %bb101
  %148 = load %struct.mbchar** %needle_mbchars, align 8
  %149 = load i64* %j45, align 8
  %150 = getelementptr inbounds %struct.mbchar* %148, i64 %149
  %151 = getelementptr inbounds %struct.mbchar* %150, i32 0, i32 2
  %152 = load i8* %151, align 8
  %toBool47 = icmp ne i8 %152, 0
  %toBool47not = xor i1 %toBool47, true
  %toBool47not48 = zext i1 %toBool47not to i8
  %toBool50 = icmp ne i8 %toBool47not48, 0
  br i1 %toBool50, label %bb57, label %bb51

bb51:                                             ; preds = %bb46
  %153 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %154 = getelementptr inbounds %struct.mbchar* %153, i32 0, i32 2
  %155 = load i8* %154, align 8
  %toBool52 = icmp ne i8 %155, 0
  %toBool52not = xor i1 %toBool52, true
  %toBool52not53 = zext i1 %toBool52not to i8
  %toBool55 = icmp ne i8 %toBool52not53, 0
  br i1 %toBool55, label %bb57, label %bb56

bb56:                                             ; preds = %bb51
  %156 = load %struct.mbchar** %needle_mbchars, align 8
  %157 = load i64* %j45, align 8
  %158 = getelementptr inbounds %struct.mbchar* %156, i64 %157
  %159 = getelementptr inbounds %struct.mbchar* %158, i32 0, i32 3
  %160 = load i32* %159, align 4
  %161 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %162 = getelementptr inbounds %struct.mbchar* %161, i32 0, i32 3
  %163 = load i32* %162, align 4
  %164 = icmp eq i32 %160, %163
  %165 = zext i1 %164 to i8
  store i8 %165, i8* %iftmp.11, align 1
  br label %bb62

bb57:                                             ; preds = %bb51, %bb46
  %166 = load %struct.mbchar** %needle_mbchars, align 8
  %167 = load i64* %j45, align 8
  %168 = getelementptr inbounds %struct.mbchar* %166, i64 %167
  %169 = getelementptr inbounds %struct.mbchar* %168, i32 0, i32 1
  %170 = load i64* %169, align 8
  %171 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %172 = getelementptr inbounds %struct.mbchar* %171, i32 0, i32 1
  %173 = load i64* %172, align 8
  %174 = icmp ne i64 %170, %173
  br i1 %174, label %bb60, label %bb58

bb58:                                             ; preds = %bb57
  %175 = load %struct.mbchar** %needle_mbchars, align 8
  %176 = load i64* %j45, align 8
  %177 = getelementptr inbounds %struct.mbchar* %175, i64 %176
  %178 = getelementptr inbounds %struct.mbchar* %177, i32 0, i32 1
  %179 = load i64* %178, align 8
  %180 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %181 = getelementptr inbounds %struct.mbchar* %180, i32 0, i32 0
  %182 = load i8** %181, align 8
  %183 = load %struct.mbchar** %needle_mbchars, align 8
  %184 = load i64* %j45, align 8
  %185 = getelementptr inbounds %struct.mbchar* %183, i64 %184
  %186 = getelementptr inbounds %struct.mbchar* %185, i32 0, i32 0
  %187 = load i8** %186, align 8
  %188 = call i32 @memcmp(i8* %187, i8* %182, i64 %179) nounwind readonly
  %189 = icmp ne i32 %188, 0
  br i1 %189, label %bb60, label %bb59

bb59:                                             ; preds = %bb58
  store i32 1, i32* %iftmp.12, align 4
  br label %bb61

bb60:                                             ; preds = %bb58, %bb57
  store i32 0, i32* %iftmp.12, align 4
  br label %bb61

bb61:                                             ; preds = %bb60, %bb59
  %190 = load i32* %iftmp.12, align 4
  %191 = trunc i32 %190 to i8
  store i8 %191, i8* %iftmp.11, align 1
  br label %bb62

bb62:                                             ; preds = %bb61, %bb56
  %192 = load i8* %iftmp.11, align 1
  %toBool63 = icmp ne i8 %192, 0
  %193 = load i64* %j45, align 8
  br i1 %toBool63, label %bb64, label %bb67

bb64:                                             ; preds = %bb62
  %194 = add i64 %193, 1
  store i64 %194, i64* %j45, align 8
  %195 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %196 = getelementptr inbounds %struct.mbchar* %195, i32 0, i32 0
  %197 = load i8** %196, align 8
  %198 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %199 = getelementptr inbounds %struct.mbchar* %198, i32 0, i32 1
  %200 = load i64* %199, align 8
  %201 = getelementptr inbounds i8* %197, i64 %200
  %202 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %203 = getelementptr inbounds %struct.mbchar* %202, i32 0, i32 0
  store i8* %201, i8** %203, align 8
  %204 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %204, align 4
  %205 = load i64* %j45, align 8
  %206 = load i64* %m, align 8
  %207 = icmp eq i64 %205, %206
  br i1 %207, label %bb65, label %bb93

bb65:                                             ; preds = %bb64
  %208 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %209 = getelementptr inbounds %struct.mbchar* %208, i32 0, i32 0
  %210 = load i8** %209, align 8
  %211 = load i8*** %resultp_addr, align 8
  store i8* %210, i8** %211, align 8
  br label %bb102

bb67:                                             ; preds = %bb62
  %212 = icmp ne i64 %193, 0
  br i1 %212, label %bb68, label %bb82

bb68:                                             ; preds = %bb67
  %213 = load i64** %table, align 8
  %214 = load i64* %j45, align 8
  %215 = getelementptr inbounds i64* %213, i64 %214
  %216 = load i64* %215, align 1
  store i64 %216, i64* %count, align 8
  %217 = load i64* %j45, align 8
  %218 = load i64* %count, align 8
  %219 = sub i64 %217, %218
  store i64 %219, i64* %j45, align 8
  br label %bb80

bb69:                                             ; preds = %bb80
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind
  %220 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %221 = getelementptr inbounds %struct.mbchar* %220, i32 0, i32 2
  %222 = load i8* %221, align 8
  %toBool70 = icmp ne i8 %222, 0
  %toBool70not = xor i1 %toBool70, true
  %toBool70not71 = zext i1 %toBool70not to i8
  %toBool73 = icmp ne i8 %toBool70not71, 0
  br i1 %toBool73, label %bb75, label %bb74

bb74:                                             ; preds = %bb69
  %223 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %224 = getelementptr inbounds %struct.mbchar* %223, i32 0, i32 3
  %225 = load i32* %224, align 4
  %226 = icmp ne i32 %225, 0
  br i1 %226, label %bb75, label %bb76

bb75:                                             ; preds = %bb74, %bb69
  store i32 1, i32* %iftmp.13, align 4
  br label %bb77

bb76:                                             ; preds = %bb74
  store i32 0, i32* %iftmp.13, align 4
  br label %bb77

bb77:                                             ; preds = %bb76, %bb75
  %227 = load i32* %iftmp.13, align 4
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %bb78, label %bb79

bb78:                                             ; preds = %bb77
  call void @abort() noreturn nounwind
  unreachable

bb79:                                             ; preds = %bb77
  %229 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %230 = getelementptr inbounds %struct.mbchar* %229, i32 0, i32 0
  %231 = load i8** %230, align 8
  %232 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %233 = getelementptr inbounds %struct.mbchar* %232, i32 0, i32 1
  %234 = load i64* %233, align 8
  %235 = getelementptr inbounds i8* %231, i64 %234
  %236 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %237 = getelementptr inbounds %struct.mbchar* %236, i32 0, i32 0
  store i8* %235, i8** %237, align 8
  %238 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %238, align 4
  %239 = load i64* %count, align 8
  %240 = sub i64 %239, 1
  store i64 %240, i64* %count, align 8
  br label %bb80

bb80:                                             ; preds = %bb79, %bb68
  %241 = load i64* %count, align 8
  %242 = icmp ne i64 %241, 0
  br i1 %242, label %bb69, label %bb93

bb82:                                             ; preds = %bb67
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind
  %243 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %244 = getelementptr inbounds %struct.mbchar* %243, i32 0, i32 2
  %245 = load i8* %244, align 8
  %toBool83 = icmp ne i8 %245, 0
  %toBool83not = xor i1 %toBool83, true
  %toBool83not84 = zext i1 %toBool83not to i8
  %toBool86 = icmp ne i8 %toBool83not84, 0
  br i1 %toBool86, label %bb88, label %bb87

bb87:                                             ; preds = %bb82
  %246 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %247 = getelementptr inbounds %struct.mbchar* %246, i32 0, i32 3
  %248 = load i32* %247, align 4
  %249 = icmp ne i32 %248, 0
  br i1 %249, label %bb88, label %bb89

bb88:                                             ; preds = %bb87, %bb82
  store i32 1, i32* %iftmp.14, align 4
  br label %bb90

bb89:                                             ; preds = %bb87
  store i32 0, i32* %iftmp.14, align 4
  br label %bb90

bb90:                                             ; preds = %bb89, %bb88
  %250 = load i32* %iftmp.14, align 4
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %bb91, label %bb92

bb91:                                             ; preds = %bb90
  call void @abort() noreturn nounwind
  unreachable

bb92:                                             ; preds = %bb90
  %252 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %253 = getelementptr inbounds %struct.mbchar* %252, i32 0, i32 0
  %254 = load i8** %253, align 8
  %255 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %256 = getelementptr inbounds %struct.mbchar* %255, i32 0, i32 1
  %257 = load i64* %256, align 8
  %258 = getelementptr inbounds i8* %254, i64 %257
  %259 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %260 = getelementptr inbounds %struct.mbchar* %259, i32 0, i32 0
  store i8* %258, i8** %260, align 8
  %261 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %261, align 4
  %262 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %263 = getelementptr inbounds %struct.mbchar* %262, i32 0, i32 0
  %264 = load i8** %263, align 8
  %265 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %266 = getelementptr inbounds %struct.mbchar* %265, i32 0, i32 1
  %267 = load i64* %266, align 8
  %268 = getelementptr inbounds i8* %264, i64 %267
  %269 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %270 = getelementptr inbounds %struct.mbchar* %269, i32 0, i32 0
  store i8* %268, i8** %270, align 8
  %271 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 2
  store i8 0, i8* %271, align 4
  br label %bb93

bb93:                                             ; preds = %bb80, %bb64, %bb92, %bb44
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %phaystack) nounwind
  %272 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %273 = getelementptr inbounds %struct.mbchar* %272, i32 0, i32 2
  %274 = load i8* %273, align 8
  %toBool94 = icmp ne i8 %274, 0
  %toBool94not = xor i1 %toBool94, true
  %toBool94not95 = zext i1 %toBool94not to i8
  %toBool97 = icmp ne i8 %toBool94not95, 0
  br i1 %toBool97, label %bb99, label %bb98

bb98:                                             ; preds = %bb93
  %275 = getelementptr inbounds %struct.mbui_iterator_t* %phaystack, i32 0, i32 3
  %276 = getelementptr inbounds %struct.mbchar* %275, i32 0, i32 3
  %277 = load i32* %276, align 4
  %278 = icmp ne i32 %277, 0
  br i1 %278, label %bb99, label %bb100

bb99:                                             ; preds = %bb98, %bb93
  store i32 1, i32* %iftmp.15, align 4
  br label %bb101

bb100:                                            ; preds = %bb98
  store i32 0, i32* %iftmp.15, align 4
  br label %bb101

bb101:                                            ; preds = %bb100, %bb99
  %279 = load i32* %iftmp.15, align 4
  %280 = icmp ne i32 %279, 0
  br i1 %280, label %bb46, label %bb102

bb102:                                            ; preds = %bb101, %bb65
  %281 = load i8** %memory, align 8
  call void @freea(i8* %281) nounwind
  store i32 1, i32* %0, align 4
  br label %bb103

bb103:                                            ; preds = %bb102, %bb6
  %282 = load i32* %0, align 4
  store i32 %282, i32* %retval, align 4
  %retval104 = load i32* %retval
  %retval104105 = trunc i32 %retval104 to i8
  ret i8 %retval104105
}

define i8* @mbsstr(i8* %haystack, i8* %needle) nounwind readonly {
entry:
  %haystack_addr = alloca i8*, align 8
  %needle_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.27 = alloca i32
  %iftmp.26 = alloca i8
  %iftmp.25 = alloca i32
  %iftmp.24 = alloca i32
  %iftmp.23 = alloca i32
  %iftmp.22 = alloca i32
  %iftmp.21 = alloca i8
  %iftmp.19 = alloca i32
  %iftmp.18 = alloca i32
  %0 = alloca i8*
  %iftmp.17 = alloca i32
  %iftmp.16 = alloca i32
  %iter_needle = alloca %struct.mbui_iterator_t
  %try_kmp = alloca i8
  %outer_loop_count = alloca i64
  %comparison_count = alloca i64
  %last_ccount = alloca i64
  %iter_needle_last_ccount = alloca %struct.mbui_iterator_t
  %iter_haystack = alloca %struct.mbui_iterator_t
  %count = alloca i64
  %result = alloca i8*
  %success = alloca i8
  %rhaystack = alloca %struct.mbui_iterator_t
  %rneedle = alloca %struct.mbui_iterator_t
  %try_kmp122 = alloca i8
  %outer_loop_count123 = alloca i64
  %comparison_count124 = alloca i64
  %last_ccount125 = alloca i64
  %needle_last_ccount = alloca i8*
  %b = alloca i8
  %result138 = alloca i8*
  %success139 = alloca i8
  %rhaystack145 = alloca i8*
  %rneedle146 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %haystack, i8** %haystack_addr
  store i8* %needle, i8** %needle_addr
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %bb, label %bb120

bb:                                               ; preds = %entry
  %3 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 0
  %5 = load i8** %needle_addr, align 8
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 1
  %8 = bitcast %struct.mbstate_t* %7 to i8*
  %9 = call i8* @memset(i8* %8, i32 0, i64 8)
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 2
  store i8 0, i8* %10, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle) nounwind inlinehint
  %11 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %12 = getelementptr inbounds %struct.mbchar* %11, i32 0, i32 2
  %13 = load i8* %12, align 8
  %toBool = icmp ne i8 %13, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  br i1 %toBool3, label %bb5, label %bb4

bb4:                                              ; preds = %bb
  %14 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %15 = getelementptr inbounds %struct.mbchar* %14, i32 0, i32 3
  %16 = load i32* %15, align 4
  %17 = icmp ne i32 %16, 0
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb
  store i32 1, i32* %iftmp.16, align 4
  br label %bb7

bb6:                                              ; preds = %bb4
  store i32 0, i32* %iftmp.16, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i32* %iftmp.16, align 4
  %19 = icmp ne i32 %18, 0
  br i1 %19, label %bb8, label %bb119

bb8:                                              ; preds = %bb7
  store i8 1, i8* %try_kmp, align 1
  store i64 0, i64* %outer_loop_count, align 8
  store i64 0, i64* %comparison_count, align 8
  store i64 0, i64* %last_ccount, align 8
  %20 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %21 = getelementptr inbounds %struct.mbchar* %20, i32 0, i32 0
  %22 = load i8** %needle_addr, align 8
  store i8* %22, i8** %21, align 8
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 0
  store i8 0, i8* %23, align 8
  %24 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 1
  %25 = bitcast %struct.mbstate_t* %24 to i8*
  %26 = call i8* @memset(i8* %25, i32 0, i64 8)
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 2
  store i8 0, i8* %27, align 4
  %28 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %29 = getelementptr inbounds %struct.mbchar* %28, i32 0, i32 0
  %30 = load i8** %haystack_addr, align 8
  store i8* %30, i8** %29, align 8
  %31 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 0
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 1
  %33 = bitcast %struct.mbstate_t* %32 to i8*
  %34 = call i8* @memset(i8* %33, i32 0, i64 8)
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 2
  store i8 0, i8* %35, align 4
  br label %bb9

bb9:                                              ; preds = %bb118, %bb8
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_haystack) nounwind inlinehint
  %36 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %37 = getelementptr inbounds %struct.mbchar* %36, i32 0, i32 2
  %38 = load i8* %37, align 8
  %toBool10 = icmp ne i8 %38, 0
  %toBool10not = xor i1 %toBool10, true
  %toBool10not11 = zext i1 %toBool10not to i8
  %toBool13 = icmp ne i8 %toBool10not11, 0
  br i1 %toBool13, label %bb15, label %bb14

bb14:                                             ; preds = %bb9
  %39 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %40 = getelementptr inbounds %struct.mbchar* %39, i32 0, i32 3
  %41 = load i32* %40, align 4
  %42 = icmp ne i32 %41, 0
  br i1 %42, label %bb15, label %bb16

bb15:                                             ; preds = %bb14, %bb9
  store i32 1, i32* %iftmp.17, align 4
  br label %bb17

bb16:                                             ; preds = %bb14
  store i32 0, i32* %iftmp.17, align 4
  br label %bb17

bb17:                                             ; preds = %bb16, %bb15
  %43 = load i32* %iftmp.17, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  store i8* null, i8** %0, align 8
  br label %bb155

bb19:                                             ; preds = %bb17
  %45 = load i8* %try_kmp, align 1
  %toBool20 = icmp ne i8 %45, 0
  br i1 %toBool20, label %bb21, label %bb48

bb21:                                             ; preds = %bb19
  %46 = load i64* %outer_loop_count, align 8
  %47 = icmp ugt i64 %46, 9
  br i1 %47, label %bb22, label %bb48

bb22:                                             ; preds = %bb21
  %48 = load i64* %outer_loop_count, align 8
  %49 = mul i64 %48, 5
  %50 = load i64* %comparison_count, align 8
  %51 = icmp ule i64 %49, %50
  br i1 %51, label %bb23, label %bb48

bb23:                                             ; preds = %bb22
  %52 = load i64* %comparison_count, align 8
  %53 = load i64* %last_ccount, align 8
  %54 = sub i64 %52, %53
  store i64 %54, i64* %count, align 8
  br label %bb25

bb24:                                             ; preds = %bb34
  %55 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %56 = getelementptr inbounds %struct.mbchar* %55, i32 0, i32 0
  %57 = load i8** %56, align 8
  %58 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %59 = getelementptr inbounds %struct.mbchar* %58, i32 0, i32 1
  %60 = load i64* %59, align 8
  %61 = getelementptr inbounds i8* %57, i64 %60
  %62 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %63 = getelementptr inbounds %struct.mbchar* %62, i32 0, i32 0
  store i8* %61, i8** %63, align 8
  %64 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 2
  store i8 0, i8* %64, align 4
  %65 = load i64* %count, align 8
  %66 = sub i64 %65, 1
  store i64 %66, i64* %count, align 8
  br label %bb25

bb25:                                             ; preds = %bb24, %bb23
  %67 = load i64* %count, align 8
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %bb35, label %bb26

bb26:                                             ; preds = %bb25
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle_last_ccount) nounwind inlinehint
  %69 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %70 = getelementptr inbounds %struct.mbchar* %69, i32 0, i32 2
  %71 = load i8* %70, align 8
  %toBool27 = icmp ne i8 %71, 0
  %toBool27not = xor i1 %toBool27, true
  %toBool27not28 = zext i1 %toBool27not to i8
  %toBool30 = icmp ne i8 %toBool27not28, 0
  br i1 %toBool30, label %bb32, label %bb31

bb31:                                             ; preds = %bb26
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 3
  %74 = load i32* %73, align 4
  %75 = icmp ne i32 %74, 0
  br i1 %75, label %bb32, label %bb33

bb32:                                             ; preds = %bb31, %bb26
  store i32 1, i32* %iftmp.18, align 4
  br label %bb34

bb33:                                             ; preds = %bb31
  store i32 0, i32* %iftmp.18, align 4
  br label %bb34

bb34:                                             ; preds = %bb33, %bb32
  %76 = load i32* %iftmp.18, align 4
  %77 = icmp ne i32 %76, 0
  br i1 %77, label %bb24, label %bb35

bb35:                                             ; preds = %bb34, %bb25
  %78 = load i64* %comparison_count, align 8
  store i64 %78, i64* %last_ccount, align 8
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter_needle_last_ccount) nounwind inlinehint
  %79 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %80 = getelementptr inbounds %struct.mbchar* %79, i32 0, i32 2
  %81 = load i8* %80, align 8
  %toBool36 = icmp ne i8 %81, 0
  %toBool36not = xor i1 %toBool36, true
  %toBool36not37 = zext i1 %toBool36not to i8
  %toBool39 = icmp ne i8 %toBool36not37, 0
  br i1 %toBool39, label %bb41, label %bb40

bb40:                                             ; preds = %bb35
  %82 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle_last_ccount, i32 0, i32 3
  %83 = getelementptr inbounds %struct.mbchar* %82, i32 0, i32 3
  %84 = load i32* %83, align 4
  %85 = icmp ne i32 %84, 0
  br i1 %85, label %bb41, label %bb42

bb41:                                             ; preds = %bb40, %bb35
  store i32 1, i32* %iftmp.19, align 4
  br label %bb43

bb42:                                             ; preds = %bb40
  store i32 0, i32* %iftmp.19, align 4
  br label %bb43

bb43:                                             ; preds = %bb42, %bb41
  %86 = load i32* %iftmp.19, align 4
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %bb44, label %bb48

bb44:                                             ; preds = %bb43
  %88 = load i8** %haystack_addr, align 8
  %89 = load i8** %needle_addr, align 8
  %90 = call zeroext i8 @knuth_morris_pratt_multibyte(i8* %88, i8* %89, i8** %result) nounwind
  store i8 %90, i8* %success, align 1
  %91 = load i8* %success, align 1
  %toBool45 = icmp ne i8 %91, 0
  br i1 %toBool45, label %bb46, label %bb47

bb46:                                             ; preds = %bb44
  %92 = load i8** %result, align 8
  store i8* %92, i8** %0, align 8
  br label %bb155

bb47:                                             ; preds = %bb44
  store i8 0, i8* %try_kmp, align 1
  br label %bb48

bb48:                                             ; preds = %bb47, %bb43, %bb22, %bb21, %bb19
  %93 = load i64* %outer_loop_count, align 8
  %94 = add i64 %93, 1
  store i64 %94, i64* %outer_loop_count, align 8
  %95 = load i64* %comparison_count, align 8
  %96 = add i64 %95, 1
  store i64 %96, i64* %comparison_count, align 8
  %97 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %98 = getelementptr inbounds %struct.mbchar* %97, i32 0, i32 2
  %99 = load i8* %98, align 8
  %toBool49 = icmp ne i8 %99, 0
  %toBool49not = xor i1 %toBool49, true
  %toBool49not50 = zext i1 %toBool49not to i8
  %toBool52 = icmp ne i8 %toBool49not50, 0
  br i1 %toBool52, label %bb59, label %bb53

bb53:                                             ; preds = %bb48
  %100 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %101 = getelementptr inbounds %struct.mbchar* %100, i32 0, i32 2
  %102 = load i8* %101, align 8
  %toBool54 = icmp ne i8 %102, 0
  %toBool54not = xor i1 %toBool54, true
  %toBool54not55 = zext i1 %toBool54not to i8
  %toBool57 = icmp ne i8 %toBool54not55, 0
  br i1 %toBool57, label %bb59, label %bb58

bb58:                                             ; preds = %bb53
  %103 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %104 = getelementptr inbounds %struct.mbchar* %103, i32 0, i32 3
  %105 = load i32* %104, align 4
  %106 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %107 = getelementptr inbounds %struct.mbchar* %106, i32 0, i32 3
  %108 = load i32* %107, align 4
  %109 = icmp eq i32 %105, %108
  %110 = zext i1 %109 to i8
  store i8 %110, i8* %iftmp.21, align 1
  br label %bb64

bb59:                                             ; preds = %bb53, %bb48
  %111 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %112 = getelementptr inbounds %struct.mbchar* %111, i32 0, i32 1
  %113 = load i64* %112, align 8
  %114 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %115 = getelementptr inbounds %struct.mbchar* %114, i32 0, i32 1
  %116 = load i64* %115, align 8
  %117 = icmp ne i64 %113, %116
  br i1 %117, label %bb62, label %bb60

bb60:                                             ; preds = %bb59
  %118 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %119 = getelementptr inbounds %struct.mbchar* %118, i32 0, i32 1
  %120 = load i64* %119, align 8
  %121 = getelementptr inbounds %struct.mbui_iterator_t* %iter_needle, i32 0, i32 3
  %122 = getelementptr inbounds %struct.mbchar* %121, i32 0, i32 0
  %123 = load i8** %122, align 8
  %124 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %125 = getelementptr inbounds %struct.mbchar* %124, i32 0, i32 0
  %126 = load i8** %125, align 8
  %127 = call i32 @memcmp(i8* %126, i8* %123, i64 %120) nounwind readonly
  %128 = icmp ne i32 %127, 0
  br i1 %128, label %bb62, label %bb61

bb61:                                             ; preds = %bb60
  store i32 1, i32* %iftmp.22, align 4
  br label %bb63

bb62:                                             ; preds = %bb60, %bb59
  store i32 0, i32* %iftmp.22, align 4
  br label %bb63

bb63:                                             ; preds = %bb62, %bb61
  %129 = load i32* %iftmp.22, align 4
  %130 = trunc i32 %129 to i8
  store i8 %130, i8* %iftmp.21, align 1
  br label %bb64

bb64:                                             ; preds = %bb63, %bb58
  %131 = load i8* %iftmp.21, align 1
  %toBool65 = icmp ne i8 %131, 0
  br i1 %toBool65, label %bb66, label %bb118

bb66:                                             ; preds = %bb64
  %rhaystack67 = bitcast %struct.mbui_iterator_t* %rhaystack to i8*
  %iter_haystack68 = bitcast %struct.mbui_iterator_t* %iter_haystack to i8*
  %132 = call i8* @memcpy(i8* %rhaystack67, i8* %iter_haystack68, i64 64)
  %133 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %134 = getelementptr inbounds %struct.mbchar* %133, i32 0, i32 0
  %135 = load i8** %134, align 8
  %136 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %137 = getelementptr inbounds %struct.mbchar* %136, i32 0, i32 1
  %138 = load i64* %137, align 8
  %139 = getelementptr inbounds i8* %135, i64 %138
  %140 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %141 = getelementptr inbounds %struct.mbchar* %140, i32 0, i32 0
  store i8* %139, i8** %141, align 8
  %142 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %142, align 4
  %143 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %144 = getelementptr inbounds %struct.mbchar* %143, i32 0, i32 0
  %145 = load i8** %needle_addr, align 8
  store i8* %145, i8** %144, align 8
  %146 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 0
  store i8 0, i8* %146, align 8
  %147 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 1
  %148 = bitcast %struct.mbstate_t* %147 to i8*
  %149 = call i8* @memset(i8* %148, i32 0, i64 8)
  %150 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %150, align 4
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rneedle) nounwind inlinehint
  %151 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %152 = getelementptr inbounds %struct.mbchar* %151, i32 0, i32 2
  %153 = load i8* %152, align 8
  %toBool69 = icmp ne i8 %153, 0
  %toBool69not = xor i1 %toBool69, true
  %toBool69not70 = zext i1 %toBool69not to i8
  %toBool72 = icmp ne i8 %toBool69not70, 0
  br i1 %toBool72, label %bb74, label %bb73

bb73:                                             ; preds = %bb66
  %154 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %155 = getelementptr inbounds %struct.mbchar* %154, i32 0, i32 3
  %156 = load i32* %155, align 4
  %157 = icmp ne i32 %156, 0
  br i1 %157, label %bb74, label %bb75

bb74:                                             ; preds = %bb73, %bb66
  store i32 1, i32* %iftmp.23, align 4
  br label %bb76

bb75:                                             ; preds = %bb73
  store i32 0, i32* %iftmp.23, align 4
  br label %bb76

bb76:                                             ; preds = %bb75, %bb74
  %158 = load i32* %iftmp.23, align 4
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %bb77, label %bb78

bb77:                                             ; preds = %bb76
  call void @abort() noreturn nounwind
  unreachable

bb78:                                             ; preds = %bb76
  %160 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %161 = getelementptr inbounds %struct.mbchar* %160, i32 0, i32 0
  %162 = load i8** %161, align 8
  %163 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %164 = getelementptr inbounds %struct.mbchar* %163, i32 0, i32 1
  %165 = load i64* %164, align 8
  %166 = getelementptr inbounds i8* %162, i64 %165
  %167 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %168 = getelementptr inbounds %struct.mbchar* %167, i32 0, i32 0
  store i8* %166, i8** %168, align 8
  %169 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %169, align 4
  br label %bb79

bb79:                                             ; preds = %bb117, %bb78
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rneedle) nounwind inlinehint
  %170 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %171 = getelementptr inbounds %struct.mbchar* %170, i32 0, i32 2
  %172 = load i8* %171, align 8
  %toBool80 = icmp ne i8 %172, 0
  %toBool80not = xor i1 %toBool80, true
  %toBool80not81 = zext i1 %toBool80not to i8
  %toBool83 = icmp ne i8 %toBool80not81, 0
  br i1 %toBool83, label %bb85, label %bb84

bb84:                                             ; preds = %bb79
  %173 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %174 = getelementptr inbounds %struct.mbchar* %173, i32 0, i32 3
  %175 = load i32* %174, align 4
  %176 = icmp ne i32 %175, 0
  br i1 %176, label %bb85, label %bb86

bb85:                                             ; preds = %bb84, %bb79
  store i32 1, i32* %iftmp.24, align 4
  br label %bb87

bb86:                                             ; preds = %bb84
  store i32 0, i32* %iftmp.24, align 4
  br label %bb87

bb87:                                             ; preds = %bb86, %bb85
  %177 = load i32* %iftmp.24, align 4
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %bb88, label %bb89

bb88:                                             ; preds = %bb87
  %179 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %180 = getelementptr inbounds %struct.mbchar* %179, i32 0, i32 0
  %181 = load i8** %180, align 8
  store i8* %181, i8** %0, align 8
  br label %bb155

bb89:                                             ; preds = %bb87
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %rhaystack) nounwind inlinehint
  %182 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %183 = getelementptr inbounds %struct.mbchar* %182, i32 0, i32 2
  %184 = load i8* %183, align 8
  %toBool90 = icmp ne i8 %184, 0
  %toBool90not = xor i1 %toBool90, true
  %toBool90not91 = zext i1 %toBool90not to i8
  %toBool93 = icmp ne i8 %toBool90not91, 0
  br i1 %toBool93, label %bb95, label %bb94

bb94:                                             ; preds = %bb89
  %185 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %186 = getelementptr inbounds %struct.mbchar* %185, i32 0, i32 3
  %187 = load i32* %186, align 4
  %188 = icmp ne i32 %187, 0
  br i1 %188, label %bb95, label %bb96

bb95:                                             ; preds = %bb94, %bb89
  store i32 1, i32* %iftmp.25, align 4
  br label %bb97

bb96:                                             ; preds = %bb94
  store i32 0, i32* %iftmp.25, align 4
  br label %bb97

bb97:                                             ; preds = %bb96, %bb95
  %189 = load i32* %iftmp.25, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %bb98, label %bb99

bb98:                                             ; preds = %bb97
  store i8* null, i8** %0, align 8
  br label %bb155

bb99:                                             ; preds = %bb97
  %191 = load i64* %comparison_count, align 8
  %192 = add i64 %191, 1
  store i64 %192, i64* %comparison_count, align 8
  %193 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %194 = getelementptr inbounds %struct.mbchar* %193, i32 0, i32 2
  %195 = load i8* %194, align 8
  %toBool100 = icmp ne i8 %195, 0
  %toBool100not = xor i1 %toBool100, true
  %toBool100not101 = zext i1 %toBool100not to i8
  %toBool103 = icmp ne i8 %toBool100not101, 0
  br i1 %toBool103, label %bb110, label %bb104

bb104:                                            ; preds = %bb99
  %196 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %197 = getelementptr inbounds %struct.mbchar* %196, i32 0, i32 2
  %198 = load i8* %197, align 8
  %toBool105 = icmp ne i8 %198, 0
  %toBool105not = xor i1 %toBool105, true
  %toBool105not106 = zext i1 %toBool105not to i8
  %toBool108 = icmp ne i8 %toBool105not106, 0
  br i1 %toBool108, label %bb110, label %bb109

bb109:                                            ; preds = %bb104
  %199 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %200 = getelementptr inbounds %struct.mbchar* %199, i32 0, i32 3
  %201 = load i32* %200, align 4
  %202 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %203 = getelementptr inbounds %struct.mbchar* %202, i32 0, i32 3
  %204 = load i32* %203, align 4
  %205 = icmp ne i32 %201, %204
  %206 = zext i1 %205 to i8
  store i8 %206, i8* %iftmp.26, align 1
  br label %bb115

bb110:                                            ; preds = %bb104, %bb99
  %207 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %208 = getelementptr inbounds %struct.mbchar* %207, i32 0, i32 1
  %209 = load i64* %208, align 8
  %210 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %211 = getelementptr inbounds %struct.mbchar* %210, i32 0, i32 1
  %212 = load i64* %211, align 8
  %213 = icmp ne i64 %209, %212
  br i1 %213, label %bb112, label %bb111

bb111:                                            ; preds = %bb110
  %214 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %215 = getelementptr inbounds %struct.mbchar* %214, i32 0, i32 1
  %216 = load i64* %215, align 8
  %217 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %218 = getelementptr inbounds %struct.mbchar* %217, i32 0, i32 0
  %219 = load i8** %218, align 8
  %220 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %221 = getelementptr inbounds %struct.mbchar* %220, i32 0, i32 0
  %222 = load i8** %221, align 8
  %223 = call i32 @memcmp(i8* %222, i8* %219, i64 %216) nounwind readonly
  %224 = icmp ne i32 %223, 0
  br i1 %224, label %bb112, label %bb113

bb112:                                            ; preds = %bb111, %bb110
  store i32 1, i32* %iftmp.27, align 4
  br label %bb114

bb113:                                            ; preds = %bb111
  store i32 0, i32* %iftmp.27, align 4
  br label %bb114

bb114:                                            ; preds = %bb113, %bb112
  %225 = load i32* %iftmp.27, align 4
  %226 = trunc i32 %225 to i8
  store i8 %226, i8* %iftmp.26, align 1
  br label %bb115

bb115:                                            ; preds = %bb114, %bb109
  %227 = load i8* %iftmp.26, align 1
  %toBool116 = icmp ne i8 %227, 0
  br i1 %toBool116, label %bb118, label %bb117

bb117:                                            ; preds = %bb115
  %228 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %229 = getelementptr inbounds %struct.mbchar* %228, i32 0, i32 0
  %230 = load i8** %229, align 8
  %231 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %232 = getelementptr inbounds %struct.mbchar* %231, i32 0, i32 1
  %233 = load i64* %232, align 8
  %234 = getelementptr inbounds i8* %230, i64 %233
  %235 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 3
  %236 = getelementptr inbounds %struct.mbchar* %235, i32 0, i32 0
  store i8* %234, i8** %236, align 8
  %237 = getelementptr inbounds %struct.mbui_iterator_t* %rhaystack, i32 0, i32 2
  store i8 0, i8* %237, align 4
  %238 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %239 = getelementptr inbounds %struct.mbchar* %238, i32 0, i32 0
  %240 = load i8** %239, align 8
  %241 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %242 = getelementptr inbounds %struct.mbchar* %241, i32 0, i32 1
  %243 = load i64* %242, align 8
  %244 = getelementptr inbounds i8* %240, i64 %243
  %245 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 3
  %246 = getelementptr inbounds %struct.mbchar* %245, i32 0, i32 0
  store i8* %244, i8** %246, align 8
  %247 = getelementptr inbounds %struct.mbui_iterator_t* %rneedle, i32 0, i32 2
  store i8 0, i8* %247, align 4
  br label %bb79

bb118:                                            ; preds = %bb115, %bb64
  %248 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %249 = getelementptr inbounds %struct.mbchar* %248, i32 0, i32 0
  %250 = load i8** %249, align 8
  %251 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %252 = getelementptr inbounds %struct.mbchar* %251, i32 0, i32 1
  %253 = load i64* %252, align 8
  %254 = getelementptr inbounds i8* %250, i64 %253
  %255 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 3
  %256 = getelementptr inbounds %struct.mbchar* %255, i32 0, i32 0
  store i8* %254, i8** %256, align 8
  %257 = getelementptr inbounds %struct.mbui_iterator_t* %iter_haystack, i32 0, i32 2
  store i8 0, i8* %257, align 4
  br label %bb9

bb119:                                            ; preds = %bb7
  %258 = load i8** %haystack_addr, align 8
  store i8* %258, i8** %0, align 8
  br label %bb155

bb120:                                            ; preds = %entry
  %259 = load i8** %needle_addr, align 8
  %260 = load i8* %259, align 1
  %261 = icmp ne i8 %260, 0
  br i1 %261, label %bb121, label %bb154

bb121:                                            ; preds = %bb120
  store i8 1, i8* %try_kmp122, align 1
  store i64 0, i64* %outer_loop_count123, align 8
  store i64 0, i64* %comparison_count124, align 8
  store i64 0, i64* %last_ccount125, align 8
  %262 = load i8** %needle_addr, align 8
  store i8* %262, i8** %needle_last_ccount, align 8
  %263 = load i8** %needle_addr, align 8
  %264 = load i8* %263, align 1
  store i8 %264, i8* %b, align 1
  %265 = load i8** %needle_addr, align 8
  %266 = getelementptr inbounds i8* %265, i64 1
  store i8* %266, i8** %needle_addr, align 8
  br label %bb126

bb126:                                            ; preds = %bb153, %bb121
  %267 = load i8** %haystack_addr, align 8
  %268 = load i8* %267, align 1
  %269 = icmp eq i8 %268, 0
  br i1 %269, label %bb127, label %bb128

bb127:                                            ; preds = %bb126
  store i8* null, i8** %0, align 8
  br label %bb155

bb128:                                            ; preds = %bb126
  %270 = load i8* %try_kmp122, align 1
  %toBool129 = icmp ne i8 %270, 0
  br i1 %toBool129, label %bb130, label %bb143

bb130:                                            ; preds = %bb128
  %271 = load i64* %outer_loop_count123, align 8
  %272 = icmp ugt i64 %271, 9
  br i1 %272, label %bb131, label %bb143

bb131:                                            ; preds = %bb130
  %273 = load i64* %outer_loop_count123, align 8
  %274 = mul i64 %273, 5
  %275 = load i64* %comparison_count124, align 8
  %276 = icmp ule i64 %274, %275
  br i1 %276, label %bb132, label %bb143

bb132:                                            ; preds = %bb131
  %277 = load i8** %needle_last_ccount, align 8
  %278 = icmp ne i8* %277, null
  br i1 %278, label %bb133, label %bb136

bb133:                                            ; preds = %bb132
  %279 = load i64* %comparison_count124, align 8
  %280 = load i64* %last_ccount125, align 8
  %281 = sub i64 %279, %280
  %282 = load i8** %needle_last_ccount, align 8
  %283 = call i64 @strnlen(i8* %282, i64 %281) nounwind readonly
  %284 = load i8** %needle_last_ccount, align 8
  %285 = getelementptr inbounds i8* %284, i64 %283
  store i8* %285, i8** %needle_last_ccount, align 8
  %286 = load i8** %needle_last_ccount, align 8
  %287 = load i8* %286, align 1
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %bb134, label %bb135

bb134:                                            ; preds = %bb133
  store i8* null, i8** %needle_last_ccount, align 8
  br label %bb135

bb135:                                            ; preds = %bb134, %bb133
  %289 = load i64* %comparison_count124, align 8
  store i64 %289, i64* %last_ccount125, align 8
  br label %bb136

bb136:                                            ; preds = %bb135, %bb132
  %290 = load i8** %needle_last_ccount, align 8
  %291 = icmp eq i8* %290, null
  br i1 %291, label %bb137, label %bb143

bb137:                                            ; preds = %bb136
  %292 = load i8** %needle_addr, align 8
  %293 = getelementptr inbounds i8* %292, i64 -1
  %294 = call i64 @strlen(i8* %293) nounwind readonly
  %295 = load i8** %needle_addr, align 8
  %296 = getelementptr inbounds i8* %295, i64 -1
  %297 = load i8** %haystack_addr, align 8
  %298 = call zeroext i8 @knuth_morris_pratt(i8* %297, i8* %296, i64 %294, i8** %result138) nounwind
  store i8 %298, i8* %success139, align 1
  %299 = load i8* %success139, align 1
  %toBool140 = icmp ne i8 %299, 0
  br i1 %toBool140, label %bb141, label %bb142

bb141:                                            ; preds = %bb137
  %300 = load i8** %result138, align 8
  store i8* %300, i8** %0, align 8
  br label %bb155

bb142:                                            ; preds = %bb137
  store i8 0, i8* %try_kmp122, align 1
  br label %bb143

bb143:                                            ; preds = %bb142, %bb136, %bb131, %bb130, %bb128
  %301 = load i64* %outer_loop_count123, align 8
  %302 = add i64 %301, 1
  store i64 %302, i64* %outer_loop_count123, align 8
  %303 = load i64* %comparison_count124, align 8
  %304 = add i64 %303, 1
  store i64 %304, i64* %comparison_count124, align 8
  %305 = load i8** %haystack_addr, align 8
  %306 = load i8* %305, align 1
  %307 = load i8* %b, align 1
  %308 = icmp eq i8 %306, %307
  br i1 %308, label %bb144, label %bb153

bb144:                                            ; preds = %bb143
  %309 = load i8** %haystack_addr, align 8
  %310 = getelementptr inbounds i8* %309, i64 1
  store i8* %310, i8** %rhaystack145, align 8
  %311 = load i8** %needle_addr, align 8
  store i8* %311, i8** %rneedle146, align 8
  br label %bb147

bb147:                                            ; preds = %bb152, %bb144
  %312 = load i8** %rneedle146, align 8
  %313 = load i8* %312, align 1
  %314 = icmp eq i8 %313, 0
  br i1 %314, label %bb148, label %bb149

bb148:                                            ; preds = %bb147
  %315 = load i8** %haystack_addr, align 8
  store i8* %315, i8** %0, align 8
  br label %bb155

bb149:                                            ; preds = %bb147
  %316 = load i8** %rhaystack145, align 8
  %317 = load i8* %316, align 1
  %318 = icmp eq i8 %317, 0
  br i1 %318, label %bb150, label %bb151

bb150:                                            ; preds = %bb149
  store i8* null, i8** %0, align 8
  br label %bb155

bb151:                                            ; preds = %bb149
  %319 = load i64* %comparison_count124, align 8
  %320 = add i64 %319, 1
  store i64 %320, i64* %comparison_count124, align 8
  %321 = load i8** %rhaystack145, align 8
  %322 = load i8* %321, align 1
  %323 = load i8** %rneedle146, align 8
  %324 = load i8* %323, align 1
  %325 = icmp ne i8 %322, %324
  br i1 %325, label %bb153, label %bb152

bb152:                                            ; preds = %bb151
  %326 = load i8** %rhaystack145, align 8
  %327 = getelementptr inbounds i8* %326, i64 1
  store i8* %327, i8** %rhaystack145, align 8
  %328 = load i8** %rneedle146, align 8
  %329 = getelementptr inbounds i8* %328, i64 1
  store i8* %329, i8** %rneedle146, align 8
  br label %bb147

bb153:                                            ; preds = %bb151, %bb143
  %330 = load i8** %haystack_addr, align 8
  %331 = getelementptr inbounds i8* %330, i64 1
  store i8* %331, i8** %haystack_addr, align 8
  br label %bb126

bb154:                                            ; preds = %bb120
  %332 = load i8** %haystack_addr, align 8
  store i8* %332, i8** %0, align 8
  br label %bb155

bb155:                                            ; preds = %bb154, %bb150, %bb148, %bb141, %bb127, %bb119, %bb98, %bb88, %bb46, %bb18
  %333 = load i8** %0, align 8
  store i8* %333, i8** %retval, align 8
  %retval156 = load i8** %retval
  ret i8* %retval156
}

define void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %iter, %struct.mbui_iterator_t** %iter_addr
  %0 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 2
  %2 = load i8* %1, align 4
  %toBool = icmp ne i8 %2, 0
  br i1 %toBool, label %return, label %bb

bb:                                               ; preds = %entry
  %3 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbui_iterator_t* %3, i32 0, i32 0
  %5 = load i8* %4, align 8
  %toBool1 = icmp ne i8 %5, 0
  br i1 %toBool1, label %with_shift, label %bb2

bb2:                                              ; preds = %bb
  %6 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %9 = load i8** %8, align 8
  %10 = load i8* %9, align 1
  %11 = sext i8 %10 to i32
  %12 = trunc i32 %11 to i8
  %13 = call zeroext i8 @is_basic(i8 signext %12) nounwind
  %toBool3 = icmp ne i8 %13, 0
  %14 = load %struct.mbui_iterator_t** %iter_addr, align 8
  br i1 %toBool3, label %bb4, label %bb5

bb4:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.mbui_iterator_t* %14, i32 0, i32 3
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  store i64 1, i64* %16, align 8
  %17 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %18 = getelementptr inbounds %struct.mbui_iterator_t* %17, i32 0, i32 3
  %19 = getelementptr inbounds %struct.mbchar* %18, i32 0, i32 0
  %20 = load i8** %19, align 8
  %21 = load i8* %20, align 1
  %22 = sext i8 %21 to i32
  %23 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %24 = getelementptr inbounds %struct.mbui_iterator_t* %23, i32 0, i32 3
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 3
  store i32 %22, i32* %25, align 4
  %26 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %26, i32 0, i32 3
  %28 = getelementptr inbounds %struct.mbchar* %27, i32 0, i32 2
  store i8 1, i8* %28, align 8
  br label %bb18

bb5:                                              ; preds = %bb2
  %29 = getelementptr inbounds %struct.mbui_iterator_t* %14, i32 0, i32 1
  %30 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %29) nounwind readonly
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str417, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1418, i64 0, i64 0), i32 150, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3824, i64 0, i64 0)) noreturn
  unreachable

bb7:                                              ; preds = %bb5
  %32 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %33 = getelementptr inbounds %struct.mbui_iterator_t* %32, i32 0, i32 0
  store i8 1, i8* %33, align 8
  br label %with_shift

with_shift:                                       ; preds = %bb7, %bb
  %34 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %35 = getelementptr inbounds %struct.mbui_iterator_t* %34, i32 0, i32 1
  %36 = call i64 @_stdlib_mb_cur_max() nounwind
  %37 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %38 = getelementptr inbounds %struct.mbui_iterator_t* %37, i32 0, i32 3
  %39 = getelementptr inbounds %struct.mbchar* %38, i32 0, i32 0
  %40 = load i8** %39, align 8
  %41 = call i64 @strnlen1(i8* %40, i64 %36) nounwind readonly
  %42 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %43 = getelementptr inbounds %struct.mbui_iterator_t* %42, i32 0, i32 3
  %44 = getelementptr inbounds %struct.mbchar* %43, i32 0, i32 0
  %45 = load i8** %44, align 8
  %46 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %47 = getelementptr inbounds %struct.mbui_iterator_t* %46, i32 0, i32 3
  %48 = getelementptr inbounds %struct.mbchar* %47, i32 0, i32 3
  %49 = call i64 @rpl_mbrtowc(i32* %48, i8* %45, i64 %41, %struct.mbstate_t* %35) nounwind
  %50 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %51 = getelementptr inbounds %struct.mbui_iterator_t* %50, i32 0, i32 3
  %52 = getelementptr inbounds %struct.mbchar* %51, i32 0, i32 1
  store i64 %49, i64* %52, align 8
  %53 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %54 = getelementptr inbounds %struct.mbui_iterator_t* %53, i32 0, i32 3
  %55 = getelementptr inbounds %struct.mbchar* %54, i32 0, i32 1
  %56 = load i64* %55, align 8
  %57 = icmp eq i64 %56, -1
  %58 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %59 = getelementptr inbounds %struct.mbui_iterator_t* %58, i32 0, i32 3
  %60 = getelementptr inbounds %struct.mbchar* %59, i32 0, i32 1
  br i1 %57, label %bb8, label %bb9

bb8:                                              ; preds = %with_shift
  store i64 1, i64* %60, align 8
  %61 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %62 = getelementptr inbounds %struct.mbui_iterator_t* %61, i32 0, i32 3
  %63 = getelementptr inbounds %struct.mbchar* %62, i32 0, i32 2
  store i8 0, i8* %63, align 8
  br label %bb18

bb9:                                              ; preds = %with_shift
  %64 = load i64* %60, align 8
  %65 = icmp eq i64 %64, -2
  %66 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %67 = getelementptr inbounds %struct.mbui_iterator_t* %66, i32 0, i32 3
  br i1 %65, label %bb10, label %bb11

bb10:                                             ; preds = %bb9
  %68 = getelementptr inbounds %struct.mbchar* %67, i32 0, i32 0
  %69 = load i8** %68, align 8
  %70 = call i64 @strlen(i8* %69) nounwind readonly
  %71 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %72 = getelementptr inbounds %struct.mbui_iterator_t* %71, i32 0, i32 3
  %73 = getelementptr inbounds %struct.mbchar* %72, i32 0, i32 1
  store i64 %70, i64* %73, align 8
  %74 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %75 = getelementptr inbounds %struct.mbui_iterator_t* %74, i32 0, i32 3
  %76 = getelementptr inbounds %struct.mbchar* %75, i32 0, i32 2
  store i8 0, i8* %76, align 8
  br label %bb18

bb11:                                             ; preds = %bb9
  %77 = getelementptr inbounds %struct.mbchar* %67, i32 0, i32 1
  %78 = load i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %bb12, label %bb16

bb12:                                             ; preds = %bb11
  %80 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %81 = getelementptr inbounds %struct.mbui_iterator_t* %80, i32 0, i32 3
  %82 = getelementptr inbounds %struct.mbchar* %81, i32 0, i32 1
  store i64 1, i64* %82, align 8
  %83 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %84 = getelementptr inbounds %struct.mbui_iterator_t* %83, i32 0, i32 3
  %85 = getelementptr inbounds %struct.mbchar* %84, i32 0, i32 0
  %86 = load i8** %85, align 8
  %87 = load i8* %86, align 1
  %88 = icmp ne i8 %87, 0
  br i1 %88, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  call void @__assert_fail(i8* getelementptr inbounds ([23 x i8]* @.str2419, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1418, i64 0, i64 0), i32 178, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3824, i64 0, i64 0)) noretur
  unreachable

bb14:                                             ; preds = %bb12
  %89 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %90 = getelementptr inbounds %struct.mbui_iterator_t* %89, i32 0, i32 3
  %91 = getelementptr inbounds %struct.mbchar* %90, i32 0, i32 3
  %92 = load i32* %91, align 4
  %93 = icmp ne i32 %92, 0
  br i1 %93, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str3420, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1418, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.3824, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14, %bb11
  %94 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %95 = getelementptr inbounds %struct.mbui_iterator_t* %94, i32 0, i32 3
  %96 = getelementptr inbounds %struct.mbchar* %95, i32 0, i32 2
  store i8 1, i8* %96, align 8
  %97 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %98 = getelementptr inbounds %struct.mbui_iterator_t* %97, i32 0, i32 1
  %99 = call i32 bitcast (i32 (%struct.__mbstate_t*)* @mbsinit to i32 (%struct.mbstate_t*)*)(%struct.mbstate_t* %98) nounwind readonly
  %100 = icmp ne i32 %99, 0
  br i1 %100, label %bb17, label %bb18

bb17:                                             ; preds = %bb16
  %101 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %102 = getelementptr inbounds %struct.mbui_iterator_t* %101, i32 0, i32 0
  store i8 0, i8* %102, align 8
  br label %bb18

bb18:                                             ; preds = %bb17, %bb16, %bb10, %bb8, %bb4
  %103 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %104 = getelementptr inbounds %struct.mbui_iterator_t* %103, i32 0, i32 2
  store i8 1, i8* %104, align 4
  br label %return

return:                                           ; preds = %entry, %bb18
  ret void
}

define void @mbuiter_multi_reloc(%struct.mbui_iterator_t* %iter, i64 %ptrdiff) nounwind inlinehint {
entry:
  %iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %ptrdiff_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %iter, %struct.mbui_iterator_t** %iter_addr
  store i64 %ptrdiff, i64* %ptrdiff_addr
  %0 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 3
  %2 = getelementptr inbounds %struct.mbchar* %1, i32 0, i32 0
  %3 = load i8** %2, align 8
  %4 = load i64* %ptrdiff_addr, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  %6 = load %struct.mbui_iterator_t** %iter_addr, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %6, i32 0, i32 3
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  store i8* %5, i8** %8, align 8
  ret void
}

define void @mbuiter_multi_copy(%struct.mbui_iterator_t* %new_iter, %struct.mbui_iterator_t* %old_iter) nounwind inlinehint {
entry:
  %new_iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %old_iter_addr = alloca %struct.mbui_iterator_t*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbui_iterator_t* %new_iter, %struct.mbui_iterator_t** %new_iter_addr
  store %struct.mbui_iterator_t* %old_iter, %struct.mbui_iterator_t** %old_iter_addr
  %0 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %1 = getelementptr inbounds %struct.mbui_iterator_t* %0, i32 0, i32 0
  %2 = load i8* %1, align 8
  %3 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %4 = getelementptr inbounds %struct.mbui_iterator_t* %3, i32 0, i32 0
  store i8 %2, i8* %4, align 8
  %5 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %5, i32 0, i32 0
  %7 = load i8* %6, align 8
  %toBool = icmp ne i8 %7, 0
  br i1 %toBool, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %9 = getelementptr inbounds %struct.mbui_iterator_t* %8, i32 0, i32 1
  %10 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %11 = getelementptr inbounds %struct.mbui_iterator_t* %10, i32 0, i32 1
  %12 = bitcast %struct.mbstate_t* %11 to i8*
  %13 = bitcast %struct.mbstate_t* %9 to i8*
  %14 = call i8* @memcpy(i8* %12, i8* %13, i64 8)
  br label %bb2

bb1:                                              ; preds = %entry
  %15 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %16 = getelementptr inbounds %struct.mbui_iterator_t* %15, i32 0, i32 1
  %17 = bitcast %struct.mbstate_t* %16 to i8*
  %18 = call i8* @memset(i8* %17, i32 0, i64 8)
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %19 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %20 = getelementptr inbounds %struct.mbui_iterator_t* %19, i32 0, i32 2
  %21 = load i8* %20, align 4
  %22 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %23 = getelementptr inbounds %struct.mbui_iterator_t* %22, i32 0, i32 2
  store i8 %21, i8* %23, align 4
  %24 = load %struct.mbui_iterator_t** %old_iter_addr, align 8
  %25 = getelementptr inbounds %struct.mbui_iterator_t* %24, i32 0, i32 3
  %26 = load %struct.mbui_iterator_t** %new_iter_addr, align 8
  %27 = getelementptr inbounds %struct.mbui_iterator_t* %26, i32 0, i32 3
  call void @mb_copy(%struct.mbchar* %27, %struct.mbchar* %25) nounwind
  ret void
}

define void @openat_save_fail(i32 %errnum) noreturn nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  %0 = call i8* @gettext(i8* getelementptr inbounds ([43 x i8]* @.str424, i64 0, i64 0)) nounwind
  %1 = volatile load i32* @exit_failure, align 4
  %2 = load i32* %errnum_addr, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 %1, i32 %2, i8* %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define void @openat_restore_fail(i32 %errnum) noreturn nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  %0 = call i8* @gettext(i8* getelementptr inbounds ([46 x i8]* @.str1425, i64 0, i64 0)) nounwind
  %1 = volatile load i32* @exit_failure, align 4
  %2 = load i32* %errnum_addr, align 4
  call void (i32, i32, i8*, ...)* @__error(i32 %1, i32 %2, i8* %0) nounwind
  call void @abort() noreturn nounwind
  unreachable
}

define i32 @save_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 1
  store i8* null, i8** %2, align 8
  %3 = call i32 (i8*, i32, ...)* @open_safer(i8* getelementptr inbounds ([2 x i8]* @.str428, i64 0, i64 0), i32 0) nounwind
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  store i32 %3, i32* %5, align 8
  %6 = load %struct.saved_cwd** %cwd_addr, align 8
  %7 = getelementptr inbounds %struct.saved_cwd* %6, i32 0, i32 0
  %8 = load i32* %7, align 8
  %9 = icmp slt i32 %8, 0
  br i1 %9, label %bb, label %bb4

bb:                                               ; preds = %entry
  %10 = call i8* @getcwd(i8* null, i64 0) nounwind
  %11 = load %struct.saved_cwd** %cwd_addr, align 8
  %12 = getelementptr inbounds %struct.saved_cwd* %11, i32 0, i32 1
  store i8* %10, i8** %12, align 8
  %13 = load %struct.saved_cwd** %cwd_addr, align 8
  %14 = getelementptr inbounds %struct.saved_cwd* %13, i32 0, i32 1
  %15 = load i8** %14, align 8
  %16 = icmp ne i8* %15, null
  br i1 %16, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  store i32 -1, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %17 = load i32* %iftmp.0, align 4
  store i32 %17, i32* %0, align 4
  br label %bb5

bb4:                                              ; preds = %entry
  %18 = load %struct.saved_cwd** %cwd_addr, align 8
  %19 = getelementptr inbounds %struct.saved_cwd* %18, i32 0, i32 0
  %20 = load i32* %19, align 8
  %21 = call i32 @set_cloexec_flag(i32 %20, i8 zeroext 1) nounwind
  store i32 0, i32* %0, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3
  %22 = load i32* %0, align 4
  store i32 %22, i32* %retval, align 4
  %retval6 = load i32* %retval
  ret i32 %retval6
}

define i32 @restore_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %1 = load %struct.saved_cwd** %cwd_addr, align 8
  %2 = getelementptr inbounds %struct.saved_cwd* %1, i32 0, i32 0
  %3 = load i32* %2, align 8
  %4 = icmp sge i32 %3, 0
  %5 = load %struct.saved_cwd** %cwd_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 0
  %7 = load i32* %6, align 8
  %8 = call i32 @fchdir(i32 %7) nounwind
  store i32 %8, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = getelementptr inbounds %struct.saved_cwd* %5, i32 0, i32 1
  %10 = load i8** %9, align 8
  %11 = call i32 @chdir_long(i8* %10) nounwind
  store i32 %11, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @free_cwd(%struct.saved_cwd* %cwd) nounwind {
entry:
  %cwd_addr = alloca %struct.saved_cwd*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.saved_cwd* %cwd, %struct.saved_cwd** %cwd_addr
  %0 = load %struct.saved_cwd** %cwd_addr, align 8
  %1 = getelementptr inbounds %struct.saved_cwd* %0, i32 0, i32 0
  %2 = load i32* %1, align 8
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  %4 = load %struct.saved_cwd** %cwd_addr, align 8
  %5 = getelementptr inbounds %struct.saved_cwd* %4, i32 0, i32 0
  %6 = load i32* %5, align 8
  %7 = call i32 @close(i32 %6) nounwind
  br label %bb1

bb1:                                              ; preds = %bb, %entry
  %8 = load %struct.saved_cwd** %cwd_addr, align 8
  %9 = getelementptr inbounds %struct.saved_cwd* %8, i32 0, i32 1
  %10 = load i8** %9, align 8
  call void @free(i8* %10) nounwind
  ret void
}

define i32 @mem_cd_iconv(i8* %src, i64 %srclen, i8* %cd, i8** %resultp, i64* %lengthp) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %srclen_addr = alloca i64, align 8
  %cd_addr = alloca i8*, align 8
  %resultp_addr = alloca i8**, align 8
  %lengthp_addr = alloca i64*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %length = alloca i64
  %result = alloca i8*
  %count = alloca i64
  %tmp = alloca %8
  %inptr = alloca i8*
  %insize = alloca i64
  %outptr = alloca i8*
  %outsize = alloca i64
  %res = alloca i64
  %outptr8 = alloca i8*
  %outsize9 = alloca i64
  %res10 = alloca i64
  %inptr20 = alloca i8*
  %insize21 = alloca i64
  %outptr22 = alloca i8*
  %outsize23 = alloca i64
  %res25 = alloca i64
  %res30 = alloca i64
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i64 %srclen, i64* %srclen_addr
  store i8* %cd, i8** %cd_addr
  store i8** %resultp, i8*** %resultp_addr
  store i64* %lengthp, i64** %lengthp_addr
  %1 = load i8** %cd_addr, align 8
  %2 = call i64 @iconv(i8* %1, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  store i64 0, i64* %count, align 8
  %3 = load i8** %src_addr, align 8
  store i8* %3, i8** %inptr, align 8
  %4 = load i64* %srclen_addr, align 8
  store i64 %4, i64* %insize, align 8
  br label %bb6

bb:                                               ; preds = %bb6
  %5 = getelementptr inbounds %8* %tmp, i32 0, i32 0
  %6 = bitcast i32* %5 to [4096 x i8]*
  %7 = getelementptr inbounds [4096 x i8]* %6, i64 0, i64 0
  store i8* %7, i8** %outptr, align 8
  store i64 4096, i64* %outsize, align 8
  %8 = load i8** %cd_addr, align 8
  %9 = call i64 @iconv(i8* %8, i8** noalias %inptr, i64* noalias %insize, i8** noalias %outptr, i64* noalias %outsize) nounwind
  store i64 %9, i64* %res, align 8
  %10 = load i64* %res, align 8
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %bb2, label %bb5

bb2:                                              ; preds = %bb
  %12 = call i32* @__errno_location() nounwind readnone
  %13 = load i32* %12, align 4
  %14 = icmp ne i32 %13, 7
  br i1 %14, label %bb3, label %bb5

bb3:                                              ; preds = %bb2
  %15 = call i32* @__errno_location() nounwind readnone
  %16 = load i32* %15, align 4
  %17 = icmp eq i32 %16, 22
  br i1 %17, label %bb7, label %bb4

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4
  br label %bb36

bb5:                                              ; preds = %bb2, %bb
  %18 = load i8** %outptr, align 8
  %19 = ptrtoint i8* %18 to i64
  %20 = getelementptr inbounds %8* %tmp, i32 0, i32 0
  %21 = bitcast i32* %20 to [4096 x i8]*
  %22 = ptrtoint [4096 x i8]* %21 to i64
  %23 = sub nsw i64 %19, %22
  %24 = load i64* %count, align 8
  %25 = add i64 %23, %24
  store i64 %25, i64* %count, align 8
  br label %bb6

bb6:                                              ; preds = %bb5, %entry
  %26 = load i64* %insize, align 8
  %27 = icmp ne i64 %26, 0
  br i1 %27, label %bb, label %bb7

bb7:                                              ; preds = %bb6, %bb3
  %28 = getelementptr inbounds %8* %tmp, i32 0, i32 0
  %29 = bitcast i32* %28 to [4096 x i8]*
  %30 = getelementptr inbounds [4096 x i8]* %29, i64 0, i64 0
  store i8* %30, i8** %outptr8, align 8
  store i64 4096, i64* %outsize9, align 8
  %31 = load i8** %cd_addr, align 8
  %32 = call i64 @iconv(i8* %31, i8** noalias null, i64* noalias null, i8** noalias %outptr8, i64* noalias %outsize9) nounwind
  store i64 %32, i64* %res10, align 8
  %33 = load i64* %res10, align 8
  %34 = icmp eq i64 %33, -1
  br i1 %34, label %bb11, label %bb12

bb11:                                             ; preds = %bb7
  store i32 -1, i32* %0, align 4
  br label %bb36

bb12:                                             ; preds = %bb7
  %35 = load i8** %outptr8, align 8
  %36 = ptrtoint i8* %35 to i64
  %37 = getelementptr inbounds %8* %tmp, i32 0, i32 0
  %38 = bitcast i32* %37 to [4096 x i8]*
  %39 = ptrtoint [4096 x i8]* %38 to i64
  %40 = sub nsw i64 %36, %39
  %41 = load i64* %count, align 8
  %42 = add i64 %40, %41
  store i64 %42, i64* %count, align 8
  %43 = load i64* %count, align 8
  store i64 %43, i64* %length, align 8
  %44 = load i64* %length, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %bb13, label %bb14

bb13:                                             ; preds = %bb12
  %46 = load i64** %lengthp_addr, align 8
  store i64 0, i64* %46, align 8
  store i32 0, i32* %0, align 4
  br label %bb36

bb14:                                             ; preds = %bb12
  %47 = load i8*** %resultp_addr, align 8
  %48 = load i8** %47, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %bb17, label %bb15

bb15:                                             ; preds = %bb14
  %50 = load i64** %lengthp_addr, align 8
  %51 = load i64* %50, align 8
  %52 = load i64* %length, align 8
  %53 = icmp ult i64 %51, %52
  br i1 %53, label %bb17, label %bb16

bb16:                                             ; preds = %bb15
  %54 = load i8*** %resultp_addr, align 8
  %55 = load i8** %54, align 8
  store i8* %55, i8** %result, align 8
  br label %bb19

bb17:                                             ; preds = %bb15, %bb14
  %56 = load i64* %length, align 8
  %57 = call noalias i8* @malloc(i64 %56) nounwind
  store i8* %57, i8** %result, align 8
  %58 = load i8** %result, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %bb18, label %bb19

bb18:                                             ; preds = %bb17
  %60 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %60, align 4
  store i32 -1, i32* %0, align 4
  br label %bb36

bb19:                                             ; preds = %bb17, %bb16
  %61 = load i8** %cd_addr, align 8
  %62 = call i64 @iconv(i8* %61, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  %63 = load i8** %src_addr, align 8
  store i8* %63, i8** %inptr20, align 8
  %64 = load i64* %srclen_addr, align 8
  store i64 %64, i64* %insize21, align 8
  %65 = load i8** %result, align 8
  store i8* %65, i8** %outptr22, align 8
  %66 = load i64* %length, align 8
  store i64 %66, i64* %outsize23, align 8
  br label %bb28

bb24:                                             ; preds = %bb28
  %67 = load i8** %cd_addr, align 8
  %68 = call i64 @iconv(i8* %67, i8** noalias %inptr20, i64* noalias %insize21, i8** noalias %outptr22, i64* noalias %outsize23) nounwind
  store i64 %68, i64* %res25, align 8
  %69 = load i64* %res25, align 8
  %70 = icmp eq i64 %69, -1
  br i1 %70, label %bb27, label %bb28

bb27:                                             ; preds = %bb24
  %71 = call i32* @__errno_location() nounwind readnone
  %72 = load i32* %71, align 4
  %73 = icmp eq i32 %72, 22
  br i1 %73, label %bb29, label %fail

bb28:                                             ; preds = %bb24, %bb19
  %74 = load i64* %insize21, align 8
  %75 = icmp ne i64 %74, 0
  br i1 %75, label %bb24, label %bb29

bb29:                                             ; preds = %bb28, %bb27
  %76 = load i8** %cd_addr, align 8
  %77 = call i64 @iconv(i8* %76, i8** noalias null, i64* noalias null, i8** noalias %outptr22, i64* noalias %outsize23) nounwind
  store i64 %77, i64* %res30, align 8
  %78 = load i64* %res30, align 8
  %79 = icmp eq i64 %78, -1
  br i1 %79, label %fail, label %bb31

bb31:                                             ; preds = %bb29
  %80 = load i64* %outsize23, align 8
  %81 = icmp ne i64 %80, 0
  br i1 %81, label %bb32, label %bb33

bb32:                                             ; preds = %bb31
  call void @abort() noreturn nounwind
  unreachable

bb33:                                             ; preds = %bb31
  %82 = load i8*** %resultp_addr, align 8
  %83 = load i8** %result, align 8
  store i8* %83, i8** %82, align 8
  %84 = load i64** %lengthp_addr, align 8
  %85 = load i64* %length, align 8
  store i64 %85, i64* %84, align 8
  store i32 0, i32* %0, align 4
  br label %bb36

fail:                                             ; preds = %bb29, %bb27
  %86 = load i8*** %resultp_addr, align 8
  %87 = load i8** %86, align 8
  %88 = load i8** %result, align 8
  %89 = icmp ne i8* %87, %88
  br i1 %89, label %bb34, label %bb35

bb34:                                             ; preds = %fail
  %90 = call i32* @__errno_location() nounwind readnone
  %91 = load i32* %90, align 4
  store i32 %91, i32* %saved_errno, align 4
  %92 = load i8** %result, align 8
  call void @free(i8* %92) nounwind
  %93 = call i32* @__errno_location() nounwind readnone
  %94 = load i32* %saved_errno, align 4
  store i32 %94, i32* %93, align 4
  br label %bb35

bb35:                                             ; preds = %bb34, %fail
  store i32 -1, i32* %0, align 4
  br label %bb36

bb36:                                             ; preds = %bb35, %bb33, %bb18, %bb13, %bb11, %bb4
  %95 = load i32* %0, align 4
  store i32 %95, i32* %retval, align 4
  %retval37 = load i32* %retval
  ret i32 %retval37
}

declare i64 @iconv(i8*, i8** noalias, i64* noalias, i8** noalias, i64* noalias)

define i8* @str_cd_iconv(i8* %src, i8* %cd) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %cd_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %result_size = alloca i64
  %length = alloca i64
  %inptr = alloca i8*
  %inbytes_remaining = alloca i64
  %approx_sqrt_SIZE_MAX = alloca i64
  %outptr = alloca i8*
  %outbytes_remaining = alloca i64
  %res = alloca i64
  %used = alloca i64
  %newsize = alloca i64
  %newresult = alloca i8*
  %res14 = alloca i64
  %used17 = alloca i64
  %newsize18 = alloca i64
  %newresult19 = alloca i8*
  %smaller_result = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %cd, i8** %cd_addr
  %1 = load i8** %src_addr, align 8
  store i8* %1, i8** %inptr, align 8
  %2 = load i8** %src_addr, align 8
  %3 = call i64 @strlen(i8* %2) nounwind readonly
  store i64 %3, i64* %inbytes_remaining, align 8
  %4 = load i64* %inbytes_remaining, align 8
  store i64 %4, i64* %result_size, align 8
  store i64 4294967295, i64* %approx_sqrt_SIZE_MAX, align 8
  %5 = load i64* %approx_sqrt_SIZE_MAX, align 8
  %int_cast_to_i64 = bitcast i64 16 to i64
  %6 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %7 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %7, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %entry
  call void @klee_disable_symbex() nounwind
  %8 = udiv i64 %5, 16
  %9 = load i64* %result_size, align 8
  %10 = icmp uge i64 %8, %9
  br i1 %10, label %bb, label %bb1

bb:                                               ; preds = %klee_div_zero_check.exit
  %11 = load i64* %result_size, align 8
  %12 = mul i64 %11, 16
  store i64 %12, i64* %result_size, align 8
  br label %bb1

bb1:                                              ; preds = %bb, %klee_div_zero_check.exit
  %13 = load i64* %result_size, align 8
  %14 = add i64 %13, 1
  store i64 %14, i64* %result_size, align 8
  %15 = load i64* %result_size, align 8
  %16 = call noalias i8* @malloc(i64 %15) nounwind
  store i8* %16, i8** %result, align 8
  %17 = load i8** %result, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %19 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %19, align 4
  store i8* null, i8** %0, align 8
  br label %bb28

bb3:                                              ; preds = %bb1
  %20 = load i8** %cd_addr, align 8
  %21 = call i64 @iconv(i8* %20, i8** noalias null, i64* noalias null, i8** noalias null, i64* noalias null) nounwind
  %22 = load i8** %result, align 8
  store i8* %22, i8** %outptr, align 8
  %23 = load i64* %result_size, align 8
  %24 = sub i64 %23, 1
  store i64 %24, i64* %outbytes_remaining, align 8
  br label %bb4

bb4:                                              ; preds = %bb12, %bb3
  %25 = load i8** %cd_addr, align 8
  %26 = call i64 @iconv(i8* %25, i8** noalias %inptr, i64* noalias %inbytes_remaining, i8** noalias %outptr, i64* noalias %outbytes_remaining) nounwind
  store i64 %26, i64* %res, align 8
  %27 = load i64* %res, align 8
  %28 = icmp eq i64 %27, -1
  br i1 %28, label %bb6, label %bb13

bb6:                                              ; preds = %bb4
  %29 = call i32* @__errno_location() nounwind readnone
  %30 = load i32* %29, align 4
  %31 = icmp eq i32 %30, 22
  br i1 %31, label %bb13, label %bb7

bb7:                                              ; preds = %bb6
  %32 = call i32* @__errno_location() nounwind readnone
  %33 = load i32* %32, align 4
  %34 = icmp eq i32 %33, 7
  br i1 %34, label %bb8, label %failed

bb8:                                              ; preds = %bb7
  %35 = load i8** %outptr, align 8
  %36 = ptrtoint i8* %35 to i64
  %37 = load i8** %result, align 8
  %38 = ptrtoint i8* %37 to i64
  %39 = sub nsw i64 %36, %38
  store i64 %39, i64* %used, align 8
  %40 = load i64* %result_size, align 8
  %41 = mul i64 %40, 2
  store i64 %41, i64* %newsize, align 8
  %42 = load i64* %newsize, align 8
  %43 = load i64* %result_size, align 8
  %44 = icmp ule i64 %42, %43
  br i1 %44, label %bb9, label %bb10

bb9:                                              ; preds = %bb8
  %45 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %45, align 4
  br label %failed

bb10:                                             ; preds = %bb8
  %46 = load i8** %result, align 8
  %47 = load i64* %newsize, align 8
  %48 = call i8* @realloc(i8* %46, i64 %47) nounwind
  store i8* %48, i8** %newresult, align 8
  %49 = load i8** %newresult, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  %51 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %51, align 4
  br label %failed

bb12:                                             ; preds = %bb10
  %52 = load i8** %newresult, align 8
  store i8* %52, i8** %result, align 8
  %53 = load i64* %newsize, align 8
  store i64 %53, i64* %result_size, align 8
  %54 = load i8** %result, align 8
  %55 = load i64* %used, align 8
  %56 = getelementptr inbounds i8* %54, i64 %55
  store i8* %56, i8** %outptr, align 8
  %57 = load i64* %result_size, align 8
  %58 = load i64* %used, align 8
  %59 = sub i64 %57, %58
  %60 = sub i64 %59, 1
  store i64 %60, i64* %outbytes_remaining, align 8
  br label %bb4

bb13:                                             ; preds = %bb23, %bb6, %bb4
  %61 = load i8** %cd_addr, align 8
  %62 = call i64 @iconv(i8* %61, i8** noalias null, i64* noalias null, i8** noalias %outptr, i64* noalias %outbytes_remaining) nounwind
  store i64 %62, i64* %res14, align 8
  %63 = load i64* %res14, align 8
  %64 = icmp eq i64 %63, -1
  br i1 %64, label %bb15, label %bb24

bb15:                                             ; preds = %bb13
  %65 = call i32* @__errno_location() nounwind readnone
  %66 = load i32* %65, align 4
  %67 = icmp eq i32 %66, 7
  br i1 %67, label %bb16, label %failed

bb16:                                             ; preds = %bb15
  %68 = load i8** %outptr, align 8
  %69 = ptrtoint i8* %68 to i64
  %70 = load i8** %result, align 8
  %71 = ptrtoint i8* %70 to i64
  %72 = sub nsw i64 %69, %71
  store i64 %72, i64* %used17, align 8
  %73 = load i64* %result_size, align 8
  %74 = mul i64 %73, 2
  store i64 %74, i64* %newsize18, align 8
  %75 = load i64* %newsize18, align 8
  %76 = load i64* %result_size, align 8
  %77 = icmp ule i64 %75, %76
  br i1 %77, label %bb20, label %bb21

bb20:                                             ; preds = %bb16
  %78 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %78, align 4
  br label %failed

bb21:                                             ; preds = %bb16
  %79 = load i8** %result, align 8
  %80 = load i64* %newsize18, align 8
  %81 = call i8* @realloc(i8* %79, i64 %80) nounwind
  store i8* %81, i8** %newresult19, align 8
  %82 = load i8** %newresult19, align 8
  %83 = icmp eq i8* %82, null
  br i1 %83, label %bb22, label %bb23

bb22:                                             ; preds = %bb21
  %84 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %84, align 4
  br label %failed

bb23:                                             ; preds = %bb21
  %85 = load i8** %newresult19, align 8
  store i8* %85, i8** %result, align 8
  %86 = load i64* %newsize18, align 8
  store i64 %86, i64* %result_size, align 8
  %87 = load i8** %result, align 8
  %88 = load i64* %used17, align 8
  %89 = getelementptr inbounds i8* %87, i64 %88
  store i8* %89, i8** %outptr, align 8
  %90 = load i64* %result_size, align 8
  %91 = load i64* %used17, align 8
  %92 = sub i64 %90, %91
  %93 = sub i64 %92, 1
  store i64 %93, i64* %outbytes_remaining, align 8
  br label %bb13

bb24:                                             ; preds = %bb13
  %94 = load i8** %outptr, align 8
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds i8* %94, i64 1
  store i8* %95, i8** %outptr, align 8
  %96 = load i8** %outptr, align 8
  %97 = ptrtoint i8* %96 to i64
  %98 = load i8** %result, align 8
  %99 = ptrtoint i8* %98 to i64
  %100 = sub nsw i64 %97, %99
  store i64 %100, i64* %length, align 8
  %101 = load i64* %length, align 8
  %102 = load i64* %result_size, align 8
  %103 = icmp ult i64 %101, %102
  br i1 %103, label %bb25, label %bb27

bb25:                                             ; preds = %bb24
  %104 = load i8** %result, align 8
  %105 = load i64* %length, align 8
  %106 = call i8* @realloc(i8* %104, i64 %105) nounwind
  store i8* %106, i8** %smaller_result, align 8
  %107 = load i8** %smaller_result, align 8
  %108 = icmp ne i8* %107, null
  br i1 %108, label %bb26, label %bb27

bb26:                                             ; preds = %bb25
  %109 = load i8** %smaller_result, align 8
  store i8* %109, i8** %result, align 8
  br label %bb27

bb27:                                             ; preds = %bb26, %bb25, %bb24
  %110 = load i8** %result, align 8
  store i8* %110, i8** %0, align 8
  br label %bb28

failed:                                           ; preds = %bb22, %bb20, %bb15, %bb11, %bb9, %bb7
  %111 = call i32* @__errno_location() nounwind readnone
  %112 = load i32* %111, align 4
  store i32 %112, i32* %saved_errno, align 4
  %113 = load i8** %result, align 8
  call void @free(i8* %113) nounwind
  %114 = call i32* @__errno_location() nounwind readnone
  %115 = load i32* %saved_errno, align 4
  store i32 %115, i32* %114, align 4
  store i8* null, i8** %0, align 8
  br label %bb28

bb28:                                             ; preds = %failed, %bb27, %bb2
  %116 = load i8** %0, align 8
  store i8* %116, i8** %retval, align 8
  %retval29 = load i8** %retval
  ret i8* %retval29
}

define i8* @str_iconv(i8* %src, i8* %from_codeset, i8* %to_codeset) nounwind {
entry:
  %src_addr = alloca i8*, align 8
  %from_codeset_addr = alloca i8*, align 8
  %to_codeset_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %result = alloca i8*
  %cd = alloca i8*
  %result5 = alloca i8*
  %saved_errno = alloca i32
  %saved_errno11 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %src, i8** %src_addr
  store i8* %from_codeset, i8** %from_codeset_addr
  store i8* %to_codeset, i8** %to_codeset_addr
  %1 = load i8** %src_addr, align 8
  %2 = load i8* %1, align 1
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %bb1, label %bb

bb:                                               ; preds = %entry
  %4 = load i8** %from_codeset_addr, align 8
  %5 = load i8** %to_codeset_addr, align 8
  %6 = call i32 @c_strcasecmp(i8* %4, i8* %5) nounwind readonly
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %bb1, label %bb4

bb1:                                              ; preds = %bb, %entry
  %8 = load i8** %src_addr, align 8
  %9 = call noalias i8* @strdup(i8* %8) nounwind
  store i8* %9, i8** %result, align 8
  %10 = load i8** %result, align 8
  %11 = icmp eq i8* %10, null
  br i1 %11, label %bb2, label %bb3

bb2:                                              ; preds = %bb1
  %12 = call i32* @__errno_location() nounwind readnone
  store i32 12, i32* %12, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %13 = load i8** %result, align 8
  store i8* %13, i8** %0, align 8
  br label %bb13

bb4:                                              ; preds = %bb
  %14 = load i8** %to_codeset_addr, align 8
  %15 = load i8** %from_codeset_addr, align 8
  %16 = call i8* @iconv_open(i8* %14, i8* %15) nounwind
  store i8* %16, i8** %cd, align 8
  %17 = load i8** %cd, align 8
  %18 = icmp eq i8* %17, inttoptr (i64 -1 to i8*)
  br i1 %18, label %bb6, label %bb7

bb6:                                              ; preds = %bb4
  store i8* null, i8** %0, align 8
  br label %bb13

bb7:                                              ; preds = %bb4
  %19 = load i8** %src_addr, align 8
  %20 = load i8** %cd, align 8
  %21 = call i8* @str_cd_iconv(i8* %19, i8* %20) nounwind
  store i8* %21, i8** %result5, align 8
  %22 = load i8** %result5, align 8
  %23 = icmp eq i8* %22, null
  br i1 %23, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %24 = call i32* @__errno_location() nounwind readnone
  %25 = load i32* %24, align 4
  store i32 %25, i32* %saved_errno, align 4
  %26 = load i8** %cd, align 8
  %27 = call i32 @iconv_close(i8* %26) nounwind
  %28 = call i32* @__errno_location() nounwind readnone
  %29 = load i32* %saved_errno, align 4
  store i32 %29, i32* %28, align 4
  br label %bb12

bb9:                                              ; preds = %bb7
  %30 = load i8** %cd, align 8
  %31 = call i32 @iconv_close(i8* %30) nounwind
  %32 = icmp slt i32 %31, 0
  br i1 %32, label %bb10, label %bb12

bb10:                                             ; preds = %bb9
  %33 = call i32* @__errno_location() nounwind readnone
  %34 = load i32* %33, align 4
  store i32 %34, i32* %saved_errno11, align 4
  %35 = load i8** %result5, align 8
  call void @free(i8* %35) nounwind
  %36 = call i32* @__errno_location() nounwind readnone
  %37 = load i32* %saved_errno11, align 4
  store i32 %37, i32* %36, align 4
  store i8* null, i8** %0, align 8
  br label %bb13

bb12:                                             ; preds = %bb9, %bb8
  %38 = load i8** %result5, align 8
  store i8* %38, i8** %0, align 8
  br label %bb13

bb13:                                             ; preds = %bb12, %bb10, %bb6, %bb3
  %39 = load i8** %0, align 8
  store i8* %39, i8** %retval, align 8
  %retval14 = load i8** %retval
  ret i8* %retval14
}

declare i8* @iconv_open(i8*, i8*)

declare i32 @iconv_close(i8*)

define i64 @strnlen1(i8* %string, i64 %maxlen) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %maxlen_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %end = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  store i64 %maxlen, i64* %maxlen_addr
  %1 = load i8** %string_addr, align 8
  %2 = load i64* %maxlen_addr, align 8
  %3 = call i8* @memchr(i8* %1, i32 0, i64 %2) nounwind readonly
  store i8* %3, i8** %end, align 8
  %4 = load i8** %end, align 8
  %5 = icmp ne i8* %4, null
  br i1 %5, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = load i8** %end, align 8
  %7 = ptrtoint i8* %6 to i64
  %8 = load i8** %string_addr, align 8
  %9 = ptrtoint i8* %8 to i64
  %10 = sub nsw i64 %7, %9
  %11 = add nsw i64 %10, 1
  store i64 %11, i64* %0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %12 = load i64* %maxlen_addr, align 8
  store i64 %12, i64* %0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %13 = load i64* %0, align 8
  store i64 %13, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i64 @xsum(i64 %size1, i64 %size2) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %sum = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = add i64 %1, %2
  store i64 %3, i64* %sum, align 8
  %4 = load i64* %sum, align 8
  %5 = load i64* %size1_addr, align 8
  %6 = icmp uge i64 %4, %5
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %7 = load i64* %sum, align 8
  store i64 %7, i64* %iftmp.0, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  store i64 -1, i64* %iftmp.0, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %8 = load i64* %iftmp.0, align 8
  store i64 %8, i64* %0, align 8
  %9 = load i64* %0, align 8
  store i64 %9, i64* %retval, align 8
  %retval3 = load i64* %retval
  ret i64 %retval3
}

define i64 @xsum3(i64 %size1, i64 %size2, i64 %size3) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %size3_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  store i64 %size3, i64* %size3_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = call i64 @xsum(i64 %1, i64 %2) nounwind readonly
  %4 = load i64* %size3_addr, align 8
  %5 = call i64 @xsum(i64 %3, i64 %4) nounwind readonly
  store i64 %5, i64* %0, align 8
  %6 = load i64* %0, align 8
  store i64 %6, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @xsum4(i64 %size1, i64 %size2, i64 %size3, i64 %size4) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %size3_addr = alloca i64, align 8
  %size4_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  store i64 %size3, i64* %size3_addr
  store i64 %size4, i64* %size4_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = call i64 @xsum(i64 %1, i64 %2) nounwind readonly
  %4 = load i64* %size3_addr, align 8
  %5 = call i64 @xsum(i64 %3, i64 %4) nounwind readonly
  %6 = load i64* %size4_addr, align 8
  %7 = call i64 @xsum(i64 %5, i64 %6) nounwind readonly
  store i64 %7, i64* %0, align 8
  %8 = load i64* %0, align 8
  store i64 %8, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define i64 @xmax(i64 %size1, i64 %size2) nounwind readonly inlinehint {
entry:
  %size1_addr = alloca i64, align 8
  %size2_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 %size1, i64* %size1_addr
  store i64 %size2, i64* %size2_addr
  %1 = load i64* %size1_addr, align 8
  %2 = load i64* %size2_addr, align 8
  %3 = icmp uge i64 %1, %2
  %max = select i1 %3, i64 %1, i64 %2
  store i64 %max, i64* %0, align 8
  %4 = load i64* %0, align 8
  store i64 %4, i64* %retval, align 8
  %retval1 = load i64* %retval
  ret i64 %retval1
}

define internal void @cdb_init(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  store i32 -100, i32* %1, align 4
  ret void
}

define internal i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = call i32 @fchdir(i32 %3) nounwind
  store i32 %4, i32* %0, align 4
  %5 = load i32* %0, align 4
  store i32 %5, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define internal void @cdb_free(%struct.cd_buf* %cdb) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %close_fail = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  %0 = load %struct.cd_buf** %cdb_addr, align 8
  %1 = getelementptr inbounds %struct.cd_buf* %0, i32 0, i32 0
  %2 = load i32* %1, align 4
  %3 = icmp sge i32 %2, 0
  br i1 %3, label %bb, label %return

bb:                                               ; preds = %entry
  %4 = load %struct.cd_buf** %cdb_addr, align 8
  %5 = getelementptr inbounds %struct.cd_buf* %4, i32 0, i32 0
  %6 = load i32* %5, align 4
  %7 = call i32 @close(i32 %6) nounwind
  %8 = icmp ne i32 %7, 0
  %9 = zext i1 %8 to i8
  store i8 %9, i8* %close_fail, align 1
  %10 = load i8* %close_fail, align 1
  %toBool = icmp ne i8 %10, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot1 = zext i1 %toBoolnot to i8
  %toBool3 = icmp ne i8 %toBoolnot1, 0
  %toBool3not = xor i1 %toBool3, true
  %toBool3not4 = zext i1 %toBool3not to i8
  %toBool6 = icmp ne i8 %toBool3not4, 0
  br i1 %toBool6, label %bb7, label %return

bb7:                                              ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([13 x i8]* @.str437, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 64, i8* getelementptr inbounds ([9 x i8]* @__PRETTY_FUNCTION__.3949, i64 0, i64 0)) noreturn n
  unreachable

return:                                           ; preds = %entry, %bb
  ret void
}

define internal i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %dir) nounwind {
entry:
  %cdb_addr = alloca %struct.cd_buf*, align 8
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %new_fd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.cd_buf* %cdb, %struct.cd_buf** %cdb_addr
  store i8* %dir, i8** %dir_addr
  %1 = load %struct.cd_buf** %cdb_addr, align 8
  %2 = getelementptr inbounds %struct.cd_buf* %1, i32 0, i32 0
  %3 = load i32* %2, align 4
  %4 = load i8** %dir_addr, align 8
  %5 = call i32 (i32, i8*, i32, ...)* @openat(i32 %3, i8* %4, i32 67840) nounwind
  store i32 %5, i32* %new_fd, align 4
  %6 = load i32* %new_fd, align 4
  %7 = icmp slt i32 %6, 0
  br i1 %7, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 -1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %8 = load %struct.cd_buf** %cdb_addr, align 8
  call void @cdb_free(%struct.cd_buf* %8) nounwind
  %9 = load %struct.cd_buf** %cdb_addr, align 8
  %10 = getelementptr inbounds %struct.cd_buf* %9, i32 0, i32 0
  %11 = load i32* %new_fd, align 4
  store i32 %11, i32* %10, align 4
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %12 = load i32* %0, align 4
  store i32 %12, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define internal i8* @find_non_slash(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %n_slash = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8
  %2 = call i64 @strspn(i8* %1, i8* getelementptr inbounds ([2 x i8]* @.str2439, i64 0, i64 0)) nounwind readonly
  store i64 %2, i64* %n_slash, align 8
  %3 = load i8** %s_addr, align 8
  %4 = load i64* %n_slash, align 8
  %5 = getelementptr inbounds i8* %3, i64 %4
  store i8* %5, i8** %0, align 8
  %6 = load i8** %0, align 8
  store i8* %6, i8** %retval, align 8
  %retval1 = load i8** %retval
  ret i8* %retval1
}

define i32 @chdir_long(i8* %dir) nounwind {
entry:
  %dir_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %e = alloca i32
  %len = alloca i64
  %dir_end = alloca i8*
  %cdb = alloca %struct.cd_buf
  %n_leading_slash = alloca i64
  %err = alloca i32
  %slash = alloca i8*
  %err20 = alloca i32
  %slash21 = alloca i8*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dir, i8** %dir_addr
  %1 = load i8** %dir_addr, align 8
  %2 = call i32 @chdir(i8* %1) nounwind
  store i32 %2, i32* %e, align 4
  %3 = load i32* %e, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %bb1, label %bb

bb:                                               ; preds = %entry
  %5 = call i32* @__errno_location() nounwind readnone
  %6 = load i32* %5, align 4
  %7 = icmp ne i32 %6, 36
  br i1 %7, label %bb1, label %bb2

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %e, align 4
  store i32 %8, i32* %0, align 4
  br label %bb32

bb2:                                              ; preds = %bb
  %9 = load i8** %dir_addr, align 8
  %10 = call i64 @strlen(i8* %9) nounwind readonly
  store i64 %10, i64* %len, align 8
  %11 = load i8** %dir_addr, align 8
  %12 = load i64* %len, align 8
  %13 = getelementptr inbounds i8* %11, i64 %12
  store i8* %13, i8** %dir_end, align 8
  call void @cdb_init(%struct.cd_buf* %cdb) nounwind
  %14 = load i64* %len, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([8 x i8]* @.str3440, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 126, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3985, i64 0, i64 0)) noreturn
  unreachable

bb4:                                              ; preds = %bb2
  %16 = load i64* %len, align 8
  %17 = icmp ule i64 %16, 4095
  br i1 %17, label %bb5, label %bb6

bb5:                                              ; preds = %bb4
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str4441, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3985, i64 0, i64 0)) noretur
  unreachable

bb6:                                              ; preds = %bb4
  %18 = load i8** %dir_addr, align 8
  %19 = call i64 @strspn(i8* %18, i8* getelementptr inbounds ([2 x i8]* @.str2439, i64 0, i64 0)) nounwind readonly
  store i64 %19, i64* %n_leading_slash, align 8
  %20 = load i64* %n_leading_slash, align 8
  %21 = icmp eq i64 %20, 2
  br i1 %21, label %bb7, label %bb11

bb7:                                              ; preds = %bb6
  %22 = load i8** %dir_end, align 8
  %23 = ptrtoint i8* %22 to i64
  %24 = load i8** %dir_addr, align 8
  %25 = getelementptr inbounds i8* %24, i64 3
  %26 = ptrtoint i8* %25 to i64
  %27 = sub nsw i64 %23, %26
  %28 = load i8** %dir_addr, align 8
  %29 = getelementptr inbounds i8* %28, i64 3
  %30 = call i8* @memchr(i8* %29, i32 47, i64 %27) nounwind readonly
  store i8* %30, i8** %slash, align 8
  %31 = load i8** %slash, align 8
  %32 = icmp eq i8* %31, null
  br i1 %32, label %bb8, label %bb9

bb8:                                              ; preds = %bb7
  %33 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %33, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb9:                                              ; preds = %bb7
  %34 = load i8** %slash, align 8
  store i8 0, i8* %34, align 1
  %35 = load i8** %dir_addr, align 8
  %36 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %35) nounwind
  store i32 %36, i32* %err, align 4
  %37 = load i8** %slash, align 8
  store i8 47, i8* %37, align 1
  %38 = load i32* %err, align 4
  %39 = icmp ne i32 %38, 0
  br i1 %39, label %Fail, label %bb10

bb10:                                             ; preds = %bb9
  %40 = load i8** %slash, align 8
  %41 = getelementptr inbounds i8* %40, i64 1
  %42 = call i8* @find_non_slash(i8* %41) nounwind readonly
  store i8* %42, i8** %dir_addr, align 8
  br label %bb14

bb11:                                             ; preds = %bb6
  %43 = load i64* %n_leading_slash, align 8
  %44 = icmp ne i64 %43, 0
  br i1 %44, label %bb12, label %bb14

bb12:                                             ; preds = %bb11
  %45 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* getelementptr inbounds ([2 x i8]* @.str2439, i64 0, i64 0)) nounwind
  %46 = icmp ne i32 %45, 0
  br i1 %46, label %Fail, label %bb13

bb13:                                             ; preds = %bb12
  %47 = load i8** %dir_addr, align 8
  %48 = load i64* %n_leading_slash, align 8
  %49 = getelementptr inbounds i8* %47, i64 %48
  store i8* %49, i8** %dir_addr, align 8
  br label %bb14

bb14:                                             ; preds = %bb13, %bb11, %bb10
  %50 = load i8** %dir_addr, align 8
  %51 = load i8* %50, align 1
  %52 = icmp eq i8 %51, 47
  br i1 %52, label %bb15, label %bb16

bb15:                                             ; preds = %bb14
  call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str5442, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 162, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3985, i64 0, i64 0)) noretur
  unreachable

bb16:                                             ; preds = %bb14
  %53 = load i8** %dir_addr, align 8
  %54 = load i8** %dir_end, align 8
  %55 = icmp ugt i8* %53, %54
  br i1 %55, label %bb17, label %bb27

bb17:                                             ; preds = %bb16
  call void @__assert_fail(i8* getelementptr inbounds ([15 x i8]* @.str6443, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 163, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3985, i64 0, i64 0)) noretur
  unreachable

bb19:                                             ; preds = %bb27
  %56 = call i8* @memrchr(i8* %81, i32 47, i64 4096) nounwind readonly
  store i8* %56, i8** %slash21, align 8
  %57 = load i8** %slash21, align 8
  %58 = icmp eq i8* %57, null
  br i1 %58, label %bb22, label %bb23

bb22:                                             ; preds = %bb19
  %59 = call i32* @__errno_location() nounwind readnone
  store i32 36, i32* %59, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb23:                                             ; preds = %bb19
  %60 = load i8** %slash21, align 8
  store i8 0, i8* %60, align 1
  %61 = load i8** %slash21, align 8
  %62 = ptrtoint i8* %61 to i64
  %63 = load i8** %dir_addr, align 8
  %64 = ptrtoint i8* %63 to i64
  %65 = sub nsw i64 %62, %64
  %66 = icmp sgt i64 %65, 4095
  br i1 %66, label %bb24, label %bb25

bb24:                                             ; preds = %bb23
  call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str7444, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8]* @.str1438, i64 0, i64 0), i32 179, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.3985, i64 0, i64 0)) noretur
  unreachable

bb25:                                             ; preds = %bb23
  %67 = load i8** %dir_addr, align 8
  %68 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %67) nounwind
  store i32 %68, i32* %err20, align 4
  %69 = load i8** %slash21, align 8
  store i8 47, i8* %69, align 1
  %70 = load i32* %err20, align 4
  %71 = icmp ne i32 %70, 0
  br i1 %71, label %Fail, label %bb26

bb26:                                             ; preds = %bb25
  %72 = load i8** %slash21, align 8
  %73 = getelementptr inbounds i8* %72, i64 1
  %74 = call i8* @find_non_slash(i8* %73) nounwind readonly
  store i8* %74, i8** %dir_addr, align 8
  br label %bb27

bb27:                                             ; preds = %bb16, %bb26
  %75 = load i8** %dir_end, align 8
  %76 = ptrtoint i8* %75 to i64
  %77 = load i8** %dir_addr, align 8
  %78 = ptrtoint i8* %77 to i64
  %79 = sub nsw i64 %76, %78
  %80 = icmp sgt i64 %79, 4095
  %81 = load i8** %dir_addr, align 8
  br i1 %80, label %bb19, label %bb28

bb28:                                             ; preds = %bb27
  %82 = load i8** %dir_end, align 8
  %83 = icmp ult i8* %81, %82
  br i1 %83, label %bb29, label %bb30

bb29:                                             ; preds = %bb28
  %84 = load i8** %dir_addr, align 8
  %85 = call i32 @cdb_advance_fd(%struct.cd_buf* %cdb, i8* %84) nounwind
  %86 = icmp ne i32 %85, 0
  br i1 %86, label %Fail, label %bb30

bb30:                                             ; preds = %bb29, %bb28
  %87 = call i32 @cdb_fchdir(%struct.cd_buf* %cdb) nounwind
  %88 = icmp ne i32 %87, 0
  br i1 %88, label %Fail, label %bb31

bb31:                                             ; preds = %bb30
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  store i32 0, i32* %0, align 4
  br label %bb32

Fail:                                             ; preds = %bb30, %bb29, %bb25, %bb12, %bb9
  %89 = call i32* @__errno_location() nounwind readnone
  %90 = load i32* %89, align 4
  store i32 %90, i32* %saved_errno, align 4
  call void @cdb_free(%struct.cd_buf* %cdb) nounwind
  %91 = call i32* @__errno_location() nounwind readnone
  %92 = load i32* %saved_errno, align 4
  store i32 %92, i32* %91, align 4
  store i32 -1, i32* %0, align 4
  br label %bb32

bb32:                                             ; preds = %Fail, %bb31, %bb22, %bb8, %bb1
  %93 = load i32* %0, align 4
  store i32 %93, i32* %retval, align 4
  %retval33 = load i32* %retval
  ret i32 %retval33
}

define i32 @rpl_fclose(%struct.FILE* %fp) nounwind {
entry:
  %fp_addr = alloca %struct.FILE*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %saved_errno = alloca i32
  %fd = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.FILE* %fp, %struct.FILE** %fp_addr
  store i32 0, i32* %saved_errno, align 4
  store i32 0, i32* %result, align 4
  %1 = load %struct.FILE** %fp_addr, align 8
  %2 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %1) nounwind
  store i32 %2, i32* %fd, align 4
  %3 = load i32* %fd, align 4
  %4 = icmp slt i32 %3, 0
  %5 = load %struct.FILE** %fp_addr, align 8
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %6 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  store i32 %6, i32* %0, align 4
  br label %bb8

bb1:                                              ; preds = %entry
  %7 = call i32 bitcast (i32 (%4*)* @__freading to i32 (%struct.FILE*)*)(%struct.FILE* %5) nounwind
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %bb3, label %bb2

bb2:                                              ; preds = %bb1
  %9 = load %struct.FILE** %fp_addr, align 8
  %10 = call i32 bitcast (i32 (%4*)* @fileno_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %9) nounwind
  %11 = call i64 @lseek(i32 %10, i64 0, i32 1) nounwind
  %12 = icmp ne i64 %11, -1
  br i1 %12, label %bb3, label %bb5

bb3:                                              ; preds = %bb2, %bb1
  %13 = load %struct.FILE** %fp_addr, align 8
  %14 = call i32 @rpl_fflush(%struct.FILE* %13) nounwind
  %15 = icmp ne i32 %14, 0
  br i1 %15, label %bb4, label %bb5

bb4:                                              ; preds = %bb3
  %16 = call i32* @__errno_location() nounwind readnone
  %17 = load i32* %16, align 4
  store i32 %17, i32* %saved_errno, align 4
  br label %bb5

bb5:                                              ; preds = %bb4, %bb3, %bb2
  %18 = load %struct.FILE** %fp_addr, align 8
  %19 = call i32 bitcast (i32 (%4*)* @fclose to i32 (%struct.FILE*)*)(%struct.FILE* %18) nounwind
  store i32 %19, i32* %result, align 4
  %20 = load i32* %saved_errno, align 4
  %21 = icmp ne i32 %20, 0
  br i1 %21, label %bb6, label %bb7

bb6:                                              ; preds = %bb5
  %22 = call i32* @__errno_location() nounwind readnone
  %23 = load i32* %saved_errno, align 4
  store i32 %23, i32* %22, align 4
  store i32 -1, i32* %result, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %24 = load i32* %result, align 4
  store i32 %24, i32* %0, align 4
  br label %bb8

bb8:                                              ; preds = %bb7, %bb
  %25 = load i32* %0, align 4
  store i32 %25, i32* %retval, align 4
  %retval9 = load i32* %retval
  ret i32 %retval9
}

define i8* @openat_proc_name(i8* %buf, i32 %fd, i8* %file) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %fd_addr = alloca i32, align 4
  %file_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.1 = alloca i32
  %0 = alloca i8*
  %result = alloca i8*
  %dirlen = alloca i32
  %proc_self_fd = alloca i32
  %dotdot_buf = alloca [32 x i8]
  %bufsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i32 %fd, i32* %fd_addr
  store i8* %file, i8** %file_addr
  %1 = load i8** %buf_addr, align 8
  store i8* %1, i8** %result, align 8
  %2 = load i8** %file_addr, align 8
  %3 = load i8* %2, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load i8** %buf_addr, align 8
  %6 = getelementptr inbounds i8* %5, i64 0
  store i8 0, i8* %6, align 1
  %7 = load i8** %buf_addr, align 8
  store i8* %7, i8** %0, align 8
  br label %bb16

bb1:                                              ; preds = %entry
  %8 = load i32* @proc_status.4328, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %bb2, label %bb10

bb2:                                              ; preds = %bb1
  %10 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([14 x i8]* @.str447, i64 0, i64 0), i32 67840) nounwind
  store i32 %10, i32* %proc_self_fd, align 4
  %11 = load i32* %proc_self_fd, align 4
  %12 = icmp slt i32 %11, 0
  br i1 %12, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  store i32 -1, i32* @proc_status.4328, align 4
  br label %bb10

bb4:                                              ; preds = %bb2
  %dotdot_buf5 = bitcast [32 x i8]* %dotdot_buf to i8*
  %13 = load i32* %proc_self_fd, align 4
  %14 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %dotdot_buf5, i8* noalias getelementptr inbounds ([23 x i8]* @.str1448, i64 0, i64 0), i32 %13) nounwind
  %dotdot_buf6 = bitcast [32 x i8]* %dotdot_buf to i8*
  %15 = call i32 @access(i8* %dotdot_buf6, i32 0) nounwind
  %16 = icmp ne i32 %15, 0
  br i1 %16, label %bb7, label %bb8

bb7:                                              ; preds = %bb4
  store i32 -1, i32* %iftmp.1, align 4
  br label %bb9

bb8:                                              ; preds = %bb4
  store i32 1, i32* %iftmp.1, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %17 = load i32* %iftmp.1, align 4
  store i32 %17, i32* @proc_status.4328, align 4
  %18 = load i32* %proc_self_fd, align 4
  %19 = call i32 @close(i32 %18) nounwind
  br label %bb10

bb10:                                             ; preds = %bb9, %bb3, %bb1
  %20 = load i32* @proc_status.4328, align 4
  %21 = icmp slt i32 %20, 0
  br i1 %21, label %bb11, label %bb12

bb11:                                             ; preds = %bb10
  store i8* null, i8** %0, align 8
  br label %bb16

bb12:                                             ; preds = %bb10
  %22 = load i8** %file_addr, align 8
  %23 = call i64 @strlen(i8* %22) nounwind readonly
  %24 = add i64 %23, 27
  store i64 %24, i64* %bufsize, align 8
  %25 = load i64* %bufsize, align 8
  %26 = icmp ugt i64 %25, 4032
  br i1 %26, label %bb13, label %bb15

bb13:                                             ; preds = %bb12
  %27 = load i64* %bufsize, align 8
  %28 = call noalias i8* @malloc(i64 %27) nounwind
  store i8* %28, i8** %result, align 8
  %29 = load i8** %result, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %bb14, label %bb15

bb14:                                             ; preds = %bb13
  store i8* null, i8** %0, align 8
  br label %bb16

bb15:                                             ; preds = %bb13, %bb12
  %31 = load i8** %result, align 8
  %32 = load i32* %fd_addr, align 4
  %33 = call i32 (i8*, i8*, ...)* @sprintf(i8* noalias %31, i8* noalias getelementptr inbounds ([18 x i8]* @.str2449, i64 0, i64 0), i32 %32) nounwind
  store i32 %33, i32* %dirlen, align 4
  %34 = load i8** %result, align 8
  %35 = load i32* %dirlen, align 4
  %36 = sext i32 %35 to i64
  %37 = getelementptr inbounds i8* %34, i64 %36
  %38 = load i8** %file_addr, align 8
  %39 = call i8* @strcpy(i8* noalias %37, i8* noalias %38) nounwind
  %40 = load i8** %result, align 8
  store i8* %40, i8** %0, align 8
  br label %bb16

bb16:                                             ; preds = %bb15, %bb14, %bb11, %bb
  %41 = load i8** %0, align 8
  store i8* %41, i8** %retval, align 8
  %retval17 = load i8** %retval
  ret i8* %retval17
}

define zeroext i8 @c_isalnum(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 48, label %bb
    i32 49, label %bb
    i32 50, label %bb
    i32 51, label %bb
    i32 52, label %bb
    i32 53, label %bb
    i32 54, label %bb
    i32 55, label %bb
    i32 56, label %bb
    i32 57, label %bb
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 71, label %bb
    i32 72, label %bb
    i32 73, label %bb
    i32 74, label %bb
    i32 75, label %bb
    i32 76, label %bb
    i32 77, label %bb
    i32 78, label %bb
    i32 79, label %bb
    i32 80, label %bb
    i32 81, label %bb
    i32 82, label %bb
    i32 83, label %bb
    i32 84, label %bb
    i32 85, label %bb
    i32 86, label %bb
    i32 87, label %bb
    i32 88, label %bb
    i32 89, label %bb
    i32 90, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
    i32 103, label %bb
    i32 104, label %bb
    i32 105, label %bb
    i32 106, label %bb
    i32 107, label %bb
    i32 108, label %bb
    i32 109, label %bb
    i32 110, label %bb
    i32 111, label %bb
    i32 112, label %bb
    i32 113, label %bb
    i32 114, label %bb
    i32 115, label %bb
    i32 116, label %bb
    i32 117, label %bb
    i32 118, label %bb
    i32 119, label %bb
    i32 120, label %bb
    i32 121, label %bb
    i32 122, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isalpha(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 71, label %bb
    i32 72, label %bb
    i32 73, label %bb
    i32 74, label %bb
    i32 75, label %bb
    i32 76, label %bb
    i32 77, label %bb
    i32 78, label %bb
    i32 79, label %bb
    i32 80, label %bb
    i32 81, label %bb
    i32 82, label %bb
    i32 83, label %bb
    i32 84, label %bb
    i32 85, label %bb
    i32 86, label %bb
    i32 87, label %bb
    i32 88, label %bb
    i32 89, label %bb
    i32 90, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
    i32 103, label %bb
    i32 104, label %bb
    i32 105, label %bb
    i32 106, label %bb
    i32 107, label %bb
    i32 108, label %bb
    i32 109, label %bb
    i32 110, label %bb
    i32 111, label %bb
    i32 112, label %bb
    i32 113, label %bb
    i32 114, label %bb
    i32 115, label %bb
    i32 116, label %bb
    i32 117, label %bb
    i32 118, label %bb
    i32 119, label %bb
    i32 120, label %bb
    i32 121, label %bb
    i32 122, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isascii(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 0
  %3 = icmp ule i32 %2, 127
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isblank(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = icmp eq i32 %1, 32
  %3 = load i32* %c_addr, align 4
  %4 = icmp eq i32 %3, 9
  %or.cond = or i1 %2, %4
  br i1 %or.cond, label %bb1, label %bb2

bb1:                                              ; preds = %entry
  store i32 1, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %5 = load i32* %iftmp.0, align 4
  %6 = trunc i32 %5 to i8
  %7 = zext i8 %6 to i32
  store i32 %7, i32* %0, align 4
  %8 = load i32* %0, align 4
  store i32 %8, i32* %retval, align 4
  %retval4 = load i32* %retval
  %retval45 = trunc i32 %retval4 to i8
  ret i8 %retval45
}

define zeroext i8 @c_iscntrl(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 0, label %bb
    i32 1, label %bb
    i32 2, label %bb
    i32 3, label %bb
    i32 4, label %bb
    i32 5, label %bb
    i32 6, label %bb
    i32 7, label %bb
    i32 8, label %bb
    i32 9, label %bb
    i32 10, label %bb
    i32 11, label %bb
    i32 12, label %bb
    i32 13, label %bb
    i32 14, label %bb
    i32 15, label %bb
    i32 16, label %bb
    i32 17, label %bb
    i32 18, label %bb
    i32 19, label %bb
    i32 20, label %bb
    i32 21, label %bb
    i32 22, label %bb
    i32 23, label %bb
    i32 24, label %bb
    i32 25, label %bb
    i32 26, label %bb
    i32 27, label %bb
    i32 28, label %bb
    i32 29, label %bb
    i32 30, label %bb
    i32 31, label %bb
    i32 127, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isdigit(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -48
  %switch = icmp ult i32 %.off, 10
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isgraph(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 33
  %3 = icmp ule i32 %2, 93
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_islower(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -97
  %switch = icmp ult i32 %.off, 26
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isprint(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %2 = sub i32 %1, 32
  %3 = icmp ule i32 %2, 94
  br i1 %3, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_ispunct(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 33, label %bb
    i32 34, label %bb
    i32 35, label %bb
    i32 36, label %bb
    i32 37, label %bb
    i32 38, label %bb
    i32 39, label %bb
    i32 40, label %bb
    i32 41, label %bb
    i32 42, label %bb
    i32 43, label %bb
    i32 44, label %bb
    i32 45, label %bb
    i32 46, label %bb
    i32 47, label %bb
    i32 58, label %bb
    i32 59, label %bb
    i32 60, label %bb
    i32 61, label %bb
    i32 62, label %bb
    i32 63, label %bb
    i32 64, label %bb
    i32 91, label %bb
    i32 92, label %bb
    i32 93, label %bb
    i32 94, label %bb
    i32 95, label %bb
    i32 96, label %bb
    i32 123, label %bb
    i32 124, label %bb
    i32 125, label %bb
    i32 126, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %e
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isspace(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 9, label %bb
    i32 10, label %bb
    i32 11, label %bb
    i32 12, label %bb
    i32 13, label %bb
    i32 32, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isupper(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -65
  %switch = icmp ult i32 %.off, 26
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define zeroext i8 @c_isxdigit(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  switch i32 %1, label %bb1 [
    i32 48, label %bb
    i32 49, label %bb
    i32 50, label %bb
    i32 51, label %bb
    i32 52, label %bb
    i32 53, label %bb
    i32 54, label %bb
    i32 55, label %bb
    i32 56, label %bb
    i32 57, label %bb
    i32 65, label %bb
    i32 66, label %bb
    i32 67, label %bb
    i32 68, label %bb
    i32 69, label %bb
    i32 70, label %bb
    i32 97, label %bb
    i32 98, label %bb
    i32 99, label %bb
    i32 100, label %bb
    i32 101, label %bb
    i32 102, label %bb
  ]

bb:                                               ; preds = %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry, %entry
  store i32 1, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 0, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %2 = load i32* %0, align 4
  store i32 %2, i32* %retval, align 4
  %retval3 = load i32* %retval
  %retval34 = trunc i32 %retval3 to i8
  ret i8 %retval34
}

define i32 @c_tolower(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -65
  %switch = icmp ult i32 %.off, 26
  %2 = load i32* %c_addr, align 4
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = add nsw i32 %2, 32
  store i32 %3, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 %2, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @c_toupper(i32 %c) nounwind inlinehint {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load i32* %c_addr, align 4
  %.off = add i32 %1, -97
  %switch = icmp ult i32 %.off, 26
  %2 = load i32* %c_addr, align 4
  br i1 %switch, label %bb, label %bb1

bb:                                               ; preds = %entry
  %3 = sub nsw i32 %2, 32
  store i32 %3, i32* %0, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  store i32 %2, i32* %0, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %4 = load i32* %0, align 4
  store i32 %4, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define i32 @set_cloexec_flag(i32 %desc, i8 zeroext %value) nounwind {
entry:
  %desc_addr = alloca i32, align 4
  %value_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.0 = alloca i32
  %flags = alloca i32
  %newflags = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desc, i32* %desc_addr
  store i8 %value, i8* %value_addr
  %1 = load i32* %desc_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 1, i32 0) nounwind
  store i32 %2, i32* %flags, align 4
  %3 = load i32* %flags, align 4
  %4 = icmp sge i32 %3, 0
  br i1 %4, label %bb, label %bb6

bb:                                               ; preds = %entry
  %5 = load i8* %value_addr, align 1
  %toBool = icmp ne i8 %5, 0
  %6 = load i32* %flags, align 4
  br i1 %toBool, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %7 = or i32 %6, 1
  store i32 %7, i32* %iftmp.0, align 4
  br label %bb3

bb2:                                              ; preds = %bb
  %8 = and i32 %6, -2
  store i32 %8, i32* %iftmp.0, align 4
  br label %bb3

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i32* %iftmp.0, align 4
  store i32 %9, i32* %newflags, align 4
  %10 = load i32* %flags, align 4
  %11 = load i32* %newflags, align 4
  %12 = icmp eq i32 %10, %11
  br i1 %12, label %bb5, label %bb4

bb4:                                              ; preds = %bb3
  %13 = load i32* %desc_addr, align 4
  %14 = load i32* %newflags, align 4
  %15 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %13, i32 2, i32 %14) nounwind
  %16 = icmp ne i32 %15, -1
  br i1 %16, label %bb5, label %bb6

bb5:                                              ; preds = %bb4, %bb3
  store i32 0, i32* %0, align 4
  br label %bb7

bb6:                                              ; preds = %bb4, %entry
  store i32 -1, i32* %0, align 4
  br label %bb7

bb7:                                              ; preds = %bb6, %bb5
  %17 = load i32* %0, align 4
  store i32 %17, i32* %retval, align 4
  %retval8 = load i32* %retval
  ret i32 %retval8
}

define i32 @dup_cloexec(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4
  %2 = call i32 (i32, i32, ...)* @rpl_fcntl(i32 %1, i32 1030, i32 0) nounwind
  store i32 %2, i32* %0, align 4
  %3 = load i32* %0, align 4
  store i32 %3, i32* %retval, align 4
  %retval1 = load i32* %retval
  ret i32 %retval1
}

define i8* @mmalloca(i64 %n) nounwind {
entry:
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %nplus = alloca i64
  %p = alloca i8*
  %slot = alloca i64
  %h = alloca %union.header*
  %"alloca point" = bitcast i32 0 to i32
  store i64 %n, i64* %n_addr
  %1 = load i64* %n_addr, align 8
  %2 = add i64 %1, 16
  store i64 %2, i64* %nplus, align 8
  %3 = load i64* %nplus, align 8
  %4 = load i64* %n_addr, align 8
  %5 = icmp uge i64 %3, %4
  br i1 %5, label %bb, label %bb2

bb:                                               ; preds = %entry
  %6 = load i64* %nplus, align 8
  %7 = call noalias i8* @malloc(i64 %6) nounwind
  store i8* %7, i8** %p, align 8
  %8 = load i8** %p, align 8
  %9 = icmp ne i8* %8, null
  br i1 %9, label %bb1, label %bb2

bb1:                                              ; preds = %bb
  %10 = load i8** %p, align 8
  %11 = bitcast i8* %10 to %union.header*
  store %union.header* %11, %union.header** %h, align 8
  %12 = load %union.header** %h, align 8
  %13 = getelementptr inbounds %union.header* %12, i64 1
  %14 = bitcast %union.header* %13 to i8*
  store i8* %14, i8** %p, align 8
  %15 = load %union.header** %h, align 8
  %16 = getelementptr inbounds %union.header* %15, i32 0, i32 0
  %17 = bitcast i8** %16 to %struct.anon*
  %18 = getelementptr inbounds %struct.anon* %17, i32 0, i32 1
  store i32 336984906, i32* %18, align 4
  %19 = load i8** %p, align 8
  %20 = ptrtoint i8* %19 to i64
  %int_cast_to_i64 = bitcast i64 257 to i64
  %21 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %22 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %22, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %23 = urem i64 %20, 257
  store i64 %23, i64* %slot, align 8
  %24 = load i64* %slot, align 8
  %25 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %24
  %26 = load i8** %25, align 8
  %27 = load %union.header** %h, align 8
  %28 = getelementptr inbounds %union.header* %27, i32 0, i32 0
  store i8* %26, i8** %28, align 8
  %29 = load i64* %slot, align 8
  %30 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %29
  %31 = load i8** %p, align 8
  store i8* %31, i8** %30, align 8
  %32 = load i8** %p, align 8
  store i8* %32, i8** %0, align 8
  br label %bb3

bb2:                                              ; preds = %bb, %entry
  store i8* null, i8** %0, align 8
  br label %bb3

bb3:                                              ; preds = %bb2, %klee_div_zero_check.exit
  %33 = load i8** %0, align 8
  store i8* %33, i8** %retval, align 8
  %retval4 = load i8** %retval
  ret i8* %retval4
}

define void @freea(i8* %p) nounwind {
entry:
  %p_addr = alloca i8*, align 8
  %slot = alloca i64
  %chain = alloca i8**
  %h = alloca %union.header*
  %p_begin = alloca %union.header*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %p, i8** %p_addr
  %0 = load i8** %p_addr, align 8
  %1 = icmp ne i8* %0, null
  br i1 %1, label %bb, label %return

bb:                                               ; preds = %entry
  %2 = load i8** %p_addr, align 8
  %3 = bitcast i8* %2 to i32*
  %4 = getelementptr inbounds i32* %3, i64 -1
  %5 = load i32* %4, align 1
  %6 = icmp eq i32 %5, 336984906
  br i1 %6, label %bb1, label %return

bb1:                                              ; preds = %bb
  %7 = load i8** %p_addr, align 8
  %8 = ptrtoint i8* %7 to i64
  %int_cast_to_i64 = bitcast i64 257 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb1
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb1
  call void @klee_disable_symbex() nounwind
  %11 = urem i64 %8, 257
  store i64 %11, i64* %slot, align 8
  %12 = load i64* %slot, align 8
  %13 = getelementptr inbounds [257 x i8*]* @mmalloca_results, i64 0, i64 %12
  store i8** %13, i8*** %chain, align 8
  br label %bb5

bb2:                                              ; preds = %bb5
  %14 = load i8** %p_addr, align 8
  %15 = bitcast i8* %14 to %union.header*
  store %union.header* %15, %union.header** %h, align 8
  %16 = load i8*** %chain, align 8
  %17 = load i8** %16, align 8
  %18 = load i8** %p_addr, align 8
  %19 = icmp eq i8* %17, %18
  br i1 %19, label %bb3, label %bb4

bb3:                                              ; preds = %bb2
  %20 = load %union.header** %h, align 8
  %21 = getelementptr inbounds %union.header* %20, i64 -1
  store %union.header* %21, %union.header** %p_begin, align 8
  %22 = load %union.header** %p_begin, align 8
  %23 = getelementptr inbounds %union.header* %22, i32 0, i32 0
  %24 = load i8** %23, align 8
  %25 = load i8*** %chain, align 8
  store i8* %24, i8** %25, align 8
  %26 = load %union.header** %p_begin, align 8
  %27 = bitcast %union.header* %26 to i8*
  call void @free(i8* %27) nounwind
  br label %return

bb4:                                              ; preds = %bb2
  %28 = load i8*** %chain, align 8
  %29 = load i8** %28, align 8
  %30 = bitcast i8* %29 to %union.header*
  store %union.header* %30, %union.header** %h, align 8
  %31 = load %union.header** %h, align 8
  %32 = getelementptr inbounds %union.header* %31, i64 -1
  %33 = getelementptr inbounds %union.header* %32, i32 0, i32 0
  store i8** %33, i8*** %chain, align 8
  br label %bb5

bb5:                                              ; preds = %bb4, %klee_div_zero_check.exit
  %34 = load i8*** %chain, align 8
  %35 = load i8** %34, align 8
  %36 = icmp ne i8* %35, null
  br i1 %36, label %bb2, label %return

return:                                           ; preds = %entry, %bb, %bb3, %bb5
  ret void
}

define i32 @mb_width_aux(i32 %wc) nounwind inlinehint {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.1 = alloca i32
  %0 = alloca i32
  %w = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4
  %2 = call i32 @wcwidth(i32 %1) nounwind
  store i32 %2, i32* %w, align 4
  %3 = load i32* %w, align 4
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %bb, label %bb1

bb:                                               ; preds = %entry
  %5 = load i32* %wc_addr, align 4
  %6 = call i32 @iswcntrl(i32 %5) nounwind readonly
  %7 = icmp eq i32 %6, 0
  %8 = zext i1 %7 to i32
  store i32 %8, i32* %iftmp.1, align 4
  br label %bb2

bb1:                                              ; preds = %entry
  %9 = load i32* %w, align 4
  store i32 %9, i32* %iftmp.1, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* %iftmp.1, align 4
  store i32 %10, i32* %0, align 4
  %11 = load i32* %0, align 4
  store i32 %11, i32* %retval, align 4
  %retval3 = load i32* %retval
  ret i32 %retval3
}

define void @mb_copy(%struct.mbchar* %new_mbc, %struct.mbchar* %old_mbc) nounwind inlinehint {
entry:
  %new_mbc_addr = alloca %struct.mbchar*, align 8
  %old_mbc_addr = alloca %struct.mbchar*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.mbchar* %new_mbc, %struct.mbchar** %new_mbc_addr
  store %struct.mbchar* %old_mbc, %struct.mbchar** %old_mbc_addr
  %0 = load %struct.mbchar** %old_mbc_addr, align 8
  %1 = getelementptr inbounds %struct.mbchar* %0, i32 0, i32 0
  %2 = load i8** %1, align 8
  %3 = load %struct.mbchar** %old_mbc_addr, align 8
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 4
  %5 = getelementptr inbounds [24 x i8]* %4, i64 0, i64 0
  %6 = icmp eq i8* %2, %5
  %7 = load %struct.mbchar** %old_mbc_addr, align 8
  br i1 %6, label %bb, label %bb1

bb:                                               ; preds = %entry
  %8 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 1
  %9 = load i64* %8, align 8
  %10 = load %struct.mbchar** %old_mbc_addr, align 8
  %11 = getelementptr inbounds %struct.mbchar* %10, i32 0, i32 4
  %12 = getelementptr inbounds [24 x i8]* %11, i64 0, i64 0
  %13 = load %struct.mbchar** %new_mbc_addr, align 8
  %14 = getelementptr inbounds %struct.mbchar* %13, i32 0, i32 4
  %15 = getelementptr inbounds [24 x i8]* %14, i64 0, i64 0
  %16 = call i8* @memcpy(i8* %15, i8* %12, i64 %9)
  %17 = load %struct.mbchar** %new_mbc_addr, align 8
  %18 = getelementptr inbounds %struct.mbchar* %17, i32 0, i32 4
  %19 = getelementptr inbounds [24 x i8]* %18, i64 0, i64 0
  %20 = load %struct.mbchar** %new_mbc_addr, align 8
  %21 = getelementptr inbounds %struct.mbchar* %20, i32 0, i32 0
  store i8* %19, i8** %21, align 8
  br label %bb2

bb1:                                              ; preds = %entry
  %22 = getelementptr inbounds %struct.mbchar* %7, i32 0, i32 0
  %23 = load i8** %22, align 8
  %24 = load %struct.mbchar** %new_mbc_addr, align 8
  %25 = getelementptr inbounds %struct.mbchar* %24, i32 0, i32 0
  store i8* %23, i8** %25, align 8
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  %26 = load %struct.mbchar** %old_mbc_addr, align 8
  %27 = getelementptr inbounds %struct.mbchar* %26, i32 0, i32 1
  %28 = load i64* %27, align 8
  %29 = load %struct.mbchar** %new_mbc_addr, align 8
  %30 = getelementptr inbounds %struct.mbchar* %29, i32 0, i32 1
  store i64 %28, i64* %30, align 8
  %31 = load %struct.mbchar** %old_mbc_addr, align 8
  %32 = getelementptr inbounds %struct.mbchar* %31, i32 0, i32 2
  %33 = load i8* %32, align 8
  %34 = load %struct.mbchar** %new_mbc_addr, align 8
  %35 = getelementptr inbounds %struct.mbchar* %34, i32 0, i32 2
  store i8 %33, i8* %35, align 8
  %36 = load %struct.mbchar** %new_mbc_addr, align 8
  %37 = getelementptr inbounds %struct.mbchar* %36, i32 0, i32 2
  %38 = load i8* %37, align 8
  %toBool = icmp ne i8 %38, 0
  br i1 %toBool, label %bb3, label %return

bb3:                                              ; preds = %bb2
  %39 = load %struct.mbchar** %old_mbc_addr, align 8
  %40 = getelementptr inbounds %struct.mbchar* %39, i32 0, i32 3
  %41 = load i32* %40, align 4
  %42 = load %struct.mbchar** %new_mbc_addr, align 8
  %43 = getelementptr inbounds %struct.mbchar* %42, i32 0, i32 3
  store i32 %41, i32* %43, align 4
  br label %return

return:                                           ; preds = %bb2, %bb3
  ret void
}

define zeroext i8 @is_basic(i8 signext %c) nounwind inlinehint {
entry:
  %c_addr = alloca i8, align 1
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8 %c, i8* %c_addr
  %1 = load i8* %c_addr, align 1
  %int_cast_to_i64 = zext i8 5 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 8
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = lshr i8 %1, 5
  %4 = zext i8 %3 to i32
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds [0 x i32]* bitcast ([8 x i32]* @is_basic_table to [0 x i32]*), i64 0, i64 %5
  %7 = load i32* %6, align 4
  %8 = load i8* %c_addr, align 1
  %9 = zext i8 %8 to i32
  %10 = and i32 %9, 31
  %int_cast_to_i641 = zext i32 %10 to i64
  %11 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %11, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %12 = lshr i32 %7, %10
  %13 = and i32 %12, 1
  %14 = trunc i32 %13 to i8
  %15 = zext i8 %14 to i32
  store i32 %15, i32* %0, align 4
  %16 = load i32* %0, align 4
  store i32 %16, i32* %retval, align 4
  %retval1 = load i32* %retval
  %retval12 = trunc i32 %retval1 to i8
  ret i8 %retval12
}

define i64 @mbslen(i8* %string) nounwind readonly {
entry:
  %string_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.4 = alloca i32
  %count = alloca i64
  %iter = alloca %struct.mbui_iterator_t
  %"alloca point" = bitcast i32 0 to i32
  store i8* %string, i8** %string_addr
  %1 = call i64 @_stdlib_mb_cur_max() nounwind
  %2 = icmp ugt i64 %1, 1
  br i1 %2, label %bb, label %bb11

bb:                                               ; preds = %entry
  store i64 0, i64* %count, align 8
  %3 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %4 = getelementptr inbounds %struct.mbchar* %3, i32 0, i32 0
  %5 = load i8** %string_addr, align 8
  store i8* %5, i8** %4, align 8
  %6 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 1
  %8 = bitcast %struct.mbstate_t* %7 to i8*
  %9 = call i8* @memset(i8* %8, i32 0, i64 8)
  %10 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %10, align 4
  br label %bb2

bb1:                                              ; preds = %bb9
  %11 = add i64 %31, 1
  store i64 %11, i64* %count, align 8
  %12 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %13 = getelementptr inbounds %struct.mbchar* %12, i32 0, i32 0
  %14 = load i8** %13, align 8
  %15 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %16 = getelementptr inbounds %struct.mbchar* %15, i32 0, i32 1
  %17 = load i64* %16, align 8
  %18 = getelementptr inbounds i8* %14, i64 %17
  %19 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %20 = getelementptr inbounds %struct.mbchar* %19, i32 0, i32 0
  store i8* %18, i8** %20, align 8
  %21 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 2
  store i8 0, i8* %21, align 4
  br label %bb2

bb2:                                              ; preds = %bb1, %bb
  call void @mbuiter_multi_next(%struct.mbui_iterator_t* %iter) nounwind
  %22 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %23 = getelementptr inbounds %struct.mbchar* %22, i32 0, i32 2
  %24 = load i8* %23, align 8
  %toBool = icmp ne i8 %24, 0
  %toBoolnot = xor i1 %toBool, true
  %toBoolnot3 = zext i1 %toBoolnot to i8
  %toBool5 = icmp ne i8 %toBoolnot3, 0
  br i1 %toBool5, label %bb7, label %bb6

bb6:                                              ; preds = %bb2
  %25 = getelementptr inbounds %struct.mbui_iterator_t* %iter, i32 0, i32 3
  %26 = getelementptr inbounds %struct.mbchar* %25, i32 0, i32 3
  %27 = load i32* %26, align 4
  %28 = icmp ne i32 %27, 0
  br i1 %28, label %bb7, label %bb8

bb7:                                              ; preds = %bb6, %bb2
  store i32 1, i32* %iftmp.4, align 4
  br label %bb9

bb8:                                              ; preds = %bb6
  store i32 0, i32* %iftmp.4, align 4
  br label %bb9

bb9:                                              ; preds = %bb8, %bb7
  %29 = load i32* %iftmp.4, align 4
  %30 = icmp ne i32 %29, 0
  %31 = load i64* %count, align 8
  br i1 %30, label %bb1, label %bb10

bb10:                                             ; preds = %bb9
  store i64 %31, i64* %0, align 8
  br label %bb12

bb11:                                             ; preds = %entry
  %32 = load i8** %string_addr, align 8
  %33 = call i64 @strlen(i8* %32) nounwind readonly
  store i64 %33, i64* %0, align 8
  br label %bb12

bb12:                                             ; preds = %bb11, %bb10
  %34 = load i64* %0, align 8
  store i64 %34, i64* %retval, align 8
  %retval13 = load i64* %retval
  ret i64 %retval13
}

define weak i32* @__errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @errno, i32** %0, align 8, !dbg !5530
  %1 = load i32** %0, align 8, !dbg !5530
  store i32* %1, i32** %retval, align 8, !dbg !5530
  %retval1 = load i32** %retval, !dbg !5530
  ret i32* %retval1, !dbg !5530
}

define i32 @__fgetc_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %uc16 = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5532
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5532
  %3 = load i8** %2, align 8, !dbg !5532
  %4 = load %4** %stream_addr, align 8, !dbg !5532
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !5532
  %6 = load i8** %5, align 8, !dbg !5532
  %7 = icmp ult i8* %3, %6, !dbg !5532
  %8 = load %4** %stream_addr, align 8, !dbg !5534
  br i1 %7, label %bb, label %bb1, !dbg !5532

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5534
  %10 = load i8** %9, align 8, !dbg !5534
  %11 = load i8* %10, align 1, !dbg !5534
  %12 = zext i8 %11 to i32, !dbg !5534
  store i32 %12, i32* %0, align 4, !dbg !5534
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5534
  %14 = load %4** %stream_addr, align 8, !dbg !5534
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5534
  store i8* %13, i8** %15, align 8, !dbg !5534
  br label %bb19, !dbg !5534

bb1:                                              ; preds = %entry
  %16 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5535
  %17 = load i16* %16, align 8, !dbg !5535
  %18 = zext i16 %17 to i32, !dbg !5535
  %19 = and i32 %18, 131, !dbg !5535
  %20 = icmp ugt i32 %19, 128, !dbg !5535
  br i1 %20, label %bb3, label %bb2, !dbg !5535

bb2:                                              ; preds = %bb1
  %21 = load %4** %stream_addr, align 8, !dbg !5535
  %22 = call i32 @__stdio_trans2r_o(%4* noalias %21, i32 128) nounwind, !dbg !5535
  %23 = icmp eq i32 %22, 0, !dbg !5535
  br i1 %23, label %bb3, label %bb18, !dbg !5535

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5536
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5536
  %26 = load i16* %25, align 8, !dbg !5536
  %27 = zext i16 %26 to i32, !dbg !5536
  %28 = and i32 %27, 2, !dbg !5536
  %29 = icmp ne i32 %28, 0, !dbg !5536
  %30 = load %4** %stream_addr, align 8, !dbg !5537
  br i1 %29, label %bb4, label %bb5, !dbg !5536

bb4:                                              ; preds = %bb3
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5537
  %32 = load i16* %31, align 8, !dbg !5537
  %33 = zext i16 %32 to i32, !dbg !5537
  %34 = and i32 %33, 1, !dbg !5537
  %35 = load %4** %stream_addr, align 8, !dbg !5537
  %36 = getelementptr inbounds %4* %35, i32 0, i32 10, !dbg !5537
  %37 = sext i32 %34 to i64, !dbg !5537
  %38 = getelementptr inbounds [2 x i32]* %36, i64 0, i64 %37, !dbg !5537
  %39 = load i32* %38, align 4, !dbg !5537
  %40 = trunc i32 %39 to i8, !dbg !5537
  store i8 %40, i8* %uc, align 1, !dbg !5537
  %41 = sub i16 %32, 1, !dbg !5537
  %42 = load %4** %stream_addr, align 8, !dbg !5537
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !5537
  store i16 %41, i16* %43, align 8, !dbg !5537
  %44 = load %4** %stream_addr, align 8, !dbg !5539
  %45 = getelementptr inbounds %4* %44, i32 0, i32 10, !dbg !5539
  %46 = getelementptr inbounds [2 x i32]* %45, i64 0, i64 1, !dbg !5539
  store i32 0, i32* %46, align 4, !dbg !5539
  %47 = load i8* %uc, align 1, !dbg !5540
  %48 = zext i8 %47 to i32, !dbg !5540
  store i32 %48, i32* %0, align 4, !dbg !5540
  br label %bb19, !dbg !5540

bb5:                                              ; preds = %bb3
  %49 = getelementptr inbounds %4* %30, i32 0, i32 6, !dbg !5541
  %50 = load i8** %49, align 8, !dbg !5541
  %51 = load %4** %stream_addr, align 8, !dbg !5541
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5541
  %53 = load i8** %52, align 8, !dbg !5541
  %54 = icmp ne i8* %50, %53, !dbg !5541
  %55 = load %4** %stream_addr, align 8, !dbg !5542
  br i1 %54, label %bb6, label %bb7, !dbg !5541

bb6:                                              ; preds = %bb5
  %56 = getelementptr inbounds %4* %55, i32 0, i32 5, !dbg !5542
  %57 = load i8** %56, align 8, !dbg !5542
  %58 = load i8* %57, align 1, !dbg !5542
  %59 = zext i8 %58 to i32, !dbg !5542
  store i32 %59, i32* %0, align 4, !dbg !5542
  %60 = getelementptr inbounds i8* %57, i64 1, !dbg !5542
  %61 = load %4** %stream_addr, align 8, !dbg !5542
  %62 = getelementptr inbounds %4* %61, i32 0, i32 5, !dbg !5542
  store i8* %60, i8** %62, align 8, !dbg !5542
  br label %bb19, !dbg !5542

bb7:                                              ; preds = %bb5
  %63 = getelementptr inbounds %4* %55, i32 0, i32 2, !dbg !5543
  %64 = load i32* %63, align 4, !dbg !5543
  %65 = icmp eq i32 %64, -2, !dbg !5543
  %66 = load %4** %stream_addr, align 8, !dbg !5544
  %67 = getelementptr inbounds %4* %66, i32 0, i32 0, !dbg !5544
  %68 = load i16* %67, align 8, !dbg !5544
  br i1 %65, label %bb8, label %bb9, !dbg !5543

bb8:                                              ; preds = %bb7
  %69 = or i16 %68, 4, !dbg !5544
  %70 = load %4** %stream_addr, align 8, !dbg !5544
  %71 = getelementptr inbounds %4* %70, i32 0, i32 0, !dbg !5544
  store i16 %69, i16* %71, align 8, !dbg !5544
  store i32 -1, i32* %0, align 4, !dbg !5545
  br label %bb19, !dbg !5545

bb9:                                              ; preds = %bb7
  %72 = zext i16 %68 to i32, !dbg !5546
  %73 = and i32 %72, 768, !dbg !5546
  %74 = icmp ne i32 %73, 0, !dbg !5546
  br i1 %74, label %bb10, label %bb11, !dbg !5546

bb10:                                             ; preds = %bb9
  %75 = call i32 @fflush_unlocked(%4* bitcast (%4** @_stdio_openlist to %4*)) nounwind, !dbg !5547
  br label %bb11, !dbg !5547

bb11:                                             ; preds = %bb10, %bb9
  %76 = load %4** %stream_addr, align 8, !dbg !5548
  %77 = getelementptr inbounds %4* %76, i32 0, i32 4, !dbg !5548
  %78 = load i8** %77, align 8, !dbg !5548
  %79 = load %4** %stream_addr, align 8, !dbg !5548
  %80 = getelementptr inbounds %4* %79, i32 0, i32 3, !dbg !5548
  %81 = load i8** %80, align 8, !dbg !5548
  %82 = icmp ne i8* %78, %81, !dbg !5548
  %83 = load %4** %stream_addr, align 8, !dbg !5549
  br i1 %82, label %bb12, label %bb15, !dbg !5548

bb12:                                             ; preds = %bb11
  %84 = getelementptr inbounds %4* %83, i32 0, i32 3, !dbg !5549
  %85 = load i8** %84, align 8, !dbg !5549
  %86 = load %4** %stream_addr, align 8, !dbg !5549
  %87 = getelementptr inbounds %4* %86, i32 0, i32 7, !dbg !5549
  store i8* %85, i8** %87, align 8, !dbg !5549
  %88 = load %4** %stream_addr, align 8, !dbg !5550
  %89 = call i64 @__stdio_rfill(%4* noalias %88) nounwind, !dbg !5550
  %90 = icmp ne i64 %89, 0, !dbg !5550
  br i1 %90, label %bb13, label %bb18, !dbg !5550

bb13:                                             ; preds = %bb12
  %91 = load %4** %stream_addr, align 8, !dbg !5551
  %92 = getelementptr inbounds %4* %91, i32 0, i32 6, !dbg !5551
  %93 = load i8** %92, align 8, !dbg !5551
  %94 = load %4** %stream_addr, align 8, !dbg !5551
  %95 = getelementptr inbounds %4* %94, i32 0, i32 7, !dbg !5551
  store i8* %93, i8** %95, align 8, !dbg !5551
  %96 = load %4** %stream_addr, align 8, !dbg !5552
  %97 = getelementptr inbounds %4* %96, i32 0, i32 5, !dbg !5552
  %98 = load i8** %97, align 8, !dbg !5552
  %99 = load i8* %98, align 1, !dbg !5552
  %100 = zext i8 %99 to i32, !dbg !5552
  store i32 %100, i32* %0, align 4, !dbg !5552
  %101 = getelementptr inbounds i8* %98, i64 1, !dbg !5552
  %102 = load %4** %stream_addr, align 8, !dbg !5552
  %103 = getelementptr inbounds %4* %102, i32 0, i32 5, !dbg !5552
  store i8* %101, i8** %103, align 8, !dbg !5552
  br label %bb19, !dbg !5552

bb15:                                             ; preds = %bb11
  %104 = call i64 @__stdio_READ(%4* %83, i8* %uc16, i64 1) nounwind, !dbg !5553
  %105 = icmp ne i64 %104, 0, !dbg !5553
  br i1 %105, label %bb17, label %bb18, !dbg !5553

bb17:                                             ; preds = %bb15
  %106 = load i8* %uc16, align 1, !dbg !5555
  %107 = zext i8 %106 to i32, !dbg !5555
  store i32 %107, i32* %0, align 4, !dbg !5555
  br label %bb19, !dbg !5555

bb18:                                             ; preds = %bb12, %bb15, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5556
  br label %bb19, !dbg !5556

bb19:                                             ; preds = %bb18, %bb17, %bb13, %bb8, %bb6, %bb4, %bb
  %108 = load i32* %0, align 4, !dbg !5534
  store i32 %108, i32* %retval, align 4, !dbg !5534
  %retval20 = load i32* %retval, !dbg !5534
  ret i32 %retval20, !dbg !5534
}

declare void @llvm.dbg.declare(metadata, metadata) nounwind readnone

define i64 @__fpending(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5557
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5557
  %3 = load i16* %2, align 8, !dbg !5557
  %4 = zext i16 %3 to i32, !dbg !5557
  %5 = and i32 %4, 64, !dbg !5557
  %6 = icmp ne i32 %5, 0, !dbg !5557
  br i1 %6, label %bb, label %bb1, !dbg !5557

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5557
  %8 = getelementptr inbounds %4* %7, i32 0, i32 5, !dbg !5557
  %9 = load i8** %8, align 8, !dbg !5557
  %10 = ptrtoint i8* %9 to i64, !dbg !5557
  %11 = load %4** %stream_addr, align 8, !dbg !5557
  %12 = getelementptr inbounds %4* %11, i32 0, i32 3, !dbg !5557
  %13 = load i8** %12, align 8, !dbg !5557
  %14 = ptrtoint i8* %13 to i64, !dbg !5557
  %15 = sub nsw i64 %10, %14, !dbg !5557
  store i64 %15, i64* %iftmp.0, align 8, !dbg !5557
  br label %bb2, !dbg !5557

bb1:                                              ; preds = %entry
  store i64 0, i64* %iftmp.0, align 8, !dbg !5557
  br label %bb2, !dbg !5557

bb2:                                              ; preds = %bb1, %bb
  %16 = load i64* %iftmp.0, align 8, !dbg !5557
  store i64 %16, i64* %0, align 8, !dbg !5557
  %17 = load i64* %0, align 8, !dbg !5557
  store i64 %17, i64* %retval, align 8, !dbg !5557
  %retval3 = load i64* %retval, !dbg !5557
  ret i64 %retval3, !dbg !5557
}

define i32 @__fputc_unlocked(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %uc = alloca i8
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5559
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !5559
  %3 = load i8** %2, align 8, !dbg !5559
  %4 = load %4** %stream_addr, align 8, !dbg !5559
  %5 = getelementptr inbounds %4* %4, i32 0, i32 8, !dbg !5559
  %6 = load i8** %5, align 8, !dbg !5559
  %7 = icmp ult i8* %3, %6, !dbg !5559
  %8 = load %4** %stream_addr, align 8, !dbg !5561
  br i1 %7, label %bb, label %bb1, !dbg !5559

bb:                                               ; preds = %entry
  %9 = getelementptr inbounds %4* %8, i32 0, i32 5, !dbg !5561
  %10 = load i8** %9, align 8, !dbg !5561
  %11 = load i32* %c_addr, align 4, !dbg !5561
  %12 = trunc i32 %11 to i8, !dbg !5561
  store i8 %12, i8* %10, align 1, !dbg !5561
  %13 = getelementptr inbounds i8* %10, i64 1, !dbg !5561
  %14 = load %4** %stream_addr, align 8, !dbg !5561
  %15 = getelementptr inbounds %4* %14, i32 0, i32 5, !dbg !5561
  store i8* %13, i8** %15, align 8, !dbg !5561
  %16 = load i32* %c_addr, align 4, !dbg !5562
  %17 = trunc i32 %16 to i8, !dbg !5562
  %18 = zext i8 %17 to i32, !dbg !5562
  store i32 %18, i32* %0, align 4, !dbg !5562
  br label %bb15, !dbg !5562

bb1:                                              ; preds = %entry
  %19 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !5563
  %20 = load i16* %19, align 8, !dbg !5563
  %21 = zext i16 %20 to i32, !dbg !5563
  %22 = and i32 %21, 192, !dbg !5563
  %23 = icmp eq i32 %22, 192, !dbg !5563
  br i1 %23, label %bb3, label %bb2, !dbg !5563

bb2:                                              ; preds = %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !5563
  %25 = call i32 @__stdio_trans2w_o(%4* noalias %24, i32 128) nounwind, !dbg !5563
  %26 = icmp eq i32 %25, 0, !dbg !5563
  br i1 %26, label %bb3, label %BAD, !dbg !5563

bb3:                                              ; preds = %bb2, %bb1
  %27 = load %4** %stream_addr, align 8, !dbg !5564
  %28 = getelementptr inbounds %4* %27, i32 0, i32 2, !dbg !5564
  %29 = load i32* %28, align 4, !dbg !5564
  %30 = icmp eq i32 %29, -2, !dbg !5564
  br i1 %30, label %bb4, label %bb5, !dbg !5564

bb4:                                              ; preds = %bb3
  %31 = load i32* %c_addr, align 4, !dbg !5565
  %32 = trunc i32 %31 to i8, !dbg !5565
  %33 = zext i8 %32 to i32, !dbg !5565
  store i32 %33, i32* %0, align 4, !dbg !5565
  br label %bb15, !dbg !5565

bb5:                                              ; preds = %bb3
  %34 = load %4** %stream_addr, align 8, !dbg !5566
  %35 = getelementptr inbounds %4* %34, i32 0, i32 4, !dbg !5566
  %36 = load i8** %35, align 8, !dbg !5566
  %37 = load %4** %stream_addr, align 8, !dbg !5566
  %38 = getelementptr inbounds %4* %37, i32 0, i32 3, !dbg !5566
  %39 = load i8** %38, align 8, !dbg !5566
  %40 = icmp ne i8* %36, %39, !dbg !5566
  br i1 %40, label %bb6, label %bb13, !dbg !5566

bb6:                                              ; preds = %bb5
  %41 = load %4** %stream_addr, align 8, !dbg !5567
  %42 = getelementptr inbounds %4* %41, i32 0, i32 4, !dbg !5567
  %43 = load i8** %42, align 8, !dbg !5567
  %44 = load %4** %stream_addr, align 8, !dbg !5567
  %45 = getelementptr inbounds %4* %44, i32 0, i32 5, !dbg !5567
  %46 = load i8** %45, align 8, !dbg !5567
  %47 = icmp eq i8* %43, %46, !dbg !5567
  br i1 %47, label %bb7, label %bb8, !dbg !5567

bb7:                                              ; preds = %bb6
  %48 = load %4** %stream_addr, align 8, !dbg !5567
  %49 = call i64 @__stdio_wcommit(%4* noalias %48) nounwind, !dbg !5567
  %50 = icmp ne i64 %49, 0, !dbg !5567
  br i1 %50, label %BAD, label %bb8, !dbg !5567

bb8:                                              ; preds = %bb7, %bb6
  %51 = load %4** %stream_addr, align 8, !dbg !5568
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !5568
  %53 = load i8** %52, align 8, !dbg !5568
  %54 = load i32* %c_addr, align 4, !dbg !5568
  %55 = trunc i32 %54 to i8, !dbg !5568
  store i8 %55, i8* %53, align 1, !dbg !5568
  %56 = getelementptr inbounds i8* %53, i64 1, !dbg !5568
  %57 = load %4** %stream_addr, align 8, !dbg !5568
  %58 = getelementptr inbounds %4* %57, i32 0, i32 5, !dbg !5568
  store i8* %56, i8** %58, align 8, !dbg !5568
  %59 = load %4** %stream_addr, align 8, !dbg !5569
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !5569
  %61 = load i16* %60, align 8, !dbg !5569
  %62 = zext i16 %61 to i32, !dbg !5569
  %63 = and i32 %62, 256, !dbg !5569
  %64 = icmp ne i32 %63, 0, !dbg !5569
  br i1 %64, label %bb9, label %bb14, !dbg !5569

bb9:                                              ; preds = %bb8
  %65 = load i32* %c_addr, align 4, !dbg !5570
  %66 = trunc i32 %65 to i8, !dbg !5570
  %67 = icmp eq i8 %66, 10, !dbg !5570
  br i1 %67, label %bb10, label %bb14, !dbg !5570

bb10:                                             ; preds = %bb9
  %68 = load %4** %stream_addr, align 8, !dbg !5570
  %69 = call i64 @__stdio_wcommit(%4* noalias %68) nounwind, !dbg !5570
  %70 = icmp ne i64 %69, 0, !dbg !5570
  br i1 %70, label %bb11, label %bb14, !dbg !5570

bb11:                                             ; preds = %bb10
  %71 = load %4** %stream_addr, align 8, !dbg !5571
  %72 = getelementptr inbounds %4* %71, i32 0, i32 5, !dbg !5571
  %73 = load i8** %72, align 8, !dbg !5571
  %74 = getelementptr inbounds i8* %73, i64 -1, !dbg !5571
  %75 = load %4** %stream_addr, align 8, !dbg !5571
  %76 = getelementptr inbounds %4* %75, i32 0, i32 5, !dbg !5571
  store i8* %74, i8** %76, align 8, !dbg !5571
  br label %BAD, !dbg !5571

bb13:                                             ; preds = %bb5
  %77 = load i32* %c_addr, align 4, !dbg !5572
  %78 = trunc i32 %77 to i8, !dbg !5572
  store i8 %78, i8* %uc, align 1, !dbg !5572
  %79 = load %4** %stream_addr, align 8, !dbg !5574
  %80 = call i64 @__stdio_WRITE(%4* %79, i8* %uc, i64 1) nounwind, !dbg !5574
  %81 = icmp eq i64 %80, 0, !dbg !5574
  br i1 %81, label %BAD, label %bb14, !dbg !5574

bb14:                                             ; preds = %bb8, %bb9, %bb10, %bb13
  %82 = load i32* %c_addr, align 4, !dbg !5575
  %83 = trunc i32 %82 to i8, !dbg !5575
  %84 = zext i8 %83 to i32, !dbg !5575
  store i32 %84, i32* %0, align 4, !dbg !5575
  br label %bb15, !dbg !5575

BAD:                                              ; preds = %bb13, %bb11, %bb7, %bb2
  store i32 -1, i32* %0, align 4, !dbg !5576
  br label %bb15, !dbg !5576

bb15:                                             ; preds = %BAD, %bb14, %bb4, %bb
  %85 = load i32* %0, align 4, !dbg !5562
  store i32 %85, i32* %retval, align 4, !dbg !5562
  %retval16 = load i32* %retval, !dbg !5562
  ret i32 %retval16, !dbg !5562
}

define i32 @__freading(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5577
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5577
  %3 = load i16* %2, align 8, !dbg !5577
  %4 = zext i16 %3 to i32, !dbg !5577
  %5 = and i32 %4, 35, !dbg !5577
  store i32 %5, i32* %0, align 4, !dbg !5577
  %6 = load i32* %0, align 4, !dbg !5577
  store i32 %6, i32* %retval, align 4, !dbg !5577
  %retval1 = load i32* %retval, !dbg !5577
  ret i32 %retval1, !dbg !5577
}

define internal void @__check_one_fd(i32 %fd, i32 %mode) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %mode_addr = alloca i32, align 4
  %iftmp.0 = alloca i32
  %st = alloca %9
  %nullfd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store i32 %mode, i32* %mode_addr
  %0 = load i32* %fd_addr, align 4, !dbg !5579
  %1 = call i32 (i32, i32, ...)* @fcntl(i32 %0, i32 1) nounwind, !dbg !5579
  %2 = icmp ne i32 %1, -1, !dbg !5579
  br i1 %2, label %bb2, label %bb, !dbg !5579

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !5579
  %4 = load i32* %3, align 4, !dbg !5579
  %5 = icmp ne i32 %4, 9, !dbg !5579
  br i1 %5, label %bb2, label %bb1, !dbg !5579

bb1:                                              ; preds = %bb
  store i32 1, i32* %iftmp.0, align 4, !dbg !5579
  br label %bb3, !dbg !5579

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !5579
  br label %bb3, !dbg !5579

bb3:                                              ; preds = %bb2, %bb1
  %6 = load i32* %iftmp.0, align 4, !dbg !5579
  %7 = sext i32 %6 to i64, !dbg !5579
  %8 = icmp ne i64 %7, 0, !dbg !5579
  br i1 %8, label %bb4, label %return, !dbg !5579

bb4:                                              ; preds = %bb3
  %9 = load i32* %mode_addr, align 4, !dbg !5581
  %10 = call i32 (i8*, i32, ...)* @open(i8* getelementptr inbounds ([10 x i8]* @.str1118, i64 0, i64 0), i32 %9) nounwind, !dbg !5581
  store i32 %10, i32* %nullfd, align 4, !dbg !5581
  %11 = load i32* %nullfd, align 4, !dbg !5583
  %12 = load i32* %fd_addr, align 4, !dbg !5583
  %13 = icmp ne i32 %11, %12, !dbg !5583
  br i1 %13, label %bb8, label %bb5, !dbg !5583

bb5:                                              ; preds = %bb4
  %14 = load i32* %fd_addr, align 4, !dbg !5583
  %15 = call i32 bitcast (i32 (i32, %struct.stat*)* @fstat to i32 (i32, %9*)*)(i32 %14, %9* %st) nounwind, !dbg !5583
  %16 = icmp ne i32 %15, 0, !dbg !5583
  br i1 %16, label %bb8, label %bb6, !dbg !5583

bb6:                                              ; preds = %bb5
  %17 = getelementptr inbounds %9* %st, i32 0, i32 3, !dbg !5583
  %18 = load i32* %17, align 8, !dbg !5583
  %19 = and i32 %18, 61440, !dbg !5583
  %20 = icmp ne i32 %19, 8192, !dbg !5583
  br i1 %20, label %bb8, label %bb7, !dbg !5583

bb7:                                              ; preds = %bb6
  %21 = getelementptr inbounds %9* %st, i32 0, i32 7, !dbg !5583
  %22 = load i64* %21, align 8, !dbg !5583
  %23 = call i64 @gnu_dev_makedev409(i32 1, i32 3) nounwind, !dbg !5583
  %24 = icmp ne i64 %22, %23, !dbg !5583
  br i1 %24, label %bb8, label %return, !dbg !5583

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb4
  call void @abort() noreturn nounwind, !dbg !5584
  unreachable, !dbg !5584

return:                                           ; preds = %bb3, %bb7
  ret void, !dbg !5585
}

define internal i64 @gnu_dev_makedev409(i32 %__major, i32 %__minor) nounwind inlinehint {
entry:
  %__major_addr = alloca i32, align 4
  %__minor_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %__major, i32* %__major_addr
  store i32 %__minor, i32* %__minor_addr
  %1 = load i32* %__minor_addr, align 4, !dbg !5586
  %2 = and i32 %1, 255, !dbg !5586
  %3 = load i32* %__major_addr, align 4, !dbg !5586
  %4 = and i32 %3, 4095, !dbg !5586
  %int_cast_to_i64 = zext i32 8 to i64
  %5 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %5, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %6 = shl i32 %4, 8, !dbg !5586
  %7 = or i32 %2, %6, !dbg !5586
  %8 = zext i32 %7 to i64, !dbg !5586
  %9 = load i32* %__minor_addr, align 4, !dbg !5586
  %10 = zext i32 %9 to i64, !dbg !5586
  %11 = and i64 %10, 4294967040, !dbg !5586
  %int_cast_to_i641 = bitcast i64 12 to i64
  %12 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %12, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %13 = shl i64 %11, 12, !dbg !5586
  %14 = or i64 %8, %13, !dbg !5586
  %15 = load i32* %__major_addr, align 4, !dbg !5586
  %16 = zext i32 %15 to i64, !dbg !5586
  %17 = and i64 %16, 4294963200, !dbg !5586
  %int_cast_to_i642 = bitcast i64 32 to i64
  %18 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %18, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %19 = shl i64 %17, 32, !dbg !5586
  %20 = or i64 %14, %19, !dbg !5586
  store i64 %20, i64* %0, align 8, !dbg !5586
  %21 = load i64* %0, align 8, !dbg !5586
  store i64 %21, i64* %retval, align 8, !dbg !5586
  %retval1 = load i64* %retval, !dbg !5586
  ret i64 %retval1, !dbg !5586
}

define internal i32 @__check_suid() nounwind {
entry:
  %retval = alloca i32
  %0 = alloca i32
  %uid = alloca i32
  %euid = alloca i32
  %gid = alloca i32
  %egid = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %1 = call i32 @getuid() nounwind, !dbg !5588
  store i32 %1, i32* %uid, align 4, !dbg !5588
  %2 = call i32 @geteuid() nounwind, !dbg !5590
  store i32 %2, i32* %euid, align 4, !dbg !5590
  %3 = call i32 @getgid() nounwind, !dbg !5591
  store i32 %3, i32* %gid, align 4, !dbg !5591
  %4 = call i32 @getegid() nounwind, !dbg !5592
  store i32 %4, i32* %egid, align 4, !dbg !5592
  %5 = load i32* %uid, align 4, !dbg !5593
  %6 = load i32* %euid, align 4, !dbg !5593
  %7 = icmp eq i32 %5, %6, !dbg !5593
  br i1 %7, label %bb, label %bb2, !dbg !5593

bb:                                               ; preds = %entry
  %8 = load i32* %gid, align 4, !dbg !5593
  %9 = load i32* %egid, align 4, !dbg !5593
  %10 = icmp eq i32 %8, %9, !dbg !5593
  br i1 %10, label %bb1, label %bb2, !dbg !5593

bb1:                                              ; preds = %bb
  store i32 0, i32* %0, align 4, !dbg !5594
  br label %bb3, !dbg !5594

bb2:                                              ; preds = %bb, %entry
  store i32 1, i32* %0, align 4, !dbg !5595
  br label %bb3, !dbg !5595

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i32* %0, align 4, !dbg !5594
  store i32 %11, i32* %retval, align 4, !dbg !5594
  %retval4 = load i32* %retval, !dbg !5594
  ret i32 %retval4, !dbg !5594
}

declare i32 @getuid() nounwind

declare i32 @getgid() nounwind

declare i32 @getegid() nounwind

define void @__uClibc_init() nounwind {
entry:
  %0 = load i32* @been_there_done_that.2848, align 4, !dbg !5596
  %1 = icmp ne i32 %0, 0, !dbg !5596
  br i1 %1, label %return, label %bb, !dbg !5596

bb:                                               ; preds = %entry
  %2 = load i32* @been_there_done_that.2848, align 4, !dbg !5598
  %3 = add nsw i32 %2, 1, !dbg !5598
  store i32 %3, i32* @been_there_done_that.2848, align 4, !dbg !5598
  store i64 4096, i64* @__pagesize, align 8, !dbg !5599
  call void @_stdio_init() nounwind, !dbg !5600
  br label %return, !dbg !5600

return:                                           ; preds = %entry, %bb
  ret void, !dbg !5601
}

define void @__uClibc_fini() nounwind {
entry:
  %0 = load void ()** @__app_fini, align 8, !dbg !5602
  %1 = icmp ne void ()* %0, null, !dbg !5602
  br i1 %1, label %bb, label %bb1, !dbg !5602

bb:                                               ; preds = %entry
  %2 = load void ()** @__app_fini, align 8, !dbg !5604
  call void %2() nounwind, !dbg !5604
  br label %bb1, !dbg !5604

bb1:                                              ; preds = %bb, %entry
  %3 = load void ()** @__rtld_fini, align 8, !dbg !5605
  %4 = icmp ne void ()* %3, null, !dbg !5605
  br i1 %4, label %bb2, label %return, !dbg !5605

bb2:                                              ; preds = %bb1
  %5 = load void ()** @__rtld_fini, align 8, !dbg !5606
  call void %5() nounwind, !dbg !5606
  br label %return, !dbg !5606

return:                                           ; preds = %bb1, %bb2
  ret void, !dbg !5607
}

define void @__uClibc_main(i32 (i32, i8**, i8**)* %main, i32 %argc, i8** %argv, void ()* %app_init, void ()* %app_fini, void ()* %rtld_fini, i8* %stack_end) noreturn nounwind {
entry:
  %main_addr = alloca i32 (i32, i8**, i8**)*, align 8
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %app_init_addr = alloca void ()*, align 8
  %app_fini_addr = alloca void ()*, align 8
  %rtld_fini_addr = alloca void ()*, align 8
  %stack_end_addr = alloca i8*, align 8
  %iftmp.10 = alloca i64
  %aux_dat = alloca i64*
  %auxvt = alloca [15 x %struct.Elf64_auxv_t]
  %auxv_entry = alloca %struct.Elf64_auxv_t*
  %"alloca point" = bitcast i32 0 to i32
  store i32 (i32, i8**, i8**)* %main, i32 (i32, i8**, i8**)** %main_addr
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store void ()* %app_init, void ()** %app_init_addr
  store void ()* %app_fini, void ()** %app_fini_addr
  store void ()* %rtld_fini, void ()** %rtld_fini_addr
  store i8* %stack_end, i8** %stack_end_addr
  %0 = load i8** %stack_end_addr, align 8, !dbg !5608
  store i8* %0, i8** @__libc_stack_end, align 8, !dbg !5608
  %1 = load void ()** %rtld_fini_addr, align 8, !dbg !5610
  store void ()* %1, void ()** @__rtld_fini, align 8, !dbg !5610
  %2 = load i32* %argc_addr, align 4, !dbg !5611
  %3 = add nsw i32 %2, 1, !dbg !5611
  %4 = load i8*** %argv_addr, align 8, !dbg !5611
  %5 = sext i32 %3 to i64, !dbg !5611
  %6 = getelementptr inbounds i8** %4, i64 %5, !dbg !5611
  store i8** %6, i8*** @__environ, align 8, !dbg !5611
  %7 = load i8*** %argv_addr, align 8, !dbg !5612
  %8 = load i8** %7, align 8, !dbg !5612
  %9 = load i8*** @__environ, align 8, !dbg !5612
  %10 = bitcast i8** %9 to i8*, !dbg !5612
  %11 = icmp eq i8* %8, %10, !dbg !5612
  br i1 %11, label %bb, label %bb1, !dbg !5612

bb:                                               ; preds = %entry
  %12 = load i8*** %argv_addr, align 8, !dbg !5613
  %13 = load i32* %argc_addr, align 4, !dbg !5613
  %14 = sext i32 %13 to i64, !dbg !5613
  %15 = getelementptr inbounds i8** %12, i64 %14, !dbg !5613
  store i8** %15, i8*** @__environ, align 8, !dbg !5613
  br label %bb1, !dbg !5613

bb1:                                              ; preds = %bb, %entry
  %auxvt2 = bitcast [15 x %struct.Elf64_auxv_t]* %auxvt to %struct.Elf64_auxv_t*, !dbg !5614
  %auxvt23 = bitcast %struct.Elf64_auxv_t* %auxvt2 to i8*, !dbg !5614
  %16 = call i8* @memset(i8* %auxvt23, i32 0, i64 240) nounwind, !dbg !5614
  %17 = load i8*** @__environ, align 8, !dbg !5615
  %18 = bitcast i8** %17 to i64*, !dbg !5615
  store i64* %18, i64** %aux_dat, align 8, !dbg !5615
  br label %bb5, !dbg !5615

bb5:                                              ; preds = %bb5, %bb1
  %19 = load i64** %aux_dat, align 8, !dbg !5616
  %20 = load i64* %19, align 8, !dbg !5616
  %21 = icmp ne i64 %20, 0, !dbg !5616
  %22 = load i64** %aux_dat, align 8, !dbg !5617
  %23 = getelementptr inbounds i64* %22, i64 1, !dbg !5617
  store i64* %23, i64** %aux_dat, align 8, !dbg !5617
  br i1 %21, label %bb5, label %bb10, !dbg !5616

bb7:                                              ; preds = %bb10
  %24 = load i64** %aux_dat, align 8, !dbg !5618
  %25 = bitcast i64* %24 to %struct.Elf64_auxv_t*, !dbg !5618
  store %struct.Elf64_auxv_t* %25, %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5618
  %26 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5620
  %27 = getelementptr inbounds %struct.Elf64_auxv_t* %26, i32 0, i32 0, !dbg !5620
  %28 = load i64* %27, align 8, !dbg !5620
  %29 = icmp ule i64 %28, 14, !dbg !5620
  br i1 %29, label %bb8, label %bb9, !dbg !5620

bb8:                                              ; preds = %bb7
  %30 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5621
  %31 = getelementptr inbounds %struct.Elf64_auxv_t* %30, i32 0, i32 0, !dbg !5621
  %32 = load i64* %31, align 8, !dbg !5621
  %33 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 %32, !dbg !5621
  %34 = bitcast %struct.Elf64_auxv_t* %33 to i8*, !dbg !5621
  %35 = load %struct.Elf64_auxv_t** %auxv_entry, align 8, !dbg !5621
  %36 = bitcast %struct.Elf64_auxv_t* %35 to i8*, !dbg !5621
  %37 = call i8* @memcpy(i8* noalias %34, i8* noalias %36, i64 16) nounwind, !dbg !5621
  br label %bb9, !dbg !5621

bb9:                                              ; preds = %bb8, %bb7
  %38 = load i64** %aux_dat, align 8, !dbg !5622
  %39 = getelementptr inbounds i64* %38, i64 2, !dbg !5622
  store i64* %39, i64** %aux_dat, align 8, !dbg !5622
  br label %bb10, !dbg !5622

bb10:                                             ; preds = %bb5, %bb9
  %40 = load i64** %aux_dat, align 8, !dbg !5623
  %41 = load i64* %40, align 8, !dbg !5623
  %42 = icmp ne i64 %41, 0, !dbg !5623
  br i1 %42, label %bb7, label %bb11, !dbg !5623

bb11:                                             ; preds = %bb10
  call void @__uClibc_init() nounwind, !dbg !5624
  %43 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5625
  %44 = getelementptr inbounds %struct.Elf64_auxv_t* %43, i32 0, i32 1, !dbg !5625
  %45 = getelementptr inbounds %0* %44, i32 0, i32 0, !dbg !5625
  %46 = load i64* %45, align 8, !dbg !5625
  %47 = icmp ne i64 %46, 0, !dbg !5625
  br i1 %47, label %bb12, label %bb13, !dbg !5625

bb12:                                             ; preds = %bb11
  %48 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 6, !dbg !5625
  %49 = getelementptr inbounds %struct.Elf64_auxv_t* %48, i32 0, i32 1, !dbg !5625
  %50 = getelementptr inbounds %0* %49, i32 0, i32 0, !dbg !5625
  %51 = load i64* %50, align 8, !dbg !5625
  store i64 %51, i64* %iftmp.10, align 8, !dbg !5625
  br label %bb14, !dbg !5625

bb13:                                             ; preds = %bb11
  store i64 4096, i64* %iftmp.10, align 8, !dbg !5625
  br label %bb14, !dbg !5625

bb14:                                             ; preds = %bb13, %bb12
  %52 = load i64* %iftmp.10, align 8, !dbg !5625
  store i64 %52, i64* @__pagesize, align 8, !dbg !5625
  %53 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5626
  %54 = getelementptr inbounds %struct.Elf64_auxv_t* %53, i32 0, i32 1, !dbg !5626
  %55 = getelementptr inbounds %0* %54, i32 0, i32 0, !dbg !5626
  %56 = load i64* %55, align 8, !dbg !5626
  %57 = icmp ne i64 %56, -1, !dbg !5626
  br i1 %57, label %bb16, label %bb15, !dbg !5626

bb15:                                             ; preds = %bb14
  %58 = call i32 @__check_suid() nounwind, !dbg !5626
  %59 = icmp ne i32 %58, 0, !dbg !5626
  br i1 %59, label %bb19, label %bb16, !dbg !5626

bb16:                                             ; preds = %bb15, %bb14
  %60 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5626
  %61 = getelementptr inbounds %struct.Elf64_auxv_t* %60, i32 0, i32 1, !dbg !5626
  %62 = getelementptr inbounds %0* %61, i32 0, i32 0, !dbg !5626
  %63 = load i64* %62, align 8, !dbg !5626
  %64 = icmp eq i64 %63, -1, !dbg !5626
  br i1 %64, label %bb20, label %bb17, !dbg !5626

bb17:                                             ; preds = %bb16
  %65 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 11, !dbg !5626
  %66 = getelementptr inbounds %struct.Elf64_auxv_t* %65, i32 0, i32 1, !dbg !5626
  %67 = getelementptr inbounds %0* %66, i32 0, i32 0, !dbg !5626
  %68 = load i64* %67, align 8, !dbg !5626
  %69 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 12, !dbg !5626
  %70 = getelementptr inbounds %struct.Elf64_auxv_t* %69, i32 0, i32 1, !dbg !5626
  %71 = getelementptr inbounds %0* %70, i32 0, i32 0, !dbg !5626
  %72 = load i64* %71, align 8, !dbg !5626
  %73 = icmp ne i64 %68, %72, !dbg !5626
  br i1 %73, label %bb19, label %bb18, !dbg !5626

bb18:                                             ; preds = %bb17
  %74 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 13, !dbg !5626
  %75 = getelementptr inbounds %struct.Elf64_auxv_t* %74, i32 0, i32 1, !dbg !5626
  %76 = getelementptr inbounds %0* %75, i32 0, i32 0, !dbg !5626
  %77 = load i64* %76, align 8, !dbg !5626
  %78 = getelementptr inbounds [15 x %struct.Elf64_auxv_t]* %auxvt, i64 0, i64 14, !dbg !5626
  %79 = getelementptr inbounds %struct.Elf64_auxv_t* %78, i32 0, i32 1, !dbg !5626
  %80 = getelementptr inbounds %0* %79, i32 0, i32 0, !dbg !5626
  %81 = load i64* %80, align 8, !dbg !5626
  %82 = icmp ne i64 %77, %81, !dbg !5626
  br i1 %82, label %bb19, label %bb20, !dbg !5626

bb19:                                             ; preds = %bb18, %bb17, %bb15
  call void @__check_one_fd(i32 0, i32 131072) nounwind, !dbg !5627
  call void @__check_one_fd(i32 1, i32 131074) nounwind, !dbg !5628
  call void @__check_one_fd(i32 2, i32 131074) nounwind, !dbg !5629
  br label %bb20, !dbg !5629

bb20:                                             ; preds = %bb19, %bb18, %bb16
  %83 = load i8*** %argv_addr, align 8, !dbg !5630
  %84 = load i8** %83, align 8, !dbg !5630
  store i8* %84, i8** @__uclibc_progname, align 8, !dbg !5630
  %85 = load void ()** %app_fini_addr, align 8, !dbg !5631
  store void ()* %85, void ()** @__app_fini, align 8, !dbg !5631
  %86 = load void ()** %app_init_addr, align 8, !dbg !5632
  %87 = icmp ne void ()* %86, null, !dbg !5632
  br i1 %87, label %bb21, label %bb22, !dbg !5632

bb21:                                             ; preds = %bb20
  %88 = load void ()** %app_init_addr, align 8, !dbg !5633
  call void %88() nounwind, !dbg !5633
  br label %bb22, !dbg !5633

bb22:                                             ; preds = %bb21, %bb20
  %89 = icmp ne i8* bitcast (i32* ()* @__errno_location to i8*), null, !dbg !5634
  br i1 %89, label %bb23, label %bb24, !dbg !5634

bb23:                                             ; preds = %bb22
  %90 = call i32* @__errno_location() nounwind readnone, !dbg !5635
  store i32 0, i32* %90, align 4, !dbg !5635
  br label %bb24, !dbg !5635

bb24:                                             ; preds = %bb23, %bb22
  %91 = icmp ne i8* bitcast (i32* ()* @__h_errno_location to i8*), null, !dbg !5636
  br i1 %91, label %bb25, label %bb26, !dbg !5636

bb25:                                             ; preds = %bb24
  %92 = call i32* @__h_errno_location() nounwind readnone, !dbg !5637
  store i32 0, i32* %92, align 4, !dbg !5637
  br label %bb26, !dbg !5637

bb26:                                             ; preds = %bb25, %bb24
  %93 = load i8*** @__environ, align 8, !dbg !5638
  %94 = load i32 (i32, i8**, i8**)** %main_addr, align 8, !dbg !5638
  %95 = load i32* %argc_addr, align 4, !dbg !5638
  %96 = load i8*** %argv_addr, align 8, !dbg !5638
  %97 = call i32 %94(i32 %95, i8** %96, i8** %93) nounwind, !dbg !5638
  call void @exit(i32 %97) noreturn nounwind, !dbg !5638
  unreachable, !dbg !5638
}

define i64 @_stdlib_mb_cur_max() nounwind {
entry:
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i64 1, i64* %0, align 8, !dbg !5639
  %1 = load i64* %0, align 8, !dbg !5639
  store i64 %1, i64* %retval, align 8, !dbg !5639
  %retval1 = load i64* %retval, !dbg !5639
  ret i64 %retval1, !dbg !5639
}

declare void @abort() noreturn nounwind

declare i32 @sigprocmask(i32, %struct.__sigset_t* noalias, %struct.__sigset_t* noalias) nounwind

define hidden i32 @atexit(void ()* %func) nounwind {
entry:
  %func_addr = alloca void ()*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store void ()* %func, void ()** %func_addr
  br i1 icmp ne (i8** @__dso_handle, i8** null), label %bb, label %bb1, !dbg !5641

bb:                                               ; preds = %entry
  %1 = load i8** @__dso_handle, align 8, !dbg !5641
  store i8* %1, i8** %iftmp.0, align 8, !dbg !5641
  br label %bb2, !dbg !5641

bb1:                                              ; preds = %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !5641
  br label %bb2, !dbg !5641

bb2:                                              ; preds = %bb1, %bb
  %2 = load void ()** %func_addr, align 8, !dbg !5641
  %3 = bitcast void ()* %2 to void (i8*)*, !dbg !5641
  %4 = load i8** %iftmp.0, align 8, !dbg !5641
  %5 = call i32 @__cxa_atexit(void (i8*)* %3, i8* null, i8* %4) nounwind, !dbg !5641
  store i32 %5, i32* %0, align 4, !dbg !5641
  %6 = load i32* %0, align 4, !dbg !5641
  store i32 %6, i32* %retval, align 4, !dbg !5641
  %retval3 = load i32* %retval, !dbg !5641
  ret i32 %retval3, !dbg !5641
}

define i32 @closedir(%struct.DIR* %dir) nounwind {
entry:
  %dir_addr = alloca %struct.DIR*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %fd = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.DIR* %dir, %struct.DIR** %dir_addr
  %1 = load %struct.DIR** %dir_addr, align 8, !dbg !5643
  %2 = icmp eq %struct.DIR* %1, null, !dbg !5643
  br i1 %2, label %bb, label %bb1, !dbg !5643

bb:                                               ; preds = %entry
  store i32 9, i32* @errno, align 4, !dbg !5645
  store i32 -1, i32* %0, align 4, !dbg !5646
  br label %bb4, !dbg !5646

bb1:                                              ; preds = %entry
  %3 = load %struct.DIR** %dir_addr, align 8, !dbg !5647
  %4 = getelementptr inbounds %struct.DIR* %3, i32 0, i32 0, !dbg !5647
  %5 = load i32* %4, align 8, !dbg !5647
  %6 = icmp eq i32 %5, -1, !dbg !5647
  br i1 %6, label %bb2, label %bb3, !dbg !5647

bb2:                                              ; preds = %bb1
  store i32 9, i32* @errno, align 4, !dbg !5648
  store i32 -1, i32* %0, align 4, !dbg !5649
  br label %bb4, !dbg !5649

bb3:                                              ; preds = %bb1
  %7 = load %struct.DIR** %dir_addr, align 8, !dbg !5650
  %8 = getelementptr inbounds %struct.DIR* %7, i32 0, i32 0, !dbg !5650
  %9 = load i32* %8, align 8, !dbg !5650
  store i32 %9, i32* %fd, align 4, !dbg !5650
  %10 = load %struct.DIR** %dir_addr, align 8, !dbg !5651
  %11 = getelementptr inbounds %struct.DIR* %10, i32 0, i32 0, !dbg !5651
  store i32 -1, i32* %11, align 8, !dbg !5651
  %12 = load %struct.DIR** %dir_addr, align 8, !dbg !5652
  %13 = getelementptr inbounds %struct.DIR* %12, i32 0, i32 3, !dbg !5652
  %14 = load i8** %13, align 8, !dbg !5652
  call void @free(i8* %14) nounwind, !dbg !5652
  %15 = load %struct.DIR** %dir_addr, align 8, !dbg !5653
  %16 = bitcast %struct.DIR* %15 to i8*, !dbg !5653
  call void @free(i8* %16) nounwind, !dbg !5653
  %17 = load i32* %fd, align 4, !dbg !5654
  %18 = call i32 @close(i32 %17) nounwind, !dbg !5654
  store i32 %18, i32* %0, align 4, !dbg !5654
  br label %bb4, !dbg !5654

bb4:                                              ; preds = %bb3, %bb2, %bb
  %19 = load i32* %0, align 4, !dbg !5646
  store i32 %19, i32* %retval, align 4, !dbg !5646
  %retval5 = load i32* %retval, !dbg !5646
  ret i32 %retval5, !dbg !5646
}

define i32 @dirfd(%struct.DIR* %dir) nounwind {
entry:
  %dir_addr = alloca %struct.DIR*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.DIR* %dir, %struct.DIR** %dir_addr
  %1 = load %struct.DIR** %dir_addr, align 8, !dbg !5655
  %2 = icmp eq %struct.DIR* %1, null, !dbg !5655
  br i1 %2, label %bb1, label %bb, !dbg !5655

bb:                                               ; preds = %entry
  %3 = load %struct.DIR** %dir_addr, align 8, !dbg !5655
  %4 = getelementptr inbounds %struct.DIR* %3, i32 0, i32 0, !dbg !5655
  %5 = load i32* %4, align 8, !dbg !5655
  %6 = icmp eq i32 %5, -1, !dbg !5655
  br i1 %6, label %bb1, label %bb2, !dbg !5655

bb1:                                              ; preds = %bb, %entry
  store i32 9, i32* @errno, align 4, !dbg !5657
  store i32 -1, i32* %0, align 4, !dbg !5658
  br label %bb3, !dbg !5658

bb2:                                              ; preds = %bb
  %7 = load %struct.DIR** %dir_addr, align 8, !dbg !5659
  %8 = getelementptr inbounds %struct.DIR* %7, i32 0, i32 0, !dbg !5659
  %9 = load i32* %8, align 8, !dbg !5659
  store i32 %9, i32* %0, align 4, !dbg !5659
  br label %bb3, !dbg !5659

bb3:                                              ; preds = %bb2, %bb1
  %10 = load i32* %0, align 4, !dbg !5658
  store i32 %10, i32* %retval, align 4, !dbg !5658
  %retval4 = load i32* %retval, !dbg !5658
  ret i32 %retval4, !dbg !5658
}

define hidden void @__error(i32 %status, i32 %errnum, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.4 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %message, i8** %message_addr
  %1 = load %4** @stdout, align 8, !dbg !5660
  %2 = call i32 @fflush_unlocked(%4* %1) nounwind, !dbg !5660
  %args1 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5662
  %args12 = bitcast %struct.__va_list_tag* %args1 to i8*, !dbg !5662
  call void @llvm.va_start(i8* %args12), !dbg !5662
  %3 = load %4** @stderr, align 8, !dbg !5663
  %4 = load i8** %message_addr, align 8, !dbg !5663
  %args3 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5663
  %5 = call i32 @vfprintf(%4* noalias %3, i8* noalias %4, %struct.__va_list_tag* %args3) nounwind, !dbg !5663
  %args4 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5664
  %args45 = bitcast %struct.__va_list_tag* %args4 to i8*, !dbg !5664
  call void @llvm.va_end(i8* %args45), !dbg !5664
  %6 = load i32* @error_message_count, align 4, !dbg !5665
  %7 = add i32 %6, 1, !dbg !5665
  store i32 %7, i32* @error_message_count, align 4, !dbg !5665
  %8 = load i32* %errnum_addr, align 4, !dbg !5666
  %9 = icmp ne i32 %8, 0, !dbg !5666
  br i1 %9, label %bb, label %bb6, !dbg !5666

bb:                                               ; preds = %entry
  %10 = load i32* %errnum_addr, align 4, !dbg !5667
  %11 = call i8* @strerror(i32 %10) nounwind, !dbg !5667
  %12 = load %4** @stderr, align 8, !dbg !5667
  %13 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %12, i8* noalias getelementptr inbounds ([5 x i8]* @.str125, i64 0, i64 0), i8* %11) nounwind, !dbg !5667
  br label %bb6, !dbg !5667

bb6:                                              ; preds = %bb, %entry
  %14 = load %4** @stderr, align 8, !dbg !5668
  store %4* %14, %4** %__S, align 8, !dbg !5668
  %15 = load %4** %__S, align 8, !dbg !5668
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !5668
  %17 = load i8** %16, align 8, !dbg !5668
  %18 = load %4** %__S, align 8, !dbg !5668
  %19 = getelementptr inbounds %4* %18, i32 0, i32 8, !dbg !5668
  %20 = load i8** %19, align 8, !dbg !5668
  %21 = icmp ult i8* %17, %20, !dbg !5668
  %22 = load %4** %__S, align 8, !dbg !5668
  br i1 %21, label %bb7, label %bb8, !dbg !5668

bb7:                                              ; preds = %bb6
  %23 = getelementptr inbounds %4* %22, i32 0, i32 5, !dbg !5668
  %24 = load i8** %23, align 8, !dbg !5668
  store i8 10, i8* %24, align 1, !dbg !5668
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5668
  %26 = load %4** %__S, align 8, !dbg !5668
  %27 = getelementptr inbounds %4* %26, i32 0, i32 5, !dbg !5668
  store i8* %25, i8** %27, align 8, !dbg !5668
  store i32 10, i32* %iftmp.4, align 4, !dbg !5668
  br label %bb9, !dbg !5668

bb8:                                              ; preds = %bb6
  %28 = call i32 @__fputc_unlocked(i32 10, %4* %22) nounwind, !dbg !5668
  store i32 %28, i32* %iftmp.4, align 4, !dbg !5668
  br label %bb9, !dbg !5668

bb9:                                              ; preds = %bb8, %bb7
  %29 = load i32* %iftmp.4, align 4, !dbg !5668
  store i32 %29, i32* %0, align 4, !dbg !5668
  %30 = load i32* %status_addr, align 4, !dbg !5670
  %31 = icmp ne i32 %30, 0, !dbg !5670
  br i1 %31, label %bb10, label %return, !dbg !5670

bb10:                                             ; preds = %bb9
  %32 = load i32* %status_addr, align 4, !dbg !5671
  call void @exit(i32 %32) noreturn nounwind, !dbg !5671
  unreachable, !dbg !5671

return:                                           ; preds = %bb9
  ret void, !dbg !5672
}

define hidden void @__error_at_line(i32 %status, i32 %errnum, i8* %file_name, i32 %line_number, i8* %message, ...) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %errnum_addr = alloca i32, align 4
  %file_name_addr = alloca i8*, align 8
  %line_number_addr = alloca i32, align 4
  %message_addr = alloca i8*, align 8
  %iftmp.15 = alloca i32
  %0 = alloca i32
  %args = alloca [1 x %struct.__va_list_tag]
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  store i32 %errnum, i32* %errnum_addr
  store i8* %file_name, i8** %file_name_addr
  store i32 %line_number, i32* %line_number_addr
  store i8* %message, i8** %message_addr
  %1 = load i32* @error_one_per_line, align 4, !dbg !5673
  %2 = icmp ne i32 %1, 0, !dbg !5673
  br i1 %2, label %bb, label %bb5, !dbg !5673

bb:                                               ; preds = %entry
  %3 = load i32* @old_line_number.2047, align 4, !dbg !5675
  %4 = load i32* %line_number_addr, align 4, !dbg !5675
  %5 = icmp eq i32 %3, %4, !dbg !5675
  br i1 %5, label %bb1, label %bb4, !dbg !5675

bb1:                                              ; preds = %bb
  %6 = load i8** @old_file_name.2046, align 8, !dbg !5675
  %7 = load i8** %file_name_addr, align 8, !dbg !5675
  %8 = icmp eq i8* %7, %6, !dbg !5675
  br i1 %8, label %return, label %bb2, !dbg !5675

bb2:                                              ; preds = %bb1
  %9 = load i8** @old_file_name.2046, align 8, !dbg !5675
  %10 = load i8** %file_name_addr, align 8, !dbg !5675
  %11 = call i32 @strcmp(i8* %9, i8* %10) nounwind readonly, !dbg !5675
  %12 = icmp eq i32 %11, 0, !dbg !5675
  br i1 %12, label %return, label %bb4, !dbg !5675

bb4:                                              ; preds = %bb2, %bb
  %13 = load i8** %file_name_addr, align 8, !dbg !5677
  store i8* %13, i8** @old_file_name.2046, align 8, !dbg !5677
  %14 = load i32* %line_number_addr, align 4, !dbg !5678
  store i32 %14, i32* @old_line_number.2047, align 4, !dbg !5678
  br label %bb5, !dbg !5678

bb5:                                              ; preds = %bb4, %entry
  %15 = load %4** @stdout, align 8, !dbg !5679
  %16 = call i32 @fflush_unlocked(%4* %15) nounwind, !dbg !5679
  %17 = load i8** %file_name_addr, align 8, !dbg !5680
  %18 = icmp ne i8* %17, null, !dbg !5680
  br i1 %18, label %bb6, label %bb7, !dbg !5680

bb6:                                              ; preds = %bb5
  %19 = load %4** @stderr, align 8, !dbg !5681
  %20 = load i8** %file_name_addr, align 8, !dbg !5681
  %21 = load i32* %line_number_addr, align 4, !dbg !5681
  %22 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %19, i8* noalias getelementptr inbounds ([8 x i8]* @.str1126, i64 0, i64 0), i8* %20, i32 %21) nounwind, !dbg !5681
  br label %bb7, !dbg !5681

bb7:                                              ; preds = %bb6, %bb5
  %args8 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5682
  %args89 = bitcast %struct.__va_list_tag* %args8 to i8*, !dbg !5682
  call void @llvm.va_start(i8* %args89), !dbg !5682
  %23 = load %4** @stderr, align 8, !dbg !5683
  %24 = load i8** %message_addr, align 8, !dbg !5683
  %args10 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5683
  %25 = call i32 @vfprintf(%4* noalias %23, i8* noalias %24, %struct.__va_list_tag* %args10) nounwind, !dbg !5683
  %args11 = bitcast [1 x %struct.__va_list_tag]* %args to %struct.__va_list_tag*, !dbg !5684
  %args1112 = bitcast %struct.__va_list_tag* %args11 to i8*, !dbg !5684
  call void @llvm.va_end(i8* %args1112), !dbg !5684
  %26 = load i32* @error_message_count, align 4, !dbg !5685
  %27 = add i32 %26, 1, !dbg !5685
  store i32 %27, i32* @error_message_count, align 4, !dbg !5685
  %28 = load i32* %errnum_addr, align 4, !dbg !5686
  %29 = icmp ne i32 %28, 0, !dbg !5686
  br i1 %29, label %bb13, label %bb14, !dbg !5686

bb13:                                             ; preds = %bb7
  %30 = load i32* %errnum_addr, align 4, !dbg !5687
  %31 = call i8* @strerror(i32 %30) nounwind, !dbg !5687
  %32 = load %4** @stderr, align 8, !dbg !5687
  %33 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %32, i8* noalias getelementptr inbounds ([5 x i8]* @.str125, i64 0, i64 0), i8* %31) nounwind, !dbg !5687
  br label %bb14, !dbg !5687

bb14:                                             ; preds = %bb13, %bb7
  %34 = load %4** @stderr, align 8, !dbg !5688
  store %4* %34, %4** %__S, align 8, !dbg !5688
  %35 = load %4** %__S, align 8, !dbg !5688
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !5688
  %37 = load i8** %36, align 8, !dbg !5688
  %38 = load %4** %__S, align 8, !dbg !5688
  %39 = getelementptr inbounds %4* %38, i32 0, i32 8, !dbg !5688
  %40 = load i8** %39, align 8, !dbg !5688
  %41 = icmp ult i8* %37, %40, !dbg !5688
  %42 = load %4** %__S, align 8, !dbg !5688
  br i1 %41, label %bb15, label %bb16, !dbg !5688

bb15:                                             ; preds = %bb14
  %43 = getelementptr inbounds %4* %42, i32 0, i32 5, !dbg !5688
  %44 = load i8** %43, align 8, !dbg !5688
  store i8 10, i8* %44, align 1, !dbg !5688
  %45 = getelementptr inbounds i8* %44, i64 1, !dbg !5688
  %46 = load %4** %__S, align 8, !dbg !5688
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !5688
  store i8* %45, i8** %47, align 8, !dbg !5688
  store i32 10, i32* %iftmp.15, align 4, !dbg !5688
  br label %bb17, !dbg !5688

bb16:                                             ; preds = %bb14
  %48 = call i32 @__fputc_unlocked(i32 10, %4* %42) nounwind, !dbg !5688
  store i32 %48, i32* %iftmp.15, align 4, !dbg !5688
  br label %bb17, !dbg !5688

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %iftmp.15, align 4, !dbg !5688
  store i32 %49, i32* %0, align 4, !dbg !5688
  %50 = load i32* %status_addr, align 4, !dbg !5690
  %51 = icmp ne i32 %50, 0, !dbg !5690
  br i1 %51, label %bb18, label %return, !dbg !5690

bb18:                                             ; preds = %bb17
  %52 = load i32* %status_addr, align 4, !dbg !5691
  call void @exit(i32 %52) noreturn nounwind, !dbg !5691
  unreachable, !dbg !5691

return:                                           ; preds = %bb17, %bb2, %bb1
  ret void, !dbg !5692
}

define void @exit(i32 %rv) noreturn nounwind {
entry:
  %rv_addr = alloca i32, align 4
  %"alloca point" = bitcast i32 0 to i32
  store i32 %rv, i32* %rv_addr
  %0 = load void (i32)** @__exit_cleanup, align 8, !dbg !5693
  %1 = icmp ne void (i32)* %0, null, !dbg !5693
  br i1 %1, label %bb, label %bb1, !dbg !5693

bb:                                               ; preds = %entry
  %2 = load void (i32)** @__exit_cleanup, align 8, !dbg !5695
  %3 = load i32* %rv_addr, align 4, !dbg !5695
  call void %2(i32 %3) nounwind, !dbg !5695
  br label %bb1, !dbg !5695

bb1:                                              ; preds = %bb, %entry
  call void @__uClibc_fini() nounwind, !dbg !5696
  call void @_stdio_term() nounwind, !dbg !5697
  %4 = load i32* %rv_addr, align 4, !dbg !5698
  call void @_exit(i32 %4) noreturn nounwind, !dbg !5698
  unreachable, !dbg !5698
}

define i32 @fclose(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %rv = alloca i32
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %rv, align 4, !dbg !5699
  %1 = load %4** @_stdio_openlist, align 8, !dbg !5701
  store %4* %1, %4** %ptr, align 8, !dbg !5701
  %2 = load %4** @_stdio_openlist, align 8, !dbg !5703
  store %4* %2, %4** %ptr, align 8, !dbg !5703
  %3 = load %4** %ptr, align 8, !dbg !5703
  %4 = load %4** %stream_addr, align 8, !dbg !5703
  %5 = icmp eq %4* %3, %4, !dbg !5703
  br i1 %5, label %bb, label %bb5, !dbg !5703

bb:                                               ; preds = %entry
  %6 = load %4** %stream_addr, align 8, !dbg !5704
  %7 = getelementptr inbounds %4* %6, i32 0, i32 9, !dbg !5704
  %8 = load %4** %7, align 8, !dbg !5704
  store %4* %8, %4** @_stdio_openlist, align 8, !dbg !5704
  br label %bb6, !dbg !5704

bb2:                                              ; preds = %bb5
  %9 = load %4** %ptr, align 8, !dbg !5705
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !5705
  %11 = load %4** %10, align 8, !dbg !5705
  %12 = load %4** %stream_addr, align 8, !dbg !5705
  %13 = icmp eq %4* %11, %12, !dbg !5705
  br i1 %13, label %bb3, label %bb4, !dbg !5705

bb3:                                              ; preds = %bb2
  %14 = load %4** %stream_addr, align 8, !dbg !5706
  %15 = getelementptr inbounds %4* %14, i32 0, i32 9, !dbg !5706
  %16 = load %4** %15, align 8, !dbg !5706
  %17 = load %4** %ptr, align 8, !dbg !5706
  %18 = getelementptr inbounds %4* %17, i32 0, i32 9, !dbg !5706
  store %4* %16, %4** %18, align 8, !dbg !5706
  br label %bb6, !dbg !5706

bb4:                                              ; preds = %bb2
  %19 = load %4** %ptr, align 8, !dbg !5707
  %20 = getelementptr inbounds %4* %19, i32 0, i32 9, !dbg !5707
  %21 = load %4** %20, align 8, !dbg !5707
  store %4* %21, %4** %ptr, align 8, !dbg !5707
  br label %bb5, !dbg !5707

bb5:                                              ; preds = %entry, %bb4
  %22 = load %4** %ptr, align 8, !dbg !5708
  %23 = icmp ne %4* %22, null, !dbg !5708
  br i1 %23, label %bb2, label %bb6, !dbg !5708

bb6:                                              ; preds = %bb5, %bb3, %bb
  %24 = load %4** %stream_addr, align 8, !dbg !5709
  %25 = getelementptr inbounds %4* %24, i32 0, i32 0, !dbg !5709
  %26 = load i16* %25, align 8, !dbg !5709
  %27 = zext i16 %26 to i32, !dbg !5709
  %28 = and i32 %27, 64, !dbg !5709
  %29 = icmp ne i32 %28, 0, !dbg !5709
  br i1 %29, label %bb7, label %bb8, !dbg !5709

bb7:                                              ; preds = %bb6
  %30 = load %4** %stream_addr, align 8, !dbg !5710
  %31 = call i32 @fflush_unlocked(%4* %30) nounwind, !dbg !5710
  store i32 %31, i32* %rv, align 4, !dbg !5710
  br label %bb8, !dbg !5710

bb8:                                              ; preds = %bb7, %bb6
  %32 = load %4** %stream_addr, align 8, !dbg !5711
  %33 = getelementptr inbounds %4* %32, i32 0, i32 2, !dbg !5711
  %34 = load i32* %33, align 4, !dbg !5711
  %35 = call i32 @close(i32 %34) nounwind, !dbg !5711
  %36 = icmp slt i32 %35, 0, !dbg !5711
  br i1 %36, label %bb9, label %bb10, !dbg !5711

bb9:                                              ; preds = %bb8
  store i32 -1, i32* %rv, align 4, !dbg !5712
  br label %bb10, !dbg !5712

bb10:                                             ; preds = %bb9, %bb8
  %37 = load %4** %stream_addr, align 8, !dbg !5713
  %38 = getelementptr inbounds %4* %37, i32 0, i32 2, !dbg !5713
  store i32 -1, i32* %38, align 4, !dbg !5713
  %39 = load %4** %stream_addr, align 8, !dbg !5714
  %40 = getelementptr inbounds %4* %39, i32 0, i32 0, !dbg !5714
  %41 = load i16* %40, align 8, !dbg !5714
  %42 = and i16 %41, 24576, !dbg !5714
  %43 = load %4** %stream_addr, align 8, !dbg !5714
  %44 = getelementptr inbounds %4* %43, i32 0, i32 0, !dbg !5714
  store i16 %42, i16* %44, align 8, !dbg !5714
  %45 = load %4** %stream_addr, align 8, !dbg !5715
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !5715
  %47 = load i16* %46, align 8, !dbg !5715
  %48 = or i16 %47, 48, !dbg !5715
  %49 = load %4** %stream_addr, align 8, !dbg !5715
  %50 = getelementptr inbounds %4* %49, i32 0, i32 0, !dbg !5715
  store i16 %48, i16* %50, align 8, !dbg !5715
  %51 = load %4** %stream_addr, align 8, !dbg !5716
  %52 = getelementptr inbounds %4* %51, i32 0, i32 0, !dbg !5716
  %53 = load i16* %52, align 8, !dbg !5716
  %54 = zext i16 %53 to i32, !dbg !5716
  %55 = and i32 %54, 16384, !dbg !5716
  %56 = icmp ne i32 %55, 0, !dbg !5716
  br i1 %56, label %bb11, label %bb12, !dbg !5716

bb11:                                             ; preds = %bb10
  %57 = load %4** %stream_addr, align 8, !dbg !5716
  %58 = getelementptr inbounds %4* %57, i32 0, i32 3, !dbg !5716
  %59 = load i8** %58, align 8, !dbg !5716
  call void @free(i8* %59) nounwind, !dbg !5716
  br label %bb12, !dbg !5716

bb12:                                             ; preds = %bb11, %bb10
  %60 = load %4** %stream_addr, align 8, !dbg !5717
  %61 = getelementptr inbounds %4* %60, i32 0, i32 0, !dbg !5717
  %62 = load i16* %61, align 8, !dbg !5717
  %63 = zext i16 %62 to i32, !dbg !5717
  %64 = and i32 %63, 8192, !dbg !5717
  %65 = icmp ne i32 %64, 0, !dbg !5717
  br i1 %65, label %bb13, label %bb14, !dbg !5717

bb13:                                             ; preds = %bb12
  %66 = load %4** %stream_addr, align 8, !dbg !5717
  %67 = bitcast %4* %66 to i8*, !dbg !5717
  call void @free(i8* %67) nounwind, !dbg !5717
  br label %bb14, !dbg !5717

bb14:                                             ; preds = %bb13, %bb12
  %68 = load i32* %rv, align 4, !dbg !5718
  store i32 %68, i32* %0, align 4, !dbg !5718
  %69 = load i32* %0, align 4, !dbg !5718
  store i32 %69, i32* %retval, align 4, !dbg !5718
  %retval15 = load i32* %retval, !dbg !5718
  ret i32 %retval15, !dbg !5718
}

define %4* @fdopen(i32 %filedes, i8* %mode) nounwind {
entry:
  %filedes_addr = alloca i32, align 4
  %mode_addr = alloca i8*, align 8
  %retval = alloca %4*
  %iftmp.0 = alloca %4*
  %0 = alloca %4*
  %cur_mode = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i32 %filedes, i32* %filedes_addr
  store i8* %mode, i8** %mode_addr
  %1 = load i32* %filedes_addr, align 4, !dbg !5719
  %2 = call i32 (i32, i32, ...)* @fcntl(i32 %1, i32 3) nounwind, !dbg !5719
  %3 = sext i32 %2 to i64, !dbg !5719
  store i64 %3, i64* %cur_mode, align 8, !dbg !5719
  %4 = load i64* %cur_mode, align 8, !dbg !5719
  %5 = icmp ne i64 %4, -1, !dbg !5719
  br i1 %5, label %bb, label %bb1, !dbg !5719

bb:                                               ; preds = %entry
  %6 = load i64* %cur_mode, align 8, !dbg !5719
  %7 = load i8** %mode_addr, align 8, !dbg !5719
  %8 = load i32* %filedes_addr, align 4, !dbg !5719
  %9 = call %4* @_stdio_fopen(i64 %6, i8* noalias %7, %4* noalias null, i32 %8) nounwind, !dbg !5719
  store %4* %9, %4** %iftmp.0, align 8, !dbg !5719
  br label %bb2, !dbg !5719

bb1:                                              ; preds = %entry
  store %4* null, %4** %iftmp.0, align 8, !dbg !5719
  br label %bb2, !dbg !5719

bb2:                                              ; preds = %bb1, %bb
  %10 = load %4** %iftmp.0, align 8, !dbg !5719
  store %4* %10, %4** %0, align 8, !dbg !5719
  %11 = load %4** %0, align 8, !dbg !5719
  store %4* %11, %4** %retval, align 8, !dbg !5719
  %retval3 = load %4** %retval, !dbg !5719
  ret %4* %retval3, !dbg !5719
}

define i32 @ferror_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5721
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5721
  %3 = load i16* %2, align 8, !dbg !5721
  %4 = zext i16 %3 to i32, !dbg !5721
  %5 = and i32 %4, 8, !dbg !5721
  store i32 %5, i32* %0, align 4, !dbg !5721
  %6 = load i32* %0, align 4, !dbg !5721
  store i32 %6, i32* %retval, align 4, !dbg !5721
  %retval1 = load i32* %retval, !dbg !5721
  ret i32 %retval1, !dbg !5721
}

define i32 @fflush_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %retval1 = alloca i32
  %bufmask = alloca i16
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 0, i32* %retval1, align 4, !dbg !5723
  store i16 256, i16* %bufmask, align 2, !dbg !5725
  %1 = load %4** %stream_addr, align 8, !dbg !5726
  %2 = icmp eq %4* %1, bitcast (%4** @_stdio_openlist to %4*), !dbg !5726
  br i1 %2, label %bb, label %bb2, !dbg !5726

bb:                                               ; preds = %entry
  store %4* null, %4** %stream_addr, align 8, !dbg !5727
  store i16 0, i16* %bufmask, align 2, !dbg !5728
  br label %bb2, !dbg !5728

bb2:                                              ; preds = %bb, %entry
  %3 = load %4** %stream_addr, align 8, !dbg !5729
  %4 = icmp eq %4* %3, null, !dbg !5729
  br i1 %4, label %bb3, label %bb12, !dbg !5729

bb3:                                              ; preds = %bb2
  %5 = load %4** @_stdio_openlist, align 8, !dbg !5730
  store %4* %5, %4** %stream_addr, align 8, !dbg !5730
  br label %bb10, !dbg !5730

bb4:                                              ; preds = %bb10
  %6 = load %4** %stream_addr, align 8, !dbg !5731
  %7 = getelementptr inbounds %4* %6, i32 0, i32 0, !dbg !5731
  %8 = load i16* %7, align 8, !dbg !5731
  %9 = zext i16 %8 to i32, !dbg !5731
  %10 = and i32 %9, 64, !dbg !5731
  %11 = icmp ne i32 %10, 0, !dbg !5731
  br i1 %11, label %bb5, label %bb9, !dbg !5731

bb5:                                              ; preds = %bb4
  %12 = load %4** %stream_addr, align 8, !dbg !5732
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !5732
  %14 = load i16* %13, align 8, !dbg !5732
  %15 = load i16* %bufmask, align 2, !dbg !5732
  %16 = or i16 %14, %15, !dbg !5732
  %17 = xor i16 %16, 320, !dbg !5732
  %18 = zext i16 %17 to i32, !dbg !5732
  %19 = and i32 %18, 832, !dbg !5732
  %20 = icmp eq i32 %19, 0, !dbg !5732
  br i1 %20, label %bb6, label %bb9, !dbg !5732

bb6:                                              ; preds = %bb5
  %21 = load %4** %stream_addr, align 8, !dbg !5733
  %22 = call i64 @__stdio_wcommit(%4* noalias %21) nounwind, !dbg !5733
  %23 = icmp eq i64 %22, 0, !dbg !5733
  br i1 %23, label %bb7, label %bb8, !dbg !5733

bb7:                                              ; preds = %bb6
  %24 = load %4** %stream_addr, align 8, !dbg !5734
  %25 = getelementptr inbounds %4* %24, i32 0, i32 3, !dbg !5734
  %26 = load i8** %25, align 8, !dbg !5734
  %27 = load %4** %stream_addr, align 8, !dbg !5734
  %28 = getelementptr inbounds %4* %27, i32 0, i32 8, !dbg !5734
  store i8* %26, i8** %28, align 8, !dbg !5734
  %29 = load %4** %stream_addr, align 8, !dbg !5735
  %30 = getelementptr inbounds %4* %29, i32 0, i32 0, !dbg !5735
  %31 = load i16* %30, align 8, !dbg !5735
  %32 = and i16 %31, -65, !dbg !5735
  %33 = load %4** %stream_addr, align 8, !dbg !5735
  %34 = getelementptr inbounds %4* %33, i32 0, i32 0, !dbg !5735
  store i16 %32, i16* %34, align 8, !dbg !5735
  br label %bb9, !dbg !5735

bb8:                                              ; preds = %bb6
  store i32 -1, i32* %retval1, align 4, !dbg !5736
  br label %bb9, !dbg !5736

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb4
  %35 = load %4** %stream_addr, align 8, !dbg !5737
  %36 = getelementptr inbounds %4* %35, i32 0, i32 9, !dbg !5737
  %37 = load %4** %36, align 8, !dbg !5737
  store %4* %37, %4** %stream_addr, align 8, !dbg !5737
  br label %bb10, !dbg !5737

bb10:                                             ; preds = %bb9, %bb3
  %38 = load %4** %stream_addr, align 8, !dbg !5738
  %39 = icmp ne %4* %38, null, !dbg !5738
  br i1 %39, label %bb4, label %bb16, !dbg !5738

bb12:                                             ; preds = %bb2
  %40 = load %4** %stream_addr, align 8, !dbg !5739
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !5739
  %42 = load i16* %41, align 8, !dbg !5739
  %43 = zext i16 %42 to i32, !dbg !5739
  %44 = and i32 %43, 64, !dbg !5739
  %45 = icmp ne i32 %44, 0, !dbg !5739
  br i1 %45, label %bb13, label %bb16, !dbg !5739

bb13:                                             ; preds = %bb12
  %46 = load %4** %stream_addr, align 8, !dbg !5740
  %47 = call i64 @__stdio_wcommit(%4* noalias %46) nounwind, !dbg !5740
  %48 = icmp eq i64 %47, 0, !dbg !5740
  br i1 %48, label %bb14, label %bb15, !dbg !5740

bb14:                                             ; preds = %bb13
  %49 = load %4** %stream_addr, align 8, !dbg !5741
  %50 = getelementptr inbounds %4* %49, i32 0, i32 3, !dbg !5741
  %51 = load i8** %50, align 8, !dbg !5741
  %52 = load %4** %stream_addr, align 8, !dbg !5741
  %53 = getelementptr inbounds %4* %52, i32 0, i32 8, !dbg !5741
  store i8* %51, i8** %53, align 8, !dbg !5741
  %54 = load %4** %stream_addr, align 8, !dbg !5742
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !5742
  %56 = load i16* %55, align 8, !dbg !5742
  %57 = and i16 %56, -65, !dbg !5742
  %58 = load %4** %stream_addr, align 8, !dbg !5742
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !5742
  store i16 %57, i16* %59, align 8, !dbg !5742
  br label %bb16, !dbg !5742

bb15:                                             ; preds = %bb13
  store i32 -1, i32* %retval1, align 4, !dbg !5743
  br label %bb16, !dbg !5743

bb16:                                             ; preds = %bb10, %bb15, %bb14, %bb12
  %60 = load i32* %retval1, align 4, !dbg !5744
  store i32 %60, i32* %0, align 4, !dbg !5744
  %61 = load i32* %0, align 4, !dbg !5744
  store i32 %61, i32* %retval, align 4, !dbg !5744
  %retval17 = load i32* %retval, !dbg !5744
  ret i32 %retval17, !dbg !5744
}

define i32 @fileno_unlocked(%4* %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5745
  %2 = getelementptr inbounds %4* %1, i32 0, i32 2, !dbg !5745
  %3 = load i32* %2, align 4, !dbg !5745
  %4 = icmp sge i32 %3, 0, !dbg !5745
  br i1 %4, label %bb, label %bb1, !dbg !5745

bb:                                               ; preds = %entry
  %5 = load %4** %stream_addr, align 8, !dbg !5747
  %6 = getelementptr inbounds %4* %5, i32 0, i32 2, !dbg !5747
  %7 = load i32* %6, align 4, !dbg !5747
  store i32 %7, i32* %0, align 4, !dbg !5747
  br label %bb2, !dbg !5747

bb1:                                              ; preds = %entry
  store i32 9, i32* @errno, align 4, !dbg !5748
  store i32 -1, i32* %0, align 4, !dbg !5749
  br label %bb2, !dbg !5749

bb2:                                              ; preds = %bb1, %bb
  %8 = load i32* %0, align 4, !dbg !5747
  store i32 %8, i32* %retval, align 4, !dbg !5747
  %retval3 = load i32* %retval, !dbg !5747
  ret i32 %retval3, !dbg !5747
}

define i32 @fprintf(%4* noalias %stream, i8* noalias %format, ...) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5750
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5750
  call void @llvm.va_start(i8* %arg12), !dbg !5750
  %1 = load %4** @stdout, align 8, !dbg !5752
  %2 = load %4** %stream_addr, align 8, !dbg !5752
  %3 = icmp eq %4* %2, %1, !dbg !5752
  br i1 %3, label %bb3, label %bb, !dbg !5752

bb:                                               ; preds = %entry
  %4 = load %4** @stderr, align 8, !dbg !5752
  %5 = load %4** %stream_addr, align 8, !dbg !5752
  %6 = icmp eq %4* %5, %4, !dbg !5752
  br i1 %6, label %bb3, label %bb5, !dbg !5752

bb3:                                              ; preds = %bb, %entry
  %7 = load i8** %format_addr, align 8, !dbg !5753
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5753
  %8 = call i32 @vprintf(i8* noalias %7, %struct.__va_list_tag* %arg4) nounwind, !dbg !5753
  store i32 %8, i32* %rv, align 4, !dbg !5753
  br label %bb7, !dbg !5753

bb5:                                              ; preds = %bb
  %9 = load %4** %stream_addr, align 8, !dbg !5754
  %10 = load i8** %format_addr, align 8, !dbg !5754
  %arg6 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5754
  %11 = call i32 @vfprintf(%4* noalias %9, i8* noalias %10, %struct.__va_list_tag* %arg6) nounwind, !dbg !5754
  store i32 %11, i32* %rv, align 4, !dbg !5754
  br label %bb7, !dbg !5754

bb7:                                              ; preds = %bb5, %bb3
  %arg8 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5755
  %arg89 = bitcast %struct.__va_list_tag* %arg8 to i8*, !dbg !5755
  call void @llvm.va_end(i8* %arg89), !dbg !5755
  %12 = load i32* %rv, align 4, !dbg !5756
  store i32 %12, i32* %0, align 4, !dbg !5756
  %13 = load i32* %0, align 4, !dbg !5756
  store i32 %13, i32* %retval, align 4, !dbg !5756
  %retval10 = load i32* %retval, !dbg !5756
  ret i32 %retval10, !dbg !5756
}

declare i32 @vprintf(i8* noalias, %struct.__va_list_tag*)

define i32 @fputs_unlocked(i8* noalias %s, %4* noalias %stream) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %n = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i8** %s_addr, align 8, !dbg !5757
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !5757
  store i64 %2, i64* %n, align 8, !dbg !5757
  %3 = load i8** %s_addr, align 8, !dbg !5759
  %4 = load i64* %n, align 8, !dbg !5759
  %5 = load %4** %stream_addr, align 8, !dbg !5759
  %6 = call i64 @fwrite_unlocked(i8* noalias %3, i64 1, i64 %4, %4* noalias %5) nounwind, !dbg !5759
  %7 = load i64* %n, align 8, !dbg !5759
  %8 = icmp eq i64 %6, %7, !dbg !5759
  br i1 %8, label %bb, label %bb1, !dbg !5759

bb:                                               ; preds = %entry
  %9 = load i64* %n, align 8, !dbg !5759
  %10 = trunc i64 %9 to i32, !dbg !5759
  store i32 %10, i32* %iftmp.0, align 4, !dbg !5759
  br label %bb2, !dbg !5759

bb1:                                              ; preds = %entry
  store i32 -1, i32* %iftmp.0, align 4, !dbg !5759
  br label %bb2, !dbg !5759

bb2:                                              ; preds = %bb1, %bb
  %11 = load i32* %iftmp.0, align 4, !dbg !5759
  store i32 %11, i32* %0, align 4, !dbg !5759
  %12 = load i32* %0, align 4, !dbg !5759
  store i32 %12, i32* %retval, align 4, !dbg !5759
  %retval3 = load i32* %retval, !dbg !5759
  ret i32 %retval3, !dbg !5759
}

define i32 @fscanf(%4* noalias %stream, i8* noalias %format, ...) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5760
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !5760
  call void @llvm.va_start(i8* %arg12), !dbg !5760
  %1 = load %4** %stream_addr, align 8, !dbg !5762
  %2 = load i8** %format_addr, align 8, !dbg !5762
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5762
  %3 = call i32 @vfscanf(%4* noalias %1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !5762
  store i32 %3, i32* %rv, align 4, !dbg !5762
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !5763
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !5763
  call void @llvm.va_end(i8* %arg45), !dbg !5763
  %4 = load i32* %rv, align 4, !dbg !5764
  store i32 %4, i32* %0, align 4, !dbg !5764
  %5 = load i32* %0, align 4, !dbg !5764
  store i32 %5, i32* %retval, align 4, !dbg !5764
  %retval6 = load i32* %retval, !dbg !5764
  ret i32 %retval6, !dbg !5764
}

define i32 @fseek(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5765
  %2 = load i64* %offset_addr, align 8, !dbg !5765
  %3 = load i32* %whence_addr, align 4, !dbg !5765
  %4 = call i32 @fseeko64(%4* %1, i64 %2, i32 %3) nounwind, !dbg !5765
  store i32 %4, i32* %0, align 4, !dbg !5765
  %5 = load i32* %0, align 4, !dbg !5765
  store i32 %5, i32* %retval, align 4, !dbg !5765
  %retval1 = load i32* %retval, !dbg !5765
  ret i32 %retval1, !dbg !5765
}

define i64 @fwrite_unlocked(i8* noalias %ptr, i64 %size, i64 %nmemb, %4* noalias %stream) nounwind {
entry:
  %ptr_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %nmemb_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %ptr, i8** %ptr_addr
  store i64 %size, i64* %size_addr
  store i64 %nmemb, i64* %nmemb_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !5767
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !5767
  %3 = load i16* %2, align 8, !dbg !5767
  %4 = zext i16 %3 to i32, !dbg !5767
  %5 = and i32 %4, 192, !dbg !5767
  %6 = icmp eq i32 %5, 192, !dbg !5767
  br i1 %6, label %bb1, label %bb, !dbg !5767

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !5767
  %8 = call i32 @__stdio_trans2w_o(%4* noalias %7, i32 128) nounwind, !dbg !5767
  %9 = icmp eq i32 %8, 0, !dbg !5767
  br i1 %9, label %bb1, label %bb6, !dbg !5767

bb1:                                              ; preds = %bb, %entry
  %10 = load i64* %size_addr, align 8, !dbg !5767
  %11 = icmp ne i64 %10, 0, !dbg !5767
  br i1 %11, label %bb2, label %bb6, !dbg !5767

bb2:                                              ; preds = %bb1
  %12 = load i64* %nmemb_addr, align 8, !dbg !5767
  %13 = icmp ne i64 %12, 0, !dbg !5767
  br i1 %13, label %bb3, label %bb6, !dbg !5767

bb3:                                              ; preds = %bb2
  %14 = load i64* %size_addr, align 8, !dbg !5769
  %int_cast_to_i64 = bitcast i64 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb3
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 -1, %14, !dbg !5769
  %18 = load i64* %nmemb_addr, align 8, !dbg !5769
  %19 = icmp uge i64 %17, %18, !dbg !5769
  br i1 %19, label %bb4, label %bb5, !dbg !5769

bb4:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i64* %size_addr, align 8, !dbg !5770
  %21 = load i64* %nmemb_addr, align 8, !dbg !5770
  %22 = mul i64 %20, %21, !dbg !5770
  %23 = load i8** %ptr_addr, align 8, !dbg !5770
  %24 = load %4** %stream_addr, align 8, !dbg !5770
  %25 = call i64 @__stdio_fwrite(i8* noalias %23, i64 %22, %4* noalias %24) nounwind, !dbg !5770
  %26 = load i64* %size_addr, align 8, !dbg !5770
  %int_cast_to_i641 = bitcast i64 %26 to i64
  %27 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %28 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %28, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %29 = udiv i64 %25, %26, !dbg !5770
  store i64 %29, i64* %0, align 8, !dbg !5770
  br label %bb7, !dbg !5770

bb5:                                              ; preds = %klee_div_zero_check.exit
  %30 = load %4** %stream_addr, align 8, !dbg !5771
  %31 = getelementptr inbounds %4* %30, i32 0, i32 0, !dbg !5771
  %32 = load i16* %31, align 8, !dbg !5771
  %33 = or i16 %32, 8, !dbg !5771
  %34 = load %4** %stream_addr, align 8, !dbg !5771
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !5771
  store i16 %33, i16* %35, align 8, !dbg !5771
  store i32 22, i32* @errno, align 4, !dbg !5772
  br label %bb6, !dbg !5772

bb6:                                              ; preds = %bb5, %bb2, %bb1, %bb
  store i64 0, i64* %0, align 8, !dbg !5773
  br label %bb7, !dbg !5773

bb7:                                              ; preds = %bb6, %klee_div_zero_check.exit3
  %36 = load i64* %0, align 8, !dbg !5770
  store i64 %36, i64* %retval, align 8, !dbg !5770
  %retval8 = load i64* %retval, !dbg !5770
  ret i64 %retval8, !dbg !5770
}

define i64 @strspn(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !5774
  store i8* %1, i8** %s, align 8, !dbg !5774
  %2 = load i8** %s2_addr, align 8, !dbg !5776
  store i8* %2, i8** %p, align 8, !dbg !5776
  br label %bb2, !dbg !5776

bb:                                               ; preds = %bb2
  %3 = load i8** %p, align 8, !dbg !5777
  %4 = load i8* %3, align 1, !dbg !5777
  %5 = load i8** %s, align 8, !dbg !5777
  %6 = load i8* %5, align 1, !dbg !5777
  %7 = icmp eq i8 %4, %6, !dbg !5777
  %8 = zext i1 %7 to i8, !dbg !5777
  %9 = load i8** %p, align 8, !dbg !5777
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !5777
  store i8* %10, i8** %p, align 8, !dbg !5777
  %toBool = icmp ne i8 %8, 0, !dbg !5777
  br i1 %toBool, label %bb1, label %bb2, !dbg !5777

bb1:                                              ; preds = %bb
  %11 = load i8** %s, align 8, !dbg !5778
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !5778
  store i8* %12, i8** %s, align 8, !dbg !5778
  %13 = load i8** %s2_addr, align 8, !dbg !5779
  store i8* %13, i8** %p, align 8, !dbg !5779
  br label %bb2, !dbg !5779

bb2:                                              ; preds = %bb1, %bb, %entry
  %14 = load i8** %p, align 8, !dbg !5780
  %15 = load i8* %14, align 1, !dbg !5780
  %16 = icmp ne i8 %15, 0, !dbg !5780
  br i1 %16, label %bb, label %bb3, !dbg !5780

bb3:                                              ; preds = %bb2
  %17 = load i8** %s, align 8, !dbg !5781
  %18 = ptrtoint i8* %17 to i64, !dbg !5781
  %19 = load i8** %s1_addr, align 8, !dbg !5781
  %20 = ptrtoint i8* %19 to i64, !dbg !5781
  %21 = sub nsw i64 %18, %20, !dbg !5781
  store i64 %21, i64* %0, align 8, !dbg !5781
  %22 = load i64* %0, align 8, !dbg !5781
  store i64 %22, i64* %retval, align 8, !dbg !5781
  %retval4 = load i64* %retval, !dbg !5781
  ret i64 %retval4, !dbg !5781
}

define i8* @getenv(i8* %var) nounwind {
entry:
  %var_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %len = alloca i32
  %ep = alloca i8**
  %"alloca point" = bitcast i32 0 to i32
  store i8* %var, i8** %var_addr
  %1 = load i8*** @__environ, align 8, !dbg !5782
  store i8** %1, i8*** %ep, align 8, !dbg !5782
  %2 = load i8*** %ep, align 8, !dbg !5782
  %3 = icmp eq i8** %2, null, !dbg !5782
  br i1 %3, label %bb, label %bb1, !dbg !5782

bb:                                               ; preds = %entry
  store i8* null, i8** %0, align 8, !dbg !5784
  br label %bb8, !dbg !5784

bb1:                                              ; preds = %entry
  %4 = load i8** %var_addr, align 8, !dbg !5785
  %5 = call i64 @strlen(i8* %4) nounwind readonly, !dbg !5785
  %6 = trunc i64 %5 to i32, !dbg !5785
  store i32 %6, i32* %len, align 4, !dbg !5785
  br label %bb6, !dbg !5785

bb2:                                              ; preds = %bb6
  %7 = load i32* %len, align 4, !dbg !5786
  %8 = sext i32 %7 to i64, !dbg !5786
  %9 = load i8*** %ep, align 8, !dbg !5786
  %10 = load i8** %9, align 8, !dbg !5786
  %11 = load i8** %var_addr, align 8, !dbg !5786
  %12 = call i32 @memcmp(i8* %11, i8* %10, i64 %8) nounwind readonly, !dbg !5786
  %13 = icmp eq i32 %12, 0, !dbg !5786
  br i1 %13, label %bb3, label %bb5, !dbg !5786

bb3:                                              ; preds = %bb2
  %14 = load i8*** %ep, align 8, !dbg !5786
  %15 = load i8** %14, align 8, !dbg !5786
  %16 = load i32* %len, align 4, !dbg !5786
  %17 = sext i32 %16 to i64, !dbg !5786
  %18 = getelementptr inbounds i8* %15, i64 %17, !dbg !5786
  %19 = load i8* %18, align 1, !dbg !5786
  %20 = icmp eq i8 %19, 61, !dbg !5786
  br i1 %20, label %bb4, label %bb5, !dbg !5786

bb4:                                              ; preds = %bb3
  %21 = load i8*** %ep, align 8, !dbg !5787
  %22 = load i8** %21, align 8, !dbg !5787
  %23 = load i32* %len, align 4, !dbg !5787
  %24 = sext i32 %23 to i64, !dbg !5787
  %25 = getelementptr inbounds i8* %22, i64 %24, !dbg !5787
  %26 = getelementptr inbounds i8* %25, i64 1, !dbg !5787
  store i8* %26, i8** %0, align 8, !dbg !5787
  br label %bb8, !dbg !5787

bb5:                                              ; preds = %bb3, %bb2
  %27 = load i8*** %ep, align 8, !dbg !5788
  %28 = getelementptr inbounds i8** %27, i64 1, !dbg !5788
  store i8** %28, i8*** %ep, align 8, !dbg !5788
  br label %bb6, !dbg !5788

bb6:                                              ; preds = %bb5, %bb1
  %29 = load i8*** %ep, align 8, !dbg !5789
  %30 = load i8** %29, align 8, !dbg !5789
  %31 = icmp ne i8* %30, null, !dbg !5789
  br i1 %31, label %bb2, label %bb7, !dbg !5789

bb7:                                              ; preds = %bb6
  store i8* null, i8** %0, align 8, !dbg !5790
  br label %bb8, !dbg !5790

bb8:                                              ; preds = %bb7, %bb4, %bb
  %32 = load i8** %0, align 8, !dbg !5784
  store i8* %32, i8** %retval, align 8, !dbg !5784
  %retval9 = load i8** %retval, !dbg !5784
  ret i8* %retval9, !dbg !5784
}

define i64 @getline(i8** noalias %lineptr, i64* noalias %n, %4* noalias %stream) nounwind {
entry:
  %lineptr_addr = alloca i8**, align 8
  %n_addr = alloca i64*, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8** %lineptr, i8*** %lineptr_addr
  store i64* %n, i64** %n_addr
  store %4* %stream, %4** %stream_addr
  %1 = load i8*** %lineptr_addr, align 8, !dbg !5791
  %2 = load i64** %n_addr, align 8, !dbg !5791
  %3 = load %4** %stream_addr, align 8, !dbg !5791
  %4 = call i64 @getdelim(i8** noalias %1, i64* noalias %2, i32 10, %4* noalias %3) nounwind, !dbg !5791
  store i64 %4, i64* %0, align 8, !dbg !5791
  %5 = load i64* %0, align 8, !dbg !5791
  store i64 %5, i64* %retval, align 8, !dbg !5791
  %retval1 = load i64* %retval, !dbg !5791
  ret i64 %retval1, !dbg !5791
}

define internal void @exchange(i8** %argv, %struct._getopt_data* %d) nounwind {
entry:
  %argv_addr = alloca i8**, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %bottom = alloca i32
  %middle = alloca i32
  %top = alloca i32
  %tem = alloca i8*
  %len = alloca i32
  %i = alloca i32
  %len6 = alloca i32
  %i7 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %argv, i8*** %argv_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %0 = load %struct._getopt_data** %d_addr, align 8, !dbg !5793
  %1 = getelementptr inbounds %struct._getopt_data* %0, i32 0, i32 8, !dbg !5793
  %2 = load i32* %1, align 8, !dbg !5793
  store i32 %2, i32* %bottom, align 4, !dbg !5793
  %3 = load %struct._getopt_data** %d_addr, align 8, !dbg !5795
  %4 = getelementptr inbounds %struct._getopt_data* %3, i32 0, i32 9, !dbg !5795
  %5 = load i32* %4, align 4, !dbg !5795
  store i32 %5, i32* %middle, align 4, !dbg !5795
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5796
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 0, !dbg !5796
  %8 = load i32* %7, align 8, !dbg !5796
  store i32 %8, i32* %top, align 4, !dbg !5796
  br label %bb11, !dbg !5796

bb:                                               ; preds = %bb12
  %9 = load i32* %top, align 4, !dbg !5797
  %10 = load i32* %middle, align 4, !dbg !5797
  %11 = sub nsw i32 %9, %10, !dbg !5797
  %12 = load i32* %middle, align 4, !dbg !5797
  %13 = load i32* %bottom, align 4, !dbg !5797
  %14 = sub nsw i32 %12, %13, !dbg !5797
  %15 = icmp sgt i32 %11, %14, !dbg !5797
  br i1 %15, label %bb1, label %bb5, !dbg !5797

bb1:                                              ; preds = %bb
  %16 = load i32* %middle, align 4, !dbg !5798
  %17 = load i32* %bottom, align 4, !dbg !5798
  %18 = sub nsw i32 %16, %17, !dbg !5798
  store i32 %18, i32* %len, align 4, !dbg !5798
  store i32 0, i32* %i, align 4, !dbg !5800
  br label %bb3, !dbg !5800

bb2:                                              ; preds = %bb3
  %19 = load i32* %bottom, align 4, !dbg !5801
  %20 = load i32* %i, align 4, !dbg !5801
  %21 = add nsw i32 %19, %20, !dbg !5801
  %22 = load i8*** %argv_addr, align 8, !dbg !5801
  %23 = sext i32 %21 to i64, !dbg !5801
  %24 = getelementptr inbounds i8** %22, i64 %23, !dbg !5801
  %25 = load i8** %24, align 1, !dbg !5801
  store i8* %25, i8** %tem, align 8, !dbg !5801
  %26 = load i32* %bottom, align 4, !dbg !5802
  %27 = load i32* %i, align 4, !dbg !5802
  %28 = add nsw i32 %26, %27, !dbg !5802
  %29 = load i32* %middle, align 4, !dbg !5802
  %30 = load i32* %bottom, align 4, !dbg !5802
  %31 = sub nsw i32 %29, %30, !dbg !5802
  %32 = load i32* %top, align 4, !dbg !5802
  %33 = sub nsw i32 %32, %31, !dbg !5802
  %34 = load i32* %i, align 4, !dbg !5802
  %35 = add nsw i32 %33, %34, !dbg !5802
  %36 = load i8*** %argv_addr, align 8, !dbg !5802
  %37 = sext i32 %35 to i64, !dbg !5802
  %38 = getelementptr inbounds i8** %36, i64 %37, !dbg !5802
  %39 = load i8** %38, align 1, !dbg !5802
  %40 = load i8*** %argv_addr, align 8, !dbg !5802
  %41 = sext i32 %28 to i64, !dbg !5802
  %42 = getelementptr inbounds i8** %40, i64 %41, !dbg !5802
  store i8* %39, i8** %42, align 1, !dbg !5802
  %43 = load i32* %middle, align 4, !dbg !5803
  %44 = load i32* %bottom, align 4, !dbg !5803
  %45 = sub nsw i32 %43, %44, !dbg !5803
  %46 = load i32* %top, align 4, !dbg !5803
  %47 = sub nsw i32 %46, %45, !dbg !5803
  %48 = load i32* %i, align 4, !dbg !5803
  %49 = add nsw i32 %47, %48, !dbg !5803
  %50 = load i8*** %argv_addr, align 8, !dbg !5803
  %51 = sext i32 %49 to i64, !dbg !5803
  %52 = getelementptr inbounds i8** %50, i64 %51, !dbg !5803
  %53 = load i8** %tem, align 8, !dbg !5803
  store i8* %53, i8** %52, align 1, !dbg !5803
  %54 = load i32* %i, align 4, !dbg !5800
  %55 = add nsw i32 %54, 1, !dbg !5800
  store i32 %55, i32* %i, align 4, !dbg !5800
  br label %bb3, !dbg !5800

bb3:                                              ; preds = %bb2, %bb1
  %56 = load i32* %i, align 4, !dbg !5800
  %57 = load i32* %len, align 4, !dbg !5800
  %58 = icmp slt i32 %56, %57, !dbg !5800
  br i1 %58, label %bb2, label %bb4, !dbg !5800

bb4:                                              ; preds = %bb3
  %59 = load i32* %top, align 4, !dbg !5804
  %60 = load i32* %len, align 4, !dbg !5804
  %61 = sub nsw i32 %59, %60, !dbg !5804
  store i32 %61, i32* %top, align 4, !dbg !5804
  br label %bb11, !dbg !5804

bb5:                                              ; preds = %bb
  %62 = load i32* %top, align 4, !dbg !5805
  %63 = load i32* %middle, align 4, !dbg !5805
  %64 = sub nsw i32 %62, %63, !dbg !5805
  store i32 %64, i32* %len6, align 4, !dbg !5805
  store i32 0, i32* %i7, align 4, !dbg !5807
  br label %bb9, !dbg !5807

bb8:                                              ; preds = %bb9
  %65 = load i32* %i7, align 4, !dbg !5808
  %66 = add nsw i32 %96, %65, !dbg !5808
  %67 = load i8*** %argv_addr, align 8, !dbg !5808
  %68 = sext i32 %66 to i64, !dbg !5808
  %69 = getelementptr inbounds i8** %67, i64 %68, !dbg !5808
  %70 = load i8** %69, align 1, !dbg !5808
  store i8* %70, i8** %tem, align 8, !dbg !5808
  %71 = load i32* %bottom, align 4, !dbg !5809
  %72 = load i32* %i7, align 4, !dbg !5809
  %73 = add nsw i32 %71, %72, !dbg !5809
  %74 = load i32* %middle, align 4, !dbg !5809
  %75 = load i32* %i7, align 4, !dbg !5809
  %76 = add nsw i32 %74, %75, !dbg !5809
  %77 = load i8*** %argv_addr, align 8, !dbg !5809
  %78 = sext i32 %76 to i64, !dbg !5809
  %79 = getelementptr inbounds i8** %77, i64 %78, !dbg !5809
  %80 = load i8** %79, align 1, !dbg !5809
  %81 = load i8*** %argv_addr, align 8, !dbg !5809
  %82 = sext i32 %73 to i64, !dbg !5809
  %83 = getelementptr inbounds i8** %81, i64 %82, !dbg !5809
  store i8* %80, i8** %83, align 1, !dbg !5809
  %84 = load i32* %middle, align 4, !dbg !5810
  %85 = load i32* %i7, align 4, !dbg !5810
  %86 = add nsw i32 %84, %85, !dbg !5810
  %87 = load i8*** %argv_addr, align 8, !dbg !5810
  %88 = sext i32 %86 to i64, !dbg !5810
  %89 = getelementptr inbounds i8** %87, i64 %88, !dbg !5810
  %90 = load i8** %tem, align 8, !dbg !5810
  store i8* %90, i8** %89, align 1, !dbg !5810
  %91 = load i32* %i7, align 4, !dbg !5807
  %92 = add nsw i32 %91, 1, !dbg !5807
  store i32 %92, i32* %i7, align 4, !dbg !5807
  br label %bb9, !dbg !5807

bb9:                                              ; preds = %bb8, %bb5
  %93 = load i32* %i7, align 4, !dbg !5807
  %94 = load i32* %len6, align 4, !dbg !5807
  %95 = icmp slt i32 %93, %94, !dbg !5807
  %96 = load i32* %bottom, align 4, !dbg !5808
  br i1 %95, label %bb8, label %bb10, !dbg !5807

bb10:                                             ; preds = %bb9
  %97 = load i32* %len6, align 4, !dbg !5811
  %98 = add nsw i32 %96, %97, !dbg !5811
  store i32 %98, i32* %bottom, align 4, !dbg !5811
  br label %bb11, !dbg !5811

bb11:                                             ; preds = %bb10, %bb4, %entry
  %99 = load i32* %top, align 4, !dbg !5812
  %100 = load i32* %middle, align 4, !dbg !5812
  %101 = icmp sle i32 %99, %100, !dbg !5812
  br i1 %101, label %bb13, label %bb12, !dbg !5812

bb12:                                             ; preds = %bb11
  %102 = load i32* %middle, align 4, !dbg !5812
  %103 = load i32* %bottom, align 4, !dbg !5812
  %104 = icmp sgt i32 %102, %103, !dbg !5812
  br i1 %104, label %bb, label %bb13, !dbg !5812

bb13:                                             ; preds = %bb12, %bb11
  %105 = load %struct._getopt_data** %d_addr, align 8, !dbg !5813
  %106 = getelementptr inbounds %struct._getopt_data* %105, i32 0, i32 8, !dbg !5813
  %107 = load i32* %106, align 8, !dbg !5813
  %108 = load %struct._getopt_data** %d_addr, align 8, !dbg !5813
  %109 = getelementptr inbounds %struct._getopt_data* %108, i32 0, i32 0, !dbg !5813
  %110 = load i32* %109, align 8, !dbg !5813
  %111 = load %struct._getopt_data** %d_addr, align 8, !dbg !5813
  %112 = getelementptr inbounds %struct._getopt_data* %111, i32 0, i32 9, !dbg !5813
  %113 = load i32* %112, align 4, !dbg !5813
  %114 = sub nsw i32 %110, %113, !dbg !5813
  %115 = add nsw i32 %107, %114, !dbg !5813
  %116 = load %struct._getopt_data** %d_addr, align 8, !dbg !5813
  %117 = getelementptr inbounds %struct._getopt_data* %116, i32 0, i32 8, !dbg !5813
  store i32 %115, i32* %117, align 8, !dbg !5813
  %118 = load %struct._getopt_data** %d_addr, align 8, !dbg !5814
  %119 = getelementptr inbounds %struct._getopt_data* %118, i32 0, i32 0, !dbg !5814
  %120 = load i32* %119, align 8, !dbg !5814
  %121 = load %struct._getopt_data** %d_addr, align 8, !dbg !5814
  %122 = getelementptr inbounds %struct._getopt_data* %121, i32 0, i32 9, !dbg !5814
  store i32 %120, i32* %122, align 4, !dbg !5814
  ret void, !dbg !5815
}

define internal i8* @_getopt_initialize(i32 %argc, i8** %argv, i8* %optstring, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5816
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 0, !dbg !5816
  %3 = load i32* %2, align 8, !dbg !5816
  %4 = load %struct._getopt_data** %d_addr, align 8, !dbg !5816
  %5 = getelementptr inbounds %struct._getopt_data* %4, i32 0, i32 9, !dbg !5816
  store i32 %3, i32* %5, align 4, !dbg !5816
  %6 = load %struct._getopt_data** %d_addr, align 8, !dbg !5816
  %7 = getelementptr inbounds %struct._getopt_data* %6, i32 0, i32 9, !dbg !5816
  %8 = load i32* %7, align 4, !dbg !5816
  %9 = load %struct._getopt_data** %d_addr, align 8, !dbg !5816
  %10 = getelementptr inbounds %struct._getopt_data* %9, i32 0, i32 8, !dbg !5816
  store i32 %8, i32* %10, align 8, !dbg !5816
  %11 = load %struct._getopt_data** %d_addr, align 8, !dbg !5818
  %12 = getelementptr inbounds %struct._getopt_data* %11, i32 0, i32 5, !dbg !5818
  store i8* null, i8** %12, align 8, !dbg !5818
  %13 = call i8* @getenv(i8* getelementptr inbounds ([16 x i8]* @.str146, i64 0, i64 0)) nounwind, !dbg !5819
  %14 = icmp ne i8* %13, null, !dbg !5819
  %15 = zext i1 %14 to i32, !dbg !5819
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5819
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 7, !dbg !5819
  store i32 %15, i32* %17, align 4, !dbg !5819
  %18 = load i8** %optstring_addr, align 8, !dbg !5820
  %19 = getelementptr inbounds i8* %18, i64 0, !dbg !5820
  %20 = load i8* %19, align 1, !dbg !5820
  %21 = icmp eq i8 %20, 45, !dbg !5820
  br i1 %21, label %bb, label %bb1, !dbg !5820

bb:                                               ; preds = %entry
  %22 = load %struct._getopt_data** %d_addr, align 8, !dbg !5821
  %23 = getelementptr inbounds %struct._getopt_data* %22, i32 0, i32 6, !dbg !5821
  store i32 2, i32* %23, align 8, !dbg !5821
  %24 = load i8** %optstring_addr, align 8, !dbg !5822
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !5822
  store i8* %25, i8** %optstring_addr, align 8, !dbg !5822
  br label %bb6, !dbg !5822

bb1:                                              ; preds = %entry
  %26 = load i8** %optstring_addr, align 8, !dbg !5823
  %27 = getelementptr inbounds i8* %26, i64 0, !dbg !5823
  %28 = load i8* %27, align 1, !dbg !5823
  %29 = icmp eq i8 %28, 43, !dbg !5823
  %30 = load %struct._getopt_data** %d_addr, align 8, !dbg !5824
  br i1 %29, label %bb2, label %bb3, !dbg !5823

bb2:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 6, !dbg !5824
  store i32 0, i32* %31, align 8, !dbg !5824
  %32 = load i8** %optstring_addr, align 8, !dbg !5825
  %33 = getelementptr inbounds i8* %32, i64 1, !dbg !5825
  store i8* %33, i8** %optstring_addr, align 8, !dbg !5825
  br label %bb6, !dbg !5825

bb3:                                              ; preds = %bb1
  %34 = getelementptr inbounds %struct._getopt_data* %30, i32 0, i32 7, !dbg !5826
  %35 = load i32* %34, align 4, !dbg !5826
  %36 = icmp ne i32 %35, 0, !dbg !5826
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !5827
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 6, !dbg !5827
  br i1 %36, label %bb4, label %bb5, !dbg !5826

bb4:                                              ; preds = %bb3
  store i32 0, i32* %38, align 8, !dbg !5827
  br label %bb6, !dbg !5827

bb5:                                              ; preds = %bb3
  store i32 1, i32* %38, align 8, !dbg !5828
  br label %bb6, !dbg !5828

bb6:                                              ; preds = %bb5, %bb4, %bb2, %bb
  %39 = load i8** %optstring_addr, align 8, !dbg !5829
  store i8* %39, i8** %0, align 8, !dbg !5829
  %40 = load i8** %0, align 8, !dbg !5829
  store i8* %40, i8** %retval, align 8, !dbg !5829
  %retval7 = load i8** %retval, !dbg !5829
  ret i8* %retval7, !dbg !5829
}

define internal i32 @_getopt_internal_r(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only, %struct._getopt_data* %d) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %d_addr = alloca %struct._getopt_data*, align 8
  %retval = alloca i32
  %iftmp.13 = alloca i32
  %iftmp.2 = alloca i32
  %0 = alloca i32
  %print_errors = alloca i32
  %nameend = alloca i8*
  %p = alloca %struct.option*
  %pfound = alloca %struct.option*
  %exact = alloca i32
  %ambig = alloca i32
  %indfound = alloca i32
  %option_index = alloca i32
  %c = alloca i8
  %temp = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  store %struct._getopt_data* %d, %struct._getopt_data** %d_addr
  %1 = load %struct._getopt_data** %d_addr, align 8, !dbg !5830
  %2 = getelementptr inbounds %struct._getopt_data* %1, i32 0, i32 1, !dbg !5830
  %3 = load i32* %2, align 4, !dbg !5830
  store i32 %3, i32* %print_errors, align 4, !dbg !5830
  %4 = load i8** %optstring_addr, align 8, !dbg !5832
  %5 = getelementptr inbounds i8* %4, i64 0, !dbg !5832
  %6 = load i8* %5, align 1, !dbg !5832
  %7 = icmp eq i8 %6, 58, !dbg !5832
  br i1 %7, label %bb, label %bb1, !dbg !5832

bb:                                               ; preds = %entry
  store i32 0, i32* %print_errors, align 4, !dbg !5833
  br label %bb1, !dbg !5833

bb1:                                              ; preds = %bb, %entry
  %8 = load i32* %argc_addr, align 4, !dbg !5834
  %9 = icmp sle i32 %8, 0, !dbg !5834
  br i1 %9, label %bb2, label %bb3, !dbg !5834

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !5835
  br label %bb133, !dbg !5835

bb3:                                              ; preds = %bb1
  %10 = load %struct._getopt_data** %d_addr, align 8, !dbg !5836
  %11 = getelementptr inbounds %struct._getopt_data* %10, i32 0, i32 3, !dbg !5836
  store i8* null, i8** %11, align 8, !dbg !5836
  %12 = load %struct._getopt_data** %d_addr, align 8, !dbg !5837
  %13 = getelementptr inbounds %struct._getopt_data* %12, i32 0, i32 0, !dbg !5837
  %14 = load i32* %13, align 8, !dbg !5837
  %15 = icmp eq i32 %14, 0, !dbg !5837
  br i1 %15, label %bb5, label %bb4, !dbg !5837

bb4:                                              ; preds = %bb3
  %16 = load %struct._getopt_data** %d_addr, align 8, !dbg !5837
  %17 = getelementptr inbounds %struct._getopt_data* %16, i32 0, i32 4, !dbg !5837
  %18 = load i32* %17, align 8, !dbg !5837
  %19 = icmp eq i32 %18, 0, !dbg !5837
  br i1 %19, label %bb5, label %bb8, !dbg !5837

bb5:                                              ; preds = %bb4, %bb3
  %20 = load %struct._getopt_data** %d_addr, align 8, !dbg !5838
  %21 = getelementptr inbounds %struct._getopt_data* %20, i32 0, i32 0, !dbg !5838
  %22 = load i32* %21, align 8, !dbg !5838
  %23 = icmp eq i32 %22, 0, !dbg !5838
  br i1 %23, label %bb6, label %bb7, !dbg !5838

bb6:                                              ; preds = %bb5
  %24 = load %struct._getopt_data** %d_addr, align 8, !dbg !5839
  %25 = getelementptr inbounds %struct._getopt_data* %24, i32 0, i32 0, !dbg !5839
  store i32 1, i32* %25, align 8, !dbg !5839
  br label %bb7, !dbg !5839

bb7:                                              ; preds = %bb6, %bb5
  %26 = load i32* %argc_addr, align 4, !dbg !5840
  %27 = load i8*** %argv_addr, align 8, !dbg !5840
  %28 = load i8** %optstring_addr, align 8, !dbg !5840
  %29 = load %struct._getopt_data** %d_addr, align 8, !dbg !5840
  %30 = call i8* @_getopt_initialize(i32 %26, i8** %27, i8* %28, %struct._getopt_data* %29) nounwind, !dbg !5840
  store i8* %30, i8** %optstring_addr, align 8, !dbg !5840
  %31 = load %struct._getopt_data** %d_addr, align 8, !dbg !5841
  %32 = getelementptr inbounds %struct._getopt_data* %31, i32 0, i32 4, !dbg !5841
  store i32 1, i32* %32, align 8, !dbg !5841
  br label %bb8, !dbg !5841

bb8:                                              ; preds = %bb7, %bb4
  %33 = load %struct._getopt_data** %d_addr, align 8, !dbg !5842
  %34 = getelementptr inbounds %struct._getopt_data* %33, i32 0, i32 5, !dbg !5842
  %35 = load i8** %34, align 8, !dbg !5842
  %36 = icmp eq i8* %35, null, !dbg !5842
  br i1 %36, label %bb10, label %bb9, !dbg !5842

bb9:                                              ; preds = %bb8
  %37 = load %struct._getopt_data** %d_addr, align 8, !dbg !5842
  %38 = getelementptr inbounds %struct._getopt_data* %37, i32 0, i32 5, !dbg !5842
  %39 = load i8** %38, align 8, !dbg !5842
  %40 = load i8* %39, align 1, !dbg !5842
  %41 = icmp eq i8 %40, 0, !dbg !5842
  br i1 %41, label %bb10, label %bb48, !dbg !5842

bb10:                                             ; preds = %bb9, %bb8
  %42 = load %struct._getopt_data** %d_addr, align 8, !dbg !5843
  %43 = getelementptr inbounds %struct._getopt_data* %42, i32 0, i32 9, !dbg !5843
  %44 = load i32* %43, align 4, !dbg !5843
  %45 = load %struct._getopt_data** %d_addr, align 8, !dbg !5843
  %46 = getelementptr inbounds %struct._getopt_data* %45, i32 0, i32 0, !dbg !5843
  %47 = load i32* %46, align 8, !dbg !5843
  %48 = icmp sgt i32 %44, %47, !dbg !5843
  br i1 %48, label %bb11, label %bb12, !dbg !5843

bb11:                                             ; preds = %bb10
  %49 = load %struct._getopt_data** %d_addr, align 8, !dbg !5844
  %50 = getelementptr inbounds %struct._getopt_data* %49, i32 0, i32 0, !dbg !5844
  %51 = load i32* %50, align 8, !dbg !5844
  %52 = load %struct._getopt_data** %d_addr, align 8, !dbg !5844
  %53 = getelementptr inbounds %struct._getopt_data* %52, i32 0, i32 9, !dbg !5844
  store i32 %51, i32* %53, align 4, !dbg !5844
  br label %bb12, !dbg !5844

bb12:                                             ; preds = %bb11, %bb10
  %54 = load %struct._getopt_data** %d_addr, align 8, !dbg !5845
  %55 = getelementptr inbounds %struct._getopt_data* %54, i32 0, i32 8, !dbg !5845
  %56 = load i32* %55, align 8, !dbg !5845
  %57 = load %struct._getopt_data** %d_addr, align 8, !dbg !5845
  %58 = getelementptr inbounds %struct._getopt_data* %57, i32 0, i32 0, !dbg !5845
  %59 = load i32* %58, align 8, !dbg !5845
  %60 = icmp sgt i32 %56, %59, !dbg !5845
  br i1 %60, label %bb13, label %bb14, !dbg !5845

bb13:                                             ; preds = %bb12
  %61 = load %struct._getopt_data** %d_addr, align 8, !dbg !5846
  %62 = getelementptr inbounds %struct._getopt_data* %61, i32 0, i32 0, !dbg !5846
  %63 = load i32* %62, align 8, !dbg !5846
  %64 = load %struct._getopt_data** %d_addr, align 8, !dbg !5846
  %65 = getelementptr inbounds %struct._getopt_data* %64, i32 0, i32 8, !dbg !5846
  store i32 %63, i32* %65, align 8, !dbg !5846
  br label %bb14, !dbg !5846

bb14:                                             ; preds = %bb13, %bb12
  %66 = load %struct._getopt_data** %d_addr, align 8, !dbg !5847
  %67 = getelementptr inbounds %struct._getopt_data* %66, i32 0, i32 6, !dbg !5847
  %68 = load i32* %67, align 8, !dbg !5847
  %69 = icmp eq i32 %68, 1, !dbg !5847
  br i1 %69, label %bb15, label %bb26, !dbg !5847

bb15:                                             ; preds = %bb14
  %70 = load %struct._getopt_data** %d_addr, align 8, !dbg !5848
  %71 = getelementptr inbounds %struct._getopt_data* %70, i32 0, i32 8, !dbg !5848
  %72 = load i32* %71, align 8, !dbg !5848
  %73 = load %struct._getopt_data** %d_addr, align 8, !dbg !5848
  %74 = getelementptr inbounds %struct._getopt_data* %73, i32 0, i32 9, !dbg !5848
  %75 = load i32* %74, align 4, !dbg !5848
  %76 = icmp eq i32 %72, %75, !dbg !5848
  br i1 %76, label %bb18, label %bb16, !dbg !5848

bb16:                                             ; preds = %bb15
  %77 = load %struct._getopt_data** %d_addr, align 8, !dbg !5848
  %78 = getelementptr inbounds %struct._getopt_data* %77, i32 0, i32 9, !dbg !5848
  %79 = load i32* %78, align 4, !dbg !5848
  %80 = load %struct._getopt_data** %d_addr, align 8, !dbg !5848
  %81 = getelementptr inbounds %struct._getopt_data* %80, i32 0, i32 0, !dbg !5848
  %82 = load i32* %81, align 8, !dbg !5848
  %83 = icmp eq i32 %79, %82, !dbg !5848
  br i1 %83, label %bb18, label %bb17, !dbg !5848

bb17:                                             ; preds = %bb16
  %84 = load i8*** %argv_addr, align 8, !dbg !5849
  %85 = load %struct._getopt_data** %d_addr, align 8, !dbg !5849
  call void @exchange(i8** %84, %struct._getopt_data* %85) nounwind, !dbg !5849
  br label %bb22, !dbg !5849

bb18:                                             ; preds = %bb16, %bb15
  %86 = load %struct._getopt_data** %d_addr, align 8, !dbg !5850
  %87 = getelementptr inbounds %struct._getopt_data* %86, i32 0, i32 9, !dbg !5850
  %88 = load i32* %87, align 4, !dbg !5850
  %89 = load %struct._getopt_data** %d_addr, align 8, !dbg !5850
  %90 = getelementptr inbounds %struct._getopt_data* %89, i32 0, i32 0, !dbg !5850
  %91 = load i32* %90, align 8, !dbg !5850
  %92 = icmp ne i32 %88, %91, !dbg !5850
  br i1 %92, label %bb19, label %bb22, !dbg !5850

bb19:                                             ; preds = %bb18
  %93 = load %struct._getopt_data** %d_addr, align 8, !dbg !5851
  %94 = getelementptr inbounds %struct._getopt_data* %93, i32 0, i32 0, !dbg !5851
  %95 = load i32* %94, align 8, !dbg !5851
  %96 = load %struct._getopt_data** %d_addr, align 8, !dbg !5851
  %97 = getelementptr inbounds %struct._getopt_data* %96, i32 0, i32 8, !dbg !5851
  store i32 %95, i32* %97, align 8, !dbg !5851
  br label %bb22, !dbg !5851

bb21:                                             ; preds = %bb24, %bb23
  %98 = load %struct._getopt_data** %d_addr, align 8, !dbg !5852
  %99 = getelementptr inbounds %struct._getopt_data* %98, i32 0, i32 0, !dbg !5852
  %100 = load i32* %99, align 8, !dbg !5852
  %101 = add nsw i32 %100, 1, !dbg !5852
  %102 = load %struct._getopt_data** %d_addr, align 8, !dbg !5852
  %103 = getelementptr inbounds %struct._getopt_data* %102, i32 0, i32 0, !dbg !5852
  store i32 %101, i32* %103, align 8, !dbg !5852
  br label %bb22, !dbg !5852

bb22:                                             ; preds = %bb17, %bb18, %bb19, %bb21
  %104 = load %struct._getopt_data** %d_addr, align 8, !dbg !5853
  %105 = getelementptr inbounds %struct._getopt_data* %104, i32 0, i32 0, !dbg !5853
  %106 = load i32* %105, align 8, !dbg !5853
  %107 = load i32* %argc_addr, align 4, !dbg !5853
  %108 = icmp sge i32 %106, %107, !dbg !5853
  br i1 %108, label %bb25, label %bb23, !dbg !5853

bb23:                                             ; preds = %bb22
  %109 = load %struct._getopt_data** %d_addr, align 8, !dbg !5853
  %110 = getelementptr inbounds %struct._getopt_data* %109, i32 0, i32 0, !dbg !5853
  %111 = load i32* %110, align 8, !dbg !5853
  %112 = load i8*** %argv_addr, align 8, !dbg !5853
  %113 = sext i32 %111 to i64, !dbg !5853
  %114 = getelementptr inbounds i8** %112, i64 %113, !dbg !5853
  %115 = load i8** %114, align 1, !dbg !5853
  %116 = getelementptr inbounds i8* %115, i64 0, !dbg !5853
  %117 = load i8* %116, align 1, !dbg !5853
  %118 = icmp ne i8 %117, 45, !dbg !5853
  br i1 %118, label %bb21, label %bb24, !dbg !5853

bb24:                                             ; preds = %bb23
  %119 = load %struct._getopt_data** %d_addr, align 8, !dbg !5853
  %120 = getelementptr inbounds %struct._getopt_data* %119, i32 0, i32 0, !dbg !5853
  %121 = load i32* %120, align 8, !dbg !5853
  %122 = load i8*** %argv_addr, align 8, !dbg !5853
  %123 = sext i32 %121 to i64, !dbg !5853
  %124 = getelementptr inbounds i8** %122, i64 %123, !dbg !5853
  %125 = load i8** %124, align 1, !dbg !5853
  %126 = getelementptr inbounds i8* %125, i64 1, !dbg !5853
  %127 = load i8* %126, align 1, !dbg !5853
  %128 = icmp eq i8 %127, 0, !dbg !5853
  br i1 %128, label %bb21, label %bb25, !dbg !5853

bb25:                                             ; preds = %bb24, %bb22
  %129 = load %struct._getopt_data** %d_addr, align 8, !dbg !5854
  %130 = getelementptr inbounds %struct._getopt_data* %129, i32 0, i32 0, !dbg !5854
  %131 = load i32* %130, align 8, !dbg !5854
  %132 = load %struct._getopt_data** %d_addr, align 8, !dbg !5854
  %133 = getelementptr inbounds %struct._getopt_data* %132, i32 0, i32 9, !dbg !5854
  store i32 %131, i32* %133, align 4, !dbg !5854
  br label %bb26, !dbg !5854

bb26:                                             ; preds = %bb25, %bb14
  %134 = load %struct._getopt_data** %d_addr, align 8, !dbg !5855
  %135 = getelementptr inbounds %struct._getopt_data* %134, i32 0, i32 0, !dbg !5855
  %136 = load i32* %135, align 8, !dbg !5855
  %137 = load i32* %argc_addr, align 4, !dbg !5855
  %138 = icmp ne i32 %136, %137, !dbg !5855
  br i1 %138, label %bb27, label %bb34, !dbg !5855

bb27:                                             ; preds = %bb26
  %139 = load %struct._getopt_data** %d_addr, align 8, !dbg !5855
  %140 = getelementptr inbounds %struct._getopt_data* %139, i32 0, i32 0, !dbg !5855
  %141 = load i32* %140, align 8, !dbg !5855
  %142 = load i8*** %argv_addr, align 8, !dbg !5855
  %143 = sext i32 %141 to i64, !dbg !5855
  %144 = getelementptr inbounds i8** %142, i64 %143, !dbg !5855
  %145 = load i8** %144, align 1, !dbg !5855
  %146 = call i32 @strcmp(i8* %145, i8* getelementptr inbounds ([3 x i8]* @.str1147, i64 0, i64 0)) nounwind readonly, !dbg !5855
  %147 = icmp eq i32 %146, 0, !dbg !5855
  br i1 %147, label %bb28, label %bb34, !dbg !5855

bb28:                                             ; preds = %bb27
  %148 = load %struct._getopt_data** %d_addr, align 8, !dbg !5856
  %149 = getelementptr inbounds %struct._getopt_data* %148, i32 0, i32 0, !dbg !5856
  %150 = load i32* %149, align 8, !dbg !5856
  %151 = add nsw i32 %150, 1, !dbg !5856
  %152 = load %struct._getopt_data** %d_addr, align 8, !dbg !5856
  %153 = getelementptr inbounds %struct._getopt_data* %152, i32 0, i32 0, !dbg !5856
  store i32 %151, i32* %153, align 8, !dbg !5856
  %154 = load %struct._getopt_data** %d_addr, align 8, !dbg !5857
  %155 = getelementptr inbounds %struct._getopt_data* %154, i32 0, i32 8, !dbg !5857
  %156 = load i32* %155, align 8, !dbg !5857
  %157 = load %struct._getopt_data** %d_addr, align 8, !dbg !5857
  %158 = getelementptr inbounds %struct._getopt_data* %157, i32 0, i32 9, !dbg !5857
  %159 = load i32* %158, align 4, !dbg !5857
  %160 = icmp eq i32 %156, %159, !dbg !5857
  br i1 %160, label %bb31, label %bb29, !dbg !5857

bb29:                                             ; preds = %bb28
  %161 = load %struct._getopt_data** %d_addr, align 8, !dbg !5857
  %162 = getelementptr inbounds %struct._getopt_data* %161, i32 0, i32 9, !dbg !5857
  %163 = load i32* %162, align 4, !dbg !5857
  %164 = load %struct._getopt_data** %d_addr, align 8, !dbg !5857
  %165 = getelementptr inbounds %struct._getopt_data* %164, i32 0, i32 0, !dbg !5857
  %166 = load i32* %165, align 8, !dbg !5857
  %167 = icmp eq i32 %163, %166, !dbg !5857
  br i1 %167, label %bb31, label %bb30, !dbg !5857

bb30:                                             ; preds = %bb29
  %168 = load i8*** %argv_addr, align 8, !dbg !5858
  %169 = load %struct._getopt_data** %d_addr, align 8, !dbg !5858
  call void @exchange(i8** %168, %struct._getopt_data* %169) nounwind, !dbg !5858
  br label %bb33, !dbg !5858

bb31:                                             ; preds = %bb29, %bb28
  %170 = load %struct._getopt_data** %d_addr, align 8, !dbg !5859
  %171 = getelementptr inbounds %struct._getopt_data* %170, i32 0, i32 8, !dbg !5859
  %172 = load i32* %171, align 8, !dbg !5859
  %173 = load %struct._getopt_data** %d_addr, align 8, !dbg !5859
  %174 = getelementptr inbounds %struct._getopt_data* %173, i32 0, i32 9, !dbg !5859
  %175 = load i32* %174, align 4, !dbg !5859
  %176 = icmp eq i32 %172, %175, !dbg !5859
  br i1 %176, label %bb32, label %bb33, !dbg !5859

bb32:                                             ; preds = %bb31
  %177 = load %struct._getopt_data** %d_addr, align 8, !dbg !5860
  %178 = getelementptr inbounds %struct._getopt_data* %177, i32 0, i32 0, !dbg !5860
  %179 = load i32* %178, align 8, !dbg !5860
  %180 = load %struct._getopt_data** %d_addr, align 8, !dbg !5860
  %181 = getelementptr inbounds %struct._getopt_data* %180, i32 0, i32 8, !dbg !5860
  store i32 %179, i32* %181, align 8, !dbg !5860
  br label %bb33, !dbg !5860

bb33:                                             ; preds = %bb32, %bb31, %bb30
  %182 = load %struct._getopt_data** %d_addr, align 8, !dbg !5861
  %183 = getelementptr inbounds %struct._getopt_data* %182, i32 0, i32 9, !dbg !5861
  %184 = load i32* %argc_addr, align 4, !dbg !5861
  store i32 %184, i32* %183, align 4, !dbg !5861
  %185 = load %struct._getopt_data** %d_addr, align 8, !dbg !5862
  %186 = getelementptr inbounds %struct._getopt_data* %185, i32 0, i32 0, !dbg !5862
  %187 = load i32* %argc_addr, align 4, !dbg !5862
  store i32 %187, i32* %186, align 8, !dbg !5862
  br label %bb34, !dbg !5862

bb34:                                             ; preds = %bb33, %bb27, %bb26
  %188 = load %struct._getopt_data** %d_addr, align 8, !dbg !5863
  %189 = getelementptr inbounds %struct._getopt_data* %188, i32 0, i32 0, !dbg !5863
  %190 = load i32* %189, align 8, !dbg !5863
  %191 = load i32* %argc_addr, align 4, !dbg !5863
  %192 = icmp eq i32 %190, %191, !dbg !5863
  %193 = load %struct._getopt_data** %d_addr, align 8, !dbg !5864
  br i1 %192, label %bb35, label %bb38, !dbg !5863

bb35:                                             ; preds = %bb34
  %194 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 8, !dbg !5864
  %195 = load i32* %194, align 8, !dbg !5864
  %196 = load %struct._getopt_data** %d_addr, align 8, !dbg !5864
  %197 = getelementptr inbounds %struct._getopt_data* %196, i32 0, i32 9, !dbg !5864
  %198 = load i32* %197, align 4, !dbg !5864
  %199 = icmp ne i32 %195, %198, !dbg !5864
  br i1 %199, label %bb36, label %bb37, !dbg !5864

bb36:                                             ; preds = %bb35
  %200 = load %struct._getopt_data** %d_addr, align 8, !dbg !5865
  %201 = getelementptr inbounds %struct._getopt_data* %200, i32 0, i32 8, !dbg !5865
  %202 = load i32* %201, align 8, !dbg !5865
  %203 = load %struct._getopt_data** %d_addr, align 8, !dbg !5865
  %204 = getelementptr inbounds %struct._getopt_data* %203, i32 0, i32 0, !dbg !5865
  store i32 %202, i32* %204, align 8, !dbg !5865
  br label %bb37, !dbg !5865

bb37:                                             ; preds = %bb36, %bb35
  store i32 -1, i32* %0, align 4, !dbg !5866
  br label %bb133, !dbg !5866

bb38:                                             ; preds = %bb34
  %205 = getelementptr inbounds %struct._getopt_data* %193, i32 0, i32 0, !dbg !5867
  %206 = load i32* %205, align 8, !dbg !5867
  %207 = load i8*** %argv_addr, align 8, !dbg !5867
  %208 = sext i32 %206 to i64, !dbg !5867
  %209 = getelementptr inbounds i8** %207, i64 %208, !dbg !5867
  %210 = load i8** %209, align 1, !dbg !5867
  %211 = getelementptr inbounds i8* %210, i64 0, !dbg !5867
  %212 = load i8* %211, align 1, !dbg !5867
  %213 = icmp ne i8 %212, 45, !dbg !5867
  br i1 %213, label %bb40, label %bb39, !dbg !5867

bb39:                                             ; preds = %bb38
  %214 = load %struct._getopt_data** %d_addr, align 8, !dbg !5867
  %215 = getelementptr inbounds %struct._getopt_data* %214, i32 0, i32 0, !dbg !5867
  %216 = load i32* %215, align 8, !dbg !5867
  %217 = load i8*** %argv_addr, align 8, !dbg !5867
  %218 = sext i32 %216 to i64, !dbg !5867
  %219 = getelementptr inbounds i8** %217, i64 %218, !dbg !5867
  %220 = load i8** %219, align 1, !dbg !5867
  %221 = getelementptr inbounds i8* %220, i64 1, !dbg !5867
  %222 = load i8* %221, align 1, !dbg !5867
  %223 = icmp eq i8 %222, 0, !dbg !5867
  br i1 %223, label %bb40, label %bb43, !dbg !5867

bb40:                                             ; preds = %bb39, %bb38
  %224 = load %struct._getopt_data** %d_addr, align 8, !dbg !5868
  %225 = getelementptr inbounds %struct._getopt_data* %224, i32 0, i32 6, !dbg !5868
  %226 = load i32* %225, align 8, !dbg !5868
  %227 = icmp eq i32 %226, 0, !dbg !5868
  br i1 %227, label %bb41, label %bb42, !dbg !5868

bb41:                                             ; preds = %bb40
  store i32 -1, i32* %0, align 4, !dbg !5869
  br label %bb133, !dbg !5869

bb42:                                             ; preds = %bb40
  %228 = load %struct._getopt_data** %d_addr, align 8, !dbg !5870
  %229 = getelementptr inbounds %struct._getopt_data* %228, i32 0, i32 0, !dbg !5870
  %230 = load i32* %229, align 8, !dbg !5870
  %231 = load i8*** %argv_addr, align 8, !dbg !5870
  %232 = sext i32 %230 to i64, !dbg !5870
  %233 = getelementptr inbounds i8** %231, i64 %232, !dbg !5870
  %234 = load i8** %233, align 1, !dbg !5870
  %235 = load %struct._getopt_data** %d_addr, align 8, !dbg !5870
  %236 = getelementptr inbounds %struct._getopt_data* %235, i32 0, i32 3, !dbg !5870
  store i8* %234, i8** %236, align 8, !dbg !5870
  %237 = add nsw i32 %230, 1, !dbg !5870
  %238 = load %struct._getopt_data** %d_addr, align 8, !dbg !5870
  %239 = getelementptr inbounds %struct._getopt_data* %238, i32 0, i32 0, !dbg !5870
  store i32 %237, i32* %239, align 8, !dbg !5870
  store i32 1, i32* %0, align 4, !dbg !5871
  br label %bb133, !dbg !5871

bb43:                                             ; preds = %bb39
  %240 = load %struct._getopt_data** %d_addr, align 8, !dbg !5872
  %241 = getelementptr inbounds %struct._getopt_data* %240, i32 0, i32 0, !dbg !5872
  %242 = load i32* %241, align 8, !dbg !5872
  %243 = load i8*** %argv_addr, align 8, !dbg !5872
  %244 = sext i32 %242 to i64, !dbg !5872
  %245 = getelementptr inbounds i8** %243, i64 %244, !dbg !5872
  %246 = load i8** %245, align 1, !dbg !5872
  %247 = getelementptr inbounds i8* %246, i64 1, !dbg !5872
  %248 = load %struct.option** %longopts_addr, align 8, !dbg !5872
  %249 = bitcast %struct.option* %248 to i8*, !dbg !5872
  %250 = icmp eq i8* %249, null, !dbg !5872
  br i1 %250, label %bb46, label %bb44, !dbg !5872

bb44:                                             ; preds = %bb43
  %251 = load %struct._getopt_data** %d_addr, align 8, !dbg !5872
  %252 = getelementptr inbounds %struct._getopt_data* %251, i32 0, i32 0, !dbg !5872
  %253 = load i32* %252, align 8, !dbg !5872
  %254 = load i8*** %argv_addr, align 8, !dbg !5872
  %255 = sext i32 %253 to i64, !dbg !5872
  %256 = getelementptr inbounds i8** %254, i64 %255, !dbg !5872
  %257 = load i8** %256, align 1, !dbg !5872
  %258 = getelementptr inbounds i8* %257, i64 1, !dbg !5872
  %259 = load i8* %258, align 1, !dbg !5872
  %260 = icmp ne i8 %259, 45, !dbg !5872
  br i1 %260, label %bb46, label %bb45, !dbg !5872

bb45:                                             ; preds = %bb44
  store i32 1, i32* %iftmp.2, align 4, !dbg !5872
  br label %bb47, !dbg !5872

bb46:                                             ; preds = %bb44, %bb43
  store i32 0, i32* %iftmp.2, align 4, !dbg !5872
  br label %bb47, !dbg !5872

bb47:                                             ; preds = %bb46, %bb45
  %261 = load i32* %iftmp.2, align 4, !dbg !5872
  %262 = sext i32 %261 to i64, !dbg !5872
  %263 = getelementptr inbounds i8* %247, i64 %262, !dbg !5872
  %264 = load %struct._getopt_data** %d_addr, align 8, !dbg !5872
  %265 = getelementptr inbounds %struct._getopt_data* %264, i32 0, i32 5, !dbg !5872
  store i8* %263, i8** %265, align 8, !dbg !5872
  br label %bb48, !dbg !5872

bb48:                                             ; preds = %bb47, %bb9
  %266 = load %struct.option** %longopts_addr, align 8, !dbg !5873
  %267 = bitcast %struct.option* %266 to i8*, !dbg !5873
  %268 = icmp ne i8* %267, null, !dbg !5873
  br i1 %268, label %bb49, label %bb106, !dbg !5873

bb49:                                             ; preds = %bb48
  %269 = load %struct._getopt_data** %d_addr, align 8, !dbg !5873
  %270 = getelementptr inbounds %struct._getopt_data* %269, i32 0, i32 0, !dbg !5873
  %271 = load i32* %270, align 8, !dbg !5873
  %272 = load i8*** %argv_addr, align 8, !dbg !5873
  %273 = sext i32 %271 to i64, !dbg !5873
  %274 = getelementptr inbounds i8** %272, i64 %273, !dbg !5873
  %275 = load i8** %274, align 1, !dbg !5873
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !5873
  %277 = load i8* %276, align 1, !dbg !5873
  %278 = icmp eq i8 %277, 45, !dbg !5873
  br i1 %278, label %bb53, label %bb50, !dbg !5873

bb50:                                             ; preds = %bb49
  %279 = load i32* %long_only_addr, align 4, !dbg !5873
  %280 = icmp eq i32 %279, 0, !dbg !5873
  br i1 %280, label %bb106, label %bb51, !dbg !5873

bb51:                                             ; preds = %bb50
  %281 = load %struct._getopt_data** %d_addr, align 8, !dbg !5873
  %282 = getelementptr inbounds %struct._getopt_data* %281, i32 0, i32 0, !dbg !5873
  %283 = load i32* %282, align 8, !dbg !5873
  %284 = load i8*** %argv_addr, align 8, !dbg !5873
  %285 = sext i32 %283 to i64, !dbg !5873
  %286 = getelementptr inbounds i8** %284, i64 %285, !dbg !5873
  %287 = load i8** %286, align 1, !dbg !5873
  %288 = getelementptr inbounds i8* %287, i64 2, !dbg !5873
  %289 = load i8* %288, align 1, !dbg !5873
  %290 = icmp ne i8 %289, 0, !dbg !5873
  br i1 %290, label %bb53, label %bb52, !dbg !5873

bb52:                                             ; preds = %bb51
  %291 = load %struct._getopt_data** %d_addr, align 8, !dbg !5873
  %292 = getelementptr inbounds %struct._getopt_data* %291, i32 0, i32 0, !dbg !5873
  %293 = load i32* %292, align 8, !dbg !5873
  %294 = load i8*** %argv_addr, align 8, !dbg !5873
  %295 = sext i32 %293 to i64, !dbg !5873
  %296 = getelementptr inbounds i8** %294, i64 %295, !dbg !5873
  %297 = load i8** %296, align 1, !dbg !5873
  %298 = getelementptr inbounds i8* %297, i64 1, !dbg !5873
  %299 = load i8* %298, align 1, !dbg !5873
  %300 = sext i8 %299 to i32, !dbg !5873
  %301 = load i8** %optstring_addr, align 8, !dbg !5873
  %302 = call i8* @strchr(i8* %301, i32 %300) nounwind readonly, !dbg !5873
  %303 = icmp eq i8* %302, null, !dbg !5873
  br i1 %303, label %bb53, label %bb106, !dbg !5873

bb53:                                             ; preds = %bb52, %bb51, %bb49
  store %struct.option* null, %struct.option** %pfound, align 8, !dbg !5874
  store i32 0, i32* %exact, align 4, !dbg !5876
  store i32 0, i32* %ambig, align 4, !dbg !5877
  store i32 -1, i32* %indfound, align 4, !dbg !5878
  %304 = load %struct._getopt_data** %d_addr, align 8, !dbg !5879
  %305 = getelementptr inbounds %struct._getopt_data* %304, i32 0, i32 5, !dbg !5879
  %306 = load i8** %305, align 8, !dbg !5879
  store i8* %306, i8** %nameend, align 8, !dbg !5879
  br label %bb55, !dbg !5879

bb54:                                             ; preds = %bb56
  %307 = load i8** %nameend, align 8, !dbg !5879
  %308 = getelementptr inbounds i8* %307, i64 1, !dbg !5879
  store i8* %308, i8** %nameend, align 8, !dbg !5879
  br label %bb55, !dbg !5879

bb55:                                             ; preds = %bb54, %bb53
  %309 = load i8** %nameend, align 8, !dbg !5879
  %310 = load i8* %309, align 1, !dbg !5879
  %311 = icmp eq i8 %310, 0, !dbg !5879
  br i1 %311, label %bb57, label %bb56, !dbg !5879

bb56:                                             ; preds = %bb55
  %312 = load i8** %nameend, align 8, !dbg !5879
  %313 = load i8* %312, align 1, !dbg !5879
  %314 = icmp ne i8 %313, 61, !dbg !5879
  br i1 %314, label %bb54, label %bb57, !dbg !5879

bb57:                                             ; preds = %bb56, %bb55
  %315 = load %struct.option** %longopts_addr, align 8, !dbg !5880
  store %struct.option* %315, %struct.option** %p, align 8, !dbg !5880
  store i32 0, i32* %option_index, align 4, !dbg !5880
  br label %bb69, !dbg !5880

bb58:                                             ; preds = %bb69
  %316 = load i8** %nameend, align 8, !dbg !5881
  %317 = ptrtoint i8* %316 to i64, !dbg !5881
  %318 = load %struct._getopt_data** %d_addr, align 8, !dbg !5881
  %319 = getelementptr inbounds %struct._getopt_data* %318, i32 0, i32 5, !dbg !5881
  %320 = load i8** %319, align 8, !dbg !5881
  %321 = ptrtoint i8* %320 to i64, !dbg !5881
  %322 = sub nsw i64 %317, %321, !dbg !5881
  %323 = load %struct._getopt_data** %d_addr, align 8, !dbg !5881
  %324 = getelementptr inbounds %struct._getopt_data* %323, i32 0, i32 5, !dbg !5881
  %325 = load i8** %324, align 8, !dbg !5881
  %326 = load %struct.option** %p, align 8, !dbg !5881
  %327 = getelementptr inbounds %struct.option* %326, i32 0, i32 0, !dbg !5881
  %328 = load i8** %327, align 8, !dbg !5881
  %329 = call i32 @strncmp(i8* %328, i8* %325, i64 %322) nounwind readonly, !dbg !5881
  %330 = icmp eq i32 %329, 0, !dbg !5881
  br i1 %330, label %bb59, label %bb68, !dbg !5881

bb59:                                             ; preds = %bb58
  %331 = load i8** %nameend, align 8, !dbg !5882
  %332 = ptrtoint i8* %331 to i64, !dbg !5882
  %333 = trunc i64 %332 to i32, !dbg !5882
  %334 = load %struct._getopt_data** %d_addr, align 8, !dbg !5882
  %335 = getelementptr inbounds %struct._getopt_data* %334, i32 0, i32 5, !dbg !5882
  %336 = load i8** %335, align 8, !dbg !5882
  %337 = ptrtoint i8* %336 to i64, !dbg !5882
  %338 = trunc i64 %337 to i32, !dbg !5882
  %339 = sub i32 %333, %338, !dbg !5882
  %340 = load %struct.option** %p, align 8, !dbg !5882
  %341 = getelementptr inbounds %struct.option* %340, i32 0, i32 0, !dbg !5882
  %342 = load i8** %341, align 8, !dbg !5882
  %343 = call i64 @strlen(i8* %342) nounwind readonly, !dbg !5882
  %344 = trunc i64 %343 to i32, !dbg !5882
  %345 = icmp eq i32 %339, %344, !dbg !5882
  br i1 %345, label %bb60, label %bb61, !dbg !5882

bb60:                                             ; preds = %bb59
  %346 = load %struct.option** %p, align 8, !dbg !5883
  store %struct.option* %346, %struct.option** %pfound, align 8, !dbg !5883
  %347 = load i32* %option_index, align 4, !dbg !5884
  store i32 %347, i32* %indfound, align 4, !dbg !5884
  store i32 1, i32* %exact, align 4, !dbg !5885
  br label %bb70, !dbg !5885

bb61:                                             ; preds = %bb59
  %348 = load %struct.option** %pfound, align 8, !dbg !5886
  %349 = bitcast %struct.option* %348 to i8*, !dbg !5886
  %350 = icmp eq i8* %349, null, !dbg !5886
  br i1 %350, label %bb62, label %bb63, !dbg !5886

bb62:                                             ; preds = %bb61
  %351 = load %struct.option** %p, align 8, !dbg !5887
  store %struct.option* %351, %struct.option** %pfound, align 8, !dbg !5887
  %352 = load i32* %option_index, align 4, !dbg !5888
  store i32 %352, i32* %indfound, align 4, !dbg !5888
  br label %bb68, !dbg !5888

bb63:                                             ; preds = %bb61
  %353 = load i32* %long_only_addr, align 4, !dbg !5889
  %354 = icmp ne i32 %353, 0, !dbg !5889
  br i1 %354, label %bb67, label %bb64, !dbg !5889

bb64:                                             ; preds = %bb63
  %355 = load %struct.option** %pfound, align 8, !dbg !5889
  %356 = getelementptr inbounds %struct.option* %355, i32 0, i32 1, !dbg !5889
  %357 = load i32* %356, align 8, !dbg !5889
  %358 = load %struct.option** %p, align 8, !dbg !5889
  %359 = getelementptr inbounds %struct.option* %358, i32 0, i32 1, !dbg !5889
  %360 = load i32* %359, align 8, !dbg !5889
  %361 = icmp ne i32 %357, %360, !dbg !5889
  br i1 %361, label %bb67, label %bb65, !dbg !5889

bb65:                                             ; preds = %bb64
  %362 = load %struct.option** %pfound, align 8, !dbg !5889
  %363 = getelementptr inbounds %struct.option* %362, i32 0, i32 2, !dbg !5889
  %364 = load i32** %363, align 8, !dbg !5889
  %365 = load %struct.option** %p, align 8, !dbg !5889
  %366 = getelementptr inbounds %struct.option* %365, i32 0, i32 2, !dbg !5889
  %367 = load i32** %366, align 8, !dbg !5889
  %368 = icmp ne i32* %364, %367, !dbg !5889
  br i1 %368, label %bb67, label %bb66, !dbg !5889

bb66:                                             ; preds = %bb65
  %369 = load %struct.option** %pfound, align 8, !dbg !5889
  %370 = getelementptr inbounds %struct.option* %369, i32 0, i32 3, !dbg !5889
  %371 = load i32* %370, align 8, !dbg !5889
  %372 = load %struct.option** %p, align 8, !dbg !5889
  %373 = getelementptr inbounds %struct.option* %372, i32 0, i32 3, !dbg !5889
  %374 = load i32* %373, align 8, !dbg !5889
  %375 = icmp ne i32 %371, %374, !dbg !5889
  br i1 %375, label %bb67, label %bb68, !dbg !5889

bb67:                                             ; preds = %bb66, %bb65, %bb64, %bb63
  store i32 1, i32* %ambig, align 4, !dbg !5890
  br label %bb68, !dbg !5890

bb68:                                             ; preds = %bb67, %bb66, %bb62, %bb58
  %376 = load %struct.option** %p, align 8, !dbg !5880
  %377 = getelementptr inbounds %struct.option* %376, i64 1, !dbg !5880
  store %struct.option* %377, %struct.option** %p, align 8, !dbg !5880
  %378 = load i32* %option_index, align 4, !dbg !5880
  %379 = add nsw i32 %378, 1, !dbg !5880
  store i32 %379, i32* %option_index, align 4, !dbg !5880
  br label %bb69, !dbg !5880

bb69:                                             ; preds = %bb68, %bb57
  %380 = load %struct.option** %p, align 8, !dbg !5880
  %381 = getelementptr inbounds %struct.option* %380, i32 0, i32 0, !dbg !5880
  %382 = load i8** %381, align 8, !dbg !5880
  %383 = icmp ne i8* %382, null, !dbg !5880
  br i1 %383, label %bb58, label %bb70, !dbg !5880

bb70:                                             ; preds = %bb69, %bb60
  %384 = load i32* %ambig, align 4, !dbg !5891
  %385 = icmp ne i32 %384, 0, !dbg !5891
  br i1 %385, label %bb71, label %bb75, !dbg !5891

bb71:                                             ; preds = %bb70
  %386 = load i32* %exact, align 4, !dbg !5891
  %387 = icmp eq i32 %386, 0, !dbg !5891
  br i1 %387, label %bb72, label %bb75, !dbg !5891

bb72:                                             ; preds = %bb71
  %388 = load i32* %print_errors, align 4, !dbg !5892
  %389 = icmp ne i32 %388, 0, !dbg !5892
  br i1 %389, label %bb73, label %bb74, !dbg !5892

bb73:                                             ; preds = %bb72
  %390 = load %struct._getopt_data** %d_addr, align 8, !dbg !5893
  %391 = getelementptr inbounds %struct._getopt_data* %390, i32 0, i32 0, !dbg !5893
  %392 = load i32* %391, align 8, !dbg !5893
  %393 = load i8*** %argv_addr, align 8, !dbg !5893
  %394 = sext i32 %392 to i64, !dbg !5893
  %395 = getelementptr inbounds i8** %393, i64 %394, !dbg !5893
  %396 = load i8** %395, align 1, !dbg !5893
  %397 = load i8*** %argv_addr, align 8, !dbg !5893
  %398 = getelementptr inbounds i8** %397, i64 0, !dbg !5893
  %399 = load i8** %398, align 1, !dbg !5893
  %400 = load %4** @stderr, align 8, !dbg !5893
  %401 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %400, i8* noalias getelementptr inbounds ([30 x i8]* @.str2148, i64 0, i64 0), i8* %399, i8* %396) nounwind, !dbg !5893
  br label %bb74, !dbg !5893

bb74:                                             ; preds = %bb73, %bb72
  %402 = load %struct._getopt_data** %d_addr, align 8, !dbg !5894
  %403 = getelementptr inbounds %struct._getopt_data* %402, i32 0, i32 5, !dbg !5894
  %404 = load i8** %403, align 8, !dbg !5894
  %405 = load %struct._getopt_data** %d_addr, align 8, !dbg !5894
  %406 = getelementptr inbounds %struct._getopt_data* %405, i32 0, i32 5, !dbg !5894
  %407 = load i8** %406, align 8, !dbg !5894
  %408 = call i64 @strlen(i8* %407) nounwind readonly, !dbg !5894
  %409 = getelementptr inbounds i8* %404, i64 %408, !dbg !5894
  %410 = load %struct._getopt_data** %d_addr, align 8, !dbg !5894
  %411 = getelementptr inbounds %struct._getopt_data* %410, i32 0, i32 5, !dbg !5894
  store i8* %409, i8** %411, align 8, !dbg !5894
  %412 = load %struct._getopt_data** %d_addr, align 8, !dbg !5895
  %413 = getelementptr inbounds %struct._getopt_data* %412, i32 0, i32 0, !dbg !5895
  %414 = load i32* %413, align 8, !dbg !5895
  %415 = add nsw i32 %414, 1, !dbg !5895
  %416 = load %struct._getopt_data** %d_addr, align 8, !dbg !5895
  %417 = getelementptr inbounds %struct._getopt_data* %416, i32 0, i32 0, !dbg !5895
  store i32 %415, i32* %417, align 8, !dbg !5895
  %418 = load %struct._getopt_data** %d_addr, align 8, !dbg !5896
  %419 = getelementptr inbounds %struct._getopt_data* %418, i32 0, i32 2, !dbg !5896
  store i32 0, i32* %419, align 8, !dbg !5896
  store i32 63, i32* %0, align 4, !dbg !5897
  br label %bb133, !dbg !5897

bb75:                                             ; preds = %bb71, %bb70
  %420 = load %struct.option** %pfound, align 8, !dbg !5898
  %421 = bitcast %struct.option* %420 to i8*, !dbg !5898
  %422 = icmp ne i8* %421, null, !dbg !5898
  br i1 %422, label %bb76, label %bb98, !dbg !5898

bb76:                                             ; preds = %bb75
  %423 = load i32* %indfound, align 4, !dbg !5899
  store i32 %423, i32* %option_index, align 4, !dbg !5899
  %424 = load %struct._getopt_data** %d_addr, align 8, !dbg !5900
  %425 = getelementptr inbounds %struct._getopt_data* %424, i32 0, i32 0, !dbg !5900
  %426 = load i32* %425, align 8, !dbg !5900
  %427 = add nsw i32 %426, 1, !dbg !5900
  %428 = load %struct._getopt_data** %d_addr, align 8, !dbg !5900
  %429 = getelementptr inbounds %struct._getopt_data* %428, i32 0, i32 0, !dbg !5900
  store i32 %427, i32* %429, align 8, !dbg !5900
  %430 = load i8** %nameend, align 8, !dbg !5901
  %431 = load i8* %430, align 1, !dbg !5901
  %432 = icmp ne i8 %431, 0, !dbg !5901
  %433 = load %struct.option** %pfound, align 8, !dbg !5902
  %434 = getelementptr inbounds %struct.option* %433, i32 0, i32 1, !dbg !5902
  %435 = load i32* %434, align 8, !dbg !5902
  br i1 %432, label %bb77, label %bb84, !dbg !5901

bb77:                                             ; preds = %bb76
  %436 = icmp ne i32 %435, 0, !dbg !5902
  br i1 %436, label %bb78, label %bb79, !dbg !5902

bb78:                                             ; preds = %bb77
  %437 = load i8** %nameend, align 8, !dbg !5903
  %438 = getelementptr inbounds i8* %437, i64 1, !dbg !5903
  %439 = load %struct._getopt_data** %d_addr, align 8, !dbg !5903
  %440 = getelementptr inbounds %struct._getopt_data* %439, i32 0, i32 3, !dbg !5903
  store i8* %438, i8** %440, align 8, !dbg !5903
  br label %bb93, !dbg !5903

bb79:                                             ; preds = %bb77
  %441 = load i32* %print_errors, align 4, !dbg !5904
  %442 = icmp ne i32 %441, 0, !dbg !5904
  br i1 %442, label %bb80, label %bb83, !dbg !5904

bb80:                                             ; preds = %bb79
  %443 = load %struct._getopt_data** %d_addr, align 8, !dbg !5905
  %444 = getelementptr inbounds %struct._getopt_data* %443, i32 0, i32 0, !dbg !5905
  %445 = load i32* %444, align 8, !dbg !5905
  %446 = sub nsw i32 %445, 1, !dbg !5905
  %447 = load i8*** %argv_addr, align 8, !dbg !5905
  %448 = sext i32 %446 to i64, !dbg !5905
  %449 = getelementptr inbounds i8** %447, i64 %448, !dbg !5905
  %450 = load i8** %449, align 1, !dbg !5905
  %451 = getelementptr inbounds i8* %450, i64 1, !dbg !5905
  %452 = load i8* %451, align 1, !dbg !5905
  %453 = icmp eq i8 %452, 45, !dbg !5905
  %454 = load %struct.option** %pfound, align 8, !dbg !5906
  %455 = getelementptr inbounds %struct.option* %454, i32 0, i32 0, !dbg !5906
  %456 = load i8** %455, align 8, !dbg !5906
  br i1 %453, label %bb81, label %bb82, !dbg !5905

bb81:                                             ; preds = %bb80
  %457 = load i8*** %argv_addr, align 8, !dbg !5906
  %458 = getelementptr inbounds i8** %457, i64 0, !dbg !5906
  %459 = load i8** %458, align 1, !dbg !5906
  %460 = load %4** @stderr, align 8, !dbg !5906
  %461 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %460, i8* noalias getelementptr inbounds ([45 x i8]* @.str3149, i64 0, i64 0), i8* %459, i8* %456) nounwind, !dbg !5906
  br label %bb83, !dbg !5906

bb82:                                             ; preds = %bb80
  %462 = load %struct._getopt_data** %d_addr, align 8, !dbg !5907
  %463 = getelementptr inbounds %struct._getopt_data* %462, i32 0, i32 0, !dbg !5907
  %464 = load i32* %463, align 8, !dbg !5907
  %465 = sub nsw i32 %464, 1, !dbg !5907
  %466 = load i8*** %argv_addr, align 8, !dbg !5907
  %467 = sext i32 %465 to i64, !dbg !5907
  %468 = getelementptr inbounds i8** %466, i64 %467, !dbg !5907
  %469 = load i8** %468, align 1, !dbg !5907
  %470 = getelementptr inbounds i8* %469, i64 0, !dbg !5907
  %471 = load i8* %470, align 1, !dbg !5907
  %472 = sext i8 %471 to i32, !dbg !5907
  %473 = load i8*** %argv_addr, align 8, !dbg !5907
  %474 = getelementptr inbounds i8** %473, i64 0, !dbg !5907
  %475 = load i8** %474, align 1, !dbg !5907
  %476 = load %4** @stderr, align 8, !dbg !5907
  %477 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %476, i8* noalias getelementptr inbounds ([45 x i8]* @.str4150, i64 0, i64 0), i8* %475, i32 %472, i8* %456) nounwind, !dbg !5907
  br label %bb83, !dbg !5907

bb83:                                             ; preds = %bb82, %bb81, %bb79
  %478 = load %struct._getopt_data** %d_addr, align 8, !dbg !5908
  %479 = getelementptr inbounds %struct._getopt_data* %478, i32 0, i32 5, !dbg !5908
  %480 = load i8** %479, align 8, !dbg !5908
  %481 = load %struct._getopt_data** %d_addr, align 8, !dbg !5908
  %482 = getelementptr inbounds %struct._getopt_data* %481, i32 0, i32 5, !dbg !5908
  %483 = load i8** %482, align 8, !dbg !5908
  %484 = call i64 @strlen(i8* %483) nounwind readonly, !dbg !5908
  %485 = getelementptr inbounds i8* %480, i64 %484, !dbg !5908
  %486 = load %struct._getopt_data** %d_addr, align 8, !dbg !5908
  %487 = getelementptr inbounds %struct._getopt_data* %486, i32 0, i32 5, !dbg !5908
  store i8* %485, i8** %487, align 8, !dbg !5908
  %488 = load %struct.option** %pfound, align 8, !dbg !5909
  %489 = getelementptr inbounds %struct.option* %488, i32 0, i32 3, !dbg !5909
  %490 = load i32* %489, align 8, !dbg !5909
  %491 = load %struct._getopt_data** %d_addr, align 8, !dbg !5909
  %492 = getelementptr inbounds %struct._getopt_data* %491, i32 0, i32 2, !dbg !5909
  store i32 %490, i32* %492, align 8, !dbg !5909
  store i32 63, i32* %0, align 4, !dbg !5910
  br label %bb133, !dbg !5910

bb84:                                             ; preds = %bb76
  %493 = icmp eq i32 %435, 1, !dbg !5911
  br i1 %493, label %bb85, label %bb93, !dbg !5911

bb85:                                             ; preds = %bb84
  %494 = load %struct._getopt_data** %d_addr, align 8, !dbg !5912
  %495 = getelementptr inbounds %struct._getopt_data* %494, i32 0, i32 0, !dbg !5912
  %496 = load i32* %495, align 8, !dbg !5912
  %497 = load i32* %argc_addr, align 4, !dbg !5912
  %498 = icmp slt i32 %496, %497, !dbg !5912
  br i1 %498, label %bb86, label %bb87, !dbg !5912

bb86:                                             ; preds = %bb85
  %499 = load %struct._getopt_data** %d_addr, align 8, !dbg !5913
  %500 = getelementptr inbounds %struct._getopt_data* %499, i32 0, i32 0, !dbg !5913
  %501 = load i32* %500, align 8, !dbg !5913
  %502 = load i8*** %argv_addr, align 8, !dbg !5913
  %503 = sext i32 %501 to i64, !dbg !5913
  %504 = getelementptr inbounds i8** %502, i64 %503, !dbg !5913
  %505 = load i8** %504, align 1, !dbg !5913
  %506 = load %struct._getopt_data** %d_addr, align 8, !dbg !5913
  %507 = getelementptr inbounds %struct._getopt_data* %506, i32 0, i32 3, !dbg !5913
  store i8* %505, i8** %507, align 8, !dbg !5913
  %508 = add nsw i32 %501, 1, !dbg !5913
  %509 = load %struct._getopt_data** %d_addr, align 8, !dbg !5913
  %510 = getelementptr inbounds %struct._getopt_data* %509, i32 0, i32 0, !dbg !5913
  store i32 %508, i32* %510, align 8, !dbg !5913
  br label %bb93, !dbg !5913

bb87:                                             ; preds = %bb85
  %511 = load i32* %print_errors, align 4, !dbg !5914
  %512 = icmp ne i32 %511, 0, !dbg !5914
  br i1 %512, label %bb88, label %bb89, !dbg !5914

bb88:                                             ; preds = %bb87
  %513 = load %struct._getopt_data** %d_addr, align 8, !dbg !5915
  %514 = getelementptr inbounds %struct._getopt_data* %513, i32 0, i32 0, !dbg !5915
  %515 = load i32* %514, align 8, !dbg !5915
  %516 = sub nsw i32 %515, 1, !dbg !5915
  %517 = load i8*** %argv_addr, align 8, !dbg !5915
  %518 = sext i32 %516 to i64, !dbg !5915
  %519 = getelementptr inbounds i8** %517, i64 %518, !dbg !5915
  %520 = load i8** %519, align 1, !dbg !5915
  %521 = load i8*** %argv_addr, align 8, !dbg !5915
  %522 = getelementptr inbounds i8** %521, i64 0, !dbg !5915
  %523 = load i8** %522, align 1, !dbg !5915
  %524 = load %4** @stderr, align 8, !dbg !5915
  %525 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %524, i8* noalias getelementptr inbounds ([38 x i8]* @.str5151, i64 0, i64 0), i8* %523, i8* %520) nounwind, !dbg !5915
  br label %bb89, !dbg !5915

bb89:                                             ; preds = %bb88, %bb87
  %526 = load %struct._getopt_data** %d_addr, align 8, !dbg !5916
  %527 = getelementptr inbounds %struct._getopt_data* %526, i32 0, i32 5, !dbg !5916
  %528 = load i8** %527, align 8, !dbg !5916
  %529 = load %struct._getopt_data** %d_addr, align 8, !dbg !5916
  %530 = getelementptr inbounds %struct._getopt_data* %529, i32 0, i32 5, !dbg !5916
  %531 = load i8** %530, align 8, !dbg !5916
  %532 = call i64 @strlen(i8* %531) nounwind readonly, !dbg !5916
  %533 = getelementptr inbounds i8* %528, i64 %532, !dbg !5916
  %534 = load %struct._getopt_data** %d_addr, align 8, !dbg !5916
  %535 = getelementptr inbounds %struct._getopt_data* %534, i32 0, i32 5, !dbg !5916
  store i8* %533, i8** %535, align 8, !dbg !5916
  %536 = load %struct.option** %pfound, align 8, !dbg !5917
  %537 = getelementptr inbounds %struct.option* %536, i32 0, i32 3, !dbg !5917
  %538 = load i32* %537, align 8, !dbg !5917
  %539 = load %struct._getopt_data** %d_addr, align 8, !dbg !5917
  %540 = getelementptr inbounds %struct._getopt_data* %539, i32 0, i32 2, !dbg !5917
  store i32 %538, i32* %540, align 8, !dbg !5917
  %541 = load i8** %optstring_addr, align 8, !dbg !5918
  %542 = getelementptr inbounds i8* %541, i64 0, !dbg !5918
  %543 = load i8* %542, align 1, !dbg !5918
  %544 = icmp eq i8 %543, 58, !dbg !5918
  br i1 %544, label %bb90, label %bb91, !dbg !5918

bb90:                                             ; preds = %bb89
  store i32 58, i32* %iftmp.13, align 4, !dbg !5918
  br label %bb92, !dbg !5918

bb91:                                             ; preds = %bb89
  store i32 63, i32* %iftmp.13, align 4, !dbg !5918
  br label %bb92, !dbg !5918

bb92:                                             ; preds = %bb91, %bb90
  %545 = load i32* %iftmp.13, align 4, !dbg !5918
  store i32 %545, i32* %0, align 4, !dbg !5918
  br label %bb133, !dbg !5918

bb93:                                             ; preds = %bb86, %bb84, %bb78
  %546 = load %struct._getopt_data** %d_addr, align 8, !dbg !5919
  %547 = getelementptr inbounds %struct._getopt_data* %546, i32 0, i32 5, !dbg !5919
  %548 = load i8** %547, align 8, !dbg !5919
  %549 = load %struct._getopt_data** %d_addr, align 8, !dbg !5919
  %550 = getelementptr inbounds %struct._getopt_data* %549, i32 0, i32 5, !dbg !5919
  %551 = load i8** %550, align 8, !dbg !5919
  %552 = call i64 @strlen(i8* %551) nounwind readonly, !dbg !5919
  %553 = getelementptr inbounds i8* %548, i64 %552, !dbg !5919
  %554 = load %struct._getopt_data** %d_addr, align 8, !dbg !5919
  %555 = getelementptr inbounds %struct._getopt_data* %554, i32 0, i32 5, !dbg !5919
  store i8* %553, i8** %555, align 8, !dbg !5919
  %556 = load i32** %longind_addr, align 8, !dbg !5920
  %557 = icmp ne i32* %556, null, !dbg !5920
  br i1 %557, label %bb94, label %bb95, !dbg !5920

bb94:                                             ; preds = %bb93
  %558 = load i32** %longind_addr, align 8, !dbg !5921
  %559 = load i32* %option_index, align 4, !dbg !5921
  store i32 %559, i32* %558, align 4, !dbg !5921
  br label %bb95, !dbg !5921

bb95:                                             ; preds = %bb94, %bb93
  %560 = load %struct.option** %pfound, align 8, !dbg !5922
  %561 = getelementptr inbounds %struct.option* %560, i32 0, i32 2, !dbg !5922
  %562 = load i32** %561, align 8, !dbg !5922
  %563 = icmp ne i32* %562, null, !dbg !5922
  %564 = load %struct.option** %pfound, align 8, !dbg !5923
  br i1 %563, label %bb96, label %bb97, !dbg !5922

bb96:                                             ; preds = %bb95
  %565 = getelementptr inbounds %struct.option* %564, i32 0, i32 2, !dbg !5923
  %566 = load i32** %565, align 8, !dbg !5923
  %567 = load %struct.option** %pfound, align 8, !dbg !5923
  %568 = getelementptr inbounds %struct.option* %567, i32 0, i32 3, !dbg !5923
  %569 = load i32* %568, align 8, !dbg !5923
  store i32 %569, i32* %566, align 4, !dbg !5923
  store i32 0, i32* %0, align 4, !dbg !5924
  br label %bb133, !dbg !5924

bb97:                                             ; preds = %bb95
  %570 = getelementptr inbounds %struct.option* %564, i32 0, i32 3, !dbg !5925
  %571 = load i32* %570, align 8, !dbg !5925
  store i32 %571, i32* %0, align 4, !dbg !5925
  br label %bb133, !dbg !5925

bb98:                                             ; preds = %bb75
  %572 = load i32* %long_only_addr, align 4, !dbg !5926
  %573 = icmp eq i32 %572, 0, !dbg !5926
  br i1 %573, label %bb101, label %bb99, !dbg !5926

bb99:                                             ; preds = %bb98
  %574 = load %struct._getopt_data** %d_addr, align 8, !dbg !5926
  %575 = getelementptr inbounds %struct._getopt_data* %574, i32 0, i32 0, !dbg !5926
  %576 = load i32* %575, align 8, !dbg !5926
  %577 = load i8*** %argv_addr, align 8, !dbg !5926
  %578 = sext i32 %576 to i64, !dbg !5926
  %579 = getelementptr inbounds i8** %577, i64 %578, !dbg !5926
  %580 = load i8** %579, align 1, !dbg !5926
  %581 = getelementptr inbounds i8* %580, i64 1, !dbg !5926
  %582 = load i8* %581, align 1, !dbg !5926
  %583 = icmp eq i8 %582, 45, !dbg !5926
  br i1 %583, label %bb101, label %bb100, !dbg !5926

bb100:                                            ; preds = %bb99
  %584 = load %struct._getopt_data** %d_addr, align 8, !dbg !5926
  %585 = getelementptr inbounds %struct._getopt_data* %584, i32 0, i32 5, !dbg !5926
  %586 = load i8** %585, align 8, !dbg !5926
  %587 = load i8* %586, align 1, !dbg !5926
  %588 = sext i8 %587 to i32, !dbg !5926
  %589 = load i8** %optstring_addr, align 8, !dbg !5926
  %590 = call i8* @strchr(i8* %589, i32 %588) nounwind readonly, !dbg !5926
  %591 = icmp eq i8* %590, null, !dbg !5926
  br i1 %591, label %bb101, label %bb106, !dbg !5926

bb101:                                            ; preds = %bb100, %bb99, %bb98
  %592 = load i32* %print_errors, align 4, !dbg !5927
  %593 = icmp ne i32 %592, 0, !dbg !5927
  br i1 %593, label %bb102, label %bb105, !dbg !5927

bb102:                                            ; preds = %bb101
  %594 = load %struct._getopt_data** %d_addr, align 8, !dbg !5928
  %595 = getelementptr inbounds %struct._getopt_data* %594, i32 0, i32 0, !dbg !5928
  %596 = load i32* %595, align 8, !dbg !5928
  %597 = load i8*** %argv_addr, align 8, !dbg !5928
  %598 = sext i32 %596 to i64, !dbg !5928
  %599 = getelementptr inbounds i8** %597, i64 %598, !dbg !5928
  %600 = load i8** %599, align 1, !dbg !5928
  %601 = getelementptr inbounds i8* %600, i64 1, !dbg !5928
  %602 = load i8* %601, align 1, !dbg !5928
  %603 = icmp eq i8 %602, 45, !dbg !5928
  %604 = load %struct._getopt_data** %d_addr, align 8, !dbg !5929
  %605 = getelementptr inbounds %struct._getopt_data* %604, i32 0, i32 5, !dbg !5929
  %606 = load i8** %605, align 8, !dbg !5929
  br i1 %603, label %bb103, label %bb104, !dbg !5928

bb103:                                            ; preds = %bb102
  %607 = load i8*** %argv_addr, align 8, !dbg !5929
  %608 = getelementptr inbounds i8** %607, i64 0, !dbg !5929
  %609 = load i8** %608, align 1, !dbg !5929
  %610 = load %4** @stderr, align 8, !dbg !5929
  %611 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %610, i8* noalias getelementptr inbounds ([32 x i8]* @.str6152, i64 0, i64 0), i8* %609, i8* %606) nounwind, !dbg !5929
  br label %bb105, !dbg !5929

bb104:                                            ; preds = %bb102
  %612 = load %struct._getopt_data** %d_addr, align 8, !dbg !5930
  %613 = getelementptr inbounds %struct._getopt_data* %612, i32 0, i32 0, !dbg !5930
  %614 = load i32* %613, align 8, !dbg !5930
  %615 = load i8*** %argv_addr, align 8, !dbg !5930
  %616 = sext i32 %614 to i64, !dbg !5930
  %617 = getelementptr inbounds i8** %615, i64 %616, !dbg !5930
  %618 = load i8** %617, align 1, !dbg !5930
  %619 = getelementptr inbounds i8* %618, i64 0, !dbg !5930
  %620 = load i8* %619, align 1, !dbg !5930
  %621 = sext i8 %620 to i32, !dbg !5930
  %622 = load i8*** %argv_addr, align 8, !dbg !5930
  %623 = getelementptr inbounds i8** %622, i64 0, !dbg !5930
  %624 = load i8** %623, align 1, !dbg !5930
  %625 = load %4** @stderr, align 8, !dbg !5930
  %626 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %625, i8* noalias getelementptr inbounds ([32 x i8]* @.str7153, i64 0, i64 0), i8* %624, i32 %621, i8* %606) nounwind, !dbg !5930
  br label %bb105, !dbg !5930

bb105:                                            ; preds = %bb104, %bb103, %bb101
  %627 = load %struct._getopt_data** %d_addr, align 8, !dbg !5931
  %628 = getelementptr inbounds %struct._getopt_data* %627, i32 0, i32 5, !dbg !5931
  store i8* getelementptr inbounds ([1 x i8]* @.str8154, i64 0, i64 0), i8** %628, align 8, !dbg !5931
  %629 = load %struct._getopt_data** %d_addr, align 8, !dbg !5932
  %630 = getelementptr inbounds %struct._getopt_data* %629, i32 0, i32 0, !dbg !5932
  %631 = load i32* %630, align 8, !dbg !5932
  %632 = add nsw i32 %631, 1, !dbg !5932
  %633 = load %struct._getopt_data** %d_addr, align 8, !dbg !5932
  %634 = getelementptr inbounds %struct._getopt_data* %633, i32 0, i32 0, !dbg !5932
  store i32 %632, i32* %634, align 8, !dbg !5932
  %635 = load %struct._getopt_data** %d_addr, align 8, !dbg !5933
  %636 = getelementptr inbounds %struct._getopt_data* %635, i32 0, i32 2, !dbg !5933
  store i32 0, i32* %636, align 8, !dbg !5933
  store i32 63, i32* %0, align 4, !dbg !5934
  br label %bb133, !dbg !5934

bb106:                                            ; preds = %bb100, %bb52, %bb50, %bb48
  %637 = load %struct._getopt_data** %d_addr, align 8, !dbg !5935
  %638 = getelementptr inbounds %struct._getopt_data* %637, i32 0, i32 5, !dbg !5935
  %639 = load i8** %638, align 8, !dbg !5935
  %640 = load i8* %639, align 1, !dbg !5935
  store i8 %640, i8* %c, align 1, !dbg !5935
  %641 = getelementptr inbounds i8* %639, i64 1, !dbg !5935
  %642 = load %struct._getopt_data** %d_addr, align 8, !dbg !5935
  %643 = getelementptr inbounds %struct._getopt_data* %642, i32 0, i32 5, !dbg !5935
  store i8* %641, i8** %643, align 8, !dbg !5935
  %644 = load i8* %c, align 1, !dbg !5937
  %645 = sext i8 %644 to i32, !dbg !5937
  %646 = load i8** %optstring_addr, align 8, !dbg !5937
  %647 = call i8* @strchr(i8* %646, i32 %645) nounwind readonly, !dbg !5937
  store i8* %647, i8** %temp, align 8, !dbg !5937
  %648 = load %struct._getopt_data** %d_addr, align 8, !dbg !5938
  %649 = getelementptr inbounds %struct._getopt_data* %648, i32 0, i32 5, !dbg !5938
  %650 = load i8** %649, align 8, !dbg !5938
  %651 = load i8* %650, align 1, !dbg !5938
  %652 = icmp eq i8 %651, 0, !dbg !5938
  br i1 %652, label %bb107, label %bb108, !dbg !5938

bb107:                                            ; preds = %bb106
  %653 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %654 = getelementptr inbounds %struct._getopt_data* %653, i32 0, i32 0, !dbg !5939
  %655 = load i32* %654, align 8, !dbg !5939
  %656 = add nsw i32 %655, 1, !dbg !5939
  %657 = load %struct._getopt_data** %d_addr, align 8, !dbg !5939
  %658 = getelementptr inbounds %struct._getopt_data* %657, i32 0, i32 0, !dbg !5939
  store i32 %656, i32* %658, align 8, !dbg !5939
  br label %bb108, !dbg !5939

bb108:                                            ; preds = %bb107, %bb106
  %659 = load i8** %temp, align 8, !dbg !5940
  %660 = icmp eq i8* %659, null, !dbg !5940
  br i1 %660, label %bb110, label %bb109, !dbg !5940

bb109:                                            ; preds = %bb108
  %661 = load i8* %c, align 1, !dbg !5940
  %662 = icmp eq i8 %661, 58, !dbg !5940
  br i1 %662, label %bb110, label %bb115, !dbg !5940

bb110:                                            ; preds = %bb109, %bb108
  %663 = load i32* %print_errors, align 4, !dbg !5941
  %664 = icmp ne i32 %663, 0, !dbg !5941
  br i1 %664, label %bb111, label %bb114, !dbg !5941

bb111:                                            ; preds = %bb110
  %665 = load %struct._getopt_data** %d_addr, align 8, !dbg !5942
  %666 = getelementptr inbounds %struct._getopt_data* %665, i32 0, i32 7, !dbg !5942
  %667 = load i32* %666, align 4, !dbg !5942
  %668 = icmp ne i32 %667, 0, !dbg !5942
  %669 = load i8* %c, align 1, !dbg !5943
  %670 = sext i8 %669 to i32, !dbg !5943
  %671 = load i8*** %argv_addr, align 8, !dbg !5943
  %672 = getelementptr inbounds i8** %671, i64 0, !dbg !5943
  %673 = load i8** %672, align 1, !dbg !5943
  %674 = load %4** @stderr, align 8, !dbg !5943
  br i1 %668, label %bb112, label %bb113, !dbg !5942

bb112:                                            ; preds = %bb111
  %675 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str9155, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !5943
  br label %bb114, !dbg !5943

bb113:                                            ; preds = %bb111
  %676 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %674, i8* noalias getelementptr inbounds ([26 x i8]* @.str10156, i64 0, i64 0), i8* %673, i32 %670) nounwind, !dbg !5944
  br label %bb114, !dbg !5944

bb114:                                            ; preds = %bb113, %bb112, %bb110
  %677 = load i8* %c, align 1, !dbg !5945
  %678 = sext i8 %677 to i32, !dbg !5945
  %679 = load %struct._getopt_data** %d_addr, align 8, !dbg !5945
  %680 = getelementptr inbounds %struct._getopt_data* %679, i32 0, i32 2, !dbg !5945
  store i32 %678, i32* %680, align 8, !dbg !5945
  store i32 63, i32* %0, align 4, !dbg !5946
  br label %bb133, !dbg !5946

bb115:                                            ; preds = %bb109
  %681 = load i8** %temp, align 8, !dbg !5947
  %682 = getelementptr inbounds i8* %681, i64 1, !dbg !5947
  %683 = load i8* %682, align 1, !dbg !5947
  %684 = icmp eq i8 %683, 58, !dbg !5947
  br i1 %684, label %bb116, label %bb132, !dbg !5947

bb116:                                            ; preds = %bb115
  %685 = load i8** %temp, align 8, !dbg !5948
  %686 = getelementptr inbounds i8* %685, i64 2, !dbg !5948
  %687 = load i8* %686, align 1, !dbg !5948
  %688 = icmp eq i8 %687, 58, !dbg !5948
  %689 = load %struct._getopt_data** %d_addr, align 8, !dbg !5949
  %690 = getelementptr inbounds %struct._getopt_data* %689, i32 0, i32 5, !dbg !5949
  %691 = load i8** %690, align 8, !dbg !5949
  %692 = load i8* %691, align 1, !dbg !5949
  %693 = icmp ne i8 %692, 0, !dbg !5949
  %694 = load %struct._getopt_data** %d_addr, align 8, !dbg !5950
  br i1 %688, label %bb117, label %bb121, !dbg !5948

bb117:                                            ; preds = %bb116
  br i1 %693, label %bb118, label %bb119, !dbg !5949

bb118:                                            ; preds = %bb117
  %695 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !5950
  %696 = load i8** %695, align 8, !dbg !5950
  %697 = load %struct._getopt_data** %d_addr, align 8, !dbg !5950
  %698 = getelementptr inbounds %struct._getopt_data* %697, i32 0, i32 3, !dbg !5950
  store i8* %696, i8** %698, align 8, !dbg !5950
  %699 = load %struct._getopt_data** %d_addr, align 8, !dbg !5951
  %700 = getelementptr inbounds %struct._getopt_data* %699, i32 0, i32 0, !dbg !5951
  %701 = load i32* %700, align 8, !dbg !5951
  %702 = add nsw i32 %701, 1, !dbg !5951
  %703 = load %struct._getopt_data** %d_addr, align 8, !dbg !5951
  %704 = getelementptr inbounds %struct._getopt_data* %703, i32 0, i32 0, !dbg !5951
  store i32 %702, i32* %704, align 8, !dbg !5951
  br label %bb120, !dbg !5951

bb119:                                            ; preds = %bb117
  %705 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 3, !dbg !5952
  store i8* null, i8** %705, align 8, !dbg !5952
  br label %bb120, !dbg !5952

bb120:                                            ; preds = %bb119, %bb118
  %706 = load %struct._getopt_data** %d_addr, align 8, !dbg !5953
  %707 = getelementptr inbounds %struct._getopt_data* %706, i32 0, i32 5, !dbg !5953
  store i8* null, i8** %707, align 8, !dbg !5953
  br label %bb132, !dbg !5953

bb121:                                            ; preds = %bb116
  br i1 %693, label %bb122, label %bb123, !dbg !5954

bb122:                                            ; preds = %bb121
  %708 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 5, !dbg !5955
  %709 = load i8** %708, align 8, !dbg !5955
  %710 = load %struct._getopt_data** %d_addr, align 8, !dbg !5955
  %711 = getelementptr inbounds %struct._getopt_data* %710, i32 0, i32 3, !dbg !5955
  store i8* %709, i8** %711, align 8, !dbg !5955
  %712 = load %struct._getopt_data** %d_addr, align 8, !dbg !5956
  %713 = getelementptr inbounds %struct._getopt_data* %712, i32 0, i32 0, !dbg !5956
  %714 = load i32* %713, align 8, !dbg !5956
  %715 = add nsw i32 %714, 1, !dbg !5956
  %716 = load %struct._getopt_data** %d_addr, align 8, !dbg !5956
  %717 = getelementptr inbounds %struct._getopt_data* %716, i32 0, i32 0, !dbg !5956
  store i32 %715, i32* %717, align 8, !dbg !5956
  br label %bb131, !dbg !5956

bb123:                                            ; preds = %bb121
  %718 = getelementptr inbounds %struct._getopt_data* %694, i32 0, i32 0, !dbg !5957
  %719 = load i32* %718, align 8, !dbg !5957
  %720 = load i32* %argc_addr, align 4, !dbg !5957
  %721 = icmp eq i32 %719, %720, !dbg !5957
  br i1 %721, label %bb124, label %bb130, !dbg !5957

bb124:                                            ; preds = %bb123
  %722 = load i32* %print_errors, align 4, !dbg !5958
  %723 = icmp ne i32 %722, 0, !dbg !5958
  br i1 %723, label %bb125, label %bb126, !dbg !5958

bb125:                                            ; preds = %bb124
  %724 = load i8* %c, align 1, !dbg !5959
  %725 = sext i8 %724 to i32, !dbg !5959
  %726 = load i8*** %argv_addr, align 8, !dbg !5959
  %727 = getelementptr inbounds i8** %726, i64 0, !dbg !5959
  %728 = load i8** %727, align 1, !dbg !5959
  %729 = load %4** @stderr, align 8, !dbg !5959
  %730 = call i32 (%4*, i8*, ...)* @fprintf(%4* noalias %729, i8* noalias getelementptr inbounds ([39 x i8]* @.str11157, i64 0, i64 0), i8* %728, i32 %725) nounwind, !dbg !5959
  br label %bb126, !dbg !5959

bb126:                                            ; preds = %bb125, %bb124
  %731 = load i8* %c, align 1, !dbg !5960
  %732 = sext i8 %731 to i32, !dbg !5960
  %733 = load %struct._getopt_data** %d_addr, align 8, !dbg !5960
  %734 = getelementptr inbounds %struct._getopt_data* %733, i32 0, i32 2, !dbg !5960
  store i32 %732, i32* %734, align 8, !dbg !5960
  %735 = load i8** %optstring_addr, align 8, !dbg !5961
  %736 = getelementptr inbounds i8* %735, i64 0, !dbg !5961
  %737 = load i8* %736, align 1, !dbg !5961
  %738 = icmp eq i8 %737, 58, !dbg !5961
  br i1 %738, label %bb127, label %bb128, !dbg !5961

bb127:                                            ; preds = %bb126
  store i8 58, i8* %c, align 1, !dbg !5962
  br label %bb131, !dbg !5962

bb128:                                            ; preds = %bb126
  store i8 63, i8* %c, align 1, !dbg !5963
  br label %bb131, !dbg !5963

bb130:                                            ; preds = %bb123
  %739 = load %struct._getopt_data** %d_addr, align 8, !dbg !5964
  %740 = getelementptr inbounds %struct._getopt_data* %739, i32 0, i32 0, !dbg !5964
  %741 = load i32* %740, align 8, !dbg !5964
  %742 = load i8*** %argv_addr, align 8, !dbg !5964
  %743 = sext i32 %741 to i64, !dbg !5964
  %744 = getelementptr inbounds i8** %742, i64 %743, !dbg !5964
  %745 = load i8** %744, align 1, !dbg !5964
  %746 = load %struct._getopt_data** %d_addr, align 8, !dbg !5964
  %747 = getelementptr inbounds %struct._getopt_data* %746, i32 0, i32 3, !dbg !5964
  store i8* %745, i8** %747, align 8, !dbg !5964
  %748 = add nsw i32 %741, 1, !dbg !5964
  %749 = load %struct._getopt_data** %d_addr, align 8, !dbg !5964
  %750 = getelementptr inbounds %struct._getopt_data* %749, i32 0, i32 0, !dbg !5964
  store i32 %748, i32* %750, align 8, !dbg !5964
  br label %bb131, !dbg !5964

bb131:                                            ; preds = %bb127, %bb128, %bb130, %bb122
  %751 = load %struct._getopt_data** %d_addr, align 8, !dbg !5965
  %752 = getelementptr inbounds %struct._getopt_data* %751, i32 0, i32 5, !dbg !5965
  store i8* null, i8** %752, align 8, !dbg !5965
  br label %bb132, !dbg !5965

bb132:                                            ; preds = %bb131, %bb120, %bb115
  %753 = load i8* %c, align 1, !dbg !5966
  %754 = sext i8 %753 to i32, !dbg !5966
  store i32 %754, i32* %0, align 4, !dbg !5966
  br label %bb133, !dbg !5966

bb133:                                            ; preds = %bb132, %bb114, %bb105, %bb97, %bb96, %bb92, %bb83, %bb74, %bb42, %bb41, %bb37, %bb2
  %755 = load i32* %0, align 4, !dbg !5835
  store i32 %755, i32* %retval, align 4, !dbg !5835
  %retval134 = load i32* %retval, !dbg !5835
  ret i32 %retval134, !dbg !5835
}

define hidden i32 @_getopt_internal(i32 %argc, i8** %argv, i8* %optstring, %struct.option* %longopts, i32* %longind, i32 %long_only) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %longopts_addr = alloca %struct.option*, align 8
  %longind_addr = alloca i32*, align 8
  %long_only_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %result = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  store %struct.option* %longopts, %struct.option** %longopts_addr
  store i32* %longind, i32** %longind_addr
  store i32 %long_only, i32* %long_only_addr
  %1 = load i32* @optind, align 4, !dbg !5967
  store i32 %1, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !5967
  %2 = load i32* @opterr, align 4, !dbg !5969
  store i32 %2, i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 1), align 4, !dbg !5969
  %3 = load i32* %argc_addr, align 4, !dbg !5970
  %4 = load i8*** %argv_addr, align 8, !dbg !5970
  %5 = load i8** %optstring_addr, align 8, !dbg !5970
  %6 = load %struct.option** %longopts_addr, align 8, !dbg !5970
  %7 = load i32** %longind_addr, align 8, !dbg !5970
  %8 = load i32* %long_only_addr, align 4, !dbg !5970
  %9 = call i32 @_getopt_internal_r(i32 %3, i8** %4, i8* %5, %struct.option* %6, i32* %7, i32 %8, %struct._getopt_data* @getopt_data) nounwind, !dbg !5970
  store i32 %9, i32* %result, align 4, !dbg !5970
  %10 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 0), align 8, !dbg !5971
  store i32 %10, i32* @optind, align 4, !dbg !5971
  %11 = load i8** getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 3), align 8, !dbg !5972
  store i8* %11, i8** @optarg, align 8, !dbg !5972
  %12 = load i32* getelementptr inbounds (%struct._getopt_data* @getopt_data, i64 0, i32 2), align 8, !dbg !5973
  store i32 %12, i32* @optopt, align 4, !dbg !5973
  %13 = load i32* %result, align 4, !dbg !5974
  store i32 %13, i32* %0, align 4, !dbg !5974
  %14 = load i32* %0, align 4, !dbg !5974
  store i32 %14, i32* %retval, align 4, !dbg !5974
  %retval1 = load i32* %retval, !dbg !5974
  ret i32 %retval1, !dbg !5974
}

define i32 @getopt(i32 %argc, i8** %argv, i8* %optstring) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %optstring_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %optstring, i8** %optstring_addr
  %1 = load i32* %argc_addr, align 4, !dbg !5975
  %2 = load i8*** %argv_addr, align 8, !dbg !5975
  %3 = load i8** %optstring_addr, align 8, !dbg !5975
  %4 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* null, i32* null, i32 0) nounwind, !dbg !5975
  store i32 %4, i32* %0, align 4, !dbg !5975
  %5 = load i32* %0, align 4, !dbg !5975
  store i32 %5, i32* %retval, align 4, !dbg !5975
  %retval1 = load i32* %retval, !dbg !5975
  ret i32 %retval1, !dbg !5975
}

define i32 @getopt_long(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !5977
  %2 = load i8*** %argv_addr, align 8, !dbg !5977
  %3 = load i8** %options_addr, align 8, !dbg !5977
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !5977
  %5 = load i32** %opt_index_addr, align 8, !dbg !5977
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 0) nounwind, !dbg !5977
  store i32 %6, i32* %0, align 4, !dbg !5977
  %7 = load i32* %0, align 4, !dbg !5977
  store i32 %7, i32* %retval, align 4, !dbg !5977
  %retval1 = load i32* %retval, !dbg !5977
  ret i32 %retval1, !dbg !5977
}

define i32 @getopt_long_only(i32 %argc, i8** %argv, i8* %options, %struct.option* %long_options, i32* %opt_index) nounwind {
entry:
  %argc_addr = alloca i32, align 4
  %argv_addr = alloca i8**, align 8
  %options_addr = alloca i8*, align 8
  %long_options_addr = alloca %struct.option*, align 8
  %opt_index_addr = alloca i32*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argc, i32* %argc_addr
  store i8** %argv, i8*** %argv_addr
  store i8* %options, i8** %options_addr
  store %struct.option* %long_options, %struct.option** %long_options_addr
  store i32* %opt_index, i32** %opt_index_addr
  %1 = load i32* %argc_addr, align 4, !dbg !5979
  %2 = load i8*** %argv_addr, align 8, !dbg !5979
  %3 = load i8** %options_addr, align 8, !dbg !5979
  %4 = load %struct.option** %long_options_addr, align 8, !dbg !5979
  %5 = load i32** %opt_index_addr, align 8, !dbg !5979
  %6 = call i32 @_getopt_internal(i32 %1, i8** %2, i8* %3, %struct.option* %4, i32* %5, i32 1) nounwind, !dbg !5979
  store i32 %6, i32* %0, align 4, !dbg !5979
  %7 = load i32* %0, align 4, !dbg !5979
  store i32 %7, i32* %retval, align 4, !dbg !5979
  %retval1 = load i32* %retval, !dbg !5979
  ret i32 %retval1, !dbg !5979
}

define internal void @__setutent() nounwind {
entry:
  %ret = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @static_fd, align 4, !dbg !5981
  %1 = icmp eq i32 %0, -1, !dbg !5981
  br i1 %1, label %bb, label %bb5, !dbg !5981

bb:                                               ; preds = %entry
  %2 = load i8** @static_ut_name, align 8, !dbg !5983
  %3 = call i32 (i8*, i32, ...)* @open(i8* %2, i32 2) nounwind, !dbg !5983
  store i32 %3, i32* @static_fd, align 4, !dbg !5983
  %4 = load i32* @static_fd, align 4, !dbg !5983
  %5 = icmp slt i32 %4, 0, !dbg !5983
  br i1 %5, label %bb1, label %bb2, !dbg !5983

bb1:                                              ; preds = %bb
  %6 = load i8** @static_ut_name, align 8, !dbg !5984
  %7 = call i32 (i8*, i32, ...)* @open(i8* %6, i32 0) nounwind, !dbg !5984
  store i32 %7, i32* @static_fd, align 4, !dbg !5984
  %8 = load i32* @static_fd, align 4, !dbg !5984
  %9 = icmp slt i32 %8, 0, !dbg !5984
  br i1 %9, label %bummer, label %bb2, !dbg !5984

bb2:                                              ; preds = %bb1, %bb
  %10 = load i32* @static_fd, align 4, !dbg !5985
  %11 = call i32 (i32, i32, ...)* @fcntl(i32 %10, i32 1, i32 0) nounwind, !dbg !5985
  store i32 %11, i32* %ret, align 4, !dbg !5985
  %12 = load i32* %ret, align 4, !dbg !5986
  %13 = icmp sge i32 %12, 0, !dbg !5986
  br i1 %13, label %bb3, label %bb4, !dbg !5986

bb3:                                              ; preds = %bb2
  %14 = load i32* %ret, align 4, !dbg !5987
  %15 = or i32 %14, 1, !dbg !5987
  %16 = load i32* @static_fd, align 4, !dbg !5987
  %17 = call i32 (i32, i32, ...)* @fcntl(i32 %16, i32 2, i32 %15) nounwind, !dbg !5987
  store i32 %17, i32* %ret, align 4, !dbg !5987
  br label %bb4, !dbg !5987

bb4:                                              ; preds = %bb3, %bb2
  %18 = load i32* %ret, align 4, !dbg !5988
  %19 = icmp slt i32 %18, 0, !dbg !5988
  br i1 %19, label %bummer, label %bb5, !dbg !5988

bummer:                                           ; preds = %bb4, %bb1
  store i32 -1, i32* @static_fd, align 4, !dbg !5989
  %20 = load i32* @static_fd, align 4, !dbg !5990
  %21 = call i32 @close(i32 %20) nounwind, !dbg !5990
  br label %return, !dbg !5990

bb5:                                              ; preds = %bb4, %entry
  %22 = load i32* @static_fd, align 4, !dbg !5991
  %23 = call i64 @lseek(i32 %22, i64 0, i32 0) nounwind, !dbg !5991
  br label %return, !dbg !5991

return:                                           ; preds = %bummer, %bb5
  ret void, !dbg !5992
}

define void @setutent() nounwind {
entry:
  call void @__setutent() nounwind, !dbg !5993
  ret void, !dbg !5995
}

define internal %struct.utmp* @__getutent(i32 %utmp_fd) nounwind {
entry:
  %utmp_fd_addr = alloca i32, align 4
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %utmp_fd, i32* %utmp_fd_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !5996
  %1 = load i32* %utmp_fd_addr, align 4, !dbg !5998
  %2 = icmp eq i32 %1, -1, !dbg !5998
  br i1 %2, label %bb, label %bb1, !dbg !5998

bb:                                               ; preds = %entry
  call void @__setutent() nounwind, !dbg !5999
  br label %bb1, !dbg !5999

bb1:                                              ; preds = %bb, %entry
  %3 = load i32* %utmp_fd_addr, align 4, !dbg !6000
  %4 = icmp eq i32 %3, -1, !dbg !6000
  br i1 %4, label %bb2, label %bb3, !dbg !6000

bb2:                                              ; preds = %bb1
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6001
  br label %bb6, !dbg !6001

bb3:                                              ; preds = %bb1
  %5 = load i32* %utmp_fd_addr, align 4, !dbg !6002
  %6 = call i64 @read(i32 %5, i8* bitcast (%struct.utmp* @static_utmp to i8*), i64 400) nounwind, !dbg !6002
  %7 = icmp eq i64 %6, 400, !dbg !6002
  br i1 %7, label %bb4, label %bb5, !dbg !6002

bb4:                                              ; preds = %bb3
  store %struct.utmp* @static_utmp, %struct.utmp** %ret, align 8, !dbg !6003
  br label %bb5, !dbg !6003

bb5:                                              ; preds = %bb4, %bb3
  %8 = load %struct.utmp** %ret, align 8, !dbg !6004
  store %struct.utmp* %8, %struct.utmp** %0, align 8, !dbg !6004
  br label %bb6, !dbg !6004

bb6:                                              ; preds = %bb5, %bb2
  %9 = load %struct.utmp** %0, align 8, !dbg !6001
  store %struct.utmp* %9, %struct.utmp** %retval, align 8, !dbg !6001
  %retval7 = load %struct.utmp** %retval, !dbg !6001
  ret %struct.utmp* %retval7, !dbg !6001
}

define void @endutent() nounwind {
entry:
  %0 = load i32* @static_fd, align 4, !dbg !6005
  %1 = icmp ne i32 %0, -1, !dbg !6005
  br i1 %1, label %bb, label %bb1, !dbg !6005

bb:                                               ; preds = %entry
  %2 = load i32* @static_fd, align 4, !dbg !6007
  %3 = call i32 @close(i32 %2) nounwind, !dbg !6007
  br label %bb1, !dbg !6007

bb1:                                              ; preds = %bb, %entry
  store i32 -1, i32* @static_fd, align 4, !dbg !6008
  ret void, !dbg !6009
}

define %struct.utmp* @getutent() nounwind {
entry:
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6010
  %1 = load i32* @static_fd, align 4, !dbg !6012
  %2 = call %struct.utmp* @__getutent(i32 %1) nounwind, !dbg !6012
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6012
  %3 = load %struct.utmp** %ret, align 8, !dbg !6013
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6013
  %4 = load %struct.utmp** %0, align 8, !dbg !6013
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6013
  %retval1 = load %struct.utmp** %retval, !dbg !6013
  ret %struct.utmp* %retval1, !dbg !6013
}

define internal %struct.utmp* @__getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  br label %bb12, !dbg !6014

bb:                                               ; preds = %bb12
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6016
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6016
  %3 = load i16* %2, align 8, !dbg !6016
  %4 = icmp eq i16 %3, 1, !dbg !6016
  br i1 %4, label %bb4, label %bb1, !dbg !6016

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6016
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6016
  %7 = load i16* %6, align 8, !dbg !6016
  %8 = icmp eq i16 %7, 2, !dbg !6016
  br i1 %8, label %bb4, label %bb2, !dbg !6016

bb2:                                              ; preds = %bb1
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6016
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 0, !dbg !6016
  %11 = load i16* %10, align 8, !dbg !6016
  %12 = icmp eq i16 %11, 3, !dbg !6016
  br i1 %12, label %bb4, label %bb3, !dbg !6016

bb3:                                              ; preds = %bb2
  %13 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6016
  %14 = getelementptr inbounds %struct.utmp* %13, i32 0, i32 0, !dbg !6016
  %15 = load i16* %14, align 8, !dbg !6016
  %16 = icmp eq i16 %15, 4, !dbg !6016
  br i1 %16, label %bb4, label %bb6, !dbg !6016

bb4:                                              ; preds = %bb3, %bb2, %bb1, %bb
  %17 = load %struct.utmp** %lutmp, align 8, !dbg !6016
  %18 = getelementptr inbounds %struct.utmp* %17, i32 0, i32 0, !dbg !6016
  %19 = load i16* %18, align 8, !dbg !6016
  %20 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6016
  %21 = getelementptr inbounds %struct.utmp* %20, i32 0, i32 0, !dbg !6016
  %22 = load i16* %21, align 8, !dbg !6016
  %23 = icmp eq i16 %19, %22, !dbg !6016
  br i1 %23, label %bb5, label %bb6, !dbg !6016

bb5:                                              ; preds = %bb4
  %24 = load %struct.utmp** %lutmp, align 8, !dbg !6017
  store %struct.utmp* %24, %struct.utmp** %0, align 8, !dbg !6017
  br label %bb14, !dbg !6017

bb6:                                              ; preds = %bb4, %bb3
  %25 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6018
  %26 = getelementptr inbounds %struct.utmp* %25, i32 0, i32 0, !dbg !6018
  %27 = load i16* %26, align 8, !dbg !6018
  %28 = icmp eq i16 %27, 5, !dbg !6018
  br i1 %28, label %bb10, label %bb7, !dbg !6018

bb7:                                              ; preds = %bb6
  %29 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6018
  %30 = getelementptr inbounds %struct.utmp* %29, i32 0, i32 0, !dbg !6018
  %31 = load i16* %30, align 8, !dbg !6018
  %32 = icmp eq i16 %31, 8, !dbg !6018
  br i1 %32, label %bb10, label %bb8, !dbg !6018

bb8:                                              ; preds = %bb7
  %33 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6018
  %34 = getelementptr inbounds %struct.utmp* %33, i32 0, i32 0, !dbg !6018
  %35 = load i16* %34, align 8, !dbg !6018
  %36 = icmp eq i16 %35, 6, !dbg !6018
  br i1 %36, label %bb10, label %bb9, !dbg !6018

bb9:                                              ; preds = %bb8
  %37 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6018
  %38 = getelementptr inbounds %struct.utmp* %37, i32 0, i32 0, !dbg !6018
  %39 = load i16* %38, align 8, !dbg !6018
  %40 = icmp eq i16 %39, 7, !dbg !6018
  br i1 %40, label %bb10, label %bb12, !dbg !6018

bb10:                                             ; preds = %bb9, %bb8, %bb7, %bb6
  %41 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6018
  %42 = getelementptr inbounds %struct.utmp* %41, i32 0, i32 3, !dbg !6018
  %43 = getelementptr inbounds [4 x i8]* %42, i64 0, i64 0, !dbg !6018
  %44 = load %struct.utmp** %lutmp, align 8, !dbg !6018
  %45 = getelementptr inbounds %struct.utmp* %44, i32 0, i32 3, !dbg !6018
  %46 = getelementptr inbounds [4 x i8]* %45, i64 0, i64 0, !dbg !6018
  %47 = call i32 @strncmp(i8* %46, i8* %43, i64 4) nounwind readonly, !dbg !6018
  %48 = icmp eq i32 %47, 0, !dbg !6018
  br i1 %48, label %bb11, label %bb12, !dbg !6018

bb11:                                             ; preds = %bb10
  %49 = load %struct.utmp** %lutmp, align 8, !dbg !6019
  store %struct.utmp* %49, %struct.utmp** %0, align 8, !dbg !6019
  br label %bb14, !dbg !6019

bb12:                                             ; preds = %bb10, %bb9, %entry
  %50 = load i32* @static_fd, align 4, !dbg !6014
  %51 = call %struct.utmp* @__getutent(i32 %50) nounwind, !dbg !6014
  store %struct.utmp* %51, %struct.utmp** %lutmp, align 8, !dbg !6014
  %52 = load %struct.utmp** %lutmp, align 8, !dbg !6014
  %53 = icmp ne %struct.utmp* %52, null, !dbg !6014
  br i1 %53, label %bb, label %bb13, !dbg !6014

bb13:                                             ; preds = %bb12
  store %struct.utmp* null, %struct.utmp** %0, align 8, !dbg !6020
  br label %bb14, !dbg !6020

bb14:                                             ; preds = %bb13, %bb11, %bb5
  %54 = load %struct.utmp** %0, align 8, !dbg !6017
  store %struct.utmp* %54, %struct.utmp** %retval, align 8, !dbg !6017
  %retval15 = load %struct.utmp** %retval, !dbg !6017
  ret %struct.utmp* %retval15, !dbg !6017
}

define %struct.utmp* @getutid(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %ret = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %ret, align 8, !dbg !6021
  %1 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6023
  %2 = call %struct.utmp* @__getutid(%struct.utmp* %1) nounwind, !dbg !6023
  store %struct.utmp* %2, %struct.utmp** %ret, align 8, !dbg !6023
  %3 = load %struct.utmp** %ret, align 8, !dbg !6024
  store %struct.utmp* %3, %struct.utmp** %0, align 8, !dbg !6024
  %4 = load %struct.utmp** %0, align 8, !dbg !6024
  store %struct.utmp* %4, %struct.utmp** %retval, align 8, !dbg !6024
  %retval1 = load %struct.utmp** %retval, !dbg !6024
  ret %struct.utmp* %retval1, !dbg !6024
}

define %struct.utmp* @getutline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %lutmp = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  store %struct.utmp* null, %struct.utmp** %lutmp, align 8, !dbg !6025
  br label %bb3, !dbg !6025

bb:                                               ; preds = %bb3
  %1 = load %struct.utmp** %lutmp, align 8, !dbg !6027
  %2 = getelementptr inbounds %struct.utmp* %1, i32 0, i32 0, !dbg !6027
  %3 = load i16* %2, align 8, !dbg !6027
  %4 = icmp eq i16 %3, 7, !dbg !6027
  br i1 %4, label %bb2, label %bb1, !dbg !6027

bb1:                                              ; preds = %bb
  %5 = load %struct.utmp** %lutmp, align 8, !dbg !6027
  %6 = getelementptr inbounds %struct.utmp* %5, i32 0, i32 0, !dbg !6027
  %7 = load i16* %6, align 8, !dbg !6027
  %8 = icmp eq i16 %7, 6, !dbg !6027
  br i1 %8, label %bb2, label %bb3, !dbg !6027

bb2:                                              ; preds = %bb1, %bb
  %9 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6027
  %10 = getelementptr inbounds %struct.utmp* %9, i32 0, i32 2, !dbg !6027
  %11 = getelementptr inbounds [32 x i8]* %10, i64 0, i64 0, !dbg !6027
  %12 = load %struct.utmp** %lutmp, align 8, !dbg !6027
  %13 = getelementptr inbounds %struct.utmp* %12, i32 0, i32 2, !dbg !6027
  %14 = getelementptr inbounds [32 x i8]* %13, i64 0, i64 0, !dbg !6027
  %15 = call i32 @strcmp(i8* %14, i8* %11) nounwind readonly, !dbg !6027
  %16 = icmp eq i32 %15, 0, !dbg !6027
  br i1 %16, label %bb4, label %bb3, !dbg !6027

bb3:                                              ; preds = %bb2, %bb1, %entry
  %17 = load i32* @static_fd, align 4, !dbg !6028
  %18 = call %struct.utmp* @__getutent(i32 %17) nounwind, !dbg !6028
  store %struct.utmp* %18, %struct.utmp** %lutmp, align 8, !dbg !6028
  %19 = load %struct.utmp** %lutmp, align 8, !dbg !6028
  %20 = icmp ne %struct.utmp* %19, null, !dbg !6028
  br i1 %20, label %bb, label %bb4, !dbg !6028

bb4:                                              ; preds = %bb3, %bb2
  %21 = load %struct.utmp** %lutmp, align 8, !dbg !6029
  store %struct.utmp* %21, %struct.utmp** %0, align 8, !dbg !6029
  %22 = load %struct.utmp** %0, align 8, !dbg !6029
  store %struct.utmp* %22, %struct.utmp** %retval, align 8, !dbg !6029
  %retval5 = load %struct.utmp** %retval, !dbg !6029
  ret %struct.utmp* %retval5, !dbg !6029
}

define %struct.utmp* @pututline(%struct.utmp* %utmp_entry) nounwind {
entry:
  %utmp_entry_addr = alloca %struct.utmp*, align 8
  %retval = alloca %struct.utmp*
  %0 = alloca %struct.utmp*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.utmp* %utmp_entry, %struct.utmp** %utmp_entry_addr
  %1 = load i32* @static_fd, align 4, !dbg !6030
  %2 = call i64 @lseek(i32 %1, i64 -400, i32 1) nounwind, !dbg !6030
  %3 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6032
  %4 = call %struct.utmp* @__getutid(%struct.utmp* %3) nounwind, !dbg !6032
  %5 = icmp ne %struct.utmp* %4, null, !dbg !6032
  %6 = load i32* @static_fd, align 4, !dbg !6033
  br i1 %5, label %bb, label %bb1, !dbg !6032

bb:                                               ; preds = %entry
  %7 = call i64 @lseek(i32 %6, i64 -400, i32 1) nounwind, !dbg !6033
  br label %bb2, !dbg !6033

bb1:                                              ; preds = %entry
  %8 = call i64 @lseek(i32 %6, i64 0, i32 2) nounwind, !dbg !6034
  br label %bb2, !dbg !6034

bb2:                                              ; preds = %bb1, %bb
  %9 = load i32* @static_fd, align 4, !dbg !6035
  %10 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6035
  %11 = bitcast %struct.utmp* %10 to i8*, !dbg !6035
  %12 = call i64 @write(i32 %9, i8* %11, i64 400) nounwind, !dbg !6035
  %13 = icmp ne i64 %12, 400, !dbg !6035
  br i1 %13, label %bb3, label %bb4, !dbg !6035

bb3:                                              ; preds = %bb2
  store %struct.utmp* null, %struct.utmp** %utmp_entry_addr, align 8, !dbg !6036
  br label %bb4, !dbg !6036

bb4:                                              ; preds = %bb3, %bb2
  %14 = load %struct.utmp** %utmp_entry_addr, align 8, !dbg !6037
  store %struct.utmp* %14, %struct.utmp** %0, align 8, !dbg !6037
  %15 = load %struct.utmp** %0, align 8, !dbg !6037
  store %struct.utmp* %15, %struct.utmp** %retval, align 8, !dbg !6037
  %retval5 = load %struct.utmp** %retval, !dbg !6037
  ret %struct.utmp* %retval5, !dbg !6037
}

define i32 @utmpname(i8* %new_ut_name) nounwind {
entry:
  %new_ut_name_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %new_ut_name, i8** %new_ut_name_addr
  %1 = load i8** %new_ut_name_addr, align 8, !dbg !6038
  %2 = icmp ne i8* %1, null, !dbg !6038
  br i1 %2, label %bb, label %bb4, !dbg !6038

bb:                                               ; preds = %entry
  %3 = load i8** @static_ut_name, align 8, !dbg !6040
  %4 = icmp ne i8* %3, getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), !dbg !6040
  br i1 %4, label %bb1, label %bb2, !dbg !6040

bb1:                                              ; preds = %bb
  %5 = load i8** @static_ut_name, align 8, !dbg !6041
  call void @free(i8* %5) nounwind, !dbg !6041
  br label %bb2, !dbg !6041

bb2:                                              ; preds = %bb1, %bb
  %6 = load i8** %new_ut_name_addr, align 8, !dbg !6042
  %7 = call noalias i8* @strdup(i8* %6) nounwind, !dbg !6042
  store i8* %7, i8** @static_ut_name, align 8, !dbg !6042
  %8 = load i8** @static_ut_name, align 8, !dbg !6043
  %9 = icmp eq i8* %8, null, !dbg !6043
  br i1 %9, label %bb3, label %bb4, !dbg !6043

bb3:                                              ; preds = %bb2
  store i8* getelementptr inbounds ([14 x i8]* @default_file_name, i64 0, i64 0), i8** @static_ut_name, align 8, !dbg !6044
  br label %bb4, !dbg !6044

bb4:                                              ; preds = %bb3, %bb2, %entry
  %10 = load i32* @static_fd, align 4, !dbg !6045
  %11 = icmp ne i32 %10, -1, !dbg !6045
  br i1 %11, label %bb5, label %bb6, !dbg !6045

bb5:                                              ; preds = %bb4
  %12 = load i32* @static_fd, align 4, !dbg !6046
  %13 = call i32 @close(i32 %12) nounwind, !dbg !6046
  br label %bb6, !dbg !6046

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* @static_fd, align 4, !dbg !6047
  store i32 0, i32* %0, align 4, !dbg !6048
  %14 = load i32* %0, align 4, !dbg !6048
  store i32 %14, i32* %retval, align 4, !dbg !6048
  %retval7 = load i32* %retval, !dbg !6048
  ret i32 %retval7, !dbg !6048
}

define i32 @iswalnum(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6049
  %2 = call i32 @iswctype(i32 %1, i32 1) nounwind, !dbg !6049
  store i32 %2, i32* %0, align 4, !dbg !6049
  %3 = load i32* %0, align 4, !dbg !6049
  store i32 %3, i32* %retval, align 4, !dbg !6049
  %retval1 = load i32* %retval, !dbg !6049
  ret i32 %retval1, !dbg !6050
}

define i32 @iswcntrl(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6052
  %2 = call i32 @iswctype(i32 %1, i32 4) nounwind, !dbg !6052
  store i32 %2, i32* %0, align 4, !dbg !6052
  %3 = load i32* %0, align 4, !dbg !6052
  store i32 %3, i32* %retval, align 4, !dbg !6052
  %retval1 = load i32* %retval, !dbg !6052
  ret i32 %retval1, !dbg !6053
}

define i32 @iswprint(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6055
  %2 = call i32 @iswctype(i32 %1, i32 8) nounwind, !dbg !6055
  store i32 %2, i32* %0, align 4, !dbg !6055
  %3 = load i32* %0, align 4, !dbg !6055
  store i32 %3, i32* %retval, align 4, !dbg !6055
  %retval1 = load i32* %retval, !dbg !6055
  ret i32 %retval1, !dbg !6056
}

define i32 @iswspace(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6058
  %2 = call i32 @iswctype(i32 %1, i32 10) nounwind, !dbg !6058
  store i32 %2, i32* %0, align 4, !dbg !6058
  %3 = load i32* %0, align 4, !dbg !6058
  store i32 %3, i32* %retval, align 4, !dbg !6058
  %retval1 = load i32* %retval, !dbg !6058
  ret i32 %retval1, !dbg !6059
}

define i64 @mbrtowc(i32* noalias %pwc, i8* noalias %s, i64 %n, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %pwc_addr = alloca i32*, align 8
  %s_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %p = alloca i8*
  %r = alloca i64
  %empty_string = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwc, i32** %pwc_addr
  store i8* %s, i8** %s_addr
  store i64 %n, i64* %n_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6061
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6061
  br i1 %2, label %bb, label %bb1, !dbg !6061

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2221, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6063
  br label %bb1, !dbg !6063

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %s_addr, align 8, !dbg !6064
  %4 = icmp eq i8* %3, null, !dbg !6064
  br i1 %4, label %bb2, label %bb4, !dbg !6064

bb2:                                              ; preds = %bb1
  %5 = load i8** %s_addr, align 8, !dbg !6065
  %6 = bitcast i8* %5 to i32*, !dbg !6065
  store i32* %6, i32** %pwc_addr, align 8, !dbg !6065
  %7 = getelementptr inbounds [1 x i8]* %empty_string, i64 0, i64 0, !dbg !6066
  store i8 0, i8* %7, align 1, !dbg !6066
  %empty_string3 = bitcast [1 x i8]* %empty_string to i8*, !dbg !6067
  store i8* %empty_string3, i8** %s_addr, align 8, !dbg !6067
  store i64 1, i64* %n_addr, align 8, !dbg !6068
  br label %bb10, !dbg !6068

bb4:                                              ; preds = %bb1
  %8 = load i64* %n_addr, align 8, !dbg !6069
  %9 = icmp eq i64 %8, 0, !dbg !6069
  br i1 %9, label %bb5, label %bb10, !dbg !6069

bb5:                                              ; preds = %bb4
  %10 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6070
  %11 = getelementptr inbounds %struct.__mbstate_t* %10, i32 0, i32 0, !dbg !6070
  %12 = load i32* %11, align 4, !dbg !6070
  %13 = icmp eq i32 %12, 0, !dbg !6070
  br i1 %13, label %bb8, label %bb6, !dbg !6070

bb6:                                              ; preds = %bb5
  %14 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6070
  %15 = getelementptr inbounds %struct.__mbstate_t* %14, i32 0, i32 1, !dbg !6070
  %16 = load i32* %15, align 4, !dbg !6070
  %17 = icmp ne i32 %16, 65535, !dbg !6070
  br i1 %17, label %bb8, label %bb7, !dbg !6070

bb7:                                              ; preds = %bb6
  store i64 -1, i64* %iftmp.0, align 8, !dbg !6070
  br label %bb9, !dbg !6070

bb8:                                              ; preds = %bb6, %bb5
  store i64 -2, i64* %iftmp.0, align 8, !dbg !6070
  br label %bb9, !dbg !6070

bb9:                                              ; preds = %bb8, %bb7
  %18 = load i64* %iftmp.0, align 8, !dbg !6070
  store i64 %18, i64* %0, align 8, !dbg !6070
  br label %bb15, !dbg !6070

bb10:                                             ; preds = %bb4, %bb2
  %19 = load i8** %s_addr, align 8, !dbg !6071
  store i8* %19, i8** %p, align 8, !dbg !6071
  %wcbuf11 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6072
  %20 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6072
  %21 = call i64 @mbsnrtowcs(i32* noalias %wcbuf11, i8** noalias %p, i64 -1, i64 1, %struct.__mbstate_t* noalias %20) nounwind, !dbg !6072
  store i64 %21, i64* %r, align 8, !dbg !6072
  %22 = load i64* %r, align 8, !dbg !6073
  %23 = icmp sge i64 %22, 0, !dbg !6073
  br i1 %23, label %bb12, label %bb14, !dbg !6073

bb12:                                             ; preds = %bb10
  %24 = load i32** %pwc_addr, align 8, !dbg !6074
  %25 = icmp ne i32* %24, null, !dbg !6074
  br i1 %25, label %bb13, label %bb14, !dbg !6074

bb13:                                             ; preds = %bb12
  %26 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !6075
  %27 = load i32* %26, align 4, !dbg !6075
  %28 = load i32** %pwc_addr, align 8, !dbg !6075
  store i32 %27, i32* %28, align 4, !dbg !6075
  br label %bb14, !dbg !6075

bb14:                                             ; preds = %bb13, %bb12, %bb10
  %29 = load i64* %r, align 8, !dbg !6076
  store i64 %29, i64* %0, align 8, !dbg !6076
  br label %bb15, !dbg !6076

bb15:                                             ; preds = %bb14, %bb9
  %30 = load i64* %0, align 8, !dbg !6070
  store i64 %30, i64* %retval, align 8, !dbg !6070
  %retval16 = load i64* %retval, !dbg !6070
  ret i64 %retval16, !dbg !6070
}

define i32 @mbsinit(%struct.__mbstate_t* %ps) nounwind readonly {
entry:
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6077
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6077
  br i1 %2, label %bb1, label %bb, !dbg !6077

bb:                                               ; preds = %entry
  %3 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6077
  %4 = getelementptr inbounds %struct.__mbstate_t* %3, i32 0, i32 0, !dbg !6077
  %5 = load i32* %4, align 4, !dbg !6077
  %6 = icmp eq i32 %5, 0, !dbg !6077
  br i1 %6, label %bb1, label %bb2, !dbg !6077

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %iftmp.0, align 4, !dbg !6077
  br label %bb3, !dbg !6077

bb2:                                              ; preds = %bb
  store i32 0, i32* %iftmp.0, align 4, !dbg !6077
  br label %bb3, !dbg !6077

bb3:                                              ; preds = %bb2, %bb1
  %7 = load i32* %iftmp.0, align 4, !dbg !6077
  store i32 %7, i32* %0, align 4, !dbg !6077
  %8 = load i32* %0, align 4, !dbg !6077
  store i32 %8, i32* %retval, align 4, !dbg !6077
  %retval4 = load i32* %retval, !dbg !6077
  ret i32 %retval4, !dbg !6077
}

define i8* @memchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6079
  store i8* %1, i8** %r, align 8, !dbg !6079
  br label %bb3, !dbg !6079

bb:                                               ; preds = %bb3
  %2 = load i8** %r, align 8, !dbg !6081
  %3 = load i8* %2, align 1, !dbg !6081
  %4 = load i32* %c_addr, align 4, !dbg !6081
  %5 = trunc i32 %4 to i8, !dbg !6081
  %6 = icmp eq i8 %3, %5, !dbg !6081
  %7 = load i8** %r, align 8, !dbg !6082
  br i1 %6, label %bb1, label %bb2, !dbg !6081

bb1:                                              ; preds = %bb
  store i8* %7, i8** %0, align 8, !dbg !6082
  br label %bb5, !dbg !6082

bb2:                                              ; preds = %bb
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !6083
  store i8* %8, i8** %r, align 8, !dbg !6083
  %9 = load i64* %n_addr, align 8, !dbg !6084
  %10 = sub i64 %9, 1, !dbg !6084
  store i64 %10, i64* %n_addr, align 8, !dbg !6084
  br label %bb3, !dbg !6084

bb3:                                              ; preds = %bb2, %entry
  %11 = load i64* %n_addr, align 8, !dbg !6085
  %12 = icmp ne i64 %11, 0, !dbg !6085
  br i1 %12, label %bb, label %bb4, !dbg !6085

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6086
  br label %bb5, !dbg !6086

bb5:                                              ; preds = %bb4, %bb1
  %13 = load i8** %0, align 8, !dbg !6082
  store i8* %13, i8** %retval, align 8, !dbg !6082
  %retval6 = load i8** %retval, !dbg !6082
  ret i8* %retval6, !dbg !6082
}

define i32 @memcmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r1 = alloca i8*
  %r2 = alloca i8*
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6087
  store i8* %1, i8** %r1, align 8, !dbg !6087
  %2 = load i8** %s2_addr, align 8, !dbg !6089
  store i8* %2, i8** %r2, align 8, !dbg !6089
  store i32 0, i32* %r, align 4, !dbg !6090
  br label %bb, !dbg !6090

bb:                                               ; preds = %bb1, %entry
  %3 = load i64* %n_addr, align 8, !dbg !6091
  %4 = sub i64 %3, 1, !dbg !6091
  store i64 %4, i64* %n_addr, align 8, !dbg !6091
  %5 = load i64* %n_addr, align 8, !dbg !6091
  %6 = icmp eq i64 %5, -1, !dbg !6091
  br i1 %6, label %bb2, label %bb1, !dbg !6091

bb1:                                              ; preds = %bb
  %7 = load i8** %r1, align 8, !dbg !6091
  %8 = load i8* %7, align 1, !dbg !6091
  %9 = zext i8 %8 to i32, !dbg !6091
  %10 = load i8** %r2, align 8, !dbg !6091
  %11 = load i8* %10, align 1, !dbg !6091
  %12 = zext i8 %11 to i32, !dbg !6091
  %13 = sub nsw i32 %9, %12, !dbg !6091
  store i32 %13, i32* %r, align 4, !dbg !6091
  %14 = load i32* %r, align 4, !dbg !6091
  %15 = icmp eq i32 %14, 0, !dbg !6091
  %16 = zext i1 %15 to i8, !dbg !6091
  %17 = load i8** %r1, align 8, !dbg !6091
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6091
  store i8* %18, i8** %r1, align 8, !dbg !6091
  %19 = load i8** %r2, align 8, !dbg !6091
  %20 = getelementptr inbounds i8* %19, i64 1, !dbg !6091
  store i8* %20, i8** %r2, align 8, !dbg !6091
  %toBool = icmp ne i8 %16, 0, !dbg !6091
  br i1 %toBool, label %bb, label %bb2, !dbg !6091

bb2:                                              ; preds = %bb1, %bb
  %21 = load i32* %r, align 4, !dbg !6092
  store i32 %21, i32* %0, align 4, !dbg !6092
  %22 = load i32* %0, align 4, !dbg !6092
  store i32 %22, i32* %retval, align 4, !dbg !6092
  %retval3 = load i32* %retval, !dbg !6092
  ret i32 %retval3, !dbg !6092
}

define i8* @mempcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6093
  store i8* %1, i8** %r1, align 8, !dbg !6093
  %2 = load i8** %s2_addr, align 8, !dbg !6095
  store i8* %2, i8** %r2, align 8, !dbg !6095
  br label %bb1, !dbg !6095

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6096
  %4 = load i8* %3, align 1, !dbg !6096
  %5 = load i8** %r1, align 8, !dbg !6096
  store i8 %4, i8* %5, align 1, !dbg !6096
  %6 = load i8** %r1, align 8, !dbg !6096
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6096
  store i8* %7, i8** %r1, align 8, !dbg !6096
  %8 = load i8** %r2, align 8, !dbg !6096
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6096
  store i8* %9, i8** %r2, align 8, !dbg !6096
  %10 = load i64* %n_addr, align 8, !dbg !6097
  %11 = sub i64 %10, 1, !dbg !6097
  store i64 %11, i64* %n_addr, align 8, !dbg !6097
  br label %bb1, !dbg !6097

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6098
  %13 = icmp ne i64 %12, 0, !dbg !6098
  br i1 %13, label %bb, label %bb2, !dbg !6098

bb2:                                              ; preds = %bb1
  %14 = load i8** %r1, align 8, !dbg !6099
  store i8* %14, i8** %0, align 8, !dbg !6099
  %15 = load i8** %0, align 8, !dbg !6099
  store i8* %15, i8** %retval, align 8, !dbg !6099
  %retval3 = load i8** %retval, !dbg !6099
  ret i8* %retval3, !dbg !6099
}

define i8* @memrchr(i8* %s, i32 %c, i64 %n) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6100
  %2 = load i64* %n_addr, align 8, !dbg !6100
  %3 = getelementptr inbounds i8* %1, i64 %2, !dbg !6100
  store i8* %3, i8** %r, align 8, !dbg !6100
  br label %bb3, !dbg !6100

bb:                                               ; preds = %bb3
  %4 = load i8** %r, align 8, !dbg !6102
  %5 = getelementptr inbounds i8* %4, i64 -1, !dbg !6102
  store i8* %5, i8** %r, align 8, !dbg !6102
  %6 = load i8** %r, align 8, !dbg !6102
  %7 = load i8* %6, align 1, !dbg !6102
  %8 = load i32* %c_addr, align 4, !dbg !6102
  %9 = trunc i32 %8 to i8, !dbg !6102
  %10 = icmp eq i8 %7, %9, !dbg !6102
  br i1 %10, label %bb1, label %bb2, !dbg !6102

bb1:                                              ; preds = %bb
  %11 = load i8** %r, align 8, !dbg !6103
  store i8* %11, i8** %0, align 8, !dbg !6103
  br label %bb5, !dbg !6103

bb2:                                              ; preds = %bb
  %12 = load i64* %n_addr, align 8, !dbg !6104
  %13 = sub i64 %12, 1, !dbg !6104
  store i64 %13, i64* %n_addr, align 8, !dbg !6104
  br label %bb3, !dbg !6104

bb3:                                              ; preds = %bb2, %entry
  %14 = load i64* %n_addr, align 8, !dbg !6105
  %15 = icmp ne i64 %14, 0, !dbg !6105
  br i1 %15, label %bb, label %bb4, !dbg !6105

bb4:                                              ; preds = %bb3
  store i8* null, i8** %0, align 8, !dbg !6106
  br label %bb5, !dbg !6106

bb5:                                              ; preds = %bb4, %bb1
  %16 = load i8** %0, align 8, !dbg !6103
  store i8* %16, i8** %retval, align 8, !dbg !6103
  %retval6 = load i8** %retval, !dbg !6103
  ret i8* %retval6, !dbg !6103
}

define i8* @nl_langinfo(i32 %item) nounwind {
entry:
  %item_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %c = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %item, i32* %item_addr
  %1 = load i32* %item_addr, align 4, !dbg !6107
  %int_cast_to_i64 = zext i32 8 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = ashr i32 %1, 8, !dbg !6107
  store i32 %3, i32* %c, align 4, !dbg !6107
  %4 = load i32* %c, align 4, !dbg !6107
  %5 = icmp ule i32 %4, 5, !dbg !6107
  br i1 %5, label %bb, label %bb2, !dbg !6107

bb:                                               ; preds = %klee_overshift_check.exit
  %6 = load i32* %c, align 4, !dbg !6109
  %7 = zext i32 %6 to i64, !dbg !6109
  %8 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %7, !dbg !6109
  %9 = load i8* %8, align 1, !dbg !6109
  %10 = zext i8 %9 to i32, !dbg !6109
  %11 = load i32* %item_addr, align 4, !dbg !6109
  %12 = and i32 %11, 255, !dbg !6109
  %13 = add nsw i32 %10, %12, !dbg !6109
  store i32 %13, i32* %i, align 4, !dbg !6109
  %14 = load i32* %c, align 4, !dbg !6109
  %15 = add i32 %14, 1, !dbg !6109
  %16 = zext i32 %15 to i64, !dbg !6109
  %17 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %16, !dbg !6109
  %18 = load i8* %17, align 1, !dbg !6109
  %19 = zext i8 %18 to i32, !dbg !6109
  %20 = load i32* %i, align 4, !dbg !6109
  %21 = icmp ult i32 %20, %19, !dbg !6109
  br i1 %21, label %bb1, label %bb2, !dbg !6109

bb1:                                              ; preds = %bb
  %22 = load i32* %i, align 4, !dbg !6110
  %23 = add i32 %22, 7, !dbg !6110
  %24 = zext i32 %23 to i64, !dbg !6110
  %25 = getelementptr inbounds [417 x i8]* @nl_data, i64 0, i64 %24, !dbg !6110
  %26 = load i8* %25, align 1, !dbg !6110
  %27 = zext i8 %26 to i32, !dbg !6110
  %28 = sext i32 %27 to i64, !dbg !6110
  %29 = getelementptr inbounds i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 97), i64 %28, !dbg !6110
  %30 = load i32* %i, align 4, !dbg !6110
  %31 = and i32 %30, 64, !dbg !6110
  %32 = mul i32 %31, 2, !dbg !6110
  %33 = zext i32 %32 to i64, !dbg !6110
  %34 = getelementptr inbounds i8* %29, i64 %33, !dbg !6110
  store i8* %34, i8** %0, align 8, !dbg !6110
  br label %bb3, !dbg !6110

bb2:                                              ; preds = %bb, %klee_overshift_check.exit
  store i8* getelementptr inbounds ([417 x i8]* @nl_data, i64 0, i64 0), i8** %0, align 8, !dbg !6111
  br label %bb3, !dbg !6111

bb3:                                              ; preds = %bb2, %bb1
  %35 = load i8** %0, align 8, !dbg !6110
  store i8* %35, i8** %retval, align 8, !dbg !6110
  %retval4 = load i8** %retval, !dbg !6110
  ret i8* %retval4, !dbg !6110
}

define %struct.DIR* @opendir(i8* %name) nounwind {
entry:
  %name_addr = alloca i8*, align 8
  %retval = alloca %struct.DIR*
  %0 = alloca %struct.DIR*
  %fd = alloca i32
  %statbuf = alloca %9
  %ptr = alloca %struct.DIR*
  %saved_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %name, i8** %name_addr
  %1 = load i8** %name_addr, align 8, !dbg !6112
  %2 = call i32 (i8*, i32, ...)* @open(i8* %1, i32 67584) nounwind, !dbg !6112
  store i32 %2, i32* %fd, align 4, !dbg !6112
  %3 = load i32* %fd, align 4, !dbg !6112
  %4 = icmp slt i32 %3, 0, !dbg !6112
  br i1 %4, label %bb, label %bb1, !dbg !6112

bb:                                               ; preds = %entry
  store %struct.DIR* null, %struct.DIR** %0, align 8, !dbg !6114
  br label %bb9, !dbg !6114

bb1:                                              ; preds = %entry
  %5 = load i32* %fd, align 4, !dbg !6115
  %6 = call i32 bitcast (i32 (i32, %struct.stat*)* @fstat to i32 (i32, %9*)*)(i32 %5, %9* %statbuf) nounwind, !dbg !6115
  %7 = icmp slt i32 %6, 0, !dbg !6115
  br i1 %7, label %close_and_ret, label %bb2, !dbg !6115

bb2:                                              ; preds = %bb1
  %8 = load i32* %fd, align 4, !dbg !6116
  %9 = call i32 (i32, i32, ...)* @fcntl(i32 %8, i32 2, i32 1) nounwind, !dbg !6116
  %10 = icmp slt i32 %9, 0, !dbg !6116
  br i1 %10, label %close_and_ret, label %bb3, !dbg !6116

close_and_ret:                                    ; preds = %bb2, %bb1
  %11 = load i32* @errno, align 4, !dbg !6117
  store i32 %11, i32* %saved_errno, align 4, !dbg !6117
  %12 = load i32* %fd, align 4, !dbg !6119
  %13 = call i32 @close(i32 %12) nounwind, !dbg !6119
  %14 = load i32* %saved_errno, align 4, !dbg !6120
  store i32 %14, i32* @errno, align 4, !dbg !6120
  store %struct.DIR* null, %struct.DIR** %0, align 8, !dbg !6121
  br label %bb9, !dbg !6121

bb3:                                              ; preds = %bb2
  %15 = call noalias i8* @malloc(i64 56) nounwind, !dbg !6122
  %16 = bitcast i8* %15 to %struct.DIR*, !dbg !6122
  store %struct.DIR* %16, %struct.DIR** %ptr, align 8, !dbg !6122
  %17 = load %struct.DIR** %ptr, align 8, !dbg !6122
  %18 = icmp eq %struct.DIR* %17, null, !dbg !6122
  br i1 %18, label %nomem_close_and_ret, label %bb4, !dbg !6122

bb4:                                              ; preds = %bb3
  %19 = load %struct.DIR** %ptr, align 8, !dbg !6123
  %20 = bitcast %struct.DIR* %19 to i8*, !dbg !6123
  %21 = call i8* @memset(i8* %20, i32 0, i64 56) nounwind, !dbg !6123
  %22 = load %struct.DIR** %ptr, align 8, !dbg !6124
  %23 = getelementptr inbounds %struct.DIR* %22, i32 0, i32 0, !dbg !6124
  %24 = load i32* %fd, align 4, !dbg !6124
  store i32 %24, i32* %23, align 8, !dbg !6124
  %25 = getelementptr inbounds %9* %statbuf, i32 0, i32 9, !dbg !6125
  %26 = load i64* %25, align 8, !dbg !6125
  %27 = load %struct.DIR** %ptr, align 8, !dbg !6125
  %28 = getelementptr inbounds %struct.DIR* %27, i32 0, i32 5, !dbg !6125
  store i64 %26, i64* %28, align 8, !dbg !6125
  %29 = load %struct.DIR** %ptr, align 8, !dbg !6126
  %30 = getelementptr inbounds %struct.DIR* %29, i32 0, i32 5, !dbg !6126
  %31 = load i64* %30, align 8, !dbg !6126
  %32 = icmp ule i64 %31, 511, !dbg !6126
  br i1 %32, label %bb5, label %bb6, !dbg !6126

bb5:                                              ; preds = %bb4
  %33 = load %struct.DIR** %ptr, align 8, !dbg !6127
  %34 = getelementptr inbounds %struct.DIR* %33, i32 0, i32 5, !dbg !6127
  store i64 512, i64* %34, align 8, !dbg !6127
  br label %bb6, !dbg !6127

bb6:                                              ; preds = %bb5, %bb4
  %35 = load %struct.DIR** %ptr, align 8, !dbg !6128
  %36 = getelementptr inbounds %struct.DIR* %35, i32 0, i32 5, !dbg !6128
  %37 = load i64* %36, align 8, !dbg !6128
  %38 = call noalias i8* @calloc(i64 1, i64 %37) nounwind, !dbg !6128
  %39 = load %struct.DIR** %ptr, align 8, !dbg !6128
  %40 = getelementptr inbounds %struct.DIR* %39, i32 0, i32 3, !dbg !6128
  store i8* %38, i8** %40, align 8, !dbg !6128
  %41 = load %struct.DIR** %ptr, align 8, !dbg !6128
  %42 = getelementptr inbounds %struct.DIR* %41, i32 0, i32 3, !dbg !6128
  %43 = load i8** %42, align 8, !dbg !6128
  %44 = icmp eq i8* %43, null, !dbg !6128
  %45 = load %struct.DIR** %ptr, align 8, !dbg !6129
  br i1 %44, label %bb7, label %bb8, !dbg !6128

bb7:                                              ; preds = %bb6
  %46 = bitcast %struct.DIR* %45 to i8*, !dbg !6129
  call void @free(i8* %46) nounwind, !dbg !6129
  br label %nomem_close_and_ret, !dbg !6130

nomem_close_and_ret:                              ; preds = %bb7, %bb3
  %47 = load i32* %fd, align 4, !dbg !6131
  %48 = call i32 @close(i32 %47) nounwind, !dbg !6131
  store i32 12, i32* @errno, align 4, !dbg !6132
  store %struct.DIR* null, %struct.DIR** %0, align 8, !dbg !6133
  br label %bb9, !dbg !6133

bb8:                                              ; preds = %bb6
  store %struct.DIR* %45, %struct.DIR** %0, align 8, !dbg !6134
  br label %bb9, !dbg !6134

bb9:                                              ; preds = %bb8, %nomem_close_and_ret, %close_and_ret, %bb
  %49 = load %struct.DIR** %0, align 8, !dbg !6114
  store %struct.DIR* %49, %struct.DIR** %retval, align 8, !dbg !6114
  %retval10 = load %struct.DIR** %retval, !dbg !6114
  ret %struct.DIR* %retval10, !dbg !6114
}

define i64 @pathconf(i8* %path, i32 %name) nounwind {
entry:
  %path_addr = alloca i8*, align 8
  %name_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %buf = alloca %struct.statfs
  %save_errno = alloca i32
  %st = alloca %9
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i32 %name, i32* %name_addr
  %1 = load i8** %path_addr, align 8, !dbg !6135
  %2 = getelementptr inbounds i8* %1, i64 0, !dbg !6135
  %3 = load i8* %2, align 1, !dbg !6135
  %4 = icmp eq i8 %3, 0, !dbg !6135
  br i1 %4, label %bb, label %bb1, !dbg !6135

bb:                                               ; preds = %entry
  store i32 2, i32* @errno, align 4, !dbg !6137
  store i64 -1, i64* %0, align 8, !dbg !6138
  br label %bb26, !dbg !6138

bb1:                                              ; preds = %entry
  %5 = load i32* %name_addr, align 4, !dbg !6139
  switch i32 %5, label %bb2 [
    i32 0, label %bb3
    i32 1, label %bb4
    i32 2, label %bb5
    i32 3, label %bb6
    i32 4, label %bb11
    i32 5, label %bb12
    i32 6, label %bb13
    i32 7, label %bb14
    i32 8, label %bb15
    i32 9, label %bb16
    i32 10, label %bb17
    i32 11, label %bb22
    i32 12, label %bb23
    i32 13, label %bb24
    i32 14, label %bb25
    i32 15, label %bb25
    i32 16, label %bb25
    i32 17, label %bb25
    i32 18, label %bb25
    i32 19, label %bb25
  ], !dbg !6139

bb2:                                              ; preds = %bb1
  store i32 22, i32* @errno, align 4, !dbg !6140
  store i64 -1, i64* %0, align 8, !dbg !6141
  br label %bb26, !dbg !6141

bb3:                                              ; preds = %bb1
  store i64 127, i64* %0, align 8, !dbg !6142
  br label %bb26, !dbg !6142

bb4:                                              ; preds = %bb1
  store i64 255, i64* %0, align 8, !dbg !6143
  br label %bb26, !dbg !6143

bb5:                                              ; preds = %bb1
  store i64 255, i64* %0, align 8, !dbg !6144
  br label %bb26, !dbg !6144

bb6:                                              ; preds = %bb1
  %6 = load i32* @errno, align 4, !dbg !6145
  store i32 %6, i32* %save_errno, align 4, !dbg !6145
  %7 = load i8** %path_addr, align 8, !dbg !6147
  %8 = call i32 bitcast (i32 (i8*, %11*)* @statfs to i32 (i8*, %struct.statfs*)*)(i8* %7, %struct.statfs* %buf) nounwind, !dbg !6147
  %9 = icmp slt i32 %8, 0, !dbg !6147
  br i1 %9, label %bb7, label %bb10, !dbg !6147

bb7:                                              ; preds = %bb6
  %10 = load i32* @errno, align 4, !dbg !6148
  %11 = icmp eq i32 %10, 38, !dbg !6148
  br i1 %11, label %bb8, label %bb9, !dbg !6148

bb8:                                              ; preds = %bb7
  %12 = load i32* %save_errno, align 4, !dbg !6149
  store i32 %12, i32* @errno, align 4, !dbg !6149
  store i64 255, i64* %0, align 8, !dbg !6150
  br label %bb26, !dbg !6150

bb9:                                              ; preds = %bb7
  store i64 -1, i64* %0, align 8, !dbg !6151
  br label %bb26, !dbg !6151

bb10:                                             ; preds = %bb6
  %13 = getelementptr inbounds %struct.statfs* %buf, i32 0, i32 8, !dbg !6152
  %14 = load i64* %13, align 8, !dbg !6152
  store i64 %14, i64* %0, align 8, !dbg !6152
  br label %bb26, !dbg !6152

bb11:                                             ; preds = %bb1
  store i64 4096, i64* %0, align 8, !dbg !6153
  br label %bb26, !dbg !6153

bb12:                                             ; preds = %bb1
  store i64 4096, i64* %0, align 8, !dbg !6154
  br label %bb26, !dbg !6154

bb13:                                             ; preds = %bb1
  store i64 1, i64* %0, align 8, !dbg !6155
  br label %bb26, !dbg !6155

bb14:                                             ; preds = %bb1
  store i64 1, i64* %0, align 8, !dbg !6156
  br label %bb26, !dbg !6156

bb15:                                             ; preds = %bb1
  store i64 0, i64* %0, align 8, !dbg !6157
  br label %bb26, !dbg !6157

bb16:                                             ; preds = %bb1
  store i64 -1, i64* %0, align 8, !dbg !6158
  br label %bb26, !dbg !6158

bb17:                                             ; preds = %bb1
  %15 = load i8** %path_addr, align 8, !dbg !6159
  %16 = call i32 bitcast (i32 (i8*, %struct.stat*)* @stat to i32 (i8*, %9*)*)(i8* noalias %15, %9* noalias %st) nounwind, !dbg !6159
  %17 = icmp slt i32 %16, 0, !dbg !6159
  br i1 %17, label %bb20, label %bb18, !dbg !6159

bb18:                                             ; preds = %bb17
  %18 = getelementptr inbounds %9* %st, i32 0, i32 3, !dbg !6159
  %19 = load i32* %18, align 8, !dbg !6159
  %20 = and i32 %19, 61440, !dbg !6159
  %21 = icmp eq i32 %20, 32768, !dbg !6159
  br i1 %21, label %bb21, label %bb19, !dbg !6159

bb19:                                             ; preds = %bb18
  %22 = getelementptr inbounds %9* %st, i32 0, i32 3, !dbg !6159
  %23 = load i32* %22, align 8, !dbg !6159
  %24 = and i32 %23, 61440, !dbg !6159
  %25 = icmp ne i32 %24, 24576, !dbg !6159
  br i1 %25, label %bb20, label %bb21, !dbg !6159

bb20:                                             ; preds = %bb19, %bb17
  store i64 -1, i64* %0, align 8, !dbg !6161
  br label %bb26, !dbg !6161

bb21:                                             ; preds = %bb19, %bb18
  store i64 1, i64* %0, align 8, !dbg !6162
  br label %bb26, !dbg !6162

bb22:                                             ; preds = %bb1
  store i64 -1, i64* %0, align 8, !dbg !6163
  br label %bb26, !dbg !6163

bb23:                                             ; preds = %bb1
  store i64 -1, i64* %0, align 8, !dbg !6164
  br label %bb26, !dbg !6164

bb24:                                             ; preds = %bb1
  store i64 32, i64* %0, align 8, !dbg !6165
  br label %bb26, !dbg !6165

bb25:                                             ; preds = %bb1, %bb1, %bb1, %bb1, %bb1, %bb1
  store i64 -1, i64* %0, align 8, !dbg !6166
  br label %bb26, !dbg !6166

bb26:                                             ; preds = %bb25, %bb24, %bb23, %bb22, %bb21, %bb20, %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %bb10, %bb9, %bb8, %bb5, %bb4, %bb3, %bb2, %bb
  %26 = load i64* %0, align 8, !dbg !6138
  store i64 %26, i64* %retval, align 8, !dbg !6138
  %retval27 = load i64* %retval, !dbg !6138
  ret i64 %retval27, !dbg !6138
}

define i32 @putchar_unlocked(i32 %c) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %stream = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  %1 = load %4** @stdout, align 8, !dbg !6167
  store %4* %1, %4** %stream, align 8, !dbg !6167
  %2 = load %4** %stream, align 8, !dbg !6169
  %3 = getelementptr inbounds %4* %2, i32 0, i32 5, !dbg !6169
  %4 = load i8** %3, align 8, !dbg !6169
  %5 = load %4** %stream, align 8, !dbg !6169
  %6 = getelementptr inbounds %4* %5, i32 0, i32 8, !dbg !6169
  %7 = load i8** %6, align 8, !dbg !6169
  %8 = icmp ult i8* %4, %7, !dbg !6169
  br i1 %8, label %bb, label %bb1, !dbg !6169

bb:                                               ; preds = %entry
  %9 = load %4** %stream, align 8, !dbg !6169
  %10 = getelementptr inbounds %4* %9, i32 0, i32 5, !dbg !6169
  %11 = load i8** %10, align 8, !dbg !6169
  %12 = load i32* %c_addr, align 4, !dbg !6169
  %13 = trunc i32 %12 to i8, !dbg !6169
  store i8 %13, i8* %11, align 1, !dbg !6169
  %14 = load i8* %11, align 1, !dbg !6169
  %15 = zext i8 %14 to i32, !dbg !6169
  store i32 %15, i32* %iftmp.0, align 4, !dbg !6169
  %16 = getelementptr inbounds i8* %11, i64 1, !dbg !6169
  %17 = load %4** %stream, align 8, !dbg !6169
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !6169
  store i8* %16, i8** %18, align 8, !dbg !6169
  br label %bb2, !dbg !6169

bb1:                                              ; preds = %entry
  %19 = load i32* %c_addr, align 4, !dbg !6169
  %20 = load %4** %stream, align 8, !dbg !6169
  %21 = call i32 @__fputc_unlocked(i32 %19, %4* %20) nounwind, !dbg !6169
  store i32 %21, i32* %iftmp.0, align 4, !dbg !6169
  br label %bb2, !dbg !6169

bb2:                                              ; preds = %bb1, %bb
  %22 = load i32* %iftmp.0, align 4, !dbg !6169
  store i32 %22, i32* %0, align 4, !dbg !6169
  %23 = load i32* %0, align 4, !dbg !6169
  store i32 %23, i32* %retval, align 4, !dbg !6169
  %retval3 = load i32* %retval, !dbg !6169
  ret i32 %retval3, !dbg !6169
}

define void @qsort(i8* %base, i64 %nel, i64 %width, i32 (i8*, i8*)* %comp) nounwind {
entry:
  %base_addr = alloca i8*, align 8
  %nel_addr = alloca i64, align 8
  %width_addr = alloca i64, align 8
  %comp_addr = alloca i32 (i8*, i8*)*, align 8
  %wgap = alloca i64
  %i = alloca i64
  %j = alloca i64
  %k = alloca i64
  %tmp = alloca i8
  %a = alloca i8*
  %b = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %base, i8** %base_addr
  store i64 %nel, i64* %nel_addr
  store i64 %width, i64* %width_addr
  store i32 (i8*, i8*)* %comp, i32 (i8*, i8*)** %comp_addr
  %0 = load i64* %nel_addr, align 8, !dbg !6170
  %1 = icmp ugt i64 %0, 1, !dbg !6170
  br i1 %1, label %bb, label %return, !dbg !6170

bb:                                               ; preds = %entry
  %2 = load i64* %width_addr, align 8, !dbg !6170
  %3 = icmp ne i64 %2, 0, !dbg !6170
  br i1 %3, label %bb1, label %return, !dbg !6170

bb1:                                              ; preds = %bb
  store i64 0, i64* %wgap, align 8, !dbg !6172
  br label %bb2, !dbg !6172

bb2:                                              ; preds = %klee_div_zero_check.exit, %bb1
  %4 = load i64* %wgap, align 8, !dbg !6173
  %5 = mul i64 %4, 3, !dbg !6173
  %6 = add i64 %5, 1, !dbg !6173
  store i64 %6, i64* %wgap, align 8, !dbg !6173
  %7 = load i64* %nel_addr, align 8, !dbg !6174
  %8 = sub i64 %7, 1, !dbg !6174
  %int_cast_to_i64 = bitcast i64 3 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 3, !dbg !6174
  %12 = load i64* %wgap, align 8, !dbg !6174
  %13 = icmp ugt i64 %11, %12, !dbg !6174
  br i1 %13, label %bb2, label %bb3, !dbg !6174

bb3:                                              ; preds = %klee_div_zero_check.exit
  %14 = load i64* %wgap, align 8, !dbg !6175
  %15 = load i64* %width_addr, align 8, !dbg !6175
  %16 = mul i64 %14, %15, !dbg !6175
  store i64 %16, i64* %wgap, align 8, !dbg !6175
  %17 = load i64* %nel_addr, align 8, !dbg !6176
  %18 = load i64* %width_addr, align 8, !dbg !6176
  %19 = mul i64 %17, %18, !dbg !6176
  store i64 %19, i64* %nel_addr, align 8, !dbg !6176
  br label %bb4, !dbg !6176

bb4:                                              ; preds = %klee_div_zero_check.exit3, %bb3
  %20 = load i64* %wgap, align 8, !dbg !6177
  store i64 %20, i64* %i, align 8, !dbg !6177
  br label %bb5, !dbg !6177

bb5:                                              ; preds = %bb10, %bb4
  %21 = load i64* %i, align 8, !dbg !6178
  store i64 %21, i64* %j, align 8, !dbg !6178
  br label %bb6, !dbg !6178

bb6:                                              ; preds = %bb9, %bb5
  %22 = load i64* %j, align 8, !dbg !6179
  %23 = load i64* %wgap, align 8, !dbg !6179
  %24 = sub i64 %22, %23, !dbg !6179
  store i64 %24, i64* %j, align 8, !dbg !6179
  %25 = load i8** %base_addr, align 8, !dbg !6181
  %26 = load i64* %j, align 8, !dbg !6181
  %27 = getelementptr inbounds i8* %25, i64 %26, !dbg !6181
  store i8* %27, i8** %a, align 8, !dbg !6181
  %28 = load i8** %a, align 8, !dbg !6182
  %29 = load i64* %wgap, align 8, !dbg !6182
  %30 = getelementptr inbounds i8* %28, i64 %29, !dbg !6182
  store i8* %30, i8** %b, align 8, !dbg !6182
  %31 = load i32 (i8*, i8*)** %comp_addr, align 8, !dbg !6183
  %32 = load i8** %a, align 8, !dbg !6183
  %33 = load i8** %b, align 8, !dbg !6183
  %34 = call i32 %31(i8* %32, i8* %33) nounwind, !dbg !6183
  %35 = icmp sle i32 %34, 0, !dbg !6183
  br i1 %35, label %bb10, label %bb7, !dbg !6183

bb7:                                              ; preds = %bb6
  %36 = load i64* %width_addr, align 8, !dbg !6184
  store i64 %36, i64* %k, align 8, !dbg !6184
  br label %bb8, !dbg !6184

bb8:                                              ; preds = %bb8, %bb7
  %37 = load i8** %a, align 8, !dbg !6185
  %38 = load i8* %37, align 1, !dbg !6185
  store i8 %38, i8* %tmp, align 1, !dbg !6185
  %39 = load i8** %b, align 8, !dbg !6186
  %40 = load i8* %39, align 1, !dbg !6186
  %41 = load i8** %a, align 8, !dbg !6186
  store i8 %40, i8* %41, align 1, !dbg !6186
  %42 = load i8** %a, align 8, !dbg !6186
  %43 = getelementptr inbounds i8* %42, i64 1, !dbg !6186
  store i8* %43, i8** %a, align 8, !dbg !6186
  %44 = load i8** %b, align 8, !dbg !6187
  %45 = load i8* %tmp, align 1, !dbg !6187
  store i8 %45, i8* %44, align 1, !dbg !6187
  %46 = load i8** %b, align 8, !dbg !6187
  %47 = getelementptr inbounds i8* %46, i64 1, !dbg !6187
  store i8* %47, i8** %b, align 8, !dbg !6187
  %48 = load i64* %k, align 8, !dbg !6188
  %49 = sub i64 %48, 1, !dbg !6188
  store i64 %49, i64* %k, align 8, !dbg !6188
  %50 = load i64* %k, align 8, !dbg !6188
  %51 = icmp ne i64 %50, 0, !dbg !6188
  br i1 %51, label %bb8, label %bb9, !dbg !6188

bb9:                                              ; preds = %bb8
  %52 = load i64* %j, align 8, !dbg !6189
  %53 = load i64* %wgap, align 8, !dbg !6189
  %54 = icmp uge i64 %52, %53, !dbg !6189
  br i1 %54, label %bb6, label %bb10, !dbg !6189

bb10:                                             ; preds = %bb9, %bb6
  %55 = load i64* %i, align 8, !dbg !6190
  %56 = load i64* %width_addr, align 8, !dbg !6190
  %57 = add i64 %55, %56, !dbg !6190
  store i64 %57, i64* %i, align 8, !dbg !6190
  %58 = load i64* %i, align 8, !dbg !6191
  %59 = load i64* %nel_addr, align 8, !dbg !6191
  %60 = icmp ult i64 %58, %59, !dbg !6191
  br i1 %60, label %bb5, label %bb11, !dbg !6191

bb11:                                             ; preds = %bb10
  %61 = load i64* %wgap, align 8, !dbg !6192
  %62 = load i64* %width_addr, align 8, !dbg !6192
  %63 = sub i64 %61, %62, !dbg !6192
  %int_cast_to_i641 = bitcast i64 3 to i64
  %64 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %65 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %65, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %bb11
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %bb11
  call void @klee_disable_symbex() nounwind
  %66 = udiv i64 %63, 3, !dbg !6192
  store i64 %66, i64* %wgap, align 8, !dbg !6192
  %67 = load i64* %wgap, align 8, !dbg !6193
  %68 = icmp ne i64 %67, 0, !dbg !6193
  br i1 %68, label %bb4, label %return, !dbg !6193

return:                                           ; preds = %entry, %bb, %klee_div_zero_check.exit3
  ret void, !dbg !6194
}

define %struct.dirent* @readdir(%struct.DIR* %dir) nounwind {
entry:
  %dir_addr = alloca %struct.DIR*, align 8
  %retval = alloca %struct.dirent*
  %0 = alloca %struct.dirent*
  %bytes = alloca i64
  %de = alloca %struct.dirent*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.DIR* %dir, %struct.DIR** %dir_addr
  %1 = load %struct.DIR** %dir_addr, align 8, !dbg !6195
  %2 = icmp eq %struct.DIR* %1, null, !dbg !6195
  br i1 %2, label %bb, label %bb1, !dbg !6195

bb:                                               ; preds = %entry
  store i32 9, i32* @errno, align 4, !dbg !6197
  store %struct.dirent* null, %struct.dirent** %0, align 8, !dbg !6198
  br label %bb6, !dbg !6198

bb1:                                              ; preds = %bb5, %entry
  %3 = load %struct.DIR** %dir_addr, align 8, !dbg !6199
  %4 = getelementptr inbounds %struct.DIR* %3, i32 0, i32 2, !dbg !6199
  %5 = load i64* %4, align 8, !dbg !6199
  %6 = load %struct.DIR** %dir_addr, align 8, !dbg !6199
  %7 = getelementptr inbounds %struct.DIR* %6, i32 0, i32 1, !dbg !6199
  %8 = load i64* %7, align 8, !dbg !6199
  %9 = icmp ule i64 %5, %8, !dbg !6199
  br i1 %9, label %bb2, label %bb5, !dbg !6199

bb2:                                              ; preds = %bb1
  %10 = load %struct.DIR** %dir_addr, align 8, !dbg !6200
  %11 = getelementptr inbounds %struct.DIR* %10, i32 0, i32 5, !dbg !6200
  %12 = load i64* %11, align 8, !dbg !6200
  %13 = load %struct.DIR** %dir_addr, align 8, !dbg !6200
  %14 = getelementptr inbounds %struct.DIR* %13, i32 0, i32 3, !dbg !6200
  %15 = load i8** %14, align 8, !dbg !6200
  %16 = load %struct.DIR** %dir_addr, align 8, !dbg !6200
  %17 = getelementptr inbounds %struct.DIR* %16, i32 0, i32 0, !dbg !6200
  %18 = load i32* %17, align 8, !dbg !6200
  %19 = call i64 bitcast (i64 (i32, %struct.dirent*, i64)* @getdents to i64 (i32, i8*, i64)*)(i32 %18, i8* %15, i64 %12) nounwind, !dbg !6200
  store i64 %19, i64* %bytes, align 8, !dbg !6200
  %20 = load i64* %bytes, align 8, !dbg !6201
  %21 = icmp sle i64 %20, 0, !dbg !6201
  br i1 %21, label %bb3, label %bb4, !dbg !6201

bb3:                                              ; preds = %bb2
  store %struct.dirent* null, %struct.dirent** %de, align 8, !dbg !6202
  br label %all_done, !dbg !6202

bb4:                                              ; preds = %bb2
  %22 = load i64* %bytes, align 8, !dbg !6203
  %23 = load %struct.DIR** %dir_addr, align 8, !dbg !6203
  %24 = getelementptr inbounds %struct.DIR* %23, i32 0, i32 2, !dbg !6203
  store i64 %22, i64* %24, align 8, !dbg !6203
  %25 = load %struct.DIR** %dir_addr, align 8, !dbg !6204
  %26 = getelementptr inbounds %struct.DIR* %25, i32 0, i32 1, !dbg !6204
  store i64 0, i64* %26, align 8, !dbg !6204
  br label %bb5, !dbg !6204

bb5:                                              ; preds = %bb4, %bb1
  %27 = load %struct.DIR** %dir_addr, align 8, !dbg !6205
  %28 = getelementptr inbounds %struct.DIR* %27, i32 0, i32 3, !dbg !6205
  %29 = load i8** %28, align 8, !dbg !6205
  %30 = load %struct.DIR** %dir_addr, align 8, !dbg !6205
  %31 = getelementptr inbounds %struct.DIR* %30, i32 0, i32 1, !dbg !6205
  %32 = load i64* %31, align 8, !dbg !6205
  %33 = getelementptr inbounds i8* %29, i64 %32, !dbg !6205
  %34 = bitcast i8* %33 to %struct.dirent*, !dbg !6205
  store %struct.dirent* %34, %struct.dirent** %de, align 8, !dbg !6205
  %35 = load %struct.DIR** %dir_addr, align 8, !dbg !6206
  %36 = getelementptr inbounds %struct.DIR* %35, i32 0, i32 1, !dbg !6206
  %37 = load i64* %36, align 8, !dbg !6206
  %38 = load %struct.dirent** %de, align 8, !dbg !6206
  %39 = getelementptr inbounds %struct.dirent* %38, i32 0, i32 2, !dbg !6206
  %40 = load i16* %39, align 8, !dbg !6206
  %41 = zext i16 %40 to i64, !dbg !6206
  %42 = add i64 %37, %41, !dbg !6206
  %43 = load %struct.DIR** %dir_addr, align 8, !dbg !6206
  %44 = getelementptr inbounds %struct.DIR* %43, i32 0, i32 1, !dbg !6206
  store i64 %42, i64* %44, align 8, !dbg !6206
  %45 = load %struct.dirent** %de, align 8, !dbg !6207
  %46 = getelementptr inbounds %struct.dirent* %45, i32 0, i32 1, !dbg !6207
  %47 = load i64* %46, align 8, !dbg !6207
  %48 = load %struct.DIR** %dir_addr, align 8, !dbg !6207
  %49 = getelementptr inbounds %struct.DIR* %48, i32 0, i32 4, !dbg !6207
  store i64 %47, i64* %49, align 8, !dbg !6207
  %50 = load %struct.dirent** %de, align 8, !dbg !6208
  %51 = getelementptr inbounds %struct.dirent* %50, i32 0, i32 0, !dbg !6208
  %52 = load i64* %51, align 8, !dbg !6208
  %53 = icmp eq i64 %52, 0, !dbg !6208
  br i1 %53, label %bb1, label %all_done, !dbg !6208

all_done:                                         ; preds = %bb5, %bb3
  %54 = load %struct.dirent** %de, align 8, !dbg !6209
  store %struct.dirent* %54, %struct.dirent** %0, align 8, !dbg !6209
  br label %bb6, !dbg !6209

bb6:                                              ; preds = %all_done, %bb
  %55 = load %struct.dirent** %0, align 8, !dbg !6198
  store %struct.dirent* %55, %struct.dirent** %retval, align 8, !dbg !6198
  %retval7 = load %struct.dirent** %retval, !dbg !6198
  ret %struct.dirent* %retval7, !dbg !6198
}

define i8* @realpath(i8* %path, i8* %got_path) nounwind {
entry:
  %path_addr = alloca i8*, align 8
  %got_path_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %copy_path = alloca [4096 x i8]
  %max_path = alloca i8*
  %new_path = alloca i8*
  %path_len = alloca i64
  %readlinks = alloca i32
  %link_len = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %path, i8** %path_addr
  store i8* %got_path, i8** %got_path_addr
  store i32 0, i32* %readlinks, align 4, !dbg !6210
  %1 = load i8** %path_addr, align 8, !dbg !6212
  %2 = icmp eq i8* %1, null, !dbg !6212
  br i1 %2, label %bb, label %bb1, !dbg !6212

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6213
  store i8* null, i8** %0, align 8, !dbg !6214
  br label %bb55, !dbg !6214

bb1:                                              ; preds = %entry
  %3 = load i8** %path_addr, align 8, !dbg !6215
  %4 = load i8* %3, align 1, !dbg !6215
  %5 = icmp eq i8 %4, 0, !dbg !6215
  br i1 %5, label %bb2, label %bb3, !dbg !6215

bb2:                                              ; preds = %bb1
  store i32 2, i32* @errno, align 4, !dbg !6216
  store i8* null, i8** %0, align 8, !dbg !6217
  br label %bb55, !dbg !6217

bb3:                                              ; preds = %bb1
  %6 = load i8** %path_addr, align 8, !dbg !6218
  %7 = call i64 @strlen(i8* %6) nounwind readonly, !dbg !6218
  store i64 %7, i64* %path_len, align 8, !dbg !6218
  %8 = load i64* %path_len, align 8, !dbg !6219
  %9 = icmp ugt i64 %8, 4093, !dbg !6219
  br i1 %9, label %bb4, label %bb5, !dbg !6219

bb4:                                              ; preds = %bb3
  store i32 36, i32* @errno, align 4, !dbg !6220
  store i8* null, i8** %0, align 8, !dbg !6221
  br label %bb55, !dbg !6221

bb5:                                              ; preds = %bb3
  %10 = load i64* %path_len, align 8, !dbg !6222
  %11 = sub nsw i64 0, %10, !dbg !6222
  %copy_path6 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6222
  %12 = getelementptr inbounds i8* %copy_path6, i64 4095, !dbg !6222
  %13 = getelementptr inbounds i8* %12, i64 %11, !dbg !6222
  %14 = load i8** %path_addr, align 8, !dbg !6222
  %15 = call i8* @strcpy(i8* noalias %13, i8* noalias %14) nounwind, !dbg !6222
  %16 = load i64* %path_len, align 8, !dbg !6223
  %17 = sub nsw i64 0, %16, !dbg !6223
  %copy_path7 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6223
  %18 = getelementptr inbounds i8* %copy_path7, i64 4095, !dbg !6223
  %19 = getelementptr inbounds i8* %18, i64 %17, !dbg !6223
  store i8* %19, i8** %path_addr, align 8, !dbg !6223
  %20 = load i8** %got_path_addr, align 8, !dbg !6224
  %21 = getelementptr inbounds i8* %20, i64 4096, !dbg !6224
  %22 = getelementptr inbounds i8* %21, i64 -2, !dbg !6224
  store i8* %22, i8** %max_path, align 8, !dbg !6224
  %23 = load i8** %got_path_addr, align 8, !dbg !6225
  store i8* %23, i8** %new_path, align 8, !dbg !6225
  %24 = load i8** %path_addr, align 8, !dbg !6226
  %25 = load i8* %24, align 1, !dbg !6226
  %26 = icmp ne i8 %25, 47, !dbg !6226
  %27 = load i8** %new_path, align 8, !dbg !6227
  br i1 %26, label %bb8, label %bb13, !dbg !6226

bb8:                                              ; preds = %bb5
  %28 = call i8* @getcwd(i8* %27, i64 4095) nounwind, !dbg !6227
  %29 = icmp eq i8* %28, null, !dbg !6227
  br i1 %29, label %bb9, label %bb10, !dbg !6227

bb9:                                              ; preds = %bb8
  store i8* null, i8** %0, align 8, !dbg !6228
  br label %bb55, !dbg !6228

bb10:                                             ; preds = %bb8
  %30 = load i8** %new_path, align 8, !dbg !6229
  %31 = call i64 @strlen(i8* %30) nounwind readonly, !dbg !6229
  %32 = load i8** %new_path, align 8, !dbg !6229
  %33 = getelementptr inbounds i8* %32, i64 %31, !dbg !6229
  store i8* %33, i8** %new_path, align 8, !dbg !6229
  %34 = load i8** %new_path, align 8, !dbg !6230
  %35 = getelementptr inbounds i8* %34, i64 -1, !dbg !6230
  %36 = load i8* %35, align 1, !dbg !6230
  %37 = icmp ne i8 %36, 47, !dbg !6230
  br i1 %37, label %bb11, label %bb50, !dbg !6230

bb11:                                             ; preds = %bb10
  %38 = load i8** %new_path, align 8, !dbg !6231
  store i8 47, i8* %38, align 1, !dbg !6231
  %39 = load i8** %new_path, align 8, !dbg !6231
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !6231
  store i8* %40, i8** %new_path, align 8, !dbg !6231
  br label %bb50, !dbg !6231

bb13:                                             ; preds = %bb5
  store i8 47, i8* %27, align 1, !dbg !6232
  %41 = load i8** %new_path, align 8, !dbg !6232
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !6232
  store i8* %42, i8** %new_path, align 8, !dbg !6232
  %43 = load i8** %path_addr, align 8, !dbg !6233
  %44 = getelementptr inbounds i8* %43, i64 1, !dbg !6233
  store i8* %44, i8** %path_addr, align 8, !dbg !6233
  br label %bb50, !dbg !6233

bb15:                                             ; preds = %bb50
  %45 = load i8** %path_addr, align 8, !dbg !6234
  %46 = load i8* %45, align 1, !dbg !6234
  %47 = icmp eq i8 %46, 47, !dbg !6234
  %48 = load i8** %path_addr, align 8, !dbg !6235
  br i1 %47, label %bb16, label %bb17, !dbg !6234

bb16:                                             ; preds = %bb15
  %49 = getelementptr inbounds i8* %48, i64 1, !dbg !6235
  store i8* %49, i8** %path_addr, align 8, !dbg !6235
  br label %bb50, !dbg !6235

bb17:                                             ; preds = %bb15
  %50 = load i8* %48, align 1, !dbg !6236
  %51 = icmp eq i8 %50, 46, !dbg !6236
  br i1 %51, label %bb18, label %bb31, !dbg !6236

bb18:                                             ; preds = %bb17
  %52 = load i8** %path_addr, align 8, !dbg !6237
  %53 = getelementptr inbounds i8* %52, i64 1, !dbg !6237
  %54 = load i8* %53, align 1, !dbg !6237
  %55 = icmp eq i8 %54, 0, !dbg !6237
  br i1 %55, label %bb20, label %bb19, !dbg !6237

bb19:                                             ; preds = %bb18
  %56 = load i8** %path_addr, align 8, !dbg !6237
  %57 = getelementptr inbounds i8* %56, i64 1, !dbg !6237
  %58 = load i8* %57, align 1, !dbg !6237
  %59 = icmp eq i8 %58, 47, !dbg !6237
  br i1 %59, label %bb20, label %bb21, !dbg !6237

bb20:                                             ; preds = %bb19, %bb18
  %60 = load i8** %path_addr, align 8, !dbg !6238
  %61 = getelementptr inbounds i8* %60, i64 1, !dbg !6238
  store i8* %61, i8** %path_addr, align 8, !dbg !6238
  br label %bb50, !dbg !6238

bb21:                                             ; preds = %bb19
  %62 = load i8** %path_addr, align 8, !dbg !6239
  %63 = getelementptr inbounds i8* %62, i64 1, !dbg !6239
  %64 = load i8* %63, align 1, !dbg !6239
  %65 = icmp eq i8 %64, 46, !dbg !6239
  br i1 %65, label %bb22, label %bb31, !dbg !6239

bb22:                                             ; preds = %bb21
  %66 = load i8** %path_addr, align 8, !dbg !6240
  %67 = getelementptr inbounds i8* %66, i64 2, !dbg !6240
  %68 = load i8* %67, align 1, !dbg !6240
  %69 = icmp eq i8 %68, 0, !dbg !6240
  br i1 %69, label %bb24, label %bb23, !dbg !6240

bb23:                                             ; preds = %bb22
  %70 = load i8** %path_addr, align 8, !dbg !6240
  %71 = getelementptr inbounds i8* %70, i64 2, !dbg !6240
  %72 = load i8* %71, align 1, !dbg !6240
  %73 = icmp eq i8 %72, 47, !dbg !6240
  br i1 %73, label %bb24, label %bb31, !dbg !6240

bb24:                                             ; preds = %bb23, %bb22
  %74 = load i8** %path_addr, align 8, !dbg !6241
  %75 = getelementptr inbounds i8* %74, i64 2, !dbg !6241
  store i8* %75, i8** %path_addr, align 8, !dbg !6241
  %76 = load i8** %got_path_addr, align 8, !dbg !6242
  %77 = getelementptr inbounds i8* %76, i64 1, !dbg !6242
  %78 = load i8** %new_path, align 8, !dbg !6242
  %79 = icmp eq i8* %77, %78, !dbg !6242
  br i1 %79, label %bb50, label %bb25, !dbg !6242

bb25:                                             ; preds = %bb25, %bb24
  %80 = load i8** %new_path, align 8, !dbg !6243
  %81 = getelementptr inbounds i8* %80, i64 -1, !dbg !6243
  store i8* %81, i8** %new_path, align 8, !dbg !6243
  %82 = load i8** %new_path, align 8, !dbg !6243
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !6243
  %84 = load i8* %83, align 1, !dbg !6243
  %85 = icmp ne i8 %84, 47, !dbg !6243
  br i1 %85, label %bb25, label %bb50, !dbg !6243

bb28:                                             ; preds = %bb32
  %86 = load i8** %new_path, align 8, !dbg !6244
  %87 = load i8** %max_path, align 8, !dbg !6244
  %88 = icmp ugt i8* %86, %87, !dbg !6244
  br i1 %88, label %bb29, label %bb30, !dbg !6244

bb29:                                             ; preds = %bb28
  store i32 36, i32* @errno, align 4, !dbg !6245
  store i8* null, i8** %0, align 8, !dbg !6246
  br label %bb55, !dbg !6246

bb30:                                             ; preds = %bb28
  %89 = load i8** %path_addr, align 8, !dbg !6247
  %90 = load i8* %89, align 1, !dbg !6247
  %91 = load i8** %new_path, align 8, !dbg !6247
  store i8 %90, i8* %91, align 1, !dbg !6247
  %92 = load i8** %new_path, align 8, !dbg !6247
  %93 = getelementptr inbounds i8* %92, i64 1, !dbg !6247
  store i8* %93, i8** %new_path, align 8, !dbg !6247
  %94 = load i8** %path_addr, align 8, !dbg !6247
  %95 = getelementptr inbounds i8* %94, i64 1, !dbg !6247
  store i8* %95, i8** %path_addr, align 8, !dbg !6247
  br label %bb31, !dbg !6247

bb31:                                             ; preds = %bb17, %bb21, %bb23, %bb30
  %96 = load i8** %path_addr, align 8, !dbg !6248
  %97 = load i8* %96, align 1, !dbg !6248
  %98 = icmp eq i8 %97, 0, !dbg !6248
  br i1 %98, label %bb33, label %bb32, !dbg !6248

bb32:                                             ; preds = %bb31
  %99 = load i8** %path_addr, align 8, !dbg !6248
  %100 = load i8* %99, align 1, !dbg !6248
  %101 = icmp ne i8 %100, 47, !dbg !6248
  br i1 %101, label %bb28, label %bb33, !dbg !6248

bb33:                                             ; preds = %bb32, %bb31
  %102 = load i32* %readlinks, align 4, !dbg !6249
  %103 = icmp sgt i32 %102, 32, !dbg !6249
  %104 = zext i1 %103 to i8, !dbg !6249
  %105 = load i32* %readlinks, align 4, !dbg !6249
  %106 = add nsw i32 %105, 1, !dbg !6249
  store i32 %106, i32* %readlinks, align 4, !dbg !6249
  %toBool = icmp ne i8 %104, 0, !dbg !6249
  br i1 %toBool, label %bb34, label %bb35, !dbg !6249

bb34:                                             ; preds = %bb33
  store i32 40, i32* @errno, align 4, !dbg !6250
  store i8* null, i8** %0, align 8, !dbg !6251
  br label %bb55, !dbg !6251

bb35:                                             ; preds = %bb33
  %107 = load i8** %path_addr, align 8, !dbg !6252
  %108 = call i64 @strlen(i8* %107) nounwind readonly, !dbg !6252
  store i64 %108, i64* %path_len, align 8, !dbg !6252
  %109 = load i8** %new_path, align 8, !dbg !6253
  store i8 0, i8* %109, align 1, !dbg !6253
  %110 = load i8** %got_path_addr, align 8, !dbg !6254
  %copy_path36 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6254
  %111 = call i64 @readlink(i8* noalias %110, i8* noalias %copy_path36, i64 4095) nounwind, !dbg !6254
  %112 = trunc i64 %111 to i32, !dbg !6254
  store i32 %112, i32* %link_len, align 4, !dbg !6254
  %113 = load i32* %link_len, align 4, !dbg !6255
  %114 = icmp slt i32 %113, 0, !dbg !6255
  br i1 %114, label %bb37, label %bb40, !dbg !6255

bb37:                                             ; preds = %bb35
  %115 = load i32* @errno, align 4, !dbg !6256
  %116 = icmp ne i32 %115, 22, !dbg !6256
  br i1 %116, label %bb38, label %bb49, !dbg !6256

bb38:                                             ; preds = %bb37
  store i8* null, i8** %0, align 8, !dbg !6257
  br label %bb55, !dbg !6257

bb40:                                             ; preds = %bb35
  %117 = load i32* %link_len, align 4, !dbg !6258
  %118 = sext i32 %117 to i64, !dbg !6258
  %119 = load i64* %path_len, align 8, !dbg !6258
  %120 = add i64 %118, %119, !dbg !6258
  %121 = icmp ugt i64 %120, 4093, !dbg !6258
  br i1 %121, label %bb41, label %bb42, !dbg !6258

bb41:                                             ; preds = %bb40
  store i32 36, i32* @errno, align 4, !dbg !6259
  store i8* null, i8** %0, align 8, !dbg !6260
  br label %bb55, !dbg !6260

bb42:                                             ; preds = %bb40
  %122 = getelementptr inbounds [4096 x i8]* %copy_path, i64 0, i64 0, !dbg !6261
  %123 = load i8* %122, align 1, !dbg !6261
  %124 = icmp eq i8 %123, 47, !dbg !6261
  br i1 %124, label %bb43, label %bb44, !dbg !6261

bb43:                                             ; preds = %bb42
  %125 = load i8** %got_path_addr, align 8, !dbg !6262
  store i8* %125, i8** %new_path, align 8, !dbg !6262
  br label %bb45, !dbg !6262

bb44:                                             ; preds = %bb44, %bb42
  %126 = load i8** %new_path, align 8, !dbg !6263
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6263
  store i8* %127, i8** %new_path, align 8, !dbg !6263
  %128 = load i8** %new_path, align 8, !dbg !6263
  %129 = load i8* %128, align 1, !dbg !6263
  %130 = icmp ne i8 %129, 47, !dbg !6263
  br i1 %130, label %bb44, label %bb45, !dbg !6263

bb45:                                             ; preds = %bb44, %bb43
  %131 = load i32* %link_len, align 4, !dbg !6264
  %132 = sext i32 %131 to i64, !dbg !6264
  %133 = load i32* %link_len, align 4, !dbg !6264
  %134 = sext i32 %133 to i64, !dbg !6264
  %135 = sub nsw i64 0, %134, !dbg !6264
  %copy_path46 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6264
  %136 = getelementptr inbounds i8* %copy_path46, i64 4095, !dbg !6264
  %137 = getelementptr inbounds i8* %136, i64 %135, !dbg !6264
  %138 = load i64* %path_len, align 8, !dbg !6264
  %139 = sub nsw i64 0, %138, !dbg !6264
  %140 = getelementptr inbounds i8* %137, i64 %139, !dbg !6264
  %copy_path47 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6264
  %141 = call i8* @memmove(i8* %140, i8* %copy_path47, i64 %132) nounwind, !dbg !6264
  %142 = load i32* %link_len, align 4, !dbg !6265
  %143 = sext i32 %142 to i64, !dbg !6265
  %144 = sub nsw i64 0, %143, !dbg !6265
  %copy_path48 = bitcast [4096 x i8]* %copy_path to i8*, !dbg !6265
  %145 = getelementptr inbounds i8* %copy_path48, i64 4095, !dbg !6265
  %146 = getelementptr inbounds i8* %145, i64 %144, !dbg !6265
  %147 = load i64* %path_len, align 8, !dbg !6265
  %148 = sub nsw i64 0, %147, !dbg !6265
  %149 = getelementptr inbounds i8* %146, i64 %148, !dbg !6265
  store i8* %149, i8** %path_addr, align 8, !dbg !6265
  br label %bb49, !dbg !6265

bb49:                                             ; preds = %bb37, %bb45
  %150 = load i8** %new_path, align 8, !dbg !6266
  store i8 47, i8* %150, align 1, !dbg !6266
  %151 = load i8** %new_path, align 8, !dbg !6266
  %152 = getelementptr inbounds i8* %151, i64 1, !dbg !6266
  store i8* %152, i8** %new_path, align 8, !dbg !6266
  br label %bb50, !dbg !6266

bb50:                                             ; preds = %bb25, %bb13, %bb11, %bb10, %bb49, %bb24, %bb20, %bb16
  %153 = load i8** %path_addr, align 8, !dbg !6267
  %154 = load i8* %153, align 1, !dbg !6267
  %155 = icmp ne i8 %154, 0, !dbg !6267
  br i1 %155, label %bb15, label %bb51, !dbg !6267

bb51:                                             ; preds = %bb50
  %156 = load i8** %got_path_addr, align 8, !dbg !6268
  %157 = getelementptr inbounds i8* %156, i64 1, !dbg !6268
  %158 = load i8** %new_path, align 8, !dbg !6268
  %159 = icmp ne i8* %157, %158, !dbg !6268
  br i1 %159, label %bb52, label %bb54, !dbg !6268

bb52:                                             ; preds = %bb51
  %160 = load i8** %new_path, align 8, !dbg !6268
  %161 = getelementptr inbounds i8* %160, i64 -1, !dbg !6268
  %162 = load i8* %161, align 1, !dbg !6268
  %163 = icmp eq i8 %162, 47, !dbg !6268
  br i1 %163, label %bb53, label %bb54, !dbg !6268

bb53:                                             ; preds = %bb52
  %164 = load i8** %new_path, align 8, !dbg !6269
  %165 = getelementptr inbounds i8* %164, i64 -1, !dbg !6269
  store i8* %165, i8** %new_path, align 8, !dbg !6269
  br label %bb54, !dbg !6269

bb54:                                             ; preds = %bb53, %bb52, %bb51
  %166 = load i8** %new_path, align 8, !dbg !6270
  store i8 0, i8* %166, align 1, !dbg !6270
  %167 = load i8** %got_path_addr, align 8, !dbg !6271
  store i8* %167, i8** %0, align 8, !dbg !6271
  br label %bb55, !dbg !6271

bb55:                                             ; preds = %bb54, %bb41, %bb38, %bb34, %bb29, %bb9, %bb4, %bb2, %bb
  %168 = load i8** %0, align 8, !dbg !6214
  store i8* %168, i8** %retval, align 8, !dbg !6214
  %retval56 = load i8** %retval, !dbg !6214
  ret i8* %retval56, !dbg !6214
}

define i8* @setlocale(i32 %category, i8* %locale) nounwind {
entry:
  %category_addr = alloca i32, align 4
  %locale_addr = alloca i8*, align 8
  %retval = alloca i8*
  %iftmp.0 = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %category, i32* %category_addr
  store i8* %locale, i8** %locale_addr
  %1 = load i32* %category_addr, align 4, !dbg !6272
  %2 = icmp ugt i32 %1, 6, !dbg !6272
  br i1 %2, label %bb6, label %bb, !dbg !6272

bb:                                               ; preds = %entry
  %3 = load i8** %locale_addr, align 8, !dbg !6272
  %4 = icmp eq i8* %3, null, !dbg !6272
  br i1 %4, label %bb5, label %bb1, !dbg !6272

bb1:                                              ; preds = %bb
  %5 = load i8** %locale_addr, align 8, !dbg !6272
  %6 = load i8* %5, align 1, !dbg !6272
  %7 = icmp eq i8 %6, 0, !dbg !6272
  br i1 %7, label %bb5, label %bb2, !dbg !6272

bb2:                                              ; preds = %bb1
  %8 = load i8** %locale_addr, align 8, !dbg !6272
  %9 = load i8* %8, align 1, !dbg !6272
  %10 = icmp ne i8 %9, 67, !dbg !6272
  br i1 %10, label %bb4, label %bb3, !dbg !6272

bb3:                                              ; preds = %bb2
  %11 = load i8** %locale_addr, align 8, !dbg !6272
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6272
  %13 = load i8* %12, align 1, !dbg !6272
  %14 = icmp eq i8 %13, 0, !dbg !6272
  br i1 %14, label %bb5, label %bb4, !dbg !6272

bb4:                                              ; preds = %bb3, %bb2
  %15 = load i8** %locale_addr, align 8, !dbg !6272
  %16 = call i32 @strcmp(i8* %15, i8* getelementptr inbounds ([6 x i8]* @.str178, i64 0, i64 0)) nounwind readonly, !dbg !6272
  %17 = icmp eq i32 %16, 0, !dbg !6272
  br i1 %17, label %bb5, label %bb6, !dbg !6272

bb5:                                              ; preds = %bb4, %bb3, %bb1, %bb
  store i8* getelementptr inbounds ([2 x i8]* @C_string, i64 0, i64 0), i8** %iftmp.0, align 8, !dbg !6272
  br label %bb7, !dbg !6272

bb6:                                              ; preds = %bb4, %entry
  store i8* null, i8** %iftmp.0, align 8, !dbg !6272
  br label %bb7, !dbg !6272

bb7:                                              ; preds = %bb6, %bb5
  %18 = load i8** %iftmp.0, align 8, !dbg !6272
  store i8* %18, i8** %0, align 8, !dbg !6272
  %19 = load i8** %0, align 8, !dbg !6272
  store i8* %19, i8** %retval, align 8, !dbg !6272
  %retval8 = load i8** %retval, !dbg !6272
  ret i8* %retval8, !dbg !6272
}

define i32 @sprintf(i8* noalias %buf, i8* noalias %format, ...) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %format_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i8* %format, i8** %format_addr
  %arg1 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6274
  %arg12 = bitcast %struct.__va_list_tag* %arg1 to i8*, !dbg !6274
  call void @llvm.va_start(i8* %arg12), !dbg !6274
  %1 = load i8** %buf_addr, align 8, !dbg !6276
  %2 = load i8** %format_addr, align 8, !dbg !6276
  %arg3 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6276
  %3 = call i32 @vsnprintf(i8* noalias %1, i64 -1, i8* noalias %2, %struct.__va_list_tag* %arg3) nounwind, !dbg !6276
  store i32 %3, i32* %rv, align 4, !dbg !6276
  %arg4 = bitcast [1 x %struct.__va_list_tag]* %arg to %struct.__va_list_tag*, !dbg !6277
  %arg45 = bitcast %struct.__va_list_tag* %arg4 to i8*, !dbg !6277
  call void @llvm.va_end(i8* %arg45), !dbg !6277
  %4 = load i32* %rv, align 4, !dbg !6278
  store i32 %4, i32* %0, align 4, !dbg !6278
  %5 = load i32* %0, align 4, !dbg !6278
  store i32 %5, i32* %retval, align 4, !dbg !6278
  %retval6 = load i32* %retval, !dbg !6278
  ret i32 %retval6, !dbg !6278
}

define hidden void @_stdio_term() nounwind {
entry:
  %ptr = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  %0 = load %4** @_stdio_openlist, align 8, !dbg !6279
  store %4* %0, %4** %ptr, align 8, !dbg !6279
  br label %bb3, !dbg !6279

bb:                                               ; preds = %bb3
  %1 = load %4** %ptr, align 8, !dbg !6281
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6281
  %3 = load i16* %2, align 8, !dbg !6281
  %4 = zext i16 %3 to i32, !dbg !6281
  %5 = and i32 %4, 64, !dbg !6281
  %6 = icmp ne i32 %5, 0, !dbg !6281
  br i1 %6, label %bb1, label %bb2, !dbg !6281

bb1:                                              ; preds = %bb
  %7 = load %4** %ptr, align 8, !dbg !6282
  %8 = call i64 @__stdio_wcommit(%4* noalias %7) nounwind, !dbg !6282
  br label %bb2, !dbg !6282

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %ptr, align 8, !dbg !6279
  %10 = getelementptr inbounds %4* %9, i32 0, i32 9, !dbg !6279
  %11 = load %4** %10, align 8, !dbg !6279
  store %4* %11, %4** %ptr, align 8, !dbg !6279
  br label %bb3, !dbg !6279

bb3:                                              ; preds = %bb2, %entry
  %12 = load %4** %ptr, align 8, !dbg !6279
  %13 = icmp ne %4* %12, null, !dbg !6279
  br i1 %13, label %bb, label %return, !dbg !6279

return:                                           ; preds = %bb3
  ret void, !dbg !6283
}

define hidden void @_stdio_init() nounwind {
entry:
  %old_errno = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  %0 = load i32* @errno, align 4, !dbg !6284
  store i32 %0, i32* %old_errno, align 4, !dbg !6284
  %1 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6286
  %2 = call i32 @isatty(i32 0) nounwind, !dbg !6286
  %3 = sub nsw i32 1, %2, !dbg !6286
  %4 = mul i32 %3, 256, !dbg !6286
  %5 = trunc i32 %4 to i16, !dbg !6286
  %6 = xor i16 %1, %5, !dbg !6286
  store i16 %6, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 0, i32 0), align 8, !dbg !6286
  %7 = load i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6287
  %8 = call i32 @isatty(i32 1) nounwind, !dbg !6287
  %9 = sub nsw i32 1, %8, !dbg !6287
  %10 = mul i32 %9, 256, !dbg !6287
  %11 = trunc i32 %10 to i16, !dbg !6287
  %12 = xor i16 %7, %11, !dbg !6287
  store i16 %12, i16* getelementptr inbounds ([3 x %4]* @_stdio_streams, i64 0, i64 1, i32 0), align 8, !dbg !6287
  %13 = load i32* %old_errno, align 4, !dbg !6288
  store i32 %13, i32* @errno, align 4, !dbg !6288
  ret void, !dbg !6289
}

define i8* @stpcpy(i8* noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  br label %bb, !dbg !6290

bb:                                               ; preds = %bb, %entry
  %1 = load i8** %s2_addr, align 8, !dbg !6291
  %2 = load i8* %1, align 1, !dbg !6291
  %3 = load i8** %s1_addr, align 8, !dbg !6291
  store i8 %2, i8* %3, align 1, !dbg !6291
  %4 = load i8** %s1_addr, align 8, !dbg !6291
  %5 = load i8* %4, align 1, !dbg !6291
  %6 = icmp ne i8 %5, 0, !dbg !6291
  %7 = zext i1 %6 to i8, !dbg !6291
  %8 = load i8** %s1_addr, align 8, !dbg !6291
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6291
  store i8* %9, i8** %s1_addr, align 8, !dbg !6291
  %10 = load i8** %s2_addr, align 8, !dbg !6291
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6291
  store i8* %11, i8** %s2_addr, align 8, !dbg !6291
  %toBool = icmp ne i8 %7, 0, !dbg !6291
  br i1 %toBool, label %bb, label %bb1, !dbg !6291

bb1:                                              ; preds = %bb
  %12 = load i8** %s1_addr, align 8, !dbg !6293
  %13 = getelementptr inbounds i8* %12, i64 -1, !dbg !6293
  store i8* %13, i8** %0, align 8, !dbg !6293
  %14 = load i8** %0, align 8, !dbg !6293
  store i8* %14, i8** %retval, align 8, !dbg !6293
  %retval2 = load i8** %retval, !dbg !6293
  ret i8* %retval2, !dbg !6293
}

define i8* @strchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  br label %bb, !dbg !6294

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6295
  %2 = load i8* %1, align 1, !dbg !6295
  %3 = load i32* %c_addr, align 4, !dbg !6295
  %4 = trunc i32 %3 to i8, !dbg !6295
  %5 = icmp eq i8 %2, %4, !dbg !6295
  %6 = load i8** %s_addr, align 8, !dbg !6297
  br i1 %5, label %bb1, label %bb2, !dbg !6295

bb1:                                              ; preds = %bb
  store i8* %6, i8** %0, align 8, !dbg !6297
  br label %bb4, !dbg !6297

bb2:                                              ; preds = %bb
  %7 = load i8* %6, align 1, !dbg !6298
  %8 = icmp ne i8 %7, 0, !dbg !6298
  %9 = zext i1 %8 to i8, !dbg !6298
  %10 = load i8** %s_addr, align 8, !dbg !6298
  %11 = getelementptr inbounds i8* %10, i64 1, !dbg !6298
  store i8* %11, i8** %s_addr, align 8, !dbg !6298
  %toBool = icmp ne i8 %9, 0, !dbg !6298
  br i1 %toBool, label %bb, label %bb3, !dbg !6298

bb3:                                              ; preds = %bb2
  store i8* null, i8** %0, align 8, !dbg !6299
  br label %bb4, !dbg !6299

bb4:                                              ; preds = %bb3, %bb1
  %12 = load i8** %0, align 8, !dbg !6297
  store i8* %12, i8** %retval, align 8, !dbg !6297
  %retval5 = load i8** %retval, !dbg !6297
  ret i8* %retval5, !dbg !6297
}

define i32 @strcmp(i8* %s1, i8* %s2) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  br label %bb, !dbg !6300

bb:                                               ; preds = %bb4, %entry
  %1 = load i8** %s1_addr, align 8, !dbg !6301
  %2 = load i8* %1, align 1, !dbg !6301
  %3 = zext i8 %2 to i32, !dbg !6301
  %4 = load i8** %s2_addr, align 8, !dbg !6301
  %5 = load i8* %4, align 1, !dbg !6301
  %6 = zext i8 %5 to i32, !dbg !6301
  %7 = sub nsw i32 %3, %6, !dbg !6301
  store i32 %7, i32* %r, align 4, !dbg !6301
  %8 = load i32* %r, align 4, !dbg !6301
  %9 = icmp eq i32 %8, 0, !dbg !6301
  %10 = zext i1 %9 to i8, !dbg !6301
  %11 = load i8** %s2_addr, align 8, !dbg !6301
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6301
  store i8* %12, i8** %s2_addr, align 8, !dbg !6301
  %toBool = icmp ne i8 %10, 0, !dbg !6301
  %toBoolnot = xor i1 %toBool, true, !dbg !6301
  %toBoolnot1 = zext i1 %toBoolnot to i8, !dbg !6301
  %toBool3 = icmp ne i8 %toBoolnot1, 0, !dbg !6301
  br i1 %toBool3, label %bb6, label %bb4, !dbg !6301

bb4:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6301
  %14 = load i8* %13, align 1, !dbg !6301
  %15 = icmp ne i8 %14, 0, !dbg !6301
  %16 = zext i1 %15 to i8, !dbg !6301
  %17 = load i8** %s1_addr, align 8, !dbg !6301
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !6301
  store i8* %18, i8** %s1_addr, align 8, !dbg !6301
  %toBool5 = icmp ne i8 %16, 0, !dbg !6301
  br i1 %toBool5, label %bb, label %bb6, !dbg !6301

bb6:                                              ; preds = %bb4, %bb
  %19 = load i32* %r, align 4, !dbg !6303
  store i32 %19, i32* %0, align 4, !dbg !6303
  %20 = load i32* %0, align 4, !dbg !6303
  store i32 %20, i32* %retval, align 4, !dbg !6303
  %retval7 = load i32* %retval, !dbg !6303
  ret i32 %retval7, !dbg !6303
}

define i8* @strcpy(i8* noalias %s1, i8* noalias %s2) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6304
  store i8* %1, i8** %s, align 8, !dbg !6304
  br label %bb, !dbg !6304

bb:                                               ; preds = %bb, %entry
  %2 = load i8** %s2_addr, align 8, !dbg !6306
  %3 = load i8* %2, align 1, !dbg !6306
  %4 = load i8** %s, align 8, !dbg !6306
  store i8 %3, i8* %4, align 1, !dbg !6306
  %5 = load i8** %s, align 8, !dbg !6306
  %6 = load i8* %5, align 1, !dbg !6306
  %7 = icmp ne i8 %6, 0, !dbg !6306
  %8 = zext i1 %7 to i8, !dbg !6306
  %9 = load i8** %s, align 8, !dbg !6306
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6306
  store i8* %10, i8** %s, align 8, !dbg !6306
  %11 = load i8** %s2_addr, align 8, !dbg !6306
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6306
  store i8* %12, i8** %s2_addr, align 8, !dbg !6306
  %toBool = icmp ne i8 %8, 0, !dbg !6306
  br i1 %toBool, label %bb, label %bb1, !dbg !6306

bb1:                                              ; preds = %bb
  %13 = load i8** %s1_addr, align 8, !dbg !6307
  store i8* %13, i8** %0, align 8, !dbg !6307
  %14 = load i8** %0, align 8, !dbg !6307
  store i8* %14, i8** %retval, align 8, !dbg !6307
  %retval2 = load i8** %retval, !dbg !6307
  ret i8* %retval2, !dbg !6307
}

define noalias i8* @strdup(i8* %s1) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %l = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6308
  %2 = call i64 @strlen(i8* %1) nounwind readonly, !dbg !6308
  %3 = add i64 %2, 1, !dbg !6308
  store i64 %3, i64* %l, align 8, !dbg !6308
  %4 = load i64* %l, align 8, !dbg !6310
  %5 = call noalias i8* @malloc(i64 %4) nounwind, !dbg !6310
  store i8* %5, i8** %s, align 8, !dbg !6310
  %6 = load i8** %s, align 8, !dbg !6310
  %7 = icmp ne i8* %6, null, !dbg !6310
  br i1 %7, label %bb, label %bb1, !dbg !6310

bb:                                               ; preds = %entry
  %8 = load i8** %s, align 8, !dbg !6311
  %9 = load i8** %s1_addr, align 8, !dbg !6311
  %10 = load i64* %l, align 8, !dbg !6311
  %11 = call i8* @memcpy(i8* noalias %8, i8* noalias %9, i64 %10) nounwind, !dbg !6311
  br label %bb1, !dbg !6311

bb1:                                              ; preds = %bb, %entry
  %12 = load i8** %s, align 8, !dbg !6312
  store i8* %12, i8** %0, align 8, !dbg !6312
  %13 = load i8** %0, align 8, !dbg !6312
  store i8* %13, i8** %retval, align 8, !dbg !6312
  %retval2 = load i8** %retval, !dbg !6312
  ret i8* %retval2, !dbg !6312
}

define i64 @strlen(i8* %s) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  %1 = load i8** %s_addr, align 8, !dbg !6313
  store i8* %1, i8** %p, align 8, !dbg !6313
  br label %bb1, !dbg !6313

bb:                                               ; preds = %bb1
  %2 = getelementptr inbounds i8* %6, i64 1, !dbg !6313
  store i8* %2, i8** %p, align 8, !dbg !6313
  br label %bb1, !dbg !6313

bb1:                                              ; preds = %bb, %entry
  %3 = load i8** %p, align 8, !dbg !6313
  %4 = load i8* %3, align 1, !dbg !6313
  %5 = icmp ne i8 %4, 0, !dbg !6313
  %6 = load i8** %p, align 8, !dbg !6313
  br i1 %5, label %bb, label %bb2, !dbg !6313

bb2:                                              ; preds = %bb1
  %7 = ptrtoint i8* %6 to i64, !dbg !6315
  %8 = load i8** %s_addr, align 8, !dbg !6315
  %9 = ptrtoint i8* %8 to i64, !dbg !6315
  %10 = sub nsw i64 %7, %9, !dbg !6315
  store i64 %10, i64* %0, align 8, !dbg !6315
  %11 = load i64* %0, align 8, !dbg !6315
  store i64 %11, i64* %retval, align 8, !dbg !6315
  %retval3 = load i64* %retval, !dbg !6315
  ret i64 %retval3, !dbg !6315
}

define i32 @strncmp(i8* %s1, i8* %s2, i64 %n) nounwind readonly {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %r, align 4, !dbg !6316
  br label %bb, !dbg !6316

bb:                                               ; preds = %bb5, %entry
  %1 = load i64* %n_addr, align 8, !dbg !6318
  %2 = sub i64 %1, 1, !dbg !6318
  store i64 %2, i64* %n_addr, align 8, !dbg !6318
  %3 = load i64* %n_addr, align 8, !dbg !6318
  %4 = icmp eq i64 %3, -1, !dbg !6318
  br i1 %4, label %bb7, label %bb1, !dbg !6318

bb1:                                              ; preds = %bb
  %5 = load i8** %s1_addr, align 8, !dbg !6318
  %6 = load i8* %5, align 1, !dbg !6318
  %7 = zext i8 %6 to i32, !dbg !6318
  %8 = load i8** %s2_addr, align 8, !dbg !6318
  %9 = load i8* %8, align 1, !dbg !6318
  %10 = zext i8 %9 to i32, !dbg !6318
  %11 = sub nsw i32 %7, %10, !dbg !6318
  store i32 %11, i32* %r, align 4, !dbg !6318
  %12 = load i32* %r, align 4, !dbg !6318
  %13 = icmp eq i32 %12, 0, !dbg !6318
  %14 = zext i1 %13 to i8, !dbg !6318
  %15 = load i8** %s2_addr, align 8, !dbg !6318
  %16 = getelementptr inbounds i8* %15, i64 1, !dbg !6318
  store i8* %16, i8** %s2_addr, align 8, !dbg !6318
  %toBool = icmp ne i8 %14, 0, !dbg !6318
  %toBoolnot = xor i1 %toBool, true, !dbg !6318
  %toBoolnot2 = zext i1 %toBoolnot to i8, !dbg !6318
  %toBool4 = icmp ne i8 %toBoolnot2, 0, !dbg !6318
  br i1 %toBool4, label %bb7, label %bb5, !dbg !6318

bb5:                                              ; preds = %bb1
  %17 = load i8** %s1_addr, align 8, !dbg !6318
  %18 = load i8* %17, align 1, !dbg !6318
  %19 = icmp ne i8 %18, 0, !dbg !6318
  %20 = zext i1 %19 to i8, !dbg !6318
  %21 = load i8** %s1_addr, align 8, !dbg !6318
  %22 = getelementptr inbounds i8* %21, i64 1, !dbg !6318
  store i8* %22, i8** %s1_addr, align 8, !dbg !6318
  %toBool6 = icmp ne i8 %20, 0, !dbg !6318
  br i1 %toBool6, label %bb, label %bb7, !dbg !6318

bb7:                                              ; preds = %bb5, %bb1, %bb
  %23 = load i32* %r, align 4, !dbg !6319
  store i32 %23, i32* %0, align 4, !dbg !6319
  %24 = load i32* %0, align 4, !dbg !6319
  store i32 %24, i32* %retval, align 4, !dbg !6319
  %retval8 = load i32* %retval, !dbg !6319
  ret i32 %retval8, !dbg !6319
}

define i64 @strnlen(i8* %s, i64 %max) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %max_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i64 %max, i64* %max_addr
  %1 = load i8** %s_addr, align 8, !dbg !6320
  store i8* %1, i8** %p, align 8, !dbg !6320
  br label %bb1, !dbg !6320

bb:                                               ; preds = %bb2
  %2 = load i8** %p, align 8, !dbg !6322
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !6322
  store i8* %3, i8** %p, align 8, !dbg !6322
  %4 = load i64* %max_addr, align 8, !dbg !6323
  %5 = sub i64 %4, 1, !dbg !6323
  store i64 %5, i64* %max_addr, align 8, !dbg !6323
  br label %bb1, !dbg !6323

bb1:                                              ; preds = %bb, %entry
  %6 = load i64* %max_addr, align 8, !dbg !6324
  %7 = icmp eq i64 %6, 0, !dbg !6324
  br i1 %7, label %bb3, label %bb2, !dbg !6324

bb2:                                              ; preds = %bb1
  %8 = load i8** %p, align 8, !dbg !6324
  %9 = load i8* %8, align 1, !dbg !6324
  %10 = icmp ne i8 %9, 0, !dbg !6324
  br i1 %10, label %bb, label %bb3, !dbg !6324

bb3:                                              ; preds = %bb2, %bb1
  %11 = load i8** %p, align 8, !dbg !6325
  %12 = ptrtoint i8* %11 to i64, !dbg !6325
  %13 = load i8** %s_addr, align 8, !dbg !6325
  %14 = ptrtoint i8* %13 to i64, !dbg !6325
  %15 = sub nsw i64 %12, %14, !dbg !6325
  store i64 %15, i64* %0, align 8, !dbg !6325
  %16 = load i64* %0, align 8, !dbg !6325
  store i64 %16, i64* %retval, align 8, !dbg !6325
  %retval4 = load i64* %retval, !dbg !6325
  ret i64 %retval4, !dbg !6325
}

define i8* @strrchr(i8* %s, i32 %c) nounwind readonly {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i8* null, i8** %p, align 8, !dbg !6326
  br label %bb, !dbg !6326

bb:                                               ; preds = %bb2, %entry
  %1 = load i8** %s_addr, align 8, !dbg !6328
  %2 = load i8* %1, align 1, !dbg !6328
  %3 = load i32* %c_addr, align 4, !dbg !6328
  %4 = trunc i32 %3 to i8, !dbg !6328
  %5 = icmp eq i8 %2, %4, !dbg !6328
  br i1 %5, label %bb1, label %bb2, !dbg !6328

bb1:                                              ; preds = %bb
  %6 = load i8** %s_addr, align 8, !dbg !6329
  store i8* %6, i8** %p, align 8, !dbg !6329
  br label %bb2, !dbg !6329

bb2:                                              ; preds = %bb1, %bb
  %7 = load i8** %s_addr, align 8, !dbg !6330
  %8 = load i8* %7, align 1, !dbg !6330
  %9 = icmp ne i8 %8, 0, !dbg !6330
  %10 = zext i1 %9 to i8, !dbg !6330
  %11 = load i8** %s_addr, align 8, !dbg !6330
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6330
  store i8* %12, i8** %s_addr, align 8, !dbg !6330
  %toBool = icmp ne i8 %10, 0, !dbg !6330
  br i1 %toBool, label %bb, label %bb3, !dbg !6330

bb3:                                              ; preds = %bb2
  %13 = load i8** %p, align 8, !dbg !6331
  store i8* %13, i8** %0, align 8, !dbg !6331
  %14 = load i8** %0, align 8, !dbg !6331
  store i8* %14, i8** %retval, align 8, !dbg !6331
  %retval4 = load i8** %retval, !dbg !6331
  ret i8* %retval4, !dbg !6331
}

define i32 @ungetc(i32 %c, %4* %stream) nounwind {
entry:
  %c_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %c, i32* %c_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6332
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !6332
  %3 = load i8** %2, align 8, !dbg !6332
  %4 = load %4** %stream_addr, align 8, !dbg !6332
  %5 = getelementptr inbounds %4* %4, i32 0, i32 7, !dbg !6332
  %6 = load i8** %5, align 8, !dbg !6332
  %7 = icmp uge i8* %3, %6, !dbg !6332
  br i1 %7, label %bb4, label %bb, !dbg !6332

bb:                                               ; preds = %entry
  %8 = load i32* %c_addr, align 4, !dbg !6332
  %9 = icmp eq i32 %8, -1, !dbg !6332
  br i1 %9, label %bb4, label %bb1, !dbg !6332

bb1:                                              ; preds = %bb
  %10 = load %4** %stream_addr, align 8, !dbg !6332
  %11 = getelementptr inbounds %4* %10, i32 0, i32 5, !dbg !6332
  %12 = load i8** %11, align 8, !dbg !6332
  %13 = load %4** %stream_addr, align 8, !dbg !6332
  %14 = getelementptr inbounds %4* %13, i32 0, i32 3, !dbg !6332
  %15 = load i8** %14, align 8, !dbg !6332
  %16 = icmp ule i8* %12, %15, !dbg !6332
  br i1 %16, label %bb4, label %bb2, !dbg !6332

bb2:                                              ; preds = %bb1
  %17 = load %4** %stream_addr, align 8, !dbg !6332
  %18 = getelementptr inbounds %4* %17, i32 0, i32 5, !dbg !6332
  %19 = load i8** %18, align 8, !dbg !6332
  %20 = getelementptr inbounds i8* %19, i64 -1, !dbg !6332
  %21 = load i8* %20, align 1, !dbg !6332
  %22 = load i32* %c_addr, align 4, !dbg !6332
  %23 = trunc i32 %22 to i8, !dbg !6332
  %24 = icmp ne i8 %21, %23, !dbg !6332
  br i1 %24, label %bb4, label %bb3, !dbg !6332

bb3:                                              ; preds = %bb2
  %25 = load %4** %stream_addr, align 8, !dbg !6334
  %26 = getelementptr inbounds %4* %25, i32 0, i32 5, !dbg !6334
  %27 = load i8** %26, align 8, !dbg !6334
  %28 = getelementptr inbounds i8* %27, i64 -1, !dbg !6334
  %29 = load %4** %stream_addr, align 8, !dbg !6334
  %30 = getelementptr inbounds %4* %29, i32 0, i32 5, !dbg !6334
  store i8* %28, i8** %30, align 8, !dbg !6334
  %31 = load %4** %stream_addr, align 8, !dbg !6335
  %32 = getelementptr inbounds %4* %31, i32 0, i32 0, !dbg !6335
  %33 = load i16* %32, align 8, !dbg !6335
  %34 = and i16 %33, -5, !dbg !6335
  %35 = load %4** %stream_addr, align 8, !dbg !6335
  %36 = getelementptr inbounds %4* %35, i32 0, i32 0, !dbg !6335
  store i16 %34, i16* %36, align 8, !dbg !6335
  br label %bb12, !dbg !6335

bb4:                                              ; preds = %bb2, %bb1, %bb, %entry
  %37 = load %4** %stream_addr, align 8, !dbg !6336
  %38 = getelementptr inbounds %4* %37, i32 0, i32 0, !dbg !6336
  %39 = load i16* %38, align 8, !dbg !6336
  %40 = zext i16 %39 to i32, !dbg !6336
  %41 = and i32 %40, 131, !dbg !6336
  %42 = icmp ugt i32 %41, 128, !dbg !6336
  br i1 %42, label %bb6, label %bb5, !dbg !6336

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !6336
  %44 = call i32 @__stdio_trans2r_o(%4* noalias %43, i32 128) nounwind, !dbg !6336
  %45 = icmp ne i32 %44, 0, !dbg !6336
  br i1 %45, label %bb9, label %bb6, !dbg !6336

bb6:                                              ; preds = %bb5, %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !6336
  %47 = getelementptr inbounds %4* %46, i32 0, i32 0, !dbg !6336
  %48 = load i16* %47, align 8, !dbg !6336
  %49 = zext i16 %48 to i32, !dbg !6336
  %50 = and i32 %49, 2, !dbg !6336
  %51 = icmp eq i32 %50, 0, !dbg !6336
  br i1 %51, label %bb10, label %bb7, !dbg !6336

bb7:                                              ; preds = %bb6
  %52 = load %4** %stream_addr, align 8, !dbg !6336
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !6336
  %54 = load i16* %53, align 8, !dbg !6336
  %55 = zext i16 %54 to i32, !dbg !6336
  %56 = and i32 %55, 1, !dbg !6336
  %57 = trunc i32 %56 to i8, !dbg !6336
  %toBool = icmp ne i8 %57, 0, !dbg !6336
  br i1 %toBool, label %bb9, label %bb8, !dbg !6336

bb8:                                              ; preds = %bb7
  %58 = load %4** %stream_addr, align 8, !dbg !6336
  %59 = getelementptr inbounds %4* %58, i32 0, i32 10, !dbg !6336
  %60 = getelementptr inbounds [2 x i32]* %59, i64 0, i64 1, !dbg !6336
  %61 = load i32* %60, align 4, !dbg !6336
  %62 = icmp ne i32 %61, 0, !dbg !6336
  br i1 %62, label %bb9, label %bb10, !dbg !6336

bb9:                                              ; preds = %bb8, %bb7, %bb5
  store i32 -1, i32* %c_addr, align 4, !dbg !6337
  br label %bb12, !dbg !6337

bb10:                                             ; preds = %bb8, %bb6
  %63 = load i32* %c_addr, align 4, !dbg !6338
  %64 = icmp ne i32 %63, -1, !dbg !6338
  br i1 %64, label %bb11, label %bb12, !dbg !6338

bb11:                                             ; preds = %bb10
  %65 = load %4** %stream_addr, align 8, !dbg !6339
  %66 = getelementptr inbounds %4* %65, i32 0, i32 3, !dbg !6339
  %67 = load i8** %66, align 8, !dbg !6339
  %68 = load %4** %stream_addr, align 8, !dbg !6339
  %69 = getelementptr inbounds %4* %68, i32 0, i32 7, !dbg !6339
  store i8* %67, i8** %69, align 8, !dbg !6339
  %70 = load %4** %stream_addr, align 8, !dbg !6340
  %71 = getelementptr inbounds %4* %70, i32 0, i32 10, !dbg !6340
  %72 = getelementptr inbounds [2 x i32]* %71, i64 0, i64 1, !dbg !6340
  store i32 1, i32* %72, align 4, !dbg !6340
  %73 = load %4** %stream_addr, align 8, !dbg !6341
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !6341
  %75 = load i16* %74, align 8, !dbg !6341
  %76 = add i16 %75, 1, !dbg !6341
  %77 = load %4** %stream_addr, align 8, !dbg !6341
  %78 = getelementptr inbounds %4* %77, i32 0, i32 0, !dbg !6341
  store i16 %76, i16* %78, align 8, !dbg !6341
  %79 = load %4** %stream_addr, align 8, !dbg !6341
  %80 = getelementptr inbounds %4* %79, i32 0, i32 0, !dbg !6341
  %81 = load i16* %80, align 8, !dbg !6341
  %82 = zext i16 %81 to i32, !dbg !6341
  %83 = and i32 %82, 1, !dbg !6341
  %84 = load %4** %stream_addr, align 8, !dbg !6341
  %85 = getelementptr inbounds %4* %84, i32 0, i32 10, !dbg !6341
  %86 = sext i32 %83 to i64, !dbg !6341
  %87 = getelementptr inbounds [2 x i32]* %85, i64 0, i64 %86, !dbg !6341
  %88 = load i32* %c_addr, align 4, !dbg !6341
  store i32 %88, i32* %87, align 4, !dbg !6341
  %89 = load %4** %stream_addr, align 8, !dbg !6342
  %90 = getelementptr inbounds %4* %89, i32 0, i32 0, !dbg !6342
  %91 = load i16* %90, align 8, !dbg !6342
  %92 = and i16 %91, -5, !dbg !6342
  %93 = load %4** %stream_addr, align 8, !dbg !6342
  %94 = getelementptr inbounds %4* %93, i32 0, i32 0, !dbg !6342
  store i16 %92, i16* %94, align 8, !dbg !6342
  br label %bb12, !dbg !6342

bb12:                                             ; preds = %bb11, %bb10, %bb9, %bb3
  %95 = load i32* %c_addr, align 4, !dbg !6343
  store i32 %95, i32* %0, align 4, !dbg !6343
  %96 = load i32* %0, align 4, !dbg !6343
  store i32 %96, i32* %retval, align 4, !dbg !6343
  %retval13 = load i32* %retval, !dbg !6343
  ret i32 %retval13, !dbg !6343
}

define i32 @vasprintf(i8** noalias %buf, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %buf_addr = alloca i8**, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %arg2 = alloca [1 x %struct.__va_list_tag]
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8** %buf, i8*** %buf_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %arg21 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6344
  %1 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6344
  %arg212 = bitcast %struct.__va_list_tag* %arg21 to i8*, !dbg !6344
  %2 = bitcast %struct.__va_list_tag* %1 to i8*, !dbg !6344
  %vacopy.cast.dst = bitcast i8* %arg212 to i64*
  %vacopy.cast.src = bitcast i8* %2 to i64*
  %3 = load i64* %vacopy.cast.src
  store i64 %3, i64* %vacopy.cast.dst
  %4 = getelementptr i64* %vacopy.cast.dst, i64 1
  %5 = getelementptr i64* %vacopy.cast.src, i64 1
  %6 = load i64* %5
  store i64 %6, i64* %4
  %7 = getelementptr i64* %4, i64 1
  %8 = getelementptr i64* %5, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = load i8** %format_addr, align 8, !dbg !6346
  %arg23 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6346
  %11 = call i32 @vsnprintf(i8* noalias null, i64 0, i8* noalias %10, %struct.__va_list_tag* %arg23) nounwind, !dbg !6346
  store i32 %11, i32* %rv, align 4, !dbg !6346
  %arg24 = bitcast [1 x %struct.__va_list_tag]* %arg2 to %struct.__va_list_tag*, !dbg !6347
  %arg245 = bitcast %struct.__va_list_tag* %arg24 to i8*, !dbg !6347
  call void @llvm.va_end(i8* %arg245), !dbg !6347
  %12 = load i8*** %buf_addr, align 8, !dbg !6348
  store i8* null, i8** %12, align 8, !dbg !6348
  %13 = load i32* %rv, align 4, !dbg !6349
  %14 = icmp sge i32 %13, 0, !dbg !6349
  br i1 %14, label %bb, label %bb8, !dbg !6349

bb:                                               ; preds = %entry
  %15 = load i32* %rv, align 4, !dbg !6350
  %16 = add nsw i32 %15, 1, !dbg !6350
  store i32 %16, i32* %rv, align 4, !dbg !6350
  %17 = load i32* %rv, align 4, !dbg !6350
  %18 = sext i32 %17 to i64, !dbg !6350
  %19 = call noalias i8* @malloc(i64 %18) nounwind, !dbg !6350
  %20 = load i8*** %buf_addr, align 8, !dbg !6350
  store i8* %19, i8** %20, align 8, !dbg !6350
  %21 = load i8*** %buf_addr, align 8, !dbg !6350
  %22 = load i8** %21, align 8, !dbg !6350
  %23 = icmp ne i8* %22, null, !dbg !6350
  br i1 %23, label %bb6, label %bb8, !dbg !6350

bb6:                                              ; preds = %bb
  %24 = load i32* %rv, align 4, !dbg !6351
  %25 = sext i32 %24 to i64, !dbg !6351
  %26 = load i8*** %buf_addr, align 8, !dbg !6351
  %27 = load i8** %26, align 8, !dbg !6351
  %28 = load i8** %format_addr, align 8, !dbg !6351
  %29 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6351
  %30 = call i32 @vsnprintf(i8* noalias %27, i64 %25, i8* noalias %28, %struct.__va_list_tag* %29) nounwind, !dbg !6351
  store i32 %30, i32* %rv, align 4, !dbg !6351
  %31 = load i32* %rv, align 4, !dbg !6351
  %32 = icmp slt i32 %31, 0, !dbg !6351
  br i1 %32, label %bb7, label %bb8, !dbg !6351

bb7:                                              ; preds = %bb6
  %33 = load i8*** %buf_addr, align 8, !dbg !6352
  %34 = load i8** %33, align 8, !dbg !6352
  call void @free(i8* %34) nounwind, !dbg !6352
  %35 = load i8*** %buf_addr, align 8, !dbg !6353
  store i8* null, i8** %35, align 8, !dbg !6353
  br label %bb8, !dbg !6353

bb8:                                              ; preds = %bb7, %bb6, %bb, %entry
  %36 = load i32* %rv, align 4, !dbg !6354
  store i32 %36, i32* %0, align 4, !dbg !6354
  %37 = load i32* %0, align 4, !dbg !6354
  store i32 %37, i32* %retval, align 4, !dbg !6354
  %retval9 = load i32* %retval, !dbg !6354
  ret i32 %retval9, !dbg !6354
}

define i32 @wcwidth(i32 %wc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  %1 = call i32 @wcswidth(i32* %wc_addr, i64 1) nounwind, !dbg !6355
  store i32 %1, i32* %0, align 4, !dbg !6355
  %2 = load i32* %0, align 4, !dbg !6355
  store i32 %2, i32* %retval, align 4, !dbg !6355
  %retval1 = load i32* %retval, !dbg !6355
  ret i32 %retval1, !dbg !6355
}

define weak i32* @__h_errno_location() nounwind readnone {
entry:
  %retval = alloca i32*
  %0 = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store i32* @h_errno, i32** %0, align 8, !dbg !6357
  %1 = load i32** %0, align 8, !dbg !6357
  store i32* %1, i32** %retval, align 8, !dbg !6357
  %retval1 = load i32** %retval, !dbg !6357
  ret i32* %retval1, !dbg !6357
}

define i32 @__cxa_atexit(void (i8*)* %func, i8* %arg, i8* %dso_handle) nounwind {
entry:
  %func_addr = alloca void (i8*)*, align 8
  %arg_addr = alloca i8*, align 8
  %dso_handle_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store void (i8*)* %func, void (i8*)** %func_addr
  store i8* %arg, i8** %arg_addr
  store i8* %dso_handle, i8** %dso_handle_addr
  %1 = load void (i8*)** %func_addr, align 8, !dbg !6359
  %2 = icmp eq void (i8*)* %1, null, !dbg !6359
  br i1 %2, label %bb, label %bb1, !dbg !6359

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !6361
  br label %bb4, !dbg !6361

bb1:                                              ; preds = %entry
  %3 = call %struct.exit_function* @__new_exitfn() nounwind, !dbg !6362
  store %struct.exit_function* %3, %struct.exit_function** %efp, align 8, !dbg !6362
  %4 = load %struct.exit_function** %efp, align 8, !dbg !6363
  %5 = icmp eq %struct.exit_function* %4, null, !dbg !6363
  br i1 %5, label %bb2, label %bb3, !dbg !6363

bb2:                                              ; preds = %bb1
  store i32 -1, i32* %0, align 4, !dbg !6364
  br label %bb4, !dbg !6364

bb3:                                              ; preds = %bb1
  %6 = load %struct.exit_function** %efp, align 8, !dbg !6365
  %7 = getelementptr inbounds %struct.exit_function* %6, i32 0, i32 1, !dbg !6365
  %8 = getelementptr inbounds %1* %7, i32 0, i32 0, !dbg !6365
  %9 = getelementptr inbounds %2* %8, i32 0, i32 0, !dbg !6365
  %10 = load void (i8*)** %func_addr, align 8, !dbg !6365
  store void (i8*)* %10, void (i8*)** %9, align 8, !dbg !6365
  %11 = load %struct.exit_function** %efp, align 8, !dbg !6366
  %12 = getelementptr inbounds %struct.exit_function* %11, i32 0, i32 1, !dbg !6366
  %13 = getelementptr inbounds %1* %12, i32 0, i32 0, !dbg !6366
  %14 = getelementptr inbounds %2* %13, i32 0, i32 1, !dbg !6366
  %15 = load i8** %arg_addr, align 8, !dbg !6366
  store i8* %15, i8** %14, align 8, !dbg !6366
  %16 = load %struct.exit_function** %efp, align 8, !dbg !6367
  %17 = getelementptr inbounds %struct.exit_function* %16, i32 0, i32 1, !dbg !6367
  %18 = getelementptr inbounds %1* %17, i32 0, i32 0, !dbg !6367
  %19 = getelementptr inbounds %2* %18, i32 0, i32 2, !dbg !6367
  %20 = load i8** %dso_handle_addr, align 8, !dbg !6367
  store i8* %20, i8** %19, align 8, !dbg !6367
  %21 = load %struct.exit_function** %efp, align 8, !dbg !6368
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 0, !dbg !6368
  store i64 3, i64* %22, align 8, !dbg !6368
  store i32 0, i32* %0, align 4, !dbg !6369
  br label %bb4, !dbg !6369

bb4:                                              ; preds = %bb3, %bb2, %bb
  %23 = load i32* %0, align 4, !dbg !6361
  store i32 %23, i32* %retval, align 4, !dbg !6361
  %retval5 = load i32* %retval, !dbg !6361
  ret i32 %retval5, !dbg !6361
}

define i32 @__sigismember(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6370
  %2 = sub nsw i32 %1, 1, !dbg !6370
  %3 = and i32 %2, 63, !dbg !6370
  %.cast = zext i32 %3 to i64, !dbg !6370
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6370
  store i64 %5, i64* %__mask, align 8, !dbg !6370
  %6 = load i32* %__sig_addr, align 4, !dbg !6370
  %7 = sub nsw i32 %6, 1, !dbg !6370
  %8 = sext i32 %7 to i64, !dbg !6370
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6370
  store i64 %11, i64* %__word, align 8, !dbg !6370
  %12 = load i64* %__word, align 8, !dbg !6370
  %13 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6370
  %14 = getelementptr inbounds %struct.__sigset_t* %13, i32 0, i32 0, !dbg !6370
  %15 = getelementptr inbounds [16 x i64]* %14, i64 0, i64 %12, !dbg !6370
  %16 = load i64* %15, align 8, !dbg !6370
  %17 = load i64* %__mask, align 8, !dbg !6370
  %18 = and i64 %16, %17, !dbg !6370
  %19 = icmp ne i64 %18, 0, !dbg !6370
  %20 = zext i1 %19 to i32, !dbg !6370
  store i32 %20, i32* %0, align 4, !dbg !6370
  %21 = load i32* %0, align 4, !dbg !6370
  store i32 %21, i32* %retval, align 4, !dbg !6370
  %retval1 = load i32* %retval, !dbg !6370
  ret i32 %retval1, !dbg !6371
}

define i32 @__sigaddset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6373
  %2 = sub nsw i32 %1, 1, !dbg !6373
  %3 = and i32 %2, 63, !dbg !6373
  %.cast = zext i32 %3 to i64, !dbg !6373
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6373
  store i64 %5, i64* %__mask, align 8, !dbg !6373
  %6 = load i32* %__sig_addr, align 4, !dbg !6373
  %7 = sub nsw i32 %6, 1, !dbg !6373
  %8 = sext i32 %7 to i64, !dbg !6373
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6373
  store i64 %11, i64* %__word, align 8, !dbg !6373
  %12 = load i64* %__word, align 8, !dbg !6373
  %13 = load i64* %__word, align 8, !dbg !6373
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6373
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6373
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6373
  %17 = load i64* %16, align 8, !dbg !6373
  %18 = load i64* %__mask, align 8, !dbg !6373
  %19 = or i64 %17, %18, !dbg !6373
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6373
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6373
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6373
  store i64 %19, i64* %22, align 8, !dbg !6373
  store i32 0, i32* %0, align 4, !dbg !6373
  %23 = load i32* %0, align 4, !dbg !6373
  store i32 %23, i32* %retval, align 4, !dbg !6373
  %retval1 = load i32* %retval, !dbg !6373
  ret i32 %retval1, !dbg !6374
}

define i32 @__sigdelset(%struct.__sigset_t* %__set, i32 %__sig) nounwind {
entry:
  %__set_addr = alloca %struct.__sigset_t*, align 8
  %__sig_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %__mask = alloca i64
  %__word = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %struct.__sigset_t* %__set, %struct.__sigset_t** %__set_addr
  store i32 %__sig, i32* %__sig_addr
  %1 = load i32* %__sig_addr, align 4, !dbg !6376
  %2 = sub nsw i32 %1, 1, !dbg !6376
  %3 = and i32 %2, 63, !dbg !6376
  %.cast = zext i32 %3 to i64, !dbg !6376
  %int_cast_to_i641 = bitcast i64 %.cast to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %5 = shl i64 1, %.cast, !dbg !6376
  store i64 %5, i64* %__mask, align 8, !dbg !6376
  %6 = load i32* %__sig_addr, align 4, !dbg !6376
  %7 = sub nsw i32 %6, 1, !dbg !6376
  %8 = sext i32 %7 to i64, !dbg !6376
  %int_cast_to_i64 = bitcast i64 64 to i64
  %9 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %10 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %10, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %klee_overshift_check.exit
  call void @klee_disable_symbex() nounwind
  %11 = udiv i64 %8, 64, !dbg !6376
  store i64 %11, i64* %__word, align 8, !dbg !6376
  %12 = load i64* %__word, align 8, !dbg !6376
  %13 = load i64* %__word, align 8, !dbg !6376
  %14 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6376
  %15 = getelementptr inbounds %struct.__sigset_t* %14, i32 0, i32 0, !dbg !6376
  %16 = getelementptr inbounds [16 x i64]* %15, i64 0, i64 %13, !dbg !6376
  %17 = load i64* %16, align 8, !dbg !6376
  %18 = load i64* %__mask, align 8, !dbg !6376
  %not = xor i64 %18, -1, !dbg !6376
  %19 = and i64 %17, %not, !dbg !6376
  %20 = load %struct.__sigset_t** %__set_addr, align 8, !dbg !6376
  %21 = getelementptr inbounds %struct.__sigset_t* %20, i32 0, i32 0, !dbg !6376
  %22 = getelementptr inbounds [16 x i64]* %21, i64 0, i64 %12, !dbg !6376
  store i64 %19, i64* %22, align 8, !dbg !6376
  store i32 0, i32* %0, align 4, !dbg !6376
  %23 = load i32* %0, align 4, !dbg !6376
  store i32 %23, i32* %retval, align 4, !dbg !6376
  %retval2 = load i32* %retval, !dbg !6376
  ret i32 %retval2, !dbg !6377
}

define hidden i64 @__stdio_READ(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  store i64 0, i64* %rv, align 8, !dbg !6379
  %1 = load %4** %stream_addr, align 8, !dbg !6381
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6381
  %3 = load i16* %2, align 8, !dbg !6381
  %4 = zext i16 %3 to i32, !dbg !6381
  %5 = and i32 %4, 4, !dbg !6381
  %6 = icmp eq i32 %5, 0, !dbg !6381
  br i1 %6, label %bb, label %bb6, !dbg !6381

bb:                                               ; preds = %entry
  %7 = load i64* %bufsize_addr, align 8, !dbg !6382
  %8 = icmp slt i64 %7, 0, !dbg !6382
  br i1 %8, label %bb1, label %bb2, !dbg !6382

bb1:                                              ; preds = %bb
  store i64 9223372036854775807, i64* %bufsize_addr, align 8, !dbg !6383
  br label %bb2, !dbg !6383

bb2:                                              ; preds = %bb1, %bb
  %9 = load %4** %stream_addr, align 8, !dbg !6384
  %10 = getelementptr inbounds %4* %9, i32 0, i32 2, !dbg !6384
  %11 = load i32* %10, align 4, !dbg !6384
  %12 = load i8** %buf_addr, align 8, !dbg !6384
  %13 = load i64* %bufsize_addr, align 8, !dbg !6384
  %14 = call i64 @read(i32 %11, i8* %12, i64 %13) nounwind, !dbg !6384
  store i64 %14, i64* %rv, align 8, !dbg !6384
  %15 = load i64* %rv, align 8, !dbg !6384
  %16 = icmp sle i64 %15, 0, !dbg !6384
  br i1 %16, label %bb3, label %bb6, !dbg !6384

bb3:                                              ; preds = %bb2
  %17 = load i64* %rv, align 8, !dbg !6385
  %18 = icmp eq i64 %17, 0, !dbg !6385
  %19 = load %4** %stream_addr, align 8, !dbg !6386
  %20 = getelementptr inbounds %4* %19, i32 0, i32 0, !dbg !6386
  %21 = load i16* %20, align 8, !dbg !6386
  br i1 %18, label %bb4, label %bb5, !dbg !6385

bb4:                                              ; preds = %bb3
  %22 = or i16 %21, 4, !dbg !6386
  %23 = load %4** %stream_addr, align 8, !dbg !6386
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6386
  store i16 %22, i16* %24, align 8, !dbg !6386
  br label %bb6, !dbg !6386

bb5:                                              ; preds = %bb3
  %25 = or i16 %21, 8, !dbg !6387
  %26 = load %4** %stream_addr, align 8, !dbg !6387
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6387
  store i16 %25, i16* %27, align 8, !dbg !6387
  store i64 0, i64* %rv, align 8, !dbg !6388
  br label %bb6, !dbg !6388

bb6:                                              ; preds = %bb5, %bb4, %bb2, %entry
  %28 = load i64* %rv, align 8, !dbg !6389
  store i64 %28, i64* %0, align 8, !dbg !6389
  %29 = load i64* %0, align 8, !dbg !6389
  store i64 %29, i64* %retval, align 8, !dbg !6389
  %retval7 = load i64* %retval, !dbg !6389
  ret i64 %retval7, !dbg !6389
}

define hidden i64 @__stdio_WRITE(%4* %stream, i8* %buf, i64 %bufsize) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %buf_addr = alloca i8*, align 8
  %bufsize_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %rv = alloca i64
  %stodo = alloca i64
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %buf, i8** %buf_addr
  store i64 %bufsize, i64* %bufsize_addr
  %1 = load i64* %bufsize_addr, align 8, !dbg !6390
  store i64 %1, i64* %todo, align 8, !dbg !6390
  br label %bb, !dbg !6390

bb:                                               ; preds = %bb6, %entry
  %2 = load i64* %todo, align 8, !dbg !6392
  %3 = icmp eq i64 %2, 0, !dbg !6392
  br i1 %3, label %bb1, label %bb2, !dbg !6392

bb1:                                              ; preds = %bb
  %4 = load i64* %bufsize_addr, align 8, !dbg !6393
  store i64 %4, i64* %0, align 8, !dbg !6393
  br label %bb16, !dbg !6393

bb2:                                              ; preds = %bb
  %5 = load i64* %todo, align 8, !dbg !6394
  %6 = icmp sge i64 %5, 0, !dbg !6394
  br i1 %6, label %bb3, label %bb4, !dbg !6394

bb3:                                              ; preds = %bb2
  %7 = load i64* %todo, align 8, !dbg !6394
  store i64 %7, i64* %iftmp.0, align 8, !dbg !6394
  br label %bb5, !dbg !6394

bb4:                                              ; preds = %bb2
  store i64 9223372036854775807, i64* %iftmp.0, align 8, !dbg !6394
  br label %bb5, !dbg !6394

bb5:                                              ; preds = %bb4, %bb3
  %8 = load i64* %iftmp.0, align 8, !dbg !6394
  store i64 %8, i64* %stodo, align 8, !dbg !6394
  %9 = load i64* %stodo, align 8, !dbg !6395
  %10 = load %4** %stream_addr, align 8, !dbg !6395
  %11 = getelementptr inbounds %4* %10, i32 0, i32 2, !dbg !6395
  %12 = load i32* %11, align 4, !dbg !6395
  %13 = load i8** %buf_addr, align 8, !dbg !6395
  %14 = call i64 @write(i32 %12, i8* %13, i64 %9) nounwind, !dbg !6395
  store i64 %14, i64* %rv, align 8, !dbg !6395
  %15 = load i64* %rv, align 8, !dbg !6395
  %16 = icmp sge i64 %15, 0, !dbg !6395
  br i1 %16, label %bb6, label %bb7, !dbg !6395

bb6:                                              ; preds = %bb5
  %17 = load i64* %rv, align 8, !dbg !6396
  %18 = load i64* %todo, align 8, !dbg !6396
  %19 = sub i64 %18, %17, !dbg !6396
  store i64 %19, i64* %todo, align 8, !dbg !6396
  %20 = load i8** %buf_addr, align 8, !dbg !6397
  %21 = load i64* %rv, align 8, !dbg !6397
  %22 = getelementptr inbounds i8* %20, i64 %21, !dbg !6397
  store i8* %22, i8** %buf_addr, align 8, !dbg !6397
  br label %bb, !dbg !6397

bb7:                                              ; preds = %bb5
  %23 = load %4** %stream_addr, align 8, !dbg !6398
  %24 = getelementptr inbounds %4* %23, i32 0, i32 0, !dbg !6398
  %25 = load i16* %24, align 8, !dbg !6398
  %26 = or i16 %25, 8, !dbg !6398
  %27 = load %4** %stream_addr, align 8, !dbg !6398
  %28 = getelementptr inbounds %4* %27, i32 0, i32 0, !dbg !6398
  store i16 %26, i16* %28, align 8, !dbg !6398
  %29 = load %4** %stream_addr, align 8, !dbg !6399
  %30 = getelementptr inbounds %4* %29, i32 0, i32 4, !dbg !6399
  %31 = load i8** %30, align 8, !dbg !6399
  %32 = ptrtoint i8* %31 to i64, !dbg !6399
  %33 = load %4** %stream_addr, align 8, !dbg !6399
  %34 = getelementptr inbounds %4* %33, i32 0, i32 3, !dbg !6399
  %35 = load i8** %34, align 8, !dbg !6399
  %36 = ptrtoint i8* %35 to i64, !dbg !6399
  %37 = sub nsw i64 %32, %36, !dbg !6399
  store i64 %37, i64* %stodo, align 8, !dbg !6399
  %38 = load i64* %stodo, align 8, !dbg !6399
  %39 = icmp ne i64 %38, 0, !dbg !6399
  br i1 %39, label %bb8, label %bb15, !dbg !6399

bb8:                                              ; preds = %bb7
  %40 = load i64* %stodo, align 8, !dbg !6400
  %41 = load i64* %todo, align 8, !dbg !6400
  %42 = icmp ugt i64 %40, %41, !dbg !6400
  br i1 %42, label %bb9, label %bb10, !dbg !6400

bb9:                                              ; preds = %bb8
  %43 = load i64* %todo, align 8, !dbg !6402
  store i64 %43, i64* %stodo, align 8, !dbg !6402
  br label %bb10, !dbg !6402

bb10:                                             ; preds = %bb9, %bb8
  %44 = load %4** %stream_addr, align 8, !dbg !6403
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6403
  %46 = load i8** %45, align 8, !dbg !6403
  store i8* %46, i8** %s, align 8, !dbg !6403
  br label %bb11, !dbg !6403

bb11:                                             ; preds = %bb13, %bb10
  %47 = load i8** %buf_addr, align 8, !dbg !6404
  %48 = load i8* %47, align 1, !dbg !6404
  %49 = load i8** %s, align 8, !dbg !6404
  store i8 %48, i8* %49, align 1, !dbg !6404
  %50 = load i8** %s, align 8, !dbg !6404
  %51 = load i8* %50, align 1, !dbg !6404
  %52 = icmp eq i8 %51, 10, !dbg !6404
  br i1 %52, label %bb12, label %bb13, !dbg !6404

bb12:                                             ; preds = %bb11
  %53 = load %4** %stream_addr, align 8, !dbg !6404
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6404
  %55 = load i16* %54, align 8, !dbg !6404
  %56 = zext i16 %55 to i32, !dbg !6404
  %57 = and i32 %56, 256, !dbg !6404
  %58 = icmp ne i32 %57, 0, !dbg !6404
  br i1 %58, label %bb14, label %bb13, !dbg !6404

bb13:                                             ; preds = %bb12, %bb11
  %59 = load i8** %s, align 8, !dbg !6405
  %60 = getelementptr inbounds i8* %59, i64 1, !dbg !6405
  store i8* %60, i8** %s, align 8, !dbg !6405
  %61 = load i8** %buf_addr, align 8, !dbg !6406
  %62 = getelementptr inbounds i8* %61, i64 1, !dbg !6406
  store i8* %62, i8** %buf_addr, align 8, !dbg !6406
  %63 = load i64* %stodo, align 8, !dbg !6407
  %64 = sub nsw i64 %63, 1, !dbg !6407
  store i64 %64, i64* %stodo, align 8, !dbg !6407
  %65 = load i64* %stodo, align 8, !dbg !6407
  %66 = icmp ne i64 %65, 0, !dbg !6407
  br i1 %66, label %bb11, label %bb14, !dbg !6407

bb14:                                             ; preds = %bb13, %bb12
  %67 = load %4** %stream_addr, align 8, !dbg !6408
  %68 = getelementptr inbounds %4* %67, i32 0, i32 5, !dbg !6408
  %69 = load i8** %s, align 8, !dbg !6408
  store i8* %69, i8** %68, align 8, !dbg !6408
  %70 = load i8** %s, align 8, !dbg !6409
  %71 = ptrtoint i8* %70 to i64, !dbg !6409
  %72 = load %4** %stream_addr, align 8, !dbg !6409
  %73 = getelementptr inbounds %4* %72, i32 0, i32 3, !dbg !6409
  %74 = load i8** %73, align 8, !dbg !6409
  %75 = ptrtoint i8* %74 to i64, !dbg !6409
  %76 = sub nsw i64 %71, %75, !dbg !6409
  %77 = load i64* %todo, align 8, !dbg !6409
  %78 = sub i64 %77, %76, !dbg !6409
  store i64 %78, i64* %todo, align 8, !dbg !6409
  br label %bb15, !dbg !6409

bb15:                                             ; preds = %bb14, %bb7
  %79 = load i64* %bufsize_addr, align 8, !dbg !6410
  %80 = load i64* %todo, align 8, !dbg !6410
  %81 = sub i64 %79, %80, !dbg !6410
  store i64 %81, i64* %0, align 8, !dbg !6410
  br label %bb16, !dbg !6410

bb16:                                             ; preds = %bb15, %bb1
  %82 = load i64* %0, align 8, !dbg !6393
  store i64 %82, i64* %retval, align 8, !dbg !6393
  %retval17 = load i64* %retval, !dbg !6393
  ret i64 %retval17, !dbg !6393
}

define hidden i64 @__stdio_fwrite(i8* noalias %buffer, i64 %bytes, %4* noalias %stream) nounwind {
entry:
  %buffer_addr = alloca i8*, align 8
  %bytes_addr = alloca i64, align 8
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %pending = alloca i64
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buffer, i8** %buffer_addr
  store i64 %bytes, i64* %bytes_addr
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6411
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6411
  %3 = load i16* %2, align 8, !dbg !6411
  %4 = zext i16 %3 to i32, !dbg !6411
  %5 = and i32 %4, 512, !dbg !6411
  %6 = icmp eq i32 %5, 0, !dbg !6411
  br i1 %6, label %bb, label %bb16, !dbg !6411

bb:                                               ; preds = %entry
  %7 = load %4** %stream_addr, align 8, !dbg !6413
  %8 = getelementptr inbounds %4* %7, i32 0, i32 2, !dbg !6413
  %9 = load i32* %8, align 4, !dbg !6413
  %10 = icmp eq i32 %9, -2, !dbg !6413
  %11 = load %4** %stream_addr, align 8, !dbg !6414
  %12 = getelementptr inbounds %4* %11, i32 0, i32 4, !dbg !6414
  %13 = load i8** %12, align 8, !dbg !6414
  %14 = ptrtoint i8* %13 to i64, !dbg !6414
  %15 = load %4** %stream_addr, align 8, !dbg !6414
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6414
  %17 = load i8** %16, align 8, !dbg !6414
  %18 = ptrtoint i8* %17 to i64, !dbg !6414
  %19 = sub nsw i64 %14, %18, !dbg !6414
  br i1 %10, label %bb1, label %bb4, !dbg !6413

bb1:                                              ; preds = %bb
  store i64 %19, i64* %pending, align 8, !dbg !6414
  %20 = load i64* %pending, align 8, !dbg !6415
  %21 = load i64* %bytes_addr, align 8, !dbg !6415
  %22 = icmp ugt i64 %20, %21, !dbg !6415
  br i1 %22, label %bb2, label %bb3, !dbg !6415

bb2:                                              ; preds = %bb1
  %23 = load i64* %bytes_addr, align 8, !dbg !6416
  store i64 %23, i64* %pending, align 8, !dbg !6416
  br label %bb3, !dbg !6416

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %4** %stream_addr, align 8, !dbg !6417
  %25 = getelementptr inbounds %4* %24, i32 0, i32 5, !dbg !6417
  %26 = load i8** %25, align 8, !dbg !6417
  %27 = load i8** %buffer_addr, align 8, !dbg !6417
  %28 = load i64* %pending, align 8, !dbg !6417
  %29 = call i8* @memcpy(i8* noalias %26, i8* noalias %27, i64 %28) nounwind, !dbg !6417
  %30 = load %4** %stream_addr, align 8, !dbg !6418
  %31 = getelementptr inbounds %4* %30, i32 0, i32 5, !dbg !6418
  %32 = load i8** %31, align 8, !dbg !6418
  %33 = load i64* %pending, align 8, !dbg !6418
  %34 = getelementptr inbounds i8* %32, i64 %33, !dbg !6418
  %35 = load %4** %stream_addr, align 8, !dbg !6418
  %36 = getelementptr inbounds %4* %35, i32 0, i32 5, !dbg !6418
  store i8* %34, i8** %36, align 8, !dbg !6418
  %37 = load i64* %bytes_addr, align 8, !dbg !6419
  store i64 %37, i64* %0, align 8, !dbg !6419
  br label %bb17, !dbg !6419

bb4:                                              ; preds = %bb
  %38 = load i64* %bytes_addr, align 8, !dbg !6420
  %39 = icmp uge i64 %19, %38, !dbg !6420
  %40 = load %4** %stream_addr, align 8, !dbg !6421
  %41 = getelementptr inbounds %4* %40, i32 0, i32 5, !dbg !6421
  %42 = load i8** %41, align 8, !dbg !6421
  br i1 %39, label %bb5, label %bb13, !dbg !6420

bb5:                                              ; preds = %bb4
  %43 = load i8** %buffer_addr, align 8, !dbg !6421
  %44 = load i64* %bytes_addr, align 8, !dbg !6421
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %43, i64 %44) nounwind, !dbg !6421
  %46 = load %4** %stream_addr, align 8, !dbg !6422
  %47 = getelementptr inbounds %4* %46, i32 0, i32 5, !dbg !6422
  %48 = load i8** %47, align 8, !dbg !6422
  %49 = load i64* %bytes_addr, align 8, !dbg !6422
  %50 = getelementptr inbounds i8* %48, i64 %49, !dbg !6422
  %51 = load %4** %stream_addr, align 8, !dbg !6422
  %52 = getelementptr inbounds %4* %51, i32 0, i32 5, !dbg !6422
  store i8* %50, i8** %52, align 8, !dbg !6422
  %53 = load %4** %stream_addr, align 8, !dbg !6423
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6423
  %55 = load i16* %54, align 8, !dbg !6423
  %56 = zext i16 %55 to i32, !dbg !6423
  %57 = and i32 %56, 256, !dbg !6423
  %58 = icmp ne i32 %57, 0, !dbg !6423
  br i1 %58, label %bb6, label %bb12, !dbg !6423

bb6:                                              ; preds = %bb5
  %59 = load i8** %buffer_addr, align 8, !dbg !6423
  %60 = load i64* %bytes_addr, align 8, !dbg !6423
  %61 = call i8* @memrchr(i8* %59, i32 10, i64 %60) nounwind readonly, !dbg !6423
  %62 = icmp ne i8* %61, null, !dbg !6423
  br i1 %62, label %bb7, label %bb12, !dbg !6423

bb7:                                              ; preds = %bb6
  %63 = load %4** %stream_addr, align 8, !dbg !6424
  %64 = call i64 @__stdio_wcommit(%4* noalias %63) nounwind, !dbg !6424
  store i64 %64, i64* %pending, align 8, !dbg !6424
  %65 = load i64* %pending, align 8, !dbg !6424
  %66 = icmp ne i64 %65, 0, !dbg !6424
  br i1 %66, label %bb8, label %bb12, !dbg !6424

bb8:                                              ; preds = %bb7
  %67 = load i64* %pending, align 8, !dbg !6425
  %68 = load i64* %bytes_addr, align 8, !dbg !6425
  %69 = icmp ugt i64 %67, %68, !dbg !6425
  br i1 %69, label %bb9, label %bb10, !dbg !6425

bb9:                                              ; preds = %bb8
  %70 = load i64* %bytes_addr, align 8, !dbg !6426
  store i64 %70, i64* %pending, align 8, !dbg !6426
  br label %bb10, !dbg !6426

bb10:                                             ; preds = %bb9, %bb8
  %71 = load i64* %bytes_addr, align 8, !dbg !6427
  %72 = load i64* %pending, align 8, !dbg !6427
  %73 = sub i64 %71, %72, !dbg !6427
  %74 = load i8** %buffer_addr, align 8, !dbg !6427
  %75 = getelementptr inbounds i8* %74, i64 %73, !dbg !6427
  store i8* %75, i8** %buffer_addr, align 8, !dbg !6427
  %76 = load i8** %buffer_addr, align 8, !dbg !6428
  %77 = load i64* %pending, align 8, !dbg !6428
  %78 = call i8* @memchr(i8* %76, i32 10, i64 %77) nounwind readonly, !dbg !6428
  store i8* %78, i8** %p, align 8, !dbg !6428
  %79 = load i8** %p, align 8, !dbg !6428
  %80 = icmp ne i8* %79, null, !dbg !6428
  br i1 %80, label %bb11, label %bb12, !dbg !6428

bb11:                                             ; preds = %bb10
  %81 = load i8** %buffer_addr, align 8, !dbg !6429
  %82 = load i64* %pending, align 8, !dbg !6429
  %83 = getelementptr inbounds i8* %81, i64 %82, !dbg !6429
  %84 = ptrtoint i8* %83 to i64, !dbg !6429
  %85 = load i8** %p, align 8, !dbg !6429
  %86 = ptrtoint i8* %85 to i64, !dbg !6429
  %87 = sub nsw i64 %84, %86, !dbg !6429
  store i64 %87, i64* %pending, align 8, !dbg !6429
  %88 = load i64* %bytes_addr, align 8, !dbg !6430
  %89 = load i64* %pending, align 8, !dbg !6430
  %90 = sub i64 %88, %89, !dbg !6430
  store i64 %90, i64* %bytes_addr, align 8, !dbg !6430
  %91 = load %4** %stream_addr, align 8, !dbg !6431
  %92 = getelementptr inbounds %4* %91, i32 0, i32 5, !dbg !6431
  %93 = load i8** %92, align 8, !dbg !6431
  %94 = load i64* %pending, align 8, !dbg !6431
  %95 = sub nsw i64 0, %94, !dbg !6431
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !6431
  %97 = load %4** %stream_addr, align 8, !dbg !6431
  %98 = getelementptr inbounds %4* %97, i32 0, i32 5, !dbg !6431
  store i8* %96, i8** %98, align 8, !dbg !6431
  br label %bb12, !dbg !6431

bb12:                                             ; preds = %bb11, %bb10, %bb7, %bb6, %bb5
  %99 = load i64* %bytes_addr, align 8, !dbg !6432
  store i64 %99, i64* %0, align 8, !dbg !6432
  br label %bb17, !dbg !6432

bb13:                                             ; preds = %bb4
  %100 = load %4** %stream_addr, align 8, !dbg !6433
  %101 = getelementptr inbounds %4* %100, i32 0, i32 3, !dbg !6433
  %102 = load i8** %101, align 8, !dbg !6433
  %103 = icmp ne i8* %42, %102, !dbg !6433
  br i1 %103, label %bb14, label %bb16, !dbg !6433

bb14:                                             ; preds = %bb13
  %104 = load %4** %stream_addr, align 8, !dbg !6434
  %105 = call i64 @__stdio_wcommit(%4* noalias %104) nounwind, !dbg !6434
  %106 = icmp ne i64 %105, 0, !dbg !6434
  br i1 %106, label %bb15, label %bb16, !dbg !6434

bb15:                                             ; preds = %bb14
  store i64 0, i64* %0, align 8, !dbg !6435
  br label %bb17, !dbg !6435

bb16:                                             ; preds = %bb14, %bb13, %entry
  %107 = load %4** %stream_addr, align 8, !dbg !6436
  %108 = load i8** %buffer_addr, align 8, !dbg !6436
  %109 = load i64* %bytes_addr, align 8, !dbg !6436
  %110 = call i64 @__stdio_WRITE(%4* %107, i8* %108, i64 %109) nounwind, !dbg !6436
  store i64 %110, i64* %0, align 8, !dbg !6436
  br label %bb17, !dbg !6436

bb17:                                             ; preds = %bb16, %bb15, %bb12, %bb3
  %111 = load i64* %0, align 8, !dbg !6419
  store i64 %111, i64* %retval, align 8, !dbg !6419
  %retval18 = load i64* %retval, !dbg !6419
  ret i64 %retval18, !dbg !6419
}

define hidden i64 @__stdio_rfill(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %rv = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6437
  %2 = getelementptr inbounds %4* %1, i32 0, i32 4, !dbg !6437
  %3 = load i8** %2, align 8, !dbg !6437
  %4 = ptrtoint i8* %3 to i64, !dbg !6437
  %5 = load %4** %stream_addr, align 8, !dbg !6437
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6437
  %7 = load i8** %6, align 8, !dbg !6437
  %8 = ptrtoint i8* %7 to i64, !dbg !6437
  %9 = sub nsw i64 %4, %8, !dbg !6437
  %10 = load %4** %stream_addr, align 8, !dbg !6437
  %11 = getelementptr inbounds %4* %10, i32 0, i32 3, !dbg !6437
  %12 = load i8** %11, align 8, !dbg !6437
  %13 = load %4** %stream_addr, align 8, !dbg !6437
  %14 = call i64 @__stdio_READ(%4* %13, i8* %12, i64 %9) nounwind, !dbg !6437
  store i64 %14, i64* %rv, align 8, !dbg !6437
  %15 = load %4** %stream_addr, align 8, !dbg !6439
  %16 = getelementptr inbounds %4* %15, i32 0, i32 3, !dbg !6439
  %17 = load i8** %16, align 8, !dbg !6439
  %18 = load %4** %stream_addr, align 8, !dbg !6439
  %19 = getelementptr inbounds %4* %18, i32 0, i32 5, !dbg !6439
  store i8* %17, i8** %19, align 8, !dbg !6439
  %20 = load %4** %stream_addr, align 8, !dbg !6440
  %21 = getelementptr inbounds %4* %20, i32 0, i32 3, !dbg !6440
  %22 = load i8** %21, align 8, !dbg !6440
  %23 = load i64* %rv, align 8, !dbg !6440
  %24 = getelementptr inbounds i8* %22, i64 %23, !dbg !6440
  %25 = load %4** %stream_addr, align 8, !dbg !6440
  %26 = getelementptr inbounds %4* %25, i32 0, i32 6, !dbg !6440
  store i8* %24, i8** %26, align 8, !dbg !6440
  %27 = load i64* %rv, align 8, !dbg !6441
  store i64 %27, i64* %0, align 8, !dbg !6441
  %28 = load i64* %0, align 8, !dbg !6441
  store i64 %28, i64* %retval, align 8, !dbg !6441
  %retval1 = load i64* %retval, !dbg !6441
  ret i64 %retval1, !dbg !6441
}

define hidden i32 @__stdio_trans2r_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6442
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6442
  %3 = load i16* %2, align 8, !dbg !6442
  %4 = zext i16 %3 to i32, !dbg !6442
  %5 = load i32* %oflag_addr, align 4, !dbg !6442
  %6 = and i32 %4, %5, !dbg !6442
  %7 = icmp eq i32 %6, 0, !dbg !6442
  br i1 %7, label %bb, label %bb2, !dbg !6442

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6444
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6444
  %10 = load i16* %9, align 8, !dbg !6444
  %11 = zext i16 %10 to i32, !dbg !6444
  %12 = and i32 %11, 2176, !dbg !6444
  %13 = icmp ne i32 %12, 0, !dbg !6444
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6444

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6445
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6445
  %16 = load i16* %15, align 8, !dbg !6445
  %17 = load i32* %oflag_addr, align 4, !dbg !6445
  %18 = trunc i32 %17 to i16, !dbg !6445
  %19 = or i16 %16, %18, !dbg !6445
  %20 = load %4** %stream_addr, align 8, !dbg !6445
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6445
  store i16 %19, i16* %21, align 8, !dbg !6445
  br label %bb2, !dbg !6445

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6446
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6446
  %24 = load i16* %23, align 8, !dbg !6446
  %25 = zext i16 %24 to i32, !dbg !6446
  %26 = and i32 %25, 16, !dbg !6446
  %27 = icmp ne i32 %26, 0, !dbg !6446
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6446

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6447
  br label %ERROR, !dbg !6448

ERROR:                                            ; preds = %bb4, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6449
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6449
  %30 = load i16* %29, align 8, !dbg !6449
  %31 = or i16 %30, 8, !dbg !6449
  %32 = load %4** %stream_addr, align 8, !dbg !6449
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6449
  store i16 %31, i16* %33, align 8, !dbg !6449
  store i32 -1, i32* %0, align 4, !dbg !6450
  br label %bb7, !dbg !6450

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6451
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6451
  %36 = load i16* %35, align 8, !dbg !6451
  %37 = zext i16 %36 to i32, !dbg !6451
  %38 = and i32 %37, 64, !dbg !6451
  %39 = icmp ne i32 %38, 0, !dbg !6451
  br i1 %39, label %bb4, label %bb6, !dbg !6451

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6452
  %41 = call i64 @__stdio_wcommit(%4* noalias %40) nounwind, !dbg !6452
  %42 = icmp ne i64 %41, 0, !dbg !6452
  br i1 %42, label %ERROR, label %bb5, !dbg !6452

bb5:                                              ; preds = %bb4
  %43 = load %4** %stream_addr, align 8, !dbg !6453
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6453
  %45 = load i8** %44, align 8, !dbg !6453
  %46 = load %4** %stream_addr, align 8, !dbg !6453
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6453
  store i8* %45, i8** %47, align 8, !dbg !6453
  %48 = load %4** %stream_addr, align 8, !dbg !6454
  %49 = getelementptr inbounds %4* %48, i32 0, i32 0, !dbg !6454
  %50 = load i16* %49, align 8, !dbg !6454
  %51 = and i16 %50, -65, !dbg !6454
  %52 = load %4** %stream_addr, align 8, !dbg !6454
  %53 = getelementptr inbounds %4* %52, i32 0, i32 0, !dbg !6454
  store i16 %51, i16* %53, align 8, !dbg !6454
  br label %bb6, !dbg !6454

bb6:                                              ; preds = %bb5, %bb3
  %54 = load %4** %stream_addr, align 8, !dbg !6455
  %55 = getelementptr inbounds %4* %54, i32 0, i32 0, !dbg !6455
  %56 = load i16* %55, align 8, !dbg !6455
  %57 = or i16 %56, 1, !dbg !6455
  %58 = load %4** %stream_addr, align 8, !dbg !6455
  %59 = getelementptr inbounds %4* %58, i32 0, i32 0, !dbg !6455
  store i16 %57, i16* %59, align 8, !dbg !6455
  store i32 0, i32* %0, align 4, !dbg !6456
  br label %bb7, !dbg !6456

bb7:                                              ; preds = %bb6, %ERROR
  %60 = load i32* %0, align 4, !dbg !6450
  store i32 %60, i32* %retval, align 4, !dbg !6450
  %retval8 = load i32* %retval, !dbg !6450
  ret i32 %retval8, !dbg !6450
}

define hidden i32 @__stdio_trans2w_o(%4* noalias %stream, i32 %oflag) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %oflag_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %oflag, i32* %oflag_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6457
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !6457
  %3 = load i16* %2, align 8, !dbg !6457
  %4 = zext i16 %3 to i32, !dbg !6457
  %5 = load i32* %oflag_addr, align 4, !dbg !6457
  %6 = and i32 %4, %5, !dbg !6457
  %7 = icmp eq i32 %6, 0, !dbg !6457
  br i1 %7, label %bb, label %bb2, !dbg !6457

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6459
  %9 = getelementptr inbounds %4* %8, i32 0, i32 0, !dbg !6459
  %10 = load i16* %9, align 8, !dbg !6459
  %11 = zext i16 %10 to i32, !dbg !6459
  %12 = and i32 %11, 2176, !dbg !6459
  %13 = icmp ne i32 %12, 0, !dbg !6459
  br i1 %13, label %DO_EBADF, label %bb1, !dbg !6459

bb1:                                              ; preds = %bb
  %14 = load %4** %stream_addr, align 8, !dbg !6460
  %15 = getelementptr inbounds %4* %14, i32 0, i32 0, !dbg !6460
  %16 = load i16* %15, align 8, !dbg !6460
  %17 = load i32* %oflag_addr, align 4, !dbg !6460
  %18 = trunc i32 %17 to i16, !dbg !6460
  %19 = or i16 %16, %18, !dbg !6460
  %20 = load %4** %stream_addr, align 8, !dbg !6460
  %21 = getelementptr inbounds %4* %20, i32 0, i32 0, !dbg !6460
  store i16 %19, i16* %21, align 8, !dbg !6460
  br label %bb2, !dbg !6460

bb2:                                              ; preds = %bb1, %entry
  %22 = load %4** %stream_addr, align 8, !dbg !6461
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6461
  %24 = load i16* %23, align 8, !dbg !6461
  %25 = zext i16 %24 to i32, !dbg !6461
  %26 = and i32 %25, 32, !dbg !6461
  %27 = icmp ne i32 %26, 0, !dbg !6461
  br i1 %27, label %DO_EBADF, label %bb3, !dbg !6461

DO_EBADF:                                         ; preds = %bb2, %bb
  store i32 9, i32* @errno, align 4, !dbg !6462
  br label %ERROR, !dbg !6463

ERROR:                                            ; preds = %bb10, %DO_EBADF
  %28 = load %4** %stream_addr, align 8, !dbg !6464
  %29 = getelementptr inbounds %4* %28, i32 0, i32 0, !dbg !6464
  %30 = load i16* %29, align 8, !dbg !6464
  %31 = or i16 %30, 8, !dbg !6464
  %32 = load %4** %stream_addr, align 8, !dbg !6464
  %33 = getelementptr inbounds %4* %32, i32 0, i32 0, !dbg !6464
  store i16 %31, i16* %33, align 8, !dbg !6464
  store i32 -1, i32* %0, align 4, !dbg !6465
  br label %bb15, !dbg !6465

bb3:                                              ; preds = %bb2
  %34 = load %4** %stream_addr, align 8, !dbg !6466
  %35 = getelementptr inbounds %4* %34, i32 0, i32 0, !dbg !6466
  %36 = load i16* %35, align 8, !dbg !6466
  %37 = zext i16 %36 to i32, !dbg !6466
  %38 = and i32 %37, 3, !dbg !6466
  %39 = icmp ne i32 %38, 0, !dbg !6466
  br i1 %39, label %bb4, label %bb12, !dbg !6466

bb4:                                              ; preds = %bb3
  %40 = load %4** %stream_addr, align 8, !dbg !6467
  %41 = getelementptr inbounds %4* %40, i32 0, i32 0, !dbg !6467
  %42 = load i16* %41, align 8, !dbg !6467
  %43 = zext i16 %42 to i32, !dbg !6467
  %44 = and i32 %43, 4, !dbg !6467
  %45 = icmp eq i32 %44, 0, !dbg !6467
  br i1 %45, label %bb5, label %bb11, !dbg !6467

bb5:                                              ; preds = %bb4
  %46 = load %4** %stream_addr, align 8, !dbg !6468
  %47 = getelementptr inbounds %4* %46, i32 0, i32 6, !dbg !6468
  %48 = load i8** %47, align 8, !dbg !6468
  %49 = load %4** %stream_addr, align 8, !dbg !6468
  %50 = getelementptr inbounds %4* %49, i32 0, i32 5, !dbg !6468
  %51 = load i8** %50, align 8, !dbg !6468
  %52 = icmp ne i8* %48, %51, !dbg !6468
  br i1 %52, label %bb7, label %bb6, !dbg !6468

bb6:                                              ; preds = %bb5
  %53 = load %4** %stream_addr, align 8, !dbg !6468
  %54 = getelementptr inbounds %4* %53, i32 0, i32 0, !dbg !6468
  %55 = load i16* %54, align 8, !dbg !6468
  %56 = zext i16 %55 to i32, !dbg !6468
  %57 = and i32 %56, 2, !dbg !6468
  %58 = icmp ne i32 %57, 0, !dbg !6468
  br i1 %58, label %bb7, label %bb11, !dbg !6468

bb7:                                              ; preds = %bb6, %bb5
  %59 = load %4** %stream_addr, align 8, !dbg !6468
  %60 = getelementptr inbounds %4* %59, i32 0, i32 0, !dbg !6468
  %61 = load i16* %60, align 8, !dbg !6468
  %62 = zext i16 %61 to i32, !dbg !6468
  %63 = and i32 %62, 1024, !dbg !6468
  %64 = icmp ne i32 %63, 0, !dbg !6468
  br i1 %64, label %bb8, label %bb9, !dbg !6468

bb8:                                              ; preds = %bb7
  store i32 2, i32* %iftmp.0, align 4, !dbg !6468
  br label %bb10, !dbg !6468

bb9:                                              ; preds = %bb7
  store i32 1, i32* %iftmp.0, align 4, !dbg !6468
  br label %bb10, !dbg !6468

bb10:                                             ; preds = %bb9, %bb8
  %65 = load %4** %stream_addr, align 8, !dbg !6468
  %66 = load i32* %iftmp.0, align 4, !dbg !6468
  %67 = call i32 @fseek(%4* %65, i64 0, i32 %66) nounwind, !dbg !6468
  %68 = icmp ne i32 %67, 0, !dbg !6468
  br i1 %68, label %ERROR, label %bb11, !dbg !6468

bb11:                                             ; preds = %bb10, %bb6, %bb4
  %69 = load %4** %stream_addr, align 8, !dbg !6469
  %70 = getelementptr inbounds %4* %69, i32 0, i32 0, !dbg !6469
  %71 = load i16* %70, align 8, !dbg !6469
  %72 = and i16 %71, -4, !dbg !6469
  %73 = load %4** %stream_addr, align 8, !dbg !6469
  %74 = getelementptr inbounds %4* %73, i32 0, i32 0, !dbg !6469
  store i16 %72, i16* %74, align 8, !dbg !6469
  %75 = load %4** %stream_addr, align 8, !dbg !6470
  %76 = getelementptr inbounds %4* %75, i32 0, i32 3, !dbg !6470
  %77 = load i8** %76, align 8, !dbg !6470
  %78 = load %4** %stream_addr, align 8, !dbg !6470
  %79 = getelementptr inbounds %4* %78, i32 0, i32 7, !dbg !6470
  store i8* %77, i8** %79, align 8, !dbg !6470
  %80 = load %4** %stream_addr, align 8, !dbg !6471
  %81 = getelementptr inbounds %4* %80, i32 0, i32 3, !dbg !6471
  %82 = load i8** %81, align 8, !dbg !6471
  %83 = load %4** %stream_addr, align 8, !dbg !6471
  %84 = getelementptr inbounds %4* %83, i32 0, i32 5, !dbg !6471
  store i8* %82, i8** %84, align 8, !dbg !6471
  %85 = load %4** %stream_addr, align 8, !dbg !6471
  %86 = getelementptr inbounds %4* %85, i32 0, i32 5, !dbg !6471
  %87 = load i8** %86, align 8, !dbg !6471
  %88 = load %4** %stream_addr, align 8, !dbg !6471
  %89 = getelementptr inbounds %4* %88, i32 0, i32 6, !dbg !6471
  store i8* %87, i8** %89, align 8, !dbg !6471
  br label %bb12, !dbg !6471

bb12:                                             ; preds = %bb11, %bb3
  %90 = load %4** %stream_addr, align 8, !dbg !6472
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6472
  %92 = load i16* %91, align 8, !dbg !6472
  %93 = or i16 %92, 64, !dbg !6472
  %94 = load %4** %stream_addr, align 8, !dbg !6472
  %95 = getelementptr inbounds %4* %94, i32 0, i32 0, !dbg !6472
  store i16 %93, i16* %95, align 8, !dbg !6472
  %96 = load %4** %stream_addr, align 8, !dbg !6473
  %97 = getelementptr inbounds %4* %96, i32 0, i32 0, !dbg !6473
  %98 = load i16* %97, align 8, !dbg !6473
  %99 = zext i16 %98 to i32, !dbg !6473
  %100 = and i32 %99, 2816, !dbg !6473
  %101 = icmp eq i32 %100, 0, !dbg !6473
  br i1 %101, label %bb13, label %bb14, !dbg !6473

bb13:                                             ; preds = %bb12
  %102 = load %4** %stream_addr, align 8, !dbg !6474
  %103 = getelementptr inbounds %4* %102, i32 0, i32 4, !dbg !6474
  %104 = load i8** %103, align 8, !dbg !6474
  %105 = load %4** %stream_addr, align 8, !dbg !6474
  %106 = getelementptr inbounds %4* %105, i32 0, i32 8, !dbg !6474
  store i8* %104, i8** %106, align 8, !dbg !6474
  br label %bb14, !dbg !6474

bb14:                                             ; preds = %bb13, %bb12
  store i32 0, i32* %0, align 4, !dbg !6475
  br label %bb15, !dbg !6475

bb15:                                             ; preds = %bb14, %ERROR
  %107 = load i32* %0, align 4, !dbg !6465
  store i32 %107, i32* %retval, align 4, !dbg !6465
  %retval16 = load i32* %retval, !dbg !6465
  ret i32 %retval16, !dbg !6465
}

define hidden i64 @__stdio_wcommit(%4* noalias %stream) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %bufsize = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  %1 = load %4** %stream_addr, align 8, !dbg !6476
  %2 = getelementptr inbounds %4* %1, i32 0, i32 5, !dbg !6476
  %3 = load i8** %2, align 8, !dbg !6476
  %4 = ptrtoint i8* %3 to i64, !dbg !6476
  %5 = load %4** %stream_addr, align 8, !dbg !6476
  %6 = getelementptr inbounds %4* %5, i32 0, i32 3, !dbg !6476
  %7 = load i8** %6, align 8, !dbg !6476
  %8 = ptrtoint i8* %7 to i64, !dbg !6476
  %9 = sub nsw i64 %4, %8, !dbg !6476
  store i64 %9, i64* %bufsize, align 8, !dbg !6476
  %10 = load i64* %bufsize, align 8, !dbg !6476
  %11 = icmp ne i64 %10, 0, !dbg !6476
  br i1 %11, label %bb, label %bb1, !dbg !6476

bb:                                               ; preds = %entry
  %12 = load %4** %stream_addr, align 8, !dbg !6478
  %13 = getelementptr inbounds %4* %12, i32 0, i32 3, !dbg !6478
  %14 = load i8** %13, align 8, !dbg !6478
  %15 = load %4** %stream_addr, align 8, !dbg !6478
  %16 = getelementptr inbounds %4* %15, i32 0, i32 5, !dbg !6478
  store i8* %14, i8** %16, align 8, !dbg !6478
  %17 = load %4** %stream_addr, align 8, !dbg !6479
  %18 = getelementptr inbounds %4* %17, i32 0, i32 3, !dbg !6479
  %19 = load i8** %18, align 8, !dbg !6479
  %20 = load %4** %stream_addr, align 8, !dbg !6479
  %21 = load i64* %bufsize, align 8, !dbg !6479
  %22 = call i64 @__stdio_WRITE(%4* %20, i8* %19, i64 %21) nounwind, !dbg !6479
  br label %bb1, !dbg !6479

bb1:                                              ; preds = %bb, %entry
  %23 = load %4** %stream_addr, align 8, !dbg !6480
  %24 = getelementptr inbounds %4* %23, i32 0, i32 5, !dbg !6480
  %25 = load i8** %24, align 8, !dbg !6480
  %26 = ptrtoint i8* %25 to i64, !dbg !6480
  %27 = load %4** %stream_addr, align 8, !dbg !6480
  %28 = getelementptr inbounds %4* %27, i32 0, i32 3, !dbg !6480
  %29 = load i8** %28, align 8, !dbg !6480
  %30 = ptrtoint i8* %29 to i64, !dbg !6480
  %31 = sub nsw i64 %26, %30, !dbg !6480
  store i64 %31, i64* %0, align 8, !dbg !6480
  %32 = load i64* %0, align 8, !dbg !6480
  store i64 %32, i64* %retval, align 8, !dbg !6480
  %retval2 = load i64* %retval, !dbg !6480
  ret i64 %retval2, !dbg !6480
}

define hidden %4* @_stdio_fopen(i64 %fname_or_mode, i8* noalias %mode, %4* noalias %stream, i32 %filedes) nounwind {
entry:
  %fname_or_mode_addr = alloca i64, align 8
  %mode_addr = alloca i8*, align 8
  %stream_addr = alloca %4*, align 8
  %filedes_addr = alloca i32, align 4
  %retval = alloca %4*
  %0 = alloca %4*
  %open_mode = alloca i32
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i64 %fname_or_mode, i64* %fname_or_mode_addr
  store i8* %mode, i8** %mode_addr
  store %4* %stream, %4** %stream_addr
  store i32 %filedes, i32* %filedes_addr
  store i32 0, i32* %open_mode, align 4, !dbg !6481
  %1 = load i8** %mode_addr, align 8, !dbg !6483
  %2 = load i8* %1, align 1, !dbg !6483
  %3 = icmp ne i8 %2, 114, !dbg !6483
  br i1 %3, label %bb, label %bb4, !dbg !6483

bb:                                               ; preds = %entry
  store i32 577, i32* %open_mode, align 4, !dbg !6484
  %4 = load i8** %mode_addr, align 8, !dbg !6485
  %5 = load i8* %4, align 1, !dbg !6485
  %6 = icmp ne i8 %5, 119, !dbg !6485
  br i1 %6, label %bb1, label %bb4, !dbg !6485

bb1:                                              ; preds = %bb
  store i32 1089, i32* %open_mode, align 4, !dbg !6486
  %7 = load i8** %mode_addr, align 8, !dbg !6487
  %8 = load i8* %7, align 1, !dbg !6487
  %9 = icmp ne i8 %8, 97, !dbg !6487
  br i1 %9, label %DO_EINVAL, label %bb4, !dbg !6487

DO_EINVAL:                                        ; preds = %bb16, %bb13, %bb1
  store i32 22, i32* @errno, align 4, !dbg !6488
  %10 = load %4** %stream_addr, align 8, !dbg !6489
  %11 = icmp ne %4* %10, null, !dbg !6489
  br i1 %11, label %FREE_STREAM, label %bb3, !dbg !6489

FREE_STREAM:                                      ; preds = %bb20, %DO_EINVAL
  %12 = load %4** %stream_addr, align 8, !dbg !6490
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !6490
  %14 = load i16* %13, align 8, !dbg !6490
  %15 = zext i16 %14 to i32, !dbg !6490
  %16 = and i32 %15, 8192, !dbg !6490
  %17 = icmp ne i32 %16, 0, !dbg !6490
  br i1 %17, label %bb2, label %bb3, !dbg !6490

bb2:                                              ; preds = %FREE_STREAM
  %18 = load %4** %stream_addr, align 8, !dbg !6490
  %19 = bitcast %4* %18 to i8*, !dbg !6490
  call void @free(i8* %19) nounwind, !dbg !6490
  br label %bb3, !dbg !6490

bb3:                                              ; preds = %bb2, %FREE_STREAM, %DO_EINVAL
  store %4* null, %4** %0, align 8, !dbg !6491
  br label %bb26, !dbg !6491

bb4:                                              ; preds = %bb1, %bb, %entry
  %20 = load i8** %mode_addr, align 8, !dbg !6492
  %21 = getelementptr inbounds i8* %20, i64 1, !dbg !6492
  %22 = load i8* %21, align 1, !dbg !6492
  %23 = icmp eq i8 %22, 98, !dbg !6492
  br i1 %23, label %bb5, label %bb6, !dbg !6492

bb5:                                              ; preds = %bb4
  %24 = load i8** %mode_addr, align 8, !dbg !6493
  %25 = getelementptr inbounds i8* %24, i64 1, !dbg !6493
  store i8* %25, i8** %mode_addr, align 8, !dbg !6493
  br label %bb6, !dbg !6493

bb6:                                              ; preds = %bb5, %bb4
  %26 = load i8** %mode_addr, align 8, !dbg !6494
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6494
  %28 = load i8* %27, align 1, !dbg !6494
  %29 = icmp eq i8 %28, 43, !dbg !6494
  br i1 %29, label %bb7, label %bb8, !dbg !6494

bb7:                                              ; preds = %bb6
  %30 = load i8** %mode_addr, align 8, !dbg !6495
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !6495
  store i8* %31, i8** %mode_addr, align 8, !dbg !6495
  %32 = load i32* %open_mode, align 4, !dbg !6496
  %33 = or i32 %32, 1, !dbg !6496
  store i32 %33, i32* %open_mode, align 4, !dbg !6496
  %34 = load i32* %open_mode, align 4, !dbg !6497
  %35 = add i32 %34, 1, !dbg !6497
  store i32 %35, i32* %open_mode, align 4, !dbg !6497
  br label %bb8, !dbg !6497

bb8:                                              ; preds = %bb7, %bb6
  %36 = load %4** %stream_addr, align 8, !dbg !6498
  %37 = icmp eq %4* %36, null, !dbg !6498
  br i1 %37, label %bb9, label %bb12, !dbg !6498

bb9:                                              ; preds = %bb8
  %38 = call noalias i8* @malloc(i64 80) nounwind, !dbg !6499
  %39 = bitcast i8* %38 to %4*, !dbg !6499
  store %4* %39, %4** %stream_addr, align 8, !dbg !6499
  %40 = load %4** %stream_addr, align 8, !dbg !6499
  %41 = icmp eq %4* %40, null, !dbg !6499
  %42 = load %4** %stream_addr, align 8, !dbg !6500
  br i1 %41, label %bb10, label %bb11, !dbg !6499

bb10:                                             ; preds = %bb9
  store %4* %42, %4** %0, align 8, !dbg !6500
  br label %bb26, !dbg !6500

bb11:                                             ; preds = %bb9
  %43 = getelementptr inbounds %4* %42, i32 0, i32 0, !dbg !6501
  store i16 8192, i16* %43, align 8, !dbg !6501
  %44 = load %4** %stream_addr, align 8, !dbg !6502
  %45 = getelementptr inbounds %4* %44, i32 0, i32 3, !dbg !6502
  store i8* null, i8** %45, align 8, !dbg !6502
  br label %bb12, !dbg !6502

bb12:                                             ; preds = %bb11, %bb8
  %46 = load i32* %filedes_addr, align 4, !dbg !6503
  %47 = icmp sge i32 %46, 0, !dbg !6503
  br i1 %47, label %bb13, label %bb18, !dbg !6503

bb13:                                             ; preds = %bb12
  %48 = load %4** %stream_addr, align 8, !dbg !6504
  %49 = getelementptr inbounds %4* %48, i32 0, i32 2, !dbg !6504
  %50 = load i32* %filedes_addr, align 4, !dbg !6504
  store i32 %50, i32* %49, align 4, !dbg !6504
  %51 = load i32* %open_mode, align 4, !dbg !6505
  %52 = and i32 %51, 3, !dbg !6505
  %53 = add i32 %52, 1, !dbg !6505
  store i32 %53, i32* %i, align 4, !dbg !6505
  %54 = load i64* %fname_or_mode_addr, align 8, !dbg !6506
  %55 = trunc i64 %54 to i32, !dbg !6506
  %56 = add nsw i32 %55, 1, !dbg !6506
  %57 = load i32* %i, align 4, !dbg !6506
  %58 = and i32 %56, %57, !dbg !6506
  %59 = load i32* %i, align 4, !dbg !6506
  %60 = icmp ne i32 %58, %59, !dbg !6506
  br i1 %60, label %DO_EINVAL, label %bb14, !dbg !6506

bb14:                                             ; preds = %bb13
  %61 = load i64* %fname_or_mode_addr, align 8, !dbg !6506
  %62 = trunc i64 %61 to i32, !dbg !6506
  %not = xor i32 %62, -1, !dbg !6506
  %63 = load i32* %open_mode, align 4, !dbg !6506
  %64 = and i32 %not, %63, !dbg !6506
  %65 = and i32 %64, 1024, !dbg !6506
  %66 = icmp eq i32 %65, 0, !dbg !6506
  br i1 %66, label %bb17, label %bb16, !dbg !6506

bb16:                                             ; preds = %bb14
  %67 = load i32* %filedes_addr, align 4, !dbg !6506
  %68 = call i32 (i32, i32, ...)* @fcntl(i32 %67, i32 4, i32 1024) nounwind, !dbg !6506
  %69 = icmp ne i32 %68, 0, !dbg !6506
  br i1 %69, label %DO_EINVAL, label %bb17, !dbg !6506

bb17:                                             ; preds = %bb16, %bb14
  %70 = load i32* %open_mode, align 4, !dbg !6507
  store i32 %70, i32* %open_mode, align 4, !dbg !6507
  br label %bb21, !dbg !6507

bb18:                                             ; preds = %bb12
  %71 = load i32* %filedes_addr, align 4, !dbg !6508
  %72 = icmp slt i32 %71, -1, !dbg !6508
  br i1 %72, label %bb19, label %bb20, !dbg !6508

bb19:                                             ; preds = %bb18
  %73 = load i32* %open_mode, align 4, !dbg !6508
  store i32 %73, i32* %open_mode, align 4, !dbg !6508
  br label %bb20, !dbg !6508

bb20:                                             ; preds = %bb19, %bb18
  %74 = load i32* %open_mode, align 4, !dbg !6509
  %75 = load i64* %fname_or_mode_addr, align 8, !dbg !6509
  %76 = inttoptr i64 %75 to i8*, !dbg !6509
  %77 = call i32 (i8*, i32, ...)* @open(i8* %76, i32 %74, i32 438) nounwind, !dbg !6509
  %78 = load %4** %stream_addr, align 8, !dbg !6509
  %79 = getelementptr inbounds %4* %78, i32 0, i32 2, !dbg !6509
  store i32 %77, i32* %79, align 4, !dbg !6509
  %80 = load %4** %stream_addr, align 8, !dbg !6509
  %81 = getelementptr inbounds %4* %80, i32 0, i32 2, !dbg !6509
  %82 = load i32* %81, align 4, !dbg !6509
  %83 = icmp slt i32 %82, 0, !dbg !6509
  br i1 %83, label %FREE_STREAM, label %bb21, !dbg !6509

bb21:                                             ; preds = %bb20, %bb17
  %84 = load %4** %stream_addr, align 8, !dbg !6510
  %85 = getelementptr inbounds %4* %84, i32 0, i32 0, !dbg !6510
  %86 = load i16* %85, align 8, !dbg !6510
  %87 = and i16 %86, 8192, !dbg !6510
  %88 = load %4** %stream_addr, align 8, !dbg !6510
  %89 = getelementptr inbounds %4* %88, i32 0, i32 0, !dbg !6510
  store i16 %87, i16* %89, align 8, !dbg !6510
  %90 = load %4** %stream_addr, align 8, !dbg !6511
  %91 = getelementptr inbounds %4* %90, i32 0, i32 0, !dbg !6511
  %92 = load i16* %91, align 8, !dbg !6511
  %93 = load i32* %open_mode, align 4, !dbg !6511
  %94 = trunc i32 %93 to i16, !dbg !6511
  %95 = and i16 %94, 1024, !dbg !6511
  %96 = load i32* %open_mode, align 4, !dbg !6511
  %97 = and i32 %96, 3, !dbg !6511
  %98 = add i32 %97, 1, !dbg !6511
  %99 = xor i32 %98, 3, !dbg !6511
  %100 = mul i32 %99, 16, !dbg !6511
  %101 = trunc i32 %100 to i16, !dbg !6511
  %102 = or i16 %95, %101, !dbg !6511
  %103 = or i16 %92, %102, !dbg !6511
  %104 = load %4** %stream_addr, align 8, !dbg !6511
  %105 = getelementptr inbounds %4* %104, i32 0, i32 0, !dbg !6511
  store i16 %103, i16* %105, align 8, !dbg !6511
  %106 = load i32* @errno, align 4, !dbg !6512
  store i32 %106, i32* %i, align 4, !dbg !6512
  %107 = load %4** %stream_addr, align 8, !dbg !6513
  %108 = getelementptr inbounds %4* %107, i32 0, i32 0, !dbg !6513
  %109 = load i16* %108, align 8, !dbg !6513
  %110 = load %4** %stream_addr, align 8, !dbg !6513
  %111 = getelementptr inbounds %4* %110, i32 0, i32 2, !dbg !6513
  %112 = load i32* %111, align 4, !dbg !6513
  %113 = call i32 @isatty(i32 %112) nounwind, !dbg !6513
  %114 = mul i32 %113, 256, !dbg !6513
  %115 = trunc i32 %114 to i16, !dbg !6513
  %116 = or i16 %109, %115, !dbg !6513
  %117 = load %4** %stream_addr, align 8, !dbg !6513
  %118 = getelementptr inbounds %4* %117, i32 0, i32 0, !dbg !6513
  store i16 %116, i16* %118, align 8, !dbg !6513
  %119 = load i32* %i, align 4, !dbg !6514
  store i32 %119, i32* @errno, align 4, !dbg !6514
  %120 = load %4** %stream_addr, align 8, !dbg !6515
  %121 = getelementptr inbounds %4* %120, i32 0, i32 3, !dbg !6515
  %122 = load i8** %121, align 8, !dbg !6515
  %123 = icmp eq i8* %122, null, !dbg !6515
  br i1 %123, label %bb22, label %bb25, !dbg !6515

bb22:                                             ; preds = %bb21
  %124 = call noalias i8* @malloc(i64 4096) nounwind, !dbg !6516
  %125 = load %4** %stream_addr, align 8, !dbg !6516
  %126 = getelementptr inbounds %4* %125, i32 0, i32 3, !dbg !6516
  store i8* %124, i8** %126, align 8, !dbg !6516
  %127 = load %4** %stream_addr, align 8, !dbg !6516
  %128 = getelementptr inbounds %4* %127, i32 0, i32 3, !dbg !6516
  %129 = load i8** %128, align 8, !dbg !6516
  %130 = icmp ne i8* %129, null, !dbg !6516
  %131 = load %4** %stream_addr, align 8, !dbg !6517
  %132 = getelementptr inbounds %4* %131, i32 0, i32 3, !dbg !6517
  %133 = load i8** %132, align 8, !dbg !6517
  br i1 %130, label %bb23, label %bb24, !dbg !6516

bb23:                                             ; preds = %bb22
  %134 = getelementptr inbounds i8* %133, i64 4096, !dbg !6517
  %135 = load %4** %stream_addr, align 8, !dbg !6517
  %136 = getelementptr inbounds %4* %135, i32 0, i32 4, !dbg !6517
  store i8* %134, i8** %136, align 8, !dbg !6517
  %137 = load %4** %stream_addr, align 8, !dbg !6518
  %138 = getelementptr inbounds %4* %137, i32 0, i32 0, !dbg !6518
  %139 = load i16* %138, align 8, !dbg !6518
  %140 = or i16 %139, 16384, !dbg !6518
  %141 = load %4** %stream_addr, align 8, !dbg !6518
  %142 = getelementptr inbounds %4* %141, i32 0, i32 0, !dbg !6518
  store i16 %140, i16* %142, align 8, !dbg !6518
  br label %bb25, !dbg !6518

bb24:                                             ; preds = %bb22
  %143 = load %4** %stream_addr, align 8, !dbg !6519
  %144 = getelementptr inbounds %4* %143, i32 0, i32 4, !dbg !6519
  store i8* %133, i8** %144, align 8, !dbg !6519
  br label %bb25, !dbg !6519

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %145 = load %4** %stream_addr, align 8, !dbg !6520
  %146 = getelementptr inbounds %4* %145, i32 0, i32 3, !dbg !6520
  %147 = load i8** %146, align 8, !dbg !6520
  %148 = load %4** %stream_addr, align 8, !dbg !6520
  %149 = getelementptr inbounds %4* %148, i32 0, i32 7, !dbg !6520
  store i8* %147, i8** %149, align 8, !dbg !6520
  %150 = load %4** %stream_addr, align 8, !dbg !6521
  %151 = getelementptr inbounds %4* %150, i32 0, i32 3, !dbg !6521
  %152 = load i8** %151, align 8, !dbg !6521
  %153 = load %4** %stream_addr, align 8, !dbg !6521
  %154 = getelementptr inbounds %4* %153, i32 0, i32 8, !dbg !6521
  store i8* %152, i8** %154, align 8, !dbg !6521
  %155 = load %4** %stream_addr, align 8, !dbg !6522
  %156 = getelementptr inbounds %4* %155, i32 0, i32 3, !dbg !6522
  %157 = load i8** %156, align 8, !dbg !6522
  %158 = load %4** %stream_addr, align 8, !dbg !6522
  %159 = getelementptr inbounds %4* %158, i32 0, i32 5, !dbg !6522
  store i8* %157, i8** %159, align 8, !dbg !6522
  %160 = load %4** %stream_addr, align 8, !dbg !6522
  %161 = getelementptr inbounds %4* %160, i32 0, i32 5, !dbg !6522
  %162 = load i8** %161, align 8, !dbg !6522
  %163 = load %4** %stream_addr, align 8, !dbg !6522
  %164 = getelementptr inbounds %4* %163, i32 0, i32 6, !dbg !6522
  store i8* %162, i8** %164, align 8, !dbg !6522
  %165 = load %4** %stream_addr, align 8, !dbg !6523
  %166 = getelementptr inbounds %4* %165, i32 0, i32 1, !dbg !6523
  %167 = getelementptr inbounds [2 x i8]* %166, i64 0, i64 0, !dbg !6523
  store i8 0, i8* %167, align 1, !dbg !6523
  %168 = load %4** %stream_addr, align 8, !dbg !6524
  %169 = getelementptr inbounds %4* %168, i32 0, i32 11, !dbg !6524
  %170 = getelementptr inbounds %struct.__mbstate_t* %169, i32 0, i32 0, !dbg !6524
  store i32 0, i32* %170, align 8, !dbg !6524
  %171 = load %4** @_stdio_openlist, align 8, !dbg !6525
  %172 = load %4** %stream_addr, align 8, !dbg !6525
  %173 = getelementptr inbounds %4* %172, i32 0, i32 9, !dbg !6525
  store %4* %171, %4** %173, align 8, !dbg !6525
  %174 = load %4** %stream_addr, align 8, !dbg !6526
  store %4* %174, %4** @_stdio_openlist, align 8, !dbg !6526
  %175 = load %4** %stream_addr, align 8, !dbg !6527
  store %4* %175, %4** %0, align 8, !dbg !6527
  br label %bb26, !dbg !6527

bb26:                                             ; preds = %bb25, %bb10, %bb3
  %176 = load %4** %0, align 8, !dbg !6491
  store %4* %176, %4** %retval, align 8, !dbg !6491
  %retval27 = load %4** %retval, !dbg !6491
  ret %4* %retval27, !dbg !6491
}

define i32 @fseeko64(%4* %stream, i64 %offset, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %offset_addr = alloca i64, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %pos = alloca i64
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64 %offset, i64* %offset_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64* %offset_addr, align 8, !dbg !6528
  store i64 %1, i64* %pos, align 8, !dbg !6528
  store i32 -1, i32* %retval1, align 4, !dbg !6530
  %2 = load i32* %whence_addr, align 4, !dbg !6531
  %3 = icmp ugt i32 %2, 2, !dbg !6531
  br i1 %3, label %bb, label %bb2, !dbg !6531

bb:                                               ; preds = %entry
  store i32 22, i32* @errno, align 4, !dbg !6532
  br label %bb8, !dbg !6532

bb2:                                              ; preds = %entry
  %4 = load %4** %stream_addr, align 8, !dbg !6533
  %5 = getelementptr inbounds %4* %4, i32 0, i32 0, !dbg !6533
  %6 = load i16* %5, align 8, !dbg !6533
  %7 = zext i16 %6 to i32, !dbg !6533
  %8 = and i32 %7, 64, !dbg !6533
  %9 = icmp eq i32 %8, 0, !dbg !6533
  br i1 %9, label %bb4, label %bb3, !dbg !6533

bb3:                                              ; preds = %bb2
  %10 = load %4** %stream_addr, align 8, !dbg !6533
  %11 = call i64 @__stdio_wcommit(%4* noalias %10) nounwind, !dbg !6533
  %12 = icmp eq i64 %11, 0, !dbg !6533
  br i1 %12, label %bb4, label %bb8, !dbg !6533

bb4:                                              ; preds = %bb3, %bb2
  %13 = load i32* %whence_addr, align 4, !dbg !6533
  %14 = icmp ne i32 %13, 1, !dbg !6533
  br i1 %14, label %bb6, label %bb5, !dbg !6533

bb5:                                              ; preds = %bb4
  %15 = load %4** %stream_addr, align 8, !dbg !6533
  %16 = call i32 @__stdio_adjust_position(%4* noalias %15, i64* %pos) nounwind, !dbg !6533
  %17 = icmp sge i32 %16, 0, !dbg !6533
  br i1 %17, label %bb6, label %bb8, !dbg !6533

bb6:                                              ; preds = %bb5, %bb4
  %18 = load %4** %stream_addr, align 8, !dbg !6533
  %19 = load i32* %whence_addr, align 4, !dbg !6533
  %20 = call i32 @__stdio_seek(%4* %18, i64* %pos, i32 %19) nounwind, !dbg !6533
  %21 = icmp sge i32 %20, 0, !dbg !6533
  br i1 %21, label %bb7, label %bb8, !dbg !6533

bb7:                                              ; preds = %bb6
  %22 = load %4** %stream_addr, align 8, !dbg !6534
  %23 = getelementptr inbounds %4* %22, i32 0, i32 0, !dbg !6534
  %24 = load i16* %23, align 8, !dbg !6534
  %25 = and i16 %24, -72, !dbg !6534
  %26 = load %4** %stream_addr, align 8, !dbg !6534
  %27 = getelementptr inbounds %4* %26, i32 0, i32 0, !dbg !6534
  store i16 %25, i16* %27, align 8, !dbg !6534
  %28 = load %4** %stream_addr, align 8, !dbg !6535
  %29 = getelementptr inbounds %4* %28, i32 0, i32 3, !dbg !6535
  %30 = load i8** %29, align 8, !dbg !6535
  %31 = load %4** %stream_addr, align 8, !dbg !6535
  %32 = getelementptr inbounds %4* %31, i32 0, i32 5, !dbg !6535
  store i8* %30, i8** %32, align 8, !dbg !6535
  %33 = load %4** %stream_addr, align 8, !dbg !6535
  %34 = getelementptr inbounds %4* %33, i32 0, i32 5, !dbg !6535
  %35 = load i8** %34, align 8, !dbg !6535
  %36 = load %4** %stream_addr, align 8, !dbg !6535
  %37 = getelementptr inbounds %4* %36, i32 0, i32 6, !dbg !6535
  store i8* %35, i8** %37, align 8, !dbg !6535
  %38 = load %4** %stream_addr, align 8, !dbg !6536
  %39 = getelementptr inbounds %4* %38, i32 0, i32 3, !dbg !6536
  %40 = load i8** %39, align 8, !dbg !6536
  %41 = load %4** %stream_addr, align 8, !dbg !6536
  %42 = getelementptr inbounds %4* %41, i32 0, i32 7, !dbg !6536
  store i8* %40, i8** %42, align 8, !dbg !6536
  %43 = load %4** %stream_addr, align 8, !dbg !6537
  %44 = getelementptr inbounds %4* %43, i32 0, i32 3, !dbg !6537
  %45 = load i8** %44, align 8, !dbg !6537
  %46 = load %4** %stream_addr, align 8, !dbg !6537
  %47 = getelementptr inbounds %4* %46, i32 0, i32 8, !dbg !6537
  store i8* %45, i8** %47, align 8, !dbg !6537
  %48 = load %4** %stream_addr, align 8, !dbg !6538
  %49 = getelementptr inbounds %4* %48, i32 0, i32 11, !dbg !6538
  %50 = getelementptr inbounds %struct.__mbstate_t* %49, i32 0, i32 0, !dbg !6538
  store i32 0, i32* %50, align 8, !dbg !6538
  %51 = load %4** %stream_addr, align 8, !dbg !6539
  %52 = getelementptr inbounds %4* %51, i32 0, i32 1, !dbg !6539
  %53 = getelementptr inbounds [2 x i8]* %52, i64 0, i64 0, !dbg !6539
  store i8 0, i8* %53, align 1, !dbg !6539
  store i32 0, i32* %retval1, align 4, !dbg !6540
  br label %bb8, !dbg !6540

bb8:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %54 = load i32* %retval1, align 4, !dbg !6541
  store i32 %54, i32* %0, align 4, !dbg !6541
  %55 = load i32* %0, align 4, !dbg !6541
  store i32 %55, i32* %retval, align 4, !dbg !6541
  %retval9 = load i32* %retval, !dbg !6541
  ret i32 %retval9, !dbg !6541
}

define i64 @getdelim(i8** noalias %lineptr, i64* noalias %n, i32 %delimiter, %4* noalias %stream) nounwind {
entry:
  %lineptr_addr = alloca i8**, align 8
  %n_addr = alloca i64*, align 8
  %delimiter_addr = alloca i32, align 4
  %stream_addr = alloca %4*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %iftmp.1 = alloca i32
  %1 = alloca i32
  %buf = alloca i8*
  %pos = alloca i64
  %c = alloca i32
  %__S = alloca %4*
  %"alloca point" = bitcast i32 0 to i32
  store i8** %lineptr, i8*** %lineptr_addr
  store i64* %n, i64** %n_addr
  store i32 %delimiter, i32* %delimiter_addr
  store %4* %stream, %4** %stream_addr
  store i64 -1, i64* %pos, align 8, !dbg !6542
  %2 = load i8*** %lineptr_addr, align 8, !dbg !6544
  %3 = icmp eq i8** %2, null, !dbg !6544
  br i1 %3, label %bb2, label %bb, !dbg !6544

bb:                                               ; preds = %entry
  %4 = load i64** %n_addr, align 8, !dbg !6544
  %5 = icmp eq i64* %4, null, !dbg !6544
  br i1 %5, label %bb2, label %bb1, !dbg !6544

bb1:                                              ; preds = %bb
  %6 = load %4** %stream_addr, align 8, !dbg !6544
  %7 = icmp eq %4* %6, null, !dbg !6544
  br i1 %7, label %bb2, label %bb3, !dbg !6544

bb2:                                              ; preds = %bb1, %bb, %entry
  store i32 22, i32* @errno, align 4, !dbg !6545
  br label %bb19, !dbg !6545

bb3:                                              ; preds = %bb1
  %8 = load i8*** %lineptr_addr, align 8, !dbg !6546
  %9 = load i8** %8, align 8, !dbg !6546
  store i8* %9, i8** %buf, align 8, !dbg !6546
  %10 = load i8** %buf, align 8, !dbg !6546
  %11 = icmp eq i8* %10, null, !dbg !6546
  br i1 %11, label %bb4, label %bb5, !dbg !6546

bb4:                                              ; preds = %bb3
  %12 = load i64** %n_addr, align 8, !dbg !6547
  store i64 0, i64* %12, align 8, !dbg !6547
  br label %bb5, !dbg !6547

bb5:                                              ; preds = %bb4, %bb3
  store i64 1, i64* %pos, align 8, !dbg !6548
  br label %bb6, !dbg !6548

bb6:                                              ; preds = %bb14, %bb5
  %13 = load i64* %pos, align 8, !dbg !6549
  %14 = load i64** %n_addr, align 8, !dbg !6549
  %15 = load i64* %14, align 8, !dbg !6549
  %16 = icmp uge i64 %13, %15, !dbg !6549
  br i1 %16, label %bb7, label %bb10, !dbg !6549

bb7:                                              ; preds = %bb6
  %17 = load i64** %n_addr, align 8, !dbg !6550
  %18 = load i64* %17, align 8, !dbg !6550
  %19 = add i64 %18, 64, !dbg !6550
  %20 = load i8** %buf, align 8, !dbg !6550
  %21 = call noalias i8* @realloc(i8* %20, i64 %19) nounwind, !dbg !6550
  store i8* %21, i8** %buf, align 8, !dbg !6550
  %22 = load i8** %buf, align 8, !dbg !6550
  %23 = icmp eq i8* %22, null, !dbg !6550
  br i1 %23, label %bb8, label %bb9, !dbg !6550

bb8:                                              ; preds = %bb7
  store i64 -1, i64* %pos, align 8, !dbg !6551
  br label %bb19, !dbg !6551

bb9:                                              ; preds = %bb7
  %24 = load i64** %n_addr, align 8, !dbg !6552
  %25 = load i64* %24, align 8, !dbg !6552
  %26 = add i64 %25, 64, !dbg !6552
  %27 = load i64** %n_addr, align 8, !dbg !6552
  store i64 %26, i64* %27, align 8, !dbg !6552
  %28 = load i8*** %lineptr_addr, align 8, !dbg !6553
  %29 = load i8** %buf, align 8, !dbg !6553
  store i8* %29, i8** %28, align 8, !dbg !6553
  br label %bb10, !dbg !6553

bb10:                                             ; preds = %bb9, %bb6
  %30 = load %4** %stream_addr, align 8, !dbg !6554
  store %4* %30, %4** %__S, align 8, !dbg !6554
  %31 = load %4** %__S, align 8, !dbg !6554
  %32 = getelementptr inbounds %4* %31, i32 0, i32 5, !dbg !6554
  %33 = load i8** %32, align 8, !dbg !6554
  %34 = load %4** %__S, align 8, !dbg !6554
  %35 = getelementptr inbounds %4* %34, i32 0, i32 7, !dbg !6554
  %36 = load i8** %35, align 8, !dbg !6554
  %37 = icmp ult i8* %33, %36, !dbg !6554
  %38 = load %4** %__S, align 8, !dbg !6554
  br i1 %37, label %bb11, label %bb12, !dbg !6554

bb11:                                             ; preds = %bb10
  %39 = getelementptr inbounds %4* %38, i32 0, i32 5, !dbg !6554
  %40 = load i8** %39, align 8, !dbg !6554
  %41 = load i8* %40, align 1, !dbg !6554
  %42 = zext i8 %41 to i32, !dbg !6554
  store i32 %42, i32* %iftmp.1, align 4, !dbg !6554
  %43 = getelementptr inbounds i8* %40, i64 1, !dbg !6554
  %44 = load %4** %__S, align 8, !dbg !6554
  %45 = getelementptr inbounds %4* %44, i32 0, i32 5, !dbg !6554
  store i8* %43, i8** %45, align 8, !dbg !6554
  br label %bb13, !dbg !6554

bb12:                                             ; preds = %bb10
  %46 = call i32 @__fgetc_unlocked(%4* %38) nounwind, !dbg !6554
  store i32 %46, i32* %iftmp.1, align 4, !dbg !6554
  br label %bb13, !dbg !6554

bb13:                                             ; preds = %bb12, %bb11
  %47 = load i32* %iftmp.1, align 4, !dbg !6554
  store i32 %47, i32* %1, align 4, !dbg !6554
  %48 = load i32* %1, align 4, !dbg !6554
  store i32 %48, i32* %c, align 4, !dbg !6554
  %49 = load i32* %c, align 4, !dbg !6554
  %50 = icmp ne i32 %49, -1, !dbg !6554
  br i1 %50, label %bb14, label %bb15, !dbg !6554

bb14:                                             ; preds = %bb13
  %51 = load i64* %pos, align 8, !dbg !6556
  %52 = add nsw i64 %51, 1, !dbg !6556
  store i64 %52, i64* %pos, align 8, !dbg !6556
  %53 = load i64* %pos, align 8, !dbg !6556
  %54 = sub nsw i64 %53, 2, !dbg !6556
  %55 = load i32* %c, align 4, !dbg !6556
  %56 = trunc i32 %55 to i8, !dbg !6556
  %57 = load i8** %buf, align 8, !dbg !6556
  %58 = getelementptr inbounds i8* %57, i64 %54, !dbg !6556
  store i8 %56, i8* %58, align 1, !dbg !6556
  %59 = load i32* %c, align 4, !dbg !6557
  %60 = load i32* %delimiter_addr, align 4, !dbg !6557
  %61 = icmp ne i32 %59, %60, !dbg !6557
  br i1 %61, label %bb6, label %bb15, !dbg !6557

bb15:                                             ; preds = %bb14, %bb13
  %62 = load i64* %pos, align 8, !dbg !6558
  %63 = sub nsw i64 %62, 2, !dbg !6558
  store i64 %63, i64* %pos, align 8, !dbg !6558
  %64 = load i64* %pos, align 8, !dbg !6558
  %65 = icmp sge i64 %64, 0, !dbg !6558
  br i1 %65, label %bb16, label %bb19, !dbg !6558

bb16:                                             ; preds = %bb15
  %66 = load i64* %pos, align 8, !dbg !6559
  %67 = add nsw i64 %66, 1, !dbg !6559
  store i64 %67, i64* %pos, align 8, !dbg !6559
  %68 = load i8** %buf, align 8, !dbg !6559
  %69 = load i64* %pos, align 8, !dbg !6559
  %70 = getelementptr inbounds i8* %68, i64 %69, !dbg !6559
  store i8 0, i8* %70, align 1, !dbg !6559
  br label %bb19, !dbg !6559

bb19:                                             ; preds = %bb15, %bb16, %bb8, %bb2
  %71 = load i64* %pos, align 8, !dbg !6560
  store i64 %71, i64* %0, align 8, !dbg !6560
  %72 = load i64* %0, align 8, !dbg !6560
  store i64 %72, i64* %retval, align 8, !dbg !6560
  %retval20 = load i64* %retval, !dbg !6560
  ret i64 %retval20, !dbg !6560
}

define i32 @isatty(i32 %fd) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %term = alloca %struct.termios
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  %1 = load i32* %fd_addr, align 4, !dbg !6561
  %2 = call i32 @tcgetattr(i32 %1, %struct.termios* %term) nounwind, !dbg !6561
  %3 = icmp eq i32 %2, 0, !dbg !6561
  %4 = zext i1 %3 to i32, !dbg !6561
  store i32 %4, i32* %0, align 4, !dbg !6561
  %5 = load i32* %0, align 4, !dbg !6561
  store i32 %5, i32* %retval, align 4, !dbg !6561
  %retval1 = load i32* %retval, !dbg !6561
  ret i32 %retval1, !dbg !6561
}

define i32 @iswctype(i32 %wc, i32 %desc) nounwind {
entry:
  %wc_addr = alloca i32, align 4
  %desc_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %wc, i32* %wc_addr
  store i32 %desc, i32* %desc_addr
  %1 = load i32* %wc_addr, align 4, !dbg !6563
  %2 = icmp ule i32 %1, 127, !dbg !6563
  br i1 %2, label %bb, label %bb2, !dbg !6563

bb:                                               ; preds = %entry
  %3 = load i32* %desc_addr, align 4, !dbg !6563
  %4 = icmp ule i32 %3, 12, !dbg !6563
  br i1 %4, label %bb1, label %bb2, !dbg !6563

bb1:                                              ; preds = %bb
  %5 = load i16** @__ctype_b, align 8, !dbg !6565
  %6 = load i32* %wc_addr, align 4, !dbg !6565
  %7 = sext i32 %6 to i64, !dbg !6565
  %8 = getelementptr inbounds i16* %5, i64 %7, !dbg !6565
  %9 = load i16* %8, align 1, !dbg !6565
  %10 = load i32* %desc_addr, align 4, !dbg !6565
  %11 = zext i32 %10 to i64, !dbg !6565
  %12 = getelementptr inbounds [13 x i16]* @desc2flag, i64 0, i64 %11, !dbg !6565
  %13 = load i16* %12, align 2, !dbg !6565
  %14 = and i16 %9, %13, !dbg !6565
  %15 = zext i16 %14 to i32, !dbg !6565
  store i32 %15, i32* %0, align 4, !dbg !6565
  br label %bb3, !dbg !6565

bb2:                                              ; preds = %bb, %entry
  store i32 0, i32* %0, align 4, !dbg !6566
  br label %bb3, !dbg !6566

bb3:                                              ; preds = %bb2, %bb1
  %16 = load i32* %0, align 4, !dbg !6565
  store i32 %16, i32* %retval, align 4, !dbg !6565
  %retval4 = load i32* %retval, !dbg !6565
  ret i32 %retval4, !dbg !6565
}

define i64 @mbsnrtowcs(i32* noalias %dst, i8** noalias %src, i64 %NMC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i32*, align 8
  %src_addr = alloca i8**, align 8
  %NMC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %s = alloca i8*
  %count = alloca i64
  %incr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %dst, i32** %dst_addr
  store i8** %src, i8*** %src_addr
  store i64 %NMC, i64* %NMC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6567
  %2 = icmp eq %struct.__mbstate_t* %1, null, !dbg !6567
  br i1 %2, label %bb, label %bb1, !dbg !6567

bb:                                               ; preds = %entry
  store %struct.__mbstate_t* @mbstate.2222, %struct.__mbstate_t** %ps_addr, align 8, !dbg !6569
  br label %bb1, !dbg !6569

bb1:                                              ; preds = %bb, %entry
  store i32 1, i32* %incr, align 4, !dbg !6570
  %3 = load i32** %dst_addr, align 8, !dbg !6571
  %4 = icmp eq i32* %3, null, !dbg !6571
  br i1 %4, label %bb3, label %bb2, !dbg !6571

bb2:                                              ; preds = %bb1
  %5 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !6571
  %6 = bitcast %struct.__mbstate_t* %5 to i32*, !dbg !6571
  %7 = load i32** %dst_addr, align 8, !dbg !6571
  %8 = icmp eq i32* %7, %6, !dbg !6571
  br i1 %8, label %bb3, label %bb7, !dbg !6571

bb3:                                              ; preds = %bb2, %bb1
  %9 = load i32** %dst_addr, align 8, !dbg !6572
  %10 = icmp eq i32* %9, null, !dbg !6572
  br i1 %10, label %bb4, label %bb5, !dbg !6572

bb4:                                              ; preds = %bb3
  store i64 -1, i64* %len_addr, align 8, !dbg !6573
  br label %bb5, !dbg !6573

bb5:                                              ; preds = %bb4, %bb3
  %wcbuf6 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6574
  store i32* %wcbuf6, i32** %dst_addr, align 8, !dbg !6574
  store i32 0, i32* %incr, align 4, !dbg !6575
  br label %bb7, !dbg !6575

bb7:                                              ; preds = %bb5, %bb2
  %11 = load i64* %len_addr, align 8, !dbg !6576
  %12 = load i64* %NMC_addr, align 8, !dbg !6576
  %13 = icmp ugt i64 %11, %12, !dbg !6576
  br i1 %13, label %bb8, label %bb9, !dbg !6576

bb8:                                              ; preds = %bb7
  %14 = load i64* %NMC_addr, align 8, !dbg !6577
  store i64 %14, i64* %len_addr, align 8, !dbg !6577
  br label %bb9, !dbg !6577

bb9:                                              ; preds = %bb8, %bb7
  %15 = load i64* %len_addr, align 8, !dbg !6578
  store i64 %15, i64* %count, align 8, !dbg !6578
  %16 = load i8*** %src_addr, align 8, !dbg !6579
  %17 = load i8** %16, align 8, !dbg !6579
  store i8* %17, i8** %s, align 8, !dbg !6579
  br label %bb15, !dbg !6579

bb10:                                             ; preds = %bb15
  %18 = load i8** %s, align 8, !dbg !6580
  %19 = load i8* %18, align 1, !dbg !6580
  %20 = zext i8 %19 to i32, !dbg !6580
  %21 = load i32** %dst_addr, align 8, !dbg !6580
  store i32 %20, i32* %21, align 4, !dbg !6580
  %22 = load i32** %dst_addr, align 8, !dbg !6580
  %23 = load i32* %22, align 4, !dbg !6580
  %24 = icmp eq i32 %23, 0, !dbg !6580
  br i1 %24, label %bb11, label %bb12, !dbg !6580

bb11:                                             ; preds = %bb10
  store i8* null, i8** %s, align 8, !dbg !6581
  br label %bb16, !dbg !6581

bb12:                                             ; preds = %bb10
  %25 = load i32** %dst_addr, align 8, !dbg !6582
  %26 = load i32* %25, align 4, !dbg !6582
  %27 = icmp sgt i32 %26, 127, !dbg !6582
  br i1 %27, label %bb13, label %bb14, !dbg !6582

bb13:                                             ; preds = %bb12
  store i32 84, i32* @errno, align 4, !dbg !6583
  store i64 -1, i64* %0, align 8, !dbg !6584
  br label %bb20, !dbg !6584

bb14:                                             ; preds = %bb12
  %28 = load i8** %s, align 8, !dbg !6585
  %29 = getelementptr inbounds i8* %28, i64 1, !dbg !6585
  store i8* %29, i8** %s, align 8, !dbg !6585
  %30 = load i32** %dst_addr, align 8, !dbg !6586
  %31 = load i32* %incr, align 4, !dbg !6586
  %32 = sext i32 %31 to i64, !dbg !6586
  %33 = getelementptr inbounds i32* %30, i64 %32, !dbg !6586
  store i32* %33, i32** %dst_addr, align 8, !dbg !6586
  %34 = load i64* %count, align 8, !dbg !6587
  %35 = sub i64 %34, 1, !dbg !6587
  store i64 %35, i64* %count, align 8, !dbg !6587
  br label %bb15, !dbg !6587

bb15:                                             ; preds = %bb14, %bb9
  %36 = load i64* %count, align 8, !dbg !6588
  %37 = icmp ne i64 %36, 0, !dbg !6588
  br i1 %37, label %bb10, label %bb16, !dbg !6588

bb16:                                             ; preds = %bb15, %bb11
  %wcbuf17 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !6589
  %38 = load i32** %dst_addr, align 8, !dbg !6589
  %39 = icmp ne i32* %wcbuf17, %38, !dbg !6589
  br i1 %39, label %bb18, label %bb19, !dbg !6589

bb18:                                             ; preds = %bb16
  %40 = load i8*** %src_addr, align 8, !dbg !6590
  %41 = load i8** %s, align 8, !dbg !6590
  store i8* %41, i8** %40, align 8, !dbg !6590
  br label %bb19, !dbg !6590

bb19:                                             ; preds = %bb18, %bb16
  %42 = load i64* %len_addr, align 8, !dbg !6591
  %43 = load i64* %count, align 8, !dbg !6591
  %44 = sub i64 %42, %43, !dbg !6591
  store i64 %44, i64* %0, align 8, !dbg !6591
  br label %bb20, !dbg !6591

bb20:                                             ; preds = %bb19, %bb13
  %45 = load i64* %0, align 8, !dbg !6584
  store i64 %45, i64* %retval, align 8, !dbg !6584
  %retval21 = load i64* %retval, !dbg !6584
  ret i64 %retval21, !dbg !6584
}

define i8* @memcpy(i8* noalias %s1, i8* noalias %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %r1 = alloca i8*
  %r2 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6592
  store i8* %1, i8** %r1, align 8, !dbg !6592
  %2 = load i8** %s2_addr, align 8, !dbg !6594
  store i8* %2, i8** %r2, align 8, !dbg !6594
  br label %bb1, !dbg !6594

bb:                                               ; preds = %bb1
  %3 = load i8** %r2, align 8, !dbg !6595
  %4 = load i8* %3, align 1, !dbg !6595
  %5 = load i8** %r1, align 8, !dbg !6595
  store i8 %4, i8* %5, align 1, !dbg !6595
  %6 = load i8** %r1, align 8, !dbg !6595
  %7 = getelementptr inbounds i8* %6, i64 1, !dbg !6595
  store i8* %7, i8** %r1, align 8, !dbg !6595
  %8 = load i8** %r2, align 8, !dbg !6595
  %9 = getelementptr inbounds i8* %8, i64 1, !dbg !6595
  store i8* %9, i8** %r2, align 8, !dbg !6595
  %10 = load i64* %n_addr, align 8, !dbg !6596
  %11 = sub i64 %10, 1, !dbg !6596
  store i64 %11, i64* %n_addr, align 8, !dbg !6596
  br label %bb1, !dbg !6596

bb1:                                              ; preds = %bb, %entry
  %12 = load i64* %n_addr, align 8, !dbg !6597
  %13 = icmp ne i64 %12, 0, !dbg !6597
  br i1 %13, label %bb, label %bb2, !dbg !6597

bb2:                                              ; preds = %bb1
  %14 = load i8** %s1_addr, align 8, !dbg !6598
  store i8* %14, i8** %0, align 8, !dbg !6598
  %15 = load i8** %0, align 8, !dbg !6598
  store i8* %15, i8** %retval, align 8, !dbg !6598
  %retval3 = load i8** %retval, !dbg !6598
  ret i8* %retval3, !dbg !6598
}

define i8* @memmove(i8* %s1, i8* %s2, i64 %n) nounwind {
entry:
  %s1_addr = alloca i8*, align 8
  %s2_addr = alloca i8*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %s = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s1, i8** %s1_addr
  store i8* %s2, i8** %s2_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s1_addr, align 8, !dbg !6599
  store i8* %1, i8** %s, align 8, !dbg !6599
  %2 = load i8** %s2_addr, align 8, !dbg !6601
  store i8* %2, i8** %p, align 8, !dbg !6601
  %3 = load i8** %p, align 8, !dbg !6602
  %4 = load i8** %s, align 8, !dbg !6602
  %5 = icmp uge i8* %3, %4, !dbg !6602
  br i1 %5, label %bb2, label %bb6, !dbg !6602

bb1:                                              ; preds = %bb2
  %6 = load i8** %p, align 8, !dbg !6603
  %7 = load i8* %6, align 1, !dbg !6603
  %8 = load i8** %s, align 8, !dbg !6603
  store i8 %7, i8* %8, align 1, !dbg !6603
  %9 = load i8** %s, align 8, !dbg !6603
  %10 = getelementptr inbounds i8* %9, i64 1, !dbg !6603
  store i8* %10, i8** %s, align 8, !dbg !6603
  %11 = load i8** %p, align 8, !dbg !6603
  %12 = getelementptr inbounds i8* %11, i64 1, !dbg !6603
  store i8* %12, i8** %p, align 8, !dbg !6603
  %13 = load i64* %n_addr, align 8, !dbg !6604
  %14 = sub i64 %13, 1, !dbg !6604
  store i64 %14, i64* %n_addr, align 8, !dbg !6604
  br label %bb2, !dbg !6604

bb2:                                              ; preds = %entry, %bb1
  %15 = load i64* %n_addr, align 8, !dbg !6605
  %16 = icmp ne i64 %15, 0, !dbg !6605
  br i1 %16, label %bb1, label %bb7, !dbg !6605

bb5:                                              ; preds = %bb6
  %17 = load i64* %n_addr, align 8, !dbg !6606
  %18 = sub i64 %17, 1, !dbg !6606
  store i64 %18, i64* %n_addr, align 8, !dbg !6606
  %19 = load i8** %p, align 8, !dbg !6607
  %20 = load i64* %n_addr, align 8, !dbg !6607
  %21 = getelementptr inbounds i8* %19, i64 %20, !dbg !6607
  %22 = load i8* %21, align 1, !dbg !6607
  %23 = load i8** %s, align 8, !dbg !6607
  %24 = load i64* %n_addr, align 8, !dbg !6607
  %25 = getelementptr inbounds i8* %23, i64 %24, !dbg !6607
  store i8 %22, i8* %25, align 1, !dbg !6607
  br label %bb6, !dbg !6607

bb6:                                              ; preds = %entry, %bb5
  %26 = load i64* %n_addr, align 8, !dbg !6608
  %27 = icmp ne i64 %26, 0, !dbg !6608
  br i1 %27, label %bb5, label %bb7, !dbg !6608

bb7:                                              ; preds = %bb2, %bb6
  %28 = load i8** %s1_addr, align 8, !dbg !6609
  store i8* %28, i8** %0, align 8, !dbg !6609
  %29 = load i8** %0, align 8, !dbg !6609
  store i8* %29, i8** %retval, align 8, !dbg !6609
  %retval8 = load i8** %retval, !dbg !6609
  ret i8* %retval8, !dbg !6609
}

define i8* @memset(i8* %s, i32 %c, i64 %n) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %c_addr = alloca i32, align 4
  %n_addr = alloca i64, align 8
  %retval = alloca i8*
  %0 = alloca i8*
  %p = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %c, i32* %c_addr
  store i64 %n, i64* %n_addr
  %1 = load i8** %s_addr, align 8, !dbg !6610
  store i8* %1, i8** %p, align 8, !dbg !6610
  br label %bb1, !dbg !6610

bb:                                               ; preds = %bb1
  %2 = load i32* %c_addr, align 4, !dbg !6612
  %3 = trunc i32 %2 to i8, !dbg !6612
  %4 = load i8** %p, align 8, !dbg !6612
  store i8 %3, i8* %4, align 1, !dbg !6612
  %5 = load i8** %p, align 8, !dbg !6612
  %6 = getelementptr inbounds i8* %5, i64 1, !dbg !6612
  store i8* %6, i8** %p, align 8, !dbg !6612
  %7 = load i64* %n_addr, align 8, !dbg !6613
  %8 = sub i64 %7, 1, !dbg !6613
  store i64 %8, i64* %n_addr, align 8, !dbg !6613
  br label %bb1, !dbg !6613

bb1:                                              ; preds = %bb, %entry
  %9 = load i64* %n_addr, align 8, !dbg !6614
  %10 = icmp ne i64 %9, 0, !dbg !6614
  br i1 %10, label %bb, label %bb2, !dbg !6614

bb2:                                              ; preds = %bb1
  %11 = load i8** %s_addr, align 8, !dbg !6615
  store i8* %11, i8** %0, align 8, !dbg !6615
  %12 = load i8** %0, align 8, !dbg !6615
  store i8* %12, i8** %retval, align 8, !dbg !6615
  %retval3 = load i8** %retval, !dbg !6615
  ret i8* %retval3, !dbg !6615
}

define hidden i32 @__raise(i32 %signo) nounwind {
entry:
  %signo_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %signo, i32* %signo_addr
  %1 = call i32 @getpid() nounwind, !dbg !6616
  %2 = load i32* %signo_addr, align 4, !dbg !6616
  %3 = call i32 @kill(i32 %1, i32 %2) nounwind, !dbg !6616
  store i32 %3, i32* %0, align 4, !dbg !6616
  %4 = load i32* %0, align 4, !dbg !6616
  store i32 %4, i32* %retval, align 4, !dbg !6616
  %retval1 = load i32* %retval, !dbg !6616
  ret i32 %retval1, !dbg !6616
}

declare i32 @getpid() nounwind

define i32 @__libc_sigaction(i32 %sig, %struct.sigaction* %act, %struct.sigaction* %oact) nounwind {
entry:
  %sig_addr = alloca i32, align 4
  %act_addr = alloca %struct.sigaction*, align 8
  %oact_addr = alloca %struct.sigaction*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.1 = alloca %struct.kernel_sigaction*
  %iftmp.0 = alloca %struct.kernel_sigaction*
  %result = alloca i32
  %kact = alloca %struct.kernel_sigaction
  %koact = alloca %struct.kernel_sigaction
  %"alloca point" = bitcast i32 0 to i32
  store i32 %sig, i32* %sig_addr
  store %struct.sigaction* %act, %struct.sigaction** %act_addr
  store %struct.sigaction* %oact, %struct.sigaction** %oact_addr
  %1 = load %struct.sigaction** %act_addr, align 8, !dbg !6618
  %2 = icmp ne %struct.sigaction* %1, null, !dbg !6618
  br i1 %2, label %bb, label %bb1, !dbg !6618

bb:                                               ; preds = %entry
  %3 = load %struct.sigaction** %act_addr, align 8, !dbg !6620
  %4 = getelementptr inbounds %struct.sigaction* %3, i32 0, i32 0, !dbg !6620
  %5 = getelementptr inbounds %5* %4, i32 0, i32 0, !dbg !6620
  %6 = load void (i32)** %5, align 8, !dbg !6620
  %7 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 0, !dbg !6620
  store void (i32)* %6, void (i32)** %7, align 8, !dbg !6620
  %8 = load %struct.sigaction** %act_addr, align 8, !dbg !6621
  %9 = getelementptr inbounds %struct.sigaction* %8, i32 0, i32 1, !dbg !6621
  %10 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 3, !dbg !6621
  %11 = bitcast %struct.__sigset_t* %10 to i8*, !dbg !6621
  %12 = bitcast %struct.__sigset_t* %9 to i8*, !dbg !6621
  %13 = call i8* @memcpy(i8* noalias %11, i8* noalias %12, i64 128) nounwind, !dbg !6621
  %14 = load %struct.sigaction** %act_addr, align 8, !dbg !6622
  %15 = getelementptr inbounds %struct.sigaction* %14, i32 0, i32 2, !dbg !6622
  %16 = load i32* %15, align 8, !dbg !6622
  %17 = sext i32 %16 to i64, !dbg !6622
  %18 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 1, !dbg !6622
  store i64 %17, i64* %18, align 8, !dbg !6622
  %19 = load %struct.sigaction** %act_addr, align 8, !dbg !6623
  %20 = getelementptr inbounds %struct.sigaction* %19, i32 0, i32 3, !dbg !6623
  %21 = load void ()** %20, align 8, !dbg !6623
  %22 = getelementptr inbounds %struct.kernel_sigaction* %kact, i32 0, i32 2, !dbg !6623
  store void ()* %21, void ()** %22, align 8, !dbg !6623
  br label %bb1, !dbg !6623

bb1:                                              ; preds = %bb, %entry
  %23 = load %struct.sigaction** %oact_addr, align 8, !dbg !6624
  %24 = icmp ne %struct.sigaction* %23, null, !dbg !6624
  br i1 %24, label %bb2, label %bb3, !dbg !6624

bb2:                                              ; preds = %bb1
  store %struct.kernel_sigaction* %koact, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6624
  br label %bb4, !dbg !6624

bb3:                                              ; preds = %bb1
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6624
  br label %bb4, !dbg !6624

bb4:                                              ; preds = %bb3, %bb2
  %25 = load %struct.sigaction** %act_addr, align 8, !dbg !6624
  %26 = icmp ne %struct.sigaction* %25, null, !dbg !6624
  br i1 %26, label %bb5, label %bb6, !dbg !6624

bb5:                                              ; preds = %bb4
  store %struct.kernel_sigaction* %kact, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6624
  br label %bb7, !dbg !6624

bb6:                                              ; preds = %bb4
  store %struct.kernel_sigaction* null, %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6624
  br label %bb7, !dbg !6624

bb7:                                              ; preds = %bb6, %bb5
  %27 = load i32* %sig_addr, align 4, !dbg !6624
  %28 = load %struct.kernel_sigaction** %iftmp.1, align 8, !dbg !6624
  %29 = load %struct.kernel_sigaction** %iftmp.0, align 8, !dbg !6624
  %30 = call i32 bitcast (i32 (i32, %struct.sigaction*, %struct.sigaction*, i64)* @__syscall_rt_sigaction to i32 (i32, %struct.kernel_sigaction*, %struct.kernel_sigaction*, i64)*)(i32 %27, %struct.kernel_sigaction* %28, %struct.kernel_sigaction* %29, i64
  store i32 %30, i32* %result, align 4, !dbg !6624
  %31 = load %struct.sigaction** %oact_addr, align 8, !dbg !6625
  %32 = icmp ne %struct.sigaction* %31, null, !dbg !6625
  br i1 %32, label %bb8, label %bb10, !dbg !6625

bb8:                                              ; preds = %bb7
  %33 = load i32* %result, align 4, !dbg !6625
  %34 = icmp sge i32 %33, 0, !dbg !6625
  br i1 %34, label %bb9, label %bb10, !dbg !6625

bb9:                                              ; preds = %bb8
  %35 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 0, !dbg !6626
  %36 = load void (i32)** %35, align 8, !dbg !6626
  %37 = load %struct.sigaction** %oact_addr, align 8, !dbg !6626
  %38 = getelementptr inbounds %struct.sigaction* %37, i32 0, i32 0, !dbg !6626
  %39 = getelementptr inbounds %5* %38, i32 0, i32 0, !dbg !6626
  store void (i32)* %36, void (i32)** %39, align 8, !dbg !6626
  %40 = load %struct.sigaction** %oact_addr, align 8, !dbg !6627
  %41 = getelementptr inbounds %struct.sigaction* %40, i32 0, i32 1, !dbg !6627
  %42 = bitcast %struct.__sigset_t* %41 to i8*, !dbg !6627
  %43 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 3, !dbg !6627
  %44 = bitcast %struct.__sigset_t* %43 to i8*, !dbg !6627
  %45 = call i8* @memcpy(i8* noalias %42, i8* noalias %44, i64 128) nounwind, !dbg !6627
  %46 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 1, !dbg !6628
  %47 = load i64* %46, align 8, !dbg !6628
  %48 = trunc i64 %47 to i32, !dbg !6628
  %49 = load %struct.sigaction** %oact_addr, align 8, !dbg !6628
  %50 = getelementptr inbounds %struct.sigaction* %49, i32 0, i32 2, !dbg !6628
  store i32 %48, i32* %50, align 8, !dbg !6628
  %51 = getelementptr inbounds %struct.kernel_sigaction* %koact, i32 0, i32 2, !dbg !6629
  %52 = load void ()** %51, align 8, !dbg !6629
  %53 = load %struct.sigaction** %oact_addr, align 8, !dbg !6629
  %54 = getelementptr inbounds %struct.sigaction* %53, i32 0, i32 3, !dbg !6629
  store void ()* %52, void ()** %54, align 8, !dbg !6629
  br label %bb10, !dbg !6629

bb10:                                             ; preds = %bb9, %bb8, %bb7
  %55 = load i32* %result, align 4, !dbg !6630
  store i32 %55, i32* %0, align 4, !dbg !6630
  %56 = load i32* %0, align 4, !dbg !6630
  store i32 %56, i32* %retval, align 4, !dbg !6630
  %retval11 = load i32* %retval, !dbg !6630
  ret i32 %retval11, !dbg !6630
}

define i8* @strerror(i32 %errnum) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  %1 = load i32* %errnum_addr, align 4, !dbg !6631
  %2 = call i32 @__xpg_strerror_r(i32 %1, i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i64 50) nounwind, !dbg !6631
  store i8* getelementptr inbounds ([50 x i8]* @buf.1212, i64 0, i64 0), i8** %0, align 8, !dbg !6633
  %3 = load i8** %0, align 8, !dbg !6633
  store i8* %3, i8** %retval, align 8, !dbg !6633
  %retval1 = load i8** %retval, !dbg !6633
  ret i8* %retval1, !dbg !6633
}

define internal i64 @_fp_out_narrow(%4* %fp, i64 %type, i64 %len, i64 %buf) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %type_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %buf_addr = alloca i64, align 8
  %retval = alloca i64
  %iftmp.3 = alloca i64
  %0 = alloca i64
  %r = alloca i64
  %buflen = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i64 %type, i64* %type_addr
  store i64 %len, i64* %len_addr
  store i64 %buf, i64* %buf_addr
  store i64 0, i64* %r, align 8, !dbg !6634
  %1 = load i64* %type_addr, align 8, !dbg !6636
  %2 = and i64 %1, 128, !dbg !6636
  %3 = icmp ne i64 %2, 0, !dbg !6636
  br i1 %3, label %bb, label %bb4, !dbg !6636

bb:                                               ; preds = %entry
  %4 = load i64* %buf_addr, align 8, !dbg !6637
  %5 = inttoptr i64 %4 to i8*, !dbg !6637
  %6 = call i64 @strlen(i8* %5) nounwind readonly, !dbg !6637
  %7 = trunc i64 %6 to i32, !dbg !6637
  store i32 %7, i32* %buflen, align 4, !dbg !6637
  %8 = load i32* %buflen, align 4, !dbg !6639
  %9 = sext i32 %8 to i64, !dbg !6639
  %10 = load i64* %len_addr, align 8, !dbg !6639
  %11 = sub nsw i64 %10, %9, !dbg !6639
  store i64 %11, i64* %len_addr, align 8, !dbg !6639
  %12 = load i64* %len_addr, align 8, !dbg !6639
  %13 = icmp sgt i64 %12, 0, !dbg !6639
  br i1 %13, label %bb1, label %bb3, !dbg !6639

bb1:                                              ; preds = %bb
  %14 = load i64* %len_addr, align 8, !dbg !6640
  %15 = load i64* %type_addr, align 8, !dbg !6640
  %16 = trunc i64 %15 to i32, !dbg !6640
  %17 = and i32 %16, 127, !dbg !6640
  %18 = load %4** %fp_addr, align 8, !dbg !6640
  %19 = call i64 @_charpad(%4* noalias %18, i32 %17, i64 %14) nounwind, !dbg !6640
  store i64 %19, i64* %r, align 8, !dbg !6640
  %20 = load i64* %len_addr, align 8, !dbg !6640
  %21 = load i64* %r, align 8, !dbg !6640
  %22 = icmp ne i64 %21, %20, !dbg !6640
  br i1 %22, label %bb2, label %bb3, !dbg !6640

bb2:                                              ; preds = %bb1
  %23 = load i64* %r, align 8, !dbg !6641
  store i64 %23, i64* %0, align 8, !dbg !6641
  br label %bb8, !dbg !6641

bb3:                                              ; preds = %bb1, %bb
  %24 = load i32* %buflen, align 4, !dbg !6642
  %25 = sext i32 %24 to i64, !dbg !6642
  store i64 %25, i64* %len_addr, align 8, !dbg !6642
  br label %bb4, !dbg !6642

bb4:                                              ; preds = %bb3, %entry
  %26 = load i64* %len_addr, align 8, !dbg !6643
  %27 = icmp sgt i64 %26, 0, !dbg !6643
  br i1 %27, label %bb5, label %bb6, !dbg !6643

bb5:                                              ; preds = %bb4
  %28 = load i64* %len_addr, align 8, !dbg !6643
  %29 = load i64* %buf_addr, align 8, !dbg !6643
  %30 = inttoptr i64 %29 to i8*, !dbg !6643
  %31 = load %4** %fp_addr, align 8, !dbg !6643
  %32 = call i64 @__stdio_fwrite(i8* noalias %30, i64 %28, %4* noalias %31) nounwind, !dbg !6643
  store i64 %32, i64* %iftmp.3, align 8, !dbg !6643
  br label %bb7, !dbg !6643

bb6:                                              ; preds = %bb4
  store i64 0, i64* %iftmp.3, align 8, !dbg !6643
  br label %bb7, !dbg !6643

bb7:                                              ; preds = %bb6, %bb5
  %33 = load i64* %iftmp.3, align 8, !dbg !6643
  %34 = load i64* %r, align 8, !dbg !6643
  %35 = add i64 %33, %34, !dbg !6643
  store i64 %35, i64* %0, align 8, !dbg !6643
  br label %bb8, !dbg !6643

bb8:                                              ; preds = %bb7, %bb2
  %36 = load i64* %0, align 8, !dbg !6641
  store i64 %36, i64* %retval, align 8, !dbg !6641
  %retval9 = load i64* %retval, !dbg !6641
  ret i64 %retval9, !dbg !6641
}

define internal i64 @_charpad(%4* noalias %stream, i32 %padchar, i64 %numpad) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %padchar_addr = alloca i32, align 4
  %numpad_addr = alloca i64, align 8
  %retval = alloca i64
  %0 = alloca i64
  %todo = alloca i64
  %pad = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i32 %padchar, i32* %padchar_addr
  store i64 %numpad, i64* %numpad_addr
  %1 = load i64* %numpad_addr, align 8, !dbg !6644
  store i64 %1, i64* %todo, align 8, !dbg !6644
  %2 = load i32* %padchar_addr, align 4, !dbg !6646
  %3 = trunc i32 %2 to i8, !dbg !6646
  %4 = getelementptr inbounds [1 x i8]* %pad, i64 0, i64 0, !dbg !6646
  store i8 %3, i8* %4, align 1, !dbg !6646
  br label %bb1, !dbg !6646

bb:                                               ; preds = %bb2
  %5 = load i64* %todo, align 8, !dbg !6647
  %6 = sub i64 %5, 1, !dbg !6647
  store i64 %6, i64* %todo, align 8, !dbg !6647
  br label %bb1, !dbg !6647

bb1:                                              ; preds = %bb, %entry
  %7 = load i64* %todo, align 8, !dbg !6648
  %8 = icmp eq i64 %7, 0, !dbg !6648
  br i1 %8, label %bb5, label %bb2, !dbg !6648

bb2:                                              ; preds = %bb1
  %pad3 = bitcast [1 x i8]* %pad to i8*, !dbg !6648
  %9 = load %4** %stream_addr, align 8, !dbg !6648
  %10 = call i64 @__stdio_fwrite(i8* noalias %pad3, i64 1, %4* noalias %9) nounwind, !dbg !6648
  %11 = icmp eq i64 %10, 1, !dbg !6648
  br i1 %11, label %bb, label %bb5, !dbg !6648

bb5:                                              ; preds = %bb2, %bb1
  %12 = load i64* %numpad_addr, align 8, !dbg !6649
  %13 = load i64* %todo, align 8, !dbg !6649
  %14 = sub i64 %12, %13, !dbg !6649
  store i64 %14, i64* %0, align 8, !dbg !6649
  %15 = load i64* %0, align 8, !dbg !6649
  store i64 %15, i64* %retval, align 8, !dbg !6649
  %retval6 = load i64* %retval, !dbg !6649
  ret i64 %retval6, !dbg !6649
}

define internal i32 @_do_one_spec(%4* noalias %stream, %struct.ppfs_t* %ppfs, i32* %count) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %count_addr = alloca i32*, align 8
  %retval = alloca i32
  %iftmp.26 = alloca i64
  %iftmp.24 = alloca i64
  %iftmp.21 = alloca i32
  %iftmp.20 = alloca i64
  %iftmp.19 = alloca i64
  %iftmp.17 = alloca i64
  %iftmp.15 = alloca x86_fp80
  %iftmp.13 = alloca i32
  %iftmp.12 = alloca i32
  %iftmp.11 = alloca i32
  %iftmp.9 = alloca i32
  %0 = alloca i32
  %argptr = alloca [1 x i8*]
  %argtype = alloca i32*
  %ws = alloca i32*
  %mbstate = alloca %struct.__mbstate_t
  %slen = alloca i64
  %base = alloca i32
  %numpad = alloca i32
  %alphacase = alloca i32
  %numfill = alloca i32
  %prefix_num = alloca i32
  %padchar = alloca i8
  %buf = alloca [128 x i8]
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %s = alloca i8*
  %nf = alloca i64
  %t = alloca i64
  %t117 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32* %count, i32** %count_addr
  store i32* null, i32** %ws, align 8, !dbg !6650
  store i32 0, i32* %numfill, align 4, !dbg !6652
  store i32 11, i32* %prefix_num, align 4, !dbg !6653
  store i8 32, i8* %padchar, align 1, !dbg !6654
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6655
  %2 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %1) nounwind, !dbg !6655
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6656
  call void @_ppfs_setargs(%struct.ppfs_t* %3) nounwind, !dbg !6656
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6657
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 6, !dbg !6657
  %6 = getelementptr inbounds [9 x i32]* %5, i64 0, i64 0, !dbg !6657
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6657
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 5, !dbg !6657
  %9 = getelementptr inbounds [4 x i8]* %8, i64 0, i64 2, !dbg !6657
  %10 = load i8* %9, align 1, !dbg !6657
  %11 = zext i8 %10 to i32, !dbg !6657
  %12 = sext i32 %11 to i64, !dbg !6657
  %13 = getelementptr inbounds i32* %6, i64 %12, !dbg !6657
  %14 = getelementptr inbounds i32* %13, i64 -1, !dbg !6657
  store i32* %14, i32** %argtype, align 8, !dbg !6657
  %15 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6658
  %16 = getelementptr inbounds %struct.ppfs_t* %15, i32 0, i32 8, !dbg !6658
  %17 = getelementptr inbounds [9 x %union.argvalue_t]* %16, i64 0, i64 0, !dbg !6658
  store %union.argvalue_t* %17, %union.argvalue_t** %p, align 8, !dbg !6658
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6660
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 2, !dbg !6660
  %20 = load i32* %19, align 4, !dbg !6660
  %21 = icmp sgt i32 %20, 0, !dbg !6660
  br i1 %21, label %bb, label %bb1, !dbg !6660

bb:                                               ; preds = %entry
  %22 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6661
  %23 = getelementptr inbounds %struct.ppfs_t* %22, i32 0, i32 5, !dbg !6661
  %24 = getelementptr inbounds [4 x i8]* %23, i64 0, i64 2, !dbg !6661
  %25 = load i8* %24, align 1, !dbg !6661
  %26 = zext i8 %25 to i32, !dbg !6661
  %27 = sub nsw i32 %26, 1, !dbg !6661
  %28 = load %union.argvalue_t** %p, align 8, !dbg !6661
  %29 = sext i32 %27 to i64, !dbg !6661
  %30 = getelementptr inbounds %union.argvalue_t* %28, i64 %29, !dbg !6661
  store %union.argvalue_t* %30, %union.argvalue_t** %p, align 8, !dbg !6661
  br label %bb1, !dbg !6661

bb1:                                              ; preds = %bb, %entry
  store i32 0, i32* %i, align 4, !dbg !6662
  br label %bb3, !dbg !6662

bb2:                                              ; preds = %bb3
  %31 = load i32* %i, align 4, !dbg !6663
  %32 = sext i32 %31 to i64, !dbg !6663
  %33 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 %32, !dbg !6663
  %34 = load %union.argvalue_t** %p, align 8, !dbg !6663
  %35 = bitcast %union.argvalue_t* %34 to i8*, !dbg !6663
  store i8* %35, i8** %33, align 8, !dbg !6663
  %36 = load %union.argvalue_t** %p, align 8, !dbg !6663
  %37 = getelementptr inbounds %union.argvalue_t* %36, i64 1, !dbg !6663
  store %union.argvalue_t* %37, %union.argvalue_t** %p, align 8, !dbg !6663
  %38 = load i32* %i, align 4, !dbg !6662
  %39 = add nsw i32 %38, 1, !dbg !6662
  store i32 %39, i32* %i, align 4, !dbg !6662
  br label %bb3, !dbg !6662

bb3:                                              ; preds = %bb2, %bb1
  %40 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6662
  %41 = getelementptr inbounds %struct.ppfs_t* %40, i32 0, i32 3, !dbg !6662
  %42 = load i32* %41, align 16, !dbg !6662
  %43 = load i32* %i, align 4, !dbg !6662
  %44 = icmp sgt i32 %42, %43, !dbg !6662
  br i1 %44, label %bb2, label %bb4, !dbg !6662

bb4:                                              ; preds = %bb3
  store i8* null, i8** %s, align 8, !dbg !6664
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6666
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 4, !dbg !6666
  %47 = load i32* %46, align 4, !dbg !6666
  %48 = icmp eq i32 %47, 0, !dbg !6666
  br i1 %48, label %bb5, label %bb6, !dbg !6666

bb5:                                              ; preds = %bb4
  %49 = load i32** %count_addr, align 8, !dbg !6667
  %50 = load i32* %49, align 4, !dbg !6667
  %51 = sext i32 %50 to i64, !dbg !6667
  %52 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6667
  %53 = getelementptr inbounds %struct.ppfs_t* %52, i32 0, i32 1, !dbg !6667
  %54 = getelementptr inbounds %struct.printf_info* %53, i32 0, i32 3, !dbg !6667
  %55 = load i32* %54, align 4, !dbg !6667
  %56 = and i32 %55, 3840, !dbg !6667
  %57 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6667
  %58 = load i8** %57, align 8, !dbg !6667
  %59 = bitcast i8* %58 to i8**, !dbg !6667
  %60 = load i8** %59, align 8, !dbg !6667
  call void @_store_inttype(i8* %60, i32 %56, i64 %51) nounwind, !dbg !6667
  store i32 0, i32* %0, align 4, !dbg !6668
  br label %bb131, !dbg !6668

bb6:                                              ; preds = %bb4
  %61 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6669
  %62 = getelementptr inbounds %struct.ppfs_t* %61, i32 0, i32 4, !dbg !6669
  %63 = load i32* %62, align 4, !dbg !6669
  %64 = icmp ule i32 %63, 7, !dbg !6669
  br i1 %64, label %bb7, label %bb58, !dbg !6669

bb7:                                              ; preds = %bb6
  store i32 87, i32* %alphacase, align 4, !dbg !6670
  %65 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6671
  %66 = getelementptr inbounds %struct.ppfs_t* %65, i32 0, i32 4, !dbg !6671
  %67 = load i32* %66, align 4, !dbg !6671
  %68 = sub i32 %67, 1, !dbg !6671
  %69 = sext i32 %68 to i64, !dbg !6671
  %70 = getelementptr inbounds [7 x i8]* @spec_base.3674, i64 0, i64 %69, !dbg !6671
  %71 = load i8* %70, align 1, !dbg !6671
  %72 = sext i8 %71 to i32, !dbg !6671
  store i32 %72, i32* %base, align 4, !dbg !6671
  %73 = load i32* %base, align 4, !dbg !6671
  %74 = icmp eq i32 %73, 10, !dbg !6671
  br i1 %74, label %bb8, label %bb12, !dbg !6671

bb8:                                              ; preds = %bb7
  %75 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6672
  %76 = getelementptr inbounds %struct.ppfs_t* %75, i32 0, i32 1, !dbg !6672
  %77 = getelementptr inbounds %struct.printf_info* %76, i32 0, i32 3, !dbg !6672
  %78 = load i32* %77, align 4, !dbg !6672
  %79 = and i32 %78, 32, !dbg !6672
  %80 = icmp ne i32 %79, 0, !dbg !6672
  br i1 %80, label %bb9, label %bb10, !dbg !6672

bb9:                                              ; preds = %bb8
  store i32 44, i32* %alphacase, align 4, !dbg !6673
  br label %bb10, !dbg !6673

bb10:                                             ; preds = %bb9, %bb8
  %81 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6674
  %82 = getelementptr inbounds %struct.ppfs_t* %81, i32 0, i32 1, !dbg !6674
  %83 = getelementptr inbounds %struct.printf_info* %82, i32 0, i32 3, !dbg !6674
  %84 = load i32* %83, align 4, !dbg !6674
  %85 = and i32 %84, 64, !dbg !6674
  %86 = icmp ne i32 %85, 0, !dbg !6674
  br i1 %86, label %bb11, label %bb12, !dbg !6674

bb11:                                             ; preds = %bb10
  %87 = load i32* %alphacase, align 4, !dbg !6675
  %88 = or i32 %87, 128, !dbg !6675
  store i32 %88, i32* %alphacase, align 4, !dbg !6675
  br label %bb12, !dbg !6675

bb12:                                             ; preds = %bb11, %bb10, %bb7
  %89 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6676
  %90 = getelementptr inbounds %struct.ppfs_t* %89, i32 0, i32 4, !dbg !6676
  %91 = load i32* %90, align 4, !dbg !6676
  %92 = icmp ule i32 %91, 5, !dbg !6676
  br i1 %92, label %bb13, label %bb18, !dbg !6676

bb13:                                             ; preds = %bb12
  %93 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6677
  %94 = getelementptr inbounds %struct.ppfs_t* %93, i32 0, i32 4, !dbg !6677
  %95 = load i32* %94, align 4, !dbg !6677
  %96 = icmp eq i32 %95, 3, !dbg !6677
  br i1 %96, label %bb14, label %bb15, !dbg !6677

bb14:                                             ; preds = %bb13
  store i32 55, i32* %alphacase, align 4, !dbg !6678
  br label %bb15, !dbg !6678

bb15:                                             ; preds = %bb14, %bb13
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6679
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 4, !dbg !6679
  %99 = load i32* %98, align 4, !dbg !6679
  %100 = icmp eq i32 %99, 1, !dbg !6679
  br i1 %100, label %bb16, label %bb19, !dbg !6679

bb16:                                             ; preds = %bb15
  store i32 6, i32* %prefix_num, align 4, !dbg !6680
  br label %bb19, !dbg !6680

bb18:                                             ; preds = %bb12
  %101 = load i32* %base, align 4, !dbg !6681
  %102 = sub nsw i32 0, %101, !dbg !6681
  store i32 %102, i32* %base, align 4, !dbg !6681
  br label %bb19, !dbg !6681

bb19:                                             ; preds = %bb15, %bb16, %bb18
  %103 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6682
  %104 = getelementptr inbounds %struct.ppfs_t* %103, i32 0, i32 1, !dbg !6682
  %105 = getelementptr inbounds %struct.printf_info* %104, i32 0, i32 0, !dbg !6682
  %106 = load i32* %105, align 8, !dbg !6682
  %107 = icmp slt i32 %106, 0, !dbg !6682
  br i1 %107, label %bb20, label %bb21, !dbg !6682

bb20:                                             ; preds = %bb19
  %108 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6683
  %109 = getelementptr inbounds %struct.ppfs_t* %108, i32 0, i32 1, !dbg !6683
  %110 = getelementptr inbounds %struct.printf_info* %109, i32 0, i32 4, !dbg !6683
  %111 = load i32* %110, align 8, !dbg !6683
  %112 = trunc i32 %111 to i8, !dbg !6683
  store i8 %112, i8* %padchar, align 1, !dbg !6683
  br label %bb21, !dbg !6683

bb21:                                             ; preds = %bb20, %bb19
  %113 = load i32* %alphacase, align 4, !dbg !6684
  %114 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6684
  %115 = load i8** %114, align 8, !dbg !6684
  %116 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6684
  %117 = getelementptr inbounds %struct.ppfs_t* %116, i32 0, i32 4, !dbg !6684
  %118 = load i32* %117, align 4, !dbg !6684
  %119 = icmp ne i32 %118, 1, !dbg !6684
  br i1 %119, label %bb22, label %bb23, !dbg !6684

bb22:                                             ; preds = %bb21
  %120 = load i32** %argtype, align 8, !dbg !6684
  %121 = load i32* %120, align 4, !dbg !6684
  %122 = and i32 %121, 3840, !dbg !6684
  store i32 %122, i32* %iftmp.9, align 4, !dbg !6684
  br label %bb24, !dbg !6684

bb23:                                             ; preds = %bb21
  store i32 1024, i32* %iftmp.9, align 4, !dbg !6684
  br label %bb24, !dbg !6684

bb24:                                             ; preds = %bb23, %bb22
  %123 = load i32* %iftmp.9, align 4, !dbg !6684
  %124 = load i32* %base, align 4, !dbg !6684
  %125 = call i64 @_load_inttype(i32 %123, i8* %115, i32 %124) nounwind, !dbg !6684
  %buf25 = bitcast [128 x i8]* %buf to i8*, !dbg !6684
  %126 = getelementptr inbounds i8* %buf25, i64 128, !dbg !6684
  %127 = getelementptr inbounds i8* %126, i64 -1, !dbg !6684
  %128 = load i32* %base, align 4, !dbg !6684
  %129 = call i8* @_uintmaxtostr(i8* noalias %127, i64 %125, i32 %128, i32 %113) nounwind, !dbg !6684
  store i8* %129, i8** %s, align 8, !dbg !6684
  %130 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6685
  %131 = getelementptr inbounds %struct.ppfs_t* %130, i32 0, i32 4, !dbg !6685
  %132 = load i32* %131, align 4, !dbg !6685
  %133 = icmp ugt i32 %132, 5, !dbg !6685
  br i1 %133, label %bb26, label %bb32, !dbg !6685

bb26:                                             ; preds = %bb24
  %134 = load i8** %s, align 8, !dbg !6686
  %135 = load i8* %134, align 1, !dbg !6686
  %136 = icmp eq i8 %135, 45, !dbg !6686
  %137 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6687
  %138 = getelementptr inbounds %struct.ppfs_t* %137, i32 0, i32 1, !dbg !6687
  %139 = getelementptr inbounds %struct.printf_info* %138, i32 0, i32 3, !dbg !6687
  %140 = load i32* %139, align 4, !dbg !6687
  br i1 %136, label %bb27, label %bb28, !dbg !6686

bb27:                                             ; preds = %bb26
  %141 = or i32 %140, 2, !dbg !6687
  %142 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6687
  %143 = getelementptr inbounds %struct.ppfs_t* %142, i32 0, i32 1, !dbg !6687
  %144 = getelementptr inbounds %struct.printf_info* %143, i32 0, i32 3, !dbg !6687
  store i32 %141, i32* %144, align 4, !dbg !6687
  %145 = load i8** %s, align 8, !dbg !6688
  %146 = getelementptr inbounds i8* %145, i64 1, !dbg !6688
  store i8* %146, i8** %s, align 8, !dbg !6688
  store i32 2, i32* %prefix_num, align 4, !dbg !6689
  br label %bb32, !dbg !6689

bb28:                                             ; preds = %bb26
  %147 = and i32 %140, 2, !dbg !6690
  %148 = icmp ne i32 %147, 0, !dbg !6690
  br i1 %148, label %bb29, label %bb30, !dbg !6690

bb29:                                             ; preds = %bb28
  store i32 0, i32* %prefix_num, align 4, !dbg !6691
  br label %bb32, !dbg !6691

bb30:                                             ; preds = %bb28
  %149 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6692
  %150 = getelementptr inbounds %struct.ppfs_t* %149, i32 0, i32 1, !dbg !6692
  %151 = getelementptr inbounds %struct.printf_info* %150, i32 0, i32 3, !dbg !6692
  %152 = load i32* %151, align 4, !dbg !6692
  %153 = and i32 %152, 1, !dbg !6692
  %154 = trunc i32 %153 to i8, !dbg !6692
  %toBool = icmp ne i8 %154, 0, !dbg !6692
  br i1 %toBool, label %bb31, label %bb32, !dbg !6692

bb31:                                             ; preds = %bb30
  store i32 4, i32* %prefix_num, align 4, !dbg !6693
  br label %bb32, !dbg !6693

bb32:                                             ; preds = %bb31, %bb30, %bb29, %bb27, %bb24
  %buf33 = bitcast [128 x i8]* %buf to i8*, !dbg !6694
  %155 = getelementptr inbounds i8* %buf33, i64 128, !dbg !6694
  %156 = getelementptr inbounds i8* %155, i64 -1, !dbg !6694
  %157 = ptrtoint i8* %156 to i64, !dbg !6694
  %158 = load i8** %s, align 8, !dbg !6694
  %159 = ptrtoint i8* %158 to i64, !dbg !6694
  %160 = sub nsw i64 %157, %159, !dbg !6694
  store i64 %160, i64* %slen, align 8, !dbg !6694
  %161 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6695
  %162 = getelementptr inbounds %struct.ppfs_t* %161, i32 0, i32 1, !dbg !6695
  %163 = getelementptr inbounds %struct.printf_info* %162, i32 0, i32 0, !dbg !6695
  %164 = load i32* %163, align 8, !dbg !6695
  %165 = icmp sge i32 %164, 0, !dbg !6695
  br i1 %165, label %bb34, label %bb35, !dbg !6695

bb34:                                             ; preds = %bb32
  %166 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6695
  %167 = getelementptr inbounds %struct.ppfs_t* %166, i32 0, i32 1, !dbg !6695
  %168 = getelementptr inbounds %struct.printf_info* %167, i32 0, i32 0, !dbg !6695
  %169 = load i32* %168, align 8, !dbg !6695
  store i32 %169, i32* %iftmp.11, align 4, !dbg !6695
  br label %bb36, !dbg !6695

bb35:                                             ; preds = %bb32
  store i32 1, i32* %iftmp.11, align 4, !dbg !6695
  br label %bb36, !dbg !6695

bb36:                                             ; preds = %bb35, %bb34
  %170 = load i32* %iftmp.11, align 4, !dbg !6695
  store i32 %170, i32* %numfill, align 4, !dbg !6695
  %171 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6696
  %172 = getelementptr inbounds %struct.ppfs_t* %171, i32 0, i32 1, !dbg !6696
  %173 = getelementptr inbounds %struct.printf_info* %172, i32 0, i32 3, !dbg !6696
  %174 = load i32* %173, align 4, !dbg !6696
  %175 = and i32 %174, 16, !dbg !6696
  %176 = icmp ne i32 %175, 0, !dbg !6696
  br i1 %176, label %bb37, label %bb47, !dbg !6696

bb37:                                             ; preds = %bb36
  %177 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6697
  %178 = getelementptr inbounds %struct.ppfs_t* %177, i32 0, i32 4, !dbg !6697
  %179 = load i32* %178, align 4, !dbg !6697
  %180 = icmp ule i32 %179, 2, !dbg !6697
  br i1 %180, label %bb38, label %bb39, !dbg !6697

bb38:                                             ; preds = %bb37
  store i32 6, i32* %prefix_num, align 4, !dbg !6698
  br label %bb39, !dbg !6698

bb39:                                             ; preds = %bb38, %bb37
  %181 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6699
  %182 = getelementptr inbounds %struct.ppfs_t* %181, i32 0, i32 4, !dbg !6699
  %183 = load i32* %182, align 4, !dbg !6699
  %184 = icmp eq i32 %183, 3, !dbg !6699
  br i1 %184, label %bb40, label %bb41, !dbg !6699

bb40:                                             ; preds = %bb39
  store i32 9, i32* %prefix_num, align 4, !dbg !6700
  br label %bb41, !dbg !6700

bb41:                                             ; preds = %bb40, %bb39
  %185 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6701
  %186 = getelementptr inbounds %struct.ppfs_t* %185, i32 0, i32 4, !dbg !6701
  %187 = load i32* %186, align 4, !dbg !6701
  %188 = icmp eq i32 %187, 4, !dbg !6701
  br i1 %188, label %bb42, label %bb47, !dbg !6701

bb42:                                             ; preds = %bb41
  %189 = load i32* %numfill, align 4, !dbg !6701
  %190 = sext i32 %189 to i64, !dbg !6701
  %191 = load i64* %slen, align 8, !dbg !6701
  %192 = icmp ule i64 %190, %191, !dbg !6701
  br i1 %192, label %bb43, label %bb47, !dbg !6701

bb43:                                             ; preds = %bb42
  %193 = load i8** %s, align 8, !dbg !6702
  %194 = load i8* %193, align 1, !dbg !6702
  %195 = icmp ne i8 %194, 48, !dbg !6702
  br i1 %195, label %bb44, label %bb45, !dbg !6702

bb44:                                             ; preds = %bb43
  %196 = load i64* %slen, align 8, !dbg !6702
  %197 = trunc i64 %196 to i32, !dbg !6702
  %198 = add i32 %197, 1, !dbg !6702
  store i32 %198, i32* %iftmp.12, align 4, !dbg !6702
  br label %bb46, !dbg !6702

bb45:                                             ; preds = %bb43
  store i32 1, i32* %iftmp.12, align 4, !dbg !6702
  br label %bb46, !dbg !6702

bb46:                                             ; preds = %bb45, %bb44
  %199 = load i32* %iftmp.12, align 4, !dbg !6702
  store i32 %199, i32* %numfill, align 4, !dbg !6702
  br label %bb47, !dbg !6702

bb47:                                             ; preds = %bb46, %bb42, %bb41, %bb36
  %200 = load i8** %s, align 8, !dbg !6703
  %201 = load i8* %200, align 1, !dbg !6703
  %202 = icmp eq i8 %201, 48, !dbg !6703
  br i1 %202, label %bb48, label %bb54, !dbg !6703

bb48:                                             ; preds = %bb47
  %203 = load i32* %prefix_num, align 4, !dbg !6704
  %204 = icmp sgt i32 %203, 5, !dbg !6704
  br i1 %204, label %bb49, label %bb50, !dbg !6704

bb49:                                             ; preds = %bb48
  store i32 11, i32* %prefix_num, align 4, !dbg !6705
  br label %bb50, !dbg !6705

bb50:                                             ; preds = %bb49, %bb48
  %205 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6706
  %206 = getelementptr inbounds %struct.ppfs_t* %205, i32 0, i32 4, !dbg !6706
  %207 = load i32* %206, align 4, !dbg !6706
  %208 = icmp eq i32 %207, 1, !dbg !6706
  br i1 %208, label %bb51, label %bb52, !dbg !6706

bb51:                                             ; preds = %bb50
  store i8* getelementptr inbounds ([6 x i8]* @.str223, i64 0, i64 0), i8** %s, align 8, !dbg !6707
  store i64 5, i64* %slen, align 8, !dbg !6708
  store i32 0, i32* %numfill, align 4, !dbg !6709
  br label %bb54, !dbg !6709

bb52:                                             ; preds = %bb50
  %209 = load i32* %numfill, align 4, !dbg !6710
  %210 = icmp eq i32 %209, 0, !dbg !6710
  br i1 %210, label %bb53, label %bb54, !dbg !6710

bb53:                                             ; preds = %bb52
  store i64 0, i64* %slen, align 8, !dbg !6711
  br label %bb54, !dbg !6711

bb54:                                             ; preds = %bb53, %bb52, %bb51, %bb47
  %211 = load i32* %numfill, align 4, !dbg !6712
  %212 = sext i32 %211 to i64, !dbg !6712
  %213 = load i64* %slen, align 8, !dbg !6712
  %214 = icmp ugt i64 %212, %213, !dbg !6712
  br i1 %214, label %bb55, label %bb56, !dbg !6712

bb55:                                             ; preds = %bb54
  %215 = load i32* %numfill, align 4, !dbg !6712
  %216 = load i64* %slen, align 8, !dbg !6712
  %217 = trunc i64 %216 to i32, !dbg !6712
  %218 = sub i32 %215, %217, !dbg !6712
  store i32 %218, i32* %iftmp.13, align 4, !dbg !6712
  br label %bb57, !dbg !6712

bb56:                                             ; preds = %bb54
  store i32 0, i32* %iftmp.13, align 4, !dbg !6712
  br label %bb57, !dbg !6712

bb57:                                             ; preds = %bb56, %bb55
  %219 = load i32* %iftmp.13, align 4, !dbg !6712
  store i32 %219, i32* %numfill, align 4, !dbg !6712
  br label %bb93, !dbg !6712

bb58:                                             ; preds = %bb6
  %220 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6713
  %221 = getelementptr inbounds %struct.ppfs_t* %220, i32 0, i32 4, !dbg !6713
  %222 = load i32* %221, align 4, !dbg !6713
  %223 = icmp ule i32 %222, 15, !dbg !6713
  %224 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6714
  br i1 %223, label %bb59, label %bb65, !dbg !6713

bb59:                                             ; preds = %bb58
  %225 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 1, !dbg !6714
  %226 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6714
  %227 = getelementptr inbounds %struct.ppfs_t* %226, i32 0, i32 1, !dbg !6714
  %228 = getelementptr inbounds %struct.printf_info* %227, i32 0, i32 3, !dbg !6714
  %229 = load i32* %228, align 4, !dbg !6714
  %230 = and i32 %229, 2048, !dbg !6714
  %231 = icmp ne i32 %230, 0, !dbg !6714
  %232 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6714
  %233 = load i8** %232, align 8, !dbg !6714
  br i1 %231, label %bb60, label %bb61, !dbg !6714

bb60:                                             ; preds = %bb59
  %234 = bitcast i8* %233 to x86_fp80*, !dbg !6714
  %235 = load x86_fp80* %234, align 16, !dbg !6714
  store x86_fp80 %235, x86_fp80* %iftmp.15, align 16, !dbg !6714
  br label %bb62, !dbg !6714

bb61:                                             ; preds = %bb59
  %236 = bitcast i8* %233 to double*, !dbg !6714
  %237 = load double* %236, align 8, !dbg !6714
  %238 = fpext double %237 to x86_fp80, !dbg !6714
  store x86_fp80 %238, x86_fp80* %iftmp.15, align 16, !dbg !6714
  br label %bb62, !dbg !6714

bb62:                                             ; preds = %bb61, %bb60
  %239 = load %4** %stream_addr, align 8, !dbg !6714
  %240 = load x86_fp80* %iftmp.15, align 16, !dbg !6714
  %241 = call i64 @_fpmaxtostr(%4* %239, x86_fp80 %240, %struct.printf_info* %225, i64 (%4*, i64, i64, i64)* @_fp_out_narrow) nounwind, !dbg !6714
  store i64 %241, i64* %nf, align 8, !dbg !6714
  %242 = load i64* %nf, align 8, !dbg !6716
  %243 = icmp slt i64 %242, 0, !dbg !6716
  br i1 %243, label %bb63, label %bb64, !dbg !6716

bb63:                                             ; preds = %bb62
  store i32 -1, i32* %0, align 4, !dbg !6717
  br label %bb131, !dbg !6717

bb64:                                             ; preds = %bb62
  %244 = load i32** %count_addr, align 8, !dbg !6718
  %245 = load i32* %244, align 4, !dbg !6718
  %246 = load i64* %nf, align 8, !dbg !6718
  %247 = trunc i64 %246 to i32, !dbg !6718
  %248 = add i32 %245, %247, !dbg !6718
  %249 = load i32** %count_addr, align 8, !dbg !6718
  store i32 %248, i32* %249, align 4, !dbg !6718
  store i32 0, i32* %0, align 4, !dbg !6719
  br label %bb131, !dbg !6719

bb65:                                             ; preds = %bb58
  %250 = getelementptr inbounds %struct.ppfs_t* %224, i32 0, i32 4, !dbg !6720
  %251 = load i32* %250, align 4, !dbg !6720
  %252 = icmp ule i32 %251, 17, !dbg !6720
  br i1 %252, label %bb66, label %bb81, !dbg !6720

bb66:                                             ; preds = %bb65
  %253 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6721
  store i32 0, i32* %253, align 4, !dbg !6721
  %254 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6722
  %255 = getelementptr inbounds %struct.ppfs_t* %254, i32 0, i32 4, !dbg !6722
  %256 = load i32* %255, align 4, !dbg !6722
  %257 = icmp eq i32 %256, 17, !dbg !6722
  br i1 %257, label %bb67, label %bb76, !dbg !6722

bb67:                                             ; preds = %bb66
  %258 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6723
  %259 = load i8** %258, align 8, !dbg !6723
  %260 = bitcast i8* %259 to i32**, !dbg !6723
  %261 = load i32** %260, align 8, !dbg !6723
  store i32* %261, i32** %ws, align 8, !dbg !6723
  %262 = load i32** %ws, align 8, !dbg !6723
  %263 = icmp eq i32* %262, null, !dbg !6723
  br i1 %263, label %NULL_STRING, label %bb68, !dbg !6723

bb68:                                             ; preds = %bb67
  %264 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6724
  %265 = getelementptr inbounds %struct.ppfs_t* %264, i32 0, i32 1, !dbg !6724
  %266 = getelementptr inbounds %struct.printf_info* %265, i32 0, i32 0, !dbg !6724
  %267 = load i32* %266, align 8, !dbg !6724
  %268 = icmp sge i32 %267, 0, !dbg !6724
  br i1 %268, label %bb69, label %bb70, !dbg !6724

bb69:                                             ; preds = %bb68
  %269 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6724
  %270 = getelementptr inbounds %struct.ppfs_t* %269, i32 0, i32 1, !dbg !6724
  %271 = getelementptr inbounds %struct.printf_info* %270, i32 0, i32 0, !dbg !6724
  %272 = load i32* %271, align 8, !dbg !6724
  %273 = sext i32 %272 to i64, !dbg !6724
  store i64 %273, i64* %iftmp.17, align 8, !dbg !6724
  br label %bb71, !dbg !6724

bb70:                                             ; preds = %bb68
  store i64 -1, i64* %iftmp.17, align 8, !dbg !6724
  br label %bb71, !dbg !6724

bb71:                                             ; preds = %bb70, %bb69
  %ws72 = bitcast i32** %ws to i8*, !dbg !6724
  %274 = load i64* %iftmp.17, align 8, !dbg !6724
  %275 = call i64 @wcsrtombs(i8* noalias %ws72, i32** noalias %ws, i64 %274, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6724
  store i64 %275, i64* %slen, align 8, !dbg !6724
  %276 = load i64* %slen, align 8, !dbg !6724
  %277 = icmp eq i64 %276, -1, !dbg !6724
  br i1 %277, label %bb74, label %bb93, !dbg !6724

bb74:                                             ; preds = %bb71
  store i32 -1, i32* %0, align 4, !dbg !6725
  br label %bb131, !dbg !6725

bb76:                                             ; preds = %bb66
  %buf77 = bitcast [128 x i8]* %buf to i8*, !dbg !6726
  store i8* %buf77, i8** %s, align 8, !dbg !6726
  %278 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6727
  %279 = load i8** %278, align 8, !dbg !6727
  %280 = bitcast i8* %279 to i32*, !dbg !6727
  %281 = load i32* %280, align 4, !dbg !6727
  %282 = load i8** %s, align 8, !dbg !6727
  %283 = call i64 @wcrtomb(i8* noalias %282, i32 %281, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6727
  store i64 %283, i64* %slen, align 8, !dbg !6727
  %284 = load i64* %slen, align 8, !dbg !6728
  %285 = icmp eq i64 %284, -1, !dbg !6728
  br i1 %285, label %bb78, label %bb79, !dbg !6728

bb78:                                             ; preds = %bb76
  store i32 -1, i32* %0, align 4, !dbg !6729
  br label %bb131, !dbg !6729

bb79:                                             ; preds = %bb76
  %286 = load i8** %s, align 8, !dbg !6730
  %287 = load i64* %slen, align 8, !dbg !6730
  %288 = getelementptr inbounds i8* %286, i64 %287, !dbg !6730
  store i8 0, i8* %288, align 1, !dbg !6730
  br label %bb93, !dbg !6730

bb81:                                             ; preds = %bb65
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6731
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 4, !dbg !6731
  %291 = load i32* %290, align 4, !dbg !6731
  %292 = icmp ule i32 %291, 19, !dbg !6731
  br i1 %292, label %bb82, label %bb92, !dbg !6731

bb82:                                             ; preds = %bb81
  %293 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6732
  %294 = getelementptr inbounds %struct.ppfs_t* %293, i32 0, i32 4, !dbg !6732
  %295 = load i32* %294, align 4, !dbg !6732
  %296 = icmp eq i32 %295, 19, !dbg !6732
  br i1 %296, label %bb83, label %bb89, !dbg !6732

bb83:                                             ; preds = %bb82
  %297 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6733
  %298 = load i8** %297, align 8, !dbg !6733
  %299 = bitcast i8* %298 to i8**, !dbg !6733
  %300 = load i8** %299, align 8, !dbg !6733
  store i8* %300, i8** %s, align 8, !dbg !6733
  %301 = load i8** %s, align 8, !dbg !6734
  %302 = icmp ne i8* %301, null, !dbg !6734
  br i1 %302, label %bb84, label %NULL_STRING, !dbg !6734

bb84:                                             ; preds = %bb83
  %303 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6735
  %304 = getelementptr inbounds %struct.ppfs_t* %303, i32 0, i32 1, !dbg !6735
  %305 = getelementptr inbounds %struct.printf_info* %304, i32 0, i32 0, !dbg !6735
  %306 = load i32* %305, align 8, !dbg !6735
  %307 = icmp sge i32 %306, 0, !dbg !6735
  br i1 %307, label %bb85, label %bb86, !dbg !6735

bb85:                                             ; preds = %bb84
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6735
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 1, !dbg !6735
  %310 = getelementptr inbounds %struct.printf_info* %309, i32 0, i32 0, !dbg !6735
  %311 = load i32* %310, align 8, !dbg !6735
  %312 = sext i32 %311 to i64, !dbg !6735
  store i64 %312, i64* %iftmp.19, align 8, !dbg !6735
  br label %bb87, !dbg !6735

bb86:                                             ; preds = %bb84
  store i64 -1, i64* %iftmp.19, align 8, !dbg !6735
  br label %bb87, !dbg !6735

bb87:                                             ; preds = %bb86, %bb85
  %313 = load i8** %s, align 8, !dbg !6735
  %314 = load i64* %iftmp.19, align 8, !dbg !6735
  %315 = call i64 @strnlen(i8* %313, i64 %314) nounwind readonly, !dbg !6735
  store i64 %315, i64* %slen, align 8, !dbg !6735
  br label %bb93, !dbg !6735

NULL_STRING:                                      ; preds = %bb83, %bb67
  store i8* getelementptr inbounds ([7 x i8]* @.str1224, i64 0, i64 0), i8** %s, align 8, !dbg !6736
  store i64 6, i64* %slen, align 8, !dbg !6737
  br label %bb93, !dbg !6737

bb89:                                             ; preds = %bb82
  %buf90 = bitcast [128 x i8]* %buf to i8*, !dbg !6738
  store i8* %buf90, i8** %s, align 8, !dbg !6738
  %316 = getelementptr inbounds [1 x i8*]* %argptr, i64 0, i64 0, !dbg !6739
  %317 = load i8** %316, align 8, !dbg !6739
  %318 = bitcast i8* %317 to i32*, !dbg !6739
  %319 = load i32* %318, align 4, !dbg !6739
  %320 = trunc i32 %319 to i8, !dbg !6739
  %321 = load i8** %s, align 8, !dbg !6739
  store i8 %320, i8* %321, align 1, !dbg !6739
  %322 = load i8** %s, align 8, !dbg !6740
  %323 = getelementptr inbounds i8* %322, i64 1, !dbg !6740
  store i8 0, i8* %323, align 1, !dbg !6740
  store i64 1, i64* %slen, align 8, !dbg !6741
  br label %bb93, !dbg !6741

bb92:                                             ; preds = %bb81
  store i32 -1, i32* %0, align 4, !dbg !6742
  br label %bb131, !dbg !6742

bb93:                                             ; preds = %bb89, %NULL_STRING, %bb87, %bb79, %bb71, %bb57
  %324 = load i32* %numfill, align 4, !dbg !6743
  %325 = sext i32 %324 to i64, !dbg !6743
  %326 = load i64* %slen, align 8, !dbg !6743
  %327 = add i64 %325, %326, !dbg !6743
  store i64 %327, i64* %t, align 8, !dbg !6743
  %328 = load i32* %prefix_num, align 4, !dbg !6745
  %329 = icmp ne i32 %328, 11, !dbg !6745
  br i1 %329, label %bb94, label %bb98, !dbg !6745

bb94:                                             ; preds = %bb93
  %330 = load i32* %prefix_num, align 4, !dbg !6746
  %331 = icmp sle i32 %330, 5, !dbg !6746
  br i1 %331, label %bb95, label %bb96, !dbg !6746

bb95:                                             ; preds = %bb94
  store i64 1, i64* %iftmp.20, align 8, !dbg !6746
  br label %bb97, !dbg !6746

bb96:                                             ; preds = %bb94
  store i64 2, i64* %iftmp.20, align 8, !dbg !6746
  br label %bb97, !dbg !6746

bb97:                                             ; preds = %bb96, %bb95
  %332 = load i64* %iftmp.20, align 8, !dbg !6746
  %333 = load i64* %t, align 8, !dbg !6746
  %334 = add i64 %332, %333, !dbg !6746
  store i64 %334, i64* %t, align 8, !dbg !6746
  br label %bb98, !dbg !6746

bb98:                                             ; preds = %bb97, %bb93
  %335 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6747
  %336 = getelementptr inbounds %struct.ppfs_t* %335, i32 0, i32 1, !dbg !6747
  %337 = getelementptr inbounds %struct.printf_info* %336, i32 0, i32 1, !dbg !6747
  %338 = load i32* %337, align 4, !dbg !6747
  %339 = sext i32 %338 to i64, !dbg !6747
  %340 = load i64* %t, align 8, !dbg !6747
  %341 = icmp ugt i64 %339, %340, !dbg !6747
  br i1 %341, label %bb99, label %bb100, !dbg !6747

bb99:                                             ; preds = %bb98
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6747
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !6747
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 1, !dbg !6747
  %345 = load i32* %344, align 4, !dbg !6747
  %346 = load i64* %t, align 8, !dbg !6747
  %347 = trunc i64 %346 to i32, !dbg !6747
  %348 = sub i32 %345, %347, !dbg !6747
  store i32 %348, i32* %iftmp.21, align 4, !dbg !6747
  br label %bb101, !dbg !6747

bb100:                                            ; preds = %bb98
  store i32 0, i32* %iftmp.21, align 4, !dbg !6747
  br label %bb101, !dbg !6747

bb101:                                            ; preds = %bb100, %bb99
  %349 = load i32* %iftmp.21, align 4, !dbg !6747
  store i32 %349, i32* %numpad, align 4, !dbg !6747
  %350 = load i32** %count_addr, align 8, !dbg !6748
  %351 = load i32* %350, align 4, !dbg !6748
  %352 = load i64* %t, align 8, !dbg !6748
  %353 = trunc i64 %352 to i32, !dbg !6748
  %354 = load i32* %numpad, align 4, !dbg !6748
  %355 = add i32 %353, %354, !dbg !6748
  %356 = add i32 %351, %355, !dbg !6748
  %357 = load i32** %count_addr, align 8, !dbg !6748
  store i32 %356, i32* %357, align 4, !dbg !6748
  %358 = load i8* %padchar, align 1, !dbg !6749
  %359 = icmp eq i8 %358, 48, !dbg !6749
  br i1 %359, label %bb102, label %bb103, !dbg !6749

bb102:                                            ; preds = %bb101
  %360 = load i32* %numfill, align 4, !dbg !6750
  %361 = load i32* %numpad, align 4, !dbg !6750
  %362 = add nsw i32 %360, %361, !dbg !6750
  store i32 %362, i32* %numfill, align 4, !dbg !6750
  store i32 0, i32* %numpad, align 4, !dbg !6751
  br label %bb103, !dbg !6751

bb103:                                            ; preds = %bb102, %bb101
  %363 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !6752
  %364 = getelementptr inbounds %struct.ppfs_t* %363, i32 0, i32 1, !dbg !6752
  %365 = getelementptr inbounds %struct.printf_info* %364, i32 0, i32 3, !dbg !6752
  %366 = load i32* %365, align 4, !dbg !6752
  %367 = and i32 %366, 8, !dbg !6752
  %368 = icmp eq i32 %367, 0, !dbg !6752
  br i1 %368, label %bb104, label %bb107, !dbg !6752

bb104:                                            ; preds = %bb103
  %369 = load i32* %numpad, align 4, !dbg !6753
  %370 = sext i32 %369 to i64, !dbg !6753
  %371 = load %4** %stream_addr, align 8, !dbg !6753
  %372 = call i64 @_charpad(%4* noalias %371, i32 32, i64 %370) nounwind, !dbg !6753
  %373 = load i32* %numpad, align 4, !dbg !6753
  %374 = sext i32 %373 to i64, !dbg !6753
  %375 = icmp ne i64 %372, %374, !dbg !6753
  br i1 %375, label %bb105, label %bb106, !dbg !6753

bb105:                                            ; preds = %bb104
  store i32 -1, i32* %0, align 4, !dbg !6754
  br label %bb131, !dbg !6754

bb106:                                            ; preds = %bb104
  store i32 0, i32* %numpad, align 4, !dbg !6755
  br label %bb107, !dbg !6755

bb107:                                            ; preds = %bb106, %bb103
  %376 = load i32* %prefix_num, align 4, !dbg !6756
  %377 = sext i32 %376 to i64, !dbg !6756
  %378 = getelementptr inbounds i8* getelementptr inbounds ([12 x i8]* @prefix.3675, i64 0, i64 0), i64 %377, !dbg !6756
  %379 = load %4** %stream_addr, align 8, !dbg !6756
  %380 = call i32 @fputs_unlocked(i8* noalias %378, %4* noalias %379) nounwind, !dbg !6756
  %381 = load i32* %numfill, align 4, !dbg !6757
  %382 = sext i32 %381 to i64, !dbg !6757
  %383 = load %4** %stream_addr, align 8, !dbg !6757
  %384 = call i64 @_charpad(%4* noalias %383, i32 48, i64 %382) nounwind, !dbg !6757
  %385 = load i32* %numfill, align 4, !dbg !6757
  %386 = sext i32 %385 to i64, !dbg !6757
  %387 = icmp ne i64 %384, %386, !dbg !6757
  br i1 %387, label %bb108, label %bb109, !dbg !6757

bb108:                                            ; preds = %bb107
  store i32 -1, i32* %0, align 4, !dbg !6758
  br label %bb131, !dbg !6758

bb109:                                            ; preds = %bb107
  %388 = load i32** %ws, align 8, !dbg !6759
  %389 = icmp eq i32* %388, null, !dbg !6759
  br i1 %389, label %bb110, label %bb116, !dbg !6759

bb110:                                            ; preds = %bb109
  %390 = load i64* %slen, align 8, !dbg !6760
  %391 = icmp ne i64 %390, 0, !dbg !6760
  br i1 %391, label %bb111, label %bb112, !dbg !6760

bb111:                                            ; preds = %bb110
  %392 = load i8** %s, align 8, !dbg !6760
  %393 = load i64* %slen, align 8, !dbg !6760
  %394 = load %4** %stream_addr, align 8, !dbg !6760
  %395 = call i64 @__stdio_fwrite(i8* noalias %392, i64 %393, %4* noalias %394) nounwind, !dbg !6760
  store i64 %395, i64* %iftmp.24, align 8, !dbg !6760
  br label %bb113, !dbg !6760

bb112:                                            ; preds = %bb110
  store i64 0, i64* %iftmp.24, align 8, !dbg !6760
  br label %bb113, !dbg !6760

bb113:                                            ; preds = %bb112, %bb111
  %396 = load i64* %iftmp.24, align 8, !dbg !6760
  %397 = load i64* %slen, align 8, !dbg !6760
  %398 = icmp ne i64 %396, %397, !dbg !6760
  br i1 %398, label %bb114, label %bb128, !dbg !6760

bb114:                                            ; preds = %bb113
  store i32 -1, i32* %0, align 4, !dbg !6761
  br label %bb131, !dbg !6761

bb116:                                            ; preds = %bb109
  %399 = getelementptr inbounds %struct.__mbstate_t* %mbstate, i32 0, i32 0, !dbg !6762
  store i32 0, i32* %399, align 4, !dbg !6762
  br label %bb127, !dbg !6762

bb118:                                            ; preds = %bb127
  %400 = load i64* %slen, align 8, !dbg !6764
  %401 = icmp ule i64 %400, 128, !dbg !6764
  %min = select i1 %401, i64 %400, i64 128, !dbg !6764
  store i64 %min, i64* %t117, align 8, !dbg !6764
  %buf119 = bitcast [128 x i8]* %buf to i8*, !dbg !6765
  %402 = load i64* %t117, align 8, !dbg !6765
  %403 = call i64 @wcsrtombs(i8* noalias %buf119, i32** noalias %ws, i64 %402, %struct.__mbstate_t* noalias %mbstate) nounwind, !dbg !6765
  store i64 %403, i64* %t117, align 8, !dbg !6765
  %404 = load i64* %t117, align 8, !dbg !6766
  %405 = icmp ne i64 %404, 0, !dbg !6766
  br i1 %405, label %bb120, label %bb123, !dbg !6766

bb120:                                            ; preds = %bb118
  %buf121 = bitcast [128 x i8]* %buf to i8*, !dbg !6766
  %406 = load i64* %t117, align 8, !dbg !6766
  %407 = load %4** %stream_addr, align 8, !dbg !6766
  %408 = call i64 @__stdio_fwrite(i8* noalias %buf121, i64 %406, %4* noalias %407) nounwind, !dbg !6766
  store i64 %408, i64* %iftmp.26, align 8, !dbg !6766
  br label %bb124, !dbg !6766

bb123:                                            ; preds = %bb118
  store i64 0, i64* %iftmp.26, align 8, !dbg !6766
  br label %bb124, !dbg !6766

bb124:                                            ; preds = %bb123, %bb120
  %409 = load i64* %iftmp.26, align 8, !dbg !6766
  %410 = load i64* %t117, align 8, !dbg !6766
  %411 = icmp ne i64 %409, %410, !dbg !6766
  br i1 %411, label %bb125, label %bb126, !dbg !6766

bb125:                                            ; preds = %bb124
  store i32 -1, i32* %0, align 4, !dbg !6767
  br label %bb131, !dbg !6767

bb126:                                            ; preds = %bb124
  %412 = load i64* %slen, align 8, !dbg !6768
  %413 = load i64* %t117, align 8, !dbg !6768
  %414 = sub i64 %412, %413, !dbg !6768
  store i64 %414, i64* %slen, align 8, !dbg !6768
  br label %bb127, !dbg !6768

bb127:                                            ; preds = %bb126, %bb116
  %415 = load i64* %slen, align 8, !dbg !6769
  %416 = icmp ne i64 %415, 0, !dbg !6769
  br i1 %416, label %bb118, label %bb128, !dbg !6769

bb128:                                            ; preds = %bb113, %bb127
  %417 = load i32* %numpad, align 4, !dbg !6770
  %418 = sext i32 %417 to i64, !dbg !6770
  %419 = load %4** %stream_addr, align 8, !dbg !6770
  %420 = call i64 @_charpad(%4* noalias %419, i32 32, i64 %418) nounwind, !dbg !6770
  %421 = load i32* %numpad, align 4, !dbg !6770
  %422 = sext i32 %421 to i64, !dbg !6770
  %423 = icmp ne i64 %420, %422, !dbg !6770
  br i1 %423, label %bb129, label %bb130, !dbg !6770

bb129:                                            ; preds = %bb128
  store i32 -1, i32* %0, align 4, !dbg !6771
  br label %bb131, !dbg !6771

bb130:                                            ; preds = %bb128
  store i32 0, i32* %0, align 4, !dbg !6772
  br label %bb131, !dbg !6772

bb131:                                            ; preds = %bb130, %bb129, %bb125, %bb114, %bb108, %bb105, %bb92, %bb78, %bb74, %bb64, %bb63, %bb5
  %424 = load i32* %0, align 4, !dbg !6668
  store i32 %424, i32* %retval, align 4, !dbg !6668
  %retval132 = load i32* %retval, !dbg !6668
  ret i32 %retval132, !dbg !6668
}

define i32 @vfprintf(%4* noalias %stream, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.31 = alloca i32
  %iftmp.28 = alloca i64
  %ppfs = alloca %struct.ppfs_t
  %count = alloca i32
  %r = alloca i32
  %s = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i32 0, i32* %count, align 4, !dbg !6773
  %1 = load i8** %format_addr, align 8, !dbg !6775
  store i8* %1, i8** %s, align 8, !dbg !6775
  %2 = load %4** %stream_addr, align 8, !dbg !6776
  %3 = getelementptr inbounds %4* %2, i32 0, i32 0, !dbg !6776
  %4 = load i16* %3, align 8, !dbg !6776
  %5 = zext i16 %4 to i32, !dbg !6776
  %6 = and i32 %5, 192, !dbg !6776
  %7 = icmp eq i32 %6, 192, !dbg !6776
  br i1 %7, label %bb2, label %bb, !dbg !6776

bb:                                               ; preds = %entry
  %8 = load %4** %stream_addr, align 8, !dbg !6776
  %9 = call i32 @__stdio_trans2w_o(%4* noalias %8, i32 128) nounwind, !dbg !6776
  %10 = icmp eq i32 %9, 0, !dbg !6776
  br i1 %10, label %bb2, label %bb1, !dbg !6776

bb1:                                              ; preds = %bb
  store i32 -1, i32* %count, align 4, !dbg !6777
  br label %bb27, !dbg !6777

bb2:                                              ; preds = %bb, %entry
  %11 = load i8** %format_addr, align 8, !dbg !6778
  %12 = call i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %11) nounwind, !dbg !6778
  %13 = icmp slt i32 %12, 0, !dbg !6778
  br i1 %13, label %bb3, label %bb7, !dbg !6778

bb3:                                              ; preds = %bb2
  %14 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6779
  %15 = load i8** %14, align 16, !dbg !6779
  %16 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !6779
  %17 = icmp ne i64 %16, 0, !dbg !6779
  br i1 %17, label %bb4, label %bb5, !dbg !6779

bb4:                                              ; preds = %bb3
  %18 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6779
  %19 = load i8** %18, align 16, !dbg !6779
  %20 = call i64 @strlen(i8* %19) nounwind readonly, !dbg !6779
  %21 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6779
  %22 = load i8** %21, align 16, !dbg !6779
  %23 = load %4** %stream_addr, align 8, !dbg !6779
  %24 = call i64 @__stdio_fwrite(i8* noalias %22, i64 %20, %4* noalias %23) nounwind, !dbg !6779
  store i64 %24, i64* %iftmp.28, align 8, !dbg !6779
  br label %bb6, !dbg !6779

bb5:                                              ; preds = %bb3
  store i64 0, i64* %iftmp.28, align 8, !dbg !6779
  br label %bb6, !dbg !6779

bb6:                                              ; preds = %bb5, %bb4
  store i32 -1, i32* %count, align 4, !dbg !6780
  br label %bb27, !dbg !6780

bb7:                                              ; preds = %bb2
  %25 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6781
  call void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %25) nounwind, !dbg !6781
  br label %bb10, !dbg !6781

bb9:                                              ; preds = %bb11
  %26 = load i8** %format_addr, align 8, !dbg !6782
  %27 = getelementptr inbounds i8* %26, i64 1, !dbg !6782
  store i8* %27, i8** %format_addr, align 8, !dbg !6782
  br label %bb10, !dbg !6782

bb10:                                             ; preds = %bb23, %bb24, %bb7, %bb9
  %28 = load i8** %format_addr, align 8, !dbg !6783
  %29 = load i8* %28, align 1, !dbg !6783
  %30 = icmp eq i8 %29, 0, !dbg !6783
  br i1 %30, label %bb12, label %bb11, !dbg !6783

bb11:                                             ; preds = %bb10
  %31 = load i8** %format_addr, align 8, !dbg !6783
  %32 = load i8* %31, align 1, !dbg !6783
  %33 = icmp ne i8 %32, 37, !dbg !6783
  br i1 %33, label %bb9, label %bb12, !dbg !6783

bb12:                                             ; preds = %bb11, %bb10
  %34 = load i8** %format_addr, align 8, !dbg !6784
  %35 = ptrtoint i8* %34 to i64, !dbg !6784
  %36 = load i8** %s, align 8, !dbg !6784
  %37 = ptrtoint i8* %36 to i64, !dbg !6784
  %38 = icmp ne i64 %35, %37, !dbg !6784
  br i1 %38, label %bb13, label %bb19, !dbg !6784

bb13:                                             ; preds = %bb12
  %39 = load i8** %format_addr, align 8, !dbg !6785
  %40 = ptrtoint i8* %39 to i64, !dbg !6785
  %41 = load i8** %s, align 8, !dbg !6785
  %42 = ptrtoint i8* %41 to i64, !dbg !6785
  %43 = sub nsw i64 %40, %42, !dbg !6785
  %44 = icmp sgt i64 %43, 0, !dbg !6785
  br i1 %44, label %bb14, label %bb15, !dbg !6785

bb14:                                             ; preds = %bb13
  %45 = load i8** %format_addr, align 8, !dbg !6785
  %46 = ptrtoint i8* %45 to i64, !dbg !6785
  %47 = load i8** %s, align 8, !dbg !6785
  %48 = ptrtoint i8* %47 to i64, !dbg !6785
  %49 = sub nsw i64 %46, %48, !dbg !6785
  %50 = load i8** %s, align 8, !dbg !6785
  %51 = load %4** %stream_addr, align 8, !dbg !6785
  %52 = call i64 @__stdio_fwrite(i8* noalias %50, i64 %49, %4* noalias %51) nounwind, !dbg !6785
  %53 = trunc i64 %52 to i32, !dbg !6785
  store i32 %53, i32* %iftmp.31, align 4, !dbg !6785
  br label %bb16, !dbg !6785

bb15:                                             ; preds = %bb13
  store i32 0, i32* %iftmp.31, align 4, !dbg !6785
  br label %bb16, !dbg !6785

bb16:                                             ; preds = %bb15, %bb14
  %54 = load i32* %iftmp.31, align 4, !dbg !6785
  store i32 %54, i32* %r, align 4, !dbg !6785
  %55 = load i32* %r, align 4, !dbg !6785
  %56 = sext i32 %55 to i64, !dbg !6785
  %57 = load i8** %format_addr, align 8, !dbg !6785
  %58 = ptrtoint i8* %57 to i64, !dbg !6785
  %59 = load i8** %s, align 8, !dbg !6785
  %60 = ptrtoint i8* %59 to i64, !dbg !6785
  %61 = sub nsw i64 %58, %60, !dbg !6785
  %62 = icmp ne i64 %56, %61, !dbg !6785
  br i1 %62, label %bb17, label %bb18, !dbg !6785

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %count, align 4, !dbg !6786
  br label %bb26, !dbg !6786

bb18:                                             ; preds = %bb16
  %63 = load i32* %count, align 4, !dbg !6787
  %64 = load i32* %r, align 4, !dbg !6787
  %65 = add nsw i32 %63, %64, !dbg !6787
  store i32 %65, i32* %count, align 4, !dbg !6787
  br label %bb19, !dbg !6787

bb19:                                             ; preds = %bb18, %bb12
  %66 = load i8** %format_addr, align 8, !dbg !6788
  %67 = load i8* %66, align 1, !dbg !6788
  %68 = icmp eq i8 %67, 0, !dbg !6788
  br i1 %68, label %bb26, label %bb20, !dbg !6788

bb20:                                             ; preds = %bb19
  %69 = load i8** %format_addr, align 8, !dbg !6789
  %70 = getelementptr inbounds i8* %69, i64 1, !dbg !6789
  %71 = load i8* %70, align 1, !dbg !6789
  %72 = icmp ne i8 %71, 37, !dbg !6789
  %73 = load i8** %format_addr, align 8, !dbg !6790
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !6790
  store i8* %74, i8** %format_addr, align 8, !dbg !6790
  br i1 %72, label %bb21, label %bb24, !dbg !6789

bb21:                                             ; preds = %bb20
  %75 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6790
  %76 = load i8** %format_addr, align 8, !dbg !6790
  store i8* %76, i8** %75, align 16, !dbg !6790
  %77 = load %4** %stream_addr, align 8, !dbg !6791
  %78 = call i32 @_do_one_spec(%4* noalias %77, %struct.ppfs_t* %ppfs, i32* %count) nounwind, !dbg !6791
  store i32 %78, i32* %r, align 4, !dbg !6791
  %79 = load i32* %r, align 4, !dbg !6791
  %80 = icmp slt i32 %79, 0, !dbg !6791
  br i1 %80, label %bb22, label %bb23, !dbg !6791

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %count, align 4, !dbg !6792
  br label %bb26, !dbg !6792

bb23:                                             ; preds = %bb21
  %81 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 0, !dbg !6793
  %82 = load i8** %81, align 16, !dbg !6793
  store i8* %82, i8** %format_addr, align 8, !dbg !6793
  %83 = load i8** %format_addr, align 8, !dbg !6793
  store i8* %83, i8** %s, align 8, !dbg !6793
  br label %bb10, !dbg !6793

bb24:                                             ; preds = %bb20
  %84 = load i8** %format_addr, align 8, !dbg !6794
  store i8* %84, i8** %s, align 8, !dbg !6794
  %85 = load i8** %format_addr, align 8, !dbg !6795
  %86 = getelementptr inbounds i8* %85, i64 1, !dbg !6795
  store i8* %86, i8** %format_addr, align 8, !dbg !6795
  br label %bb10, !dbg !6795

bb26:                                             ; preds = %bb22, %bb19, %bb17
  %87 = getelementptr inbounds %struct.ppfs_t* %ppfs, i32 0, i32 7, !dbg !6796
  %88 = getelementptr inbounds [1 x %struct.__va_list_tag]* %87, i64 0, i64 0, !dbg !6796
  %89 = bitcast %struct.__va_list_tag* %88 to i8*, !dbg !6796
  call void @llvm.va_end(i8* %89), !dbg !6796
  br label %bb27, !dbg !6796

bb27:                                             ; preds = %bb26, %bb6, %bb1
  %90 = load i32* %count, align 4, !dbg !6797
  store i32 %90, i32* %0, align 4, !dbg !6797
  %91 = load i32* %0, align 4, !dbg !6797
  store i32 %91, i32* %retval, align 4, !dbg !6797
  %retval28 = load i32* %retval, !dbg !6797
  ret i32 %retval28, !dbg !6797
}

define internal i32 @sc_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6798
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 2, !dbg !6798
  %3 = load %4** %2, align 8, !dbg !6798
  %4 = call i32 @__fgetc_unlocked(%4* %3) nounwind, !dbg !6798
  store i32 %4, i32* %0, align 4, !dbg !6798
  %5 = load i32* %0, align 4, !dbg !6798
  store i32 %5, i32* %retval, align 4, !dbg !6798
  %retval1 = load i32* %retval, !dbg !6798
  ret i32 %retval1, !dbg !6798
}

define internal i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i64
  %width = alloca i32
  %wc = alloca [1 x i32]
  %b = alloca [1 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6800
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 4, !dbg !6800
  %3 = load i32* %2, align 4, !dbg !6800
  %4 = sub nsw i32 %3, 1, !dbg !6800
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6800
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 4, !dbg !6800
  store i32 %4, i32* %6, align 4, !dbg !6800
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6800
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !6800
  %9 = load i32* %8, align 4, !dbg !6800
  %10 = icmp slt i32 %9, 0, !dbg !6800
  %11 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6802
  br i1 %10, label %bb, label %bb1, !dbg !6800

bb:                                               ; preds = %entry
  %12 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 7, !dbg !6802
  %13 = load i8* %12, align 1, !dbg !6802
  %14 = or i8 %13, 2, !dbg !6802
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6802
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 7, !dbg !6802
  store i8 %14, i8* %16, align 1, !dbg !6802
  store i32 -1, i32* %0, align 4, !dbg !6803
  br label %bb12, !dbg !6803

bb1:                                              ; preds = %entry
  %17 = getelementptr inbounds %struct.scan_cookie* %11, i32 0, i32 4, !dbg !6804
  %18 = load i32* %17, align 4, !dbg !6804
  store i32 %18, i32* %width, align 4, !dbg !6804
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6805
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 4, !dbg !6805
  store i32 2147483647, i32* %20, align 4, !dbg !6805
  store i64 -3, i64* %r, align 8, !dbg !6806
  br label %bb8, !dbg !6806

bb2:                                              ; preds = %bb8
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6807
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 0, !dbg !6807
  %23 = load i32* %22, align 8, !dbg !6807
  %24 = trunc i32 %23 to i8, !dbg !6807
  %25 = getelementptr inbounds [1 x i8]* %b, i64 0, i64 0, !dbg !6807
  store i8 %24, i8* %25, align 1, !dbg !6807
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6808
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 10, !dbg !6808
  %wc3 = bitcast [1 x i32]* %wc to i32*, !dbg !6808
  %b4 = bitcast [1 x i8]* %b to i8*, !dbg !6808
  %28 = call i64 @mbrtowc(i32* noalias %wc3, i8* noalias %b4, i64 1, %struct.__mbstate_t* %27) nounwind, !dbg !6808
  store i64 %28, i64* %r, align 8, !dbg !6808
  %29 = load i64* %r, align 8, !dbg !6809
  %30 = icmp sge i64 %29, 0, !dbg !6809
  br i1 %30, label %bb5, label %bb6, !dbg !6809

bb5:                                              ; preds = %bb2
  %31 = getelementptr inbounds [1 x i32]* %wc, i64 0, i64 0, !dbg !6810
  %32 = load i32* %31, align 4, !dbg !6810
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6810
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 11, !dbg !6810
  store i32 %32, i32* %34, align 8, !dbg !6810
  br label %SUCCESS, !dbg !6810

bb6:                                              ; preds = %bb2
  %35 = load i64* %r, align 8, !dbg !6811
  %36 = icmp eq i64 %35, -2, !dbg !6811
  br i1 %36, label %bb8, label %bb9, !dbg !6811

bb8:                                              ; preds = %bb6, %bb1
  %37 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6812
  %38 = call i32 @__scan_getc(%struct.scan_cookie* %37) nounwind, !dbg !6812
  %39 = icmp sge i32 %38, 0, !dbg !6812
  br i1 %39, label %bb2, label %bb9, !dbg !6812

bb9:                                              ; preds = %bb6, %bb8
  %40 = load i64* %r, align 8, !dbg !6813
  %41 = icmp eq i64 %40, -3, !dbg !6813
  br i1 %41, label %bb10, label %bb11, !dbg !6813

bb10:                                             ; preds = %bb9
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6814
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 11, !dbg !6814
  store i32 -1, i32* %43, align 8, !dbg !6814
  store i64 -1, i64* %r, align 8, !dbg !6815
  br label %SUCCESS, !dbg !6815

bb11:                                             ; preds = %bb9
  store i32 84, i32* @errno, align 4, !dbg !6816
  %44 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6817
  %45 = getelementptr inbounds %struct.scan_cookie* %44, i32 0, i32 9, !dbg !6817
  store i8 1, i8* %45, align 1, !dbg !6817
  br label %SUCCESS, !dbg !6818

SUCCESS:                                          ; preds = %bb11, %bb10, %bb5
  %46 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6819
  %47 = getelementptr inbounds %struct.scan_cookie* %46, i32 0, i32 4, !dbg !6819
  %48 = load i32* %width, align 4, !dbg !6819
  store i32 %48, i32* %47, align 4, !dbg !6819
  %49 = load i64* %r, align 8, !dbg !6820
  %50 = trunc i64 %49 to i32, !dbg !6820
  store i32 %50, i32* %0, align 4, !dbg !6820
  br label %bb12, !dbg !6820

bb12:                                             ; preds = %SUCCESS, %bb
  %51 = load i32* %0, align 4, !dbg !6803
  store i32 %51, i32* %retval, align 4, !dbg !6803
  %retval13 = load i32* %retval, !dbg !6803
  ret i32 %retval13, !dbg !6803
}

define i32 @vfscanf(%4* noalias %fp, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %iftmp.11 = alloca i32*
  %iftmp.8 = alloca i8*
  %addr.5 = alloca i8*
  %addr.3 = alloca i8*
  %fmt = alloca i8*
  %b = alloca i8*
  %sc = alloca %struct.scan_cookie
  %psfs = alloca %struct.psfs_t
  %i = alloca i32
  %buf = alloca [67 x i8]
  %scanset = alloca [256 x i8]
  %invert = alloca i8
  %fail = alloca i8
  %zero_conversions = alloca i8
  %r = alloca i32
  %wbuf = alloca [1 x i32]
  %wb = alloca i32*
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  store i8 1, i8* %zero_conversions, align 1, !dbg !6821
  %1 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6823
  store i32 -1, i32* %1, align 8, !dbg !6823
  %2 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !6824
  %3 = getelementptr inbounds [9 x i8*]* %2, i64 0, i64 0, !dbg !6824
  %4 = bitcast i8** %3 to i8*, !dbg !6824
  %5 = call i8* @memset(i8* %4, i32 0, i64 72) nounwind, !dbg !6824
  %6 = load %4** %fp_addr, align 8, !dbg !6825
  call void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %6) nounwind, !dbg !6825
  %7 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 13, !dbg !6826
  store i32 (%struct.scan_cookie*)* @sc_getc, i32 (%struct.scan_cookie*)** %7, align 8, !dbg !6826
  %8 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 2, !dbg !6827
  %9 = load %4** %8, align 8, !dbg !6827
  %10 = getelementptr inbounds %4* %9, i32 0, i32 1, !dbg !6827
  %11 = getelementptr inbounds [2 x i8]* %10, i64 0, i64 1, !dbg !6827
  %12 = load i8* %11, align 1, !dbg !6827
  %13 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 6, !dbg !6827
  store i8 %12, i8* %13, align 4, !dbg !6827
  %14 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 14, !dbg !6828
  %15 = load i8** %14, align 8, !dbg !6828
  %16 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 17, !dbg !6828
  store i8* %15, i8** %16, align 8, !dbg !6828
  %17 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6829
  store i32 0, i32* %17, align 8, !dbg !6829
  %18 = load i8** %format_addr, align 8, !dbg !6830
  store i8* %18, i8** %fmt, align 8, !dbg !6830
  br label %bb104, !dbg !6830

bb:                                               ; preds = %bb104
  %19 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6831
  store i8 1, i8* %19, align 8, !dbg !6831
  %20 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 10, !dbg !6832
  store i8 0, i8* %20, align 1, !dbg !6832
  %21 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !6833
  %22 = load i8* %21, align 1, !dbg !6833
  %23 = and i8 %22, 1, !dbg !6833
  %24 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 7, !dbg !6833
  store i8 %23, i8* %24, align 1, !dbg !6833
  %25 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !6834
  store i32 2147483647, i32* %25, align 4, !dbg !6834
  %26 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !6834
  %27 = load i32* %26, align 4, !dbg !6834
  %28 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6834
  store i32 %27, i32* %28, align 4, !dbg !6834
  %29 = load i16** @__ctype_b, align 8, !dbg !6835
  %30 = load i8** %fmt, align 8, !dbg !6835
  %31 = load i8* %30, align 1, !dbg !6835
  %32 = zext i8 %31 to i32, !dbg !6835
  %33 = sext i32 %32 to i64, !dbg !6835
  %34 = getelementptr inbounds i16* %29, i64 %33, !dbg !6835
  %35 = load i16* %34, align 1, !dbg !6835
  %36 = zext i16 %35 to i32, !dbg !6835
  %37 = and i32 %36, 8192, !dbg !6835
  %38 = icmp ne i32 %37, 0, !dbg !6835
  br i1 %38, label %bb1, label %bb3, !dbg !6835

bb1:                                              ; preds = %bb1, %bb
  %39 = load i8** %fmt, align 8, !dbg !6836
  %40 = getelementptr inbounds i8* %39, i64 1, !dbg !6836
  store i8* %40, i8** %fmt, align 8, !dbg !6836
  %41 = load i16** @__ctype_b, align 8, !dbg !6837
  %42 = load i8** %fmt, align 8, !dbg !6837
  %43 = load i8* %42, align 1, !dbg !6837
  %44 = zext i8 %43 to i32, !dbg !6837
  %45 = sext i32 %44 to i64, !dbg !6837
  %46 = getelementptr inbounds i16* %41, i64 %45, !dbg !6837
  %47 = load i16* %46, align 1, !dbg !6837
  %48 = zext i16 %47 to i32, !dbg !6837
  %49 = and i32 %48, 8192, !dbg !6837
  %50 = icmp ne i32 %49, 0, !dbg !6837
  br i1 %50, label %bb1, label %bb2, !dbg !6837

bb2:                                              ; preds = %bb1
  %51 = load i8** %fmt, align 8, !dbg !6838
  %52 = getelementptr inbounds i8* %51, i64 -1, !dbg !6838
  store i8* %52, i8** %fmt, align 8, !dbg !6838
  %53 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6839
  store i32 23, i32* %53, align 8, !dbg !6839
  br label %DO_WHITESPACE, !dbg !6839

bb3:                                              ; preds = %bb
  %54 = load i8** %fmt, align 8, !dbg !6840
  %55 = load i8* %54, align 1, !dbg !6840
  %56 = icmp eq i8 %55, 37, !dbg !6840
  br i1 %56, label %bb4, label %MATCH_CHAR, !dbg !6840

bb4:                                              ; preds = %bb3
  %57 = load i8** %fmt, align 8, !dbg !6841
  %58 = getelementptr inbounds i8* %57, i64 1, !dbg !6841
  store i8* %58, i8** %fmt, align 8, !dbg !6841
  %59 = load i8** %fmt, align 8, !dbg !6841
  %60 = load i8* %59, align 1, !dbg !6841
  %61 = icmp eq i8 %60, 37, !dbg !6841
  br i1 %61, label %bb5, label %bb6, !dbg !6841

bb5:                                              ; preds = %bb4
  %62 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6842
  store i32 22, i32* %62, align 8, !dbg !6842
  br label %DO_CONVERSION, !dbg !6842

bb6:                                              ; preds = %bb4
  %63 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 4, !dbg !6843
  %64 = load i8** %fmt, align 8, !dbg !6843
  store i8* %64, i8** %63, align 8, !dbg !6843
  %65 = call i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind, !dbg !6844
  store i32 %65, i32* %i, align 4, !dbg !6844
  %66 = load i32* %i, align 4, !dbg !6844
  %67 = icmp slt i32 %66, 0, !dbg !6844
  br i1 %67, label %DONE, label %bb7, !dbg !6844

bb7:                                              ; preds = %bb6
  %68 = load i8** %fmt, align 8, !dbg !6845
  %69 = load i32* %i, align 4, !dbg !6845
  %70 = sext i32 %69 to i64, !dbg !6845
  %71 = getelementptr inbounds i8* %68, i64 %70, !dbg !6845
  store i8* %71, i8** %fmt, align 8, !dbg !6845
  %72 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6846
  %73 = load i8* %72, align 8, !dbg !6846
  %74 = icmp ne i8 %73, 0, !dbg !6846
  br i1 %74, label %bb8, label %DO_CONVERSION, !dbg !6846

bb8:                                              ; preds = %bb7
  %75 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6847
  %76 = load i32* %75, align 8, !dbg !6847
  %77 = icmp eq i32 %76, -2, !dbg !6847
  br i1 %77, label %bb9, label %bb18, !dbg !6847

bb9:                                              ; preds = %bb8
  %78 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  %79 = getelementptr inbounds %struct.__va_list_tag* %78, i32 0, i32 0, !dbg !6848
  %80 = load i32* %79, align 8, !dbg !6848
  %81 = icmp uge i32 %80, 48, !dbg !6848
  %82 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  br i1 %81, label %bb11, label %bb10, !dbg !6848

bb10:                                             ; preds = %bb9
  %83 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 3, !dbg !6848
  %84 = load i8** %83, align 8, !dbg !6848
  %85 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  %86 = getelementptr inbounds %struct.__va_list_tag* %85, i32 0, i32 0, !dbg !6848
  %87 = load i32* %86, align 8, !dbg !6848
  %88 = inttoptr i32 %87 to i8*, !dbg !6848
  %89 = ptrtoint i8* %84 to i64, !dbg !6848
  %90 = ptrtoint i8* %88 to i64, !dbg !6848
  %91 = add i64 %89, %90, !dbg !6848
  %92 = inttoptr i64 %91 to i8*, !dbg !6848
  store i8* %92, i8** %addr.3, align 8, !dbg !6848
  %93 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  %94 = getelementptr inbounds %struct.__va_list_tag* %93, i32 0, i32 0, !dbg !6848
  %95 = load i32* %94, align 8, !dbg !6848
  %96 = add i32 %95, 8, !dbg !6848
  %97 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  %98 = getelementptr inbounds %struct.__va_list_tag* %97, i32 0, i32 0, !dbg !6848
  store i32 %96, i32* %98, align 8, !dbg !6848
  br label %bb12, !dbg !6848

bb11:                                             ; preds = %bb9
  %99 = getelementptr inbounds %struct.__va_list_tag* %82, i32 0, i32 2, !dbg !6848
  %100 = load i8** %99, align 8, !dbg !6848
  store i8* %100, i8** %addr.3, align 8, !dbg !6848
  %101 = getelementptr inbounds i8* %100, i64 8, !dbg !6848
  %102 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6848
  %103 = getelementptr inbounds %struct.__va_list_tag* %102, i32 0, i32 2, !dbg !6848
  store i8* %101, i8** %103, align 8, !dbg !6848
  br label %bb12, !dbg !6848

bb12:                                             ; preds = %bb11, %bb10
  %104 = load i8** %addr.3, align 8, !dbg !6848
  %105 = bitcast i8* %104 to i8**, !dbg !6848
  %106 = load i8** %105, align 8, !dbg !6848
  %107 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !6848
  store i8* %106, i8** %107, align 8, !dbg !6848
  br label %DO_CONVERSION, !dbg !6848

bb14:                                             ; preds = %bb18
  %108 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6849
  %109 = load i32* %108, align 8, !dbg !6849
  %110 = add nsw i32 %109, 1, !dbg !6849
  %111 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6849
  store i32 %110, i32* %111, align 8, !dbg !6849
  %112 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6849
  %113 = load i32* %112, align 8, !dbg !6849
  %114 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  %115 = getelementptr inbounds %struct.__va_list_tag* %114, i32 0, i32 0, !dbg !6849
  %116 = load i32* %115, align 8, !dbg !6849
  %117 = icmp uge i32 %116, 48, !dbg !6849
  %118 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  br i1 %117, label %bb16, label %bb15, !dbg !6849

bb15:                                             ; preds = %bb14
  %119 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 3, !dbg !6849
  %120 = load i8** %119, align 8, !dbg !6849
  %121 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  %122 = getelementptr inbounds %struct.__va_list_tag* %121, i32 0, i32 0, !dbg !6849
  %123 = load i32* %122, align 8, !dbg !6849
  %124 = inttoptr i32 %123 to i8*, !dbg !6849
  %125 = ptrtoint i8* %120 to i64, !dbg !6849
  %126 = ptrtoint i8* %124 to i64, !dbg !6849
  %127 = add i64 %125, %126, !dbg !6849
  %128 = inttoptr i64 %127 to i8*, !dbg !6849
  store i8* %128, i8** %addr.5, align 8, !dbg !6849
  %129 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  %130 = getelementptr inbounds %struct.__va_list_tag* %129, i32 0, i32 0, !dbg !6849
  %131 = load i32* %130, align 8, !dbg !6849
  %132 = add i32 %131, 8, !dbg !6849
  %133 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  %134 = getelementptr inbounds %struct.__va_list_tag* %133, i32 0, i32 0, !dbg !6849
  store i32 %132, i32* %134, align 8, !dbg !6849
  br label %bb17, !dbg !6849

bb16:                                             ; preds = %bb14
  %135 = getelementptr inbounds %struct.__va_list_tag* %118, i32 0, i32 2, !dbg !6849
  %136 = load i8** %135, align 8, !dbg !6849
  store i8* %136, i8** %addr.5, align 8, !dbg !6849
  %137 = getelementptr inbounds i8* %136, i64 8, !dbg !6849
  %138 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6849
  %139 = getelementptr inbounds %struct.__va_list_tag* %138, i32 0, i32 2, !dbg !6849
  store i8* %137, i8** %139, align 8, !dbg !6849
  br label %bb17, !dbg !6849

bb17:                                             ; preds = %bb16, %bb15
  %140 = load i8** %addr.5, align 8, !dbg !6849
  %141 = bitcast i8* %140 to i8**, !dbg !6849
  %142 = load i8** %141, align 8, !dbg !6849
  %143 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !6849
  %144 = sext i32 %113 to i64, !dbg !6849
  %145 = getelementptr inbounds [9 x i8*]* %143, i64 0, i64 %144, !dbg !6849
  store i8* %142, i8** %145, align 8, !dbg !6849
  br label %bb18, !dbg !6849

bb18:                                             ; preds = %bb8, %bb17
  %146 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !6850
  %147 = load i32* %146, align 4, !dbg !6850
  %148 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 1, !dbg !6850
  %149 = load i32* %148, align 8, !dbg !6850
  %150 = icmp sgt i32 %147, %149, !dbg !6850
  br i1 %150, label %bb14, label %bb19, !dbg !6850

bb19:                                             ; preds = %bb18
  %151 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 2, !dbg !6851
  %152 = load i32* %151, align 4, !dbg !6851
  %153 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 0, !dbg !6851
  %154 = sext i32 %152 to i64, !dbg !6851
  %155 = getelementptr inbounds [9 x i8*]* %153, i64 0, i64 %154, !dbg !6851
  %156 = load i8** %155, align 8, !dbg !6851
  %157 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !6851
  store i8* %156, i8** %157, align 8, !dbg !6851
  br label %DO_CONVERSION, !dbg !6852

DO_CONVERSION:                                    ; preds = %bb19, %bb12, %bb7, %bb5
  %158 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6853
  %159 = load i32* %158, align 8, !dbg !6853
  %.cast = zext i32 %159 to i64, !dbg !6853
  %int_cast_to_i64 = bitcast i64 %.cast to i64
  %160 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %160, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %DO_CONVERSION
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %DO_CONVERSION
  %161 = ashr i64 2949121, %.cast, !dbg !6853
  %162 = and i64 %161, 1, !dbg !6853
  %163 = icmp eq i64 %162, 0, !dbg !6853
  br i1 %163, label %DO_WHITESPACE, label %bb22, !dbg !6853

DO_WHITESPACE:                                    ; preds = %bb20, %klee_overshift_check.exit, %bb2
  %164 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !6854
  %165 = icmp slt i32 %164, 0, !dbg !6854
  br i1 %165, label %bb21, label %bb20, !dbg !6854

bb20:                                             ; preds = %DO_WHITESPACE
  %166 = load i16** @__ctype_b, align 8, !dbg !6854
  %167 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6854
  %168 = load i32* %167, align 8, !dbg !6854
  %169 = sext i32 %168 to i64, !dbg !6854
  %170 = getelementptr inbounds i16* %166, i64 %169, !dbg !6854
  %171 = load i16* %170, align 1, !dbg !6854
  %172 = zext i16 %171 to i32, !dbg !6854
  %173 = and i32 %172, 8192, !dbg !6854
  %174 = icmp ne i32 %173, 0, !dbg !6854
  br i1 %174, label %DO_WHITESPACE, label %bb21, !dbg !6854

bb21:                                             ; preds = %bb20, %DO_WHITESPACE
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6855
  %175 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6856
  %176 = load i32* %175, align 8, !dbg !6856
  %177 = icmp eq i32 %176, 23, !dbg !6856
  br i1 %177, label %NEXT_FMT, label %bb22, !dbg !6856

bb22:                                             ; preds = %bb21, %klee_overshift_check.exit
  %178 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 8, !dbg !6857
  %179 = load i32* %178, align 4, !dbg !6857
  %180 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6857
  store i32 %179, i32* %180, align 4, !dbg !6857
  %181 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6858
  %182 = load i32* %181, align 4, !dbg !6858
  %183 = icmp eq i32 %182, 0, !dbg !6858
  br i1 %183, label %DONE, label %bb23, !dbg !6858

bb23:                                             ; preds = %bb22
  %184 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6859
  %185 = load i32* %184, align 8, !dbg !6859
  %186 = icmp eq i32 %185, 22, !dbg !6859
  br i1 %186, label %MATCH_CHAR, label %bb24, !dbg !6859

bb24:                                             ; preds = %bb23
  %187 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6860
  %188 = load i32* %187, align 8, !dbg !6860
  %189 = icmp eq i32 %188, 0, !dbg !6860
  br i1 %189, label %bb25, label %bb28, !dbg !6860

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6861
  %191 = load i8* %190, align 8, !dbg !6861
  %192 = icmp ne i8 %191, 0, !dbg !6861
  br i1 %192, label %bb26, label %NEXT_FMT, !dbg !6861

bb26:                                             ; preds = %bb25
  %193 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 3, !dbg !6862
  %194 = load i32* %193, align 8, !dbg !6862
  %195 = sext i32 %194 to i64, !dbg !6862
  %196 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 6, !dbg !6862
  %197 = load i32* %196, align 4, !dbg !6862
  %198 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !6862
  %199 = load i8** %198, align 8, !dbg !6862
  call void @_store_inttype(i8* %199, i32 %197, i64 %195) nounwind, !dbg !6862
  br label %NEXT_FMT, !dbg !6862

bb28:                                             ; preds = %bb24
  %200 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6863
  %201 = load i32* %200, align 8, !dbg !6863
  %202 = icmp sle i32 %201, 15, !dbg !6863
  br i1 %202, label %bb29, label %bb33, !dbg !6863

bb29:                                             ; preds = %bb28
  %203 = call i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind, !dbg !6864
  store i32 %203, i32* %r, align 4, !dbg !6864
  %204 = load i32* %r, align 4, !dbg !6866
  %205 = icmp ne i32 %204, -1, !dbg !6866
  br i1 %205, label %bb30, label %bb31, !dbg !6866

bb30:                                             ; preds = %bb29
  store i8 0, i8* %zero_conversions, align 1, !dbg !6867
  br label %bb31, !dbg !6867

bb31:                                             ; preds = %bb30, %bb29
  %206 = load i32* %r, align 4, !dbg !6868
  %207 = icmp slt i32 %206, 0, !dbg !6868
  br i1 %207, label %DONE, label %NEXT_FMT, !dbg !6868

bb33:                                             ; preds = %bb28
  %208 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6869
  %209 = load i32* %208, align 8, !dbg !6869
  %210 = icmp sgt i32 %209, 17, !dbg !6869
  br i1 %210, label %bb34, label %DO_LEFTBRACKET, !dbg !6869

bb34:                                             ; preds = %bb33
  %211 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6870
  %212 = load i8* %211, align 8, !dbg !6870
  %213 = icmp ne i8 %212, 0, !dbg !6870
  br i1 %213, label %bb35, label %bb36, !dbg !6870

bb35:                                             ; preds = %bb34
  %214 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !6870
  %215 = load i8** %214, align 8, !dbg !6870
  store i8* %215, i8** %iftmp.8, align 8, !dbg !6870
  br label %bb38, !dbg !6870

bb36:                                             ; preds = %bb34
  %buf37 = bitcast [67 x i8]* %buf to i8*, !dbg !6870
  store i8* %buf37, i8** %iftmp.8, align 8, !dbg !6870
  br label %bb38, !dbg !6870

bb38:                                             ; preds = %bb36, %bb35
  %216 = load i8** %iftmp.8, align 8, !dbg !6870
  store i8* %216, i8** %b, align 8, !dbg !6870
  store i8 1, i8* %fail, align 1, !dbg !6871
  %217 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6872
  %218 = load i32* %217, align 8, !dbg !6872
  %219 = icmp eq i32 %218, 19, !dbg !6872
  br i1 %219, label %bb39, label %bb46, !dbg !6872

bb39:                                             ; preds = %bb38
  %220 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6873
  %221 = load i32* %220, align 4, !dbg !6873
  %222 = icmp eq i32 %221, 2147483647, !dbg !6873
  br i1 %222, label %bb40, label %bb43, !dbg !6873

bb40:                                             ; preds = %bb39
  %223 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6874
  store i32 1, i32* %223, align 4, !dbg !6874
  br label %bb43, !dbg !6874

bb42:                                             ; preds = %bb43
  store i8 0, i8* %zero_conversions, align 1, !dbg !6875
  %224 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6876
  %225 = load i32* %224, align 8, !dbg !6876
  %226 = trunc i32 %225 to i8, !dbg !6876
  %227 = load i8** %b, align 8, !dbg !6876
  store i8 %226, i8* %227, align 1, !dbg !6876
  %228 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6877
  %229 = load i8* %228, align 8, !dbg !6877
  %230 = zext i8 %229 to i32, !dbg !6877
  %231 = load i8** %b, align 8, !dbg !6877
  %232 = sext i32 %230 to i64, !dbg !6877
  %233 = getelementptr inbounds i8* %231, i64 %232, !dbg !6877
  store i8* %233, i8** %b, align 8, !dbg !6877
  br label %bb43, !dbg !6877

bb43:                                             ; preds = %bb39, %bb40, %bb42
  %234 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !6878
  %235 = icmp sge i32 %234, 0, !dbg !6878
  br i1 %235, label %bb42, label %bb44, !dbg !6878

bb44:                                             ; preds = %bb43
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6879
  %236 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6880
  %237 = load i32* %236, align 4, !dbg !6880
  %238 = icmp sgt i32 %237, 0, !dbg !6880
  br i1 %238, label %DONE, label %bb45, !dbg !6880

bb45:                                             ; preds = %bb44
  %239 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6881
  %240 = load i32* %239, align 8, !dbg !6881
  %241 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6881
  %242 = load i8* %241, align 8, !dbg !6881
  %243 = zext i8 %242 to i32, !dbg !6881
  %244 = add nsw i32 %240, %243, !dbg !6881
  %245 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6881
  store i32 %244, i32* %245, align 8, !dbg !6881
  br label %NEXT_FMT, !dbg !6881

bb46:                                             ; preds = %bb38
  %246 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6882
  %247 = load i32* %246, align 8, !dbg !6882
  %248 = icmp eq i32 %247, 20, !dbg !6882
  br i1 %248, label %bb49, label %bb52, !dbg !6882

bb48:                                             ; preds = %bb50
  store i8 0, i8* %zero_conversions, align 1, !dbg !6883
  %249 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6884
  %250 = load i32* %249, align 8, !dbg !6884
  %251 = trunc i32 %250 to i8, !dbg !6884
  %252 = load i8** %b, align 8, !dbg !6884
  store i8 %251, i8* %252, align 1, !dbg !6884
  %253 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6885
  %254 = load i8* %253, align 8, !dbg !6885
  %255 = zext i8 %254 to i32, !dbg !6885
  %256 = load i8** %b, align 8, !dbg !6885
  %257 = sext i32 %255 to i64, !dbg !6885
  %258 = getelementptr inbounds i8* %256, i64 %257, !dbg !6885
  store i8* %258, i8** %b, align 8, !dbg !6885
  store i8 0, i8* %fail, align 1, !dbg !6886
  br label %bb49, !dbg !6886

bb49:                                             ; preds = %bb46, %bb48
  %259 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !6887
  %260 = icmp slt i32 %259, 0, !dbg !6887
  br i1 %260, label %bb71, label %bb50, !dbg !6887

bb50:                                             ; preds = %bb49
  %261 = load i16** @__ctype_b, align 8, !dbg !6887
  %262 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6887
  %263 = load i32* %262, align 8, !dbg !6887
  %264 = sext i32 %263 to i64, !dbg !6887
  %265 = getelementptr inbounds i16* %261, i64 %264, !dbg !6887
  %266 = load i16* %265, align 1, !dbg !6887
  %267 = zext i16 %266 to i32, !dbg !6887
  %268 = and i32 %267, 8192, !dbg !6887
  %269 = icmp eq i32 %268, 0, !dbg !6887
  br i1 %269, label %bb48, label %bb71, !dbg !6887

bb52:                                             ; preds = %bb46
  store i8 0, i8* %invert, align 1, !dbg !6888
  %270 = load i8** %fmt, align 8, !dbg !6889
  %271 = getelementptr inbounds i8* %270, i64 1, !dbg !6889
  store i8* %271, i8** %fmt, align 8, !dbg !6889
  %272 = load i8** %fmt, align 8, !dbg !6889
  %273 = load i8* %272, align 1, !dbg !6889
  %274 = icmp eq i8 %273, 94, !dbg !6889
  br i1 %274, label %bb53, label %bb54, !dbg !6889

bb53:                                             ; preds = %bb52
  %275 = load i8** %fmt, align 8, !dbg !6890
  %276 = getelementptr inbounds i8* %275, i64 1, !dbg !6890
  store i8* %276, i8** %fmt, align 8, !dbg !6890
  store i8 1, i8* %invert, align 1, !dbg !6891
  br label %bb54, !dbg !6891

bb54:                                             ; preds = %bb53, %bb52
  %277 = load i8* %invert, align 1, !dbg !6892
  %278 = zext i8 %277 to i32, !dbg !6892
  %scanset55 = bitcast [256 x i8]* %scanset to i8*, !dbg !6892
  %279 = call i8* @memset(i8* %scanset55, i32 %278, i64 256) nounwind, !dbg !6892
  %280 = load i8* %invert, align 1, !dbg !6893
  %281 = sub i8 1, %280, !dbg !6893
  store i8 %281, i8* %invert, align 1, !dbg !6893
  %282 = load i8** %fmt, align 8, !dbg !6894
  %283 = load i8* %282, align 1, !dbg !6894
  %284 = icmp eq i8 %283, 93, !dbg !6894
  br i1 %284, label %bb56, label %bb65, !dbg !6894

bb56:                                             ; preds = %bb54
  %285 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 93, !dbg !6895
  %286 = load i8* %invert, align 1, !dbg !6895
  store i8 %286, i8* %285, align 1, !dbg !6895
  %287 = load i8** %fmt, align 8, !dbg !6896
  %288 = getelementptr inbounds i8* %287, i64 1, !dbg !6896
  store i8* %288, i8** %fmt, align 8, !dbg !6896
  br label %bb65, !dbg !6896

bb58:                                             ; preds = %bb65
  %289 = load i8** %fmt, align 8, !dbg !6897
  %290 = load i8* %289, align 1, !dbg !6897
  %291 = icmp eq i8 %290, 0, !dbg !6897
  br i1 %291, label %DONE, label %bb59, !dbg !6897

bb59:                                             ; preds = %bb58
  %292 = load i8** %fmt, align 8, !dbg !6898
  %293 = load i8* %292, align 1, !dbg !6898
  %294 = icmp eq i8 %293, 45, !dbg !6898
  br i1 %294, label %bb60, label %bb64, !dbg !6898

bb60:                                             ; preds = %bb59
  %295 = load i8** %fmt, align 8, !dbg !6898
  %296 = getelementptr inbounds i8* %295, i64 1, !dbg !6898
  %297 = load i8* %296, align 1, !dbg !6898
  %298 = icmp ne i8 %297, 93, !dbg !6898
  br i1 %298, label %bb61, label %bb64, !dbg !6898

bb61:                                             ; preds = %bb60
  %299 = load i8** %fmt, align 8, !dbg !6898
  %300 = getelementptr inbounds i8* %299, i64 -1, !dbg !6898
  %301 = load i8* %300, align 1, !dbg !6898
  %302 = load i8** %fmt, align 8, !dbg !6898
  %303 = getelementptr inbounds i8* %302, i64 1, !dbg !6898
  %304 = load i8* %303, align 1, !dbg !6898
  %305 = icmp ult i8 %301, %304, !dbg !6898
  br i1 %305, label %bb62, label %bb64, !dbg !6898

bb62:                                             ; preds = %bb61
  %306 = load i8** %fmt, align 8, !dbg !6899
  %307 = getelementptr inbounds i8* %306, i64 1, !dbg !6899
  store i8* %307, i8** %fmt, align 8, !dbg !6899
  %308 = load i8** %fmt, align 8, !dbg !6900
  %309 = getelementptr inbounds i8* %308, i64 -2, !dbg !6900
  %310 = load i8* %309, align 1, !dbg !6900
  %311 = zext i8 %310 to i32, !dbg !6900
  store i32 %311, i32* %i, align 4, !dbg !6900
  br label %bb63, !dbg !6900

bb63:                                             ; preds = %bb63, %bb62
  %312 = load i32* %i, align 4, !dbg !6901
  %313 = add nsw i32 %312, 1, !dbg !6901
  store i32 %313, i32* %i, align 4, !dbg !6901
  %314 = load i32* %i, align 4, !dbg !6901
  %315 = sext i32 %314 to i64, !dbg !6901
  %316 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %315, !dbg !6901
  %317 = load i8* %invert, align 1, !dbg !6901
  store i8 %317, i8* %316, align 1, !dbg !6901
  %318 = load i8** %fmt, align 8, !dbg !6902
  %319 = load i8* %318, align 1, !dbg !6902
  %320 = zext i8 %319 to i32, !dbg !6902
  %321 = load i32* %i, align 4, !dbg !6902
  %322 = icmp sgt i32 %320, %321, !dbg !6902
  br i1 %322, label %bb63, label %bb64, !dbg !6902

bb64:                                             ; preds = %bb63, %bb61, %bb60, %bb59
  %323 = load i8** %fmt, align 8, !dbg !6903
  %324 = load i8* %323, align 1, !dbg !6903
  %325 = zext i8 %324 to i32, !dbg !6903
  %326 = sext i32 %325 to i64, !dbg !6903
  %327 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %326, !dbg !6903
  %328 = load i8* %invert, align 1, !dbg !6903
  store i8 %328, i8* %327, align 1, !dbg !6903
  %329 = load i8** %fmt, align 8, !dbg !6904
  %330 = getelementptr inbounds i8* %329, i64 1, !dbg !6904
  store i8* %330, i8** %fmt, align 8, !dbg !6904
  br label %bb65, !dbg !6904

bb65:                                             ; preds = %bb54, %bb56, %bb64
  %331 = load i8** %fmt, align 8, !dbg !6905
  %332 = load i8* %331, align 1, !dbg !6905
  %333 = icmp ne i8 %332, 93, !dbg !6905
  br i1 %333, label %bb58, label %bb66, !dbg !6905

bb66:                                             ; preds = %bb65
  %334 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6906
  %335 = load i32* %334, align 8, !dbg !6906
  %336 = icmp eq i32 %335, 18, !dbg !6906
  br i1 %336, label %DO_LEFTBRACKET, label %bb70, !dbg !6906

bb68:                                             ; preds = %bb70
  store i8 0, i8* %zero_conversions, align 1, !dbg !6907
  %337 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6908
  %338 = load i32* %337, align 8, !dbg !6908
  %339 = sext i32 %338 to i64, !dbg !6908
  %340 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %339, !dbg !6908
  %341 = load i8* %340, align 1, !dbg !6908
  %342 = icmp eq i8 %341, 0, !dbg !6908
  br i1 %342, label %bb71, label %bb69, !dbg !6908

bb69:                                             ; preds = %bb68
  %343 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 0, !dbg !6909
  %344 = load i32* %343, align 8, !dbg !6909
  %345 = trunc i32 %344 to i8, !dbg !6909
  %346 = load i8** %b, align 8, !dbg !6909
  store i8 %345, i8* %346, align 1, !dbg !6909
  %347 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6910
  %348 = load i8* %347, align 8, !dbg !6910
  %349 = zext i8 %348 to i32, !dbg !6910
  %350 = load i8** %b, align 8, !dbg !6910
  %351 = sext i32 %349 to i64, !dbg !6910
  %352 = getelementptr inbounds i8* %350, i64 %351, !dbg !6910
  store i8* %352, i8** %b, align 8, !dbg !6910
  store i8 0, i8* %fail, align 1, !dbg !6911
  br label %bb70, !dbg !6911

bb70:                                             ; preds = %bb66, %bb69
  %353 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !6912
  %354 = icmp sge i32 %353, 0, !dbg !6912
  br i1 %354, label %bb68, label %bb71, !dbg !6912

bb71:                                             ; preds = %bb49, %bb50, %bb70, %bb68
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6913
  %355 = load i8* %fail, align 1, !dbg !6914
  %356 = icmp ne i8 %355, 0, !dbg !6914
  br i1 %356, label %DONE, label %bb72, !dbg !6914

bb72:                                             ; preds = %bb71
  %357 = load i8** %b, align 8, !dbg !6915
  store i8 0, i8* %357, align 1, !dbg !6915
  %358 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6916
  %359 = load i32* %358, align 8, !dbg !6916
  %360 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6916
  %361 = load i8* %360, align 8, !dbg !6916
  %362 = zext i8 %361 to i32, !dbg !6916
  %363 = add nsw i32 %359, %362, !dbg !6916
  %364 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6916
  store i32 %363, i32* %364, align 8, !dbg !6916
  br label %NEXT_FMT, !dbg !6916

DO_LEFTBRACKET:                                   ; preds = %bb66, %bb33
  %365 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6917
  %366 = load i32* %365, align 8, !dbg !6917
  %367 = icmp sgt i32 %366, 15, !dbg !6917
  br i1 %367, label %bb73, label %DONE, !dbg !6917

bb73:                                             ; preds = %DO_LEFTBRACKET
  %368 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 10, !dbg !6918
  %369 = getelementptr inbounds %struct.__mbstate_t* %368, i32 0, i32 0, !dbg !6918
  store i32 0, i32* %369, align 8, !dbg !6918
  %370 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6920
  %371 = load i8* %370, align 8, !dbg !6920
  %372 = icmp ne i8 %371, 0, !dbg !6920
  br i1 %372, label %bb74, label %bb75, !dbg !6920

bb74:                                             ; preds = %bb73
  %373 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 3, !dbg !6920
  %374 = load i8** %373, align 8, !dbg !6920
  %375 = bitcast i8* %374 to i32*, !dbg !6920
  store i32* %375, i32** %iftmp.11, align 8, !dbg !6920
  br label %bb77, !dbg !6920

bb75:                                             ; preds = %bb73
  %wbuf76 = bitcast [1 x i32]* %wbuf to i32*, !dbg !6920
  store i32* %wbuf76, i32** %iftmp.11, align 8, !dbg !6920
  br label %bb77, !dbg !6920

bb77:                                             ; preds = %bb75, %bb74
  %376 = load i32** %iftmp.11, align 8, !dbg !6920
  store i32* %376, i32** %wb, align 8, !dbg !6920
  store i8 1, i8* %fail, align 1, !dbg !6921
  %377 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6922
  %378 = load i32* %377, align 8, !dbg !6922
  %379 = icmp eq i32 %378, 16, !dbg !6922
  br i1 %379, label %bb78, label %bb85, !dbg !6922

bb78:                                             ; preds = %bb77
  %380 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6923
  %381 = load i32* %380, align 4, !dbg !6923
  %382 = icmp eq i32 %381, 2147483647, !dbg !6923
  br i1 %382, label %bb79, label %bb82, !dbg !6923

bb79:                                             ; preds = %bb78
  %383 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6924
  store i32 1, i32* %383, align 4, !dbg !6924
  br label %bb82, !dbg !6924

bb81:                                             ; preds = %bb82
  store i8 0, i8* %zero_conversions, align 1, !dbg !6925
  %384 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6926
  %385 = load i32* %384, align 8, !dbg !6926
  %386 = load i32** %wb, align 8, !dbg !6926
  store i32 %385, i32* %386, align 4, !dbg !6926
  %387 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6927
  %388 = load i8* %387, align 8, !dbg !6927
  %389 = zext i8 %388 to i32, !dbg !6927
  %390 = load i32** %wb, align 8, !dbg !6927
  %391 = sext i32 %389 to i64, !dbg !6927
  %392 = getelementptr inbounds i32* %390, i64 %391, !dbg !6927
  store i32* %392, i32** %wb, align 8, !dbg !6927
  br label %bb82, !dbg !6927

bb82:                                             ; preds = %bb78, %bb79, %bb81
  %393 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !6928
  %394 = icmp sge i32 %393, 0, !dbg !6928
  br i1 %394, label %bb81, label %bb83, !dbg !6928

bb83:                                             ; preds = %bb82
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6929
  %395 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 4, !dbg !6930
  %396 = load i32* %395, align 4, !dbg !6930
  %397 = icmp sgt i32 %396, 0, !dbg !6930
  br i1 %397, label %DONE, label %bb84, !dbg !6930

bb84:                                             ; preds = %bb83
  %398 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6931
  %399 = load i32* %398, align 8, !dbg !6931
  %400 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6931
  %401 = load i8* %400, align 8, !dbg !6931
  %402 = zext i8 %401 to i32, !dbg !6931
  %403 = add nsw i32 %399, %402, !dbg !6931
  %404 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6931
  store i32 %403, i32* %404, align 8, !dbg !6931
  br label %NEXT_FMT, !dbg !6931

bb85:                                             ; preds = %bb77
  %405 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 7, !dbg !6932
  %406 = load i32* %405, align 8, !dbg !6932
  %407 = icmp eq i32 %406, 17, !dbg !6932
  br i1 %407, label %bb90, label %bb98, !dbg !6932

bb87:                                             ; preds = %bb90
  store i8 0, i8* %zero_conversions, align 1, !dbg !6933
  %408 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6934
  %409 = load i32* %408, align 8, !dbg !6934
  %410 = icmp ule i32 %409, 255, !dbg !6934
  br i1 %410, label %bb88, label %bb89, !dbg !6934

bb88:                                             ; preds = %bb87
  %411 = load i16** @__ctype_b, align 8, !dbg !6934
  %412 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6934
  %413 = load i32* %412, align 8, !dbg !6934
  %414 = sext i32 %413 to i64, !dbg !6934
  %415 = getelementptr inbounds i16* %411, i64 %414, !dbg !6934
  %416 = load i16* %415, align 1, !dbg !6934
  %417 = zext i16 %416 to i32, !dbg !6934
  %418 = and i32 %417, 8192, !dbg !6934
  %419 = icmp ne i32 %418, 0, !dbg !6934
  br i1 %419, label %bb99, label %bb89, !dbg !6934

bb89:                                             ; preds = %bb88, %bb87
  %420 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6935
  %421 = load i32* %420, align 8, !dbg !6935
  %422 = load i32** %wb, align 8, !dbg !6935
  store i32 %421, i32* %422, align 4, !dbg !6935
  %423 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6936
  %424 = load i8* %423, align 8, !dbg !6936
  %425 = zext i8 %424 to i32, !dbg !6936
  %426 = load i32** %wb, align 8, !dbg !6936
  %427 = sext i32 %425 to i64, !dbg !6936
  %428 = getelementptr inbounds i32* %426, i64 %427, !dbg !6936
  store i32* %428, i32** %wb, align 8, !dbg !6936
  store i8 0, i8* %fail, align 1, !dbg !6937
  br label %bb90, !dbg !6937

bb90:                                             ; preds = %bb85, %bb89
  %429 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !6938
  %430 = icmp sge i32 %429, 0, !dbg !6938
  br i1 %430, label %bb87, label %bb99, !dbg !6938

bb93:                                             ; preds = %bb98
  store i8 0, i8* %zero_conversions, align 1, !dbg !6939
  %431 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6940
  %432 = load i32* %431, align 8, !dbg !6940
  %433 = icmp ule i32 %432, 255, !dbg !6940
  br i1 %433, label %bb94, label %bb96, !dbg !6940

bb94:                                             ; preds = %bb93
  %434 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6941
  %435 = load i32* %434, align 8, !dbg !6941
  %436 = zext i32 %435 to i64, !dbg !6941
  %437 = getelementptr inbounds [256 x i8]* %scanset, i64 0, i64 %436, !dbg !6941
  %438 = load i8* %437, align 1, !dbg !6941
  %439 = icmp eq i8 %438, 0, !dbg !6941
  br i1 %439, label %bb99, label %bb97, !dbg !6941

bb96:                                             ; preds = %bb93
  %440 = load i8* %invert, align 1, !dbg !6942
  %441 = icmp ne i8 %440, 0, !dbg !6942
  br i1 %441, label %bb99, label %bb97, !dbg !6942

bb97:                                             ; preds = %bb94, %bb96
  %442 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 11, !dbg !6943
  %443 = load i32* %442, align 8, !dbg !6943
  %444 = load i32** %wb, align 8, !dbg !6943
  store i32 %443, i32* %444, align 4, !dbg !6943
  %445 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6944
  %446 = load i8* %445, align 8, !dbg !6944
  %447 = zext i8 %446 to i32, !dbg !6944
  %448 = load i32** %wb, align 8, !dbg !6944
  %449 = sext i32 %447 to i64, !dbg !6944
  %450 = getelementptr inbounds i32* %448, i64 %449, !dbg !6944
  store i32* %450, i32** %wb, align 8, !dbg !6944
  store i8 0, i8* %fail, align 1, !dbg !6945
  br label %bb98, !dbg !6945

bb98:                                             ; preds = %bb85, %bb97
  %451 = call i32 @scan_getwc(%struct.scan_cookie* %sc) nounwind, !dbg !6946
  %452 = icmp sge i32 %451, 0, !dbg !6946
  br i1 %452, label %bb93, label %bb99, !dbg !6946

bb99:                                             ; preds = %bb88, %bb90, %bb98, %bb96, %bb94
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6947
  %453 = load i8* %fail, align 1, !dbg !6948
  %454 = icmp ne i8 %453, 0, !dbg !6948
  br i1 %454, label %DONE, label %bb100, !dbg !6948

bb100:                                            ; preds = %bb99
  %455 = getelementptr inbounds %struct.scan_cookie* %sc, i32 0, i32 9, !dbg !6948
  %456 = load i8* %455, align 1, !dbg !6948
  %457 = icmp ne i8 %456, 0, !dbg !6948
  br i1 %457, label %DONE, label %bb101, !dbg !6948

bb101:                                            ; preds = %bb100
  %458 = load i32** %wb, align 8, !dbg !6949
  store i32 0, i32* %458, align 4, !dbg !6949
  %459 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6950
  %460 = load i32* %459, align 8, !dbg !6950
  %461 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 9, !dbg !6950
  %462 = load i8* %461, align 8, !dbg !6950
  %463 = zext i8 %462 to i32, !dbg !6950
  %464 = add nsw i32 %460, %463, !dbg !6950
  %465 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6950
  store i32 %464, i32* %465, align 8, !dbg !6950
  br label %NEXT_FMT, !dbg !6950

MATCH_CHAR:                                       ; preds = %bb23, %bb3
  %466 = call i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind, !dbg !6951
  %467 = load i8** %fmt, align 8, !dbg !6951
  %468 = load i8* %467, align 1, !dbg !6951
  %469 = zext i8 %468 to i32, !dbg !6951
  %470 = icmp ne i32 %466, %469, !dbg !6951
  br i1 %470, label %bb103, label %NEXT_FMT, !dbg !6951

bb103:                                            ; preds = %MATCH_CHAR
  call void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind, !dbg !6952
  br label %DONE, !dbg !6952

NEXT_FMT:                                         ; preds = %bb31, %bb25, %bb26, %MATCH_CHAR, %bb101, %bb84, %bb72, %bb45, %bb21
  %471 = load i8** %fmt, align 8, !dbg !6953
  %472 = getelementptr inbounds i8* %471, i64 1, !dbg !6953
  store i8* %472, i8** %fmt, align 8, !dbg !6953
  %473 = load %4** %fp_addr, align 8, !dbg !6954
  %474 = getelementptr inbounds %4* %473, i32 0, i32 0, !dbg !6954
  %475 = load i16* %474, align 8, !dbg !6954
  %476 = zext i16 %475 to i32, !dbg !6954
  %477 = and i32 %476, 8, !dbg !6954
  %478 = icmp ne i32 %477, 0, !dbg !6954
  br i1 %478, label %DONE, label %bb104, !dbg !6954

bb104:                                            ; preds = %NEXT_FMT, %entry
  %479 = load i8** %fmt, align 8, !dbg !6830
  %480 = load i8* %479, align 1, !dbg !6830
  %481 = icmp ne i8 %480, 0, !dbg !6830
  br i1 %481, label %bb, label %DONE, !dbg !6830

DONE:                                             ; preds = %DO_LEFTBRACKET, %bb104, %NEXT_FMT, %bb103, %bb100, %bb99, %bb83, %bb71, %bb58, %bb44, %bb31, %bb22, %bb6
  %482 = load %4** %fp_addr, align 8, !dbg !6955
  %483 = getelementptr inbounds %4* %482, i32 0, i32 0, !dbg !6955
  %484 = load i16* %483, align 8, !dbg !6955
  %485 = zext i16 %484 to i32, !dbg !6955
  %486 = and i32 %485, 8, !dbg !6955
  %487 = icmp ne i32 %486, 0, !dbg !6955
  br i1 %487, label %bb108, label %bb105, !dbg !6955

bb105:                                            ; preds = %DONE
  %488 = load i8** %fmt, align 8, !dbg !6955
  %489 = load i8* %488, align 1, !dbg !6955
  %490 = icmp eq i8 %489, 0, !dbg !6955
  br i1 %490, label %bb109, label %bb106, !dbg !6955

bb106:                                            ; preds = %bb105
  %491 = load i8* %zero_conversions, align 1, !dbg !6955
  %492 = icmp eq i8 %491, 0, !dbg !6955
  br i1 %492, label %bb109, label %bb107, !dbg !6955

bb107:                                            ; preds = %bb106
  %493 = load %4** %fp_addr, align 8, !dbg !6955
  %494 = getelementptr inbounds %4* %493, i32 0, i32 0, !dbg !6955
  %495 = load i16* %494, align 8, !dbg !6955
  %496 = zext i16 %495 to i32, !dbg !6955
  %497 = and i32 %496, 4, !dbg !6955
  %498 = icmp ne i32 %497, 0, !dbg !6955
  br i1 %498, label %bb108, label %bb109, !dbg !6955

bb108:                                            ; preds = %bb107, %DONE
  %499 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6956
  store i32 -1, i32* %499, align 8, !dbg !6956
  br label %bb109, !dbg !6956

bb109:                                            ; preds = %bb108, %bb107, %bb106, %bb105
  call void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind, !dbg !6957
  %500 = getelementptr inbounds %struct.psfs_t* %psfs, i32 0, i32 5, !dbg !6958
  %501 = load i32* %500, align 8, !dbg !6958
  store i32 %501, i32* %0, align 4, !dbg !6958
  %502 = load i32* %0, align 4, !dbg !6958
  store i32 %502, i32* %retval, align 4, !dbg !6958
  %retval110 = load i32* %retval, !dbg !6958
  ret i32 %retval110, !dbg !6958
}

define internal void @kill_scan_cookie(%struct.scan_cookie* %sc) nounwind inlinehint {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6959
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 7, !dbg !6959
  %2 = load i8* %1, align 1, !dbg !6959
  %3 = sext i8 %2 to i32, !dbg !6959
  %4 = and i32 %3, 1, !dbg !6959
  %5 = trunc i32 %4 to i8, !dbg !6959
  %toBool = icmp ne i8 %5, 0, !dbg !6959
  br i1 %toBool, label %bb, label %return, !dbg !6959

bb:                                               ; preds = %entry
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6961
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 2, !dbg !6961
  %8 = load %4** %7, align 8, !dbg !6961
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6961
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 1, !dbg !6961
  %11 = load i32* %10, align 4, !dbg !6961
  %12 = call i32 @ungetc(i32 %11, %4* %8) nounwind, !dbg !6961
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6962
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 3, !dbg !6962
  %15 = load i32* %14, align 8, !dbg !6962
  %16 = icmp eq i32 %15, 0, !dbg !6962
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6963
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 2, !dbg !6963
  %19 = load %4** %18, align 8, !dbg !6963
  br i1 %16, label %bb1, label %bb2, !dbg !6962

bb1:                                              ; preds = %bb
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6963
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 5, !dbg !6963
  %22 = load i32* %21, align 8, !dbg !6963
  %23 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !6963
  %24 = getelementptr inbounds [2 x i32]* %23, i64 0, i64 1, !dbg !6963
  store i32 %22, i32* %24, align 4, !dbg !6963
  br label %return, !dbg !6963

bb2:                                              ; preds = %bb
  %25 = getelementptr inbounds %4* %19, i32 0, i32 10, !dbg !6964
  %26 = getelementptr inbounds [2 x i32]* %25, i64 0, i64 1, !dbg !6964
  store i32 0, i32* %26, align 4, !dbg !6964
  br label %return, !dbg !6964

return:                                           ; preds = %entry, %bb1, %bb2
  ret void, !dbg !6965
}

define i32 @vsnprintf(i8* noalias %buf, i64 %size, i8* noalias %format, %struct.__va_list_tag* %arg) nounwind {
entry:
  %buf_addr = alloca i8*, align 8
  %size_addr = alloca i64, align 8
  %format_addr = alloca i8*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %f = alloca %4
  %rv = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %buf, i8** %buf_addr
  store i64 %size, i64* %size_addr
  store i8* %format, i8** %format_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %1 = getelementptr inbounds %4* %f, i32 0, i32 2, !dbg !6966
  store i32 -2, i32* %1, align 4, !dbg !6966
  %2 = getelementptr inbounds %4* %f, i32 0, i32 0, !dbg !6968
  store i16 208, i16* %2, align 8, !dbg !6968
  %3 = getelementptr inbounds %4* %f, i32 0, i32 1, !dbg !6969
  %4 = getelementptr inbounds [2 x i8]* %3, i64 0, i64 0, !dbg !6969
  store i8 0, i8* %4, align 1, !dbg !6969
  %5 = getelementptr inbounds %4* %f, i32 0, i32 11, !dbg !6970
  %6 = getelementptr inbounds %struct.__mbstate_t* %5, i32 0, i32 0, !dbg !6970
  store i32 0, i32* %6, align 8, !dbg !6970
  %7 = getelementptr inbounds %4* %f, i32 0, i32 9, !dbg !6971
  store %4* null, %4** %7, align 8, !dbg !6971
  %8 = load i8** %buf_addr, align 8, !dbg !6972
  %9 = ptrtoint i8* %8 to i64, !dbg !6972
  %not = xor i64 %9, -1, !dbg !6972
  %10 = load i64* %size_addr, align 8, !dbg !6972
  %11 = icmp ult i64 %not, %10, !dbg !6972
  br i1 %11, label %bb, label %bb3, !dbg !6972

bb:                                               ; preds = %entry
  %12 = load i8** %buf_addr, align 8, !dbg !6973
  %13 = ptrtoint i8* %12 to i64, !dbg !6973
  %not2 = xor i64 %13, -1, !dbg !6973
  store i64 %not2, i64* %size_addr, align 8, !dbg !6973
  br label %bb3, !dbg !6973

bb3:                                              ; preds = %bb, %entry
  %14 = load i8** %buf_addr, align 8, !dbg !6974
  %15 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !6974
  store i8* %14, i8** %15, align 8, !dbg !6974
  %16 = load i8** %buf_addr, align 8, !dbg !6975
  %17 = load i64* %size_addr, align 8, !dbg !6975
  %18 = getelementptr inbounds i8* %16, i64 %17, !dbg !6975
  %19 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !6975
  store i8* %18, i8** %19, align 8, !dbg !6975
  %20 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !6976
  %21 = load i8** %20, align 8, !dbg !6976
  %22 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6976
  store i8* %21, i8** %22, align 8, !dbg !6976
  %23 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6976
  %24 = load i8** %23, align 8, !dbg !6976
  %25 = getelementptr inbounds %4* %f, i32 0, i32 6, !dbg !6976
  store i8* %24, i8** %25, align 8, !dbg !6976
  %26 = getelementptr inbounds %4* %f, i32 0, i32 3, !dbg !6977
  %27 = load i8** %26, align 8, !dbg !6977
  %28 = getelementptr inbounds %4* %f, i32 0, i32 7, !dbg !6977
  store i8* %27, i8** %28, align 8, !dbg !6977
  %29 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !6978
  %30 = load i8** %29, align 8, !dbg !6978
  %31 = getelementptr inbounds %4* %f, i32 0, i32 8, !dbg !6978
  store i8* %30, i8** %31, align 8, !dbg !6978
  %32 = load i8** %format_addr, align 8, !dbg !6979
  %33 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !6979
  %34 = call i32 @vfprintf(%4* noalias %f, i8* noalias %32, %struct.__va_list_tag* %33) nounwind, !dbg !6979
  store i32 %34, i32* %rv, align 4, !dbg !6979
  %35 = load i64* %size_addr, align 8, !dbg !6980
  %36 = icmp ne i64 %35, 0, !dbg !6980
  br i1 %36, label %bb4, label %bb7, !dbg !6980

bb4:                                              ; preds = %bb3
  %37 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6981
  %38 = load i8** %37, align 8, !dbg !6981
  %39 = getelementptr inbounds %4* %f, i32 0, i32 4, !dbg !6981
  %40 = load i8** %39, align 8, !dbg !6981
  %41 = icmp eq i8* %38, %40, !dbg !6981
  br i1 %41, label %bb5, label %bb6, !dbg !6981

bb5:                                              ; preds = %bb4
  %42 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6982
  %43 = load i8** %42, align 8, !dbg !6982
  %44 = getelementptr inbounds i8* %43, i64 -1, !dbg !6982
  %45 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6982
  store i8* %44, i8** %45, align 8, !dbg !6982
  br label %bb6, !dbg !6982

bb6:                                              ; preds = %bb5, %bb4
  %46 = getelementptr inbounds %4* %f, i32 0, i32 5, !dbg !6983
  %47 = load i8** %46, align 8, !dbg !6983
  store i8 0, i8* %47, align 1, !dbg !6983
  br label %bb7, !dbg !6983

bb7:                                              ; preds = %bb6, %bb3
  %48 = load i32* %rv, align 4, !dbg !6984
  store i32 %48, i32* %0, align 4, !dbg !6984
  %49 = load i32* %0, align 4, !dbg !6984
  store i32 %49, i32* %retval, align 4, !dbg !6984
  %retval8 = load i32* %retval, !dbg !6984
  ret i32 %retval8, !dbg !6984
}

define i32 @wcswidth(i32* %pwcs, i64 %n) nounwind {
entry:
  %pwcs_addr = alloca i32*, align 8
  %n_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %count = alloca i32
  %wc = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32* %pwcs, i32** %pwcs_addr
  store i64 %n, i64* %n_addr
  store i32 0, i32* %count, align 4, !dbg !6985
  br label %bb7, !dbg !6985

bb:                                               ; preds = %bb8
  %1 = load i32* %wc, align 4, !dbg !6987
  %2 = icmp sle i32 %1, 255, !dbg !6987
  br i1 %2, label %bb1, label %bb6, !dbg !6987

bb1:                                              ; preds = %bb
  %3 = load i32* %wc, align 4, !dbg !6988
  %4 = icmp sle i32 %3, 31, !dbg !6988
  br i1 %4, label %bb4, label %bb2, !dbg !6988

bb2:                                              ; preds = %bb1
  %5 = load i32* %wc, align 4, !dbg !6988
  %6 = icmp sgt i32 %5, 126, !dbg !6988
  %7 = load i32* %wc, align 4, !dbg !6988
  %8 = icmp sle i32 %7, 159, !dbg !6988
  %or.cond = and i1 %6, %8
  br i1 %or.cond, label %bb4, label %bb5, !dbg !6988

bb4:                                              ; preds = %bb2, %bb1
  store i32 -1, i32* %0, align 4, !dbg !6989
  br label %bb10, !dbg !6989

bb5:                                              ; preds = %bb2
  %9 = load i32* %count, align 4, !dbg !6990
  %10 = add nsw i32 %9, 1, !dbg !6990
  store i32 %10, i32* %count, align 4, !dbg !6990
  %11 = load i64* %n_addr, align 8, !dbg !6985
  %12 = sub i64 %11, 1, !dbg !6985
  store i64 %12, i64* %n_addr, align 8, !dbg !6985
  br label %bb7, !dbg !6985

bb6:                                              ; preds = %bb
  store i32 -1, i32* %0, align 4, !dbg !6991
  br label %bb10, !dbg !6991

bb7:                                              ; preds = %bb5, %entry
  %13 = load i64* %n_addr, align 8, !dbg !6985
  %14 = icmp eq i64 %13, 0, !dbg !6985
  br i1 %14, label %bb9, label %bb8, !dbg !6985

bb8:                                              ; preds = %bb7
  %15 = load i32** %pwcs_addr, align 8, !dbg !6985
  %16 = load i32* %15, align 4, !dbg !6985
  store i32 %16, i32* %wc, align 4, !dbg !6985
  %17 = load i32* %wc, align 4, !dbg !6985
  %18 = icmp ne i32 %17, 0, !dbg !6985
  %19 = zext i1 %18 to i8, !dbg !6985
  %20 = load i32** %pwcs_addr, align 8, !dbg !6985
  %21 = getelementptr inbounds i32* %20, i64 1, !dbg !6985
  store i32* %21, i32** %pwcs_addr, align 8, !dbg !6985
  %toBool = icmp ne i8 %19, 0, !dbg !6985
  br i1 %toBool, label %bb, label %bb9, !dbg !6985

bb9:                                              ; preds = %bb8, %bb7
  %22 = load i32* %count, align 4, !dbg !6992
  store i32 %22, i32* %0, align 4, !dbg !6992
  br label %bb10, !dbg !6992

bb10:                                             ; preds = %bb9, %bb6, %bb4
  %23 = load i32* %0, align 4, !dbg !6989
  store i32 %23, i32* %retval, align 4, !dbg !6989
  %retval11 = load i32* %retval, !dbg !6989
  ret i32 %retval11, !dbg !6989
}

define hidden void @__init_scan_cookie(%struct.scan_cookie* %sc, %4* %fp) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %fp_addr = alloca %4*, align 8
  %iftmp.0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store %4* %fp, %4** %fp_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6993
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 2, !dbg !6993
  %2 = load %4** %fp_addr, align 8, !dbg !6993
  store %4* %2, %4** %1, align 8, !dbg !6993
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6995
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 3, !dbg !6995
  store i32 0, i32* %4, align 8, !dbg !6995
  %5 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6996
  %6 = getelementptr inbounds %struct.scan_cookie* %5, i32 0, i32 7, !dbg !6996
  store i8 0, i8* %6, align 1, !dbg !6996
  %7 = load %4** %fp_addr, align 8, !dbg !6997
  %8 = getelementptr inbounds %4* %7, i32 0, i32 0, !dbg !6997
  %9 = load i16* %8, align 8, !dbg !6997
  %10 = zext i16 %9 to i32, !dbg !6997
  %11 = and i32 %10, 2, !dbg !6997
  %12 = icmp ne i32 %11, 0, !dbg !6997
  br i1 %12, label %bb, label %bb1, !dbg !6997

bb:                                               ; preds = %entry
  %13 = load %4** %fp_addr, align 8, !dbg !6997
  %14 = getelementptr inbounds %4* %13, i32 0, i32 10, !dbg !6997
  %15 = getelementptr inbounds [2 x i32]* %14, i64 0, i64 1, !dbg !6997
  %16 = load i32* %15, align 4, !dbg !6997
  store i32 %16, i32* %iftmp.0, align 4, !dbg !6997
  br label %bb2, !dbg !6997

bb1:                                              ; preds = %entry
  store i32 0, i32* %iftmp.0, align 4, !dbg !6997
  br label %bb2, !dbg !6997

bb2:                                              ; preds = %bb1, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6997
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 5, !dbg !6997
  %19 = load i32* %iftmp.0, align 4, !dbg !6997
  store i32 %19, i32* %18, align 8, !dbg !6997
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6998
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 8, !dbg !6998
  store i8 0, i8* %21, align 2, !dbg !6998
  %22 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !6999
  %23 = getelementptr inbounds %struct.scan_cookie* %22, i32 0, i32 9, !dbg !6999
  store i8 0, i8* %23, align 1, !dbg !6999
  %24 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7000
  %25 = getelementptr inbounds %struct.scan_cookie* %24, i32 0, i32 14, !dbg !7000
  store i8* getelementptr inbounds ([2 x i8]* @decpt_str, i64 0, i64 0), i8** %25, align 8, !dbg !7000
  %26 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7000
  %27 = getelementptr inbounds %struct.scan_cookie* %26, i32 0, i32 14, !dbg !7000
  %28 = load i8** %27, align 8, !dbg !7000
  %29 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7000
  %30 = getelementptr inbounds %struct.scan_cookie* %29, i32 0, i32 17, !dbg !7000
  store i8* %28, i8** %30, align 8, !dbg !7000
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7001
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 15, !dbg !7001
  store i32 1, i32* %32, align 8, !dbg !7001
  %33 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7002
  %34 = getelementptr inbounds %struct.scan_cookie* %33, i32 0, i32 16, !dbg !7002
  store i32 46, i32* %34, align 4, !dbg !7002
  ret void, !dbg !7003
}

define hidden i32 @__scan_getc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %c = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %1 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7004
  %2 = getelementptr inbounds %struct.scan_cookie* %1, i32 0, i32 0, !dbg !7004
  store i32 -1, i32* %2, align 8, !dbg !7004
  %3 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7006
  %4 = getelementptr inbounds %struct.scan_cookie* %3, i32 0, i32 4, !dbg !7006
  %5 = load i32* %4, align 4, !dbg !7006
  %6 = sub nsw i32 %5, 1, !dbg !7006
  %7 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7006
  %8 = getelementptr inbounds %struct.scan_cookie* %7, i32 0, i32 4, !dbg !7006
  store i32 %6, i32* %8, align 4, !dbg !7006
  %9 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7006
  %10 = getelementptr inbounds %struct.scan_cookie* %9, i32 0, i32 4, !dbg !7006
  %11 = load i32* %10, align 4, !dbg !7006
  %12 = icmp slt i32 %11, 0, !dbg !7006
  %13 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7007
  %14 = getelementptr inbounds %struct.scan_cookie* %13, i32 0, i32 7, !dbg !7007
  %15 = load i8* %14, align 1, !dbg !7007
  br i1 %12, label %bb, label %bb1, !dbg !7006

bb:                                               ; preds = %entry
  %16 = or i8 %15, 2, !dbg !7007
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7007
  %18 = getelementptr inbounds %struct.scan_cookie* %17, i32 0, i32 7, !dbg !7007
  store i8 %16, i8* %18, align 1, !dbg !7007
  store i32 -1, i32* %0, align 4, !dbg !7008
  br label %bb7, !dbg !7008

bb1:                                              ; preds = %entry
  %19 = icmp eq i8 %15, 0, !dbg !7009
  %20 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7010
  br i1 %19, label %bb2, label %bb5, !dbg !7009

bb2:                                              ; preds = %bb1
  %21 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 13, !dbg !7010
  %22 = load i32 (%struct.scan_cookie*)** %21, align 8, !dbg !7010
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7010
  %24 = call i32 %22(%struct.scan_cookie* %23) nounwind, !dbg !7010
  store i32 %24, i32* %c, align 4, !dbg !7010
  %25 = load i32* %c, align 4, !dbg !7010
  %26 = icmp eq i32 %25, -1, !dbg !7010
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7011
  br i1 %26, label %bb3, label %bb4, !dbg !7010

bb3:                                              ; preds = %bb2
  %28 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 7, !dbg !7011
  %29 = load i8* %28, align 1, !dbg !7011
  %30 = or i8 %29, 2, !dbg !7011
  %31 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7011
  %32 = getelementptr inbounds %struct.scan_cookie* %31, i32 0, i32 7, !dbg !7011
  store i8 %30, i8* %32, align 1, !dbg !7011
  store i32 -1, i32* %0, align 4, !dbg !7012
  br label %bb7, !dbg !7012

bb4:                                              ; preds = %bb2
  %33 = getelementptr inbounds %struct.scan_cookie* %27, i32 0, i32 1, !dbg !7013
  %34 = load i32* %c, align 4, !dbg !7013
  store i32 %34, i32* %33, align 4, !dbg !7013
  br label %bb6, !dbg !7013

bb5:                                              ; preds = %bb1
  %35 = getelementptr inbounds %struct.scan_cookie* %20, i32 0, i32 7, !dbg !7014
  store i8 0, i8* %35, align 1, !dbg !7014
  br label %bb6, !dbg !7014

bb6:                                              ; preds = %bb5, %bb4
  %36 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7015
  %37 = getelementptr inbounds %struct.scan_cookie* %36, i32 0, i32 3, !dbg !7015
  %38 = load i32* %37, align 8, !dbg !7015
  %39 = add nsw i32 %38, 1, !dbg !7015
  %40 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7015
  %41 = getelementptr inbounds %struct.scan_cookie* %40, i32 0, i32 3, !dbg !7015
  store i32 %39, i32* %41, align 8, !dbg !7015
  %42 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7016
  %43 = getelementptr inbounds %struct.scan_cookie* %42, i32 0, i32 1, !dbg !7016
  %44 = load i32* %43, align 4, !dbg !7016
  %45 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7016
  %46 = getelementptr inbounds %struct.scan_cookie* %45, i32 0, i32 0, !dbg !7016
  store i32 %44, i32* %46, align 8, !dbg !7016
  %47 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7016
  %48 = getelementptr inbounds %struct.scan_cookie* %47, i32 0, i32 0, !dbg !7016
  %49 = load i32* %48, align 8, !dbg !7016
  store i32 %49, i32* %0, align 4, !dbg !7016
  br label %bb7, !dbg !7016

bb7:                                              ; preds = %bb6, %bb3, %bb
  %50 = load i32* %0, align 4, !dbg !7008
  store i32 %50, i32* %retval, align 4, !dbg !7008
  %retval8 = load i32* %retval, !dbg !7008
  ret i32 %retval8, !dbg !7008
}

define hidden void @__scan_ungetc(%struct.scan_cookie* %sc) nounwind {
entry:
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %"alloca point" = bitcast i32 0 to i32
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  %0 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7017
  %1 = getelementptr inbounds %struct.scan_cookie* %0, i32 0, i32 4, !dbg !7017
  %2 = load i32* %1, align 4, !dbg !7017
  %3 = add nsw i32 %2, 1, !dbg !7017
  %4 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7017
  %5 = getelementptr inbounds %struct.scan_cookie* %4, i32 0, i32 4, !dbg !7017
  store i32 %3, i32* %5, align 4, !dbg !7017
  %6 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7019
  %7 = getelementptr inbounds %struct.scan_cookie* %6, i32 0, i32 7, !dbg !7019
  %8 = load i8* %7, align 1, !dbg !7019
  %9 = icmp eq i8 %8, 2, !dbg !7019
  %10 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7020
  %11 = getelementptr inbounds %struct.scan_cookie* %10, i32 0, i32 7, !dbg !7020
  br i1 %9, label %bb, label %bb1, !dbg !7019

bb:                                               ; preds = %entry
  store i8 0, i8* %11, align 1, !dbg !7020
  %12 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7021
  %13 = getelementptr inbounds %struct.scan_cookie* %12, i32 0, i32 1, !dbg !7021
  %14 = load i32* %13, align 4, !dbg !7021
  %15 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7021
  %16 = getelementptr inbounds %struct.scan_cookie* %15, i32 0, i32 0, !dbg !7021
  store i32 %14, i32* %16, align 8, !dbg !7021
  br label %return, !dbg !7021

bb1:                                              ; preds = %entry
  %17 = load i8* %11, align 1, !dbg !7022
  %18 = icmp eq i8 %17, 0, !dbg !7022
  br i1 %18, label %bb2, label %return, !dbg !7022

bb2:                                              ; preds = %bb1
  %19 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7023
  %20 = getelementptr inbounds %struct.scan_cookie* %19, i32 0, i32 7, !dbg !7023
  store i8 1, i8* %20, align 1, !dbg !7023
  %21 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7024
  %22 = getelementptr inbounds %struct.scan_cookie* %21, i32 0, i32 3, !dbg !7024
  %23 = load i32* %22, align 8, !dbg !7024
  %24 = sub nsw i32 %23, 1, !dbg !7024
  %25 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7024
  %26 = getelementptr inbounds %struct.scan_cookie* %25, i32 0, i32 3, !dbg !7024
  store i32 %24, i32* %26, align 8, !dbg !7024
  br label %return, !dbg !7024

return:                                           ; preds = %bb, %bb1, %bb2
  ret void, !dbg !7025
}

define hidden i32 @__psfs_do_numeric(%struct.psfs_t* %psfs, %struct.scan_cookie* %sc) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %sc_addr = alloca %struct.scan_cookie*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %b = alloca i8*
  %p = alloca i8*
  %exp_adjust = alloca i32
  %buf = alloca [167 x i8]
  %usflag = alloca i8
  %base = alloca i8
  %nonzero = alloca i8
  %seendigit = alloca i8
  %x = alloca x86_fp80
  %e = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  store %struct.scan_cookie* %sc, %struct.scan_cookie** %sc_addr
  store i32 0, i32* %exp_adjust, align 4, !dbg !7026
  store i8 0, i8* %nonzero, align 1, !dbg !7028
  store i8 0, i8* %seendigit, align 1, !dbg !7029
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7030
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 7, !dbg !7030
  %3 = load i32* %2, align 8, !dbg !7030
  %4 = sub nsw i32 %3, 1, !dbg !7030
  %5 = sext i32 %4 to i64, !dbg !7030
  %6 = getelementptr inbounds [15 x i8]* @spec_base, i64 0, i64 %5, !dbg !7030
  %7 = load i8* %6, align 1, !dbg !7030
  store i8 %7, i8* %base, align 1, !dbg !7030
  %8 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7031
  %9 = getelementptr inbounds %struct.psfs_t* %8, i32 0, i32 7, !dbg !7031
  %10 = load i32* %9, align 8, !dbg !7031
  %11 = icmp sle i32 %10, 5, !dbg !7031
  %12 = zext i1 %11 to i8, !dbg !7031
  store i8 %12, i8* %usflag, align 1, !dbg !7031
  %buf1 = bitcast [167 x i8]* %buf to i8*, !dbg !7032
  store i8* %buf1, i8** %b, align 8, !dbg !7032
  %13 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7033
  %14 = getelementptr inbounds %struct.psfs_t* %13, i32 0, i32 7, !dbg !7033
  %15 = load i32* %14, align 8, !dbg !7033
  %16 = icmp eq i32 %15, 1, !dbg !7033
  br i1 %16, label %bb, label %bb12, !dbg !7033

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), i8** %p, align 8, !dbg !7034
  br label %bb2, !dbg !7034

bb2:                                              ; preds = %bb7, %bb
  %17 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7035
  %18 = call i32 @__scan_getc(%struct.scan_cookie* %17) nounwind, !dbg !7035
  %19 = icmp slt i32 %18, 0, !dbg !7035
  br i1 %19, label %bb4, label %bb3, !dbg !7035

bb3:                                              ; preds = %bb2
  %20 = load i8** %p, align 8, !dbg !7035
  %21 = load i8* %20, align 1, !dbg !7035
  %22 = zext i8 %21 to i32, !dbg !7035
  %23 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7035
  %24 = getelementptr inbounds %struct.scan_cookie* %23, i32 0, i32 0, !dbg !7035
  %25 = load i32* %24, align 8, !dbg !7035
  %26 = icmp ne i32 %22, %25, !dbg !7035
  br i1 %26, label %bb4, label %bb7, !dbg !7035

bb4:                                              ; preds = %bb3, %bb2
  %27 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7036
  call void @__scan_ungetc(%struct.scan_cookie* %27) nounwind, !dbg !7036
  %28 = load i8** %p, align 8, !dbg !7037
  %29 = icmp ugt i8* %28, getelementptr inbounds ([6 x i8]* @nil_string, i64 0, i64 0), !dbg !7037
  br i1 %29, label %bb5, label %bb12, !dbg !7037

bb5:                                              ; preds = %bb4
  store i32 -2, i32* %0, align 4, !dbg !7038
  br label %bb104, !dbg !7038

bb7:                                              ; preds = %bb3
  %30 = load i8** %p, align 8, !dbg !7039
  %31 = getelementptr inbounds i8* %30, i64 1, !dbg !7039
  store i8* %31, i8** %p, align 8, !dbg !7039
  %32 = load i8** %p, align 8, !dbg !7039
  %33 = load i8* %32, align 1, !dbg !7039
  %34 = icmp eq i8 %33, 0, !dbg !7039
  br i1 %34, label %bb8, label %bb2, !dbg !7039

bb8:                                              ; preds = %bb7
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7040
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 9, !dbg !7040
  %37 = load i8* %36, align 8, !dbg !7040
  %38 = icmp ne i8 %37, 0, !dbg !7040
  br i1 %38, label %bb9, label %bb10, !dbg !7040

bb9:                                              ; preds = %bb8
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7041
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 5, !dbg !7041
  %41 = load i32* %40, align 8, !dbg !7041
  %42 = add nsw i32 %41, 1, !dbg !7041
  %43 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7041
  %44 = getelementptr inbounds %struct.psfs_t* %43, i32 0, i32 5, !dbg !7041
  store i32 %42, i32* %44, align 8, !dbg !7041
  %45 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7042
  %46 = getelementptr inbounds %struct.psfs_t* %45, i32 0, i32 6, !dbg !7042
  %47 = load i32* %46, align 4, !dbg !7042
  %48 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7042
  %49 = getelementptr inbounds %struct.psfs_t* %48, i32 0, i32 3, !dbg !7042
  %50 = load i8** %49, align 8, !dbg !7042
  call void @_store_inttype(i8* %50, i32 %47, i64 0) nounwind, !dbg !7042
  br label %bb10, !dbg !7042

bb10:                                             ; preds = %bb9, %bb8
  store i32 0, i32* %0, align 4, !dbg !7043
  br label %bb104, !dbg !7043

bb12:                                             ; preds = %bb4, %entry
  %51 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7044
  %52 = call i32 @__scan_getc(%struct.scan_cookie* %51) nounwind, !dbg !7044
  %53 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7045
  %54 = getelementptr inbounds %struct.scan_cookie* %53, i32 0, i32 0, !dbg !7045
  %55 = load i32* %54, align 8, !dbg !7045
  %56 = icmp slt i32 %55, 0, !dbg !7045
  br i1 %56, label %bb13, label %bb14, !dbg !7045

bb13:                                             ; preds = %bb12
  store i32 -1, i32* %0, align 4, !dbg !7046
  br label %bb104, !dbg !7046

bb14:                                             ; preds = %bb12
  %57 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7047
  %58 = getelementptr inbounds %struct.scan_cookie* %57, i32 0, i32 0, !dbg !7047
  %59 = load i32* %58, align 8, !dbg !7047
  %60 = icmp eq i32 %59, 43, !dbg !7047
  br i1 %60, label %bb16, label %bb15, !dbg !7047

bb15:                                             ; preds = %bb14
  %61 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7047
  %62 = getelementptr inbounds %struct.scan_cookie* %61, i32 0, i32 0, !dbg !7047
  %63 = load i32* %62, align 8, !dbg !7047
  %64 = icmp eq i32 %63, 45, !dbg !7047
  br i1 %64, label %bb16, label %bb17, !dbg !7047

bb16:                                             ; preds = %bb15, %bb14
  %65 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7048
  %66 = getelementptr inbounds %struct.scan_cookie* %65, i32 0, i32 0, !dbg !7048
  %67 = load i32* %66, align 8, !dbg !7048
  %68 = trunc i32 %67 to i8, !dbg !7048
  %69 = load i8** %b, align 8, !dbg !7048
  store i8 %68, i8* %69, align 1, !dbg !7048
  %70 = load i8** %b, align 8, !dbg !7048
  %71 = getelementptr inbounds i8* %70, i64 1, !dbg !7048
  store i8* %71, i8** %b, align 8, !dbg !7048
  %72 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7049
  %73 = call i32 @__scan_getc(%struct.scan_cookie* %72) nounwind, !dbg !7049
  br label %bb17, !dbg !7049

bb17:                                             ; preds = %bb16, %bb15
  %74 = load i8* %base, align 1, !dbg !7050
  %75 = zext i8 %74 to i32, !dbg !7050
  %76 = and i32 %75, 239, !dbg !7050
  %77 = icmp eq i32 %76, 0, !dbg !7050
  br i1 %77, label %bb18, label %bb27, !dbg !7050

bb18:                                             ; preds = %bb17
  %78 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7051
  %79 = getelementptr inbounds %struct.scan_cookie* %78, i32 0, i32 0, !dbg !7051
  %80 = load i32* %79, align 8, !dbg !7051
  %81 = icmp eq i32 %80, 48, !dbg !7051
  br i1 %81, label %bb19, label %bb25, !dbg !7051

bb19:                                             ; preds = %bb18
  %82 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7052
  %83 = call i32 @__scan_getc(%struct.scan_cookie* %82) nounwind, !dbg !7052
  %84 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7053
  %85 = getelementptr inbounds %struct.scan_cookie* %84, i32 0, i32 0, !dbg !7053
  %86 = load i32* %85, align 8, !dbg !7053
  %87 = or i32 %86, 32, !dbg !7053
  %88 = icmp eq i32 %87, 120, !dbg !7053
  %89 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7054
  br i1 %88, label %bb20, label %bb22, !dbg !7053

bb20:                                             ; preds = %bb19
  %90 = call i32 @__scan_getc(%struct.scan_cookie* %89) nounwind, !dbg !7054
  %91 = icmp slt i32 %90, 0, !dbg !7054
  br i1 %91, label %DONE_DO_UNGET, label %bb21, !dbg !7054

bb21:                                             ; preds = %bb20
  store i8 16, i8* %base, align 1, !dbg !7055
  br label %bb27, !dbg !7055

bb22:                                             ; preds = %bb19
  call void @__scan_ungetc(%struct.scan_cookie* %89) nounwind, !dbg !7056
  %92 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7057
  %93 = getelementptr inbounds %struct.scan_cookie* %92, i32 0, i32 0, !dbg !7057
  store i32 48, i32* %93, align 8, !dbg !7057
  %94 = load i8* %base, align 1, !dbg !7058
  %int_cast_to_i64 = zext i8 1 to i64
  %95 = icmp ult i64 %int_cast_to_i64, 8
  br i1 %95, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb22
  %96 = lshr i8 %94, 1, !dbg !7058
  %97 = add i8 %96, 8, !dbg !7058
  store i8 %97, i8* %base, align 1, !dbg !7058
  %98 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7059
  %99 = getelementptr inbounds %struct.psfs_t* %98, i32 0, i32 7, !dbg !7059
  %100 = load i32* %99, align 8, !dbg !7059
  %101 = icmp sgt i32 %100, 7, !dbg !7059
  br i1 %101, label %bb23, label %bb27, !dbg !7059

bb23:                                             ; preds = %klee_overshift_check.exit
  store i8 10, i8* %base, align 1, !dbg !7060
  br label %bb27, !dbg !7060

bb25:                                             ; preds = %bb18
  %102 = load i8* %base, align 1, !dbg !7061
  %103 = icmp eq i8 %102, 0, !dbg !7061
  br i1 %103, label %bb26, label %bb27, !dbg !7061

bb26:                                             ; preds = %bb25
  store i8 10, i8* %base, align 1, !dbg !7062
  br label %bb27, !dbg !7062

bb27:                                             ; preds = %bb21, %klee_overshift_check.exit, %bb23, %bb26, %bb25, %bb17
  %104 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7063
  %105 = getelementptr inbounds %struct.scan_cookie* %104, i32 0, i32 0, !dbg !7063
  %106 = load i32* %105, align 8, !dbg !7063
  %107 = icmp eq i32 %106, 48, !dbg !7063
  br i1 %107, label %bb28, label %bb38, !dbg !7063

bb28:                                             ; preds = %bb27
  store i8 1, i8* %seendigit, align 1, !dbg !7064
  %108 = load i8** %b, align 8, !dbg !7065
  store i8 48, i8* %108, align 1, !dbg !7065
  %109 = load i8** %b, align 8, !dbg !7065
  %110 = getelementptr inbounds i8* %109, i64 1, !dbg !7065
  store i8* %110, i8** %b, align 8, !dbg !7065
  br label %bb29, !dbg !7065

bb29:                                             ; preds = %bb29, %bb28
  %111 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7066
  %112 = call i32 @__scan_getc(%struct.scan_cookie* %111) nounwind, !dbg !7066
  %113 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7067
  %114 = getelementptr inbounds %struct.scan_cookie* %113, i32 0, i32 0, !dbg !7067
  %115 = load i32* %114, align 8, !dbg !7067
  %116 = icmp eq i32 %115, 48, !dbg !7067
  br i1 %116, label %bb29, label %bb38, !dbg !7067

bb31:                                             ; preds = %bb40, %bb39
  %117 = load i8** %b, align 8, !dbg !7068
  %118 = ptrtoint i8* %117 to i64, !dbg !7068
  %buf32 = bitcast [167 x i8]* %buf to i8*, !dbg !7068
  %buf3233 = ptrtoint i8* %buf32 to i64, !dbg !7068
  %119 = sub nsw i64 %118, %buf3233, !dbg !7068
  %120 = icmp sle i64 %119, 64, !dbg !7068
  br i1 %120, label %bb35, label %bb36, !dbg !7068

bb35:                                             ; preds = %bb31
  store i8 1, i8* %seendigit, align 1, !dbg !7069
  %121 = load i8* %seendigit, align 1, !dbg !7069
  store i8 %121, i8* %nonzero, align 1, !dbg !7069
  %122 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7070
  %123 = getelementptr inbounds %struct.scan_cookie* %122, i32 0, i32 0, !dbg !7070
  %124 = load i32* %123, align 8, !dbg !7070
  %125 = trunc i32 %124 to i8, !dbg !7070
  %126 = load i8** %b, align 8, !dbg !7070
  store i8 %125, i8* %126, align 1, !dbg !7070
  %127 = load i8** %b, align 8, !dbg !7070
  %128 = getelementptr inbounds i8* %127, i64 1, !dbg !7070
  store i8* %128, i8** %b, align 8, !dbg !7070
  br label %bb37, !dbg !7070

bb36:                                             ; preds = %bb31
  %129 = load i32* %exp_adjust, align 4, !dbg !7071
  %130 = add nsw i32 %129, 1, !dbg !7071
  store i32 %130, i32* %exp_adjust, align 4, !dbg !7071
  br label %bb37, !dbg !7071

bb37:                                             ; preds = %bb36, %bb35
  %131 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7072
  %132 = call i32 @__scan_getc(%struct.scan_cookie* %131) nounwind, !dbg !7072
  br label %bb38, !dbg !7072

bb38:                                             ; preds = %bb27, %bb29, %bb37
  %133 = load i16** @__ctype_b, align 8, !dbg !7073
  %134 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7073
  %135 = getelementptr inbounds %struct.scan_cookie* %134, i32 0, i32 0, !dbg !7073
  %136 = load i32* %135, align 8, !dbg !7073
  %137 = sext i32 %136 to i64, !dbg !7073
  %138 = getelementptr inbounds i16* %133, i64 %137, !dbg !7073
  %139 = load i16* %138, align 1, !dbg !7073
  %140 = zext i16 %139 to i32, !dbg !7073
  %141 = and i32 %140, 4096, !dbg !7073
  %142 = icmp eq i32 %141, 0, !dbg !7073
  br i1 %142, label %bb41, label %bb39, !dbg !7073

bb39:                                             ; preds = %bb38
  %143 = load i8* %base, align 1, !dbg !7073
  %144 = icmp eq i8 %143, 16, !dbg !7073
  br i1 %144, label %bb31, label %bb40, !dbg !7073

bb40:                                             ; preds = %bb39
  %145 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7073
  %146 = getelementptr inbounds %struct.scan_cookie* %145, i32 0, i32 0, !dbg !7073
  %147 = load i32* %146, align 8, !dbg !7073
  %148 = sub nsw i32 %147, 48, !dbg !7073
  %149 = load i8* %base, align 1, !dbg !7073
  %150 = zext i8 %149 to i32, !dbg !7073
  %151 = icmp slt i32 %148, %150, !dbg !7073
  br i1 %151, label %bb31, label %bb41, !dbg !7073

bb41:                                             ; preds = %bb40, %bb38
  %152 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7074
  %153 = getelementptr inbounds %struct.psfs_t* %152, i32 0, i32 7, !dbg !7074
  %154 = load i32* %153, align 8, !dbg !7074
  %155 = icmp sle i32 %154, 7, !dbg !7074
  %156 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7075
  br i1 %155, label %bb42, label %bb50, !dbg !7074

bb42:                                             ; preds = %bb41
  call void @__scan_ungetc(%struct.scan_cookie* %156) nounwind, !dbg !7075
  %157 = load i8** %b, align 8, !dbg !7076
  store i8 0, i8* %157, align 1, !dbg !7076
  %158 = load i8* %seendigit, align 1, !dbg !7077
  %159 = icmp eq i8 %158, 0, !dbg !7077
  br i1 %159, label %DONE, label %bb43, !dbg !7077

bb43:                                             ; preds = %bb42
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7078
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 9, !dbg !7078
  %162 = load i8* %161, align 8, !dbg !7078
  %163 = icmp ne i8 %162, 0, !dbg !7078
  br i1 %163, label %bb44, label %bb49, !dbg !7078

bb44:                                             ; preds = %bb43
  %164 = getelementptr inbounds [167 x i8]* %buf, i64 0, i64 0, !dbg !7079
  %165 = load i8* %164, align 1, !dbg !7079
  %166 = icmp eq i8 %165, 45, !dbg !7079
  br i1 %166, label %bb45, label %bb46, !dbg !7079

bb45:                                             ; preds = %bb44
  store i8 0, i8* %usflag, align 1, !dbg !7080
  br label %bb46, !dbg !7080

bb46:                                             ; preds = %bb45, %bb44
  %167 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7081
  %168 = getelementptr inbounds %struct.psfs_t* %167, i32 0, i32 5, !dbg !7081
  %169 = load i32* %168, align 8, !dbg !7081
  %170 = add nsw i32 %169, 1, !dbg !7081
  %171 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7081
  %172 = getelementptr inbounds %struct.psfs_t* %171, i32 0, i32 5, !dbg !7081
  store i32 %170, i32* %172, align 8, !dbg !7081
  %173 = load i8* %usflag, align 1, !dbg !7082
  %174 = zext i8 %173 to i32, !dbg !7082
  %175 = sub nsw i32 1, %174, !dbg !7082
  %176 = load i8* %base, align 1, !dbg !7082
  %177 = zext i8 %176 to i32, !dbg !7082
  %buf47 = bitcast [167 x i8]* %buf to i8*, !dbg !7082
  %178 = call i64 @_stdlib_strto_l(i8* noalias %buf47, i8** noalias null, i32 %177, i32 %175) nounwind, !dbg !7082
  %179 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7082
  %180 = getelementptr inbounds %struct.psfs_t* %179, i32 0, i32 6, !dbg !7082
  %181 = load i32* %180, align 4, !dbg !7082
  %182 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7082
  %183 = getelementptr inbounds %struct.psfs_t* %182, i32 0, i32 3, !dbg !7082
  %184 = load i8** %183, align 8, !dbg !7082
  call void @_store_inttype(i8* %184, i32 %181, i64 %178) nounwind, !dbg !7082
  br label %bb49, !dbg !7082

bb49:                                             ; preds = %bb46, %bb43
  store i32 0, i32* %0, align 4, !dbg !7083
  br label %bb104, !dbg !7083

bb50:                                             ; preds = %bb41
  %185 = getelementptr inbounds %struct.scan_cookie* %156, i32 0, i32 17, !dbg !7084
  %186 = load i8** %185, align 8, !dbg !7084
  store i8* %186, i8** %p, align 8, !dbg !7084
  br label %bb51, !dbg !7084

bb51:                                             ; preds = %bb56, %bb50
  %187 = load i8** %p, align 8, !dbg !7085
  %188 = load i8* %187, align 1, !dbg !7085
  %189 = icmp eq i8 %188, 0, !dbg !7085
  br i1 %189, label %bb52, label %bb53, !dbg !7085

bb52:                                             ; preds = %bb51
  %190 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7086
  %191 = getelementptr inbounds %struct.scan_cookie* %190, i32 0, i32 14, !dbg !7086
  %192 = load i8** %191, align 8, !dbg !7086
  %193 = load i8** %b, align 8, !dbg !7086
  %194 = call i8* @strcpy(i8* noalias %193, i8* noalias %192) nounwind, !dbg !7086
  %195 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7087
  %196 = getelementptr inbounds %struct.scan_cookie* %195, i32 0, i32 15, !dbg !7087
  %197 = load i32* %196, align 8, !dbg !7087
  %198 = load i8** %b, align 8, !dbg !7087
  %199 = sext i32 %197 to i64, !dbg !7087
  %200 = getelementptr inbounds i8* %198, i64 %199, !dbg !7087
  store i8* %200, i8** %b, align 8, !dbg !7087
  %201 = load i8* %nonzero, align 1, !dbg !7088
  %202 = icmp eq i8 %201, 0, !dbg !7088
  br i1 %202, label %bb57, label %bb67, !dbg !7088

bb53:                                             ; preds = %bb51
  %203 = load i8** %p, align 8, !dbg !7089
  %204 = load i8* %203, align 1, !dbg !7089
  %205 = zext i8 %204 to i32, !dbg !7089
  %206 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7089
  %207 = getelementptr inbounds %struct.scan_cookie* %206, i32 0, i32 0, !dbg !7089
  %208 = load i32* %207, align 8, !dbg !7089
  %209 = icmp ne i32 %205, %208, !dbg !7089
  br i1 %209, label %bb54, label %bb56, !dbg !7089

bb54:                                             ; preds = %bb53
  %210 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7090
  %211 = getelementptr inbounds %struct.scan_cookie* %210, i32 0, i32 17, !dbg !7090
  %212 = load i8** %211, align 8, !dbg !7090
  %213 = load i8** %p, align 8, !dbg !7090
  %214 = icmp ult i8* %212, %213, !dbg !7090
  br i1 %214, label %DONE_DO_UNGET, label %DO_DIGIT_CHECK, !dbg !7090

bb56:                                             ; preds = %bb53
  %215 = load i8** %p, align 8, !dbg !7091
  %216 = getelementptr inbounds i8* %215, i64 1, !dbg !7091
  store i8* %216, i8** %p, align 8, !dbg !7091
  %217 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7092
  %218 = call i32 @__scan_getc(%struct.scan_cookie* %217) nounwind, !dbg !7092
  br label %bb51, !dbg !7092

bb57:                                             ; preds = %bb52
  %219 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7093
  %220 = getelementptr inbounds %struct.scan_cookie* %219, i32 0, i32 0, !dbg !7093
  %221 = load i32* %220, align 8, !dbg !7093
  %222 = icmp eq i32 %221, 48, !dbg !7093
  br i1 %222, label %bb58, label %bb67, !dbg !7093

bb58:                                             ; preds = %bb57
  %223 = load i8** %b, align 8, !dbg !7094
  store i8 48, i8* %223, align 1, !dbg !7094
  %224 = load i8** %b, align 8, !dbg !7094
  %225 = getelementptr inbounds i8* %224, i64 1, !dbg !7094
  store i8* %225, i8** %b, align 8, !dbg !7094
  %226 = load i32* %exp_adjust, align 4, !dbg !7095
  %227 = add nsw i32 %226, 1, !dbg !7095
  store i32 %227, i32* %exp_adjust, align 4, !dbg !7095
  store i8 1, i8* %seendigit, align 1, !dbg !7096
  br label %bb59, !dbg !7096

bb59:                                             ; preds = %bb59, %bb58
  %228 = load i32* %exp_adjust, align 4, !dbg !7097
  %229 = sub nsw i32 %228, 1, !dbg !7097
  store i32 %229, i32* %exp_adjust, align 4, !dbg !7097
  %230 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7098
  %231 = call i32 @__scan_getc(%struct.scan_cookie* %230) nounwind, !dbg !7098
  %232 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7099
  %233 = getelementptr inbounds %struct.scan_cookie* %232, i32 0, i32 0, !dbg !7099
  %234 = load i32* %233, align 8, !dbg !7099
  %235 = icmp eq i32 %234, 48, !dbg !7099
  br i1 %235, label %bb59, label %bb67, !dbg !7099

bb61:                                             ; preds = %bb69, %bb68
  %236 = load i8** %b, align 8, !dbg !7100
  %237 = ptrtoint i8* %236 to i64, !dbg !7100
  %buf62 = bitcast [167 x i8]* %buf to i8*, !dbg !7100
  %buf6263 = ptrtoint i8* %buf62 to i64, !dbg !7100
  %238 = sub nsw i64 %237, %buf6263, !dbg !7100
  %239 = icmp sle i64 %238, 64, !dbg !7100
  br i1 %239, label %bb65, label %bb66, !dbg !7100

bb65:                                             ; preds = %bb61
  store i8 1, i8* %seendigit, align 1, !dbg !7101
  %240 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7102
  %241 = getelementptr inbounds %struct.scan_cookie* %240, i32 0, i32 0, !dbg !7102
  %242 = load i32* %241, align 8, !dbg !7102
  %243 = trunc i32 %242 to i8, !dbg !7102
  %244 = load i8** %b, align 8, !dbg !7102
  store i8 %243, i8* %244, align 1, !dbg !7102
  %245 = load i8** %b, align 8, !dbg !7102
  %246 = getelementptr inbounds i8* %245, i64 1, !dbg !7102
  store i8* %246, i8** %b, align 8, !dbg !7102
  br label %bb66, !dbg !7102

bb66:                                             ; preds = %bb65, %bb61
  %247 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7103
  %248 = call i32 @__scan_getc(%struct.scan_cookie* %247) nounwind, !dbg !7103
  br label %bb67, !dbg !7103

bb67:                                             ; preds = %bb52, %bb57, %bb59, %bb66
  %249 = load i16** @__ctype_b, align 8, !dbg !7104
  %250 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7104
  %251 = getelementptr inbounds %struct.scan_cookie* %250, i32 0, i32 0, !dbg !7104
  %252 = load i32* %251, align 8, !dbg !7104
  %253 = sext i32 %252 to i64, !dbg !7104
  %254 = getelementptr inbounds i16* %249, i64 %253, !dbg !7104
  %255 = load i16* %254, align 1, !dbg !7104
  %256 = zext i16 %255 to i32, !dbg !7104
  %257 = and i32 %256, 4096, !dbg !7104
  %258 = icmp eq i32 %257, 0, !dbg !7104
  br i1 %258, label %DO_DIGIT_CHECK, label %bb68, !dbg !7104

bb68:                                             ; preds = %bb67
  %259 = load i8* %base, align 1, !dbg !7104
  %260 = icmp eq i8 %259, 16, !dbg !7104
  br i1 %260, label %bb61, label %bb69, !dbg !7104

bb69:                                             ; preds = %bb68
  %261 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7104
  %262 = getelementptr inbounds %struct.scan_cookie* %261, i32 0, i32 0, !dbg !7104
  %263 = load i32* %262, align 8, !dbg !7104
  %264 = sub nsw i32 %263, 48, !dbg !7104
  %265 = load i8* %base, align 1, !dbg !7104
  %266 = zext i8 %265 to i32, !dbg !7104
  %267 = icmp slt i32 %264, %266, !dbg !7104
  br i1 %267, label %bb61, label %DO_DIGIT_CHECK, !dbg !7104

DO_DIGIT_CHECK:                                   ; preds = %bb54, %bb69, %bb67
  %268 = load i8* %seendigit, align 1, !dbg !7105
  %269 = icmp eq i8 %268, 0, !dbg !7105
  br i1 %269, label %bb70, label %bb81, !dbg !7105

bb70:                                             ; preds = %DO_DIGIT_CHECK
  %270 = load i8* %base, align 1, !dbg !7106
  %271 = icmp eq i8 %270, 16, !dbg !7106
  br i1 %271, label %DONE_DO_UNGET, label %bb71, !dbg !7106

bb71:                                             ; preds = %bb70
  %272 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7108
  %273 = getelementptr inbounds %struct.scan_cookie* %272, i32 0, i32 0, !dbg !7108
  %274 = load i32* %273, align 8, !dbg !7108
  %275 = or i32 %274, 32, !dbg !7108
  switch i32 %275, label %DONE_DO_UNGET [
    i32 105, label %bb72
    i32 110, label %bb73
  ], !dbg !7108

bb72:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 3), i8** %p, align 8, !dbg !7109
  br label %bb75, !dbg !7109

bb73:                                             ; preds = %bb71
  store i8* getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 0), i8** %p, align 8, !dbg !7110
  br label %bb75, !dbg !7110

bb75:                                             ; preds = %bb73, %bb72
  %276 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7111
  %277 = getelementptr inbounds %struct.scan_cookie* %276, i32 0, i32 0, !dbg !7111
  %278 = load i32* %277, align 8, !dbg !7111
  %279 = trunc i32 %278 to i8, !dbg !7111
  %280 = load i8** %b, align 8, !dbg !7111
  store i8 %279, i8* %280, align 1, !dbg !7111
  %281 = load i8** %b, align 8, !dbg !7111
  %282 = getelementptr inbounds i8* %281, i64 1, !dbg !7111
  store i8* %282, i8** %b, align 8, !dbg !7111
  br label %bb76, !dbg !7111

bb76:                                             ; preds = %bb77, %bb75
  %283 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7112
  %284 = call i32 @__scan_getc(%struct.scan_cookie* %283) nounwind, !dbg !7112
  %285 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7113
  %286 = getelementptr inbounds %struct.scan_cookie* %285, i32 0, i32 0, !dbg !7113
  %287 = load i32* %286, align 8, !dbg !7113
  %288 = or i32 %287, 32, !dbg !7113
  %289 = load i8** %p, align 8, !dbg !7113
  %290 = load i8* %289, align 1, !dbg !7113
  %291 = zext i8 %290 to i32, !dbg !7113
  %292 = icmp eq i32 %288, %291, !dbg !7113
  br i1 %292, label %bb77, label %bb78, !dbg !7113

bb77:                                             ; preds = %bb76
  %293 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7114
  %294 = getelementptr inbounds %struct.scan_cookie* %293, i32 0, i32 0, !dbg !7114
  %295 = load i32* %294, align 8, !dbg !7114
  %296 = trunc i32 %295 to i8, !dbg !7114
  %297 = load i8** %b, align 8, !dbg !7114
  store i8 %296, i8* %297, align 1, !dbg !7114
  %298 = load i8** %b, align 8, !dbg !7114
  %299 = getelementptr inbounds i8* %298, i64 1, !dbg !7114
  store i8* %299, i8** %b, align 8, !dbg !7114
  %300 = load i8** %p, align 8, !dbg !7115
  %301 = getelementptr inbounds i8* %300, i64 1, !dbg !7115
  store i8* %301, i8** %p, align 8, !dbg !7115
  br label %bb76, !dbg !7115

bb78:                                             ; preds = %bb76
  %302 = load i8** %p, align 8, !dbg !7116
  %303 = load i8* %302, align 1, !dbg !7116
  %304 = icmp eq i8 %303, 0, !dbg !7116
  %305 = load i8** %p, align 8, !dbg !7116
  %306 = icmp eq i8* %305, getelementptr inbounds ([11 x i8]* @nan_inf_str.3836, i64 0, i64 5), !dbg !7116
  %or.cond = or i1 %304, %306
  br i1 %or.cond, label %GOT_FLOAT, label %DONE_DO_UNGET, !dbg !7116

bb81:                                             ; preds = %DO_DIGIT_CHECK
  %307 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7117
  %308 = getelementptr inbounds %struct.scan_cookie* %307, i32 0, i32 0, !dbg !7117
  %309 = load i32* %308, align 8, !dbg !7117
  %310 = or i32 %309, 32, !dbg !7117
  %311 = icmp eq i32 %310, 101, !dbg !7118
  br i1 %311, label %bb82, label %GOT_FLOAT, !dbg !7118

bb82:                                             ; preds = %bb81
  %312 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7119
  %313 = getelementptr inbounds %struct.scan_cookie* %312, i32 0, i32 0, !dbg !7119
  %314 = load i32* %313, align 8, !dbg !7119
  %315 = trunc i32 %314 to i8, !dbg !7119
  %316 = load i8** %b, align 8, !dbg !7119
  store i8 %315, i8* %316, align 1, !dbg !7119
  %317 = load i8** %b, align 8, !dbg !7119
  %318 = getelementptr inbounds i8* %317, i64 1, !dbg !7119
  store i8* %318, i8** %b, align 8, !dbg !7119
  %319 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7120
  %320 = call i32 @__scan_getc(%struct.scan_cookie* %319) nounwind, !dbg !7120
  %321 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7121
  %322 = getelementptr inbounds %struct.scan_cookie* %321, i32 0, i32 0, !dbg !7121
  %323 = load i32* %322, align 8, !dbg !7121
  %324 = icmp slt i32 %323, 0, !dbg !7121
  br i1 %324, label %DONE_DO_UNGET, label %bb83, !dbg !7121

bb83:                                             ; preds = %bb82
  %325 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7122
  %326 = getelementptr inbounds %struct.scan_cookie* %325, i32 0, i32 0, !dbg !7122
  %327 = load i32* %326, align 8, !dbg !7122
  %328 = icmp eq i32 %327, 43, !dbg !7122
  br i1 %328, label %bb85, label %bb84, !dbg !7122

bb84:                                             ; preds = %bb83
  %329 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7122
  %330 = getelementptr inbounds %struct.scan_cookie* %329, i32 0, i32 0, !dbg !7122
  %331 = load i32* %330, align 8, !dbg !7122
  %332 = icmp eq i32 %331, 45, !dbg !7122
  br i1 %332, label %bb85, label %bb86, !dbg !7122

bb85:                                             ; preds = %bb84, %bb83
  %333 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7123
  %334 = getelementptr inbounds %struct.scan_cookie* %333, i32 0, i32 0, !dbg !7123
  %335 = load i32* %334, align 8, !dbg !7123
  %336 = trunc i32 %335 to i8, !dbg !7123
  %337 = load i8** %b, align 8, !dbg !7123
  store i8 %336, i8* %337, align 1, !dbg !7123
  %338 = load i8** %b, align 8, !dbg !7123
  %339 = getelementptr inbounds i8* %338, i64 1, !dbg !7123
  store i8* %339, i8** %b, align 8, !dbg !7123
  %340 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7124
  %341 = call i32 @__scan_getc(%struct.scan_cookie* %340) nounwind, !dbg !7124
  br label %bb86, !dbg !7124

bb86:                                             ; preds = %bb85, %bb84
  store i8 0, i8* %seendigit, align 1, !dbg !7125
  store i8 0, i8* %nonzero, align 1, !dbg !7126
  %342 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7127
  %343 = getelementptr inbounds %struct.scan_cookie* %342, i32 0, i32 0, !dbg !7127
  %344 = load i32* %343, align 8, !dbg !7127
  %345 = icmp eq i32 %344, 48, !dbg !7127
  br i1 %345, label %bb87, label %bb93, !dbg !7127

bb87:                                             ; preds = %bb86
  store i8 1, i8* %seendigit, align 1, !dbg !7128
  %346 = load i8** %b, align 8, !dbg !7129
  store i8 48, i8* %346, align 1, !dbg !7129
  %347 = load i8** %b, align 8, !dbg !7129
  %348 = getelementptr inbounds i8* %347, i64 1, !dbg !7129
  store i8* %348, i8** %b, align 8, !dbg !7129
  br label %bb88, !dbg !7129

bb88:                                             ; preds = %bb88, %bb87
  %349 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7130
  %350 = call i32 @__scan_getc(%struct.scan_cookie* %349) nounwind, !dbg !7130
  %351 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7131
  %352 = getelementptr inbounds %struct.scan_cookie* %351, i32 0, i32 0, !dbg !7131
  %353 = load i32* %352, align 8, !dbg !7131
  %354 = icmp eq i32 %353, 48, !dbg !7131
  br i1 %354, label %bb88, label %bb93, !dbg !7131

bb90:                                             ; preds = %bb93
  %355 = icmp ule i8 %373, 19, !dbg !7132
  br i1 %355, label %bb91, label %bb92, !dbg !7132

bb91:                                             ; preds = %bb90
  %356 = load i8* %seendigit, align 1, !dbg !7133
  %357 = add i8 %356, 1, !dbg !7133
  store i8 %357, i8* %seendigit, align 1, !dbg !7133
  %358 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7134
  %359 = getelementptr inbounds %struct.scan_cookie* %358, i32 0, i32 0, !dbg !7134
  %360 = load i32* %359, align 8, !dbg !7134
  %361 = trunc i32 %360 to i8, !dbg !7134
  %362 = load i8** %b, align 8, !dbg !7134
  store i8 %361, i8* %362, align 1, !dbg !7134
  %363 = load i8** %b, align 8, !dbg !7134
  %364 = getelementptr inbounds i8* %363, i64 1, !dbg !7134
  store i8* %364, i8** %b, align 8, !dbg !7134
  br label %bb92, !dbg !7134

bb92:                                             ; preds = %bb91, %bb90
  %365 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7135
  %366 = call i32 @__scan_getc(%struct.scan_cookie* %365) nounwind, !dbg !7135
  br label %bb93, !dbg !7135

bb93:                                             ; preds = %bb86, %bb88, %bb92
  %367 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7136
  %368 = getelementptr inbounds %struct.scan_cookie* %367, i32 0, i32 0, !dbg !7136
  %369 = load i32* %368, align 8, !dbg !7136
  %370 = trunc i32 %369 to i8, !dbg !7136
  %371 = sub i8 %370, 48, !dbg !7136
  %372 = icmp ule i8 %371, 9, !dbg !7136
  %373 = load i8* %seendigit, align 1, !dbg !7132
  br i1 %372, label %bb90, label %bb94, !dbg !7136

bb94:                                             ; preds = %bb93
  %374 = icmp eq i8 %373, 0, !dbg !7137
  br i1 %374, label %DONE_DO_UNGET, label %GOT_FLOAT, !dbg !7137

GOT_FLOAT:                                        ; preds = %bb94, %bb81, %bb78
  %375 = load i8** %b, align 8, !dbg !7138
  store i8 0, i8* %375, align 1, !dbg !7138
  %buf95 = bitcast [167 x i8]* %buf to i8*, !dbg !7139
  %376 = load i32* %exp_adjust, align 4, !dbg !7139
  %377 = call x86_fp80 @__strtofpmax(i8* %buf95, i8** %e, i32 %376) nounwind, !dbg !7139
  store x86_fp80 %377, x86_fp80* %x, align 16, !dbg !7139
  %378 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7141
  %379 = getelementptr inbounds %struct.psfs_t* %378, i32 0, i32 9, !dbg !7141
  %380 = load i8* %379, align 8, !dbg !7141
  %381 = icmp ne i8 %380, 0, !dbg !7141
  br i1 %381, label %bb97, label %bb103, !dbg !7141

bb97:                                             ; preds = %GOT_FLOAT
  %382 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7142
  %383 = getelementptr inbounds %struct.psfs_t* %382, i32 0, i32 6, !dbg !7142
  %384 = load i32* %383, align 4, !dbg !7142
  %385 = and i32 %384, 2048, !dbg !7142
  %386 = icmp ne i32 %385, 0, !dbg !7142
  %387 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7143
  br i1 %386, label %bb98, label %bb99, !dbg !7142

bb98:                                             ; preds = %bb97
  %388 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 3, !dbg !7143
  %389 = load i8** %388, align 8, !dbg !7143
  %390 = bitcast i8* %389 to x86_fp80*, !dbg !7143
  %391 = load x86_fp80* %x, align 16, !dbg !7143
  store x86_fp80 %391, x86_fp80* %390, align 16, !dbg !7143
  br label %bb102, !dbg !7143

bb99:                                             ; preds = %bb97
  %392 = getelementptr inbounds %struct.psfs_t* %387, i32 0, i32 6, !dbg !7144
  %393 = load i32* %392, align 4, !dbg !7144
  %394 = and i32 %393, 1024, !dbg !7144
  %395 = icmp ne i32 %394, 0, !dbg !7144
  %396 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7145
  %397 = getelementptr inbounds %struct.psfs_t* %396, i32 0, i32 3, !dbg !7145
  %398 = load i8** %397, align 8, !dbg !7145
  br i1 %395, label %bb100, label %bb101, !dbg !7144

bb100:                                            ; preds = %bb99
  %399 = bitcast i8* %398 to double*, !dbg !7145
  %400 = load x86_fp80* %x, align 16, !dbg !7145
  %401 = fptrunc x86_fp80 %400 to double, !dbg !7145
  store double %401, double* %399, align 8, !dbg !7145
  br label %bb102, !dbg !7145

bb101:                                            ; preds = %bb99
  %402 = bitcast i8* %398 to float*, !dbg !7146
  %403 = load x86_fp80* %x, align 16, !dbg !7146
  %404 = fptrunc x86_fp80 %403 to float, !dbg !7146
  store float %404, float* %402, align 4, !dbg !7146
  br label %bb102, !dbg !7146

bb102:                                            ; preds = %bb101, %bb100, %bb98
  %405 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7147
  %406 = getelementptr inbounds %struct.psfs_t* %405, i32 0, i32 5, !dbg !7147
  %407 = load i32* %406, align 8, !dbg !7147
  %408 = add nsw i32 %407, 1, !dbg !7147
  %409 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7147
  %410 = getelementptr inbounds %struct.psfs_t* %409, i32 0, i32 5, !dbg !7147
  store i32 %408, i32* %410, align 8, !dbg !7147
  br label %bb103, !dbg !7147

bb103:                                            ; preds = %bb102, %GOT_FLOAT
  %411 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7148
  call void @__scan_ungetc(%struct.scan_cookie* %411) nounwind, !dbg !7148
  store i32 0, i32* %0, align 4, !dbg !7149
  br label %bb104, !dbg !7149

DONE_DO_UNGET:                                    ; preds = %bb78, %bb71, %bb94, %bb82, %bb70, %bb54, %bb20
  %412 = load %struct.scan_cookie** %sc_addr, align 8, !dbg !7150
  call void @__scan_ungetc(%struct.scan_cookie* %412) nounwind, !dbg !7150
  br label %DONE, !dbg !7151

DONE:                                             ; preds = %DONE_DO_UNGET, %bb42
  store i32 -2, i32* %0, align 4, !dbg !7152
  br label %bb104, !dbg !7152

bb104:                                            ; preds = %DONE, %bb103, %bb49, %bb13, %bb10, %bb5
  %413 = load i32* %0, align 4, !dbg !7038
  store i32 %413, i32* %retval, align 4, !dbg !7038
  %retval105 = load i32* %retval, !dbg !7038
  ret i32 %retval105, !dbg !7038
}

define hidden %struct.exit_function* @__new_exitfn() nounwind {
entry:
  %retval = alloca %struct.exit_function*
  %0 = alloca %struct.exit_function*
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  %1 = load i32* @__exit_count, align 4, !dbg !7153
  %2 = add nsw i32 %1, 1, !dbg !7153
  %3 = load i32* @__exit_slots, align 4, !dbg !7153
  %4 = icmp sgt i32 %2, %3, !dbg !7153
  br i1 %4, label %bb, label %bb3, !dbg !7153

bb:                                               ; preds = %entry
  %5 = load i32* @__exit_slots, align 4, !dbg !7155
  %6 = add nsw i32 %5, 20, !dbg !7155
  %7 = sext i32 %6 to i64, !dbg !7155
  %8 = mul i64 %7, 32, !dbg !7155
  %9 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7155
  %10 = bitcast %struct.exit_function* %9 to i8*, !dbg !7155
  %11 = call noalias i8* @realloc(i8* %10, i64 %8) nounwind, !dbg !7155
  %12 = bitcast i8* %11 to %struct.exit_function*, !dbg !7155
  store %struct.exit_function* %12, %struct.exit_function** %efp, align 8, !dbg !7155
  %13 = load %struct.exit_function** %efp, align 8, !dbg !7156
  %14 = icmp eq %struct.exit_function* %13, null, !dbg !7156
  br i1 %14, label %bb1, label %bb2, !dbg !7156

bb1:                                              ; preds = %bb
  store i32 12, i32* @errno, align 4, !dbg !7157
  br label %DONE, !dbg !7157

bb2:                                              ; preds = %bb
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7158
  store %struct.exit_function* %15, %struct.exit_function** @__exit_function_table, align 8, !dbg !7158
  %16 = load i32* @__exit_slots, align 4, !dbg !7159
  %17 = add nsw i32 %16, 20, !dbg !7159
  store i32 %17, i32* @__exit_slots, align 4, !dbg !7159
  br label %bb3, !dbg !7159

bb3:                                              ; preds = %bb2, %entry
  store void (i32)* @__exit_handler, void (i32)** @__exit_cleanup, align 8, !dbg !7160
  %18 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7161
  %19 = load i32* @__exit_count, align 4, !dbg !7161
  %20 = sext i32 %19 to i64, !dbg !7161
  %21 = getelementptr inbounds %struct.exit_function* %18, i64 %20, !dbg !7161
  store %struct.exit_function* %21, %struct.exit_function** %efp, align 8, !dbg !7161
  %22 = add nsw i32 %19, 1, !dbg !7161
  store i32 %22, i32* @__exit_count, align 4, !dbg !7161
  %23 = load %struct.exit_function** %efp, align 8, !dbg !7162
  %24 = getelementptr inbounds %struct.exit_function* %23, i32 0, i32 0, !dbg !7162
  store i64 1, i64* %24, align 8, !dbg !7162
  br label %DONE, !dbg !7163

DONE:                                             ; preds = %bb3, %bb1
  %25 = load %struct.exit_function** %efp, align 8, !dbg !7164
  store %struct.exit_function* %25, %struct.exit_function** %0, align 8, !dbg !7164
  %26 = load %struct.exit_function** %0, align 8, !dbg !7164
  store %struct.exit_function* %26, %struct.exit_function** %retval, align 8, !dbg !7164
  %retval4 = load %struct.exit_function** %retval, !dbg !7164
  ret %struct.exit_function* %retval4, !dbg !7164
}

define hidden void @__exit_handler(i32 %status) nounwind {
entry:
  %status_addr = alloca i32, align 4
  %efp = alloca %struct.exit_function*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %status, i32* %status_addr
  br label %bb6, !dbg !7165

bb:                                               ; preds = %bb6
  %0 = load i32* @__exit_count, align 4, !dbg !7167
  %1 = sub nsw i32 %0, 1, !dbg !7167
  store i32 %1, i32* @__exit_count, align 4, !dbg !7167
  %2 = load i32* @__exit_count, align 4, !dbg !7167
  %3 = sext i32 %2 to i64, !dbg !7167
  %4 = getelementptr inbounds %struct.exit_function* %46, i64 %3, !dbg !7167
  store %struct.exit_function* %4, %struct.exit_function** %efp, align 8, !dbg !7167
  %5 = load %struct.exit_function** %efp, align 8, !dbg !7168
  %6 = getelementptr inbounds %struct.exit_function* %5, i32 0, i32 0, !dbg !7168
  %7 = load i64* %6, align 8, !dbg !7168
  switch i64 %7, label %bb6 [
    i64 2, label %bb1
    i64 3, label %bb4
  ], !dbg !7168

bb1:                                              ; preds = %bb
  %8 = load %struct.exit_function** %efp, align 8, !dbg !7169
  %9 = getelementptr inbounds %struct.exit_function* %8, i32 0, i32 1, !dbg !7169
  %10 = getelementptr inbounds %1* %9, i32 0, i32 0, !dbg !7169
  %11 = bitcast %2* %10 to %10*, !dbg !7169
  %12 = getelementptr inbounds %10* %11, i32 0, i32 0, !dbg !7169
  %13 = load void (i32, i8*)** %12, align 8, !dbg !7169
  %14 = icmp ne void (i32, i8*)* %13, null, !dbg !7169
  br i1 %14, label %bb2, label %bb6, !dbg !7169

bb2:                                              ; preds = %bb1
  %15 = load %struct.exit_function** %efp, align 8, !dbg !7170
  %16 = getelementptr inbounds %struct.exit_function* %15, i32 0, i32 1, !dbg !7170
  %17 = getelementptr inbounds %1* %16, i32 0, i32 0, !dbg !7170
  %18 = bitcast %2* %17 to %10*, !dbg !7170
  %19 = getelementptr inbounds %10* %18, i32 0, i32 0, !dbg !7170
  %20 = load void (i32, i8*)** %19, align 8, !dbg !7170
  %21 = load %struct.exit_function** %efp, align 8, !dbg !7170
  %22 = getelementptr inbounds %struct.exit_function* %21, i32 0, i32 1, !dbg !7170
  %23 = getelementptr inbounds %1* %22, i32 0, i32 0, !dbg !7170
  %24 = bitcast %2* %23 to %10*, !dbg !7170
  %25 = getelementptr inbounds %10* %24, i32 0, i32 1, !dbg !7170
  %26 = load i8** %25, align 8, !dbg !7170
  %27 = load i32* %status_addr, align 4, !dbg !7170
  call void %20(i32 %27, i8* %26) nounwind, !dbg !7170
  br label %bb6, !dbg !7170

bb4:                                              ; preds = %bb
  %28 = load %struct.exit_function** %efp, align 8, !dbg !7171
  %29 = getelementptr inbounds %struct.exit_function* %28, i32 0, i32 1, !dbg !7171
  %30 = getelementptr inbounds %1* %29, i32 0, i32 0, !dbg !7171
  %31 = getelementptr inbounds %2* %30, i32 0, i32 0, !dbg !7171
  %32 = load void (i8*)** %31, align 8, !dbg !7171
  %33 = icmp ne void (i8*)* %32, null, !dbg !7171
  br i1 %33, label %bb5, label %bb6, !dbg !7171

bb5:                                              ; preds = %bb4
  %34 = load %struct.exit_function** %efp, align 8, !dbg !7172
  %35 = getelementptr inbounds %struct.exit_function* %34, i32 0, i32 1, !dbg !7172
  %36 = getelementptr inbounds %1* %35, i32 0, i32 0, !dbg !7172
  %37 = getelementptr inbounds %2* %36, i32 0, i32 0, !dbg !7172
  %38 = load void (i8*)** %37, align 8, !dbg !7172
  %39 = load %struct.exit_function** %efp, align 8, !dbg !7172
  %40 = getelementptr inbounds %struct.exit_function* %39, i32 0, i32 1, !dbg !7172
  %41 = getelementptr inbounds %1* %40, i32 0, i32 0, !dbg !7172
  %42 = getelementptr inbounds %2* %41, i32 0, i32 1, !dbg !7172
  %43 = load i8** %42, align 8, !dbg !7172
  call void %38(i8* %43) nounwind, !dbg !7172
  br label %bb6, !dbg !7172

bb6:                                              ; preds = %bb1, %bb2, %bb5, %bb4, %bb, %entry
  %44 = load i32* @__exit_count, align 4, !dbg !7165
  %45 = icmp ne i32 %44, 0, !dbg !7165
  %46 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7167
  br i1 %45, label %bb, label %bb7, !dbg !7165

bb7:                                              ; preds = %bb6
  %47 = icmp ne %struct.exit_function* %46, null, !dbg !7173
  br i1 %47, label %bb8, label %return, !dbg !7173

bb8:                                              ; preds = %bb7
  %48 = load %struct.exit_function** @__exit_function_table, align 8, !dbg !7174
  %49 = bitcast %struct.exit_function* %48 to i8*, !dbg !7174
  call void @free(i8* %49) nounwind, !dbg !7174
  br label %return, !dbg !7174

return:                                           ; preds = %bb7, %bb8
  ret void, !dbg !7175
}

define hidden i32 @__psfs_parse_spec(%struct.psfs_t* %psfs) nounwind {
entry:
  %psfs_addr = alloca %struct.psfs_t*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i8*
  %fmt0 = alloca i8*
  %i = alloca i32
  %j = alloca i32
  %fail = alloca i8
  %p_m_spec_chars = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.psfs_t* %psfs, %struct.psfs_t** %psfs_addr
  %1 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7176
  %2 = getelementptr inbounds %struct.psfs_t* %1, i32 0, i32 4, !dbg !7176
  %3 = load i8** %2, align 8, !dbg !7176
  store i8* %3, i8** %fmt0, align 8, !dbg !7176
  store i8 0, i8* %fail, align 1, !dbg !7178
  store i32 0, i32* %i, align 4, !dbg !7179
  %4 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7180
  %5 = getelementptr inbounds %struct.psfs_t* %4, i32 0, i32 4, !dbg !7180
  %6 = load i8** %5, align 8, !dbg !7180
  %7 = load i8* %6, align 1, !dbg !7180
  %8 = sub i8 %7, 48, !dbg !7180
  %9 = icmp ugt i8 %8, 9, !dbg !7180
  br i1 %9, label %bb, label %bb1, !dbg !7180

bb:                                               ; preds = %entry
  store i8 1, i8* %fail, align 1, !dbg !7181
  br label %DO_FLAGS, !dbg !7181

bb1:                                              ; preds = %bb3, %entry
  %10 = load i32* %i, align 4, !dbg !7182
  %11 = icmp sle i32 %10, 214748363, !dbg !7182
  br i1 %11, label %bb2, label %bb3, !dbg !7182

bb2:                                              ; preds = %bb1
  %12 = load i32* %i, align 4, !dbg !7183
  %13 = mul nsw i32 %12, 10, !dbg !7183
  %14 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7183
  %15 = getelementptr inbounds %struct.psfs_t* %14, i32 0, i32 4, !dbg !7183
  %16 = load i8** %15, align 8, !dbg !7183
  %17 = load i8* %16, align 1, !dbg !7183
  %18 = zext i8 %17 to i32, !dbg !7183
  %19 = sub nsw i32 %18, 48, !dbg !7183
  %20 = add nsw i32 %13, %19, !dbg !7183
  store i32 %20, i32* %i, align 4, !dbg !7183
  %21 = getelementptr inbounds i8* %16, i64 1, !dbg !7183
  %22 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7183
  %23 = getelementptr inbounds %struct.psfs_t* %22, i32 0, i32 4, !dbg !7183
  store i8* %21, i8** %23, align 8, !dbg !7183
  br label %bb3, !dbg !7183

bb3:                                              ; preds = %bb2, %bb1
  %24 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7184
  %25 = getelementptr inbounds %struct.psfs_t* %24, i32 0, i32 4, !dbg !7184
  %26 = load i8** %25, align 8, !dbg !7184
  %27 = load i8* %26, align 1, !dbg !7184
  %28 = sub i8 %27, 48, !dbg !7184
  %29 = icmp ule i8 %28, 9, !dbg !7184
  br i1 %29, label %bb1, label %bb4, !dbg !7184

bb4:                                              ; preds = %bb3
  %30 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7185
  %31 = getelementptr inbounds %struct.psfs_t* %30, i32 0, i32 4, !dbg !7185
  %32 = load i8** %31, align 8, !dbg !7185
  %33 = load i8* %32, align 1, !dbg !7185
  %34 = icmp ne i8 %33, 36, !dbg !7185
  %35 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7186
  br i1 %34, label %bb5, label %bb7, !dbg !7185

bb5:                                              ; preds = %bb4
  %36 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 1, !dbg !7186
  %37 = load i32* %36, align 8, !dbg !7186
  %38 = icmp sge i32 %37, 0, !dbg !7186
  br i1 %38, label %ERROR_EINVAL, label %bb6, !dbg !7186

bb6:                                              ; preds = %bb5
  %39 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7187
  %40 = getelementptr inbounds %struct.psfs_t* %39, i32 0, i32 8, !dbg !7187
  %41 = load i32* %i, align 4, !dbg !7187
  store i32 %41, i32* %40, align 4, !dbg !7187
  %42 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7188
  %43 = getelementptr inbounds %struct.psfs_t* %42, i32 0, i32 1, !dbg !7188
  store i32 -2, i32* %43, align 8, !dbg !7188
  br label %DO_QUALIFIER, !dbg !7188

bb7:                                              ; preds = %bb4
  %44 = getelementptr inbounds %struct.psfs_t* %35, i32 0, i32 4, !dbg !7189
  %45 = load i8** %44, align 8, !dbg !7189
  %46 = getelementptr inbounds i8* %45, i64 1, !dbg !7189
  %47 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7189
  %48 = getelementptr inbounds %struct.psfs_t* %47, i32 0, i32 4, !dbg !7189
  store i8* %46, i8** %48, align 8, !dbg !7189
  br label %DO_FLAGS, !dbg !7190

DO_FLAGS:                                         ; preds = %bb9, %bb7, %bb
  store i8* getelementptr inbounds ([4 x i8]* @spec_flags, i64 0, i64 0), i8** %p, align 8, !dbg !7191
  store i32 16, i32* %j, align 4, !dbg !7192
  br label %bb8, !dbg !7192

bb8:                                              ; preds = %bb10, %DO_FLAGS
  %49 = load i8** %p, align 8, !dbg !7193
  %50 = load i8* %49, align 1, !dbg !7193
  %51 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7193
  %52 = getelementptr inbounds %struct.psfs_t* %51, i32 0, i32 4, !dbg !7193
  %53 = load i8** %52, align 8, !dbg !7193
  %54 = load i8* %53, align 1, !dbg !7193
  %55 = icmp eq i8 %50, %54, !dbg !7193
  br i1 %55, label %bb9, label %bb10, !dbg !7193

bb9:                                              ; preds = %bb8
  %56 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7194
  %57 = getelementptr inbounds %struct.psfs_t* %56, i32 0, i32 4, !dbg !7194
  %58 = load i8** %57, align 8, !dbg !7194
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !7194
  %60 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7194
  %61 = getelementptr inbounds %struct.psfs_t* %60, i32 0, i32 4, !dbg !7194
  store i8* %59, i8** %61, align 8, !dbg !7194
  %62 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7195
  %63 = getelementptr inbounds %struct.psfs_t* %62, i32 0, i32 10, !dbg !7195
  %64 = load i8* %63, align 1, !dbg !7195
  %65 = load i32* %j, align 4, !dbg !7195
  %66 = trunc i32 %65 to i8, !dbg !7195
  %67 = or i8 %64, %66, !dbg !7195
  %68 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7195
  %69 = getelementptr inbounds %struct.psfs_t* %68, i32 0, i32 10, !dbg !7195
  store i8 %67, i8* %69, align 1, !dbg !7195
  br label %DO_FLAGS, !dbg !7195

bb10:                                             ; preds = %bb8
  %70 = load i32* %j, align 4, !dbg !7196
  %71 = load i32* %j, align 4, !dbg !7196
  %72 = add nsw i32 %70, %71, !dbg !7196
  store i32 %72, i32* %j, align 4, !dbg !7196
  %73 = load i8** %p, align 8, !dbg !7197
  %74 = getelementptr inbounds i8* %73, i64 1, !dbg !7197
  store i8* %74, i8** %p, align 8, !dbg !7197
  %75 = load i8** %p, align 8, !dbg !7197
  %76 = load i8* %75, align 1, !dbg !7197
  %77 = icmp ne i8 %76, 0, !dbg !7197
  br i1 %77, label %bb8, label %bb11, !dbg !7197

bb11:                                             ; preds = %bb10
  %78 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7198
  %79 = getelementptr inbounds %struct.psfs_t* %78, i32 0, i32 10, !dbg !7198
  %80 = load i8* %79, align 1, !dbg !7198
  %81 = zext i8 %80 to i32, !dbg !7198
  %82 = and i32 %81, 16, !dbg !7198
  %83 = icmp ne i32 %82, 0, !dbg !7198
  br i1 %83, label %bb12, label %bb13, !dbg !7198

bb12:                                             ; preds = %bb11
  %84 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7199
  %85 = getelementptr inbounds %struct.psfs_t* %84, i32 0, i32 9, !dbg !7199
  store i8 0, i8* %85, align 8, !dbg !7199
  br label %DO_WIDTH, !dbg !7199

bb13:                                             ; preds = %bb11
  %86 = load i8* %fail, align 1, !dbg !7200
  %87 = icmp ne i8 %86, 0, !dbg !7200
  %88 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7201
  %89 = getelementptr inbounds %struct.psfs_t* %88, i32 0, i32 1, !dbg !7201
  %90 = load i32* %89, align 8, !dbg !7201
  br i1 %87, label %bb14, label %bb16, !dbg !7200

bb14:                                             ; preds = %bb13
  %91 = icmp sge i32 %90, 0, !dbg !7201
  br i1 %91, label %ERROR_EINVAL, label %bb15, !dbg !7201

bb15:                                             ; preds = %bb14
  %92 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7202
  %93 = getelementptr inbounds %struct.psfs_t* %92, i32 0, i32 1, !dbg !7202
  store i32 -2, i32* %93, align 8, !dbg !7202
  br label %DO_WIDTH, !dbg !7202

bb16:                                             ; preds = %bb13
  %94 = icmp eq i32 %90, -2, !dbg !7203
  br i1 %94, label %ERROR_EINVAL, label %bb17, !dbg !7203

bb17:                                             ; preds = %bb16
  %95 = load i32* %i, align 4, !dbg !7203
  %96 = sub nsw i32 %95, 1, !dbg !7203
  store i32 %96, i32* %i, align 4, !dbg !7203
  %97 = load i32* %i, align 4, !dbg !7203
  %98 = icmp ugt i32 %97, 8, !dbg !7203
  br i1 %98, label %ERROR_EINVAL, label %bb18, !dbg !7203

bb18:                                             ; preds = %bb17
  %99 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7204
  %100 = getelementptr inbounds %struct.psfs_t* %99, i32 0, i32 2, !dbg !7204
  %101 = load i32* %i, align 4, !dbg !7204
  store i32 %101, i32* %100, align 4, !dbg !7204
  br label %DO_WIDTH, !dbg !7205

DO_WIDTH:                                         ; preds = %bb18, %bb15, %bb12
  store i32 0, i32* %i, align 4, !dbg !7206
  br label %bb21, !dbg !7206

bb19:                                             ; preds = %bb21
  %102 = load i32* %i, align 4, !dbg !7207
  %103 = icmp sle i32 %102, 214748363, !dbg !7207
  br i1 %103, label %bb20, label %bb21, !dbg !7207

bb20:                                             ; preds = %bb19
  %104 = load i32* %i, align 4, !dbg !7208
  %105 = mul nsw i32 %104, 10, !dbg !7208
  %106 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7208
  %107 = getelementptr inbounds %struct.psfs_t* %106, i32 0, i32 4, !dbg !7208
  %108 = load i8** %107, align 8, !dbg !7208
  %109 = load i8* %108, align 1, !dbg !7208
  %110 = zext i8 %109 to i32, !dbg !7208
  %111 = sub nsw i32 %110, 48, !dbg !7208
  %112 = add nsw i32 %105, %111, !dbg !7208
  store i32 %112, i32* %i, align 4, !dbg !7208
  %113 = getelementptr inbounds i8* %108, i64 1, !dbg !7208
  %114 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7208
  %115 = getelementptr inbounds %struct.psfs_t* %114, i32 0, i32 4, !dbg !7208
  store i8* %113, i8** %115, align 8, !dbg !7208
  %116 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7209
  %117 = getelementptr inbounds %struct.psfs_t* %116, i32 0, i32 8, !dbg !7209
  %118 = load i32* %i, align 4, !dbg !7209
  store i32 %118, i32* %117, align 4, !dbg !7209
  br label %bb21, !dbg !7209

bb21:                                             ; preds = %bb20, %bb19, %DO_WIDTH
  %119 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7206
  %120 = getelementptr inbounds %struct.psfs_t* %119, i32 0, i32 4, !dbg !7206
  %121 = load i8** %120, align 8, !dbg !7206
  %122 = load i8* %121, align 1, !dbg !7206
  %123 = sub i8 %122, 48, !dbg !7206
  %124 = icmp ule i8 %123, 9, !dbg !7206
  br i1 %124, label %bb19, label %DO_QUALIFIER, !dbg !7206

DO_QUALIFIER:                                     ; preds = %bb21, %bb6
  store i8* getelementptr inbounds ([18 x i8]* @qual_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7210
  br label %bb22, !dbg !7210

bb22:                                             ; preds = %bb24, %DO_QUALIFIER
  %125 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7211
  %126 = getelementptr inbounds %struct.psfs_t* %125, i32 0, i32 4, !dbg !7211
  %127 = load i8** %126, align 8, !dbg !7211
  %128 = load i8* %127, align 1, !dbg !7211
  %129 = load i8** %p, align 8, !dbg !7211
  %130 = load i8* %129, align 1, !dbg !7211
  %131 = icmp eq i8 %128, %130, !dbg !7211
  br i1 %131, label %bb23, label %bb24, !dbg !7211

bb23:                                             ; preds = %bb22
  %132 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7212
  %133 = getelementptr inbounds %struct.psfs_t* %132, i32 0, i32 4, !dbg !7212
  %134 = load i8** %133, align 8, !dbg !7212
  %135 = getelementptr inbounds i8* %134, i64 1, !dbg !7212
  %136 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7212
  %137 = getelementptr inbounds %struct.psfs_t* %136, i32 0, i32 4, !dbg !7212
  store i8* %135, i8** %137, align 8, !dbg !7212
  br label %bb25, !dbg !7212

bb24:                                             ; preds = %bb22
  %138 = load i8** %p, align 8, !dbg !7213
  %139 = getelementptr inbounds i8* %138, i64 1, !dbg !7213
  store i8* %139, i8** %p, align 8, !dbg !7213
  %140 = load i8** %p, align 8, !dbg !7213
  %141 = load i8* %140, align 1, !dbg !7213
  %142 = icmp ne i8 %141, 0, !dbg !7213
  br i1 %142, label %bb22, label %bb25, !dbg !7213

bb25:                                             ; preds = %bb24, %bb23
  %143 = load i8** %p, align 8, !dbg !7214
  %144 = ptrtoint i8* %143 to i64, !dbg !7214
  %145 = sub nsw i64 %144, ptrtoint ([18 x i8]* @qual_chars to i64), !dbg !7214
  %146 = icmp sle i64 %145, 1, !dbg !7214
  br i1 %146, label %bb26, label %bb28, !dbg !7214

bb26:                                             ; preds = %bb25
  %147 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7214
  %148 = getelementptr inbounds %struct.psfs_t* %147, i32 0, i32 4, !dbg !7214
  %149 = load i8** %148, align 8, !dbg !7214
  %150 = load i8* %149, align 1, !dbg !7214
  %151 = load i8** %p, align 8, !dbg !7214
  %152 = load i8* %151, align 1, !dbg !7214
  %153 = icmp eq i8 %150, %152, !dbg !7214
  br i1 %153, label %bb27, label %bb28, !dbg !7214

bb27:                                             ; preds = %bb26
  %154 = load i8** %p, align 8, !dbg !7215
  %155 = getelementptr inbounds i8* %154, i64 8, !dbg !7215
  store i8* %155, i8** %p, align 8, !dbg !7215
  %156 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7216
  %157 = getelementptr inbounds %struct.psfs_t* %156, i32 0, i32 4, !dbg !7216
  %158 = load i8** %157, align 8, !dbg !7216
  %159 = getelementptr inbounds i8* %158, i64 1, !dbg !7216
  %160 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7216
  %161 = getelementptr inbounds %struct.psfs_t* %160, i32 0, i32 4, !dbg !7216
  store i8* %159, i8** %161, align 8, !dbg !7216
  br label %bb28, !dbg !7216

bb28:                                             ; preds = %bb27, %bb26, %bb25
  %162 = load i8** %p, align 8, !dbg !7217
  %163 = getelementptr inbounds i8* %162, i64 8, !dbg !7217
  %164 = load i8* %163, align 1, !dbg !7217
  %165 = zext i8 %164 to i32, !dbg !7217
  %int_cast_to_i64 = zext i32 8 to i64
  %166 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %166, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb28
  %167 = shl i32 %165, 8, !dbg !7217
  %168 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7217
  %169 = getelementptr inbounds %struct.psfs_t* %168, i32 0, i32 6, !dbg !7217
  store i32 %167, i32* %169, align 4, !dbg !7217
  store i8* getelementptr inbounds ([23 x i8]* @spec_chars, i64 0, i64 0), i8** %p, align 8, !dbg !7218
  br label %bb29, !dbg !7218

bb29:                                             ; preds = %bb39, %klee_overshift_check.exit
  %170 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7219
  %171 = getelementptr inbounds %struct.psfs_t* %170, i32 0, i32 4, !dbg !7219
  %172 = load i8** %171, align 8, !dbg !7219
  %173 = load i8* %172, align 1, !dbg !7219
  %174 = load i8** %p, align 8, !dbg !7219
  %175 = load i8* %174, align 1, !dbg !7219
  %176 = icmp eq i8 %173, %175, !dbg !7219
  %177 = load i8** %p, align 8, !dbg !7220
  br i1 %176, label %bb30, label %bb39, !dbg !7219

bb30:                                             ; preds = %bb29
  %178 = ptrtoint i8* %177 to i64, !dbg !7220
  %179 = trunc i64 %178 to i32, !dbg !7220
  %180 = trunc i64 ptrtoint ([23 x i8]* @spec_chars to i64) to i32, !dbg !7220
  %181 = sub i32 %179, %180, !dbg !7220
  store i32 %181, i32* %p_m_spec_chars, align 4, !dbg !7220
  store i8* getelementptr inbounds ([8 x i8]* @spec_ranges, i64 0, i64 0), i8** %p, align 8, !dbg !7222
  br label %bb32, !dbg !7222

bb31:                                             ; preds = %bb32
  %182 = load i8** %p, align 8, !dbg !7222
  %183 = getelementptr inbounds i8* %182, i64 1, !dbg !7222
  store i8* %183, i8** %p, align 8, !dbg !7222
  br label %bb32, !dbg !7222

bb32:                                             ; preds = %bb31, %bb30
  %184 = load i8** %p, align 8, !dbg !7222
  %185 = load i8* %184, align 1, !dbg !7222
  %186 = zext i8 %185 to i32, !dbg !7222
  %187 = load i32* %p_m_spec_chars, align 4, !dbg !7222
  %188 = icmp slt i32 %186, %187, !dbg !7222
  br i1 %188, label %bb31, label %bb33, !dbg !7222

bb33:                                             ; preds = %bb32
  %189 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7223
  %190 = getelementptr inbounds %struct.psfs_t* %189, i32 0, i32 6, !dbg !7223
  %191 = load i32* %190, align 4, !dbg !7223
  %int_cast_to_i641 = zext i32 8 to i64
  %192 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %192, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb33
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb33
  %193 = ashr i32 %191, 8, !dbg !7223
  %194 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7223
  %195 = getelementptr inbounds %struct.psfs_t* %194, i32 0, i32 10, !dbg !7223
  %196 = load i8* %195, align 1, !dbg !7223
  %197 = zext i8 %196 to i32, !dbg !7223
  %198 = or i32 %193, %197, !dbg !7223
  %199 = load i8** %p, align 8, !dbg !7223
  %200 = ptrtoint i8* %199 to i64, !dbg !7223
  %201 = trunc i64 %200 to i32, !dbg !7223
  %202 = trunc i64 ptrtoint ([8 x i8]* @spec_ranges to i64) to i32, !dbg !7223
  %203 = sub i32 %201, %202, !dbg !7223
  %204 = sext i32 %203 to i64, !dbg !7223
  %205 = getelementptr inbounds [8 x i16]* @spec_allowed, i64 0, i64 %204, !dbg !7223
  %206 = load i16* %205, align 2, !dbg !7223
  %207 = zext i16 %206 to i32, !dbg !7223
  %not = xor i32 %207, -1, !dbg !7223
  %208 = and i32 %198, %not, !dbg !7223
  %209 = icmp ne i32 %208, 0, !dbg !7223
  br i1 %209, label %ERROR_EINVAL, label %bb35, !dbg !7223

bb35:                                             ; preds = %klee_overshift_check.exit3
  %210 = load i32* %p_m_spec_chars, align 4, !dbg !7224
  %211 = icmp sgt i32 %210, 18, !dbg !7224
  br i1 %211, label %bb36, label %bb38, !dbg !7224

bb36:                                             ; preds = %bb35
  %212 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7224
  %213 = getelementptr inbounds %struct.psfs_t* %212, i32 0, i32 6, !dbg !7224
  %214 = load i32* %213, align 4, !dbg !7224
  %215 = and i32 %214, 1024, !dbg !7224
  %216 = icmp ne i32 %215, 0, !dbg !7224
  br i1 %216, label %bb37, label %bb38, !dbg !7224

bb37:                                             ; preds = %bb36
  %217 = load i32* %p_m_spec_chars, align 4, !dbg !7225
  %218 = sub nsw i32 %217, 3, !dbg !7225
  store i32 %218, i32* %p_m_spec_chars, align 4, !dbg !7225
  br label %bb38, !dbg !7225

bb38:                                             ; preds = %bb37, %bb36, %bb35
  %219 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7226
  %220 = getelementptr inbounds %struct.psfs_t* %219, i32 0, i32 7, !dbg !7226
  %221 = load i32* %p_m_spec_chars, align 4, !dbg !7226
  store i32 %221, i32* %220, align 8, !dbg !7226
  %222 = load %struct.psfs_t** %psfs_addr, align 8, !dbg !7227
  %223 = getelementptr inbounds %struct.psfs_t* %222, i32 0, i32 4, !dbg !7227
  %224 = load i8** %223, align 8, !dbg !7227
  %225 = ptrtoint i8* %224 to i64, !dbg !7227
  %226 = trunc i64 %225 to i32, !dbg !7227
  %227 = load i8** %fmt0, align 8, !dbg !7227
  %228 = ptrtoint i8* %227 to i64, !dbg !7227
  %229 = trunc i64 %228 to i32, !dbg !7227
  %230 = sub i32 %226, %229, !dbg !7227
  store i32 %230, i32* %0, align 4, !dbg !7227
  br label %bb41, !dbg !7227

bb39:                                             ; preds = %bb29
  %231 = getelementptr inbounds i8* %177, i64 1, !dbg !7228
  store i8* %231, i8** %p, align 8, !dbg !7228
  %232 = load i8** %p, align 8, !dbg !7228
  %233 = load i8* %232, align 1, !dbg !7228
  %234 = icmp eq i8 %233, 0, !dbg !7228
  br i1 %234, label %ERROR_EINVAL, label %bb29, !dbg !7228

ERROR_EINVAL:                                     ; preds = %bb39, %klee_overshift_check.exit3, %bb17, %bb16, %bb14, %bb5
  store i32 22, i32* @errno, align 4, !dbg !7229
  store i32 -1, i32* %0, align 4, !dbg !7230
  br label %bb41, !dbg !7230

bb41:                                             ; preds = %ERROR_EINVAL, %bb38
  %235 = load i32* %0, align 4, !dbg !7227
  store i32 %235, i32* %retval, align 4, !dbg !7227
  %retval42 = load i32* %retval, !dbg !7227
  ret i32 %retval42, !dbg !7227
}

define hidden i32 @__stdio_adjust_position(%4* noalias %stream, i64* %pos) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %retval = alloca i32
  %iftmp.0 = alloca i8*
  %0 = alloca i32
  %oldpos = alloca i64
  %corr = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  %1 = load %4** %stream_addr, align 8, !dbg !7231
  %2 = getelementptr inbounds %4* %1, i32 0, i32 0, !dbg !7231
  %3 = load i16* %2, align 8, !dbg !7231
  %4 = zext i16 %3 to i32, !dbg !7231
  %5 = and i32 %4, 3, !dbg !7231
  store i32 %5, i32* %corr, align 4, !dbg !7231
  %6 = load i32* %corr, align 4, !dbg !7231
  %7 = icmp ne i32 %6, 0, !dbg !7231
  br i1 %7, label %bb, label %bb1, !dbg !7231

bb:                                               ; preds = %entry
  %8 = load i32* %corr, align 4, !dbg !7233
  %9 = sub nsw i32 %8, 1, !dbg !7233
  store i32 %9, i32* %corr, align 4, !dbg !7233
  br label %bb1, !dbg !7233

bb1:                                              ; preds = %bb, %entry
  %10 = load i32* %corr, align 4, !dbg !7234
  %11 = icmp ne i32 %10, 0, !dbg !7234
  br i1 %11, label %bb2, label %bb8, !dbg !7234

bb2:                                              ; preds = %bb1
  %12 = load %4** %stream_addr, align 8, !dbg !7234
  %13 = getelementptr inbounds %4* %12, i32 0, i32 0, !dbg !7234
  %14 = load i16* %13, align 8, !dbg !7234
  %15 = zext i16 %14 to i32, !dbg !7234
  %16 = and i32 %15, 2048, !dbg !7234
  %17 = icmp ne i32 %16, 0, !dbg !7234
  br i1 %17, label %bb3, label %bb8, !dbg !7234

bb3:                                              ; preds = %bb2
  %18 = load i32* %corr, align 4, !dbg !7235
  %19 = icmp sgt i32 %18, 1, !dbg !7235
  br i1 %19, label %bb5, label %bb4, !dbg !7235

bb4:                                              ; preds = %bb3
  %20 = load %4** %stream_addr, align 8, !dbg !7235
  %21 = getelementptr inbounds %4* %20, i32 0, i32 10, !dbg !7235
  %22 = getelementptr inbounds [2 x i32]* %21, i64 0, i64 1, !dbg !7235
  %23 = load i32* %22, align 4, !dbg !7235
  %24 = icmp ne i32 %23, 0, !dbg !7235
  br i1 %24, label %bb5, label %bb6, !dbg !7235

bb5:                                              ; preds = %bb4, %bb3
  store i32 -1, i32* %0, align 4, !dbg !7236
  br label %bb16, !dbg !7236

bb6:                                              ; preds = %bb4
  %25 = load %4** %stream_addr, align 8, !dbg !7237
  %26 = getelementptr inbounds %4* %25, i32 0, i32 1, !dbg !7237
  %27 = getelementptr inbounds [2 x i8]* %26, i64 0, i64 1, !dbg !7237
  %28 = load i8* %27, align 1, !dbg !7237
  %29 = zext i8 %28 to i32, !dbg !7237
  %30 = add nsw i32 %29, 1, !dbg !7237
  %31 = load i32* %corr, align 4, !dbg !7237
  %32 = sub nsw i32 %31, %30, !dbg !7237
  store i32 %32, i32* %corr, align 4, !dbg !7237
  %33 = load %4** %stream_addr, align 8, !dbg !7238
  %34 = getelementptr inbounds %4* %33, i32 0, i32 11, !dbg !7238
  %35 = getelementptr inbounds %struct.__mbstate_t* %34, i32 0, i32 0, !dbg !7238
  %36 = load i32* %35, align 8, !dbg !7238
  %37 = icmp sgt i32 %36, 0, !dbg !7238
  br i1 %37, label %bb7, label %bb8, !dbg !7238

bb7:                                              ; preds = %bb6
  %38 = load %4** %stream_addr, align 8, !dbg !7239
  %39 = getelementptr inbounds %4* %38, i32 0, i32 1, !dbg !7239
  %40 = getelementptr inbounds [2 x i8]* %39, i64 0, i64 0, !dbg !7239
  %41 = load i8* %40, align 1, !dbg !7239
  %42 = zext i8 %41 to i32, !dbg !7239
  %43 = load i32* %corr, align 4, !dbg !7239
  %44 = sub nsw i32 %43, %42, !dbg !7239
  store i32 %44, i32* %corr, align 4, !dbg !7239
  br label %bb8, !dbg !7239

bb8:                                              ; preds = %bb7, %bb6, %bb2, %bb1
  %45 = load %4** %stream_addr, align 8, !dbg !7240
  %46 = getelementptr inbounds %4* %45, i32 0, i32 0, !dbg !7240
  %47 = load i16* %46, align 8, !dbg !7240
  %48 = zext i16 %47 to i32, !dbg !7240
  %49 = and i32 %48, 64, !dbg !7240
  %50 = icmp ne i32 %49, 0, !dbg !7240
  %51 = load %4** %stream_addr, align 8, !dbg !7240
  br i1 %50, label %bb9, label %bb10, !dbg !7240

bb9:                                              ; preds = %bb8
  %52 = getelementptr inbounds %4* %51, i32 0, i32 3, !dbg !7240
  %53 = load i8** %52, align 8, !dbg !7240
  store i8* %53, i8** %iftmp.0, align 8, !dbg !7240
  br label %bb11, !dbg !7240

bb10:                                             ; preds = %bb8
  %54 = getelementptr inbounds %4* %51, i32 0, i32 6, !dbg !7240
  %55 = load i8** %54, align 8, !dbg !7240
  store i8* %55, i8** %iftmp.0, align 8, !dbg !7240
  br label %bb11, !dbg !7240

bb11:                                             ; preds = %bb10, %bb9
  %56 = load i8** %iftmp.0, align 8, !dbg !7240
  %57 = ptrtoint i8* %56 to i64, !dbg !7240
  %58 = trunc i64 %57 to i32, !dbg !7240
  %59 = load %4** %stream_addr, align 8, !dbg !7240
  %60 = getelementptr inbounds %4* %59, i32 0, i32 5, !dbg !7240
  %61 = load i8** %60, align 8, !dbg !7240
  %62 = ptrtoint i8* %61 to i64, !dbg !7240
  %63 = trunc i64 %62 to i32, !dbg !7240
  %64 = sub i32 %58, %63, !dbg !7240
  %65 = load i32* %corr, align 4, !dbg !7240
  %66 = add i32 %64, %65, !dbg !7240
  store i32 %66, i32* %corr, align 4, !dbg !7240
  %67 = load i64** %pos_addr, align 8, !dbg !7241
  %68 = load i64* %67, align 8, !dbg !7241
  store i64 %68, i64* %oldpos, align 8, !dbg !7241
  %69 = load i64** %pos_addr, align 8, !dbg !7242
  %70 = load i64* %69, align 8, !dbg !7242
  %71 = load i32* %corr, align 4, !dbg !7242
  %72 = sext i32 %71 to i64, !dbg !7242
  %73 = sub nsw i64 %70, %72, !dbg !7242
  %74 = load i64** %pos_addr, align 8, !dbg !7242
  store i64 %73, i64* %74, align 8, !dbg !7242
  %75 = load i64** %pos_addr, align 8, !dbg !7242
  %76 = load i64* %75, align 8, !dbg !7242
  %77 = load i64* %oldpos, align 8, !dbg !7242
  %78 = icmp sgt i64 %76, %77, !dbg !7242
  br i1 %78, label %bb12, label %bb13, !dbg !7242

bb12:                                             ; preds = %bb11
  %79 = load i32* %corr, align 4, !dbg !7243
  %80 = sub nsw i32 0, %79, !dbg !7243
  store i32 %80, i32* %corr, align 4, !dbg !7243
  br label %bb13, !dbg !7243

bb13:                                             ; preds = %bb12, %bb11
  %81 = load i32* %corr, align 4, !dbg !7244
  %82 = icmp slt i32 %81, 0, !dbg !7244
  br i1 %82, label %bb14, label %bb15, !dbg !7244

bb14:                                             ; preds = %bb13
  store i32 75, i32* @errno, align 4, !dbg !7245
  br label %bb15, !dbg !7245

bb15:                                             ; preds = %bb14, %bb13
  %83 = load i32* %corr, align 4, !dbg !7246
  store i32 %83, i32* %0, align 4, !dbg !7246
  br label %bb16, !dbg !7246

bb16:                                             ; preds = %bb15, %bb5
  %84 = load i32* %0, align 4, !dbg !7236
  store i32 %84, i32* %retval, align 4, !dbg !7236
  %retval17 = load i32* %retval, !dbg !7236
  ret i32 %retval17, !dbg !7236
}

define hidden i32 @__stdio_seek(%4* %stream, i64* %pos, i32 %whence) nounwind {
entry:
  %stream_addr = alloca %4*, align 8
  %pos_addr = alloca i64*, align 8
  %whence_addr = alloca i32, align 4
  %retval = alloca i32
  %iftmp.0 = alloca i32
  %0 = alloca i32
  %res = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store %4* %stream, %4** %stream_addr
  store i64* %pos, i64** %pos_addr
  store i32 %whence, i32* %whence_addr
  %1 = load i64** %pos_addr, align 8, !dbg !7247
  %2 = load i64* %1, align 8, !dbg !7247
  %3 = load %4** %stream_addr, align 8, !dbg !7247
  %4 = getelementptr inbounds %4* %3, i32 0, i32 2, !dbg !7247
  %5 = load i32* %4, align 4, !dbg !7247
  %6 = load i32* %whence_addr, align 4, !dbg !7247
  %7 = call i64 @lseek64(i32 %5, i64 %2, i32 %6) nounwind, !dbg !7247
  store i64 %7, i64* %res, align 8, !dbg !7247
  %8 = load i64* %res, align 8, !dbg !7249
  %9 = icmp sge i64 %8, 0, !dbg !7249
  br i1 %9, label %bb, label %bb1, !dbg !7249

bb:                                               ; preds = %entry
  %10 = load i64** %pos_addr, align 8, !dbg !7249
  %11 = load i64* %res, align 8, !dbg !7249
  store i64 %11, i64* %10, align 8, !dbg !7249
  store i32 0, i32* %iftmp.0, align 4, !dbg !7249
  br label %bb2, !dbg !7249

bb1:                                              ; preds = %entry
  %12 = load i64* %res, align 8, !dbg !7249
  %13 = trunc i64 %12 to i32, !dbg !7249
  store i32 %13, i32* %iftmp.0, align 4, !dbg !7249
  br label %bb2, !dbg !7249

bb2:                                              ; preds = %bb1, %bb
  %14 = load i32* %iftmp.0, align 4, !dbg !7249
  store i32 %14, i32* %0, align 4, !dbg !7249
  %15 = load i32* %0, align 4, !dbg !7249
  store i32 %15, i32* %retval, align 4, !dbg !7249
  %retval3 = load i32* %retval, !dbg !7249
  ret i32 %retval3, !dbg !7249
}

define i32 @__xpg_strerror_r(i32 %errnum, i8* %strerrbuf, i64 %buflen) nounwind {
entry:
  %errnum_addr = alloca i32, align 4
  %strerrbuf_addr = alloca i8*, align 8
  %buflen_addr = alloca i64, align 8
  %retval = alloca i32
  %0 = alloca i32
  %s = alloca i8*
  %i = alloca i32
  %retval1 = alloca i32
  %buf = alloca [50 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i32 %errnum, i32* %errnum_addr
  store i8* %strerrbuf, i8** %strerrbuf_addr
  store i64 %buflen, i64* %buflen_addr
  store i32 22, i32* %retval1, align 4, !dbg !7250
  %1 = load i32* %errnum_addr, align 4, !dbg !7252
  store i32 %1, i32* %i, align 4, !dbg !7252
  %2 = load i32* %i, align 4, !dbg !7253
  %3 = icmp ule i32 %2, 124, !dbg !7253
  br i1 %3, label %bb, label %bb8, !dbg !7253

bb:                                               ; preds = %entry
  store i8* getelementptr inbounds ([2906 x i8]* @_string_syserrmsgs, i64 0, i64 0), i8** %s, align 8, !dbg !7254
  br label %bb5, !dbg !7254

bb2:                                              ; preds = %bb5
  %4 = icmp eq i8 %12, 0, !dbg !7255
  br i1 %4, label %bb3, label %bb4, !dbg !7255

bb3:                                              ; preds = %bb2
  %5 = load i32* %i, align 4, !dbg !7256
  %6 = sub nsw i32 %5, 1, !dbg !7256
  store i32 %6, i32* %i, align 4, !dbg !7256
  br label %bb4, !dbg !7256

bb4:                                              ; preds = %bb3, %bb2
  %7 = load i8** %s, align 8, !dbg !7254
  %8 = getelementptr inbounds i8* %7, i64 1, !dbg !7254
  store i8* %8, i8** %s, align 8, !dbg !7254
  br label %bb5, !dbg !7254

bb5:                                              ; preds = %bb4, %bb
  %9 = load i32* %i, align 4, !dbg !7254
  %10 = icmp ne i32 %9, 0, !dbg !7254
  %11 = load i8** %s, align 8, !dbg !7255
  %12 = load i8* %11, align 1, !dbg !7255
  br i1 %10, label %bb2, label %bb6, !dbg !7254

bb6:                                              ; preds = %bb5
  %13 = icmp ne i8 %12, 0, !dbg !7257
  br i1 %13, label %bb7, label %bb8, !dbg !7257

bb7:                                              ; preds = %bb6
  store i32 0, i32* %retval1, align 4, !dbg !7258
  br label %GOT_MESG, !dbg !7258

bb8:                                              ; preds = %bb6, %entry
  %14 = load i32* %errnum_addr, align 4, !dbg !7259
  %15 = sext i32 %14 to i64, !dbg !7259
  %buf9 = bitcast [50 x i8]* %buf to i8*, !dbg !7259
  %16 = getelementptr inbounds i8* %buf9, i64 50, !dbg !7259
  %17 = getelementptr inbounds i8* %16, i64 -1, !dbg !7259
  %18 = call i8* @_uintmaxtostr(i8* noalias %17, i64 %15, i32 -10, i32 0) nounwind, !dbg !7259
  %19 = getelementptr inbounds i8* %18, i64 -14, !dbg !7259
  store i8* %19, i8** %s, align 8, !dbg !7259
  %20 = load i8** %s, align 8, !dbg !7260
  %21 = call i8* @memcpy(i8* noalias %20, i8* noalias getelementptr inbounds ([14 x i8]* @unknown.1225, i64 0, i64 0), i64 14) nounwind, !dbg !7260
  br label %GOT_MESG, !dbg !7261

GOT_MESG:                                         ; preds = %bb8, %bb7
  %22 = load i8** %strerrbuf_addr, align 8, !dbg !7262
  %23 = icmp eq i8* %22, null, !dbg !7262
  br i1 %23, label %bb10, label %bb11, !dbg !7262

bb10:                                             ; preds = %GOT_MESG
  store i64 0, i64* %buflen_addr, align 8, !dbg !7263
  br label %bb11, !dbg !7263

bb11:                                             ; preds = %bb10, %GOT_MESG
  %24 = load i8** %s, align 8, !dbg !7264
  %25 = call i64 @strlen(i8* %24) nounwind readonly, !dbg !7264
  %26 = trunc i64 %25 to i32, !dbg !7264
  %27 = add i32 %26, 1, !dbg !7264
  store i32 %27, i32* %i, align 4, !dbg !7264
  %28 = load i32* %i, align 4, !dbg !7265
  %29 = sext i32 %28 to i64, !dbg !7265
  %30 = load i64* %buflen_addr, align 8, !dbg !7265
  %31 = icmp ugt i64 %29, %30, !dbg !7265
  br i1 %31, label %bb12, label %bb13, !dbg !7265

bb12:                                             ; preds = %bb11
  %32 = load i64* %buflen_addr, align 8, !dbg !7266
  %33 = trunc i64 %32 to i32, !dbg !7266
  store i32 %33, i32* %i, align 4, !dbg !7266
  store i32 34, i32* %retval1, align 4, !dbg !7267
  br label %bb13, !dbg !7267

bb13:                                             ; preds = %bb12, %bb11
  %34 = load i32* %i, align 4, !dbg !7268
  %35 = icmp ne i32 %34, 0, !dbg !7268
  br i1 %35, label %bb14, label %bb15, !dbg !7268

bb14:                                             ; preds = %bb13
  %36 = load i32* %i, align 4, !dbg !7269
  %37 = sext i32 %36 to i64, !dbg !7269
  %38 = load i8** %strerrbuf_addr, align 8, !dbg !7269
  %39 = load i8** %s, align 8, !dbg !7269
  %40 = call i8* @memcpy(i8* noalias %38, i8* noalias %39, i64 %37) nounwind, !dbg !7269
  %41 = load i32* %i, align 4, !dbg !7270
  %42 = sub nsw i32 %41, 1, !dbg !7270
  %43 = load i8** %strerrbuf_addr, align 8, !dbg !7270
  %44 = sext i32 %42 to i64, !dbg !7270
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !7270
  store i8 0, i8* %45, align 1, !dbg !7270
  br label %bb15, !dbg !7270

bb15:                                             ; preds = %bb14, %bb13
  %46 = load i32* %retval1, align 4, !dbg !7271
  %47 = icmp ne i32 %46, 0, !dbg !7271
  br i1 %47, label %bb16, label %bb17, !dbg !7271

bb16:                                             ; preds = %bb15
  %48 = load i32* %retval1, align 4, !dbg !7272
  store i32 %48, i32* @errno, align 4, !dbg !7272
  br label %bb17, !dbg !7272

bb17:                                             ; preds = %bb16, %bb15
  %49 = load i32* %retval1, align 4, !dbg !7273
  store i32 %49, i32* %0, align 4, !dbg !7273
  %50 = load i32* %0, align 4, !dbg !7273
  store i32 %50, i32* %retval, align 4, !dbg !7273
  %retval18 = load i32* %retval, !dbg !7273
  ret i32 %retval18, !dbg !7273
}

define hidden i64 @_fpmaxtostr(%4* %fp, x86_fp80 %x, %struct.printf_info* %info, i64 (%4*, i64, i64, i64)* %fp_outfunc) nounwind {
entry:
  %fp_addr = alloca %4*, align 8
  %x_addr = alloca x86_fp80, align 16
  %info_addr = alloca %struct.printf_info*, align 8
  %fp_outfunc_addr = alloca i64 (%4*, i64, i64, i64)*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %e.6 = alloca i8*
  %round = alloca i32
  %o_exp = alloca i32
  %exp = alloca i32
  %width = alloca i32
  %preci = alloca i32
  %cnt = alloca i32
  %s = alloca i8*
  %e = alloca i8*
  %pc_fwi = alloca [24 x i64]
  %ppc = alloca i64*
  %ppc_last = alloca i64*
  %exp_buf = alloca [16 x i8]
  %buf = alloca [30 x i8]
  %sign_str = alloca [6 x i8]
  %o_mode = alloca i8
  %mode = alloca i8
  %i = alloca i32
  %j = alloca i32
  %exp_neg = alloca i32
  %i31 = alloca i32
  %j32 = alloca i32
  %digit_block = alloca i64
  %i48 = alloca i32
  %i67 = alloca i32
  %p = alloca i8*
  %j90 = alloca i32
  %exp_char = alloca i8
  %exp_sign = alloca i8
  %i97 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %4* %fp, %4** %fp_addr
  store x86_fp80 %x, x86_fp80* %x_addr
  store %struct.printf_info* %info, %struct.printf_info** %info_addr
  store i64 (%4*, i64, i64, i64)* %fp_outfunc, i64 (%4*, i64, i64, i64)** %fp_outfunc_addr
  %1 = load %struct.printf_info** %info_addr, align 8, !dbg !7274
  %2 = getelementptr inbounds %struct.printf_info* %1, i32 0, i32 1, !dbg !7274
  %3 = load i32* %2, align 4, !dbg !7274
  store i32 %3, i32* %width, align 4, !dbg !7274
  %4 = load %struct.printf_info** %info_addr, align 8, !dbg !7276
  %5 = getelementptr inbounds %struct.printf_info* %4, i32 0, i32 0, !dbg !7276
  %6 = load i32* %5, align 4, !dbg !7276
  store i32 %6, i32* %preci, align 4, !dbg !7276
  %7 = load %struct.printf_info** %info_addr, align 8, !dbg !7277
  %8 = getelementptr inbounds %struct.printf_info* %7, i32 0, i32 2, !dbg !7277
  %9 = load i32* %8, align 4, !dbg !7277
  %10 = trunc i32 %9 to i8, !dbg !7277
  store i8 %10, i8* %mode, align 1, !dbg !7277
  %11 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7278
  store i8 101, i8* %11, align 1, !dbg !7278
  %12 = load i8* %mode, align 1, !dbg !7279
  %13 = or i8 %12, 32, !dbg !7279
  %14 = icmp eq i8 %13, 97, !dbg !7279
  br i1 %14, label %bb, label %bb1, !dbg !7279

bb:                                               ; preds = %entry
  %15 = load i8* %mode, align 1, !dbg !7280
  %16 = add i8 %15, 6, !dbg !7280
  store i8 %16, i8* %mode, align 1, !dbg !7280
  br label %bb1, !dbg !7280

bb1:                                              ; preds = %bb, %entry
  %17 = load i32* %preci, align 4, !dbg !7281
  %18 = icmp slt i32 %17, 0, !dbg !7281
  br i1 %18, label %bb2, label %bb3, !dbg !7281

bb2:                                              ; preds = %bb1
  store i32 6, i32* %preci, align 4, !dbg !7282
  br label %bb3, !dbg !7282

bb3:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7283
  store i8 0, i8* %19, align 1, !dbg !7283
  %20 = load %struct.printf_info** %info_addr, align 8, !dbg !7284
  %21 = getelementptr inbounds %struct.printf_info* %20, i32 0, i32 3, !dbg !7284
  %22 = load i32* %21, align 4, !dbg !7284
  %int_cast_to_i644 = zext i32 30 to i64
  %23 = icmp ult i64 %int_cast_to_i644, 32
  br i1 %23, label %klee_overshift_check.exit, label %bb.i21

bb.i21:                                           ; preds = %bb3
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb3
  %24 = shl i32 %22, 30, !dbg !7284
  %int_cast_to_i645 = zext i32 31 to i64
  %25 = icmp ult i64 %int_cast_to_i645, 32
  br i1 %25, label %klee_overshift_check.exit23, label %bb.i22

bb.i22:                                           ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit23:                      ; preds = %klee_overshift_check.exit
  %26 = lshr i32 %24, 31, !dbg !7284
  %27 = trunc i32 %26 to i1, !dbg !7284
  %28 = icmp ne i1 %27, false, !dbg !7284
  br i1 %28, label %bb4, label %bb5, !dbg !7284

bb4:                                              ; preds = %klee_overshift_check.exit23
  %29 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7285
  store i8 43, i8* %29, align 1, !dbg !7285
  br label %bb7, !dbg !7285

bb5:                                              ; preds = %klee_overshift_check.exit23
  %30 = load %struct.printf_info** %info_addr, align 8, !dbg !7286
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 3, !dbg !7286
  %32 = load i32* %31, align 4, !dbg !7286
  %int_cast_to_i646 = zext i32 31 to i64
  %33 = icmp ult i64 %int_cast_to_i646, 32
  br i1 %33, label %klee_overshift_check.exit25, label %bb.i24

bb.i24:                                           ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit25:                      ; preds = %bb5
  %34 = shl i32 %32, 31, !dbg !7286
  %int_cast_to_i647 = zext i32 31 to i64
  %35 = icmp ult i64 %int_cast_to_i647, 32
  br i1 %35, label %klee_overshift_check.exit27, label %bb.i26

bb.i26:                                           ; preds = %klee_overshift_check.exit25
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit27:                      ; preds = %klee_overshift_check.exit25
  %36 = lshr i32 %34, 31, !dbg !7286
  %37 = trunc i32 %36 to i1, !dbg !7286
  %38 = icmp ne i1 %37, false, !dbg !7286
  br i1 %38, label %bb6, label %bb7, !dbg !7286

bb6:                                              ; preds = %klee_overshift_check.exit27
  %39 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7287
  store i8 32, i8* %39, align 1, !dbg !7287
  br label %bb7, !dbg !7287

bb7:                                              ; preds = %bb6, %klee_overshift_check.exit27, %bb4
  %sign_str8 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7288
  %40 = getelementptr inbounds i8* %sign_str8, i64 1, !dbg !7288
  store i8 0, i8* %40, align 1, !dbg !7288
  %41 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7289
  store i64 0, i64* %41, align 8, !dbg !7289
  %42 = load x86_fp80* %x_addr, align 16, !dbg !7290
  %43 = load x86_fp80* %x_addr, align 16, !dbg !7290
  %44 = fcmp une x86_fp80 %42, %43, !dbg !7290
  br i1 %44, label %bb9, label %bb10, !dbg !7290

bb9:                                              ; preds = %bb7
  %45 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7291
  store i64 8, i64* %45, align 8, !dbg !7291
  br label %INF_NAN, !dbg !7291

bb10:                                             ; preds = %bb7
  %46 = load x86_fp80* %x_addr, align 16, !dbg !7292
  %47 = fcmp oeq x86_fp80 %46, 0xK00000000000000000000, !dbg !7292
  %48 = load x86_fp80* %x_addr, align 16, !dbg !7293
  br i1 %47, label %bb11, label %bb14, !dbg !7292

bb11:                                             ; preds = %bb10
  %49 = fdiv x86_fp80 0xK3FFF8000000000000000, %48, !dbg !7293
  %50 = fcmp olt x86_fp80 %49, 0xK00000000000000000000, !dbg !7293
  br i1 %50, label %bb12, label %bb13, !dbg !7293

bb12:                                             ; preds = %bb11
  %51 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7294
  store i8 45, i8* %51, align 1, !dbg !7294
  br label %bb13, !dbg !7294

bb13:                                             ; preds = %bb12, %bb11
  store i32 -1, i32* %exp, align 4, !dbg !7295
  br label %GENERATE_DIGITS, !dbg !7295

bb14:                                             ; preds = %bb10
  %52 = fcmp olt x86_fp80 %48, 0xK00000000000000000000, !dbg !7296
  br i1 %52, label %bb15, label %bb16, !dbg !7296

bb15:                                             ; preds = %bb14
  %53 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7297
  store i8 45, i8* %53, align 1, !dbg !7297
  %54 = load x86_fp80* %x_addr, align 16, !dbg !7298
  %55 = fsub x86_fp80 0xK80000000000000000000, %54, !dbg !7298
  store x86_fp80 %55, x86_fp80* %x_addr, align 16, !dbg !7298
  br label %bb16, !dbg !7298

bb16:                                             ; preds = %bb15, %bb14
  %56 = load x86_fp80* %x_addr, align 16, !dbg !7299
  %57 = fdiv x86_fp80 %56, 0xK40018000000000000000, !dbg !7299
  %58 = load x86_fp80* %x_addr, align 16, !dbg !7299
  %59 = fcmp oeq x86_fp80 %57, %58, !dbg !7299
  br i1 %59, label %INF_NAN, label %bb20, !dbg !7299

INF_NAN:                                          ; preds = %bb16, %bb9
  %60 = load %struct.printf_info** %info_addr, align 8, !dbg !7300
  %61 = getelementptr inbounds %struct.printf_info* %60, i32 0, i32 4, !dbg !7300
  store i32 32, i32* %61, align 4, !dbg !7300
  %pc_fwi17 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7301
  %62 = getelementptr inbounds i64* %pc_fwi17, i64 6, !dbg !7301
  store i64* %62, i64** %ppc, align 8, !dbg !7301
  %63 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7302
  store i64 112, i64* %63, align 8, !dbg !7302
  %64 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7303
  store i64 3, i64* %64, align 8, !dbg !7303
  %65 = load i8* %mode, align 1, !dbg !7304
  %66 = icmp sle i8 %65, 96, !dbg !7304
  br i1 %66, label %bb18, label %bb19, !dbg !7304

bb18:                                             ; preds = %INF_NAN
  %67 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7305
  %68 = load i64* %67, align 8, !dbg !7305
  %69 = add nsw i64 %68, 4, !dbg !7305
  %70 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7305
  store i64 %69, i64* %70, align 8, !dbg !7305
  br label %bb19, !dbg !7305

bb19:                                             ; preds = %bb18, %INF_NAN
  %71 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7306
  %72 = load i64* %71, align 8, !dbg !7306
  %73 = getelementptr inbounds i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 0), i64 %72, !dbg !7306
  %74 = ptrtoint i8* %73 to i64, !dbg !7306
  %75 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7306
  store i64 %74, i64* %75, align 8, !dbg !7306
  br label %EXIT_SPECIAL, !dbg !7306

bb20:                                             ; preds = %bb16
  store i32 8, i32* %exp, align 4, !dbg !7307
  store i32 13, i32* %i, align 4, !dbg !7309
  store i32 4096, i32* %j, align 4, !dbg !7310
  store i32 0, i32* %exp_neg, align 4, !dbg !7311
  %76 = load x86_fp80* %x_addr, align 16, !dbg !7313
  %77 = fcmp olt x86_fp80 %76, 0xK4019BEBC200000000000, !dbg !7313
  br i1 %77, label %bb21, label %bb22, !dbg !7313

bb21:                                             ; preds = %bb20
  store i32 1, i32* %exp_neg, align 4, !dbg !7314
  br label %bb22, !dbg !7314

bb22:                                             ; preds = %klee_overshift_check.exit29, %bb21, %bb20
  %78 = load i32* %i, align 4, !dbg !7315
  %79 = sub nsw i32 %78, 1, !dbg !7315
  store i32 %79, i32* %i, align 4, !dbg !7315
  %80 = load i32* %exp_neg, align 4, !dbg !7316
  %81 = icmp ne i32 %80, 0, !dbg !7316
  %82 = load i32* %i, align 4, !dbg !7317
  %83 = sext i32 %82 to i64, !dbg !7317
  %84 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %83, !dbg !7317
  %85 = load x86_fp80* %84, align 16, !dbg !7317
  %86 = load x86_fp80* %x_addr, align 16, !dbg !7317
  br i1 %81, label %bb23, label %bb26, !dbg !7316

bb23:                                             ; preds = %bb22
  %87 = fmul x86_fp80 %85, %86, !dbg !7317
  %88 = fcmp olt x86_fp80 %87, 0xK401CEE6B280000000000, !dbg !7317
  br i1 %88, label %bb24, label %bb28, !dbg !7317

bb24:                                             ; preds = %bb23
  %89 = load i32* %i, align 4, !dbg !7318
  %90 = sext i32 %89 to i64, !dbg !7318
  %91 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %90, !dbg !7318
  %92 = load x86_fp80* %91, align 16, !dbg !7318
  %93 = load x86_fp80* %x_addr, align 16, !dbg !7318
  %94 = fmul x86_fp80 %92, %93, !dbg !7318
  store x86_fp80 %94, x86_fp80* %x_addr, align 16, !dbg !7318
  %95 = load i32* %exp, align 4, !dbg !7319
  %96 = load i32* %j, align 4, !dbg !7319
  %97 = sub nsw i32 %95, %96, !dbg !7319
  store i32 %97, i32* %exp, align 4, !dbg !7319
  br label %bb28, !dbg !7319

bb26:                                             ; preds = %bb22
  %98 = fdiv x86_fp80 %86, %85, !dbg !7320
  %99 = fcmp oge x86_fp80 %98, 0xK4019BEBC200000000000, !dbg !7320
  br i1 %99, label %bb27, label %bb28, !dbg !7320

bb27:                                             ; preds = %bb26
  %100 = load i32* %i, align 4, !dbg !7321
  %101 = sext i32 %100 to i64, !dbg !7321
  %102 = getelementptr inbounds [13 x x86_fp80]* @exp10_table, i64 0, i64 %101, !dbg !7321
  %103 = load x86_fp80* %102, align 16, !dbg !7321
  %104 = load x86_fp80* %x_addr, align 16, !dbg !7321
  %105 = fdiv x86_fp80 %104, %103, !dbg !7321
  store x86_fp80 %105, x86_fp80* %x_addr, align 16, !dbg !7321
  %106 = load i32* %exp, align 4, !dbg !7322
  %107 = load i32* %j, align 4, !dbg !7322
  %108 = add nsw i32 %106, %107, !dbg !7322
  store i32 %108, i32* %exp, align 4, !dbg !7322
  br label %bb28, !dbg !7322

bb28:                                             ; preds = %bb23, %bb24, %bb27, %bb26
  %109 = load i32* %j, align 4, !dbg !7323
  %int_cast_to_i648 = zext i32 1 to i64
  %110 = icmp ult i64 %int_cast_to_i648, 32
  br i1 %110, label %klee_overshift_check.exit29, label %bb.i28

bb.i28:                                           ; preds = %bb28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit29:                      ; preds = %bb28
  %111 = ashr i32 %109, 1, !dbg !7323
  store i32 %111, i32* %j, align 4, !dbg !7323
  %112 = load i32* %i, align 4, !dbg !7324
  %113 = icmp ne i32 %112, 0, !dbg !7324
  br i1 %113, label %bb22, label %bb29, !dbg !7324

bb29:                                             ; preds = %klee_overshift_check.exit29
  %114 = load x86_fp80* %x_addr, align 16, !dbg !7325
  %115 = fcmp oge x86_fp80 %114, 0xK401CEE6B280000000000, !dbg !7325
  br i1 %115, label %bb30, label %GENERATE_DIGITS, !dbg !7325

bb30:                                             ; preds = %bb29
  %116 = load x86_fp80* getelementptr inbounds ([13 x x86_fp80]* @exp10_table, i64 0, i64 0), align 16, !dbg !7326
  %117 = load x86_fp80* %x_addr, align 16, !dbg !7326
  %118 = fdiv x86_fp80 %117, %116, !dbg !7326
  store x86_fp80 %118, x86_fp80* %x_addr, align 16, !dbg !7326
  %119 = load i32* %exp, align 4, !dbg !7327
  %120 = add nsw i32 %119, 1, !dbg !7327
  store i32 %120, i32* %exp, align 4, !dbg !7327
  br label %GENERATE_DIGITS, !dbg !7328

GENERATE_DIGITS:                                  ; preds = %bb30, %bb29, %bb13
  %buf33 = bitcast [30 x i8]* %buf to i8*, !dbg !7329
  %121 = getelementptr inbounds i8* %buf33, i64 2, !dbg !7329
  store i8* %121, i8** %s, align 8, !dbg !7329
  store i32 0, i32* %i31, align 4, !dbg !7331
  br label %bb34, !dbg !7331

bb34:                                             ; preds = %bb36, %GENERATE_DIGITS
  %122 = load x86_fp80* %x_addr, align 16, !dbg !7332
  %123 = fptoui x86_fp80 %122 to i64, !dbg !7332
  store i64 %123, i64* %digit_block, align 8, !dbg !7332
  %124 = load i64* %digit_block, align 8, !dbg !7334
  %125 = uitofp i64 %124 to x86_fp80, !dbg !7334
  %126 = load x86_fp80* %x_addr, align 16, !dbg !7334
  %127 = fsub x86_fp80 %126, %125, !dbg !7334
  %128 = fmul x86_fp80 %127, 0xK401CEE6B280000000000, !dbg !7334
  store x86_fp80 %128, x86_fp80* %x_addr, align 16, !dbg !7334
  %129 = load i8** %s, align 8, !dbg !7335
  %130 = getelementptr inbounds i8* %129, i64 9, !dbg !7335
  store i8* %130, i8** %s, align 8, !dbg !7335
  store i32 0, i32* %j32, align 4, !dbg !7336
  br label %bb35, !dbg !7336

bb35:                                             ; preds = %klee_div_zero_check.exit16, %bb34
  %131 = load i32* %j32, align 4, !dbg !7337
  %132 = add nsw i32 %131, 1, !dbg !7337
  store i32 %132, i32* %j32, align 4, !dbg !7337
  %133 = load i32* %j32, align 4, !dbg !7337
  %134 = sub nsw i32 0, %133, !dbg !7337
  %135 = load i64* %digit_block, align 8, !dbg !7337
  %int_cast_to_i64 = bitcast i64 10 to i64
  %136 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %137 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %137, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb35
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb35
  call void @klee_disable_symbex() nounwind
  %138 = urem i64 %135, 10, !dbg !7337
  %139 = trunc i64 %138 to i8, !dbg !7337
  %140 = add i8 %139, 48, !dbg !7337
  %141 = load i8** %s, align 8, !dbg !7337
  %142 = sext i32 %134 to i64, !dbg !7337
  %143 = getelementptr inbounds i8* %141, i64 %142, !dbg !7337
  store i8 %140, i8* %143, align 1, !dbg !7337
  %144 = load i64* %digit_block, align 8, !dbg !7338
  %int_cast_to_i641 = bitcast i64 10 to i64
  %145 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %146 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %146, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %147 = udiv i64 %144, 10, !dbg !7338
  store i64 %147, i64* %digit_block, align 8, !dbg !7338
  %148 = load i32* %j32, align 4, !dbg !7339
  %149 = icmp sle i32 %148, 8, !dbg !7339
  br i1 %149, label %bb35, label %bb36, !dbg !7339

bb36:                                             ; preds = %klee_div_zero_check.exit16
  %150 = load i32* %i31, align 4, !dbg !7340
  %151 = add nsw i32 %150, 1, !dbg !7340
  store i32 %151, i32* %i31, align 4, !dbg !7340
  %152 = load i32* %i31, align 4, !dbg !7340
  %153 = icmp sle i32 %152, 2, !dbg !7340
  br i1 %153, label %bb34, label %bb37, !dbg !7340

bb37:                                             ; preds = %bb36
  %154 = load i8* %mode, align 1, !dbg !7341
  %155 = icmp sle i8 %154, 96, !dbg !7341
  br i1 %155, label %bb38, label %bb39, !dbg !7341

bb38:                                             ; preds = %bb37
  %156 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7342
  %157 = load i8* %156, align 1, !dbg !7342
  %158 = sub i8 %157, 32, !dbg !7342
  %159 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7342
  store i8 %158, i8* %159, align 1, !dbg !7342
  %160 = load i8* %mode, align 1, !dbg !7343
  %161 = add i8 %160, 32, !dbg !7343
  store i8 %161, i8* %mode, align 1, !dbg !7343
  br label %bb39, !dbg !7343

bb39:                                             ; preds = %bb38, %bb37
  %162 = load i8* %mode, align 1, !dbg !7344
  store i8 %162, i8* %o_mode, align 1, !dbg !7344
  %163 = load i8* %mode, align 1, !dbg !7345
  %164 = icmp eq i8 %163, 103, !dbg !7345
  br i1 %164, label %bb40, label %bb42, !dbg !7345

bb40:                                             ; preds = %bb39
  %165 = load i32* %preci, align 4, !dbg !7345
  %166 = icmp sgt i32 %165, 0, !dbg !7345
  br i1 %166, label %bb41, label %bb42, !dbg !7345

bb41:                                             ; preds = %bb40
  %167 = load i32* %preci, align 4, !dbg !7346
  %168 = sub nsw i32 %167, 1, !dbg !7346
  store i32 %168, i32* %preci, align 4, !dbg !7346
  br label %bb42, !dbg !7346

bb42:                                             ; preds = %bb41, %bb40, %bb39
  %169 = load i32* %preci, align 4, !dbg !7347
  store i32 %169, i32* %round, align 4, !dbg !7347
  %170 = load i8* %mode, align 1, !dbg !7348
  %171 = icmp eq i8 %170, 102, !dbg !7348
  br i1 %171, label %bb43, label %bb46, !dbg !7348

bb43:                                             ; preds = %bb42
  %172 = load i32* %round, align 4, !dbg !7349
  %173 = load i32* %exp, align 4, !dbg !7349
  %174 = add nsw i32 %172, %173, !dbg !7349
  store i32 %174, i32* %round, align 4, !dbg !7349
  %175 = load i32* %round, align 4, !dbg !7350
  %176 = icmp slt i32 %175, -1, !dbg !7350
  br i1 %176, label %bb44, label %bb46, !dbg !7350

bb44:                                             ; preds = %bb43
  %buf45 = bitcast [30 x i8]* %buf to i8*, !dbg !7351
  %177 = call i8* @memset(i8* %buf45, i32 48, i64 21) nounwind, !dbg !7351
  store i32 -1, i32* %exp, align 4, !dbg !7352
  store i32 -1, i32* %round, align 4, !dbg !7353
  br label %bb46, !dbg !7353

bb46:                                             ; preds = %bb44, %bb43, %bb42
  %buf47 = bitcast [30 x i8]* %buf to i8*, !dbg !7354
  store i8* %buf47, i8** %s, align 8, !dbg !7354
  %178 = load i8** %s, align 8, !dbg !7355
  store i8 0, i8* %178, align 1, !dbg !7355
  %179 = load i8** %s, align 8, !dbg !7355
  %180 = getelementptr inbounds i8* %179, i64 1, !dbg !7355
  store i8* %180, i8** %s, align 8, !dbg !7355
  %181 = load i8** %s, align 8, !dbg !7356
  store i8 48, i8* %181, align 1, !dbg !7356
  store i32 0, i32* %i48, align 4, !dbg !7357
  %182 = load i8** %s, align 8, !dbg !7359
  %183 = getelementptr inbounds i8* %182, i64 21, !dbg !7359
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7359
  store i8* %184, i8** %e, align 8, !dbg !7359
  %185 = load i32* %round, align 4, !dbg !7360
  %186 = icmp sle i32 %185, 20, !dbg !7360
  br i1 %186, label %bb49, label %bb51, !dbg !7360

bb49:                                             ; preds = %bb46
  %187 = load i8** %s, align 8, !dbg !7361
  %188 = load i32* %round, align 4, !dbg !7361
  %189 = sext i32 %188 to i64, !dbg !7361
  %190 = getelementptr inbounds i8* %187, i64 %189, !dbg !7361
  %191 = getelementptr inbounds i8* %190, i64 2, !dbg !7361
  store i8* %191, i8** %e, align 8, !dbg !7361
  %192 = load i8** %e, align 8, !dbg !7362
  %193 = load i8* %192, align 1, !dbg !7362
  %194 = icmp sgt i8 %193, 52, !dbg !7362
  br i1 %194, label %bb50, label %bb51, !dbg !7362

bb50:                                             ; preds = %bb49
  store i32 1, i32* %i48, align 4, !dbg !7363
  br label %bb51, !dbg !7363

bb51:                                             ; preds = %bb52, %bb51, %bb50, %bb49, %bb46
  %195 = load i8** %e, align 8, !dbg !7364
  %196 = getelementptr inbounds i8* %195, i64 -1, !dbg !7364
  store i8* %196, i8** %e, align 8, !dbg !7364
  %197 = load i8** %e, align 8, !dbg !7364
  store i8* %197, i8** %e.6, align 8, !dbg !7364
  %198 = load i8** %e.6, align 8, !dbg !7364
  %199 = load i8* %198, align 1, !dbg !7364
  %200 = load i32* %i48, align 4, !dbg !7364
  %201 = trunc i32 %200 to i8, !dbg !7364
  %202 = add i8 %199, %201, !dbg !7364
  %203 = load i8** %e.6, align 8, !dbg !7364
  store i8 %202, i8* %203, align 1, !dbg !7364
  %204 = load i8** %e, align 8, !dbg !7365
  %205 = load i8* %204, align 1, !dbg !7365
  %206 = icmp eq i8 %205, 48, !dbg !7365
  br i1 %206, label %bb51, label %bb52, !dbg !7365

bb52:                                             ; preds = %bb51
  %207 = load i8** %e, align 8, !dbg !7365
  %208 = load i8* %207, align 1, !dbg !7365
  %209 = icmp sgt i8 %208, 57, !dbg !7365
  br i1 %209, label %bb51, label %bb53, !dbg !7365

bb53:                                             ; preds = %bb52
  %210 = load i32* %exp, align 4, !dbg !7366
  store i32 %210, i32* %o_exp, align 4, !dbg !7366
  %211 = load i8** %e, align 8, !dbg !7367
  %212 = load i8** %s, align 8, !dbg !7367
  %213 = icmp ule i8* %211, %212, !dbg !7367
  br i1 %213, label %bb54, label %bb55, !dbg !7367

bb54:                                             ; preds = %bb53
  %214 = load i32* %o_exp, align 4, !dbg !7368
  %215 = add nsw i32 %214, 1, !dbg !7368
  store i32 %215, i32* %o_exp, align 4, !dbg !7368
  %216 = load i8** %s, align 8, !dbg !7369
  store i8* %216, i8** %e, align 8, !dbg !7369
  br label %bb56, !dbg !7369

bb55:                                             ; preds = %bb53
  %217 = load i8** %s, align 8, !dbg !7370
  %218 = getelementptr inbounds i8* %217, i64 1, !dbg !7370
  store i8* %218, i8** %s, align 8, !dbg !7370
  br label %bb56, !dbg !7370

bb56:                                             ; preds = %bb55, %bb54
  %219 = load i8** %e, align 8, !dbg !7371
  %220 = getelementptr inbounds i8* %219, i64 1, !dbg !7371
  store i8* %220, i8** %e, align 8, !dbg !7371
  %221 = load i8** %e, align 8, !dbg !7371
  store i8 0, i8* %221, align 1, !dbg !7371
  %222 = load i8* %mode, align 1, !dbg !7372
  %223 = icmp eq i8 %222, 103, !dbg !7372
  br i1 %223, label %bb57, label %bb60, !dbg !7372

bb57:                                             ; preds = %bb56
  %224 = load i32* %o_exp, align 4, !dbg !7372
  %225 = icmp sge i32 %224, -4, !dbg !7372
  br i1 %225, label %bb58, label %bb60, !dbg !7372

bb58:                                             ; preds = %bb57
  %226 = load i32* %o_exp, align 4, !dbg !7372
  %227 = load i32* %round, align 4, !dbg !7372
  %228 = icmp sle i32 %226, %227, !dbg !7372
  br i1 %228, label %bb59, label %bb60, !dbg !7372

bb59:                                             ; preds = %bb58
  store i8 102, i8* %mode, align 1, !dbg !7373
  %229 = load i32* %round, align 4, !dbg !7374
  %230 = load i32* %o_exp, align 4, !dbg !7374
  %231 = sub nsw i32 %229, %230, !dbg !7374
  store i32 %231, i32* %preci, align 4, !dbg !7374
  br label %bb60, !dbg !7374

bb60:                                             ; preds = %bb59, %bb58, %bb57, %bb56
  %232 = load i32* %o_exp, align 4, !dbg !7375
  store i32 %232, i32* %exp, align 4, !dbg !7375
  %233 = load i8* %mode, align 1, !dbg !7376
  %234 = icmp ne i8 %233, 102, !dbg !7376
  br i1 %234, label %bb61, label %bb62, !dbg !7376

bb61:                                             ; preds = %bb60
  store i32 0, i32* %o_exp, align 4, !dbg !7377
  br label %bb62, !dbg !7377

bb62:                                             ; preds = %bb61, %bb60
  %235 = load i32* %o_exp, align 4, !dbg !7378
  %236 = icmp slt i32 %235, 0, !dbg !7378
  br i1 %236, label %bb63, label %bb64, !dbg !7378

bb63:                                             ; preds = %bb62
  %237 = load i8** %s, align 8, !dbg !7379
  %238 = getelementptr inbounds i8* %237, i64 -1, !dbg !7379
  store i8* %238, i8** %s, align 8, !dbg !7379
  %239 = load i8** %s, align 8, !dbg !7379
  store i8 48, i8* %239, align 1, !dbg !7379
  br label %bb64, !dbg !7379

bb64:                                             ; preds = %bb63, %bb62
  %240 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 3, !dbg !7380
  store i64 176, i64* %240, align 8, !dbg !7380
  %241 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 4, !dbg !7381
  store i64 1, i64* %241, align 8, !dbg !7381
  %sign_str65 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7382
  %242 = getelementptr inbounds i8* %sign_str65, i64 4, !dbg !7382
  %243 = ptrtoint i8* %242 to i64, !dbg !7382
  %244 = getelementptr inbounds [24 x i64]* %pc_fwi, i64 0, i64 5, !dbg !7382
  store i64 %243, i64* %244, align 8, !dbg !7382
  %245 = load i8** %s, align 8, !dbg !7383
  %246 = load i8* %245, align 1, !dbg !7383
  %247 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 4, !dbg !7383
  store i8 %246, i8* %247, align 1, !dbg !7383
  %248 = load i8** %s, align 8, !dbg !7383
  %249 = getelementptr inbounds i8* %248, i64 1, !dbg !7383
  store i8* %249, i8** %s, align 8, !dbg !7383
  %250 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 5, !dbg !7384
  store i8 0, i8* %250, align 1, !dbg !7384
  %pc_fwi66 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7385
  %251 = getelementptr inbounds i64* %pc_fwi66, i64 6, !dbg !7385
  store i64* %251, i64** %ppc, align 8, !dbg !7385
  %252 = load i8** %e, align 8, !dbg !7386
  %253 = ptrtoint i8* %252 to i64, !dbg !7386
  %254 = trunc i64 %253 to i32, !dbg !7386
  %255 = load i8** %s, align 8, !dbg !7386
  %256 = ptrtoint i8* %255 to i64, !dbg !7386
  %257 = trunc i64 %256 to i32, !dbg !7386
  %258 = sub i32 %254, %257, !dbg !7386
  store i32 %258, i32* %i67, align 4, !dbg !7386
  %259 = load i32* %o_exp, align 4, !dbg !7388
  %260 = icmp sge i32 %259, 0, !dbg !7388
  br i1 %260, label %bb68, label %bb75, !dbg !7388

bb68:                                             ; preds = %bb64
  %261 = load i64** %ppc, align 8, !dbg !7389
  %262 = getelementptr inbounds i64* %261, i64 0, !dbg !7389
  store i64 112, i64* %262, align 1, !dbg !7389
  %263 = load i8** %s, align 8, !dbg !7390
  %264 = ptrtoint i8* %263 to i64, !dbg !7390
  %265 = load i64** %ppc, align 8, !dbg !7390
  %266 = getelementptr inbounds i64* %265, i64 2, !dbg !7390
  store i64 %264, i64* %266, align 1, !dbg !7390
  %267 = load i32* %o_exp, align 4, !dbg !7391
  %268 = load i32* %i67, align 4, !dbg !7391
  %269 = icmp sge i32 %267, %268, !dbg !7391
  br i1 %269, label %bb69, label %bb72, !dbg !7391

bb69:                                             ; preds = %bb68
  %270 = load i32* %i67, align 4, !dbg !7392
  %271 = sext i32 %270 to i64, !dbg !7392
  %272 = load i64** %ppc, align 8, !dbg !7392
  %273 = getelementptr inbounds i64* %272, i64 1, !dbg !7392
  store i64 %271, i64* %273, align 1, !dbg !7392
  %274 = load i64** %ppc, align 8, !dbg !7393
  %275 = getelementptr inbounds i64* %274, i64 3, !dbg !7393
  store i64* %275, i64** %ppc, align 8, !dbg !7393
  %276 = load i32* %o_exp, align 4, !dbg !7394
  %277 = load i32* %i67, align 4, !dbg !7394
  %278 = sub nsw i32 %276, %277, !dbg !7394
  store i32 %278, i32* %o_exp, align 4, !dbg !7394
  store i32 0, i32* %i67, align 4, !dbg !7395
  %279 = load i32* %o_exp, align 4, !dbg !7396
  %280 = icmp sgt i32 %279, 0, !dbg !7396
  br i1 %280, label %bb70, label %bb74, !dbg !7396

bb70:                                             ; preds = %bb69
  %281 = load i64** %ppc, align 8, !dbg !7397
  %282 = getelementptr inbounds i64* %281, i64 0, !dbg !7397
  store i64 176, i64* %282, align 1, !dbg !7397
  %283 = load i32* %o_exp, align 4, !dbg !7398
  %284 = sext i32 %283 to i64, !dbg !7398
  %285 = load i64** %ppc, align 8, !dbg !7398
  %286 = getelementptr inbounds i64* %285, i64 1, !dbg !7398
  store i64 %284, i64* %286, align 1, !dbg !7398
  %287 = load i64** %ppc, align 8, !dbg !7399
  %288 = getelementptr inbounds i64* %287, i64 2, !dbg !7399
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %288, align 1, !dbg !7399
  %289 = load i64** %ppc, align 8, !dbg !7400
  %290 = getelementptr inbounds i64* %289, i64 3, !dbg !7400
  store i64* %290, i64** %ppc, align 8, !dbg !7400
  br label %bb74, !dbg !7400

bb72:                                             ; preds = %bb68
  %291 = load i32* %o_exp, align 4, !dbg !7401
  %292 = icmp sgt i32 %291, 0, !dbg !7401
  br i1 %292, label %bb73, label %bb74, !dbg !7401

bb73:                                             ; preds = %bb72
  %293 = load i32* %o_exp, align 4, !dbg !7402
  %294 = sext i32 %293 to i64, !dbg !7402
  %295 = load i64** %ppc, align 8, !dbg !7402
  %296 = getelementptr inbounds i64* %295, i64 1, !dbg !7402
  store i64 %294, i64* %296, align 1, !dbg !7402
  %297 = load i64** %ppc, align 8, !dbg !7403
  %298 = getelementptr inbounds i64* %297, i64 3, !dbg !7403
  store i64* %298, i64** %ppc, align 8, !dbg !7403
  %299 = load i8** %s, align 8, !dbg !7404
  %300 = load i32* %o_exp, align 4, !dbg !7404
  %301 = sext i32 %300 to i64, !dbg !7404
  %302 = getelementptr inbounds i8* %299, i64 %301, !dbg !7404
  store i8* %302, i8** %s, align 8, !dbg !7404
  %303 = load i32* %i67, align 4, !dbg !7405
  %304 = load i32* %o_exp, align 4, !dbg !7405
  %305 = sub nsw i32 %303, %304, !dbg !7405
  store i32 %305, i32* %i67, align 4, !dbg !7405
  br label %bb74, !dbg !7405

bb74:                                             ; preds = %bb69, %bb70, %bb73, %bb72
  store i32 -1, i32* %o_exp, align 4, !dbg !7406
  br label %bb75, !dbg !7406

bb75:                                             ; preds = %bb74, %bb64
  %306 = load %struct.printf_info** %info_addr, align 8, !dbg !7407
  %307 = getelementptr inbounds %struct.printf_info* %306, i32 0, i32 3, !dbg !7407
  %308 = load i32* %307, align 4, !dbg !7407
  %int_cast_to_i649 = zext i32 27 to i64
  %309 = icmp ult i64 %int_cast_to_i649, 32
  br i1 %309, label %klee_overshift_check.exit31, label %bb.i30

bb.i30:                                           ; preds = %bb75
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit31:                      ; preds = %bb75
  %310 = shl i32 %308, 27, !dbg !7407
  %int_cast_to_i6410 = zext i32 31 to i64
  %311 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %311, label %klee_overshift_check.exit33, label %bb.i32

bb.i32:                                           ; preds = %klee_overshift_check.exit31
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit33:                      ; preds = %klee_overshift_check.exit31
  %312 = lshr i32 %310, 31, !dbg !7407
  %313 = trunc i32 %312 to i1, !dbg !7407
  %314 = icmp ne i1 %313, false, !dbg !7407
  br i1 %314, label %bb79, label %bb76, !dbg !7407

bb76:                                             ; preds = %klee_overshift_check.exit33
  %315 = load i32* %i67, align 4, !dbg !7407
  %316 = icmp ne i32 %315, 0, !dbg !7407
  br i1 %316, label %bb79, label %bb77, !dbg !7407

bb77:                                             ; preds = %bb76
  %317 = load i8* %o_mode, align 1, !dbg !7407
  %318 = icmp eq i8 %317, 103, !dbg !7407
  br i1 %318, label %bb80, label %bb78, !dbg !7407

bb78:                                             ; preds = %bb77
  %319 = load i32* %preci, align 4, !dbg !7407
  %320 = icmp sgt i32 %319, 0, !dbg !7407
  br i1 %320, label %bb79, label %bb80, !dbg !7407

bb79:                                             ; preds = %bb78, %bb76, %klee_overshift_check.exit33
  %321 = load i64** %ppc, align 8, !dbg !7408
  %322 = getelementptr inbounds i64* %321, i64 0, !dbg !7408
  store i64 112, i64* %322, align 1, !dbg !7408
  %323 = load i64** %ppc, align 8, !dbg !7409
  %324 = getelementptr inbounds i64* %323, i64 1, !dbg !7409
  store i64 1, i64* %324, align 1, !dbg !7409
  %325 = load i64** %ppc, align 8, !dbg !7410
  %326 = getelementptr inbounds i64* %325, i64 2, !dbg !7410
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 16) to i64), i64* %326, align 1, !dbg !7410
  %327 = load i64** %ppc, align 8, !dbg !7411
  %328 = getelementptr inbounds i64* %327, i64 3, !dbg !7411
  store i64* %328, i64** %ppc, align 8, !dbg !7411
  br label %bb80, !dbg !7411

bb80:                                             ; preds = %bb79, %bb78, %bb77
  %329 = load i32* %o_exp, align 4, !dbg !7412
  %330 = add nsw i32 %329, 1, !dbg !7412
  store i32 %330, i32* %o_exp, align 4, !dbg !7412
  %331 = load i32* %o_exp, align 4, !dbg !7412
  %332 = icmp slt i32 %331, 0, !dbg !7412
  br i1 %332, label %bb81, label %bb82, !dbg !7412

bb81:                                             ; preds = %bb80
  %333 = load i64** %ppc, align 8, !dbg !7413
  %334 = getelementptr inbounds i64* %333, i64 0, !dbg !7413
  store i64 176, i64* %334, align 1, !dbg !7413
  %335 = load i32* %o_exp, align 4, !dbg !7414
  %336 = sub nsw i32 0, %335, !dbg !7414
  %337 = sext i32 %336 to i64, !dbg !7414
  %338 = load i64** %ppc, align 8, !dbg !7414
  %339 = getelementptr inbounds i64* %338, i64 1, !dbg !7414
  store i64 %337, i64* %339, align 1, !dbg !7414
  %340 = load i64** %ppc, align 8, !dbg !7415
  %341 = getelementptr inbounds i64* %340, i64 2, !dbg !7415
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %341, align 1, !dbg !7415
  %342 = load i64** %ppc, align 8, !dbg !7416
  %343 = getelementptr inbounds i64* %342, i64 3, !dbg !7416
  store i64* %343, i64** %ppc, align 8, !dbg !7416
  br label %bb82, !dbg !7416

bb82:                                             ; preds = %bb81, %bb80
  %344 = load i32* %i67, align 4, !dbg !7417
  %345 = icmp ne i32 %344, 0, !dbg !7417
  br i1 %345, label %bb83, label %bb84, !dbg !7417

bb83:                                             ; preds = %bb82
  %346 = load i64** %ppc, align 8, !dbg !7418
  %347 = getelementptr inbounds i64* %346, i64 0, !dbg !7418
  store i64 112, i64* %347, align 1, !dbg !7418
  %348 = load i32* %i67, align 4, !dbg !7419
  %349 = sext i32 %348 to i64, !dbg !7419
  %350 = load i64** %ppc, align 8, !dbg !7419
  %351 = getelementptr inbounds i64* %350, i64 1, !dbg !7419
  store i64 %349, i64* %351, align 1, !dbg !7419
  %352 = load i8** %s, align 8, !dbg !7420
  %353 = ptrtoint i8* %352 to i64, !dbg !7420
  %354 = load i64** %ppc, align 8, !dbg !7420
  %355 = getelementptr inbounds i64* %354, i64 2, !dbg !7420
  store i64 %353, i64* %355, align 1, !dbg !7420
  %356 = load i64** %ppc, align 8, !dbg !7421
  %357 = getelementptr inbounds i64* %356, i64 3, !dbg !7421
  store i64* %357, i64** %ppc, align 8, !dbg !7421
  br label %bb84, !dbg !7421

bb84:                                             ; preds = %bb83, %bb82
  %358 = load i8* %o_mode, align 1, !dbg !7422
  %359 = icmp ne i8 %358, 103, !dbg !7422
  br i1 %359, label %bb86, label %bb85, !dbg !7422

bb85:                                             ; preds = %bb84
  %360 = load %struct.printf_info** %info_addr, align 8, !dbg !7422
  %361 = getelementptr inbounds %struct.printf_info* %360, i32 0, i32 3, !dbg !7422
  %362 = load i32* %361, align 4, !dbg !7422
  %int_cast_to_i6411 = zext i32 27 to i64
  %363 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %363, label %klee_overshift_check.exit35, label %bb.i34

bb.i34:                                           ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit35:                      ; preds = %bb85
  %364 = shl i32 %362, 27, !dbg !7422
  %int_cast_to_i6412 = zext i32 31 to i64
  %365 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %365, label %klee_overshift_check.exit37, label %bb.i36

bb.i36:                                           ; preds = %klee_overshift_check.exit35
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit37:                      ; preds = %klee_overshift_check.exit35
  %366 = lshr i32 %364, 31, !dbg !7422
  %367 = trunc i32 %366 to i1, !dbg !7422
  %368 = icmp ne i1 %367, false, !dbg !7422
  br i1 %368, label %bb86, label %bb88, !dbg !7422

bb86:                                             ; preds = %klee_overshift_check.exit37, %bb84
  %369 = load i32* %i67, align 4, !dbg !7423
  %370 = load i32* %o_exp, align 4, !dbg !7423
  %371 = sub nsw i32 %369, %370, !dbg !7423
  store i32 %371, i32* %i67, align 4, !dbg !7423
  %372 = load i32* %i67, align 4, !dbg !7424
  %373 = load i32* %preci, align 4, !dbg !7424
  %374 = icmp slt i32 %372, %373, !dbg !7424
  br i1 %374, label %bb87, label %bb88, !dbg !7424

bb87:                                             ; preds = %bb86
  %375 = load i32* %preci, align 4, !dbg !7425
  %376 = load i32* %i67, align 4, !dbg !7425
  %377 = sub nsw i32 %375, %376, !dbg !7425
  store i32 %377, i32* %i67, align 4, !dbg !7425
  %378 = load i64** %ppc, align 8, !dbg !7426
  %379 = getelementptr inbounds i64* %378, i64 0, !dbg !7426
  store i64 176, i64* %379, align 1, !dbg !7426
  %380 = load i32* %i67, align 4, !dbg !7427
  %381 = sext i32 %380 to i64, !dbg !7427
  %382 = load i64** %ppc, align 8, !dbg !7427
  %383 = getelementptr inbounds i64* %382, i64 1, !dbg !7427
  store i64 %381, i64* %383, align 1, !dbg !7427
  %384 = load i64** %ppc, align 8, !dbg !7428
  %385 = getelementptr inbounds i64* %384, i64 2, !dbg !7428
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %385, align 1, !dbg !7428
  %386 = load i64** %ppc, align 8, !dbg !7429
  %387 = getelementptr inbounds i64* %386, i64 3, !dbg !7429
  store i64* %387, i64** %ppc, align 8, !dbg !7429
  br label %bb88, !dbg !7429

bb88:                                             ; preds = %bb87, %bb86, %klee_overshift_check.exit37
  %388 = load i8* %mode, align 1, !dbg !7430
  %389 = icmp ne i8 %388, 102, !dbg !7430
  br i1 %389, label %bb89, label %EXIT_SPECIAL, !dbg !7430

bb89:                                             ; preds = %bb88
  %exp_buf91 = bitcast [16 x i8]* %exp_buf to i8*, !dbg !7431
  %390 = getelementptr inbounds i8* %exp_buf91, i64 16, !dbg !7431
  store i8* %390, i8** %p, align 8, !dbg !7431
  %391 = getelementptr inbounds [16 x i8]* %exp_buf, i64 0, i64 0, !dbg !7433
  %392 = load i8* %391, align 1, !dbg !7433
  store i8 %392, i8* %exp_char, align 1, !dbg !7433
  store i8 43, i8* %exp_sign, align 1, !dbg !7434
  %393 = load i32* %exp, align 4, !dbg !7435
  %394 = icmp slt i32 %393, 0, !dbg !7435
  br i1 %394, label %bb92, label %bb93, !dbg !7435

bb92:                                             ; preds = %bb89
  store i8 45, i8* %exp_sign, align 1, !dbg !7436
  %395 = load i32* %exp, align 4, !dbg !7437
  %396 = sub nsw i32 0, %395, !dbg !7437
  store i32 %396, i32* %exp, align 4, !dbg !7437
  br label %bb93, !dbg !7437

bb93:                                             ; preds = %bb92, %bb89
  %397 = load i8** %p, align 8, !dbg !7438
  %398 = getelementptr inbounds i8* %397, i64 -1, !dbg !7438
  store i8* %398, i8** %p, align 8, !dbg !7438
  %399 = load i8** %p, align 8, !dbg !7438
  store i8 0, i8* %399, align 1, !dbg !7438
  store i32 2, i32* %j90, align 4, !dbg !7439
  br label %bb94, !dbg !7439

bb94:                                             ; preds = %bb95, %klee_div_zero_check.exit20, %bb93
  %400 = load i8** %p, align 8, !dbg !7440
  %401 = getelementptr inbounds i8* %400, i64 -1, !dbg !7440
  store i8* %401, i8** %p, align 8, !dbg !7440
  %402 = load i32* %exp, align 4, !dbg !7440
  %int_cast_to_i642 = zext i32 10 to i64
  %403 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %404 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %404, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %bb94
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %bb94
  call void @klee_disable_symbex() nounwind
  %405 = srem i32 %402, 10, !dbg !7440
  %406 = trunc i32 %405 to i8, !dbg !7440
  %407 = add i8 %406, 48, !dbg !7440
  %408 = load i8** %p, align 8, !dbg !7440
  store i8 %407, i8* %408, align 1, !dbg !7440
  %409 = load i32* %exp, align 4, !dbg !7441
  %int_cast_to_i643 = zext i32 10 to i64
  %410 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %411 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %411, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %412 = sdiv i32 %409, 10, !dbg !7441
  store i32 %412, i32* %exp, align 4, !dbg !7441
  %413 = load i32* %j90, align 4, !dbg !7442
  %414 = add nsw i32 %413, 1, !dbg !7442
  store i32 %414, i32* %j90, align 4, !dbg !7442
  %415 = load i32* %j90, align 4, !dbg !7442
  %416 = icmp sle i32 %415, 3, !dbg !7442
  br i1 %416, label %bb94, label %bb95, !dbg !7442

bb95:                                             ; preds = %klee_div_zero_check.exit20
  %417 = load i32* %exp, align 4, !dbg !7442
  %418 = icmp ne i32 %417, 0, !dbg !7442
  br i1 %418, label %bb94, label %bb96, !dbg !7442

bb96:                                             ; preds = %bb95
  %419 = load i8** %p, align 8, !dbg !7443
  %420 = getelementptr inbounds i8* %419, i64 -1, !dbg !7443
  store i8* %420, i8** %p, align 8, !dbg !7443
  %421 = load i8** %p, align 8, !dbg !7443
  %422 = load i8* %exp_sign, align 1, !dbg !7443
  store i8 %422, i8* %421, align 1, !dbg !7443
  %423 = load i8** %p, align 8, !dbg !7444
  %424 = getelementptr inbounds i8* %423, i64 -1, !dbg !7444
  store i8* %424, i8** %p, align 8, !dbg !7444
  %425 = load i8** %p, align 8, !dbg !7444
  %426 = load i8* %exp_char, align 1, !dbg !7444
  store i8 %426, i8* %425, align 1, !dbg !7444
  %427 = load i64** %ppc, align 8, !dbg !7445
  %428 = getelementptr inbounds i64* %427, i64 0, !dbg !7445
  store i64 112, i64* %428, align 1, !dbg !7445
  %429 = load i32* %j90, align 4, !dbg !7446
  %430 = sext i32 %429 to i64, !dbg !7446
  %431 = load i64** %ppc, align 8, !dbg !7446
  %432 = getelementptr inbounds i64* %431, i64 1, !dbg !7446
  store i64 %430, i64* %432, align 1, !dbg !7446
  %433 = load i8** %p, align 8, !dbg !7447
  %434 = ptrtoint i8* %433 to i64, !dbg !7447
  %435 = load i64** %ppc, align 8, !dbg !7447
  %436 = getelementptr inbounds i64* %435, i64 2, !dbg !7447
  store i64 %434, i64* %436, align 1, !dbg !7447
  %437 = load i64** %ppc, align 8, !dbg !7448
  %438 = getelementptr inbounds i64* %437, i64 3, !dbg !7448
  store i64* %438, i64** %ppc, align 8, !dbg !7448
  br label %EXIT_SPECIAL, !dbg !7449

EXIT_SPECIAL:                                     ; preds = %bb96, %bb88, %bb19
  %439 = load i64** %ppc, align 8, !dbg !7450
  store i64* %439, i64** %ppc_last, align 8, !dbg !7450
  %pc_fwi98 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7452
  %440 = getelementptr inbounds i64* %pc_fwi98, i64 4, !dbg !7452
  store i64* %440, i64** %ppc, align 8, !dbg !7452
  br label %bb99, !dbg !7452

bb99:                                             ; preds = %bb99, %EXIT_SPECIAL
  %441 = load i32* %width, align 4, !dbg !7453
  %442 = load i64** %ppc, align 8, !dbg !7453
  %443 = load i64* %442, align 8, !dbg !7453
  %444 = trunc i64 %443 to i32, !dbg !7453
  %445 = sub i32 %441, %444, !dbg !7453
  store i32 %445, i32* %width, align 4, !dbg !7453
  %446 = load i64** %ppc, align 8, !dbg !7454
  %447 = getelementptr inbounds i64* %446, i64 3, !dbg !7454
  store i64* %447, i64** %ppc, align 8, !dbg !7454
  %448 = load i64** %ppc, align 8, !dbg !7455
  %449 = load i64** %ppc_last, align 8, !dbg !7455
  %450 = icmp ult i64* %448, %449, !dbg !7455
  br i1 %450, label %bb99, label %bb100, !dbg !7455

bb100:                                            ; preds = %bb99
  %pc_fwi101 = bitcast [24 x i64]* %pc_fwi to i64*, !dbg !7456
  store i64* %pc_fwi101, i64** %ppc, align 8, !dbg !7456
  %451 = load i64** %ppc, align 8, !dbg !7457
  %452 = getelementptr inbounds i64* %451, i64 0, !dbg !7457
  store i64 160, i64* %452, align 1, !dbg !7457
  %453 = getelementptr inbounds [6 x i8]* %sign_str, i64 0, i64 0, !dbg !7458
  %454 = load i8* %453, align 1, !dbg !7458
  %455 = icmp ne i8 %454, 0, !dbg !7458
  %456 = zext i1 %455 to i32, !dbg !7458
  store i32 %456, i32* %i97, align 4, !dbg !7458
  %457 = load i32* %i97, align 4, !dbg !7458
  %458 = sext i32 %457 to i64, !dbg !7458
  %459 = load i64** %ppc, align 8, !dbg !7458
  %460 = getelementptr inbounds i64* %459, i64 1, !dbg !7458
  store i64 %458, i64* %460, align 1, !dbg !7458
  %sign_str102 = bitcast [6 x i8]* %sign_str to i8*, !dbg !7459
  %sign_str102103 = ptrtoint i8* %sign_str102 to i64, !dbg !7459
  %461 = load i64** %ppc, align 8, !dbg !7459
  %462 = getelementptr inbounds i64* %461, i64 2, !dbg !7459
  store i64 %sign_str102103, i64* %462, align 1, !dbg !7459
  %463 = load i32* %width, align 4, !dbg !7460
  %464 = load i32* %i97, align 4, !dbg !7460
  %465 = sub nsw i32 %463, %464, !dbg !7460
  store i32 %465, i32* %width, align 4, !dbg !7460
  %466 = load i32* %width, align 4, !dbg !7460
  %467 = icmp sgt i32 %466, 0, !dbg !7460
  br i1 %467, label %bb105, label %bb110, !dbg !7460

bb105:                                            ; preds = %bb100
  %468 = load %struct.printf_info** %info_addr, align 8, !dbg !7461
  %469 = getelementptr inbounds %struct.printf_info* %468, i32 0, i32 3, !dbg !7461
  %470 = load i32* %469, align 4, !dbg !7461
  %int_cast_to_i6413 = zext i32 28 to i64
  %471 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %471, label %klee_overshift_check.exit39, label %bb.i38

bb.i38:                                           ; preds = %bb105
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit39:                      ; preds = %bb105
  %472 = shl i32 %470, 28, !dbg !7461
  %int_cast_to_i6414 = zext i32 31 to i64
  %473 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %473, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_overshift_check.exit39
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_overshift_check.exit39
  %474 = lshr i32 %472, 31, !dbg !7461
  %475 = trunc i32 %474 to i1, !dbg !7461
  %476 = icmp ne i1 %475, false, !dbg !7461
  br i1 %476, label %bb106, label %bb107, !dbg !7461

bb106:                                            ; preds = %klee_overshift_check.exit41
  %477 = load i64** %ppc_last, align 8, !dbg !7462
  %478 = getelementptr inbounds i64* %477, i64 0, !dbg !7462
  store i64 160, i64* %478, align 1, !dbg !7462
  %479 = load i32* %width, align 4, !dbg !7463
  %480 = sext i32 %479 to i64, !dbg !7463
  %481 = load i64** %ppc_last, align 8, !dbg !7463
  %482 = getelementptr inbounds i64* %481, i64 1, !dbg !7463
  store i64 %480, i64* %482, align 1, !dbg !7463
  %483 = load i64** %ppc_last, align 8, !dbg !7464
  %484 = getelementptr inbounds i64* %483, i64 2, !dbg !7464
  store i64 ptrtoint (i8* getelementptr inbounds ([20 x i8]* @fmt, i64 0, i64 3) to i64), i64* %484, align 1, !dbg !7464
  %485 = load i64** %ppc_last, align 8, !dbg !7465
  %486 = getelementptr inbounds i64* %485, i64 3, !dbg !7465
  store i64* %486, i64** %ppc_last, align 8, !dbg !7465
  br label %bb110, !dbg !7465

bb107:                                            ; preds = %klee_overshift_check.exit41
  %487 = load %struct.printf_info** %info_addr, align 8, !dbg !7466
  %488 = getelementptr inbounds %struct.printf_info* %487, i32 0, i32 4, !dbg !7466
  %489 = load i32* %488, align 4, !dbg !7466
  %490 = icmp eq i32 %489, 48, !dbg !7466
  %491 = load i64** %ppc, align 8, !dbg !7467
  br i1 %490, label %bb108, label %bb109, !dbg !7466

bb108:                                            ; preds = %bb107
  %492 = getelementptr inbounds i64* %491, i64 4, !dbg !7467
  %493 = load i64* %492, align 1, !dbg !7467
  %494 = load i32* %width, align 4, !dbg !7467
  %495 = sext i32 %494 to i64, !dbg !7467
  %496 = add nsw i64 %493, %495, !dbg !7467
  %497 = load i64** %ppc, align 8, !dbg !7467
  %498 = getelementptr inbounds i64* %497, i64 4, !dbg !7467
  store i64 %496, i64* %498, align 1, !dbg !7467
  br label %bb110, !dbg !7467

bb109:                                            ; preds = %bb107
  %499 = getelementptr inbounds i64* %491, i64 1, !dbg !7468
  %500 = load i64* %499, align 1, !dbg !7468
  %501 = load i32* %width, align 4, !dbg !7468
  %502 = sext i32 %501 to i64, !dbg !7468
  %503 = add nsw i64 %500, %502, !dbg !7468
  %504 = load i64** %ppc, align 8, !dbg !7468
  %505 = getelementptr inbounds i64* %504, i64 1, !dbg !7468
  store i64 %503, i64* %505, align 1, !dbg !7468
  br label %bb110, !dbg !7468

bb110:                                            ; preds = %bb109, %bb108, %bb106, %bb100
  store i32 0, i32* %cnt, align 4, !dbg !7469
  br label %bb111, !dbg !7469

bb111:                                            ; preds = %bb113, %bb110
  %506 = load i64** %ppc, align 8, !dbg !7470
  %507 = getelementptr inbounds i64* %506, i64 2, !dbg !7470
  %508 = load i64* %507, align 1, !dbg !7470
  %509 = load i64** %ppc, align 8, !dbg !7470
  %510 = getelementptr inbounds i64* %509, i64 1, !dbg !7470
  %511 = load i64* %510, align 1, !dbg !7470
  %512 = load i64** %ppc, align 8, !dbg !7470
  %513 = load i64* %512, align 8, !dbg !7470
  %514 = load i64 (%4*, i64, i64, i64)** %fp_outfunc_addr, align 8, !dbg !7470
  %515 = load %4** %fp_addr, align 8, !dbg !7470
  %516 = call i64 %514(%4* %515, i64 %513, i64 %511, i64 %508) nounwind, !dbg !7470
  %517 = load i64** %ppc, align 8, !dbg !7470
  %518 = getelementptr inbounds i64* %517, i64 1, !dbg !7470
  %519 = load i64* %518, align 1, !dbg !7470
  %520 = icmp ne i64 %516, %519, !dbg !7470
  br i1 %520, label %bb112, label %bb113, !dbg !7470

bb112:                                            ; preds = %bb111
  store i64 -1, i64* %0, align 8, !dbg !7471
  br label %bb115, !dbg !7471

bb113:                                            ; preds = %bb111
  %521 = load i64** %ppc, align 8, !dbg !7472
  %522 = getelementptr inbounds i64* %521, i64 1, !dbg !7472
  %523 = load i64* %522, align 1, !dbg !7472
  %524 = trunc i64 %523 to i32, !dbg !7472
  %525 = load i32* %cnt, align 4, !dbg !7472
  %526 = add i32 %524, %525, !dbg !7472
  store i32 %526, i32* %cnt, align 4, !dbg !7472
  %527 = load i64** %ppc, align 8, !dbg !7473
  %528 = getelementptr inbounds i64* %527, i64 3, !dbg !7473
  store i64* %528, i64** %ppc, align 8, !dbg !7473
  %529 = load i64** %ppc, align 8, !dbg !7474
  %530 = load i64** %ppc_last, align 8, !dbg !7474
  %531 = icmp ult i64* %529, %530, !dbg !7474
  br i1 %531, label %bb111, label %bb114, !dbg !7474

bb114:                                            ; preds = %bb113
  %532 = load i32* %cnt, align 4, !dbg !7475
  %533 = sext i32 %532 to i64, !dbg !7475
  store i64 %533, i64* %0, align 8, !dbg !7475
  br label %bb115, !dbg !7475

bb115:                                            ; preds = %bb114, %bb112
  %534 = load i64* %0, align 8, !dbg !7471
  store i64 %534, i64* %retval, align 8, !dbg !7471
  %retval116 = load i64* %retval, !dbg !7471
  ret i64 %retval116, !dbg !7471
}

define hidden i64 @_load_inttype(i32 %desttype, i8* %src, i32 %uflag) nounwind {
entry:
  %desttype_addr = alloca i32, align 4
  %src_addr = alloca i8*, align 8
  %uflag_addr = alloca i32, align 4
  %retval = alloca i64
  %0 = alloca i64
  %x = alloca i32
  %x14 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %desttype, i32* %desttype_addr
  store i8* %src, i8** %src_addr
  store i32 %uflag, i32* %uflag_addr
  %1 = load i32* %uflag_addr, align 4, !dbg !7476
  %2 = icmp sge i32 %1, 0, !dbg !7476
  %3 = load i32* %desttype_addr, align 4, !dbg !7478
  %4 = and i32 %3, 3072, !dbg !7478
  %5 = icmp ne i32 %4, 0, !dbg !7478
  %6 = load i8** %src_addr, align 8, !dbg !7479
  br i1 %2, label %bb, label %bb9, !dbg !7476

bb:                                               ; preds = %entry
  br i1 %5, label %bb1, label %bb4, !dbg !7478

bb1:                                              ; preds = %bb
  %7 = bitcast i8* %6 to i64*, !dbg !7479
  %8 = load i64* %7, align 8, !dbg !7479
  store i64 %8, i64* %0, align 8, !dbg !7479
  br label %bb19, !dbg !7479

bb4:                                              ; preds = %bb
  %9 = bitcast i8* %6 to i32*, !dbg !7480
  %10 = load i32* %9, align 4, !dbg !7480
  store i32 %10, i32* %x, align 4, !dbg !7480
  %11 = load i32* %desttype_addr, align 4, !dbg !7482
  %12 = icmp eq i32 %11, 256, !dbg !7482
  br i1 %12, label %bb5, label %bb6, !dbg !7482

bb5:                                              ; preds = %bb4
  %13 = load i32* %x, align 4, !dbg !7482
  %14 = trunc i32 %13 to i8, !dbg !7482
  %15 = zext i8 %14 to i32, !dbg !7482
  store i32 %15, i32* %x, align 4, !dbg !7482
  br label %bb6, !dbg !7482

bb6:                                              ; preds = %bb5, %bb4
  %16 = load i32* %desttype_addr, align 4, !dbg !7483
  %17 = icmp eq i32 %16, 512, !dbg !7483
  br i1 %17, label %bb7, label %bb8, !dbg !7483

bb7:                                              ; preds = %bb6
  %18 = load i32* %x, align 4, !dbg !7483
  %19 = trunc i32 %18 to i16, !dbg !7483
  %20 = zext i16 %19 to i32, !dbg !7483
  store i32 %20, i32* %x, align 4, !dbg !7483
  br label %bb8, !dbg !7483

bb8:                                              ; preds = %bb7, %bb6
  %21 = load i32* %x, align 4, !dbg !7484
  %22 = zext i32 %21 to i64, !dbg !7484
  store i64 %22, i64* %0, align 8, !dbg !7484
  br label %bb19, !dbg !7484

bb9:                                              ; preds = %entry
  br i1 %5, label %bb10, label %bb13, !dbg !7485

bb10:                                             ; preds = %bb9
  %23 = bitcast i8* %6 to i64*, !dbg !7486
  %24 = load i64* %23, align 8, !dbg !7486
  store i64 %24, i64* %0, align 8, !dbg !7486
  br label %bb19, !dbg !7486

bb13:                                             ; preds = %bb9
  %25 = bitcast i8* %6 to i32*, !dbg !7487
  %26 = load i32* %25, align 4, !dbg !7487
  store i32 %26, i32* %x14, align 4, !dbg !7487
  %27 = load i32* %desttype_addr, align 4, !dbg !7489
  %28 = icmp eq i32 %27, 256, !dbg !7489
  br i1 %28, label %bb15, label %bb16, !dbg !7489

bb15:                                             ; preds = %bb13
  %29 = load i32* %x14, align 4, !dbg !7489
  %30 = trunc i32 %29 to i8, !dbg !7489
  %31 = sext i8 %30 to i32, !dbg !7489
  store i32 %31, i32* %x14, align 4, !dbg !7489
  br label %bb16, !dbg !7489

bb16:                                             ; preds = %bb15, %bb13
  %32 = load i32* %desttype_addr, align 4, !dbg !7490
  %33 = icmp eq i32 %32, 512, !dbg !7490
  br i1 %33, label %bb17, label %bb18, !dbg !7490

bb17:                                             ; preds = %bb16
  %34 = load i32* %x14, align 4, !dbg !7490
  %35 = trunc i32 %34 to i16, !dbg !7490
  %36 = sext i16 %35 to i32, !dbg !7490
  store i32 %36, i32* %x14, align 4, !dbg !7490
  br label %bb18, !dbg !7490

bb18:                                             ; preds = %bb17, %bb16
  %37 = load i32* %x14, align 4, !dbg !7491
  %38 = sext i32 %37 to i64, !dbg !7491
  store i64 %38, i64* %0, align 8, !dbg !7491
  br label %bb19, !dbg !7491

bb19:                                             ; preds = %bb10, %bb1, %bb18, %bb8
  %39 = load i64* %0, align 8, !dbg !7479
  store i64 %39, i64* %retval, align 8, !dbg !7479
  %retval20 = load i64* %retval, !dbg !7479
  ret i64 %retval20, !dbg !7479
}

define hidden i32 @_ppfs_init(%struct.ppfs_t* %ppfs, i8* %fmt0) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %fmt0_addr = alloca i8*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %r = alloca i32
  %p = alloca i32*
  %fmt = alloca i8*
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i8* %fmt0, i8** %fmt0_addr
  %1 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7492
  %2 = bitcast %struct.ppfs_t* %1 to i8*, !dbg !7492
  %3 = call i8* @memset(i8* %2, i32 0, i64 256) nounwind, !dbg !7492
  %4 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7494
  %5 = getelementptr inbounds %struct.ppfs_t* %4, i32 0, i32 2, !dbg !7494
  %6 = load i32* %5, align 4, !dbg !7494
  %7 = sub nsw i32 %6, 1, !dbg !7494
  %8 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7494
  %9 = getelementptr inbounds %struct.ppfs_t* %8, i32 0, i32 2, !dbg !7494
  store i32 %7, i32* %9, align 4, !dbg !7494
  %10 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7495
  %11 = getelementptr inbounds %struct.ppfs_t* %10, i32 0, i32 0, !dbg !7495
  %12 = load i8** %fmt0_addr, align 8, !dbg !7495
  store i8* %12, i8** %11, align 16, !dbg !7495
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7496
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 6, !dbg !7496
  %15 = getelementptr inbounds [9 x i32]* %14, i64 0, i64 0, !dbg !7496
  store i32* %15, i32** %p, align 8, !dbg !7496
  store i32 9, i32* %r, align 4, !dbg !7498
  br label %bb, !dbg !7498

bb:                                               ; preds = %bb, %entry
  %16 = load i32** %p, align 8, !dbg !7499
  store i32 8, i32* %16, align 4, !dbg !7499
  %17 = load i32** %p, align 8, !dbg !7499
  %18 = getelementptr inbounds i32* %17, i64 1, !dbg !7499
  store i32* %18, i32** %p, align 8, !dbg !7499
  %19 = load i32* %r, align 4, !dbg !7500
  %20 = sub nsw i32 %19, 1, !dbg !7500
  store i32 %20, i32* %r, align 4, !dbg !7500
  %21 = load i32* %r, align 4, !dbg !7500
  %22 = icmp ne i32 %21, 0, !dbg !7500
  br i1 %22, label %bb, label %bb1, !dbg !7500

bb1:                                              ; preds = %bb
  %23 = load i8** %fmt0_addr, align 8, !dbg !7501
  store i8* %23, i8** %fmt, align 8, !dbg !7501
  br label %bb8, !dbg !7501

bb2:                                              ; preds = %bb8
  %24 = load i8** %fmt, align 8, !dbg !7503
  %25 = load i8* %24, align 1, !dbg !7503
  %26 = icmp ne i8 %25, 37, !dbg !7503
  br i1 %26, label %bb7, label %bb3, !dbg !7503

bb3:                                              ; preds = %bb2
  %27 = load i8** %fmt, align 8, !dbg !7503
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !7503
  store i8* %28, i8** %fmt, align 8, !dbg !7503
  %29 = load i8** %fmt, align 8, !dbg !7503
  %30 = load i8* %29, align 1, !dbg !7503
  %31 = icmp eq i8 %30, 37, !dbg !7503
  br i1 %31, label %bb7, label %bb4, !dbg !7503

bb4:                                              ; preds = %bb3
  %32 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7504
  %33 = getelementptr inbounds %struct.ppfs_t* %32, i32 0, i32 0, !dbg !7504
  %34 = load i8** %fmt, align 8, !dbg !7504
  store i8* %34, i8** %33, align 16, !dbg !7504
  %35 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7505
  %36 = call i32 @_ppfs_parsespec(%struct.ppfs_t* %35) nounwind, !dbg !7505
  store i32 %36, i32* %r, align 4, !dbg !7505
  %37 = load i32* %r, align 4, !dbg !7505
  %38 = icmp slt i32 %37, 0, !dbg !7505
  br i1 %38, label %bb5, label %bb6, !dbg !7505

bb5:                                              ; preds = %bb4
  store i32 -1, i32* %0, align 4, !dbg !7506
  br label %bb10, !dbg !7506

bb6:                                              ; preds = %bb4
  %39 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7507
  %40 = getelementptr inbounds %struct.ppfs_t* %39, i32 0, i32 0, !dbg !7507
  %41 = load i8** %40, align 16, !dbg !7507
  store i8* %41, i8** %fmt, align 8, !dbg !7507
  br label %bb8, !dbg !7507

bb7:                                              ; preds = %bb3, %bb2
  %42 = load i8** %fmt, align 8, !dbg !7508
  %43 = getelementptr inbounds i8* %42, i64 1, !dbg !7508
  store i8* %43, i8** %fmt, align 8, !dbg !7508
  br label %bb8, !dbg !7508

bb8:                                              ; preds = %bb7, %bb6, %bb1
  %44 = load i8** %fmt, align 8, !dbg !7509
  %45 = load i8* %44, align 1, !dbg !7509
  %46 = icmp ne i8 %45, 0, !dbg !7509
  br i1 %46, label %bb2, label %bb9, !dbg !7509

bb9:                                              ; preds = %bb8
  %47 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7510
  %48 = getelementptr inbounds %struct.ppfs_t* %47, i32 0, i32 0, !dbg !7510
  %49 = load i8** %fmt0_addr, align 8, !dbg !7510
  store i8* %49, i8** %48, align 16, !dbg !7510
  store i32 0, i32* %0, align 4, !dbg !7511
  br label %bb10, !dbg !7511

bb10:                                             ; preds = %bb9, %bb5
  %50 = load i32* %0, align 4, !dbg !7506
  store i32 %50, i32* %retval, align 4, !dbg !7506
  %retval11 = load i32* %retval, !dbg !7506
  ret i32 %retval11, !dbg !7506
}

define internal i32 @_promoted_size(i32 %argtype) nounwind {
entry:
  %argtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %p = alloca i16*
  %"alloca point" = bitcast i32 0 to i32
  store i32 %argtype, i32* %argtype_addr
  store i16* getelementptr inbounds ([12 x i16]* @type_codes, i64 1, i64 0), i16** %p, align 8, !dbg !7512
  br label %bb, !dbg !7512

bb:                                               ; preds = %bb1, %entry
  %1 = load i16** %p, align 8, !dbg !7514
  %2 = getelementptr inbounds i16* %1, i64 -1, !dbg !7514
  store i16* %2, i16** %p, align 8, !dbg !7514
  %3 = load i16** %p, align 8, !dbg !7514
  %4 = load i16* %3, align 2, !dbg !7514
  %5 = sext i16 %4 to i32, !dbg !7514
  %6 = load i32* %argtype_addr, align 4, !dbg !7514
  %7 = icmp eq i32 %5, %6, !dbg !7514
  br i1 %7, label %bb2, label %bb1, !dbg !7514

bb1:                                              ; preds = %bb
  %8 = load i16** %p, align 8, !dbg !7515
  %9 = icmp ugt i16* %8, getelementptr inbounds ([12 x i16]* @type_codes, i64 0, i64 0), !dbg !7515
  br i1 %9, label %bb, label %bb2, !dbg !7515

bb2:                                              ; preds = %bb1, %bb
  %10 = load i16** %p, align 8, !dbg !7516
  %11 = ptrtoint i16* %10 to i64, !dbg !7516
  %12 = sub nsw i64 %11, ptrtoint ([12 x i16]* @type_codes to i64), !dbg !7516
  %int_cast_to_i64 = bitcast i64 2 to i64
  %13 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %14 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %14, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %15 = sdiv exact i64 %12, 2, !dbg !7516
  %16 = trunc i64 %15 to i32, !dbg !7516
  %17 = sext i32 %16 to i64, !dbg !7516
  %18 = getelementptr inbounds [12 x i8]* @type_sizes, i64 0, i64 %17, !dbg !7516
  %19 = load i8* %18, align 1, !dbg !7516
  %20 = zext i8 %19 to i32, !dbg !7516
  store i32 %20, i32* %0, align 4, !dbg !7516
  %21 = load i32* %0, align 4, !dbg !7516
  store i32 %21, i32* %retval, align 4, !dbg !7516
  %retval3 = load i32* %retval, !dbg !7516
  ret i32 %retval3, !dbg !7516
}

define internal i32 @_is_equal_or_bigger_arg(i32 %curtype, i32 %newtype) nounwind {
entry:
  %curtype_addr = alloca i32, align 4
  %newtype_addr = alloca i32, align 4
  %retval = alloca i32
  %0 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %curtype, i32* %curtype_addr
  store i32 %newtype, i32* %newtype_addr
  %1 = load i32* %newtype_addr, align 4, !dbg !7517
  %2 = icmp eq i32 %1, 8, !dbg !7517
  br i1 %2, label %bb, label %bb1, !dbg !7517

bb:                                               ; preds = %entry
  store i32 0, i32* %0, align 4, !dbg !7519
  br label %bb5, !dbg !7519

bb1:                                              ; preds = %entry
  %3 = load i32* %curtype_addr, align 4, !dbg !7520
  %4 = icmp eq i32 %3, 8, !dbg !7520
  br i1 %4, label %bb3, label %bb2, !dbg !7520

bb2:                                              ; preds = %bb1
  %5 = load i32* %curtype_addr, align 4, !dbg !7520
  %6 = load i32* %newtype_addr, align 4, !dbg !7520
  %7 = icmp eq i32 %5, %6, !dbg !7520
  br i1 %7, label %bb3, label %bb4, !dbg !7520

bb3:                                              ; preds = %bb2, %bb1
  store i32 1, i32* %0, align 4, !dbg !7521
  br label %bb5, !dbg !7521

bb4:                                              ; preds = %bb2
  %8 = load i32* %curtype_addr, align 4, !dbg !7522
  %9 = call i32 @_promoted_size(i32 %8) nounwind, !dbg !7522
  %10 = load i32* %newtype_addr, align 4, !dbg !7522
  %11 = call i32 @_promoted_size(i32 %10) nounwind, !dbg !7522
  %12 = icmp sle i32 %9, %11, !dbg !7522
  %13 = zext i1 %12 to i32, !dbg !7522
  store i32 %13, i32* %0, align 4, !dbg !7522
  br label %bb5, !dbg !7522

bb5:                                              ; preds = %bb4, %bb3, %bb
  %14 = load i32* %0, align 4, !dbg !7519
  store i32 %14, i32* %retval, align 4, !dbg !7519
  %retval6 = load i32* %retval, !dbg !7519
  ret i32 %retval6, !dbg !7519
}

define hidden i32 @_ppfs_parsespec(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %retval = alloca i32
  %iftmp.15 = alloca i32
  %iftmp.14 = alloca i32
  %0 = alloca i32
  %fmt = alloca i8*
  %p = alloca i8*
  %preci = alloca i32
  %width = alloca i32
  %flags = alloca i32
  %dataargtype = alloca i32
  %i = alloca i32
  %dpoint = alloca i32
  %maxposarg = alloca i32
  %p_m_spec_chars = alloca i32
  %n = alloca i32
  %argtype = alloca [3 x i32]
  %argnumber = alloca [3 x i32]
  %buf = alloca [32 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store i32 -1, i32* %preci, align 4, !dbg !7523
  %1 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 0, !dbg !7525
  store i32 0, i32* %1, align 4, !dbg !7525
  %2 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 1, !dbg !7526
  store i32 0, i32* %2, align 4, !dbg !7526
  %3 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 0, !dbg !7527
  store i32 8, i32* %3, align 4, !dbg !7527
  %4 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 1, !dbg !7528
  store i32 8, i32* %4, align 4, !dbg !7528
  %5 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7529
  %6 = getelementptr inbounds %struct.ppfs_t* %5, i32 0, i32 2, !dbg !7529
  %7 = load i32* %6, align 4, !dbg !7529
  store i32 %7, i32* %maxposarg, align 4, !dbg !7529
  store i32 0, i32* %dpoint, align 4, !dbg !7530
  %8 = load i32* %dpoint, align 4, !dbg !7530
  store i32 %8, i32* %width, align 4, !dbg !7530
  %9 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7531
  %10 = getelementptr inbounds %struct.ppfs_t* %9, i32 0, i32 1, !dbg !7531
  %11 = getelementptr inbounds %struct.printf_info* %10, i32 0, i32 3, !dbg !7531
  %12 = load i32* %11, align 4, !dbg !7531
  %13 = and i32 %12, 128, !dbg !7531
  store i32 %13, i32* %flags, align 4, !dbg !7531
  %14 = load i32* %flags, align 4, !dbg !7531
  %15 = icmp eq i32 %14, 0, !dbg !7531
  br i1 %15, label %bb, label %bb1, !dbg !7531

bb:                                               ; preds = %entry
  %16 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7532
  %17 = getelementptr inbounds %struct.ppfs_t* %16, i32 0, i32 0, !dbg !7532
  %18 = load i8** %17, align 16, !dbg !7532
  store i8* %18, i8** %fmt, align 8, !dbg !7532
  br label %width_precision, !dbg !7532

bb1:                                              ; preds = %entry
  %buf2 = bitcast [32 x i8]* %buf to i8*, !dbg !7533
  %19 = getelementptr inbounds i8* %buf2, i64 1, !dbg !7533
  store i8* %19, i8** %fmt, align 8, !dbg !7533
  store i32 0, i32* %i, align 4, !dbg !7534
  br label %bb3, !dbg !7534

bb3:                                              ; preds = %bb5, %bb1
  %20 = load i32* %i, align 4, !dbg !7535
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7535
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 0, !dbg !7535
  %23 = load i8** %22, align 16, !dbg !7535
  %24 = bitcast i8* %23 to i32*, !dbg !7535
  %25 = load i32* %i, align 4, !dbg !7535
  %26 = sub nsw i32 %25, 1, !dbg !7535
  %27 = sext i32 %26 to i64, !dbg !7535
  %28 = getelementptr inbounds i32* %24, i64 %27, !dbg !7535
  %29 = load i32* %28, align 1, !dbg !7535
  %30 = trunc i32 %29 to i8, !dbg !7535
  %31 = sext i32 %20 to i64, !dbg !7535
  %32 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %31, !dbg !7535
  store i8 %30, i8* %32, align 1, !dbg !7535
  %33 = sext i32 %20 to i64, !dbg !7535
  %34 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %33, !dbg !7535
  %35 = load i8* %34, align 1, !dbg !7535
  %36 = sext i8 %35 to i32, !dbg !7535
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7535
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 0, !dbg !7535
  %39 = load i8** %38, align 16, !dbg !7535
  %40 = bitcast i8* %39 to i32*, !dbg !7535
  %41 = load i32* %i, align 4, !dbg !7535
  %42 = sub nsw i32 %41, 1, !dbg !7535
  %43 = sext i32 %42 to i64, !dbg !7535
  %44 = getelementptr inbounds i32* %40, i64 %43, !dbg !7535
  %45 = load i32* %44, align 1, !dbg !7535
  %46 = icmp ne i32 %36, %45, !dbg !7535
  br i1 %46, label %bb4, label %bb5, !dbg !7535

bb4:                                              ; preds = %bb3
  store i32 -1, i32* %0, align 4, !dbg !7536
  br label %bb90, !dbg !7536

bb5:                                              ; preds = %bb3
  %47 = load i32* %i, align 4, !dbg !7537
  %48 = sext i32 %47 to i64, !dbg !7537
  %49 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 %48, !dbg !7537
  %50 = load i8* %49, align 1, !dbg !7537
  %51 = icmp ne i8 %50, 0, !dbg !7537
  %52 = zext i1 %51 to i8, !dbg !7537
  %53 = load i32* %i, align 4, !dbg !7537
  %54 = add nsw i32 %53, 1, !dbg !7537
  store i32 %54, i32* %i, align 4, !dbg !7537
  %toBool = icmp ne i8 %52, 0, !dbg !7537
  br i1 %toBool, label %bb3, label %bb6, !dbg !7537

bb6:                                              ; preds = %bb5
  %55 = getelementptr inbounds [32 x i8]* %buf, i64 0, i64 31, !dbg !7538
  store i8 0, i8* %55, align 1, !dbg !7538
  br label %width_precision, !dbg !7539

width_precision:                                  ; preds = %bb43, %klee_overshift_check.exit, %bb6, %bb
  %56 = load i8** %fmt, align 8, !dbg !7540
  store i8* %56, i8** %p, align 8, !dbg !7540
  %57 = load i8** %fmt, align 8, !dbg !7541
  %58 = load i8* %57, align 1, !dbg !7541
  %59 = icmp eq i8 %58, 42, !dbg !7541
  br i1 %59, label %bb7, label %bb8, !dbg !7541

bb7:                                              ; preds = %width_precision
  %60 = load i32* %dpoint, align 4, !dbg !7542
  %61 = sub nsw i32 0, %60, !dbg !7542
  %62 = sext i32 %61 to i64, !dbg !7542
  %63 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %62, !dbg !7542
  store i32 0, i32* %63, align 4, !dbg !7542
  %64 = load i8** %fmt, align 8, !dbg !7543
  %65 = getelementptr inbounds i8* %64, i64 1, !dbg !7543
  store i8* %65, i8** %fmt, align 8, !dbg !7543
  br label %bb8, !dbg !7543

bb8:                                              ; preds = %bb7, %width_precision
  store i32 0, i32* %i, align 4, !dbg !7544
  br label %bb12, !dbg !7544

bb9:                                              ; preds = %bb12
  %66 = load i32* %i, align 4, !dbg !7545
  %67 = icmp sle i32 %66, 4094, !dbg !7545
  br i1 %67, label %bb10, label %bb11, !dbg !7545

bb10:                                             ; preds = %bb9
  %68 = load i32* %i, align 4, !dbg !7546
  %69 = mul nsw i32 %68, 10, !dbg !7546
  %70 = load i8** %fmt, align 8, !dbg !7546
  %71 = load i8* %70, align 1, !dbg !7546
  %72 = sext i8 %71 to i32, !dbg !7546
  %73 = sub nsw i32 %72, 48, !dbg !7546
  %74 = add nsw i32 %69, %73, !dbg !7546
  store i32 %74, i32* %i, align 4, !dbg !7546
  br label %bb11, !dbg !7546

bb11:                                             ; preds = %bb10, %bb9
  %75 = load i8** %fmt, align 8, !dbg !7547
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !7547
  store i8* %76, i8** %fmt, align 8, !dbg !7547
  br label %bb12, !dbg !7547

bb12:                                             ; preds = %bb11, %bb8
  %77 = load i16** @__ctype_b, align 8, !dbg !7548
  %78 = load i8** %fmt, align 8, !dbg !7548
  %79 = load i8* %78, align 1, !dbg !7548
  %80 = sext i8 %79 to i32, !dbg !7548
  %81 = sext i32 %80 to i64, !dbg !7548
  %82 = getelementptr inbounds i16* %77, i64 %81, !dbg !7548
  %83 = load i16* %82, align 1, !dbg !7548
  %84 = zext i16 %83 to i32, !dbg !7548
  %85 = and i32 %84, 2048, !dbg !7548
  %86 = icmp ne i32 %85, 0, !dbg !7548
  br i1 %86, label %bb9, label %bb13, !dbg !7548

bb13:                                             ; preds = %bb12
  %87 = load i8** %p, align 8, !dbg !7549
  %88 = getelementptr inbounds i8* %87, i64 -1, !dbg !7549
  %89 = load i8* %88, align 1, !dbg !7549
  %90 = icmp eq i8 %89, 37, !dbg !7549
  br i1 %90, label %bb14, label %PREC_WIDTH, !dbg !7549

bb14:                                             ; preds = %bb13
  %91 = load i8** %fmt, align 8, !dbg !7550
  %92 = load i8* %91, align 1, !dbg !7550
  %93 = icmp ne i8 %92, 36, !dbg !7550
  br i1 %93, label %bb21, label %bb15, !dbg !7550

bb15:                                             ; preds = %bb14
  %94 = load i32* %i, align 4, !dbg !7550
  %95 = icmp sle i32 %94, 0, !dbg !7550
  br i1 %95, label %bb21, label %bb16, !dbg !7550

bb16:                                             ; preds = %bb15
  %96 = load i8** %fmt, align 8, !dbg !7551
  %97 = getelementptr inbounds i8* %96, i64 1, !dbg !7551
  store i8* %97, i8** %fmt, align 8, !dbg !7551
  %98 = load i32* %maxposarg, align 4, !dbg !7552
  %99 = icmp eq i32 %98, 0, !dbg !7552
  br i1 %99, label %bb17, label %bb18, !dbg !7552

bb17:                                             ; preds = %bb16
  store i32 -1, i32* %0, align 4, !dbg !7553
  br label %bb90, !dbg !7553

bb18:                                             ; preds = %bb16
  %100 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7554
  %101 = load i32* %i, align 4, !dbg !7554
  store i32 %101, i32* %100, align 4, !dbg !7554
  %102 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7554
  %103 = load i32* %102, align 4, !dbg !7554
  %104 = load i32* %maxposarg, align 4, !dbg !7554
  %105 = icmp sgt i32 %103, %104, !dbg !7554
  br i1 %105, label %bb19, label %restart_flags, !dbg !7554

bb19:                                             ; preds = %bb18
  %106 = load i32* %i, align 4, !dbg !7555
  store i32 %106, i32* %maxposarg, align 4, !dbg !7555
  br label %restart_flags, !dbg !7555

bb21:                                             ; preds = %bb15, %bb14
  %107 = load i32* %maxposarg, align 4, !dbg !7556
  %108 = icmp sgt i32 %107, 0, !dbg !7556
  br i1 %108, label %bb22, label %bb23, !dbg !7556

bb22:                                             ; preds = %bb21
  store i32 -1, i32* %0, align 4, !dbg !7557
  br label %bb90, !dbg !7557

bb23:                                             ; preds = %bb21
  store i32 0, i32* %maxposarg, align 4, !dbg !7558
  %109 = load i8** %fmt, align 8, !dbg !7559
  %110 = load i8** %p, align 8, !dbg !7559
  %111 = icmp ugt i8* %109, %110, !dbg !7559
  br i1 %111, label %bb24, label %bb25, !dbg !7559

bb24:                                             ; preds = %bb23
  %112 = load i8** %p, align 8, !dbg !7559
  %113 = load i8* %112, align 1, !dbg !7559
  %114 = icmp ne i8 %113, 48, !dbg !7559
  br i1 %114, label %PREC_WIDTH, label %bb25, !dbg !7559

bb25:                                             ; preds = %bb24, %bb23
  %115 = load i8** %p, align 8, !dbg !7560
  store i8* %115, i8** %fmt, align 8, !dbg !7560
  br label %restart_flags, !dbg !7561

restart_flags:                                    ; preds = %bb18, %bb19, %bb28, %bb25
  store i32 1, i32* %i, align 4, !dbg !7562
  store i8* getelementptr inbounds ([8 x i8]* @spec_flags.3665, i64 0, i64 0), i8** %p, align 8, !dbg !7563
  br label %bb26, !dbg !7563

bb26:                                             ; preds = %bb29, %restart_flags
  %116 = load i8** %fmt, align 8, !dbg !7564
  %117 = load i8* %116, align 1, !dbg !7564
  %118 = load i8** %p, align 8, !dbg !7564
  %119 = load i8* %118, align 1, !dbg !7564
  %120 = icmp eq i8 %117, %119, !dbg !7564
  %121 = zext i1 %120 to i8, !dbg !7564
  %122 = load i8** %p, align 8, !dbg !7564
  %123 = getelementptr inbounds i8* %122, i64 1, !dbg !7564
  store i8* %123, i8** %p, align 8, !dbg !7564
  %toBool27 = icmp ne i8 %121, 0, !dbg !7564
  br i1 %toBool27, label %bb28, label %bb29, !dbg !7564

bb28:                                             ; preds = %bb26
  %124 = load i8** %fmt, align 8, !dbg !7565
  %125 = getelementptr inbounds i8* %124, i64 1, !dbg !7565
  store i8* %125, i8** %fmt, align 8, !dbg !7565
  %126 = load i32* %flags, align 4, !dbg !7566
  %127 = load i32* %i, align 4, !dbg !7566
  %128 = or i32 %126, %127, !dbg !7566
  store i32 %128, i32* %flags, align 4, !dbg !7566
  br label %restart_flags, !dbg !7566

bb29:                                             ; preds = %bb26
  %129 = load i32* %i, align 4, !dbg !7567
  %130 = load i32* %i, align 4, !dbg !7567
  %131 = add nsw i32 %129, %130, !dbg !7567
  store i32 %131, i32* %i, align 4, !dbg !7567
  %132 = load i8** %p, align 8, !dbg !7568
  %133 = load i8* %132, align 1, !dbg !7568
  %134 = icmp ne i8 %133, 0, !dbg !7568
  br i1 %134, label %bb26, label %bb30, !dbg !7568

bb30:                                             ; preds = %bb29
  store i32 0, i32* %i, align 4, !dbg !7569
  %135 = load i32* %flags, align 4, !dbg !7570
  %136 = and i32 %135, 10, !dbg !7570
  %int_cast_to_i64 = zext i32 1 to i64
  %137 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %137, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb30
  %138 = ashr i32 %136, 1, !dbg !7570
  %not = xor i32 %138, -1, !dbg !7570
  %139 = load i32* %flags, align 4, !dbg !7570
  %140 = and i32 %not, %139, !dbg !7570
  store i32 %140, i32* %flags, align 4, !dbg !7570
  %141 = load i8** %fmt, align 8, !dbg !7571
  %142 = getelementptr inbounds i8* %141, i64 -1, !dbg !7571
  %143 = load i8* %142, align 1, !dbg !7571
  %144 = icmp ne i8 %143, 37, !dbg !7571
  br i1 %144, label %width_precision, label %PREC_WIDTH, !dbg !7571

PREC_WIDTH:                                       ; preds = %klee_overshift_check.exit, %bb24, %bb13
  %145 = load i8** %p, align 8, !dbg !7572
  %146 = load i8* %145, align 1, !dbg !7572
  %147 = icmp eq i8 %146, 42, !dbg !7572
  br i1 %147, label %bb32, label %bb41, !dbg !7572

bb32:                                             ; preds = %PREC_WIDTH
  %148 = load i32* %maxposarg, align 4, !dbg !7573
  %149 = icmp ne i32 %148, 0, !dbg !7573
  br i1 %149, label %bb33, label %bb38, !dbg !7573

bb33:                                             ; preds = %bb32
  %150 = load i8** %fmt, align 8, !dbg !7574
  %151 = load i8* %150, align 1, !dbg !7574
  %152 = icmp ne i8 %151, 36, !dbg !7574
  %153 = zext i1 %152 to i8, !dbg !7574
  %154 = load i8** %fmt, align 8, !dbg !7574
  %155 = getelementptr inbounds i8* %154, i64 1, !dbg !7574
  store i8* %155, i8** %fmt, align 8, !dbg !7574
  %toBool34 = icmp ne i8 %153, 0, !dbg !7574
  br i1 %toBool34, label %bb36, label %bb35, !dbg !7574

bb35:                                             ; preds = %bb33
  %156 = load i32* %i, align 4, !dbg !7574
  %157 = icmp sle i32 %156, 0, !dbg !7574
  br i1 %157, label %bb36, label %bb37, !dbg !7574

bb36:                                             ; preds = %bb35, %bb33
  store i32 -1, i32* %0, align 4, !dbg !7575
  br label %bb90, !dbg !7575

bb37:                                             ; preds = %bb35
  %158 = load i32* %dpoint, align 4, !dbg !7576
  %159 = sub nsw i32 0, %158, !dbg !7576
  %160 = sext i32 %159 to i64, !dbg !7576
  %161 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %160, !dbg !7576
  %162 = load i32* %i, align 4, !dbg !7576
  store i32 %162, i32* %161, align 4, !dbg !7576
  br label %bb40, !dbg !7576

bb38:                                             ; preds = %bb32
  %163 = load i8** %p, align 8, !dbg !7577
  %164 = getelementptr inbounds i8* %163, i64 1, !dbg !7577
  store i8* %164, i8** %p, align 8, !dbg !7577
  %165 = load i8** %p, align 8, !dbg !7577
  %166 = load i8** %fmt, align 8, !dbg !7577
  %167 = icmp ne i8* %165, %166, !dbg !7577
  br i1 %167, label %bb39, label %bb40, !dbg !7577

bb39:                                             ; preds = %bb38
  store i32 -1, i32* %0, align 4, !dbg !7578
  br label %bb90, !dbg !7578

bb40:                                             ; preds = %bb38, %bb37
  store i32 -2147483648, i32* %i, align 4, !dbg !7579
  br label %bb41, !dbg !7579

bb41:                                             ; preds = %bb40, %PREC_WIDTH
  %168 = load i32* %dpoint, align 4, !dbg !7580
  %169 = icmp eq i32 %168, 0, !dbg !7580
  %170 = load i32* %i, align 4, !dbg !7581
  br i1 %169, label %bb42, label %bb45, !dbg !7580

bb42:                                             ; preds = %bb41
  store i32 %170, i32* %width, align 4, !dbg !7581
  %171 = load i8** %fmt, align 8, !dbg !7582
  %172 = load i8* %171, align 1, !dbg !7582
  %173 = icmp eq i8 %172, 46, !dbg !7582
  br i1 %173, label %bb43, label %bb46, !dbg !7582

bb43:                                             ; preds = %bb42
  %174 = load i8** %fmt, align 8, !dbg !7583
  %175 = getelementptr inbounds i8* %174, i64 1, !dbg !7583
  store i8* %175, i8** %fmt, align 8, !dbg !7583
  store i32 -1, i32* %dpoint, align 4, !dbg !7584
  br label %width_precision, !dbg !7584

bb45:                                             ; preds = %bb41
  store i32 %170, i32* %preci, align 4, !dbg !7585
  br label %bb46, !dbg !7585

bb46:                                             ; preds = %bb42, %bb45
  store i8* getelementptr inbounds ([20 x i8]* @qual_chars.3670, i64 0, i64 0), i8** %p, align 8, !dbg !7586
  br label %bb47, !dbg !7586

bb47:                                             ; preds = %bb49, %bb46
  %176 = load i8** %fmt, align 8, !dbg !7587
  %177 = load i8* %176, align 1, !dbg !7587
  %178 = load i8** %p, align 8, !dbg !7587
  %179 = load i8* %178, align 1, !dbg !7587
  %180 = icmp eq i8 %177, %179, !dbg !7587
  br i1 %180, label %bb48, label %bb49, !dbg !7587

bb48:                                             ; preds = %bb47
  %181 = load i8** %fmt, align 8, !dbg !7588
  %182 = getelementptr inbounds i8* %181, i64 1, !dbg !7588
  store i8* %182, i8** %fmt, align 8, !dbg !7588
  br label %bb50, !dbg !7588

bb49:                                             ; preds = %bb47
  %183 = load i8** %p, align 8, !dbg !7589
  %184 = getelementptr inbounds i8* %183, i64 1, !dbg !7589
  store i8* %184, i8** %p, align 8, !dbg !7589
  %185 = load i8** %p, align 8, !dbg !7589
  %186 = load i8* %185, align 1, !dbg !7589
  %187 = icmp ne i8 %186, 0, !dbg !7589
  br i1 %187, label %bb47, label %bb50, !dbg !7589

bb50:                                             ; preds = %bb49, %bb48
  %188 = load i8** %p, align 8, !dbg !7590
  %189 = ptrtoint i8* %188 to i64, !dbg !7590
  %190 = sub nsw i64 %189, ptrtoint ([20 x i8]* @qual_chars.3670 to i64), !dbg !7590
  %191 = icmp sle i64 %190, 1, !dbg !7590
  br i1 %191, label %bb51, label %bb53, !dbg !7590

bb51:                                             ; preds = %bb50
  %192 = load i8** %fmt, align 8, !dbg !7590
  %193 = load i8* %192, align 1, !dbg !7590
  %194 = load i8** %p, align 8, !dbg !7590
  %195 = load i8* %194, align 1, !dbg !7590
  %196 = icmp eq i8 %193, %195, !dbg !7590
  br i1 %196, label %bb52, label %bb53, !dbg !7590

bb52:                                             ; preds = %bb51
  %197 = load i8** %p, align 8, !dbg !7591
  %198 = getelementptr inbounds i8* %197, i64 9, !dbg !7591
  store i8* %198, i8** %p, align 8, !dbg !7591
  %199 = load i8** %fmt, align 8, !dbg !7592
  %200 = getelementptr inbounds i8* %199, i64 1, !dbg !7592
  store i8* %200, i8** %fmt, align 8, !dbg !7592
  br label %bb53, !dbg !7592

bb53:                                             ; preds = %bb52, %bb51, %bb50
  %201 = load i8** %p, align 8, !dbg !7593
  %202 = getelementptr inbounds i8* %201, i64 9, !dbg !7593
  %203 = load i8* %202, align 1, !dbg !7593
  %204 = sext i8 %203 to i32, !dbg !7593
  %int_cast_to_i641 = zext i32 8 to i64
  %205 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %205, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %bb53
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %bb53
  %206 = shl i32 %204, 8, !dbg !7593
  store i32 %206, i32* %dataargtype, align 4, !dbg !7593
  %207 = load i8** %fmt, align 8, !dbg !7594
  %208 = load i8* %207, align 1, !dbg !7594
  %209 = icmp eq i8 %208, 0, !dbg !7594
  br i1 %209, label %bb54, label %bb55, !dbg !7594

bb54:                                             ; preds = %klee_overshift_check.exit3
  store i32 -1, i32* %0, align 4, !dbg !7595
  br label %bb90, !dbg !7595

bb55:                                             ; preds = %klee_overshift_check.exit3
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7596
  br label %bb56, !dbg !7596

bb56:                                             ; preds = %bb63, %bb55
  %210 = load i8** %fmt, align 8, !dbg !7597
  %211 = load i8* %210, align 1, !dbg !7597
  %212 = load i8** %p, align 8, !dbg !7597
  %213 = load i8* %212, align 1, !dbg !7597
  %214 = icmp eq i8 %211, %213, !dbg !7597
  %215 = load i8** %p, align 8, !dbg !7598
  br i1 %214, label %bb57, label %bb63, !dbg !7597

bb57:                                             ; preds = %bb56
  %216 = ptrtoint i8* %215 to i64, !dbg !7598
  %217 = trunc i64 %216 to i32, !dbg !7598
  %218 = trunc i64 ptrtoint ([21 x i8]* @spec_chars.3666 to i64) to i32, !dbg !7598
  %219 = sub i32 %217, %218, !dbg !7598
  store i32 %219, i32* %p_m_spec_chars, align 4, !dbg !7598
  %220 = load i32* %p_m_spec_chars, align 4, !dbg !7599
  %221 = icmp sgt i32 %220, 17, !dbg !7599
  br i1 %221, label %bb58, label %bb60, !dbg !7599

bb58:                                             ; preds = %bb57
  %222 = load i32* %dataargtype, align 4, !dbg !7599
  %223 = and i32 %222, 1024, !dbg !7599
  %224 = icmp ne i32 %223, 0, !dbg !7599
  br i1 %224, label %bb59, label %bb60, !dbg !7599

bb59:                                             ; preds = %bb58
  %225 = load i32* %p_m_spec_chars, align 4, !dbg !7600
  %226 = sub nsw i32 %225, 2, !dbg !7600
  store i32 %226, i32* %p_m_spec_chars, align 4, !dbg !7600
  br label %bb60, !dbg !7600

bb60:                                             ; preds = %bb59, %bb58, %bb57
  %227 = load i32* %p_m_spec_chars, align 4, !dbg !7601
  %228 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7601
  %229 = getelementptr inbounds %struct.ppfs_t* %228, i32 0, i32 4, !dbg !7601
  store i32 %227, i32* %229, align 4, !dbg !7601
  store i8* getelementptr ([9 x i8]* @spec_ranges.3667, i64 2049638230412172401, i64 6), i8** %p, align 8, !dbg !7602
  br label %bb61, !dbg !7602

bb61:                                             ; preds = %bb61, %bb60
  %230 = load i8** %p, align 8, !dbg !7603
  %231 = getelementptr inbounds i8* %230, i64 1, !dbg !7603
  store i8* %231, i8** %p, align 8, !dbg !7603
  %232 = load i8** %p, align 8, !dbg !7603
  %233 = load i8* %232, align 1, !dbg !7603
  %234 = sext i8 %233 to i32, !dbg !7603
  %235 = load i32* %p_m_spec_chars, align 4, !dbg !7603
  %236 = icmp slt i32 %234, %235, !dbg !7603
  br i1 %236, label %bb61, label %bb62, !dbg !7603

bb62:                                             ; preds = %bb61
  %237 = load i8** %p, align 8, !dbg !7604
  %238 = ptrtoint i8* %237 to i64, !dbg !7604
  %239 = trunc i64 %238 to i32, !dbg !7604
  %240 = trunc i64 ptrtoint ([9 x i8]* @spec_ranges.3667 to i64) to i32, !dbg !7604
  %241 = sub i32 %239, %240, !dbg !7604
  store i32 %241, i32* %i, align 4, !dbg !7604
  %242 = load i32* %i, align 4, !dbg !7605
  %243 = sext i32 %242 to i64, !dbg !7605
  %244 = getelementptr inbounds [8 x i16]* @spec_or_mask.3668, i64 0, i64 %243, !dbg !7605
  %245 = load i16* %244, align 2, !dbg !7605
  %246 = sext i16 %245 to i32, !dbg !7605
  %247 = load i32* %dataargtype, align 4, !dbg !7605
  %248 = or i32 %246, %247, !dbg !7605
  %249 = load i32* %i, align 4, !dbg !7605
  %250 = sext i32 %249 to i64, !dbg !7605
  %251 = getelementptr inbounds [8 x i16]* @spec_and_mask.3669, i64 0, i64 %250, !dbg !7605
  %252 = load i16* %251, align 2, !dbg !7605
  %253 = sext i16 %252 to i32, !dbg !7605
  %254 = and i32 %248, %253, !dbg !7605
  %255 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 2, !dbg !7605
  store i32 %254, i32* %255, align 4, !dbg !7605
  store i8* getelementptr inbounds ([21 x i8]* @spec_chars.3666, i64 0, i64 0), i8** %p, align 8, !dbg !7606
  br label %bb64, !dbg !7606

bb63:                                             ; preds = %bb56
  %256 = getelementptr inbounds i8* %215, i64 1, !dbg !7607
  store i8* %256, i8** %p, align 8, !dbg !7607
  %257 = load i8** %p, align 8, !dbg !7607
  %258 = load i8* %257, align 1, !dbg !7607
  %259 = icmp ne i8 %258, 0, !dbg !7607
  br i1 %259, label %bb56, label %bb64, !dbg !7607

bb64:                                             ; preds = %bb63, %bb62
  %260 = load i8** %fmt, align 8, !dbg !7608
  %261 = load i8* %260, align 1, !dbg !7608
  %262 = sext i8 %261 to i32, !dbg !7608
  %263 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7608
  %264 = getelementptr inbounds %struct.ppfs_t* %263, i32 0, i32 1, !dbg !7608
  %265 = getelementptr inbounds %struct.printf_info* %264, i32 0, i32 2, !dbg !7608
  store i32 %262, i32* %265, align 8, !dbg !7608
  %266 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7609
  %267 = getelementptr inbounds %struct.ppfs_t* %266, i32 0, i32 1, !dbg !7609
  %268 = getelementptr inbounds %struct.printf_info* %267, i32 0, i32 0, !dbg !7609
  %269 = load i32* %preci, align 4, !dbg !7609
  store i32 %269, i32* %268, align 8, !dbg !7609
  %270 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7610
  %271 = getelementptr inbounds %struct.ppfs_t* %270, i32 0, i32 1, !dbg !7610
  %272 = getelementptr inbounds %struct.printf_info* %271, i32 0, i32 1, !dbg !7610
  %273 = load i32* %width, align 4, !dbg !7610
  store i32 %273, i32* %272, align 4, !dbg !7610
  %274 = load i32* %flags, align 4, !dbg !7611
  %275 = and i32 %274, 4, !dbg !7611
  %276 = icmp ne i32 %275, 0, !dbg !7611
  br i1 %276, label %bb65, label %bb66, !dbg !7611

bb65:                                             ; preds = %bb64
  store i32 48, i32* %iftmp.14, align 4, !dbg !7611
  br label %bb67, !dbg !7611

bb66:                                             ; preds = %bb64
  store i32 32, i32* %iftmp.14, align 4, !dbg !7611
  br label %bb67, !dbg !7611

bb67:                                             ; preds = %bb66, %bb65
  %277 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7611
  %278 = getelementptr inbounds %struct.ppfs_t* %277, i32 0, i32 1, !dbg !7611
  %279 = getelementptr inbounds %struct.printf_info* %278, i32 0, i32 4, !dbg !7611
  %280 = load i32* %iftmp.14, align 4, !dbg !7611
  store i32 %280, i32* %279, align 8, !dbg !7611
  %281 = load i32* %flags, align 4, !dbg !7612
  %282 = and i32 %281, -5, !dbg !7612
  %283 = load i32* %dataargtype, align 4, !dbg !7612
  %284 = and i32 %283, 3840, !dbg !7612
  %285 = or i32 %282, %284, !dbg !7612
  %286 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7612
  %287 = getelementptr inbounds %struct.ppfs_t* %286, i32 0, i32 1, !dbg !7612
  %288 = getelementptr inbounds %struct.printf_info* %287, i32 0, i32 3, !dbg !7612
  store i32 %285, i32* %288, align 4, !dbg !7612
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7613
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7613
  store i32 1, i32* %290, align 16, !dbg !7613
  %291 = load i8** %p, align 8, !dbg !7614
  %292 = load i8* %291, align 1, !dbg !7614
  %293 = icmp eq i8 %292, 0, !dbg !7614
  br i1 %293, label %bb68, label %bb69, !dbg !7614

bb68:                                             ; preds = %bb67
  store i32 -1, i32* %0, align 4, !dbg !7615
  br label %bb90, !dbg !7615

bb69:                                             ; preds = %bb67
  %294 = load i32* %maxposarg, align 4, !dbg !7616
  %295 = icmp sgt i32 %294, 0, !dbg !7616
  br i1 %295, label %bb70, label %bb81, !dbg !7616

bb70:                                             ; preds = %bb69
  store i32 0, i32* %i, align 4, !dbg !7617
  br label %bb71, !dbg !7617

bb71:                                             ; preds = %bb79, %bb70
  %296 = load i32* %i, align 4, !dbg !7618
  %297 = icmp sle i32 %296, 2, !dbg !7618
  br i1 %297, label %bb72, label %bb73, !dbg !7618

bb72:                                             ; preds = %bb71
  %298 = load i32* %i, align 4, !dbg !7618
  %299 = load i32* %i, align 4, !dbg !7618
  %300 = sext i32 %299 to i64, !dbg !7618
  %301 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 %300, !dbg !7618
  %302 = load i32* %301, align 4, !dbg !7618
  %303 = trunc i32 %302 to i8, !dbg !7618
  %304 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7618
  %305 = getelementptr inbounds %struct.ppfs_t* %304, i32 0, i32 5, !dbg !7618
  %306 = sext i32 %298 to i64, !dbg !7618
  %307 = getelementptr inbounds [4 x i8]* %305, i64 0, i64 %306, !dbg !7618
  store i8 %303, i8* %307, align 1, !dbg !7618
  %308 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7618
  %309 = getelementptr inbounds %struct.ppfs_t* %308, i32 0, i32 5, !dbg !7618
  %310 = sext i32 %298 to i64, !dbg !7618
  %311 = getelementptr inbounds [4 x i8]* %309, i64 0, i64 %310, !dbg !7618
  %312 = load i8* %311, align 1, !dbg !7618
  %313 = zext i8 %312 to i32, !dbg !7618
  store i32 %313, i32* %iftmp.15, align 4, !dbg !7618
  br label %bb74, !dbg !7618

bb73:                                             ; preds = %bb71
  %314 = getelementptr inbounds [3 x i32]* %argnumber, i64 0, i64 2, !dbg !7618
  %315 = load i32* %314, align 4, !dbg !7618
  %316 = load i32* %i, align 4, !dbg !7618
  %317 = sub nsw i32 %316, 2, !dbg !7618
  %318 = add nsw i32 %315, %317, !dbg !7618
  store i32 %318, i32* %iftmp.15, align 4, !dbg !7618
  br label %bb74, !dbg !7618

bb74:                                             ; preds = %bb73, %bb72
  %319 = load i32* %iftmp.15, align 4, !dbg !7618
  store i32 %319, i32* %n, align 4, !dbg !7618
  %320 = load i32* %n, align 4, !dbg !7619
  %321 = load i32* %maxposarg, align 4, !dbg !7619
  %322 = icmp sgt i32 %320, %321, !dbg !7619
  br i1 %322, label %bb75, label %bb77, !dbg !7619

bb75:                                             ; preds = %bb74
  %323 = load i32* %n, align 4, !dbg !7620
  store i32 %323, i32* %maxposarg, align 4, !dbg !7620
  %324 = load i32* %maxposarg, align 4, !dbg !7620
  %325 = icmp sgt i32 %324, 9, !dbg !7620
  br i1 %325, label %bb76, label %bb77, !dbg !7620

bb76:                                             ; preds = %bb75
  store i32 -1, i32* %0, align 4, !dbg !7621
  br label %bb90, !dbg !7621

bb77:                                             ; preds = %bb75, %bb74
  %326 = load i32* %n, align 4, !dbg !7622
  %327 = sub nsw i32 %326, 1, !dbg !7622
  store i32 %327, i32* %n, align 4, !dbg !7622
  %328 = load i32* %i, align 4, !dbg !7623
  %329 = sext i32 %328 to i64, !dbg !7623
  %330 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %329, !dbg !7623
  %331 = load i32* %330, align 4, !dbg !7623
  %332 = load i32* %n, align 4, !dbg !7623
  %333 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7623
  %334 = getelementptr inbounds %struct.ppfs_t* %333, i32 0, i32 6, !dbg !7623
  %335 = sext i32 %332 to i64, !dbg !7623
  %336 = getelementptr inbounds [9 x i32]* %334, i64 0, i64 %335, !dbg !7623
  %337 = load i32* %336, align 4, !dbg !7623
  %338 = call i32 @_is_equal_or_bigger_arg(i32 %337, i32 %331) nounwind, !dbg !7623
  %339 = icmp ne i32 %338, 0, !dbg !7623
  br i1 %339, label %bb78, label %bb79, !dbg !7623

bb78:                                             ; preds = %bb77
  %340 = load i32* %n, align 4, !dbg !7624
  %341 = load i32* %i, align 4, !dbg !7624
  %342 = sext i32 %341 to i64, !dbg !7624
  %343 = getelementptr inbounds [3 x i32]* %argtype, i64 0, i64 %342, !dbg !7624
  %344 = load i32* %343, align 4, !dbg !7624
  %345 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7624
  %346 = getelementptr inbounds %struct.ppfs_t* %345, i32 0, i32 6, !dbg !7624
  %347 = sext i32 %340 to i64, !dbg !7624
  %348 = getelementptr inbounds [9 x i32]* %346, i64 0, i64 %347, !dbg !7624
  store i32 %344, i32* %348, align 4, !dbg !7624
  br label %bb79, !dbg !7624

bb79:                                             ; preds = %bb78, %bb77
  %349 = load i32* %i, align 4, !dbg !7625
  %350 = add nsw i32 %349, 1, !dbg !7625
  store i32 %350, i32* %i, align 4, !dbg !7625
  %351 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7625
  %352 = getelementptr inbounds %struct.ppfs_t* %351, i32 0, i32 3, !dbg !7625
  %353 = load i32* %352, align 16, !dbg !7625
  %354 = add nsw i32 %353, 2, !dbg !7625
  %355 = load i32* %i, align 4, !dbg !7625
  %356 = icmp slt i32 %355, %354, !dbg !7625
  br i1 %356, label %bb71, label %bb83, !dbg !7625

bb81:                                             ; preds = %bb69
  %357 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7626
  %358 = getelementptr inbounds %struct.ppfs_t* %357, i32 0, i32 5, !dbg !7626
  %359 = getelementptr inbounds [4 x i8]* %358, i64 0, i64 2, !dbg !7626
  store i8 1, i8* %359, align 1, !dbg !7626
  %360 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7627
  %361 = getelementptr inbounds %struct.ppfs_t* %360, i32 0, i32 3, !dbg !7627
  %362 = load i32* %361, align 16, !dbg !7627
  %363 = sext i32 %362 to i64, !dbg !7627
  %364 = mul i64 %363, 4, !dbg !7627
  %365 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7627
  %366 = getelementptr inbounds %struct.ppfs_t* %365, i32 0, i32 6, !dbg !7627
  %367 = getelementptr inbounds [9 x i32]* %366, i64 0, i64 0, !dbg !7627
  %368 = bitcast i32* %367 to i8*, !dbg !7627
  %argtype82 = bitcast [3 x i32]* %argtype to i32*, !dbg !7627
  %369 = getelementptr inbounds i32* %argtype82, i64 2, !dbg !7627
  %370 = bitcast i32* %369 to i8*, !dbg !7627
  %371 = call i8* @memcpy(i8* noalias %368, i8* noalias %370, i64 %364) nounwind, !dbg !7627
  br label %bb83, !dbg !7627

bb83:                                             ; preds = %bb79, %bb81
  %372 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7628
  %373 = getelementptr inbounds %struct.ppfs_t* %372, i32 0, i32 2, !dbg !7628
  %374 = load i32* %maxposarg, align 4, !dbg !7628
  store i32 %374, i32* %373, align 4, !dbg !7628
  %375 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7629
  %376 = getelementptr inbounds %struct.ppfs_t* %375, i32 0, i32 1, !dbg !7629
  %377 = getelementptr inbounds %struct.printf_info* %376, i32 0, i32 3, !dbg !7629
  %378 = load i32* %377, align 4, !dbg !7629
  %379 = and i32 %378, 128, !dbg !7629
  store i32 %379, i32* %flags, align 4, !dbg !7629
  %380 = load i32* %flags, align 4, !dbg !7629
  %381 = icmp eq i32 %380, 0, !dbg !7629
  br i1 %381, label %bb84, label %bb85, !dbg !7629

bb84:                                             ; preds = %bb83
  %382 = load i8** %fmt, align 8, !dbg !7630
  %383 = getelementptr inbounds i8* %382, i64 1, !dbg !7630
  store i8* %383, i8** %fmt, align 8, !dbg !7630
  %384 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7630
  %385 = getelementptr inbounds %struct.ppfs_t* %384, i32 0, i32 0, !dbg !7630
  %386 = load i8** %fmt, align 8, !dbg !7630
  store i8* %386, i8** %385, align 16, !dbg !7630
  br label %bb89, !dbg !7630

bb85:                                             ; preds = %bb83
  %387 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7631
  %388 = getelementptr inbounds %struct.ppfs_t* %387, i32 0, i32 0, !dbg !7631
  %389 = load i8** %388, align 16, !dbg !7631
  %390 = bitcast i8* %389 to i32*, !dbg !7631
  %391 = load i8** %fmt, align 8, !dbg !7631
  %392 = ptrtoint i8* %391 to i64, !dbg !7631
  %buf86 = bitcast [32 x i8]* %buf to i8*, !dbg !7631
  %buf8687 = ptrtoint i8* %buf86 to i64, !dbg !7631
  %393 = sub nsw i64 %392, %buf8687, !dbg !7631
  %394 = getelementptr inbounds i32* %390, i64 %393, !dbg !7631
  %395 = bitcast i32* %394 to i8*, !dbg !7631
  %396 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7631
  %397 = getelementptr inbounds %struct.ppfs_t* %396, i32 0, i32 0, !dbg !7631
  store i8* %395, i8** %397, align 16, !dbg !7631
  br label %bb89, !dbg !7631

bb89:                                             ; preds = %bb85, %bb84
  %398 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7632
  %399 = getelementptr inbounds %struct.ppfs_t* %398, i32 0, i32 3, !dbg !7632
  %400 = load i32* %399, align 16, !dbg !7632
  %401 = add nsw i32 %400, 2, !dbg !7632
  store i32 %401, i32* %0, align 4, !dbg !7632
  br label %bb90, !dbg !7632

bb90:                                             ; preds = %bb89, %bb76, %bb68, %bb54, %bb39, %bb36, %bb22, %bb17, %bb4
  %402 = load i32* %0, align 4, !dbg !7536
  store i32 %402, i32* %retval, align 4, !dbg !7536
  %retval91 = load i32* %retval, !dbg !7536
  ret i32 %retval91, !dbg !7536
}

define hidden void @_ppfs_prepargs(%struct.ppfs_t* %ppfs, %struct.__va_list_tag* %arg) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %arg_addr = alloca %struct.__va_list_tag*, align 8
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  store %struct.__va_list_tag* %arg, %struct.__va_list_tag** %arg_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7633
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 7, !dbg !7633
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %1, i64 0, i64 0, !dbg !7633
  %3 = load %struct.__va_list_tag** %arg_addr, align 8, !dbg !7633
  %4 = bitcast %struct.__va_list_tag* %2 to i8*, !dbg !7633
  %5 = bitcast %struct.__va_list_tag* %3 to i8*, !dbg !7633
  %vacopy.cast.dst = bitcast i8* %4 to i64*
  %vacopy.cast.src = bitcast i8* %5 to i64*
  %6 = load i64* %vacopy.cast.src
  store i64 %6, i64* %vacopy.cast.dst
  %7 = getelementptr i64* %vacopy.cast.dst, i64 1
  %8 = getelementptr i64* %vacopy.cast.src, i64 1
  %9 = load i64* %8
  store i64 %9, i64* %7
  %10 = getelementptr i64* %7, i64 1
  %11 = getelementptr i64* %8, i64 1
  %12 = load i64* %11
  store i64 %12, i64* %10
  %13 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7635
  %14 = getelementptr inbounds %struct.ppfs_t* %13, i32 0, i32 2, !dbg !7635
  %15 = load i32* %14, align 4, !dbg !7635
  store i32 %15, i32* %i, align 4, !dbg !7635
  %16 = load i32* %i, align 4, !dbg !7635
  %17 = icmp sgt i32 %16, 0, !dbg !7635
  br i1 %17, label %bb, label %return, !dbg !7635

bb:                                               ; preds = %entry
  %18 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7636
  %19 = getelementptr inbounds %struct.ppfs_t* %18, i32 0, i32 3, !dbg !7636
  %20 = load i32* %i, align 4, !dbg !7636
  store i32 %20, i32* %19, align 16, !dbg !7636
  %21 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7637
  %22 = getelementptr inbounds %struct.ppfs_t* %21, i32 0, i32 2, !dbg !7637
  store i32 0, i32* %22, align 4, !dbg !7637
  %23 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7637
  %24 = getelementptr inbounds %struct.ppfs_t* %23, i32 0, i32 2, !dbg !7637
  %25 = load i32* %24, align 4, !dbg !7637
  %26 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7637
  %27 = getelementptr inbounds %struct.ppfs_t* %26, i32 0, i32 1, !dbg !7637
  %28 = getelementptr inbounds %struct.printf_info* %27, i32 0, i32 0, !dbg !7637
  store i32 %25, i32* %28, align 8, !dbg !7637
  %29 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7637
  %30 = getelementptr inbounds %struct.ppfs_t* %29, i32 0, i32 1, !dbg !7637
  %31 = getelementptr inbounds %struct.printf_info* %30, i32 0, i32 0, !dbg !7637
  %32 = load i32* %31, align 8, !dbg !7637
  %33 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7637
  %34 = getelementptr inbounds %struct.ppfs_t* %33, i32 0, i32 1, !dbg !7637
  %35 = getelementptr inbounds %struct.printf_info* %34, i32 0, i32 1, !dbg !7637
  store i32 %32, i32* %35, align 4, !dbg !7637
  %36 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7638
  call void @_ppfs_setargs(%struct.ppfs_t* %36) nounwind, !dbg !7638
  %37 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7639
  %38 = getelementptr inbounds %struct.ppfs_t* %37, i32 0, i32 2, !dbg !7639
  %39 = load i32* %i, align 4, !dbg !7639
  store i32 %39, i32* %38, align 4, !dbg !7639
  br label %return, !dbg !7639

return:                                           ; preds = %entry, %bb
  ret void, !dbg !7640
}

define hidden void @_ppfs_setargs(%struct.ppfs_t* %ppfs) nounwind {
entry:
  %ppfs_addr = alloca %struct.ppfs_t*, align 8
  %addr.17 = alloca i8*
  %addr.15 = alloca i8*
  %addr.13 = alloca i8*
  %addr.11 = alloca i8*
  %addr.9 = alloca i8*
  %addr.7 = alloca i8*
  %addr.5 = alloca i8*
  %addr.2 = alloca i8*
  %addr.0 = alloca i8*
  %p = alloca %union.argvalue_t*
  %i = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store %struct.ppfs_t* %ppfs, %struct.ppfs_t** %ppfs_addr
  %0 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7641
  %1 = getelementptr inbounds %struct.ppfs_t* %0, i32 0, i32 8, !dbg !7641
  %2 = getelementptr inbounds [9 x %union.argvalue_t]* %1, i64 0, i64 0, !dbg !7641
  store %union.argvalue_t* %2, %union.argvalue_t** %p, align 8, !dbg !7641
  %3 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7643
  %4 = getelementptr inbounds %struct.ppfs_t* %3, i32 0, i32 2, !dbg !7643
  %5 = load i32* %4, align 4, !dbg !7643
  %6 = icmp eq i32 %5, 0, !dbg !7643
  %7 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7644
  %8 = getelementptr inbounds %struct.ppfs_t* %7, i32 0, i32 1, !dbg !7644
  %9 = getelementptr inbounds %struct.printf_info* %8, i32 0, i32 1, !dbg !7644
  %10 = load i32* %9, align 4, !dbg !7644
  %11 = icmp eq i32 %10, -2147483648, !dbg !7644
  br i1 %6, label %bb, label %bb41, !dbg !7643

bb:                                               ; preds = %entry
  br i1 %11, label %bb1, label %bb5, !dbg !7644

bb1:                                              ; preds = %bb
  %12 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7645
  %13 = getelementptr inbounds %struct.ppfs_t* %12, i32 0, i32 7, !dbg !7645
  %14 = bitcast [1 x %struct.__va_list_tag]* %13 to %struct.__va_list_tag*, !dbg !7645
  %15 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7645
  %16 = load i32* %15, align 8, !dbg !7645
  %17 = icmp uge i32 %16, 48, !dbg !7645
  br i1 %17, label %bb3, label %bb2, !dbg !7645

bb2:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 3, !dbg !7645
  %19 = load i8** %18, align 8, !dbg !7645
  %20 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7645
  %21 = load i32* %20, align 8, !dbg !7645
  %22 = inttoptr i32 %21 to i8*, !dbg !7645
  %23 = ptrtoint i8* %19 to i64, !dbg !7645
  %24 = ptrtoint i8* %22 to i64, !dbg !7645
  %25 = add i64 %23, %24, !dbg !7645
  %26 = inttoptr i64 %25 to i8*, !dbg !7645
  store i8* %26, i8** %addr.0, align 8, !dbg !7645
  %27 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7645
  %28 = load i32* %27, align 8, !dbg !7645
  %29 = add i32 %28, 8, !dbg !7645
  %30 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 0, !dbg !7645
  store i32 %29, i32* %30, align 8, !dbg !7645
  br label %bb4, !dbg !7645

bb3:                                              ; preds = %bb1
  %31 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7645
  %32 = load i8** %31, align 8, !dbg !7645
  store i8* %32, i8** %addr.0, align 8, !dbg !7645
  %33 = getelementptr inbounds i8* %32, i64 8, !dbg !7645
  %34 = getelementptr inbounds %struct.__va_list_tag* %14, i32 0, i32 2, !dbg !7645
  store i8* %33, i8** %34, align 8, !dbg !7645
  br label %bb4, !dbg !7645

bb4:                                              ; preds = %bb3, %bb2
  %35 = load i8** %addr.0, align 8, !dbg !7645
  %36 = bitcast i8* %35 to i32*, !dbg !7645
  %37 = load i32* %36, align 4, !dbg !7645
  %38 = load %union.argvalue_t** %p, align 8, !dbg !7645
  %39 = getelementptr inbounds %union.argvalue_t* %38, i32 0, i32 0, !dbg !7645
  %40 = bitcast x86_fp80* %39 to i32*, !dbg !7645
  store i32 %37, i32* %40, align 16, !dbg !7645
  %41 = load %union.argvalue_t** %p, align 8, !dbg !7645
  %42 = getelementptr inbounds %union.argvalue_t* %41, i32 0, i32 0, !dbg !7645
  %43 = bitcast x86_fp80* %42 to i32*, !dbg !7645
  %44 = load i32* %43, align 16, !dbg !7645
  %45 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7645
  %46 = getelementptr inbounds %struct.ppfs_t* %45, i32 0, i32 1, !dbg !7645
  %47 = getelementptr inbounds %struct.printf_info* %46, i32 0, i32 1, !dbg !7645
  store i32 %44, i32* %47, align 4, !dbg !7645
  br label %bb5, !dbg !7645

bb5:                                              ; preds = %bb4, %bb
  %48 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7646
  %49 = getelementptr inbounds %struct.ppfs_t* %48, i32 0, i32 1, !dbg !7646
  %50 = getelementptr inbounds %struct.printf_info* %49, i32 0, i32 0, !dbg !7646
  %51 = load i32* %50, align 8, !dbg !7646
  %52 = icmp eq i32 %51, -2147483648, !dbg !7646
  br i1 %52, label %bb6, label %bb10, !dbg !7646

bb6:                                              ; preds = %bb5
  %53 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7647
  %54 = getelementptr inbounds %struct.ppfs_t* %53, i32 0, i32 7, !dbg !7647
  %55 = bitcast [1 x %struct.__va_list_tag]* %54 to %struct.__va_list_tag*, !dbg !7647
  %56 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7647
  %57 = load i32* %56, align 8, !dbg !7647
  %58 = icmp uge i32 %57, 48, !dbg !7647
  br i1 %58, label %bb8, label %bb7, !dbg !7647

bb7:                                              ; preds = %bb6
  %59 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 3, !dbg !7647
  %60 = load i8** %59, align 8, !dbg !7647
  %61 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7647
  %62 = load i32* %61, align 8, !dbg !7647
  %63 = inttoptr i32 %62 to i8*, !dbg !7647
  %64 = ptrtoint i8* %60 to i64, !dbg !7647
  %65 = ptrtoint i8* %63 to i64, !dbg !7647
  %66 = add i64 %64, %65, !dbg !7647
  %67 = inttoptr i64 %66 to i8*, !dbg !7647
  store i8* %67, i8** %addr.2, align 8, !dbg !7647
  %68 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7647
  %69 = load i32* %68, align 8, !dbg !7647
  %70 = add i32 %69, 8, !dbg !7647
  %71 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 0, !dbg !7647
  store i32 %70, i32* %71, align 8, !dbg !7647
  br label %bb9, !dbg !7647

bb8:                                              ; preds = %bb6
  %72 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7647
  %73 = load i8** %72, align 8, !dbg !7647
  store i8* %73, i8** %addr.2, align 8, !dbg !7647
  %74 = getelementptr inbounds i8* %73, i64 8, !dbg !7647
  %75 = getelementptr inbounds %struct.__va_list_tag* %55, i32 0, i32 2, !dbg !7647
  store i8* %74, i8** %75, align 8, !dbg !7647
  br label %bb9, !dbg !7647

bb9:                                              ; preds = %bb8, %bb7
  %76 = load i8** %addr.2, align 8, !dbg !7647
  %77 = bitcast i8* %76 to i32*, !dbg !7647
  %78 = load i32* %77, align 4, !dbg !7647
  %79 = load %union.argvalue_t** %p, align 8, !dbg !7647
  %80 = getelementptr inbounds %union.argvalue_t* %79, i32 0, i32 0, !dbg !7647
  %81 = bitcast x86_fp80* %80 to i32*, !dbg !7647
  store i32 %78, i32* %81, align 16, !dbg !7647
  %82 = load %union.argvalue_t** %p, align 8, !dbg !7647
  %83 = getelementptr inbounds %union.argvalue_t* %82, i32 0, i32 0, !dbg !7647
  %84 = bitcast x86_fp80* %83 to i32*, !dbg !7647
  %85 = load i32* %84, align 16, !dbg !7647
  %86 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7647
  %87 = getelementptr inbounds %struct.ppfs_t* %86, i32 0, i32 1, !dbg !7647
  %88 = getelementptr inbounds %struct.printf_info* %87, i32 0, i32 0, !dbg !7647
  store i32 %85, i32* %88, align 8, !dbg !7647
  br label %bb10, !dbg !7647

bb10:                                             ; preds = %bb9, %bb5
  store i32 0, i32* %i, align 4, !dbg !7648
  br label %bb39, !dbg !7648

bb11:                                             ; preds = %bb39
  %89 = load i32* %i, align 4, !dbg !7649
  %90 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7649
  %91 = getelementptr inbounds %struct.ppfs_t* %90, i32 0, i32 6, !dbg !7649
  %92 = sext i32 %89 to i64, !dbg !7649
  %93 = getelementptr inbounds [9 x i32]* %91, i64 0, i64 %92, !dbg !7649
  %94 = load i32* %93, align 4, !dbg !7649
  %95 = load i32* %i, align 4, !dbg !7649
  %96 = add nsw i32 %95, 1, !dbg !7649
  store i32 %96, i32* %i, align 4, !dbg !7649
  switch i32 %94, label %bb33 [
    i32 0, label %bb20
    i32 1, label %bb20
    i32 2, label %bb24
    i32 7, label %bb28
    i32 8, label %bb39
    i32 256, label %bb20
    i32 512, label %bb20
    i32 1024, label %bb16
    i32 2048, label %bb12
    i32 2055, label %bb32
  ], !dbg !7649

bb12:                                             ; preds = %bb11
  %97 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7650
  %98 = getelementptr inbounds %struct.ppfs_t* %97, i32 0, i32 7, !dbg !7650
  %99 = bitcast [1 x %struct.__va_list_tag]* %98 to %struct.__va_list_tag*, !dbg !7650
  %100 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7650
  %101 = load i32* %100, align 8, !dbg !7650
  %102 = icmp uge i32 %101, 48, !dbg !7650
  br i1 %102, label %bb14, label %bb13, !dbg !7650

bb13:                                             ; preds = %bb12
  %103 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 3, !dbg !7650
  %104 = load i8** %103, align 8, !dbg !7650
  %105 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7650
  %106 = load i32* %105, align 8, !dbg !7650
  %107 = inttoptr i32 %106 to i8*, !dbg !7650
  %108 = ptrtoint i8* %104 to i64, !dbg !7650
  %109 = ptrtoint i8* %107 to i64, !dbg !7650
  %110 = add i64 %108, %109, !dbg !7650
  %111 = inttoptr i64 %110 to i8*, !dbg !7650
  store i8* %111, i8** %addr.5, align 8, !dbg !7650
  %112 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7650
  %113 = load i32* %112, align 8, !dbg !7650
  %114 = add i32 %113, 8, !dbg !7650
  %115 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 0, !dbg !7650
  store i32 %114, i32* %115, align 8, !dbg !7650
  br label %bb15, !dbg !7650

bb14:                                             ; preds = %bb12
  %116 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7650
  %117 = load i8** %116, align 8, !dbg !7650
  store i8* %117, i8** %addr.5, align 8, !dbg !7650
  %118 = getelementptr inbounds i8* %117, i64 8, !dbg !7650
  %119 = getelementptr inbounds %struct.__va_list_tag* %99, i32 0, i32 2, !dbg !7650
  store i8* %118, i8** %119, align 8, !dbg !7650
  br label %bb15, !dbg !7650

bb15:                                             ; preds = %bb14, %bb13
  %120 = load i8** %addr.5, align 8, !dbg !7650
  %121 = bitcast i8* %120 to i64*, !dbg !7650
  %122 = load i64* %121, align 8, !dbg !7650
  %123 = load %union.argvalue_t** %p, align 8, !dbg !7650
  %124 = getelementptr inbounds %union.argvalue_t* %123, i32 0, i32 0, !dbg !7650
  %125 = bitcast x86_fp80* %124 to i64*, !dbg !7650
  store i64 %122, i64* %125, align 16, !dbg !7650
  br label %bb38, !dbg !7650

bb16:                                             ; preds = %bb11
  %126 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7651
  %127 = getelementptr inbounds %struct.ppfs_t* %126, i32 0, i32 7, !dbg !7651
  %128 = bitcast [1 x %struct.__va_list_tag]* %127 to %struct.__va_list_tag*, !dbg !7651
  %129 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7651
  %130 = load i32* %129, align 8, !dbg !7651
  %131 = icmp uge i32 %130, 48, !dbg !7651
  br i1 %131, label %bb18, label %bb17, !dbg !7651

bb17:                                             ; preds = %bb16
  %132 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 3, !dbg !7651
  %133 = load i8** %132, align 8, !dbg !7651
  %134 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7651
  %135 = load i32* %134, align 8, !dbg !7651
  %136 = inttoptr i32 %135 to i8*, !dbg !7651
  %137 = ptrtoint i8* %133 to i64, !dbg !7651
  %138 = ptrtoint i8* %136 to i64, !dbg !7651
  %139 = add i64 %137, %138, !dbg !7651
  %140 = inttoptr i64 %139 to i8*, !dbg !7651
  store i8* %140, i8** %addr.7, align 8, !dbg !7651
  %141 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7651
  %142 = load i32* %141, align 8, !dbg !7651
  %143 = add i32 %142, 8, !dbg !7651
  %144 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 0, !dbg !7651
  store i32 %143, i32* %144, align 8, !dbg !7651
  br label %bb19, !dbg !7651

bb18:                                             ; preds = %bb16
  %145 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7651
  %146 = load i8** %145, align 8, !dbg !7651
  store i8* %146, i8** %addr.7, align 8, !dbg !7651
  %147 = getelementptr inbounds i8* %146, i64 8, !dbg !7651
  %148 = getelementptr inbounds %struct.__va_list_tag* %128, i32 0, i32 2, !dbg !7651
  store i8* %147, i8** %148, align 8, !dbg !7651
  br label %bb19, !dbg !7651

bb19:                                             ; preds = %bb18, %bb17
  %149 = load i8** %addr.7, align 8, !dbg !7651
  %150 = bitcast i8* %149 to i64*, !dbg !7651
  %151 = load i64* %150, align 8, !dbg !7651
  %152 = load %union.argvalue_t** %p, align 8, !dbg !7651
  %153 = getelementptr inbounds %union.argvalue_t* %152, i32 0, i32 0, !dbg !7651
  %154 = bitcast x86_fp80* %153 to i64*, !dbg !7651
  store i64 %151, i64* %154, align 16, !dbg !7651
  br label %bb38, !dbg !7651

bb20:                                             ; preds = %bb11, %bb11, %bb11, %bb11
  %155 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7652
  %156 = getelementptr inbounds %struct.ppfs_t* %155, i32 0, i32 7, !dbg !7652
  %157 = bitcast [1 x %struct.__va_list_tag]* %156 to %struct.__va_list_tag*, !dbg !7652
  %158 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7652
  %159 = load i32* %158, align 8, !dbg !7652
  %160 = icmp uge i32 %159, 48, !dbg !7652
  br i1 %160, label %bb22, label %bb21, !dbg !7652

bb21:                                             ; preds = %bb20
  %161 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 3, !dbg !7652
  %162 = load i8** %161, align 8, !dbg !7652
  %163 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7652
  %164 = load i32* %163, align 8, !dbg !7652
  %165 = inttoptr i32 %164 to i8*, !dbg !7652
  %166 = ptrtoint i8* %162 to i64, !dbg !7652
  %167 = ptrtoint i8* %165 to i64, !dbg !7652
  %168 = add i64 %166, %167, !dbg !7652
  %169 = inttoptr i64 %168 to i8*, !dbg !7652
  store i8* %169, i8** %addr.9, align 8, !dbg !7652
  %170 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7652
  %171 = load i32* %170, align 8, !dbg !7652
  %172 = add i32 %171, 8, !dbg !7652
  %173 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 0, !dbg !7652
  store i32 %172, i32* %173, align 8, !dbg !7652
  br label %bb23, !dbg !7652

bb22:                                             ; preds = %bb20
  %174 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7652
  %175 = load i8** %174, align 8, !dbg !7652
  store i8* %175, i8** %addr.9, align 8, !dbg !7652
  %176 = getelementptr inbounds i8* %175, i64 8, !dbg !7652
  %177 = getelementptr inbounds %struct.__va_list_tag* %157, i32 0, i32 2, !dbg !7652
  store i8* %176, i8** %177, align 8, !dbg !7652
  br label %bb23, !dbg !7652

bb23:                                             ; preds = %bb22, %bb21
  %178 = load i8** %addr.9, align 8, !dbg !7652
  %179 = bitcast i8* %178 to i32*, !dbg !7652
  %180 = load i32* %179, align 4, !dbg !7652
  %181 = load %union.argvalue_t** %p, align 8, !dbg !7652
  %182 = getelementptr inbounds %union.argvalue_t* %181, i32 0, i32 0, !dbg !7652
  %183 = bitcast x86_fp80* %182 to i32*, !dbg !7652
  store i32 %180, i32* %183, align 16, !dbg !7652
  br label %bb38, !dbg !7652

bb24:                                             ; preds = %bb11
  %184 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7653
  %185 = getelementptr inbounds %struct.ppfs_t* %184, i32 0, i32 7, !dbg !7653
  %186 = bitcast [1 x %struct.__va_list_tag]* %185 to %struct.__va_list_tag*, !dbg !7653
  %187 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7653
  %188 = load i32* %187, align 8, !dbg !7653
  %189 = icmp uge i32 %188, 48, !dbg !7653
  br i1 %189, label %bb26, label %bb25, !dbg !7653

bb25:                                             ; preds = %bb24
  %190 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 3, !dbg !7653
  %191 = load i8** %190, align 8, !dbg !7653
  %192 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7653
  %193 = load i32* %192, align 8, !dbg !7653
  %194 = inttoptr i32 %193 to i8*, !dbg !7653
  %195 = ptrtoint i8* %191 to i64, !dbg !7653
  %196 = ptrtoint i8* %194 to i64, !dbg !7653
  %197 = add i64 %195, %196, !dbg !7653
  %198 = inttoptr i64 %197 to i8*, !dbg !7653
  store i8* %198, i8** %addr.11, align 8, !dbg !7653
  %199 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7653
  %200 = load i32* %199, align 8, !dbg !7653
  %201 = add i32 %200, 8, !dbg !7653
  %202 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 0, !dbg !7653
  store i32 %201, i32* %202, align 8, !dbg !7653
  br label %bb27, !dbg !7653

bb26:                                             ; preds = %bb24
  %203 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7653
  %204 = load i8** %203, align 8, !dbg !7653
  store i8* %204, i8** %addr.11, align 8, !dbg !7653
  %205 = getelementptr inbounds i8* %204, i64 8, !dbg !7653
  %206 = getelementptr inbounds %struct.__va_list_tag* %186, i32 0, i32 2, !dbg !7653
  store i8* %205, i8** %206, align 8, !dbg !7653
  br label %bb27, !dbg !7653

bb27:                                             ; preds = %bb26, %bb25
  %207 = load i8** %addr.11, align 8, !dbg !7653
  %208 = bitcast i8* %207 to i32*, !dbg !7653
  %209 = load i32* %208, align 4, !dbg !7653
  %210 = load %union.argvalue_t** %p, align 8, !dbg !7653
  %211 = getelementptr inbounds %union.argvalue_t* %210, i32 0, i32 0, !dbg !7653
  %212 = bitcast x86_fp80* %211 to i32*, !dbg !7653
  store i32 %209, i32* %212, align 16, !dbg !7653
  br label %bb38, !dbg !7653

bb28:                                             ; preds = %bb11
  %213 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7654
  %214 = getelementptr inbounds %struct.ppfs_t* %213, i32 0, i32 7, !dbg !7654
  %215 = bitcast [1 x %struct.__va_list_tag]* %214 to %struct.__va_list_tag*, !dbg !7654
  %216 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7654
  %217 = load i32* %216, align 4, !dbg !7654
  %218 = icmp uge i32 %217, 176, !dbg !7654
  br i1 %218, label %bb30, label %bb29, !dbg !7654

bb29:                                             ; preds = %bb28
  %219 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 3, !dbg !7654
  %220 = load i8** %219, align 8, !dbg !7654
  %221 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7654
  %222 = load i32* %221, align 4, !dbg !7654
  %223 = inttoptr i32 %222 to i8*, !dbg !7654
  %224 = ptrtoint i8* %220 to i64, !dbg !7654
  %225 = ptrtoint i8* %223 to i64, !dbg !7654
  %226 = add i64 %224, %225, !dbg !7654
  %227 = inttoptr i64 %226 to i8*, !dbg !7654
  store i8* %227, i8** %addr.13, align 8, !dbg !7654
  %228 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7654
  %229 = load i32* %228, align 4, !dbg !7654
  %230 = add i32 %229, 16, !dbg !7654
  %231 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 1, !dbg !7654
  store i32 %230, i32* %231, align 4, !dbg !7654
  br label %bb31, !dbg !7654

bb30:                                             ; preds = %bb28
  %232 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7654
  %233 = load i8** %232, align 8, !dbg !7654
  store i8* %233, i8** %addr.13, align 8, !dbg !7654
  %234 = getelementptr inbounds i8* %233, i64 8, !dbg !7654
  %235 = getelementptr inbounds %struct.__va_list_tag* %215, i32 0, i32 2, !dbg !7654
  store i8* %234, i8** %235, align 8, !dbg !7654
  br label %bb31, !dbg !7654

bb31:                                             ; preds = %bb30, %bb29
  %236 = load i8** %addr.13, align 8, !dbg !7654
  %237 = bitcast i8* %236 to double*, !dbg !7654
  %238 = load double* %237, align 8, !dbg !7654
  %239 = load %union.argvalue_t** %p, align 8, !dbg !7654
  %240 = getelementptr inbounds %union.argvalue_t* %239, i32 0, i32 0, !dbg !7654
  %241 = bitcast x86_fp80* %240 to double*, !dbg !7654
  store double %238, double* %241, align 16, !dbg !7654
  br label %bb38, !dbg !7654

bb32:                                             ; preds = %bb11
  %242 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7655
  %243 = getelementptr inbounds %struct.ppfs_t* %242, i32 0, i32 7, !dbg !7655
  %244 = bitcast [1 x %struct.__va_list_tag]* %243 to %struct.__va_list_tag*, !dbg !7655
  %245 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7655
  %246 = load i8** %245, align 8, !dbg !7655
  %247 = getelementptr inbounds i8* %246, i64 15, !dbg !7655
  %248 = ptrtoint i8* %247 to i64, !dbg !7655
  %249 = and i64 %248, -16, !dbg !7655
  %250 = inttoptr i64 %249 to i8*, !dbg !7655
  store i8* %250, i8** %addr.15, align 8, !dbg !7655
  %251 = getelementptr inbounds i8* %250, i64 16, !dbg !7655
  %252 = getelementptr inbounds %struct.__va_list_tag* %244, i32 0, i32 2, !dbg !7655
  store i8* %251, i8** %252, align 8, !dbg !7655
  %253 = load i8** %addr.15, align 8, !dbg !7655
  %254 = bitcast i8* %253 to x86_fp80*, !dbg !7655
  %255 = load x86_fp80* %254, align 16, !dbg !7655
  %256 = load %union.argvalue_t** %p, align 8, !dbg !7655
  %257 = getelementptr inbounds %union.argvalue_t* %256, i32 0, i32 0, !dbg !7655
  store x86_fp80 %255, x86_fp80* %257, align 16, !dbg !7655
  br label %bb38, !dbg !7655

bb33:                                             ; preds = %bb11
  %258 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7656
  %259 = getelementptr inbounds %struct.ppfs_t* %258, i32 0, i32 7, !dbg !7656
  %260 = bitcast [1 x %struct.__va_list_tag]* %259 to %struct.__va_list_tag*, !dbg !7656
  %261 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7656
  %262 = load i32* %261, align 8, !dbg !7656
  %263 = icmp uge i32 %262, 48, !dbg !7656
  br i1 %263, label %bb35, label %bb34, !dbg !7656

bb34:                                             ; preds = %bb33
  %264 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 3, !dbg !7656
  %265 = load i8** %264, align 8, !dbg !7656
  %266 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7656
  %267 = load i32* %266, align 8, !dbg !7656
  %268 = inttoptr i32 %267 to i8*, !dbg !7656
  %269 = ptrtoint i8* %265 to i64, !dbg !7656
  %270 = ptrtoint i8* %268 to i64, !dbg !7656
  %271 = add i64 %269, %270, !dbg !7656
  %272 = inttoptr i64 %271 to i8*, !dbg !7656
  store i8* %272, i8** %addr.17, align 8, !dbg !7656
  %273 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7656
  %274 = load i32* %273, align 8, !dbg !7656
  %275 = add i32 %274, 8, !dbg !7656
  %276 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 0, !dbg !7656
  store i32 %275, i32* %276, align 8, !dbg !7656
  br label %bb36, !dbg !7656

bb35:                                             ; preds = %bb33
  %277 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7656
  %278 = load i8** %277, align 8, !dbg !7656
  store i8* %278, i8** %addr.17, align 8, !dbg !7656
  %279 = getelementptr inbounds i8* %278, i64 8, !dbg !7656
  %280 = getelementptr inbounds %struct.__va_list_tag* %260, i32 0, i32 2, !dbg !7656
  store i8* %279, i8** %280, align 8, !dbg !7656
  br label %bb36, !dbg !7656

bb36:                                             ; preds = %bb35, %bb34
  %281 = load i8** %addr.17, align 8, !dbg !7656
  %282 = bitcast i8* %281 to i8**, !dbg !7656
  %283 = load i8** %282, align 8, !dbg !7656
  %284 = load %union.argvalue_t** %p, align 8, !dbg !7656
  %285 = getelementptr inbounds %union.argvalue_t* %284, i32 0, i32 0, !dbg !7656
  %286 = bitcast x86_fp80* %285 to i8**, !dbg !7656
  store i8* %283, i8** %286, align 16, !dbg !7656
  br label %bb38, !dbg !7656

bb38:                                             ; preds = %bb36, %bb32, %bb31, %bb27, %bb23, %bb19, %bb15
  %287 = load %union.argvalue_t** %p, align 8, !dbg !7657
  %288 = getelementptr inbounds %union.argvalue_t* %287, i64 1, !dbg !7657
  store %union.argvalue_t* %288, %union.argvalue_t** %p, align 8, !dbg !7657
  br label %bb39, !dbg !7657

bb39:                                             ; preds = %bb11, %bb38, %bb10
  %289 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7658
  %290 = getelementptr inbounds %struct.ppfs_t* %289, i32 0, i32 3, !dbg !7658
  %291 = load i32* %290, align 16, !dbg !7658
  %292 = load i32* %i, align 4, !dbg !7658
  %293 = icmp sgt i32 %291, %292, !dbg !7658
  br i1 %293, label %bb11, label %bb45, !dbg !7658

bb41:                                             ; preds = %entry
  br i1 %11, label %bb42, label %bb43, !dbg !7659

bb42:                                             ; preds = %bb41
  %294 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7660
  %295 = getelementptr inbounds %struct.ppfs_t* %294, i32 0, i32 5, !dbg !7660
  %296 = getelementptr inbounds [4 x i8]* %295, i64 0, i64 0, !dbg !7660
  %297 = load i8* %296, align 1, !dbg !7660
  %298 = zext i8 %297 to i32, !dbg !7660
  %299 = load %union.argvalue_t** %p, align 8, !dbg !7660
  %300 = sext i32 %298 to i64, !dbg !7660
  %301 = getelementptr inbounds %union.argvalue_t* %299, i64 %300, !dbg !7660
  %302 = getelementptr inbounds %union.argvalue_t* %301, i64 -1, !dbg !7660
  %303 = getelementptr inbounds %union.argvalue_t* %302, i32 0, i32 0, !dbg !7660
  %304 = bitcast x86_fp80* %303 to i32*, !dbg !7660
  %305 = load i32* %304, align 16, !dbg !7660
  %306 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7660
  %307 = getelementptr inbounds %struct.ppfs_t* %306, i32 0, i32 1, !dbg !7660
  %308 = getelementptr inbounds %struct.printf_info* %307, i32 0, i32 1, !dbg !7660
  store i32 %305, i32* %308, align 4, !dbg !7660
  br label %bb43, !dbg !7660

bb43:                                             ; preds = %bb42, %bb41
  %309 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7661
  %310 = getelementptr inbounds %struct.ppfs_t* %309, i32 0, i32 1, !dbg !7661
  %311 = getelementptr inbounds %struct.printf_info* %310, i32 0, i32 0, !dbg !7661
  %312 = load i32* %311, align 8, !dbg !7661
  %313 = icmp eq i32 %312, -2147483648, !dbg !7661
  br i1 %313, label %bb44, label %bb45, !dbg !7661

bb44:                                             ; preds = %bb43
  %314 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7662
  %315 = getelementptr inbounds %struct.ppfs_t* %314, i32 0, i32 5, !dbg !7662
  %316 = getelementptr inbounds [4 x i8]* %315, i64 0, i64 1, !dbg !7662
  %317 = load i8* %316, align 1, !dbg !7662
  %318 = zext i8 %317 to i32, !dbg !7662
  %319 = load %union.argvalue_t** %p, align 8, !dbg !7662
  %320 = sext i32 %318 to i64, !dbg !7662
  %321 = getelementptr inbounds %union.argvalue_t* %319, i64 %320, !dbg !7662
  %322 = getelementptr inbounds %union.argvalue_t* %321, i64 -1, !dbg !7662
  %323 = getelementptr inbounds %union.argvalue_t* %322, i32 0, i32 0, !dbg !7662
  %324 = bitcast x86_fp80* %323 to i32*, !dbg !7662
  %325 = load i32* %324, align 16, !dbg !7662
  %326 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7662
  %327 = getelementptr inbounds %struct.ppfs_t* %326, i32 0, i32 1, !dbg !7662
  %328 = getelementptr inbounds %struct.printf_info* %327, i32 0, i32 0, !dbg !7662
  store i32 %325, i32* %328, align 8, !dbg !7662
  br label %bb45, !dbg !7662

bb45:                                             ; preds = %bb39, %bb44, %bb43
  %329 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7663
  %330 = getelementptr inbounds %struct.ppfs_t* %329, i32 0, i32 1, !dbg !7663
  %331 = getelementptr inbounds %struct.printf_info* %330, i32 0, i32 1, !dbg !7663
  %332 = load i32* %331, align 4, !dbg !7663
  %333 = icmp slt i32 %332, 0, !dbg !7663
  br i1 %333, label %bb46, label %return, !dbg !7663

bb46:                                             ; preds = %bb45
  %334 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7664
  %335 = getelementptr inbounds %struct.ppfs_t* %334, i32 0, i32 1, !dbg !7664
  %336 = getelementptr inbounds %struct.printf_info* %335, i32 0, i32 1, !dbg !7664
  %337 = load i32* %336, align 4, !dbg !7664
  %338 = sub nsw i32 0, %337, !dbg !7664
  %339 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7664
  %340 = getelementptr inbounds %struct.ppfs_t* %339, i32 0, i32 1, !dbg !7664
  %341 = getelementptr inbounds %struct.printf_info* %340, i32 0, i32 1, !dbg !7664
  store i32 %338, i32* %341, align 4, !dbg !7664
  %342 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7665
  %343 = getelementptr inbounds %struct.ppfs_t* %342, i32 0, i32 1, !dbg !7665
  %344 = getelementptr inbounds %struct.printf_info* %343, i32 0, i32 3, !dbg !7665
  %345 = load i32* %344, align 4, !dbg !7665
  %346 = or i32 %345, 8, !dbg !7665
  %347 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7665
  %348 = getelementptr inbounds %struct.ppfs_t* %347, i32 0, i32 1, !dbg !7665
  %349 = getelementptr inbounds %struct.printf_info* %348, i32 0, i32 3, !dbg !7665
  store i32 %346, i32* %349, align 4, !dbg !7665
  %350 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7666
  %351 = getelementptr inbounds %struct.ppfs_t* %350, i32 0, i32 1, !dbg !7666
  %352 = getelementptr inbounds %struct.printf_info* %351, i32 0, i32 3, !dbg !7666
  %353 = load i32* %352, align 4, !dbg !7666
  %354 = and i32 %353, -2, !dbg !7666
  %355 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7666
  %356 = getelementptr inbounds %struct.ppfs_t* %355, i32 0, i32 1, !dbg !7666
  %357 = getelementptr inbounds %struct.printf_info* %356, i32 0, i32 3, !dbg !7666
  store i32 %354, i32* %357, align 4, !dbg !7666
  %358 = load %struct.ppfs_t** %ppfs_addr, align 8, !dbg !7667
  %359 = getelementptr inbounds %struct.ppfs_t* %358, i32 0, i32 1, !dbg !7667
  %360 = getelementptr inbounds %struct.printf_info* %359, i32 0, i32 4, !dbg !7667
  store i32 32, i32* %360, align 8, !dbg !7667
  br label %return, !dbg !7667

return:                                           ; preds = %bb45, %bb46
  ret void, !dbg !7668
}

define hidden void @_store_inttype(i8* %dest, i32 %desttype, i64 %val) nounwind {
entry:
  %dest_addr = alloca i8*, align 8
  %desttype_addr = alloca i32, align 4
  %val_addr = alloca i64, align 8
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dest, i8** %dest_addr
  store i32 %desttype, i32* %desttype_addr
  store i64 %val, i64* %val_addr
  %0 = load i32* %desttype_addr, align 4, !dbg !7669
  %1 = icmp eq i32 %0, 256, !dbg !7669
  br i1 %1, label %bb, label %bb1, !dbg !7669

bb:                                               ; preds = %entry
  %2 = load i8** %dest_addr, align 8, !dbg !7671
  %3 = load i64* %val_addr, align 8, !dbg !7671
  %4 = trunc i64 %3 to i8, !dbg !7671
  store i8 %4, i8* %2, align 1, !dbg !7671
  br label %return, !dbg !7671

bb1:                                              ; preds = %entry
  %5 = load i32* %desttype_addr, align 4, !dbg !7672
  %6 = icmp eq i32 %5, 2048, !dbg !7672
  br i1 %6, label %bb2, label %bb3, !dbg !7672

bb2:                                              ; preds = %bb1
  %7 = load i8** %dest_addr, align 8, !dbg !7673
  %8 = bitcast i8* %7 to i64*, !dbg !7673
  %9 = load i64* %val_addr, align 8, !dbg !7673
  store i64 %9, i64* %8, align 8, !dbg !7673
  br label %return, !dbg !7673

bb3:                                              ; preds = %bb1
  %10 = load i32* %desttype_addr, align 4, !dbg !7674
  %11 = icmp eq i32 %10, 512, !dbg !7674
  br i1 %11, label %bb4, label %bb5, !dbg !7674

bb4:                                              ; preds = %bb3
  %12 = load i8** %dest_addr, align 8, !dbg !7675
  %13 = bitcast i8* %12 to i16*, !dbg !7675
  %14 = load i64* %val_addr, align 8, !dbg !7675
  %15 = trunc i64 %14 to i16, !dbg !7675
  store i16 %15, i16* %13, align 2, !dbg !7675
  br label %return, !dbg !7675

bb5:                                              ; preds = %bb3
  %16 = load i32* %desttype_addr, align 4, !dbg !7676
  %17 = icmp eq i32 %16, 1024, !dbg !7676
  %18 = load i8** %dest_addr, align 8, !dbg !7677
  br i1 %17, label %bb6, label %bb7, !dbg !7676

bb6:                                              ; preds = %bb5
  %19 = bitcast i8* %18 to i64*, !dbg !7677
  %20 = load i64* %val_addr, align 8, !dbg !7677
  store i64 %20, i64* %19, align 8, !dbg !7677
  br label %return, !dbg !7677

bb7:                                              ; preds = %bb5
  %21 = bitcast i8* %18 to i32*, !dbg !7678
  %22 = load i64* %val_addr, align 8, !dbg !7678
  %23 = trunc i64 %22 to i32, !dbg !7678
  store i32 %23, i32* %21, align 4, !dbg !7678
  br label %return, !dbg !7678

return:                                           ; preds = %bb, %bb2, %bb4, %bb6, %bb7
  ret void, !dbg !7679
}

define hidden i8* @_uintmaxtostr(i8* noalias %bufend, i64 %uval, i32 %base, i32 %alphacase) nounwind {
entry:
  %bufend_addr = alloca i8*, align 8
  %uval_addr = alloca i64, align 8
  %base_addr = alloca i32, align 4
  %alphacase_addr = alloca i32, align 4
  %retval = alloca i8*
  %0 = alloca i8*
  %iftmp.12 = alloca i8
  %negative = alloca i32
  %digit = alloca i32
  %H = alloca i32
  %L = alloca i32
  %high = alloca i32
  %low = alloca i32
  %rh = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %bufend, i8** %bufend_addr
  store i64 %uval, i64* %uval_addr
  store i32 %base, i32* %base_addr
  store i32 %alphacase, i32* %alphacase_addr
  store i32 0, i32* %negative, align 4, !dbg !7680
  %1 = load i32* %base_addr, align 4, !dbg !7682
  %2 = icmp slt i32 %1, 0, !dbg !7682
  br i1 %2, label %bb, label %bb2, !dbg !7682

bb:                                               ; preds = %entry
  %3 = load i32* %base_addr, align 4, !dbg !7683
  %4 = sub nsw i32 0, %3, !dbg !7683
  store i32 %4, i32* %base_addr, align 4, !dbg !7683
  %5 = load i64* %uval_addr, align 8, !dbg !7684
  %6 = icmp slt i64 %5, 0, !dbg !7684
  br i1 %6, label %bb1, label %bb2, !dbg !7684

bb1:                                              ; preds = %bb
  %7 = load i64* %uval_addr, align 8, !dbg !7685
  %8 = sub i64 0, %7, !dbg !7685
  store i64 %8, i64* %uval_addr, align 8, !dbg !7685
  store i32 1, i32* %negative, align 4, !dbg !7686
  br label %bb2, !dbg !7686

bb2:                                              ; preds = %bb1, %bb, %entry
  %9 = load i8** %bufend_addr, align 8, !dbg !7687
  store i8 0, i8* %9, align 1, !dbg !7687
  %10 = load i32* %base_addr, align 4, !dbg !7688
  %int_cast_to_i64 = zext i32 %10 to i64
  %11 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %12 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %12, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb2
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb2
  call void @klee_disable_symbex() nounwind
  %13 = udiv i32 -1, %10, !dbg !7688
  store i32 %13, i32* %H, align 4, !dbg !7688
  %14 = load i32* %base_addr, align 4, !dbg !7689
  %int_cast_to_i641 = zext i32 %14 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %16, label %bb.i11, label %klee_div_zero_check.exit12

bb.i11:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit12:                       ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %17 = urem i32 -1, %14, !dbg !7689
  %18 = add i32 %17, 1, !dbg !7689
  store i32 %18, i32* %L, align 4, !dbg !7689
  %19 = load i32* %base_addr, align 4, !dbg !7690
  %20 = load i32* %L, align 4, !dbg !7690
  %21 = icmp eq i32 %19, %20, !dbg !7690
  br i1 %21, label %bb3, label %bb4, !dbg !7690

bb3:                                              ; preds = %klee_div_zero_check.exit12
  %22 = load i32* %H, align 4, !dbg !7691
  %23 = add i32 %22, 1, !dbg !7691
  store i32 %23, i32* %H, align 4, !dbg !7691
  store i32 0, i32* %L, align 4, !dbg !7692
  br label %bb4, !dbg !7692

bb4:                                              ; preds = %bb3, %klee_div_zero_check.exit12
  %24 = load i64* %uval_addr, align 8, !dbg !7693
  %25 = trunc i64 %24 to i32, !dbg !7693
  store i32 %25, i32* %low, align 4, !dbg !7693
  %26 = load i64* %uval_addr, align 8, !dbg !7694
  %int_cast_to_i6410 = bitcast i64 32 to i64
  %27 = icmp ult i64 %int_cast_to_i6410, 64
  br i1 %27, label %klee_overshift_check.exit, label %bb.i29

bb.i29:                                           ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb4
  %28 = lshr i64 %26, 32, !dbg !7694
  %29 = trunc i64 %28 to i32, !dbg !7694
  store i32 %29, i32* %high, align 4, !dbg !7694
  br label %bb5, !dbg !7694

bb5:                                              ; preds = %bb11, %klee_overshift_check.exit
  %30 = load i32* %high, align 4, !dbg !7695
  %31 = icmp ne i32 %30, 0, !dbg !7695
  %32 = zext i1 %31 to i64, !dbg !7695
  %33 = icmp ne i64 %32, 0, !dbg !7695
  %34 = load i32* %base_addr, align 4, !dbg !7696
  br i1 %33, label %bb6, label %bb7, !dbg !7695

bb6:                                              ; preds = %bb5
  %35 = load i32* %high, align 4, !dbg !7696
  %int_cast_to_i642 = zext i32 %34 to i64
  %36 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %37 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %37, label %bb.i13, label %klee_div_zero_check.exit14

bb.i13:                                           ; preds = %bb6
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit14:                       ; preds = %bb6
  call void @klee_disable_symbex() nounwind
  %38 = urem i32 %35, %34, !dbg !7696
  store i32 %38, i32* %rh, align 4, !dbg !7696
  %39 = load i32* %base_addr, align 4, !dbg !7697
  %40 = load i32* %high, align 4, !dbg !7697
  %int_cast_to_i643 = zext i32 %39 to i64
  %41 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %42 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %42, label %bb.i15, label %klee_div_zero_check.exit16

bb.i15:                                           ; preds = %klee_div_zero_check.exit14
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit16:                       ; preds = %klee_div_zero_check.exit14
  call void @klee_disable_symbex() nounwind
  %43 = udiv i32 %40, %39, !dbg !7697
  store i32 %43, i32* %high, align 4, !dbg !7697
  %44 = load i32* %base_addr, align 4, !dbg !7698
  %45 = load i32* %low, align 4, !dbg !7698
  %int_cast_to_i644 = zext i32 %44 to i64
  %46 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %47 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %47, label %bb.i17, label %klee_div_zero_check.exit18

bb.i17:                                           ; preds = %klee_div_zero_check.exit16
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit18:                       ; preds = %klee_div_zero_check.exit16
  call void @klee_disable_symbex() nounwind
  %48 = urem i32 %45, %44, !dbg !7698
  %49 = load i32* %L, align 4, !dbg !7698
  %50 = load i32* %rh, align 4, !dbg !7698
  %51 = mul i32 %49, %50, !dbg !7698
  %52 = add i32 %48, %51, !dbg !7698
  store i32 %52, i32* %digit, align 4, !dbg !7698
  %53 = load i32* %base_addr, align 4, !dbg !7699
  %54 = load i32* %low, align 4, !dbg !7699
  %int_cast_to_i645 = zext i32 %53 to i64
  %55 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %56 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %56, label %bb.i19, label %klee_div_zero_check.exit20

bb.i19:                                           ; preds = %klee_div_zero_check.exit18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit20:                       ; preds = %klee_div_zero_check.exit18
  call void @klee_disable_symbex() nounwind
  %57 = udiv i32 %54, %53, !dbg !7699
  %58 = load i32* %H, align 4, !dbg !7699
  %59 = load i32* %rh, align 4, !dbg !7699
  %60 = mul i32 %58, %59, !dbg !7699
  %61 = add i32 %57, %60, !dbg !7699
  %62 = load i32* %base_addr, align 4, !dbg !7699
  %63 = load i32* %digit, align 4, !dbg !7699
  %int_cast_to_i646 = zext i32 %62 to i64
  %64 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %65 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %65, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %klee_div_zero_check.exit20
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %klee_div_zero_check.exit20
  call void @klee_disable_symbex() nounwind
  %66 = udiv i32 %63, %62, !dbg !7699
  %67 = add i32 %61, %66, !dbg !7699
  store i32 %67, i32* %low, align 4, !dbg !7699
  %68 = load i32* %base_addr, align 4, !dbg !7700
  %69 = load i32* %digit, align 4, !dbg !7700
  %int_cast_to_i647 = zext i32 %68 to i64
  %70 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %71 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %71, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %klee_div_zero_check.exit22
  call void @klee_disable_symbex() nounwind
  %72 = urem i32 %69, %68, !dbg !7700
  store i32 %72, i32* %digit, align 4, !dbg !7700
  br label %bb8, !dbg !7700

bb7:                                              ; preds = %bb5
  %73 = load i32* %low, align 4, !dbg !7701
  %int_cast_to_i648 = zext i32 %34 to i64
  %74 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %75 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %75, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb7
  call void @klee_disable_symbex() nounwind
  %76 = urem i32 %73, %34, !dbg !7701
  store i32 %76, i32* %digit, align 4, !dbg !7701
  %77 = load i32* %base_addr, align 4, !dbg !7702
  %78 = load i32* %low, align 4, !dbg !7702
  %int_cast_to_i649 = zext i32 %77 to i64
  %79 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %80 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %80, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %klee_div_zero_check.exit26
  call void @klee_disable_symbex() nounwind
  %81 = udiv i32 %78, %77, !dbg !7702
  store i32 %81, i32* %low, align 4, !dbg !7702
  br label %bb8, !dbg !7702

bb8:                                              ; preds = %klee_div_zero_check.exit28, %klee_div_zero_check.exit24
  %82 = load i8** %bufend_addr, align 8, !dbg !7703
  %83 = getelementptr inbounds i8* %82, i64 -1, !dbg !7703
  store i8* %83, i8** %bufend_addr, align 8, !dbg !7703
  %84 = load i32* %digit, align 4, !dbg !7703
  %85 = icmp ule i32 %84, 9, !dbg !7703
  %86 = load i32* %digit, align 4, !dbg !7703
  %87 = trunc i32 %86 to i8, !dbg !7703
  br i1 %85, label %bb9, label %bb10, !dbg !7703

bb9:                                              ; preds = %bb8
  %88 = add i8 %87, 48, !dbg !7703
  store i8 %88, i8* %iftmp.12, align 1, !dbg !7703
  br label %bb11, !dbg !7703

bb10:                                             ; preds = %bb8
  %89 = load i32* %alphacase_addr, align 4, !dbg !7703
  %90 = trunc i32 %89 to i8, !dbg !7703
  %91 = add i8 %87, %90, !dbg !7703
  store i8 %91, i8* %iftmp.12, align 1, !dbg !7703
  br label %bb11, !dbg !7703

bb11:                                             ; preds = %bb10, %bb9
  %92 = load i8** %bufend_addr, align 8, !dbg !7703
  %93 = load i8* %iftmp.12, align 1, !dbg !7703
  store i8 %93, i8* %92, align 1, !dbg !7703
  %94 = load i32* %low, align 4, !dbg !7704
  %95 = load i32* %high, align 4, !dbg !7704
  %96 = or i32 %94, %95, !dbg !7704
  %97 = icmp ne i32 %96, 0, !dbg !7704
  br i1 %97, label %bb5, label %bb12, !dbg !7704

bb12:                                             ; preds = %bb11
  %98 = load i32* %negative, align 4, !dbg !7705
  %99 = icmp ne i32 %98, 0, !dbg !7705
  br i1 %99, label %bb13, label %bb14, !dbg !7705

bb13:                                             ; preds = %bb12
  %100 = load i8** %bufend_addr, align 8, !dbg !7706
  %101 = getelementptr inbounds i8* %100, i64 -1, !dbg !7706
  store i8* %101, i8** %bufend_addr, align 8, !dbg !7706
  %102 = load i8** %bufend_addr, align 8, !dbg !7706
  store i8 45, i8* %102, align 1, !dbg !7706
  br label %bb14, !dbg !7706

bb14:                                             ; preds = %bb13, %bb12
  %103 = load i8** %bufend_addr, align 8, !dbg !7707
  store i8* %103, i8** %0, align 8, !dbg !7707
  %104 = load i8** %0, align 8, !dbg !7707
  store i8* %104, i8** %retval, align 8, !dbg !7707
  %retval15 = load i8** %retval, !dbg !7707
  ret i8* %retval15, !dbg !7707
}

define i32 @tcgetattr(i32 %fd, %struct.termios* %termios_p) nounwind {
entry:
  %fd_addr = alloca i32, align 4
  %termios_p_addr = alloca %struct.termios*, align 8
  %retval = alloca i32
  %0 = alloca i32
  %k_termios = alloca %struct.__kernel_termios
  %retval1 = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i32 %fd, i32* %fd_addr
  store %struct.termios* %termios_p, %struct.termios** %termios_p_addr
  %1 = load i32* %fd_addr, align 4, !dbg !7708
  %2 = call i32 (i32, i64, ...)* @ioctl(i32 %1, i64 21505, %struct.__kernel_termios* %k_termios) nounwind, !dbg !7708
  store i32 %2, i32* %retval1, align 4, !dbg !7708
  %3 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 0, !dbg !7710
  %4 = load i32* %3, align 4, !dbg !7710
  %5 = load %struct.termios** %termios_p_addr, align 8, !dbg !7710
  %6 = getelementptr inbounds %struct.termios* %5, i32 0, i32 0, !dbg !7710
  store i32 %4, i32* %6, align 4, !dbg !7710
  %7 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 1, !dbg !7711
  %8 = load i32* %7, align 4, !dbg !7711
  %9 = load %struct.termios** %termios_p_addr, align 8, !dbg !7711
  %10 = getelementptr inbounds %struct.termios* %9, i32 0, i32 1, !dbg !7711
  store i32 %8, i32* %10, align 4, !dbg !7711
  %11 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 2, !dbg !7712
  %12 = load i32* %11, align 4, !dbg !7712
  %13 = load %struct.termios** %termios_p_addr, align 8, !dbg !7712
  %14 = getelementptr inbounds %struct.termios* %13, i32 0, i32 2, !dbg !7712
  store i32 %12, i32* %14, align 4, !dbg !7712
  %15 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 3, !dbg !7713
  %16 = load i32* %15, align 4, !dbg !7713
  %17 = load %struct.termios** %termios_p_addr, align 8, !dbg !7713
  %18 = getelementptr inbounds %struct.termios* %17, i32 0, i32 3, !dbg !7713
  store i32 %16, i32* %18, align 4, !dbg !7713
  %19 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 4, !dbg !7714
  %20 = load i8* %19, align 4, !dbg !7714
  %21 = load %struct.termios** %termios_p_addr, align 8, !dbg !7714
  %22 = getelementptr inbounds %struct.termios* %21, i32 0, i32 4, !dbg !7714
  store i8 %20, i8* %22, align 4, !dbg !7714
  %23 = load %struct.termios** %termios_p_addr, align 8, !dbg !7715
  %24 = getelementptr inbounds %struct.termios* %23, i32 0, i32 5, !dbg !7715
  %25 = getelementptr inbounds [32 x i8]* %24, i64 0, i64 0, !dbg !7715
  %26 = getelementptr inbounds %struct.__kernel_termios* %k_termios, i32 0, i32 5, !dbg !7715
  %27 = getelementptr inbounds [19 x i8]* %26, i64 0, i64 0, !dbg !7715
  %28 = call i8* @mempcpy(i8* noalias %25, i8* noalias %27, i64 19) nounwind, !dbg !7715
  %29 = call i8* @memset(i8* %28, i32 0, i64 13) nounwind, !dbg !7715
  %30 = load i32* %retval1, align 4, !dbg !7716
  store i32 %30, i32* %0, align 4, !dbg !7716
  %31 = load i32* %0, align 4, !dbg !7716
  store i32 %31, i32* %retval, align 4, !dbg !7716
  %retval2 = load i32* %retval, !dbg !7716
  ret i32 %retval2, !dbg !7716
}

define i64 @wcrtomb(i8* noalias %s, i32 %wc, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %s_addr = alloca i8*, align 8
  %wc_addr = alloca i32, align 4
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %iftmp.0 = alloca i64
  %0 = alloca i64
  %wcbuf = alloca [1 x i32]
  %pwc = alloca i32*
  %r = alloca i64
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %s, i8** %s_addr
  store i32 %wc, i32* %wc_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %s_addr, align 8, !dbg !7717
  %2 = icmp eq i8* %1, null, !dbg !7717
  br i1 %2, label %bb, label %bb2, !dbg !7717

bb:                                               ; preds = %entry
  %buf1 = bitcast [16 x i8]* %buf to i8*, !dbg !7719
  store i8* %buf1, i8** %s_addr, align 8, !dbg !7719
  store i32 0, i32* %wc_addr, align 4, !dbg !7720
  br label %bb2, !dbg !7720

bb2:                                              ; preds = %bb, %entry
  %wcbuf3 = bitcast [1 x i32]* %wcbuf to i32*, !dbg !7721
  store i32* %wcbuf3, i32** %pwc, align 8, !dbg !7721
  %3 = getelementptr inbounds [1 x i32]* %wcbuf, i64 0, i64 0, !dbg !7722
  %4 = load i32* %wc_addr, align 4, !dbg !7722
  store i32 %4, i32* %3, align 4, !dbg !7722
  %5 = load i8** %s_addr, align 8, !dbg !7723
  %6 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7723
  %7 = call i64 @wcsnrtombs(i8* noalias %5, i32** noalias %pwc, i64 1, i64 16, %struct.__mbstate_t* noalias %6) nounwind, !dbg !7723
  store i64 %7, i64* %r, align 8, !dbg !7723
  %8 = load i64* %r, align 8, !dbg !7724
  %9 = icmp ne i64 %8, 0, !dbg !7724
  br i1 %9, label %bb4, label %bb5, !dbg !7724

bb4:                                              ; preds = %bb2
  %10 = load i64* %r, align 8, !dbg !7724
  store i64 %10, i64* %iftmp.0, align 8, !dbg !7724
  br label %bb6, !dbg !7724

bb5:                                              ; preds = %bb2
  store i64 1, i64* %iftmp.0, align 8, !dbg !7724
  br label %bb6, !dbg !7724

bb6:                                              ; preds = %bb5, %bb4
  %11 = load i64* %iftmp.0, align 8, !dbg !7724
  store i64 %11, i64* %0, align 8, !dbg !7724
  %12 = load i64* %0, align 8, !dbg !7724
  store i64 %12, i64* %retval, align 8, !dbg !7724
  %retval7 = load i64* %retval, !dbg !7724
  ret i64 %retval7, !dbg !7724
}

define i64 @wcsrtombs(i8* noalias %dst, i32** noalias %src, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  %1 = load i8** %dst_addr, align 8, !dbg !7725
  %2 = load i32*** %src_addr, align 8, !dbg !7725
  %3 = load i64* %len_addr, align 8, !dbg !7725
  %4 = load %struct.__mbstate_t** %ps_addr, align 8, !dbg !7725
  %5 = call i64 @wcsnrtombs(i8* noalias %1, i32** noalias %2, i64 -1, i64 %3, %struct.__mbstate_t* noalias %4) nounwind, !dbg !7725
  store i64 %5, i64* %0, align 8, !dbg !7725
  %6 = load i64* %0, align 8, !dbg !7725
  store i64 %6, i64* %retval, align 8, !dbg !7725
  %retval1 = load i64* %retval, !dbg !7725
  ret i64 %retval1, !dbg !7725
}

define hidden x86_fp80 @__strtofpmax(i8* %str, i8** %endptr, i32 %exponent_power) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %exponent_power_addr = alloca i32, align 4
  %retval = alloca x86_fp80
  %0 = alloca x86_fp80
  %number = alloca x86_fp80
  %p_base = alloca x86_fp80
  %pos0 = alloca i8*
  %pos1 = alloca i8*
  %pos = alloca i8*
  %exponent_temp = alloca i32
  %negative = alloca i32
  %num_digits = alloca i32
  %i = alloca i32
  %j = alloca i32
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %exponent_power, i32* %exponent_power_addr
  store x86_fp80 0xK4002A000000000000000, x86_fp80* %p_base, align 16, !dbg !7727
  %1 = load i8** %str_addr, align 8, !dbg !7729
  store i8* %1, i8** %pos, align 8, !dbg !7729
  br label %bb1, !dbg !7729

bb:                                               ; preds = %bb1
  %2 = load i8** %pos, align 8, !dbg !7730
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !7730
  store i8* %3, i8** %pos, align 8, !dbg !7730
  br label %bb1, !dbg !7730

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !7731
  %5 = load i8** %pos, align 8, !dbg !7731
  %6 = load i8* %5, align 1, !dbg !7731
  %7 = sext i8 %6 to i32, !dbg !7731
  %8 = sext i32 %7 to i64, !dbg !7731
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !7731
  %10 = load i16* %9, align 1, !dbg !7731
  %11 = zext i16 %10 to i32, !dbg !7731
  %12 = and i32 %11, 8192, !dbg !7731
  %13 = icmp ne i32 %12, 0, !dbg !7731
  br i1 %13, label %bb, label %bb2, !dbg !7731

bb2:                                              ; preds = %bb1
  store i32 0, i32* %negative, align 4, !dbg !7732
  %14 = load i8** %pos, align 8, !dbg !7733
  %15 = load i8* %14, align 1, !dbg !7733
  %16 = sext i8 %15 to i32, !dbg !7733
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !7733

bb3:                                              ; preds = %bb2
  store i32 1, i32* %negative, align 4, !dbg !7734
  br label %bb4, !dbg !7734

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %pos, align 8, !dbg !7735
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !7735
  store i8* %18, i8** %pos, align 8, !dbg !7735
  br label %bb5, !dbg !7735

bb5:                                              ; preds = %bb4, %bb2
  store x86_fp80 0xK00000000000000000000, x86_fp80* %number, align 16, !dbg !7736
  store i32 -1, i32* %num_digits, align 4, !dbg !7737
  store i8* null, i8** %pos0, align 8, !dbg !7738
  br label %bb13, !dbg !7739

bb6:                                              ; preds = %bb13
  %19 = load i32* %num_digits, align 4, !dbg !7740
  %20 = icmp slt i32 %19, 0, !dbg !7740
  br i1 %20, label %bb7, label %bb8, !dbg !7740

bb7:                                              ; preds = %bb6
  %21 = load i32* %num_digits, align 4, !dbg !7741
  %22 = add nsw i32 %21, 1, !dbg !7741
  store i32 %22, i32* %num_digits, align 4, !dbg !7741
  br label %bb8, !dbg !7741

bb8:                                              ; preds = %bb7, %bb6
  %23 = load i32* %num_digits, align 4, !dbg !7742
  %24 = icmp ne i32 %23, 0, !dbg !7742
  br i1 %24, label %bb10, label %bb9, !dbg !7742

bb9:                                              ; preds = %bb8
  %25 = load i8** %pos, align 8, !dbg !7742
  %26 = load i8* %25, align 1, !dbg !7742
  %27 = icmp ne i8 %26, 48, !dbg !7742
  br i1 %27, label %bb10, label %bb12, !dbg !7742

bb10:                                             ; preds = %bb9, %bb8
  %28 = load i32* %num_digits, align 4, !dbg !7743
  %29 = add nsw i32 %28, 1, !dbg !7743
  store i32 %29, i32* %num_digits, align 4, !dbg !7743
  %30 = load i32* %num_digits, align 4, !dbg !7744
  %31 = icmp sle i32 %30, 21, !dbg !7744
  br i1 %31, label %bb11, label %bb12, !dbg !7744

bb11:                                             ; preds = %bb10
  %32 = load x86_fp80* %number, align 16, !dbg !7745
  %33 = load x86_fp80* %p_base, align 16, !dbg !7745
  %34 = fmul x86_fp80 %32, %33, !dbg !7745
  %35 = load i8** %pos, align 8, !dbg !7745
  %36 = load i8* %35, align 1, !dbg !7745
  %37 = sext i8 %36 to i32, !dbg !7745
  %38 = sub nsw i32 %37, 48, !dbg !7745
  %39 = sitofp i32 %38 to x86_fp80, !dbg !7745
  %40 = fadd x86_fp80 %34, %39, !dbg !7745
  store x86_fp80 %40, x86_fp80* %number, align 16, !dbg !7745
  br label %bb12, !dbg !7745

bb12:                                             ; preds = %bb11, %bb10, %bb9
  %41 = load i8** %pos, align 8, !dbg !7746
  %42 = getelementptr inbounds i8* %41, i64 1, !dbg !7746
  store i8* %42, i8** %pos, align 8, !dbg !7746
  br label %bb13, !dbg !7746

bb13:                                             ; preds = %bb5, %bb16, %bb12
  %43 = load i16** @__ctype_b, align 8, !dbg !7747
  %44 = load i8** %pos, align 8, !dbg !7747
  %45 = load i8* %44, align 1, !dbg !7747
  %46 = sext i8 %45 to i32, !dbg !7747
  %47 = sext i32 %46 to i64, !dbg !7747
  %48 = getelementptr inbounds i16* %43, i64 %47, !dbg !7747
  %49 = load i16* %48, align 1, !dbg !7747
  %50 = zext i16 %49 to i32, !dbg !7747
  %51 = and i32 %50, 2048, !dbg !7747
  %52 = icmp ne i32 %51, 0, !dbg !7747
  br i1 %52, label %bb6, label %bb14, !dbg !7747

bb14:                                             ; preds = %bb13
  %53 = load i8** %pos, align 8, !dbg !7748
  %54 = load i8* %53, align 1, !dbg !7748
  %55 = icmp eq i8 %54, 46, !dbg !7748
  br i1 %55, label %bb15, label %bb17, !dbg !7748

bb15:                                             ; preds = %bb14
  %56 = load i8** %pos0, align 8, !dbg !7748
  %57 = icmp eq i8* %56, null, !dbg !7748
  br i1 %57, label %bb16, label %bb17, !dbg !7748

bb16:                                             ; preds = %bb15
  %58 = load i8** %pos, align 8, !dbg !7749
  %59 = getelementptr inbounds i8* %58, i64 1, !dbg !7749
  store i8* %59, i8** %pos, align 8, !dbg !7749
  %60 = load i8** %pos, align 8, !dbg !7749
  store i8* %60, i8** %pos0, align 8, !dbg !7749
  br label %bb13, !dbg !7749

bb17:                                             ; preds = %bb15, %bb14
  %61 = load i32* %num_digits, align 4, !dbg !7750
  %62 = icmp slt i32 %61, 0, !dbg !7750
  br i1 %62, label %bb18, label %bb28, !dbg !7750

bb18:                                             ; preds = %bb17
  %63 = load i8** %pos0, align 8, !dbg !7751
  %64 = icmp eq i8* %63, null, !dbg !7751
  br i1 %64, label %bb19, label %bb27, !dbg !7751

bb19:                                             ; preds = %bb18
  store i32 0, i32* %i, align 4, !dbg !7752
  br label %bb20, !dbg !7752

bb20:                                             ; preds = %bb26, %bb19
  store i32 0, i32* %j, align 4, !dbg !7754
  br label %bb25, !dbg !7754

bb21:                                             ; preds = %bb25
  %65 = load i32* %j, align 4, !dbg !7756
  %66 = add nsw i32 %65, 1, !dbg !7756
  store i32 %66, i32* %j, align 4, !dbg !7756
  %67 = load i32* %i, align 4, !dbg !7757
  %68 = add nsw i32 %67, 1, !dbg !7757
  %69 = load i32* %j, align 4, !dbg !7757
  %70 = add nsw i32 %68, %69, !dbg !7757
  %71 = sext i32 %70 to i64, !dbg !7757
  %72 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %71, !dbg !7757
  %73 = load i8* %72, align 1, !dbg !7757
  %74 = icmp eq i8 %73, 0, !dbg !7757
  br i1 %74, label %bb22, label %bb25, !dbg !7757

bb22:                                             ; preds = %bb21
  %75 = load i32* %i, align 4, !dbg !7758
  %76 = sitofp i32 %75 to double, !dbg !7758
  %77 = fdiv double %76, 0.000000e+00, !dbg !7758
  %78 = fpext double %77 to x86_fp80, !dbg !7758
  store x86_fp80 %78, x86_fp80* %number, align 16, !dbg !7758
  %79 = load i32* %negative, align 4, !dbg !7759
  %80 = icmp ne i32 %79, 0, !dbg !7759
  br i1 %80, label %bb23, label %bb24, !dbg !7759

bb23:                                             ; preds = %bb22
  %81 = load x86_fp80* %number, align 16, !dbg !7760
  %82 = fsub x86_fp80 0xK80000000000000000000, %81, !dbg !7760
  store x86_fp80 %82, x86_fp80* %number, align 16, !dbg !7760
  br label %bb24, !dbg !7760

bb24:                                             ; preds = %bb23, %bb22
  %83 = load i32* %i, align 4, !dbg !7761
  %84 = sext i32 %83 to i64, !dbg !7761
  %85 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %84, !dbg !7761
  %86 = load i8* %85, align 1, !dbg !7761
  %87 = sext i8 %86 to i32, !dbg !7761
  %88 = sub nsw i32 %87, 2, !dbg !7761
  %89 = load i8** %pos, align 8, !dbg !7761
  %90 = sext i32 %88 to i64, !dbg !7761
  %91 = getelementptr inbounds i8* %89, i64 %90, !dbg !7761
  store i8* %91, i8** %pos, align 8, !dbg !7761
  br label %DONE, !dbg !7761

bb25:                                             ; preds = %bb21, %bb20
  %92 = load i16** @__ctype_tolower, align 8, !dbg !7762
  %93 = load i8** %pos, align 8, !dbg !7762
  %94 = load i32* %j, align 4, !dbg !7762
  %95 = sext i32 %94 to i64, !dbg !7762
  %96 = getelementptr inbounds i8* %93, i64 %95, !dbg !7762
  %97 = load i8* %96, align 1, !dbg !7762
  %98 = sext i8 %97 to i32, !dbg !7762
  %99 = sext i32 %98 to i64, !dbg !7762
  %100 = getelementptr inbounds i16* %92, i64 %99, !dbg !7762
  %101 = load i16* %100, align 1, !dbg !7762
  %102 = load i32* %i, align 4, !dbg !7762
  %103 = add nsw i32 %102, 1, !dbg !7762
  %104 = load i32* %j, align 4, !dbg !7762
  %105 = add nsw i32 %103, %104, !dbg !7762
  %106 = sext i32 %105 to i64, !dbg !7762
  %107 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %106, !dbg !7762
  %108 = load i8* %107, align 1, !dbg !7762
  %109 = sext i8 %108 to i16, !dbg !7762
  %110 = icmp eq i16 %101, %109, !dbg !7762
  br i1 %110, label %bb21, label %bb26, !dbg !7762

bb26:                                             ; preds = %bb25
  %111 = load i32* %i, align 4, !dbg !7763
  %112 = sext i32 %111 to i64, !dbg !7763
  %113 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %112, !dbg !7763
  %114 = load i8* %113, align 1, !dbg !7763
  %115 = sext i8 %114 to i32, !dbg !7763
  %116 = load i32* %i, align 4, !dbg !7763
  %117 = add nsw i32 %115, %116, !dbg !7763
  store i32 %117, i32* %i, align 4, !dbg !7763
  %118 = load i32* %i, align 4, !dbg !7764
  %119 = sext i32 %118 to i64, !dbg !7764
  %120 = getelementptr inbounds [21 x i8]* @nan_inf_str.2180, i64 0, i64 %119, !dbg !7764
  %121 = load i8* %120, align 1, !dbg !7764
  %122 = icmp ne i8 %121, 0, !dbg !7764
  br i1 %122, label %bb20, label %bb27, !dbg !7764

bb27:                                             ; preds = %bb26, %bb18
  %123 = load i8** %str_addr, align 8, !dbg !7765
  store i8* %123, i8** %pos, align 8, !dbg !7765
  br label %DONE, !dbg !7765

bb28:                                             ; preds = %bb17
  %124 = load i32* %num_digits, align 4, !dbg !7766
  %125 = icmp sgt i32 %124, 21, !dbg !7766
  br i1 %125, label %bb29, label %bb30, !dbg !7766

bb29:                                             ; preds = %bb28
  %126 = load i32* %num_digits, align 4, !dbg !7767
  %127 = sub nsw i32 %126, 21, !dbg !7767
  %128 = load i32* %exponent_power_addr, align 4, !dbg !7767
  %129 = add nsw i32 %127, %128, !dbg !7767
  store i32 %129, i32* %exponent_power_addr, align 4, !dbg !7767
  br label %bb30, !dbg !7767

bb30:                                             ; preds = %bb29, %bb28
  %130 = load i8** %pos0, align 8, !dbg !7768
  %131 = icmp ne i8* %130, null, !dbg !7768
  br i1 %131, label %bb31, label %bb32, !dbg !7768

bb31:                                             ; preds = %bb30
  %132 = load i8** %pos0, align 8, !dbg !7769
  %133 = ptrtoint i8* %132 to i64, !dbg !7769
  %134 = trunc i64 %133 to i32, !dbg !7769
  %135 = load i8** %pos, align 8, !dbg !7769
  %136 = ptrtoint i8* %135 to i64, !dbg !7769
  %137 = trunc i64 %136 to i32, !dbg !7769
  %138 = sub i32 %134, %137, !dbg !7769
  %139 = load i32* %exponent_power_addr, align 4, !dbg !7769
  %140 = add i32 %138, %139, !dbg !7769
  store i32 %140, i32* %exponent_power_addr, align 4, !dbg !7769
  br label %bb32, !dbg !7769

bb32:                                             ; preds = %bb31, %bb30
  %141 = load i32* %negative, align 4, !dbg !7770
  %142 = icmp ne i32 %141, 0, !dbg !7770
  br i1 %142, label %bb33, label %bb34, !dbg !7770

bb33:                                             ; preds = %bb32
  %143 = load x86_fp80* %number, align 16, !dbg !7771
  %144 = fsub x86_fp80 0xK80000000000000000000, %143, !dbg !7771
  store x86_fp80 %144, x86_fp80* %number, align 16, !dbg !7771
  br label %bb34, !dbg !7771

bb34:                                             ; preds = %bb33, %bb32
  %145 = load i8** %pos, align 8, !dbg !7772
  %146 = load i8* %145, align 1, !dbg !7772
  %147 = or i8 %146, 32, !dbg !7772
  %148 = icmp eq i8 %147, 101, !dbg !7772
  br i1 %148, label %bb35, label %bb46, !dbg !7772

bb35:                                             ; preds = %bb34
  %149 = load i8** %pos, align 8, !dbg !7773
  store i8* %149, i8** %pos1, align 8, !dbg !7773
  store i32 1, i32* %negative, align 4, !dbg !7774
  %150 = load i8** %pos, align 8, !dbg !7775
  %151 = getelementptr inbounds i8* %150, i64 1, !dbg !7775
  store i8* %151, i8** %pos, align 8, !dbg !7775
  %152 = load i8** %pos, align 8, !dbg !7775
  %153 = load i8* %152, align 1, !dbg !7775
  %154 = sext i8 %153 to i32, !dbg !7775
  switch i32 %154, label %bb38 [
    i32 43, label %bb37
    i32 45, label %bb36
  ], !dbg !7775

bb36:                                             ; preds = %bb35
  store i32 -1, i32* %negative, align 4, !dbg !7776
  br label %bb37, !dbg !7776

bb37:                                             ; preds = %bb36, %bb35
  %155 = load i8** %pos, align 8, !dbg !7777
  %156 = getelementptr inbounds i8* %155, i64 1, !dbg !7777
  store i8* %156, i8** %pos, align 8, !dbg !7777
  br label %bb38, !dbg !7777

bb38:                                             ; preds = %bb37, %bb35
  %157 = load i8** %pos, align 8, !dbg !7778
  store i8* %157, i8** %pos0, align 8, !dbg !7778
  store i32 0, i32* %exponent_temp, align 4, !dbg !7779
  br label %bb42, !dbg !7779

bb39:                                             ; preds = %bb42
  %158 = load i32* %exponent_temp, align 4, !dbg !7780
  %159 = icmp sle i32 %158, 4972, !dbg !7780
  br i1 %159, label %bb40, label %bb41, !dbg !7780

bb40:                                             ; preds = %bb39
  %160 = load i32* %exponent_temp, align 4, !dbg !7781
  %161 = mul nsw i32 %160, 10, !dbg !7781
  %162 = load i8** %pos, align 8, !dbg !7781
  %163 = load i8* %162, align 1, !dbg !7781
  %164 = sext i8 %163 to i32, !dbg !7781
  %165 = sub nsw i32 %164, 48, !dbg !7781
  %166 = add nsw i32 %161, %165, !dbg !7781
  store i32 %166, i32* %exponent_temp, align 4, !dbg !7781
  br label %bb41, !dbg !7781

bb41:                                             ; preds = %bb40, %bb39
  %167 = load i8** %pos, align 8, !dbg !7782
  %168 = getelementptr inbounds i8* %167, i64 1, !dbg !7782
  store i8* %168, i8** %pos, align 8, !dbg !7782
  br label %bb42, !dbg !7782

bb42:                                             ; preds = %bb41, %bb38
  %169 = load i16** @__ctype_b, align 8, !dbg !7783
  %170 = load i8** %pos, align 8, !dbg !7783
  %171 = load i8* %170, align 1, !dbg !7783
  %172 = sext i8 %171 to i32, !dbg !7783
  %173 = sext i32 %172 to i64, !dbg !7783
  %174 = getelementptr inbounds i16* %169, i64 %173, !dbg !7783
  %175 = load i16* %174, align 1, !dbg !7783
  %176 = zext i16 %175 to i32, !dbg !7783
  %177 = and i32 %176, 2048, !dbg !7783
  %178 = icmp ne i32 %177, 0, !dbg !7783
  br i1 %178, label %bb39, label %bb43, !dbg !7783

bb43:                                             ; preds = %bb42
  %179 = load i8** %pos, align 8, !dbg !7784
  %180 = load i8** %pos0, align 8, !dbg !7784
  %181 = icmp eq i8* %179, %180, !dbg !7784
  br i1 %181, label %bb44, label %bb45, !dbg !7784

bb44:                                             ; preds = %bb43
  %182 = load i8** %pos1, align 8, !dbg !7785
  store i8* %182, i8** %pos, align 8, !dbg !7785
  br label %bb45, !dbg !7785

bb45:                                             ; preds = %bb44, %bb43
  %183 = load i32* %negative, align 4, !dbg !7786
  %184 = load i32* %exponent_temp, align 4, !dbg !7786
  %185 = mul nsw i32 %183, %184, !dbg !7786
  %186 = load i32* %exponent_power_addr, align 4, !dbg !7786
  %187 = add nsw i32 %185, %186, !dbg !7786
  store i32 %187, i32* %exponent_power_addr, align 4, !dbg !7786
  br label %bb46, !dbg !7786

bb46:                                             ; preds = %bb45, %bb34
  %188 = load x86_fp80* %number, align 16, !dbg !7787
  %189 = fcmp oeq x86_fp80 %188, 0xK00000000000000000000, !dbg !7787
  br i1 %189, label %DONE, label %bb47, !dbg !7787

bb47:                                             ; preds = %bb46
  %190 = load i32* %exponent_power_addr, align 4, !dbg !7788
  store i32 %190, i32* %exponent_temp, align 4, !dbg !7788
  %191 = load i32* %exponent_temp, align 4, !dbg !7789
  %192 = icmp slt i32 %191, 0, !dbg !7789
  br i1 %192, label %bb48, label %bb55, !dbg !7789

bb48:                                             ; preds = %bb47
  %193 = load i32* %exponent_temp, align 4, !dbg !7790
  %194 = sub nsw i32 0, %193, !dbg !7790
  store i32 %194, i32* %exponent_temp, align 4, !dbg !7790
  br label %bb55, !dbg !7790

bb50:                                             ; preds = %bb55
  %195 = load i32* %exponent_temp, align 4, !dbg !7791
  %196 = and i32 %195, 1, !dbg !7791
  %197 = trunc i32 %196 to i8, !dbg !7791
  %toBool = icmp ne i8 %197, 0, !dbg !7791
  br i1 %toBool, label %bb51, label %bb54, !dbg !7791

bb51:                                             ; preds = %bb50
  %198 = load i32* %exponent_power_addr, align 4, !dbg !7792
  %199 = icmp slt i32 %198, 0, !dbg !7792
  %200 = load x86_fp80* %number, align 16, !dbg !7793
  %201 = load x86_fp80* %p_base, align 16, !dbg !7793
  br i1 %199, label %bb52, label %bb53, !dbg !7792

bb52:                                             ; preds = %bb51
  %202 = fdiv x86_fp80 %200, %201, !dbg !7793
  store x86_fp80 %202, x86_fp80* %number, align 16, !dbg !7793
  br label %bb54, !dbg !7793

bb53:                                             ; preds = %bb51
  %203 = fmul x86_fp80 %200, %201, !dbg !7794
  store x86_fp80 %203, x86_fp80* %number, align 16, !dbg !7794
  br label %bb54, !dbg !7794

bb54:                                             ; preds = %bb53, %bb52, %bb50
  %204 = load i32* %exponent_temp, align 4, !dbg !7795
  %int_cast_to_i64 = zext i32 1 to i64
  %205 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %205, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb54
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb54
  %206 = ashr i32 %204, 1, !dbg !7795
  store i32 %206, i32* %exponent_temp, align 4, !dbg !7795
  %207 = load x86_fp80* %p_base, align 16, !dbg !7796
  %208 = load x86_fp80* %p_base, align 16, !dbg !7796
  %209 = fmul x86_fp80 %207, %208, !dbg !7796
  store x86_fp80 %209, x86_fp80* %p_base, align 16, !dbg !7796
  br label %bb55, !dbg !7796

bb55:                                             ; preds = %bb47, %bb48, %klee_overshift_check.exit
  %210 = load i32* %exponent_temp, align 4, !dbg !7797
  %211 = icmp ne i32 %210, 0, !dbg !7797
  br i1 %211, label %bb50, label %bb56, !dbg !7797

bb56:                                             ; preds = %bb55
  %212 = load x86_fp80* %number, align 16, !dbg !7798
  %213 = fdiv x86_fp80 %212, 0xK40018000000000000000, !dbg !7798
  %214 = load x86_fp80* %number, align 16, !dbg !7798
  %215 = fcmp oeq x86_fp80 %213, %214, !dbg !7798
  br i1 %215, label %bb57, label %DONE, !dbg !7798

bb57:                                             ; preds = %bb56
  store i32 34, i32* @errno, align 4, !dbg !7799
  br label %DONE, !dbg !7800

DONE:                                             ; preds = %bb57, %bb56, %bb46, %bb27, %bb24
  %216 = load i8*** %endptr_addr, align 8, !dbg !7801
  %217 = icmp ne i8** %216, null, !dbg !7801
  br i1 %217, label %bb58, label %bb59, !dbg !7801

bb58:                                             ; preds = %DONE
  %218 = load i8*** %endptr_addr, align 8, !dbg !7802
  %219 = load i8** %pos, align 8, !dbg !7802
  store i8* %219, i8** %218, align 8, !dbg !7802
  br label %bb59, !dbg !7802

bb59:                                             ; preds = %bb58, %DONE
  %220 = load x86_fp80* %number, align 16, !dbg !7803
  store x86_fp80 %220, x86_fp80* %0, align 16, !dbg !7803
  %221 = load x86_fp80* %0, align 16, !dbg !7803
  store x86_fp80 %221, x86_fp80* %retval, align 16, !dbg !7803
  %retval60 = load x86_fp80* %retval, !dbg !7803
  ret x86_fp80 %retval60, !dbg !7803
}

define hidden i64 @_stdlib_strto_l(i8* noalias %str, i8** noalias %endptr, i32 %base, i32 %sflag) nounwind {
entry:
  %str_addr = alloca i8*, align 8
  %endptr_addr = alloca i8**, align 8
  %base_addr = alloca i32, align 4
  %sflag_addr = alloca i32, align 4
  %retval = alloca i64
  %iftmp.6 = alloca i64
  %0 = alloca i64
  %iftmp.5 = alloca i64
  %iftmp.2 = alloca i8
  %iftmp.1 = alloca i8
  %number = alloca i64
  %cutoff = alloca i64
  %fail_char = alloca i8*
  %negative = alloca i8
  %digit = alloca i8
  %cutoff_digit = alloca i8
  %tmp = alloca i64
  %"alloca point" = bitcast i32 0 to i32
  store i8* %str, i8** %str_addr
  store i8** %endptr, i8*** %endptr_addr
  store i32 %base, i32* %base_addr
  store i32 %sflag, i32* %sflag_addr
  %1 = load i8** %str_addr, align 8, !dbg !7804
  store i8* %1, i8** %fail_char, align 8, !dbg !7804
  br label %bb1, !dbg !7804

bb:                                               ; preds = %bb1
  %2 = load i8** %str_addr, align 8, !dbg !7806
  %3 = getelementptr inbounds i8* %2, i64 1, !dbg !7806
  store i8* %3, i8** %str_addr, align 8, !dbg !7806
  br label %bb1, !dbg !7806

bb1:                                              ; preds = %bb, %entry
  %4 = load i16** @__ctype_b, align 8, !dbg !7807
  %5 = load i8** %str_addr, align 8, !dbg !7807
  %6 = load i8* %5, align 1, !dbg !7807
  %7 = sext i8 %6 to i32, !dbg !7807
  %8 = sext i32 %7 to i64, !dbg !7807
  %9 = getelementptr inbounds i16* %4, i64 %8, !dbg !7807
  %10 = load i16* %9, align 1, !dbg !7807
  %11 = zext i16 %10 to i32, !dbg !7807
  %12 = and i32 %11, 8192, !dbg !7807
  %13 = icmp ne i32 %12, 0, !dbg !7807
  br i1 %13, label %bb, label %bb2, !dbg !7807

bb2:                                              ; preds = %bb1
  store i8 0, i8* %negative, align 1, !dbg !7808
  %14 = load i8** %str_addr, align 8, !dbg !7809
  %15 = load i8* %14, align 1, !dbg !7809
  %16 = sext i8 %15 to i32, !dbg !7809
  switch i32 %16, label %bb5 [
    i32 43, label %bb4
    i32 45, label %bb3
  ], !dbg !7809

bb3:                                              ; preds = %bb2
  store i8 1, i8* %negative, align 1, !dbg !7810
  br label %bb4, !dbg !7810

bb4:                                              ; preds = %bb3, %bb2
  %17 = load i8** %str_addr, align 8, !dbg !7811
  %18 = getelementptr inbounds i8* %17, i64 1, !dbg !7811
  store i8* %18, i8** %str_addr, align 8, !dbg !7811
  br label %bb5, !dbg !7811

bb5:                                              ; preds = %bb4, %bb2
  %19 = load i32* %base_addr, align 4, !dbg !7812
  %20 = and i32 %19, -17, !dbg !7812
  %21 = icmp eq i32 %20, 0, !dbg !7812
  br i1 %21, label %bb6, label %bb11, !dbg !7812

bb6:                                              ; preds = %bb5
  %22 = load i32* %base_addr, align 4, !dbg !7813
  %23 = add nsw i32 %22, 10, !dbg !7813
  store i32 %23, i32* %base_addr, align 4, !dbg !7813
  %24 = load i8** %str_addr, align 8, !dbg !7814
  %25 = load i8* %24, align 1, !dbg !7814
  %26 = icmp eq i8 %25, 48, !dbg !7814
  br i1 %26, label %bb7, label %bb9, !dbg !7814

bb7:                                              ; preds = %bb6
  %27 = load i8** %str_addr, align 8, !dbg !7815
  %28 = getelementptr inbounds i8* %27, i64 1, !dbg !7815
  store i8* %28, i8** %str_addr, align 8, !dbg !7815
  %29 = load i8** %str_addr, align 8, !dbg !7815
  store i8* %29, i8** %fail_char, align 8, !dbg !7815
  %30 = load i32* %base_addr, align 4, !dbg !7816
  %31 = sub nsw i32 %30, 2, !dbg !7816
  store i32 %31, i32* %base_addr, align 4, !dbg !7816
  %32 = load i8** %str_addr, align 8, !dbg !7817
  %33 = load i8* %32, align 1, !dbg !7817
  %34 = or i8 %33, 32, !dbg !7817
  %35 = icmp eq i8 %34, 120, !dbg !7817
  br i1 %35, label %bb8, label %bb9, !dbg !7817

bb8:                                              ; preds = %bb7
  %36 = load i8** %str_addr, align 8, !dbg !7818
  %37 = getelementptr inbounds i8* %36, i64 1, !dbg !7818
  store i8* %37, i8** %str_addr, align 8, !dbg !7818
  %38 = load i32* %base_addr, align 4, !dbg !7819
  %39 = load i32* %base_addr, align 4, !dbg !7819
  %40 = add nsw i32 %38, %39, !dbg !7819
  store i32 %40, i32* %base_addr, align 4, !dbg !7819
  br label %bb9, !dbg !7819

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %41 = load i32* %base_addr, align 4, !dbg !7820
  %42 = icmp sgt i32 %41, 16, !dbg !7820
  br i1 %42, label %bb10, label %bb11, !dbg !7820

bb10:                                             ; preds = %bb9
  store i32 16, i32* %base_addr, align 4, !dbg !7821
  br label %bb11, !dbg !7821

bb11:                                             ; preds = %bb10, %bb9, %bb5
  store i64 0, i64* %number, align 8, !dbg !7822
  %43 = load i32* %base_addr, align 4, !dbg !7823
  %44 = sub nsw i32 %43, 2, !dbg !7823
  %45 = icmp ule i32 %44, 34, !dbg !7823
  br i1 %45, label %bb12, label %bb26, !dbg !7823

bb12:                                             ; preds = %bb11
  %46 = load i32* %base_addr, align 4, !dbg !7824
  %47 = sext i32 %46 to i64, !dbg !7824
  %int_cast_to_i64 = bitcast i64 %47 to i64
  %48 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %49 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %49, label %bb.i, label %klee_div_zero_check.exit

bb.i:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb12
  call void @klee_disable_symbex() nounwind
  %50 = urem i64 -1, %47, !dbg !7824
  %51 = trunc i64 %50 to i8, !dbg !7824
  store i8 %51, i8* %cutoff_digit, align 1, !dbg !7824
  %52 = load i32* %base_addr, align 4, !dbg !7825
  %53 = sext i32 %52 to i64, !dbg !7825
  %int_cast_to_i641 = bitcast i64 %53 to i64
  %54 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %55 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %55, label %bb.i2, label %klee_div_zero_check.exit3

bb.i2:                                            ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit3:                        ; preds = %klee_div_zero_check.exit
  call void @klee_disable_symbex() nounwind
  %56 = udiv i64 -1, %53, !dbg !7825
  store i64 %56, i64* %cutoff, align 8, !dbg !7825
  br label %bb13, !dbg !7825

bb13:                                             ; preds = %bb23, %bb24, %klee_div_zero_check.exit3
  %57 = load i8** %str_addr, align 8, !dbg !7826
  %58 = load i8* %57, align 1, !dbg !7826
  %59 = sub i8 %58, 48, !dbg !7826
  %60 = icmp ule i8 %59, 9, !dbg !7826
  %61 = load i8** %str_addr, align 8, !dbg !7826
  %62 = load i8* %61, align 1, !dbg !7826
  br i1 %60, label %bb14, label %bb15, !dbg !7826

bb14:                                             ; preds = %bb13
  %63 = sub i8 %62, 48, !dbg !7826
  store i8 %63, i8* %iftmp.1, align 1, !dbg !7826
  br label %bb19, !dbg !7826

bb15:                                             ; preds = %bb13
  %64 = icmp sgt i8 %62, 64, !dbg !7826
  br i1 %64, label %bb16, label %bb17, !dbg !7826

bb16:                                             ; preds = %bb15
  %65 = load i8** %str_addr, align 8, !dbg !7826
  %66 = load i8* %65, align 1, !dbg !7826
  %67 = or i8 %66, 32, !dbg !7826
  %68 = sub i8 %67, 87, !dbg !7826
  store i8 %68, i8* %iftmp.2, align 1, !dbg !7826
  br label %bb18, !dbg !7826

bb17:                                             ; preds = %bb15
  store i8 40, i8* %iftmp.2, align 1, !dbg !7826
  br label %bb18, !dbg !7826

bb18:                                             ; preds = %bb17, %bb16
  %69 = load i8* %iftmp.2, align 1, !dbg !7826
  store i8 %69, i8* %iftmp.1, align 1, !dbg !7826
  br label %bb19, !dbg !7826

bb19:                                             ; preds = %bb18, %bb14
  %70 = load i8* %iftmp.1, align 1, !dbg !7826
  store i8 %70, i8* %digit, align 1, !dbg !7826
  %71 = load i8* %digit, align 1, !dbg !7827
  %72 = zext i8 %71 to i32, !dbg !7827
  %73 = load i32* %base_addr, align 4, !dbg !7827
  %74 = icmp sge i32 %72, %73, !dbg !7827
  br i1 %74, label %bb26, label %bb20, !dbg !7827

bb20:                                             ; preds = %bb19
  %75 = load i8** %str_addr, align 8, !dbg !7828
  %76 = getelementptr inbounds i8* %75, i64 1, !dbg !7828
  store i8* %76, i8** %str_addr, align 8, !dbg !7828
  %77 = load i8** %str_addr, align 8, !dbg !7828
  store i8* %77, i8** %fail_char, align 8, !dbg !7828
  %78 = load i64* %number, align 8, !dbg !7829
  %79 = load i64* %cutoff, align 8, !dbg !7829
  %80 = icmp ugt i64 %78, %79, !dbg !7829
  br i1 %80, label %bb23, label %bb21, !dbg !7829

bb21:                                             ; preds = %bb20
  %81 = load i64* %number, align 8, !dbg !7829
  %82 = load i64* %cutoff, align 8, !dbg !7829
  %83 = icmp ne i64 %81, %82, !dbg !7829
  br i1 %83, label %bb24, label %bb22, !dbg !7829

bb22:                                             ; preds = %bb21
  %84 = load i8* %digit, align 1, !dbg !7829
  %85 = load i8* %cutoff_digit, align 1, !dbg !7829
  %86 = icmp ugt i8 %84, %85, !dbg !7829
  br i1 %86, label %bb23, label %bb24, !dbg !7829

bb23:                                             ; preds = %bb22, %bb20
  store i64 -1, i64* %number, align 8, !dbg !7830
  %87 = load i32* %sflag_addr, align 4, !dbg !7831
  %88 = trunc i32 %87 to i8, !dbg !7831
  %89 = load i8* %negative, align 1, !dbg !7831
  %90 = and i8 %88, %89, !dbg !7831
  store i8 %90, i8* %negative, align 1, !dbg !7831
  store i32 34, i32* @errno, align 4, !dbg !7832
  br label %bb13, !dbg !7832

bb24:                                             ; preds = %bb22, %bb21
  %91 = load i32* %base_addr, align 4, !dbg !7833
  %92 = sext i32 %91 to i64, !dbg !7833
  %93 = load i64* %number, align 8, !dbg !7833
  %94 = mul i64 %92, %93, !dbg !7833
  %95 = load i8* %digit, align 1, !dbg !7833
  %96 = zext i8 %95 to i64, !dbg !7833
  %97 = add i64 %94, %96, !dbg !7833
  store i64 %97, i64* %number, align 8, !dbg !7833
  br label %bb13, !dbg !7833

bb26:                                             ; preds = %bb19, %bb11
  %98 = load i8*** %endptr_addr, align 8, !dbg !7834
  %99 = icmp ne i8** %98, null, !dbg !7834
  br i1 %99, label %bb27, label %bb28, !dbg !7834

bb27:                                             ; preds = %bb26
  %100 = load i8** %fail_char, align 8, !dbg !7835
  %101 = load i8*** %endptr_addr, align 8, !dbg !7835
  store i8* %100, i8** %101, align 8, !dbg !7835
  br label %bb28, !dbg !7835

bb28:                                             ; preds = %bb27, %bb26
  %102 = load i8* %negative, align 1, !dbg !7836
  %103 = icmp ne i8 %102, 0, !dbg !7836
  br i1 %103, label %bb29, label %bb30, !dbg !7836

bb29:                                             ; preds = %bb28
  store i64 -9223372036854775808, i64* %iftmp.5, align 8, !dbg !7836
  br label %bb31, !dbg !7836

bb30:                                             ; preds = %bb28
  store i64 9223372036854775807, i64* %iftmp.5, align 8, !dbg !7836
  br label %bb31, !dbg !7836

bb31:                                             ; preds = %bb30, %bb29
  %104 = load i64* %iftmp.5, align 8, !dbg !7836
  store i64 %104, i64* %tmp, align 8, !dbg !7836
  %105 = load i32* %sflag_addr, align 4, !dbg !7838
  %106 = icmp ne i32 %105, 0, !dbg !7838
  br i1 %106, label %bb32, label %bb34, !dbg !7838

bb32:                                             ; preds = %bb31
  %107 = load i64* %number, align 8, !dbg !7838
  %108 = load i64* %tmp, align 8, !dbg !7838
  %109 = icmp ugt i64 %107, %108, !dbg !7838
  br i1 %109, label %bb33, label %bb34, !dbg !7838

bb33:                                             ; preds = %bb32
  %110 = load i64* %tmp, align 8, !dbg !7839
  store i64 %110, i64* %number, align 8, !dbg !7839
  store i32 34, i32* @errno, align 4, !dbg !7840
  br label %bb34, !dbg !7840

bb34:                                             ; preds = %bb33, %bb32, %bb31
  %111 = load i8* %negative, align 1, !dbg !7841
  %112 = icmp ne i8 %111, 0, !dbg !7841
  %113 = load i64* %number, align 8, !dbg !7841
  br i1 %112, label %bb35, label %bb36, !dbg !7841

bb35:                                             ; preds = %bb34
  %114 = sub nsw i64 0, %113, !dbg !7841
  store i64 %114, i64* %iftmp.6, align 8, !dbg !7841
  br label %bb37, !dbg !7841

bb36:                                             ; preds = %bb34
  store i64 %113, i64* %iftmp.6, align 8, !dbg !7841
  br label %bb37, !dbg !7841

bb37:                                             ; preds = %bb36, %bb35
  %115 = load i64* %iftmp.6, align 8, !dbg !7841
  store i64 %115, i64* %0, align 8, !dbg !7841
  %116 = load i64* %0, align 8, !dbg !7841
  store i64 %116, i64* %retval, align 8, !dbg !7841
  %retval38 = load i64* %retval, !dbg !7841
  ret i64 %retval38, !dbg !7841
}

define i64 @wcsnrtombs(i8* noalias %dst, i32** noalias %src, i64 %NWC, i64 %len, %struct.__mbstate_t* noalias %ps) nounwind {
entry:
  %dst_addr = alloca i8*, align 8
  %src_addr = alloca i32**, align 8
  %NWC_addr = alloca i64, align 8
  %len_addr = alloca i64, align 8
  %ps_addr = alloca %struct.__mbstate_t*, align 8
  %retval = alloca i64
  %0 = alloca i64
  %s = alloca i32*
  %count = alloca i64
  %incr = alloca i32
  %buf = alloca [16 x i8]
  %"alloca point" = bitcast i32 0 to i32
  store i8* %dst, i8** %dst_addr
  store i32** %src, i32*** %src_addr
  store i64 %NWC, i64* %NWC_addr
  store i64 %len, i64* %len_addr
  store %struct.__mbstate_t* %ps, %struct.__mbstate_t** %ps_addr
  store i32 1, i32* %incr, align 4, !dbg !7842
  %1 = load i8** %dst_addr, align 8, !dbg !7844
  %2 = icmp eq i8* %1, null, !dbg !7844
  br i1 %2, label %bb1, label %bb, !dbg !7844

bb:                                               ; preds = %entry
  %3 = load i32*** %src_addr, align 8, !dbg !7844
  %4 = bitcast i32** %3 to i8*, !dbg !7844
  %5 = load i8** %dst_addr, align 8, !dbg !7844
  %6 = icmp eq i8* %5, %4, !dbg !7844
  br i1 %6, label %bb1, label %bb5, !dbg !7844

bb1:                                              ; preds = %bb, %entry
  %7 = load i8** %dst_addr, align 8, !dbg !7845
  %8 = icmp eq i8* %7, null, !dbg !7845
  br i1 %8, label %bb2, label %bb3, !dbg !7845

bb2:                                              ; preds = %bb1
  store i64 -1, i64* %len_addr, align 8, !dbg !7846
  br label %bb3, !dbg !7846

bb3:                                              ; preds = %bb2, %bb1
  %buf4 = bitcast [16 x i8]* %buf to i8*, !dbg !7847
  store i8* %buf4, i8** %dst_addr, align 8, !dbg !7847
  store i32 0, i32* %incr, align 4, !dbg !7848
  br label %bb5, !dbg !7848

bb5:                                              ; preds = %bb3, %bb
  %9 = load i64* %len_addr, align 8, !dbg !7849
  %10 = load i64* %NWC_addr, align 8, !dbg !7849
  %11 = icmp ugt i64 %9, %10, !dbg !7849
  br i1 %11, label %bb6, label %bb7, !dbg !7849

bb6:                                              ; preds = %bb5
  %12 = load i64* %NWC_addr, align 8, !dbg !7850
  store i64 %12, i64* %len_addr, align 8, !dbg !7850
  br label %bb7, !dbg !7850

bb7:                                              ; preds = %bb6, %bb5
  %13 = load i64* %len_addr, align 8, !dbg !7851
  store i64 %13, i64* %count, align 8, !dbg !7851
  %14 = load i32*** %src_addr, align 8, !dbg !7852
  %15 = load i32** %14, align 8, !dbg !7852
  store i32* %15, i32** %s, align 8, !dbg !7852
  br label %bb13, !dbg !7852

bb8:                                              ; preds = %bb13
  %16 = load i32** %s, align 8, !dbg !7853
  %17 = load i32* %16, align 4, !dbg !7853
  %18 = icmp ugt i32 %17, 127, !dbg !7853
  br i1 %18, label %bb9, label %bb10, !dbg !7853

bb9:                                              ; preds = %bb8
  store i32 84, i32* @errno, align 4, !dbg !7854
  store i64 -1, i64* %0, align 8, !dbg !7855
  br label %bb18, !dbg !7855

bb10:                                             ; preds = %bb8
  %19 = load i32** %s, align 8, !dbg !7856
  %20 = load i32* %19, align 4, !dbg !7856
  %21 = trunc i32 %20 to i8, !dbg !7856
  %22 = load i8** %dst_addr, align 8, !dbg !7856
  store i8 %21, i8* %22, align 1, !dbg !7856
  %23 = load i8** %dst_addr, align 8, !dbg !7856
  %24 = load i8* %23, align 1, !dbg !7856
  %25 = icmp eq i8 %24, 0, !dbg !7856
  br i1 %25, label %bb11, label %bb12, !dbg !7856

bb11:                                             ; preds = %bb10
  store i32* null, i32** %s, align 8, !dbg !7857
  br label %bb14, !dbg !7857

bb12:                                             ; preds = %bb10
  %26 = load i32** %s, align 8, !dbg !7858
  %27 = getelementptr inbounds i32* %26, i64 1, !dbg !7858
  store i32* %27, i32** %s, align 8, !dbg !7858
  %28 = load i8** %dst_addr, align 8, !dbg !7859
  %29 = load i32* %incr, align 4, !dbg !7859
  %30 = sext i32 %29 to i64, !dbg !7859
  %31 = getelementptr inbounds i8* %28, i64 %30, !dbg !7859
  store i8* %31, i8** %dst_addr, align 8, !dbg !7859
  %32 = load i64* %count, align 8, !dbg !7860
  %33 = sub i64 %32, 1, !dbg !7860
  store i64 %33, i64* %count, align 8, !dbg !7860
  br label %bb13, !dbg !7860

bb13:                                             ; preds = %bb12, %bb7
  %34 = load i64* %count, align 8, !dbg !7861
  %35 = icmp ne i64 %34, 0, !dbg !7861
  br i1 %35, label %bb8, label %bb14, !dbg !7861

bb14:                                             ; preds = %bb13, %bb11
  %buf15 = bitcast [16 x i8]* %buf to i8*, !dbg !7862
  %36 = load i8** %dst_addr, align 8, !dbg !7862
  %37 = icmp ne i8* %buf15, %36, !dbg !7862
  br i1 %37, label %bb16, label %bb17, !dbg !7862

bb16:                                             ; preds = %bb14
  %38 = load i32** %s, align 8, !dbg !7863
  %39 = load i32*** %src_addr, align 8, !dbg !7863
  store i32* %38, i32** %39, align 8, !dbg !7863
  br label %bb17, !dbg !7863

bb17:                                             ; preds = %bb16, %bb14
  %40 = load i64* %len_addr, align 8, !dbg !7864
  %41 = load i64* %count, align 8, !dbg !7864
  %42 = sub i64 %40, %41, !dbg !7864
  store i64 %42, i64* %0, align 8, !dbg !7864
  br label %bb18, !dbg !7864

bb18:                                             ; preds = %bb17, %bb9
  %43 = load i64* %0, align 8, !dbg !7855
  store i64 %43, i64* %retval, align 8, !dbg !7855
  %retval19 = load i64* %retval, !dbg !7855
  ret i64 %retval19, !dbg !7855
}

define i32 @main(i32, i8**) {
entry:
  call void @__uClibc_main(i32 (i32, i8**, i8**)* bitcast (i32 (i32, i8**)* @__user_main to i32 (i32, i8**, i8**)*), i32 %0, i8** %1, void ()* null, void ()* null, void ()* null, i8* null)
  unreachable
}

define void @klee_init_env(i32* nocapture %argcPtr, i8*** nocapture %argvPtr) nounwind {
entry:
  %new_argv = alloca [1024 x i8*], align 8
  %stream_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %dgram_fill_info = alloca [100 x %struct.fill_info_t], align 8
  %sym_arg_name = alloca [5 x i8], align 1
  %0 = load i32* %argcPtr, align 4, !dbg !7865
  %1 = load i8*** %argvPtr, align 8, !dbg !7866
  %2 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 0, !dbg !7867
  store i8 97, i8* %2, align 1, !dbg !7867
  %3 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 1, !dbg !7867
  store i8 114, i8* %3, align 1, !dbg !7867
  %4 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 2, !dbg !7867
  store i8 103, i8* %4, align 1, !dbg !7867
  %5 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 3, !dbg !7867
  store i8 0, i8* %5, align 1, !dbg !7867
  %6 = getelementptr inbounds [5 x i8]* %sym_arg_name, i64 0, i64 4, !dbg !7868
  store i8 0, i8* %6, align 1, !dbg !7868
  %7 = icmp eq i32 %0, 2, !dbg !7869
  br i1 %7, label %bb, label %bb99, !dbg !7869

bb:                                               ; preds = %entry
  %8 = call i32 @klee_shadow_enabled() nounwind, !dbg !7869
  %9 = icmp eq i32 %8, 0, !dbg !7869
  br i1 %9, label %bb1, label %bb99, !dbg !7869

bb1:                                              ; preds = %bb
  %10 = getelementptr inbounds i8** %1, i64 1, !dbg !7869
  %11 = load i8** %10, align 8, !dbg !7869
  br label %bb3.i, !dbg !7870

bb.i:                                             ; preds = %bb3.i
  %12 = icmp eq i8 %13, 0, !dbg !7872
  br i1 %12, label %bb2, label %bb2.i, !dbg !7872

bb2.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb3.i, !dbg !7873

bb3.i:                                            ; preds = %bb2.i, %bb1
  %indvar.i = phi i64 [ %indvar.next.i, %bb2.i ], [ 0, %bb1 ]
  %a_addr.0.i = getelementptr i8* %11, i64 %indvar.i
  %b_addr.0.i = getelementptr [7 x i8]* @.str5259, i64 0, i64 %indvar.i
  %13 = load i8* %a_addr.0.i, align 1, !dbg !7870
  %14 = load i8* %b_addr.0.i, align 1, !dbg !7870
  %15 = icmp eq i8 %13, %14, !dbg !7870
  br i1 %15, label %bb.i, label %bb99, !dbg !7870

bb2:                                              ; preds = %bb.i
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([593 x i8]* @.str6260, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7874

bb3:                                              ; preds = %bb99
  %16 = sext i32 %k.0 to i64, !dbg !7877
  %17 = getelementptr inbounds i8** %1, i64 %16, !dbg !7877
  %18 = load i8** %17, align 8, !dbg !7877
  br label %bb3.i112, !dbg !7878

bb.i106:                                          ; preds = %bb3.i112
  %19 = icmp eq i8 %20, 0, !dbg !7879
  br i1 %19, label %bb5, label %bb2.i108, !dbg !7879

bb2.i108:                                         ; preds = %bb.i106
  %indvar.next.i107 = add i64 %indvar.i109, 1
  br label %bb3.i112, !dbg !7880

bb3.i112:                                         ; preds = %bb2.i108, %bb3
  %indvar.i109 = phi i64 [ %indvar.next.i107, %bb2.i108 ], [ 0, %bb3 ]
  %a_addr.0.i111 = getelementptr i8* %18, i64 %indvar.i109
  %b_addr.0.i110 = getelementptr [10 x i8]* @.str7261, i64 0, i64 %indvar.i109
  %20 = load i8* %a_addr.0.i111, align 1, !dbg !7878
  %21 = load i8* %b_addr.0.i110, align 1, !dbg !7878
  %22 = icmp eq i8 %20, %21, !dbg !7878
  br i1 %22, label %bb.i106, label %bb3.i122, !dbg !7878

bb.i116:                                          ; preds = %bb3.i122
  %23 = icmp eq i8 %24, 0, !dbg !7879
  br i1 %23, label %bb5, label %bb2.i118, !dbg !7879

bb2.i118:                                         ; preds = %bb.i116
  %indvar.next.i117 = add i64 %indvar.i119, 1
  br label %bb3.i122, !dbg !7880

bb3.i122:                                         ; preds = %bb2.i118, %bb3.i112
  %indvar.i119 = phi i64 [ %indvar.next.i117, %bb2.i118 ], [ 0, %bb3.i112 ]
  %a_addr.0.i121 = getelementptr i8* %18, i64 %indvar.i119
  %b_addr.0.i120 = getelementptr [9 x i8]* @.str8262, i64 0, i64 %indvar.i119
  %24 = load i8* %a_addr.0.i121, align 1, !dbg !7878
  %25 = load i8* %b_addr.0.i120, align 1, !dbg !7878
  %26 = icmp eq i8 %24, %25, !dbg !7878
  br i1 %26, label %bb.i116, label %bb3.i139, !dbg !7878

bb5:                                              ; preds = %bb.i116, %bb.i106
  %27 = add nsw i32 %k.0, 1, !dbg !7881
  %28 = icmp eq i32 %27, %0, !dbg !7881
  br i1 %28, label %bb6, label %bb7, !dbg !7881

bb6:                                              ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9263, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !7882

bb7:                                              ; preds = %bb5
  %29 = sext i32 %27 to i64, !dbg !7884
  %30 = getelementptr inbounds i8** %1, i64 %29, !dbg !7884
  %31 = load i8** %30, align 8, !dbg !7884
  %32 = add i32 %k.0, 2, !dbg !7884
  %33 = load i8* %31, align 1, !dbg !7885
  switch i8 %33, label %bb9.preheader.i [
    i8 0, label %bb.i127
    i8 48, label %bb2.i128
  ]

bb.i127:                                          ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9263, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !7886

bb2.i128:                                         ; preds = %bb7
  %34 = getelementptr inbounds i8* %31, i64 1, !dbg !7887
  %35 = load i8* %34, align 1, !dbg !7887
  switch i8 %35, label %bb9.preheader.i [
    i8 120, label %bb5.i
    i8 88, label %bb5.i
  ]

bb5.i:                                            ; preds = %bb2.i128, %bb2.i128
  %36 = getelementptr inbounds i8* %31, i64 2, !dbg !7888
  br label %bb9.preheader.i, !dbg !7888

bb9.preheader.i:                                  ; preds = %bb5.i, %bb2.i128, %bb7
  %base.0.ph.i = phi i64 [ 10, %bb2.i128 ], [ 16, %bb5.i ], [ 10, %bb7 ]
  %s_addr.0.ph.i = phi i8* [ %31, %bb2.i128 ], [ %36, %bb5.i ], [ %31, %bb7 ]
  br label %bb9.i

bb6.i:                                            ; preds = %bb9.i
  %37 = add i8 %53, -48, !dbg !7889
  %38 = icmp ult i8 %37, 10, !dbg !7889
  br i1 %38, label %bb.i143, label %bb1.i, !dbg !7889

bb.i143:                                          ; preds = %bb6.i
  %39 = sext i8 %53 to i32, !dbg !7889
  %40 = add nsw i32 %39, -48, !dbg !7889
  br label %__getxdigit.exit, !dbg !7889

bb1.i:                                            ; preds = %bb6.i
  %41 = add i8 %53, -65, !dbg !7889
  %42 = icmp ult i8 %41, 6, !dbg !7889
  br i1 %42, label %bb2.i144, label %bb3.i145, !dbg !7889

bb2.i144:                                         ; preds = %bb1.i
  %43 = sext i8 %53 to i32, !dbg !7889
  %44 = add nsw i32 %43, -55, !dbg !7889
  br label %__getxdigit.exit, !dbg !7889

bb3.i145:                                         ; preds = %bb1.i
  %45 = add i8 %53, -97, !dbg !7889
  %46 = icmp ult i8 %45, 6, !dbg !7889
  br i1 %46, label %bb4.i, label %bb8.i, !dbg !7889

bb4.i:                                            ; preds = %bb3.i145
  %47 = sext i8 %53 to i32, !dbg !7889
  %48 = add nsw i32 %47, -87, !dbg !7889
  br label %__getxdigit.exit, !dbg !7889

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i144, %bb.i143
  %iftmp.12.0.i = phi i32 [ %40, %bb.i143 ], [ %44, %bb2.i144 ], [ %48, %bb4.i ]
  %49 = icmp eq i32 %iftmp.12.0.i, -1, !dbg !7892
  br i1 %49, label %bb8.i, label %bb7.i, !dbg !7892

bb7.i:                                            ; preds = %__getxdigit.exit
  %50 = mul nsw i64 %res.0.ph.i, %base.0.ph.i, !dbg !7893
  %51 = sext i32 %iftmp.12.0.i to i64, !dbg !7893
  %52 = add nsw i64 %51, %50, !dbg !7893
  %indvar.next1718 = add i64 %indvar1717, 1
  br label %bb9.i, !dbg !7893

bb8.i:                                            ; preds = %__getxdigit.exit, %bb3.i145
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([48 x i8]* @.str9263, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !7894

bb9.i:                                            ; preds = %bb7.i, %bb9.preheader.i
  %indvar1717 = phi i64 [ 0, %bb9.preheader.i ], [ %indvar.next1718, %bb7.i ]
  %res.0.ph.i = phi i64 [ 0, %bb9.preheader.i ], [ %52, %bb7.i ]
  %s_addr.0.ph14.i = getelementptr i8* %s_addr.0.ph.i, i64 %indvar1717
  %53 = load i8* %s_addr.0.ph14.i, align 1, !dbg !7896
  %54 = icmp eq i8 %53, 0, !dbg !7896
  br i1 %54, label %__str_to_int.exit, label %bb6.i, !dbg !7896

__str_to_int.exit:                                ; preds = %bb9.i
  %55 = trunc i64 %res.0.ph.i to i32, !dbg !7884
  %56 = trunc i32 %sym_arg_num.1 to i8, !dbg !7897
  %57 = add i8 %56, 48, !dbg !7897
  store i8 %57, i8* %5, align 1, !dbg !7897
  %58 = call fastcc i8* @__get_sym_str(i32 %55, i8* %2) nounwind, !dbg !7898
  %59 = icmp eq i32 %704, 1024, !dbg !7899
  br i1 %59, label %bb.i131, label %__add_arg.exit132, !dbg !7899

bb.i131:                                          ; preds = %__str_to_int.exit
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3258, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !7901

__add_arg.exit132:                                ; preds = %__str_to_int.exit
  %60 = add i32 %sym_arg_num.1, 1, !dbg !7897
  %61 = sext i32 %704 to i64, !dbg !7903
  %62 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %61, !dbg !7903
  store i8* %58, i8** %62, align 8, !dbg !7903
  %63 = add nsw i32 %704, 1, !dbg !7904
  br label %bb99, !dbg !7898

bb.i133:                                          ; preds = %bb3.i139
  %64 = icmp eq i8 %65, 0, !dbg !7905
  br i1 %64, label %bb12, label %bb2.i135, !dbg !7905

bb2.i135:                                         ; preds = %bb.i133
  %indvar.next.i134 = add i64 %indvar.i136, 1
  br label %bb3.i139, !dbg !7907

bb3.i139:                                         ; preds = %bb2.i135, %bb3.i122
  %indvar.i136 = phi i64 [ %indvar.next.i134, %bb2.i135 ], [ 0, %bb3.i122 ]
  %a_addr.0.i138 = getelementptr i8* %18, i64 %indvar.i136
  %b_addr.0.i137 = getelementptr [11 x i8]* @.str10264, i64 0, i64 %indvar.i136
  %65 = load i8* %a_addr.0.i138, align 1, !dbg !7908
  %66 = load i8* %b_addr.0.i137, align 1, !dbg !7908
  %67 = icmp eq i8 %65, %66, !dbg !7908
  br i1 %67, label %bb.i133, label %bb3.i153, !dbg !7908

bb.i147:                                          ; preds = %bb3.i153
  %68 = icmp eq i8 %69, 0, !dbg !7905
  br i1 %68, label %bb12, label %bb2.i149, !dbg !7905

bb2.i149:                                         ; preds = %bb.i147
  %indvar.next.i148 = add i64 %indvar.i150, 1
  br label %bb3.i153, !dbg !7907

bb3.i153:                                         ; preds = %bb2.i149, %bb3.i139
  %indvar.i150 = phi i64 [ %indvar.next.i148, %bb2.i149 ], [ 0, %bb3.i139 ]
  %a_addr.0.i152 = getelementptr i8* %18, i64 %indvar.i150
  %b_addr.0.i151 = getelementptr [10 x i8]* @.str11265, i64 0, i64 %indvar.i150
  %69 = load i8* %a_addr.0.i152, align 1, !dbg !7908
  %70 = load i8* %b_addr.0.i151, align 1, !dbg !7908
  %71 = icmp eq i8 %69, %70, !dbg !7908
  br i1 %71, label %bb.i147, label %bb3.i233, !dbg !7908

bb12:                                             ; preds = %bb.i147, %bb.i133
  %72 = add nsw i32 %k.0, 3, !dbg !7909
  %73 = icmp slt i32 %72, %0, !dbg !7909
  br i1 %73, label %bb15, label %bb14, !dbg !7909

bb14:                                             ; preds = %bb12
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7910

bb15:                                             ; preds = %bb12
  %74 = add nsw i32 %k.0, 1, !dbg !7912
  %75 = sext i32 %74 to i64, !dbg !7913
  %76 = getelementptr inbounds i8** %1, i64 %75, !dbg !7913
  %77 = load i8** %76, align 8, !dbg !7913
  %78 = add i32 %k.0, 2, !dbg !7913
  %79 = load i8* %77, align 1, !dbg !7914
  switch i8 %79, label %bb9.preheader.i173 [
    i8 0, label %bb.i168
    i8 48, label %bb2.i169
  ]

bb.i168:                                          ; preds = %bb15
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7915

bb2.i169:                                         ; preds = %bb15
  %80 = getelementptr inbounds i8* %77, i64 1, !dbg !7916
  %81 = load i8* %80, align 1, !dbg !7916
  switch i8 %81, label %bb9.preheader.i173 [
    i8 120, label %bb5.i170
    i8 88, label %bb5.i170
  ]

bb5.i170:                                         ; preds = %bb2.i169, %bb2.i169
  %82 = getelementptr inbounds i8* %77, i64 2, !dbg !7917
  br label %bb9.preheader.i173, !dbg !7917

bb9.preheader.i173:                               ; preds = %bb5.i170, %bb2.i169, %bb15
  %base.0.ph.i171 = phi i64 [ 10, %bb2.i169 ], [ 16, %bb5.i170 ], [ 10, %bb15 ]
  %s_addr.0.ph.i172 = phi i8* [ %77, %bb2.i169 ], [ %82, %bb5.i170 ], [ %77, %bb15 ]
  br label %bb9.i184

bb6.i174:                                         ; preds = %bb9.i184
  %83 = add i8 %99, -48, !dbg !7918
  %84 = icmp ult i8 %83, 10, !dbg !7918
  br i1 %84, label %bb.i348, label %bb1.i349, !dbg !7918

bb.i348:                                          ; preds = %bb6.i174
  %85 = sext i8 %99 to i32, !dbg !7918
  %86 = add nsw i32 %85, -48, !dbg !7918
  br label %__getxdigit.exit355, !dbg !7918

bb1.i349:                                         ; preds = %bb6.i174
  %87 = add i8 %99, -65, !dbg !7918
  %88 = icmp ult i8 %87, 6, !dbg !7918
  br i1 %88, label %bb2.i350, label %bb3.i351, !dbg !7918

bb2.i350:                                         ; preds = %bb1.i349
  %89 = sext i8 %99 to i32, !dbg !7918
  %90 = add nsw i32 %89, -55, !dbg !7918
  br label %__getxdigit.exit355, !dbg !7918

bb3.i351:                                         ; preds = %bb1.i349
  %91 = add i8 %99, -97, !dbg !7918
  %92 = icmp ult i8 %91, 6, !dbg !7918
  br i1 %92, label %bb4.i352, label %bb8.i180, !dbg !7918

bb4.i352:                                         ; preds = %bb3.i351
  %93 = sext i8 %99 to i32, !dbg !7918
  %94 = add nsw i32 %93, -87, !dbg !7918
  br label %__getxdigit.exit355, !dbg !7918

__getxdigit.exit355:                              ; preds = %bb4.i352, %bb2.i350, %bb.i348
  %iftmp.12.0.i353 = phi i32 [ %86, %bb.i348 ], [ %90, %bb2.i350 ], [ %94, %bb4.i352 ]
  %95 = icmp eq i32 %iftmp.12.0.i353, -1, !dbg !7920
  br i1 %95, label %bb8.i180, label %bb7.i176, !dbg !7920

bb7.i176:                                         ; preds = %__getxdigit.exit355
  %96 = mul nsw i64 %res.0.ph.i177, %base.0.ph.i171, !dbg !7921
  %97 = sext i32 %iftmp.12.0.i353 to i64, !dbg !7921
  %98 = add nsw i64 %97, %96, !dbg !7921
  %indvar.next1683 = add i64 %indvar1682, 1
  br label %bb9.i184, !dbg !7921

bb8.i180:                                         ; preds = %__getxdigit.exit355, %bb3.i351
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7922

bb9.i184:                                         ; preds = %bb7.i176, %bb9.preheader.i173
  %indvar1682 = phi i64 [ 0, %bb9.preheader.i173 ], [ %indvar.next1683, %bb7.i176 ]
  %res.0.ph.i177 = phi i64 [ 0, %bb9.preheader.i173 ], [ %98, %bb7.i176 ]
  %s_addr.0.ph14.i178 = getelementptr i8* %s_addr.0.ph.i172, i64 %indvar1682
  %99 = load i8* %s_addr.0.ph14.i178, align 1, !dbg !7924
  %100 = icmp eq i8 %99, 0, !dbg !7924
  br i1 %100, label %__str_to_int.exit185, label %bb6.i174, !dbg !7924

__str_to_int.exit185:                             ; preds = %bb9.i184
  %101 = trunc i64 %res.0.ph.i177 to i32, !dbg !7913
  %102 = sext i32 %78 to i64, !dbg !7925
  %103 = getelementptr inbounds i8** %1, i64 %102, !dbg !7925
  %104 = load i8** %103, align 8, !dbg !7925
  %105 = load i8* %104, align 1, !dbg !7926
  switch i8 %105, label %bb9.preheader.i192 [
    i8 0, label %bb.i187
    i8 48, label %bb2.i188
  ]

bb.i187:                                          ; preds = %__str_to_int.exit185
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7927

bb2.i188:                                         ; preds = %__str_to_int.exit185
  %106 = getelementptr inbounds i8* %104, i64 1, !dbg !7928
  %107 = load i8* %106, align 1, !dbg !7928
  switch i8 %107, label %bb9.preheader.i192 [
    i8 120, label %bb5.i189
    i8 88, label %bb5.i189
  ]

bb5.i189:                                         ; preds = %bb2.i188, %bb2.i188
  %108 = getelementptr inbounds i8* %104, i64 2, !dbg !7929
  br label %bb9.preheader.i192, !dbg !7929

bb9.preheader.i192:                               ; preds = %bb5.i189, %bb2.i188, %__str_to_int.exit185
  %base.0.ph.i190 = phi i64 [ 10, %bb2.i188 ], [ 16, %bb5.i189 ], [ 10, %__str_to_int.exit185 ]
  %s_addr.0.ph.i191 = phi i8* [ %104, %bb2.i188 ], [ %108, %bb5.i189 ], [ %104, %__str_to_int.exit185 ]
  br label %bb9.i203

bb6.i193:                                         ; preds = %bb9.i203
  %109 = add i8 %125, -48, !dbg !7930
  %110 = icmp ult i8 %109, 10, !dbg !7930
  br i1 %110, label %bb.i255, label %bb1.i256, !dbg !7930

bb.i255:                                          ; preds = %bb6.i193
  %111 = sext i8 %125 to i32, !dbg !7930
  %112 = add nsw i32 %111, -48, !dbg !7930
  br label %__getxdigit.exit262, !dbg !7930

bb1.i256:                                         ; preds = %bb6.i193
  %113 = add i8 %125, -65, !dbg !7930
  %114 = icmp ult i8 %113, 6, !dbg !7930
  br i1 %114, label %bb2.i257, label %bb3.i258, !dbg !7930

bb2.i257:                                         ; preds = %bb1.i256
  %115 = sext i8 %125 to i32, !dbg !7930
  %116 = add nsw i32 %115, -55, !dbg !7930
  br label %__getxdigit.exit262, !dbg !7930

bb3.i258:                                         ; preds = %bb1.i256
  %117 = add i8 %125, -97, !dbg !7930
  %118 = icmp ult i8 %117, 6, !dbg !7930
  br i1 %118, label %bb4.i259, label %bb8.i199, !dbg !7930

bb4.i259:                                         ; preds = %bb3.i258
  %119 = sext i8 %125 to i32, !dbg !7930
  %120 = add nsw i32 %119, -87, !dbg !7930
  br label %__getxdigit.exit262, !dbg !7930

__getxdigit.exit262:                              ; preds = %bb4.i259, %bb2.i257, %bb.i255
  %iftmp.12.0.i260 = phi i32 [ %112, %bb.i255 ], [ %116, %bb2.i257 ], [ %120, %bb4.i259 ]
  %121 = icmp eq i32 %iftmp.12.0.i260, -1, !dbg !7932
  br i1 %121, label %bb8.i199, label %bb7.i195, !dbg !7932

bb7.i195:                                         ; preds = %__getxdigit.exit262
  %122 = mul nsw i64 %res.0.ph.i196, %base.0.ph.i190, !dbg !7933
  %123 = sext i32 %iftmp.12.0.i260 to i64, !dbg !7933
  %124 = add nsw i64 %123, %122, !dbg !7933
  %indvar.next1686 = add i64 %indvar1685, 1
  br label %bb9.i203, !dbg !7933

bb8.i199:                                         ; preds = %__getxdigit.exit262, %bb3.i258
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7934

bb9.i203:                                         ; preds = %bb7.i195, %bb9.preheader.i192
  %indvar1685 = phi i64 [ 0, %bb9.preheader.i192 ], [ %indvar.next1686, %bb7.i195 ]
  %res.0.ph.i196 = phi i64 [ 0, %bb9.preheader.i192 ], [ %124, %bb7.i195 ]
  %s_addr.0.ph14.i197 = getelementptr i8* %s_addr.0.ph.i191, i64 %indvar1685
  %125 = load i8* %s_addr.0.ph14.i197, align 1, !dbg !7936
  %126 = icmp eq i8 %125, 0, !dbg !7936
  br i1 %126, label %__str_to_int.exit204, label %bb6.i193, !dbg !7936

__str_to_int.exit204:                             ; preds = %bb9.i203
  %127 = trunc i64 %res.0.ph.i196 to i32, !dbg !7925
  %128 = sext i32 %72 to i64, !dbg !7937
  %129 = getelementptr inbounds i8** %1, i64 %128, !dbg !7937
  %130 = load i8** %129, align 8, !dbg !7937
  %131 = add i32 %k.0, 4, !dbg !7937
  %132 = load i8* %130, align 1, !dbg !7938
  switch i8 %132, label %bb9.preheader.i211 [
    i8 0, label %bb.i206
    i8 48, label %bb2.i207
  ]

bb.i206:                                          ; preds = %__str_to_int.exit204
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7939

bb2.i207:                                         ; preds = %__str_to_int.exit204
  %133 = getelementptr inbounds i8* %130, i64 1, !dbg !7940
  %134 = load i8* %133, align 1, !dbg !7940
  switch i8 %134, label %bb9.preheader.i211 [
    i8 120, label %bb5.i208
    i8 88, label %bb5.i208
  ]

bb5.i208:                                         ; preds = %bb2.i207, %bb2.i207
  %135 = getelementptr inbounds i8* %130, i64 2, !dbg !7941
  br label %bb9.preheader.i211, !dbg !7941

bb9.preheader.i211:                               ; preds = %bb5.i208, %bb2.i207, %__str_to_int.exit204
  %base.0.ph.i209 = phi i64 [ 10, %bb2.i207 ], [ 16, %bb5.i208 ], [ 10, %__str_to_int.exit204 ]
  %s_addr.0.ph.i210 = phi i8* [ %130, %bb2.i207 ], [ %135, %bb5.i208 ], [ %130, %__str_to_int.exit204 ]
  br label %bb9.i222

bb6.i212:                                         ; preds = %bb9.i222
  %136 = add i8 %152, -48, !dbg !7942
  %137 = icmp ult i8 %136, 10, !dbg !7942
  br i1 %137, label %bb.i237, label %bb1.i238, !dbg !7942

bb.i237:                                          ; preds = %bb6.i212
  %138 = sext i8 %152 to i32, !dbg !7942
  %139 = add nsw i32 %138, -48, !dbg !7942
  br label %__getxdigit.exit244, !dbg !7942

bb1.i238:                                         ; preds = %bb6.i212
  %140 = add i8 %152, -65, !dbg !7942
  %141 = icmp ult i8 %140, 6, !dbg !7942
  br i1 %141, label %bb2.i239, label %bb3.i240, !dbg !7942

bb2.i239:                                         ; preds = %bb1.i238
  %142 = sext i8 %152 to i32, !dbg !7942
  %143 = add nsw i32 %142, -55, !dbg !7942
  br label %__getxdigit.exit244, !dbg !7942

bb3.i240:                                         ; preds = %bb1.i238
  %144 = add i8 %152, -97, !dbg !7942
  %145 = icmp ult i8 %144, 6, !dbg !7942
  br i1 %145, label %bb4.i241, label %bb8.i218, !dbg !7942

bb4.i241:                                         ; preds = %bb3.i240
  %146 = sext i8 %152 to i32, !dbg !7942
  %147 = add nsw i32 %146, -87, !dbg !7942
  br label %__getxdigit.exit244, !dbg !7942

__getxdigit.exit244:                              ; preds = %bb4.i241, %bb2.i239, %bb.i237
  %iftmp.12.0.i242 = phi i32 [ %139, %bb.i237 ], [ %143, %bb2.i239 ], [ %147, %bb4.i241 ]
  %148 = icmp eq i32 %iftmp.12.0.i242, -1, !dbg !7944
  br i1 %148, label %bb8.i218, label %bb7.i214, !dbg !7944

bb7.i214:                                         ; preds = %__getxdigit.exit244
  %149 = mul nsw i64 %res.0.ph.i215, %base.0.ph.i209, !dbg !7945
  %150 = sext i32 %iftmp.12.0.i242 to i64, !dbg !7945
  %151 = add nsw i64 %150, %149, !dbg !7945
  %indvar.next1689 = add i64 %indvar1688, 1
  br label %bb9.i222, !dbg !7945

bb8.i218:                                         ; preds = %__getxdigit.exit244, %bb3.i240
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([77 x i8]* @.str12266, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7946

bb9.i222:                                         ; preds = %bb7.i214, %bb9.preheader.i211
  %indvar1688 = phi i64 [ 0, %bb9.preheader.i211 ], [ %indvar.next1689, %bb7.i214 ]
  %res.0.ph.i215 = phi i64 [ 0, %bb9.preheader.i211 ], [ %151, %bb7.i214 ]
  %s_addr.0.ph14.i216 = getelementptr i8* %s_addr.0.ph.i210, i64 %indvar1688
  %152 = load i8* %s_addr.0.ph14.i216, align 1, !dbg !7948
  %153 = icmp eq i8 %152, 0, !dbg !7948
  br i1 %153, label %__str_to_int.exit223, label %bb6.i212, !dbg !7948

__str_to_int.exit223:                             ; preds = %bb9.i222
  %154 = trunc i64 %res.0.ph.i215 to i32, !dbg !7937
  %155 = add i32 %127, 1, !dbg !7949
  %156 = call i32 @klee_range(i32 %101, i32 %155, i8* getelementptr inbounds ([7 x i8]* @.str13267, i64 0, i64 0)) nounwind, !dbg !7949
  %tmp1692 = icmp sgt i32 %156, 0
  %.op = xor i32 %156, -1
  %tmp1693 = select i1 %tmp1692, i32 %.op, i32 -1
  %tmp1694 = add i32 %704, -1025
  %tmp1695 = icmp ugt i32 %tmp1693, %tmp1694
  %umax = select i1 %tmp1695, i32 %tmp1693, i32 %tmp1694
  %tmp = add i32 %sym_arg_num.1, -1
  %sym_arg_num.0 = sub i32 %tmp, %umax
  %tmp1697 = add i32 %704, -1
  %tmp1698 = sub i32 %tmp1697, %umax
  %tmp833 = sext i32 %704 to i64
  %tmp836 = zext i32 %704 to i64
  %tmp839 = zext i32 %sym_arg_num.1 to i64
  %tmp840 = add i64 %tmp839, 48
  br label %bb19, !dbg !7950

bb16:                                             ; preds = %bb19
  %tmp841 = add i64 %tmp840, %indvar1699
  %tmp837 = add i64 %tmp836, %indvar1699
  %tmp1710 = trunc i64 %tmp841 to i8
  %tmp1703 = trunc i64 %tmp837 to i32
  store i8 %tmp1710, i8* %5, align 1, !dbg !7951
  %157 = call fastcc i8* @__get_sym_str(i32 %154, i8* %2) nounwind, !dbg !7952
  %158 = icmp eq i32 %tmp1703, 1024, !dbg !7953
  br i1 %158, label %bb.i225, label %__add_arg.exit226, !dbg !7953

bb.i225:                                          ; preds = %bb16
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3258, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !7954

__add_arg.exit226:                                ; preds = %bb16
  store i8* %157, i8** %scevgep, align 8, !dbg !7956
  %indvar.next1700 = add i64 %indvar1699, 1
  br label %bb19, !dbg !7950

bb19:                                             ; preds = %__add_arg.exit226, %__str_to_int.exit223
  %indvar1699 = phi i64 [ %indvar.next1700, %__add_arg.exit226 ], [ 0, %__str_to_int.exit223 ]
  %tmp834 = add i64 %tmp833, %indvar1699
  %scevgep = getelementptr [1024 x i8*]* %new_argv, i64 0, i64 %tmp834
  %i.0 = trunc i64 %indvar1699 to i32
  %159 = icmp slt i32 %i.0, %156, !dbg !7950
  br i1 %159, label %bb16, label %bb99, !dbg !7950

bb.i227:                                          ; preds = %bb3.i233
  %160 = icmp eq i8 %161, 0, !dbg !7957
  br i1 %160, label %bb22, label %bb2.i229, !dbg !7957

bb2.i229:                                         ; preds = %bb.i227
  %indvar.next.i228 = add i64 %indvar.i230, 1
  br label %bb3.i233, !dbg !7959

bb3.i233:                                         ; preds = %bb2.i229, %bb3.i153
  %indvar.i230 = phi i64 [ %indvar.next.i228, %bb2.i229 ], [ 0, %bb3.i153 ]
  %a_addr.0.i232 = getelementptr i8* %18, i64 %indvar.i230
  %b_addr.0.i231 = getelementptr [12 x i8]* @.str14268, i64 0, i64 %indvar.i230
  %161 = load i8* %a_addr.0.i232, align 1, !dbg !7960
  %162 = load i8* %b_addr.0.i231, align 1, !dbg !7960
  %163 = icmp eq i8 %161, %162, !dbg !7960
  br i1 %163, label %bb.i227, label %bb3.i251, !dbg !7960

bb.i245:                                          ; preds = %bb3.i251
  %164 = icmp eq i8 %165, 0, !dbg !7957
  br i1 %164, label %bb22, label %bb2.i247, !dbg !7957

bb2.i247:                                         ; preds = %bb.i245
  %indvar.next.i246 = add i64 %indvar.i248, 1
  br label %bb3.i251, !dbg !7959

bb3.i251:                                         ; preds = %bb2.i247, %bb3.i233
  %indvar.i248 = phi i64 [ %indvar.next.i246, %bb2.i247 ], [ 0, %bb3.i233 ]
  %a_addr.0.i250 = getelementptr i8* %18, i64 %indvar.i248
  %b_addr.0.i249 = getelementptr [11 x i8]* @.str15269, i64 0, i64 %indvar.i248
  %165 = load i8* %a_addr.0.i250, align 1, !dbg !7960
  %166 = load i8* %b_addr.0.i249, align 1, !dbg !7960
  %167 = icmp eq i8 %165, %166, !dbg !7960
  br i1 %167, label %bb.i245, label %bb3.i308, !dbg !7960

bb22:                                             ; preds = %bb.i245, %bb.i227
  %168 = add nsw i32 %k.0, 2, !dbg !7961
  %169 = icmp slt i32 %168, %0, !dbg !7961
  br i1 %169, label %bb25, label %bb24, !dbg !7961

bb24:                                             ; preds = %bb22
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16270, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7962

bb25:                                             ; preds = %bb22
  %170 = add nsw i32 %k.0, 1, !dbg !7964
  %171 = sext i32 %170 to i64, !dbg !7965
  %172 = getelementptr inbounds i8** %1, i64 %171, !dbg !7965
  %173 = load i8** %172, align 8, !dbg !7965
  %174 = load i8* %173, align 1, !dbg !7966
  switch i8 %174, label %bb9.preheader.i269 [
    i8 0, label %bb.i264
    i8 48, label %bb2.i265
  ]

bb.i264:                                          ; preds = %bb25
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16270, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7967

bb2.i265:                                         ; preds = %bb25
  %175 = getelementptr inbounds i8* %173, i64 1, !dbg !7968
  %176 = load i8* %175, align 1, !dbg !7968
  switch i8 %176, label %bb9.preheader.i269 [
    i8 120, label %bb5.i266
    i8 88, label %bb5.i266
  ]

bb5.i266:                                         ; preds = %bb2.i265, %bb2.i265
  %177 = getelementptr inbounds i8* %173, i64 2, !dbg !7969
  br label %bb9.preheader.i269, !dbg !7969

bb9.preheader.i269:                               ; preds = %bb5.i266, %bb2.i265, %bb25
  %base.0.ph.i267 = phi i64 [ 10, %bb2.i265 ], [ 16, %bb5.i266 ], [ 10, %bb25 ]
  %s_addr.0.ph.i268 = phi i8* [ %173, %bb2.i265 ], [ %177, %bb5.i266 ], [ %173, %bb25 ]
  br label %bb9.i280

bb6.i270:                                         ; preds = %bb9.i280
  %178 = add i8 %194, -48, !dbg !7970
  %179 = icmp ult i8 %178, 10, !dbg !7970
  br i1 %179, label %bb.i330, label %bb1.i331, !dbg !7970

bb.i330:                                          ; preds = %bb6.i270
  %180 = sext i8 %194 to i32, !dbg !7970
  %181 = add nsw i32 %180, -48, !dbg !7970
  br label %__getxdigit.exit337, !dbg !7970

bb1.i331:                                         ; preds = %bb6.i270
  %182 = add i8 %194, -65, !dbg !7970
  %183 = icmp ult i8 %182, 6, !dbg !7970
  br i1 %183, label %bb2.i332, label %bb3.i333, !dbg !7970

bb2.i332:                                         ; preds = %bb1.i331
  %184 = sext i8 %194 to i32, !dbg !7970
  %185 = add nsw i32 %184, -55, !dbg !7970
  br label %__getxdigit.exit337, !dbg !7970

bb3.i333:                                         ; preds = %bb1.i331
  %186 = add i8 %194, -97, !dbg !7970
  %187 = icmp ult i8 %186, 6, !dbg !7970
  br i1 %187, label %bb4.i334, label %bb8.i276, !dbg !7970

bb4.i334:                                         ; preds = %bb3.i333
  %188 = sext i8 %194 to i32, !dbg !7970
  %189 = add nsw i32 %188, -87, !dbg !7970
  br label %__getxdigit.exit337, !dbg !7970

__getxdigit.exit337:                              ; preds = %bb4.i334, %bb2.i332, %bb.i330
  %iftmp.12.0.i335 = phi i32 [ %181, %bb.i330 ], [ %185, %bb2.i332 ], [ %189, %bb4.i334 ]
  %190 = icmp eq i32 %iftmp.12.0.i335, -1, !dbg !7972
  br i1 %190, label %bb8.i276, label %bb7.i272, !dbg !7972

bb7.i272:                                         ; preds = %__getxdigit.exit337
  %191 = mul nsw i64 %res.0.ph.i273, %base.0.ph.i267, !dbg !7973
  %192 = sext i32 %iftmp.12.0.i335 to i64, !dbg !7973
  %193 = add nsw i64 %192, %191, !dbg !7973
  %indvar.next1677 = add i64 %indvar1676, 1
  br label %bb9.i280, !dbg !7973

bb8.i276:                                         ; preds = %__getxdigit.exit337, %bb3.i333
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16270, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7974

bb9.i280:                                         ; preds = %bb7.i272, %bb9.preheader.i269
  %indvar1676 = phi i64 [ 0, %bb9.preheader.i269 ], [ %indvar.next1677, %bb7.i272 ]
  %res.0.ph.i273 = phi i64 [ 0, %bb9.preheader.i269 ], [ %193, %bb7.i272 ]
  %s_addr.0.ph14.i274 = getelementptr i8* %s_addr.0.ph.i268, i64 %indvar1676
  %194 = load i8* %s_addr.0.ph14.i274, align 1, !dbg !7976
  %195 = icmp eq i8 %194, 0, !dbg !7976
  br i1 %195, label %__str_to_int.exit281, label %bb6.i270, !dbg !7976

__str_to_int.exit281:                             ; preds = %bb9.i280
  %196 = trunc i64 %res.0.ph.i273 to i32, !dbg !7965
  %197 = sext i32 %168 to i64, !dbg !7977
  %198 = getelementptr inbounds i8** %1, i64 %197, !dbg !7977
  %199 = load i8** %198, align 8, !dbg !7977
  %200 = add i32 %k.0, 3, !dbg !7977
  %201 = load i8* %199, align 1, !dbg !7978
  switch i8 %201, label %bb9.preheader.i288 [
    i8 0, label %bb.i283
    i8 48, label %bb2.i284
  ]

bb.i283:                                          ; preds = %__str_to_int.exit281
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16270, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7979

bb2.i284:                                         ; preds = %__str_to_int.exit281
  %202 = getelementptr inbounds i8* %199, i64 1, !dbg !7980
  %203 = load i8* %202, align 1, !dbg !7980
  switch i8 %203, label %bb9.preheader.i288 [
    i8 120, label %bb5.i285
    i8 88, label %bb5.i285
  ]

bb5.i285:                                         ; preds = %bb2.i284, %bb2.i284
  %204 = getelementptr inbounds i8* %199, i64 2, !dbg !7981
  br label %bb9.preheader.i288, !dbg !7981

bb9.preheader.i288:                               ; preds = %bb5.i285, %bb2.i284, %__str_to_int.exit281
  %base.0.ph.i286 = phi i64 [ 10, %bb2.i284 ], [ 16, %bb5.i285 ], [ 10, %__str_to_int.exit281 ]
  %s_addr.0.ph.i287 = phi i8* [ %199, %bb2.i284 ], [ %204, %bb5.i285 ], [ %199, %__str_to_int.exit281 ]
  br label %bb9.i299

bb6.i289:                                         ; preds = %bb9.i299
  %205 = add i8 %221, -48, !dbg !7982
  %206 = icmp ult i8 %205, 10, !dbg !7982
  br i1 %206, label %bb.i312, label %bb1.i313, !dbg !7982

bb.i312:                                          ; preds = %bb6.i289
  %207 = sext i8 %221 to i32, !dbg !7982
  %208 = add nsw i32 %207, -48, !dbg !7982
  br label %__getxdigit.exit319, !dbg !7982

bb1.i313:                                         ; preds = %bb6.i289
  %209 = add i8 %221, -65, !dbg !7982
  %210 = icmp ult i8 %209, 6, !dbg !7982
  br i1 %210, label %bb2.i314, label %bb3.i315, !dbg !7982

bb2.i314:                                         ; preds = %bb1.i313
  %211 = sext i8 %221 to i32, !dbg !7982
  %212 = add nsw i32 %211, -55, !dbg !7982
  br label %__getxdigit.exit319, !dbg !7982

bb3.i315:                                         ; preds = %bb1.i313
  %213 = add i8 %221, -97, !dbg !7982
  %214 = icmp ult i8 %213, 6, !dbg !7982
  br i1 %214, label %bb4.i316, label %bb8.i295, !dbg !7982

bb4.i316:                                         ; preds = %bb3.i315
  %215 = sext i8 %221 to i32, !dbg !7982
  %216 = add nsw i32 %215, -87, !dbg !7982
  br label %__getxdigit.exit319, !dbg !7982

__getxdigit.exit319:                              ; preds = %bb4.i316, %bb2.i314, %bb.i312
  %iftmp.12.0.i317 = phi i32 [ %208, %bb.i312 ], [ %212, %bb2.i314 ], [ %216, %bb4.i316 ]
  %217 = icmp eq i32 %iftmp.12.0.i317, -1, !dbg !7984
  br i1 %217, label %bb8.i295, label %bb7.i291, !dbg !7984

bb7.i291:                                         ; preds = %__getxdigit.exit319
  %218 = mul nsw i64 %res.0.ph.i292, %base.0.ph.i286, !dbg !7985
  %219 = sext i32 %iftmp.12.0.i317 to i64, !dbg !7985
  %220 = add nsw i64 %219, %218, !dbg !7985
  %indvar.next1680 = add i64 %indvar1679, 1
  br label %bb9.i299, !dbg !7985

bb8.i295:                                         ; preds = %__getxdigit.exit319, %bb3.i315
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([72 x i8]* @.str16270, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !7986

bb9.i299:                                         ; preds = %bb7.i291, %bb9.preheader.i288
  %indvar1679 = phi i64 [ 0, %bb9.preheader.i288 ], [ %indvar.next1680, %bb7.i291 ]
  %res.0.ph.i292 = phi i64 [ 0, %bb9.preheader.i288 ], [ %220, %bb7.i291 ]
  %s_addr.0.ph14.i293 = getelementptr i8* %s_addr.0.ph.i287, i64 %indvar1679
  %221 = load i8* %s_addr.0.ph14.i293, align 1, !dbg !7988
  %222 = icmp eq i8 %221, 0, !dbg !7988
  br i1 %222, label %__str_to_int.exit300, label %bb6.i289, !dbg !7988

__str_to_int.exit300:                             ; preds = %bb9.i299
  %223 = trunc i64 %res.0.ph.i292 to i32, !dbg !7977
  br label %bb99, !dbg !7977

bb.i302:                                          ; preds = %bb3.i308
  %224 = icmp eq i8 %225, 0, !dbg !7989
  br i1 %224, label %bb28, label %bb2.i304, !dbg !7989

bb2.i304:                                         ; preds = %bb.i302
  %indvar.next.i303 = add i64 %indvar.i305, 1
  br label %bb3.i308, !dbg !7991

bb3.i308:                                         ; preds = %bb2.i304, %bb3.i251
  %indvar.i305 = phi i64 [ %indvar.next.i303, %bb2.i304 ], [ 0, %bb3.i251 ]
  %a_addr.0.i307 = getelementptr i8* %18, i64 %indvar.i305
  %b_addr.0.i306 = getelementptr [13 x i8]* @.str17271, i64 0, i64 %indvar.i305
  %225 = load i8* %a_addr.0.i307, align 1, !dbg !7992
  %226 = load i8* %b_addr.0.i306, align 1, !dbg !7992
  %227 = icmp eq i8 %225, %226, !dbg !7992
  br i1 %227, label %bb.i302, label %bb3.i326, !dbg !7992

bb.i320:                                          ; preds = %bb3.i326
  %228 = icmp eq i8 %229, 0, !dbg !7989
  br i1 %228, label %bb28, label %bb2.i322, !dbg !7989

bb2.i322:                                         ; preds = %bb.i320
  %indvar.next.i321 = add i64 %indvar.i323, 1
  br label %bb3.i326, !dbg !7991

bb3.i326:                                         ; preds = %bb2.i322, %bb3.i308
  %indvar.i323 = phi i64 [ %indvar.next.i321, %bb2.i322 ], [ 0, %bb3.i308 ]
  %a_addr.0.i325 = getelementptr i8* %18, i64 %indvar.i323
  %b_addr.0.i324 = getelementptr [12 x i8]* @.str18272, i64 0, i64 %indvar.i323
  %229 = load i8* %a_addr.0.i325, align 1, !dbg !7992
  %230 = load i8* %b_addr.0.i324, align 1, !dbg !7992
  %231 = icmp eq i8 %229, %230, !dbg !7992
  br i1 %231, label %bb.i320, label %bb3.i344, !dbg !7992

bb28:                                             ; preds = %bb.i320, %bb.i302
  %232 = add nsw i32 %k.0, 1, !dbg !7993
  br label %bb99, !dbg !7993

bb.i338:                                          ; preds = %bb3.i344
  %233 = icmp eq i8 %234, 0, !dbg !7994
  br i1 %233, label %bb31, label %bb2.i340, !dbg !7994

bb2.i340:                                         ; preds = %bb.i338
  %indvar.next.i339 = add i64 %indvar.i341, 1
  br label %bb3.i344, !dbg !7996

bb3.i344:                                         ; preds = %bb2.i340, %bb3.i326
  %indvar.i341 = phi i64 [ %indvar.next.i339, %bb2.i340 ], [ 0, %bb3.i326 ]
  %a_addr.0.i343 = getelementptr i8* %18, i64 %indvar.i341
  %b_addr.0.i342 = getelementptr [18 x i8]* @.str19273, i64 0, i64 %indvar.i341
  %234 = load i8* %a_addr.0.i343, align 1, !dbg !7997
  %235 = load i8* %b_addr.0.i342, align 1, !dbg !7997
  %236 = icmp eq i8 %234, %235, !dbg !7997
  br i1 %236, label %bb.i338, label %bb3.i362, !dbg !7997

bb.i356:                                          ; preds = %bb3.i362
  %237 = icmp eq i8 %238, 0, !dbg !7994
  br i1 %237, label %bb31, label %bb2.i358, !dbg !7994

bb2.i358:                                         ; preds = %bb.i356
  %indvar.next.i357 = add i64 %indvar.i359, 1
  br label %bb3.i362, !dbg !7996

bb3.i362:                                         ; preds = %bb2.i358, %bb3.i344
  %indvar.i359 = phi i64 [ %indvar.next.i357, %bb2.i358 ], [ 0, %bb3.i344 ]
  %a_addr.0.i361 = getelementptr i8* %18, i64 %indvar.i359
  %b_addr.0.i360 = getelementptr [17 x i8]* @.str20274, i64 0, i64 %indvar.i359
  %238 = load i8* %a_addr.0.i361, align 1, !dbg !7997
  %239 = load i8* %b_addr.0.i360, align 1, !dbg !7997
  %240 = icmp eq i8 %238, %239, !dbg !7997
  br i1 %240, label %bb.i356, label %bb3.i373, !dbg !7997

bb31:                                             ; preds = %bb.i356, %bb.i338
  %241 = add nsw i32 %k.0, 1, !dbg !7998
  br label %bb99, !dbg !7998

bb.i367:                                          ; preds = %bb3.i373
  %242 = icmp eq i8 %243, 0, !dbg !7999
  br i1 %242, label %bb34, label %bb2.i369, !dbg !7999

bb2.i369:                                         ; preds = %bb.i367
  %indvar.next.i368 = add i64 %indvar.i370, 1
  br label %bb3.i373, !dbg !8001

bb3.i373:                                         ; preds = %bb2.i369, %bb3.i362
  %indvar.i370 = phi i64 [ %indvar.next.i368, %bb2.i369 ], [ 0, %bb3.i362 ]
  %a_addr.0.i372 = getelementptr i8* %18, i64 %indvar.i370
  %b_addr.0.i371 = getelementptr [10 x i8]* @.str21275, i64 0, i64 %indvar.i370
  %243 = load i8* %a_addr.0.i372, align 1, !dbg !8002
  %244 = load i8* %b_addr.0.i371, align 1, !dbg !8002
  %245 = icmp eq i8 %243, %244, !dbg !8002
  br i1 %245, label %bb.i367, label %bb3.i412, !dbg !8002

bb.i406:                                          ; preds = %bb3.i412
  %246 = icmp eq i8 %247, 0, !dbg !7999
  br i1 %246, label %bb34, label %bb2.i408, !dbg !7999

bb2.i408:                                         ; preds = %bb.i406
  %indvar.next.i407 = add i64 %indvar.i409, 1
  br label %bb3.i412, !dbg !8001

bb3.i412:                                         ; preds = %bb2.i408, %bb3.i373
  %indvar.i409 = phi i64 [ %indvar.next.i407, %bb2.i408 ], [ 0, %bb3.i373 ]
  %a_addr.0.i411 = getelementptr i8* %18, i64 %indvar.i409
  %b_addr.0.i410 = getelementptr [9 x i8]* @.str22276, i64 0, i64 %indvar.i409
  %247 = load i8* %a_addr.0.i411, align 1, !dbg !8002
  %248 = load i8* %b_addr.0.i410, align 1, !dbg !8002
  %249 = icmp eq i8 %247, %248, !dbg !8002
  br i1 %249, label %bb.i406, label %bb3.i430, !dbg !8002

bb34:                                             ; preds = %bb.i406, %bb.i367
  %250 = add nsw i32 %k.0, 1, !dbg !8003
  br label %bb99, !dbg !8003

bb.i424:                                          ; preds = %bb3.i430
  %251 = icmp eq i8 %252, 0, !dbg !8004
  br i1 %251, label %bb37, label %bb2.i426, !dbg !8004

bb2.i426:                                         ; preds = %bb.i424
  %indvar.next.i425 = add i64 %indvar.i427, 1
  br label %bb3.i430, !dbg !8006

bb3.i430:                                         ; preds = %bb2.i426, %bb3.i412
  %indvar.i427 = phi i64 [ %indvar.next.i425, %bb2.i426 ], [ 0, %bb3.i412 ]
  %a_addr.0.i429 = getelementptr i8* %18, i64 %indvar.i427
  %b_addr.0.i428 = getelementptr [11 x i8]* @.str23277, i64 0, i64 %indvar.i427
  %252 = load i8* %a_addr.0.i429, align 1, !dbg !8007
  %253 = load i8* %b_addr.0.i428, align 1, !dbg !8007
  %254 = icmp eq i8 %252, %253, !dbg !8007
  br i1 %254, label %bb.i424, label %bb3.i459, !dbg !8007

bb.i453:                                          ; preds = %bb3.i459
  %255 = icmp eq i8 %256, 0, !dbg !8004
  br i1 %255, label %bb37, label %bb2.i455, !dbg !8004

bb2.i455:                                         ; preds = %bb.i453
  %indvar.next.i454 = add i64 %indvar.i456, 1
  br label %bb3.i459, !dbg !8006

bb3.i459:                                         ; preds = %bb2.i455, %bb3.i430
  %indvar.i456 = phi i64 [ %indvar.next.i454, %bb2.i455 ], [ 0, %bb3.i430 ]
  %a_addr.0.i458 = getelementptr i8* %18, i64 %indvar.i456
  %b_addr.0.i457 = getelementptr [10 x i8]* @.str24278, i64 0, i64 %indvar.i456
  %256 = load i8* %a_addr.0.i458, align 1, !dbg !8007
  %257 = load i8* %b_addr.0.i457, align 1, !dbg !8007
  %258 = icmp eq i8 %256, %257, !dbg !8007
  br i1 %258, label %bb.i453, label %bb3.i497, !dbg !8007

bb37:                                             ; preds = %bb.i453, %bb.i424
  %259 = add nsw i32 %k.0, 1, !dbg !8008
  %260 = icmp eq i32 %259, %0, !dbg !8008
  br i1 %260, label %bb39, label %bb40, !dbg !8008

bb39:                                             ; preds = %bb37
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8009

bb40:                                             ; preds = %bb37
  %261 = sext i32 %259 to i64, !dbg !8011
  %262 = getelementptr inbounds i8** %1, i64 %261, !dbg !8011
  %263 = load i8** %262, align 8, !dbg !8011
  %264 = add i32 %k.0, 2, !dbg !8011
  %265 = load i8* %263, align 1, !dbg !8012
  switch i8 %265, label %bb9.preheader.i477 [
    i8 0, label %bb.i472
    i8 48, label %bb2.i473
  ]

bb.i472:                                          ; preds = %bb40
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8013

bb2.i473:                                         ; preds = %bb40
  %266 = getelementptr inbounds i8* %263, i64 1, !dbg !8014
  %267 = load i8* %266, align 1, !dbg !8014
  switch i8 %267, label %bb9.preheader.i477 [
    i8 120, label %bb5.i474
    i8 88, label %bb5.i474
  ]

bb5.i474:                                         ; preds = %bb2.i473, %bb2.i473
  %268 = getelementptr inbounds i8* %263, i64 2, !dbg !8015
  br label %bb9.preheader.i477, !dbg !8015

bb9.preheader.i477:                               ; preds = %bb5.i474, %bb2.i473, %bb40
  %base.0.ph.i475 = phi i64 [ 10, %bb2.i473 ], [ 16, %bb5.i474 ], [ 10, %bb40 ]
  %s_addr.0.ph.i476 = phi i8* [ %263, %bb2.i473 ], [ %268, %bb5.i474 ], [ %263, %bb40 ]
  br label %bb9.i488

bb6.i478:                                         ; preds = %bb9.i488
  %269 = add i8 %285, -48, !dbg !8016
  %270 = icmp ult i8 %269, 10, !dbg !8016
  br i1 %270, label %bb.i501, label %bb1.i502, !dbg !8016

bb.i501:                                          ; preds = %bb6.i478
  %271 = sext i8 %285 to i32, !dbg !8016
  %272 = add nsw i32 %271, -48, !dbg !8016
  br label %__getxdigit.exit508, !dbg !8016

bb1.i502:                                         ; preds = %bb6.i478
  %273 = add i8 %285, -65, !dbg !8016
  %274 = icmp ult i8 %273, 6, !dbg !8016
  br i1 %274, label %bb2.i503, label %bb3.i504, !dbg !8016

bb2.i503:                                         ; preds = %bb1.i502
  %275 = sext i8 %285 to i32, !dbg !8016
  %276 = add nsw i32 %275, -55, !dbg !8016
  br label %__getxdigit.exit508, !dbg !8016

bb3.i504:                                         ; preds = %bb1.i502
  %277 = add i8 %285, -97, !dbg !8016
  %278 = icmp ult i8 %277, 6, !dbg !8016
  br i1 %278, label %bb4.i505, label %bb8.i484, !dbg !8016

bb4.i505:                                         ; preds = %bb3.i504
  %279 = sext i8 %285 to i32, !dbg !8016
  %280 = add nsw i32 %279, -87, !dbg !8016
  br label %__getxdigit.exit508, !dbg !8016

__getxdigit.exit508:                              ; preds = %bb4.i505, %bb2.i503, %bb.i501
  %iftmp.12.0.i506 = phi i32 [ %272, %bb.i501 ], [ %276, %bb2.i503 ], [ %280, %bb4.i505 ]
  %281 = icmp eq i32 %iftmp.12.0.i506, -1, !dbg !8018
  br i1 %281, label %bb8.i484, label %bb7.i480, !dbg !8018

bb7.i480:                                         ; preds = %__getxdigit.exit508
  %282 = mul nsw i64 %res.0.ph.i481, %base.0.ph.i475, !dbg !8019
  %283 = sext i32 %iftmp.12.0.i506 to i64, !dbg !8019
  %284 = add nsw i64 %283, %282, !dbg !8019
  %indvar.next1674 = add i64 %indvar1673, 1
  br label %bb9.i488, !dbg !8019

bb8.i484:                                         ; preds = %__getxdigit.exit508, %bb3.i504
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([54 x i8]* @.str25279, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8020

bb9.i488:                                         ; preds = %bb7.i480, %bb9.preheader.i477
  %indvar1673 = phi i64 [ 0, %bb9.preheader.i477 ], [ %indvar.next1674, %bb7.i480 ]
  %res.0.ph.i481 = phi i64 [ 0, %bb9.preheader.i477 ], [ %284, %bb7.i480 ]
  %s_addr.0.ph14.i482 = getelementptr i8* %s_addr.0.ph.i476, i64 %indvar1673
  %285 = load i8* %s_addr.0.ph14.i482, align 1, !dbg !8022
  %286 = icmp eq i8 %285, 0, !dbg !8022
  br i1 %286, label %__str_to_int.exit489, label %bb6.i478, !dbg !8022

__str_to_int.exit489:                             ; preds = %bb9.i488
  %287 = trunc i64 %res.0.ph.i481 to i32, !dbg !8011
  br label %bb99, !dbg !8011

bb.i491:                                          ; preds = %bb3.i497
  %288 = icmp eq i8 %289, 0, !dbg !8023
  br i1 %288, label %bb43, label %bb2.i493, !dbg !8023

bb2.i493:                                         ; preds = %bb.i491
  %indvar.next.i492 = add i64 %indvar.i494, 1
  br label %bb3.i497, !dbg !8025

bb3.i497:                                         ; preds = %bb2.i493, %bb3.i459
  %indvar.i494 = phi i64 [ %indvar.next.i492, %bb2.i493 ], [ 0, %bb3.i459 ]
  %a_addr.0.i496 = getelementptr i8* %18, i64 %indvar.i494
  %b_addr.0.i495 = getelementptr [14 x i8]* @.str26280, i64 0, i64 %indvar.i494
  %289 = load i8* %a_addr.0.i496, align 1, !dbg !8026
  %290 = load i8* %b_addr.0.i495, align 1, !dbg !8026
  %291 = icmp eq i8 %289, %290, !dbg !8026
  br i1 %291, label %bb.i491, label %bb3.i515, !dbg !8026

bb.i509:                                          ; preds = %bb3.i515
  %292 = icmp eq i8 %293, 0, !dbg !8023
  br i1 %292, label %bb43, label %bb2.i511, !dbg !8023

bb2.i511:                                         ; preds = %bb.i509
  %indvar.next.i510 = add i64 %indvar.i512, 1
  br label %bb3.i515, !dbg !8025

bb3.i515:                                         ; preds = %bb2.i511, %bb3.i497
  %indvar.i512 = phi i64 [ %indvar.next.i510, %bb2.i511 ], [ 0, %bb3.i497 ]
  %a_addr.0.i514 = getelementptr i8* %18, i64 %indvar.i512
  %b_addr.0.i513 = getelementptr [13 x i8]* @.str27281, i64 0, i64 %indvar.i512
  %293 = load i8* %a_addr.0.i514, align 1, !dbg !8026
  %294 = load i8* %b_addr.0.i513, align 1, !dbg !8026
  %295 = icmp eq i8 %293, %294, !dbg !8026
  br i1 %295, label %bb.i509, label %bb3.i565, !dbg !8026

bb43:                                             ; preds = %bb.i509, %bb.i491
  %296 = add nsw i32 %k.0, 2, !dbg !8027
  %297 = icmp slt i32 %296, %0, !dbg !8027
  br i1 %297, label %bb46, label %bb45, !dbg !8027

bb45:                                             ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8028

bb46:                                             ; preds = %bb43
  %298 = add nsw i32 %k.0, 1, !dbg !8030
  %299 = sext i32 %298 to i64, !dbg !8031
  %300 = getelementptr inbounds i8** %1, i64 %299, !dbg !8031
  %301 = load i8** %300, align 8, !dbg !8031
  %302 = load i8* %301, align 1, !dbg !8032
  switch i8 %302, label %bb9.preheader.i526 [
    i8 0, label %bb.i521
    i8 48, label %bb2.i522
  ]

bb.i521:                                          ; preds = %bb46
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8033

bb2.i522:                                         ; preds = %bb46
  %303 = getelementptr inbounds i8* %301, i64 1, !dbg !8034
  %304 = load i8* %303, align 1, !dbg !8034
  switch i8 %304, label %bb9.preheader.i526 [
    i8 120, label %bb5.i523
    i8 88, label %bb5.i523
  ]

bb5.i523:                                         ; preds = %bb2.i522, %bb2.i522
  %305 = getelementptr inbounds i8* %301, i64 2, !dbg !8035
  br label %bb9.preheader.i526, !dbg !8035

bb9.preheader.i526:                               ; preds = %bb5.i523, %bb2.i522, %bb46
  %base.0.ph.i524 = phi i64 [ 10, %bb2.i522 ], [ 16, %bb5.i523 ], [ 10, %bb46 ]
  %s_addr.0.ph.i525 = phi i8* [ %301, %bb2.i522 ], [ %305, %bb5.i523 ], [ %301, %bb46 ]
  br label %bb9.i537

bb6.i527:                                         ; preds = %bb9.i537
  %306 = add i8 %322, -48, !dbg !8036
  %307 = icmp ult i8 %306, 10, !dbg !8036
  br i1 %307, label %bb.i587, label %bb1.i588, !dbg !8036

bb.i587:                                          ; preds = %bb6.i527
  %308 = sext i8 %322 to i32, !dbg !8036
  %309 = add nsw i32 %308, -48, !dbg !8036
  br label %__getxdigit.exit594, !dbg !8036

bb1.i588:                                         ; preds = %bb6.i527
  %310 = add i8 %322, -65, !dbg !8036
  %311 = icmp ult i8 %310, 6, !dbg !8036
  br i1 %311, label %bb2.i589, label %bb3.i590, !dbg !8036

bb2.i589:                                         ; preds = %bb1.i588
  %312 = sext i8 %322 to i32, !dbg !8036
  %313 = add nsw i32 %312, -55, !dbg !8036
  br label %__getxdigit.exit594, !dbg !8036

bb3.i590:                                         ; preds = %bb1.i588
  %314 = add i8 %322, -97, !dbg !8036
  %315 = icmp ult i8 %314, 6, !dbg !8036
  br i1 %315, label %bb4.i591, label %bb8.i533, !dbg !8036

bb4.i591:                                         ; preds = %bb3.i590
  %316 = sext i8 %322 to i32, !dbg !8036
  %317 = add nsw i32 %316, -87, !dbg !8036
  br label %__getxdigit.exit594, !dbg !8036

__getxdigit.exit594:                              ; preds = %bb4.i591, %bb2.i589, %bb.i587
  %iftmp.12.0.i592 = phi i32 [ %309, %bb.i587 ], [ %313, %bb2.i589 ], [ %317, %bb4.i591 ]
  %318 = icmp eq i32 %iftmp.12.0.i592, -1, !dbg !8038
  br i1 %318, label %bb8.i533, label %bb7.i529, !dbg !8038

bb7.i529:                                         ; preds = %__getxdigit.exit594
  %319 = mul nsw i64 %res.0.ph.i530, %base.0.ph.i524, !dbg !8039
  %320 = sext i32 %iftmp.12.0.i592 to i64, !dbg !8039
  %321 = add nsw i64 %320, %319, !dbg !8039
  %indvar.next1668 = add i64 %indvar1667, 1
  br label %bb9.i537, !dbg !8039

bb8.i533:                                         ; preds = %__getxdigit.exit594, %bb3.i590
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8040

bb9.i537:                                         ; preds = %bb7.i529, %bb9.preheader.i526
  %indvar1667 = phi i64 [ 0, %bb9.preheader.i526 ], [ %indvar.next1668, %bb7.i529 ]
  %res.0.ph.i530 = phi i64 [ 0, %bb9.preheader.i526 ], [ %321, %bb7.i529 ]
  %s_addr.0.ph14.i531 = getelementptr i8* %s_addr.0.ph.i525, i64 %indvar1667
  %322 = load i8* %s_addr.0.ph14.i531, align 1, !dbg !8042
  %323 = icmp eq i8 %322, 0, !dbg !8042
  br i1 %323, label %__str_to_int.exit538, label %bb6.i527, !dbg !8042

__str_to_int.exit538:                             ; preds = %bb9.i537
  %324 = trunc i64 %res.0.ph.i530 to i32, !dbg !8031
  %325 = sext i32 %296 to i64, !dbg !8043
  %326 = getelementptr inbounds i8** %1, i64 %325, !dbg !8043
  %327 = load i8** %326, align 8, !dbg !8043
  %328 = add i32 %k.0, 3, !dbg !8043
  %329 = load i8* %327, align 1, !dbg !8044
  switch i8 %329, label %bb9.preheader.i545 [
    i8 0, label %bb.i540
    i8 48, label %bb2.i541
  ]

bb.i540:                                          ; preds = %__str_to_int.exit538
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8045

bb2.i541:                                         ; preds = %__str_to_int.exit538
  %330 = getelementptr inbounds i8* %327, i64 1, !dbg !8046
  %331 = load i8* %330, align 1, !dbg !8046
  switch i8 %331, label %bb9.preheader.i545 [
    i8 120, label %bb5.i542
    i8 88, label %bb5.i542
  ]

bb5.i542:                                         ; preds = %bb2.i541, %bb2.i541
  %332 = getelementptr inbounds i8* %327, i64 2, !dbg !8047
  br label %bb9.preheader.i545, !dbg !8047

bb9.preheader.i545:                               ; preds = %bb5.i542, %bb2.i541, %__str_to_int.exit538
  %base.0.ph.i543 = phi i64 [ 10, %bb2.i541 ], [ 16, %bb5.i542 ], [ 10, %__str_to_int.exit538 ]
  %s_addr.0.ph.i544 = phi i8* [ %327, %bb2.i541 ], [ %332, %bb5.i542 ], [ %327, %__str_to_int.exit538 ]
  br label %bb9.i556

bb6.i546:                                         ; preds = %bb9.i556
  %333 = add i8 %349, -48, !dbg !8048
  %334 = icmp ult i8 %333, 10, !dbg !8048
  br i1 %334, label %bb.i569, label %bb1.i570, !dbg !8048

bb.i569:                                          ; preds = %bb6.i546
  %335 = sext i8 %349 to i32, !dbg !8048
  %336 = add nsw i32 %335, -48, !dbg !8048
  br label %__getxdigit.exit576, !dbg !8048

bb1.i570:                                         ; preds = %bb6.i546
  %337 = add i8 %349, -65, !dbg !8048
  %338 = icmp ult i8 %337, 6, !dbg !8048
  br i1 %338, label %bb2.i571, label %bb3.i572, !dbg !8048

bb2.i571:                                         ; preds = %bb1.i570
  %339 = sext i8 %349 to i32, !dbg !8048
  %340 = add nsw i32 %339, -55, !dbg !8048
  br label %__getxdigit.exit576, !dbg !8048

bb3.i572:                                         ; preds = %bb1.i570
  %341 = add i8 %349, -97, !dbg !8048
  %342 = icmp ult i8 %341, 6, !dbg !8048
  br i1 %342, label %bb4.i573, label %bb8.i552, !dbg !8048

bb4.i573:                                         ; preds = %bb3.i572
  %343 = sext i8 %349 to i32, !dbg !8048
  %344 = add nsw i32 %343, -87, !dbg !8048
  br label %__getxdigit.exit576, !dbg !8048

__getxdigit.exit576:                              ; preds = %bb4.i573, %bb2.i571, %bb.i569
  %iftmp.12.0.i574 = phi i32 [ %336, %bb.i569 ], [ %340, %bb2.i571 ], [ %344, %bb4.i573 ]
  %345 = icmp eq i32 %iftmp.12.0.i574, -1, !dbg !8050
  br i1 %345, label %bb8.i552, label %bb7.i548, !dbg !8050

bb7.i548:                                         ; preds = %__getxdigit.exit576
  %346 = mul nsw i64 %res.0.ph.i549, %base.0.ph.i543, !dbg !8051
  %347 = sext i32 %iftmp.12.0.i574 to i64, !dbg !8051
  %348 = add nsw i64 %347, %346, !dbg !8051
  %indvar.next1671 = add i64 %indvar1670, 1
  br label %bb9.i556, !dbg !8051

bb8.i552:                                         ; preds = %__getxdigit.exit576, %bb3.i572
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([76 x i8]* @.str28282, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8052

bb9.i556:                                         ; preds = %bb7.i548, %bb9.preheader.i545
  %indvar1670 = phi i64 [ 0, %bb9.preheader.i545 ], [ %indvar.next1671, %bb7.i548 ]
  %res.0.ph.i549 = phi i64 [ 0, %bb9.preheader.i545 ], [ %348, %bb7.i548 ]
  %s_addr.0.ph14.i550 = getelementptr i8* %s_addr.0.ph.i544, i64 %indvar1670
  %349 = load i8* %s_addr.0.ph14.i550, align 1, !dbg !8054
  %350 = icmp eq i8 %349, 0, !dbg !8054
  br i1 %350, label %__str_to_int.exit557, label %bb6.i546, !dbg !8054

__str_to_int.exit557:                             ; preds = %bb9.i556
  %351 = trunc i64 %res.0.ph.i549 to i32, !dbg !8043
  br label %bb99, !dbg !8043

bb.i559:                                          ; preds = %bb3.i565
  %352 = icmp eq i8 %353, 0, !dbg !8055
  br i1 %352, label %bb49, label %bb2.i561, !dbg !8055

bb2.i561:                                         ; preds = %bb.i559
  %indvar.next.i560 = add i64 %indvar.i562, 1
  br label %bb3.i565, !dbg !8057

bb3.i565:                                         ; preds = %bb2.i561, %bb3.i515
  %indvar.i562 = phi i64 [ %indvar.next.i560, %bb2.i561 ], [ 0, %bb3.i515 ]
  %a_addr.0.i564 = getelementptr i8* %18, i64 %indvar.i562
  %b_addr.0.i563 = getelementptr [16 x i8]* @.str29283, i64 0, i64 %indvar.i562
  %353 = load i8* %a_addr.0.i564, align 1, !dbg !8058
  %354 = load i8* %b_addr.0.i563, align 1, !dbg !8058
  %355 = icmp eq i8 %353, %354, !dbg !8058
  br i1 %355, label %bb.i559, label %bb3.i583, !dbg !8058

bb.i577:                                          ; preds = %bb3.i583
  %356 = icmp eq i8 %357, 0, !dbg !8055
  br i1 %356, label %bb49, label %bb2.i579, !dbg !8055

bb2.i579:                                         ; preds = %bb.i577
  %indvar.next.i578 = add i64 %indvar.i580, 1
  br label %bb3.i583, !dbg !8057

bb3.i583:                                         ; preds = %bb2.i579, %bb3.i565
  %indvar.i580 = phi i64 [ %indvar.next.i578, %bb2.i579 ], [ 0, %bb3.i565 ]
  %a_addr.0.i582 = getelementptr i8* %18, i64 %indvar.i580
  %b_addr.0.i581 = getelementptr [15 x i8]* @.str30284, i64 0, i64 %indvar.i580
  %357 = load i8* %a_addr.0.i582, align 1, !dbg !8058
  %358 = load i8* %b_addr.0.i581, align 1, !dbg !8058
  %359 = icmp eq i8 %357, %358, !dbg !8058
  br i1 %359, label %bb.i577, label %bb3.i640, !dbg !8058

bb49:                                             ; preds = %bb.i577, %bb.i559
  %360 = add nsw i32 %k.0, 2, !dbg !8059
  %361 = icmp slt i32 %360, %0, !dbg !8059
  br i1 %361, label %bb52, label %bb51, !dbg !8059

bb51:                                             ; preds = %bb49
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31285, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8060

bb52:                                             ; preds = %bb49
  %362 = add nsw i32 %k.0, 1, !dbg !8062
  %363 = sext i32 %362 to i64, !dbg !8063
  %364 = getelementptr inbounds i8** %1, i64 %363, !dbg !8063
  %365 = load i8** %364, align 8, !dbg !8063
  %366 = load i8* %365, align 1, !dbg !8064
  switch i8 %366, label %bb9.preheader.i601 [
    i8 0, label %bb.i596
    i8 48, label %bb2.i597
  ]

bb.i596:                                          ; preds = %bb52
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31285, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8065

bb2.i597:                                         ; preds = %bb52
  %367 = getelementptr inbounds i8* %365, i64 1, !dbg !8066
  %368 = load i8* %367, align 1, !dbg !8066
  switch i8 %368, label %bb9.preheader.i601 [
    i8 120, label %bb5.i598
    i8 88, label %bb5.i598
  ]

bb5.i598:                                         ; preds = %bb2.i597, %bb2.i597
  %369 = getelementptr inbounds i8* %365, i64 2, !dbg !8067
  br label %bb9.preheader.i601, !dbg !8067

bb9.preheader.i601:                               ; preds = %bb5.i598, %bb2.i597, %bb52
  %base.0.ph.i599 = phi i64 [ 10, %bb2.i597 ], [ 16, %bb5.i598 ], [ 10, %bb52 ]
  %s_addr.0.ph.i600 = phi i8* [ %365, %bb2.i597 ], [ %369, %bb5.i598 ], [ %365, %bb52 ]
  br label %bb9.i612

bb6.i602:                                         ; preds = %bb9.i612
  %370 = add i8 %386, -48, !dbg !8068
  %371 = icmp ult i8 %370, 10, !dbg !8068
  br i1 %371, label %bb.i662, label %bb1.i663, !dbg !8068

bb.i662:                                          ; preds = %bb6.i602
  %372 = sext i8 %386 to i32, !dbg !8068
  %373 = add nsw i32 %372, -48, !dbg !8068
  br label %__getxdigit.exit669, !dbg !8068

bb1.i663:                                         ; preds = %bb6.i602
  %374 = add i8 %386, -65, !dbg !8068
  %375 = icmp ult i8 %374, 6, !dbg !8068
  br i1 %375, label %bb2.i664, label %bb3.i665, !dbg !8068

bb2.i664:                                         ; preds = %bb1.i663
  %376 = sext i8 %386 to i32, !dbg !8068
  %377 = add nsw i32 %376, -55, !dbg !8068
  br label %__getxdigit.exit669, !dbg !8068

bb3.i665:                                         ; preds = %bb1.i663
  %378 = add i8 %386, -97, !dbg !8068
  %379 = icmp ult i8 %378, 6, !dbg !8068
  br i1 %379, label %bb4.i666, label %bb8.i608, !dbg !8068

bb4.i666:                                         ; preds = %bb3.i665
  %380 = sext i8 %386 to i32, !dbg !8068
  %381 = add nsw i32 %380, -87, !dbg !8068
  br label %__getxdigit.exit669, !dbg !8068

__getxdigit.exit669:                              ; preds = %bb4.i666, %bb2.i664, %bb.i662
  %iftmp.12.0.i667 = phi i32 [ %373, %bb.i662 ], [ %377, %bb2.i664 ], [ %381, %bb4.i666 ]
  %382 = icmp eq i32 %iftmp.12.0.i667, -1, !dbg !8070
  br i1 %382, label %bb8.i608, label %bb7.i604, !dbg !8070

bb7.i604:                                         ; preds = %__getxdigit.exit669
  %383 = mul nsw i64 %res.0.ph.i605, %base.0.ph.i599, !dbg !8071
  %384 = sext i32 %iftmp.12.0.i667 to i64, !dbg !8071
  %385 = add nsw i64 %384, %383, !dbg !8071
  %indvar.next1662 = add i64 %indvar1661, 1
  br label %bb9.i612, !dbg !8071

bb8.i608:                                         ; preds = %__getxdigit.exit669, %bb3.i665
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31285, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8072

bb9.i612:                                         ; preds = %bb7.i604, %bb9.preheader.i601
  %indvar1661 = phi i64 [ 0, %bb9.preheader.i601 ], [ %indvar.next1662, %bb7.i604 ]
  %res.0.ph.i605 = phi i64 [ 0, %bb9.preheader.i601 ], [ %385, %bb7.i604 ]
  %s_addr.0.ph14.i606 = getelementptr i8* %s_addr.0.ph.i600, i64 %indvar1661
  %386 = load i8* %s_addr.0.ph14.i606, align 1, !dbg !8074
  %387 = icmp eq i8 %386, 0, !dbg !8074
  br i1 %387, label %__str_to_int.exit613, label %bb6.i602, !dbg !8074

__str_to_int.exit613:                             ; preds = %bb9.i612
  %388 = trunc i64 %res.0.ph.i605 to i32, !dbg !8063
  %389 = sext i32 %360 to i64, !dbg !8075
  %390 = getelementptr inbounds i8** %1, i64 %389, !dbg !8075
  %391 = load i8** %390, align 8, !dbg !8075
  %392 = add i32 %k.0, 3, !dbg !8075
  %393 = load i8* %391, align 1, !dbg !8076
  switch i8 %393, label %bb9.preheader.i620 [
    i8 0, label %bb.i615
    i8 48, label %bb2.i616
  ]

bb.i615:                                          ; preds = %__str_to_int.exit613
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31285, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8077

bb2.i616:                                         ; preds = %__str_to_int.exit613
  %394 = getelementptr inbounds i8* %391, i64 1, !dbg !8078
  %395 = load i8* %394, align 1, !dbg !8078
  switch i8 %395, label %bb9.preheader.i620 [
    i8 120, label %bb5.i617
    i8 88, label %bb5.i617
  ]

bb5.i617:                                         ; preds = %bb2.i616, %bb2.i616
  %396 = getelementptr inbounds i8* %391, i64 2, !dbg !8079
  br label %bb9.preheader.i620, !dbg !8079

bb9.preheader.i620:                               ; preds = %bb5.i617, %bb2.i616, %__str_to_int.exit613
  %base.0.ph.i618 = phi i64 [ 10, %bb2.i616 ], [ 16, %bb5.i617 ], [ 10, %__str_to_int.exit613 ]
  %s_addr.0.ph.i619 = phi i8* [ %391, %bb2.i616 ], [ %396, %bb5.i617 ], [ %391, %__str_to_int.exit613 ]
  br label %bb9.i631

bb6.i621:                                         ; preds = %bb9.i631
  %397 = add i8 %413, -48, !dbg !8080
  %398 = icmp ult i8 %397, 10, !dbg !8080
  br i1 %398, label %bb.i644, label %bb1.i645, !dbg !8080

bb.i644:                                          ; preds = %bb6.i621
  %399 = sext i8 %413 to i32, !dbg !8080
  %400 = add nsw i32 %399, -48, !dbg !8080
  br label %__getxdigit.exit651, !dbg !8080

bb1.i645:                                         ; preds = %bb6.i621
  %401 = add i8 %413, -65, !dbg !8080
  %402 = icmp ult i8 %401, 6, !dbg !8080
  br i1 %402, label %bb2.i646, label %bb3.i647, !dbg !8080

bb2.i646:                                         ; preds = %bb1.i645
  %403 = sext i8 %413 to i32, !dbg !8080
  %404 = add nsw i32 %403, -55, !dbg !8080
  br label %__getxdigit.exit651, !dbg !8080

bb3.i647:                                         ; preds = %bb1.i645
  %405 = add i8 %413, -97, !dbg !8080
  %406 = icmp ult i8 %405, 6, !dbg !8080
  br i1 %406, label %bb4.i648, label %bb8.i627, !dbg !8080

bb4.i648:                                         ; preds = %bb3.i647
  %407 = sext i8 %413 to i32, !dbg !8080
  %408 = add nsw i32 %407, -87, !dbg !8080
  br label %__getxdigit.exit651, !dbg !8080

__getxdigit.exit651:                              ; preds = %bb4.i648, %bb2.i646, %bb.i644
  %iftmp.12.0.i649 = phi i32 [ %400, %bb.i644 ], [ %404, %bb2.i646 ], [ %408, %bb4.i648 ]
  %409 = icmp eq i32 %iftmp.12.0.i649, -1, !dbg !8082
  br i1 %409, label %bb8.i627, label %bb7.i623, !dbg !8082

bb7.i623:                                         ; preds = %__getxdigit.exit651
  %410 = mul nsw i64 %res.0.ph.i624, %base.0.ph.i618, !dbg !8083
  %411 = sext i32 %iftmp.12.0.i649 to i64, !dbg !8083
  %412 = add nsw i64 %411, %410, !dbg !8083
  %indvar.next1665 = add i64 %indvar1664, 1
  br label %bb9.i631, !dbg !8083

bb8.i627:                                         ; preds = %__getxdigit.exit651, %bb3.i647
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([82 x i8]* @.str31285, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8084

bb9.i631:                                         ; preds = %bb7.i623, %bb9.preheader.i620
  %indvar1664 = phi i64 [ 0, %bb9.preheader.i620 ], [ %indvar.next1665, %bb7.i623 ]
  %res.0.ph.i624 = phi i64 [ 0, %bb9.preheader.i620 ], [ %412, %bb7.i623 ]
  %s_addr.0.ph14.i625 = getelementptr i8* %s_addr.0.ph.i619, i64 %indvar1664
  %413 = load i8* %s_addr.0.ph14.i625, align 1, !dbg !8086
  %414 = icmp eq i8 %413, 0, !dbg !8086
  br i1 %414, label %__str_to_int.exit632, label %bb6.i621, !dbg !8086

__str_to_int.exit632:                             ; preds = %bb9.i631
  %415 = trunc i64 %res.0.ph.i624 to i32, !dbg !8075
  br label %bb99, !dbg !8075

bb.i634:                                          ; preds = %bb3.i640
  %416 = icmp eq i8 %417, 0, !dbg !8087
  br i1 %416, label %bb55, label %bb2.i636, !dbg !8087

bb2.i636:                                         ; preds = %bb.i634
  %indvar.next.i635 = add i64 %indvar.i637, 1
  br label %bb3.i640, !dbg !8089

bb3.i640:                                         ; preds = %bb2.i636, %bb3.i583
  %indvar.i637 = phi i64 [ %indvar.next.i635, %bb2.i636 ], [ 0, %bb3.i583 ]
  %a_addr.0.i639 = getelementptr i8* %18, i64 %indvar.i637
  %b_addr.0.i638 = getelementptr [19 x i8]* @.str32286, i64 0, i64 %indvar.i637
  %417 = load i8* %a_addr.0.i639, align 1, !dbg !8090
  %418 = load i8* %b_addr.0.i638, align 1, !dbg !8090
  %419 = icmp eq i8 %417, %418, !dbg !8090
  br i1 %419, label %bb.i634, label %bb3.i658, !dbg !8090

bb.i652:                                          ; preds = %bb3.i658
  %420 = icmp eq i8 %421, 0, !dbg !8087
  br i1 %420, label %bb55, label %bb2.i654, !dbg !8087

bb2.i654:                                         ; preds = %bb.i652
  %indvar.next.i653 = add i64 %indvar.i655, 1
  br label %bb3.i658, !dbg !8089

bb3.i658:                                         ; preds = %bb2.i654, %bb3.i640
  %indvar.i655 = phi i64 [ %indvar.next.i653, %bb2.i654 ], [ 0, %bb3.i640 ]
  %a_addr.0.i657 = getelementptr i8* %18, i64 %indvar.i655
  %b_addr.0.i656 = getelementptr [18 x i8]* @.str33287, i64 0, i64 %indvar.i655
  %421 = load i8* %a_addr.0.i657, align 1, !dbg !8090
  %422 = load i8* %b_addr.0.i656, align 1, !dbg !8090
  %423 = icmp eq i8 %421, %422, !dbg !8090
  br i1 %423, label %bb.i652, label %bb3.i676, !dbg !8090

bb55:                                             ; preds = %bb.i652, %bb.i634
  %424 = add nsw i32 %k.0, 1, !dbg !8091
  br label %bb99, !dbg !8091

bb.i670:                                          ; preds = %bb3.i676
  %425 = icmp eq i8 %426, 0, !dbg !8092
  br i1 %425, label %bb58, label %bb2.i672, !dbg !8092

bb2.i672:                                         ; preds = %bb.i670
  %indvar.next.i671 = add i64 %indvar.i673, 1
  br label %bb3.i676, !dbg !8094

bb3.i676:                                         ; preds = %bb2.i672, %bb3.i658
  %indvar.i673 = phi i64 [ %indvar.next.i671, %bb2.i672 ], [ 0, %bb3.i658 ]
  %a_addr.0.i675 = getelementptr i8* %18, i64 %indvar.i673
  %b_addr.0.i674 = getelementptr [15 x i8]* @.str34288, i64 0, i64 %indvar.i673
  %426 = load i8* %a_addr.0.i675, align 1, !dbg !8095
  %427 = load i8* %b_addr.0.i674, align 1, !dbg !8095
  %428 = icmp eq i8 %426, %427, !dbg !8095
  br i1 %428, label %bb.i670, label %bb3.i715, !dbg !8095

bb.i709:                                          ; preds = %bb3.i715
  %429 = icmp eq i8 %430, 0, !dbg !8092
  br i1 %429, label %bb58, label %bb2.i711, !dbg !8092

bb2.i711:                                         ; preds = %bb.i709
  %indvar.next.i710 = add i64 %indvar.i712, 1
  br label %bb3.i715, !dbg !8094

bb3.i715:                                         ; preds = %bb2.i711, %bb3.i676
  %indvar.i712 = phi i64 [ %indvar.next.i710, %bb2.i711 ], [ 0, %bb3.i676 ]
  %a_addr.0.i714 = getelementptr i8* %18, i64 %indvar.i712
  %b_addr.0.i713 = getelementptr [14 x i8]* @.str35289, i64 0, i64 %indvar.i712
  %430 = load i8* %a_addr.0.i714, align 1, !dbg !8095
  %431 = load i8* %b_addr.0.i713, align 1, !dbg !8095
  %432 = icmp eq i8 %430, %431, !dbg !8095
  br i1 %432, label %bb.i709, label %bb3.i850, !dbg !8095

bb58:                                             ; preds = %bb.i709, %bb.i670
  %433 = icmp ugt i32 %n_stream_fill_info.0, 99, !dbg !8096
  br i1 %433, label %bb60, label %bb61, !dbg !8096

bb60:                                             ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([32 x i8]* @.str37291, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8097

bb61:                                             ; preds = %bb58
  %434 = add nsw i32 %k.0, 2, !dbg !8099
  %435 = icmp slt i32 %434, %0, !dbg !8099
  br i1 %435, label %bb63, label %bb62, !dbg !8099

bb62:                                             ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8100

bb63:                                             ; preds = %bb61
  %436 = add nsw i32 %k.0, 1, !dbg !8102
  %437 = sext i32 %436 to i64, !dbg !8103
  %438 = getelementptr inbounds i8** %1, i64 %437, !dbg !8103
  %439 = load i8** %438, align 8, !dbg !8103
  %440 = load i8* %439, align 1, !dbg !8104
  switch i8 %440, label %bb9.preheader.i734 [
    i8 0, label %bb.i729
    i8 48, label %bb2.i730
  ]

bb.i729:                                          ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8105

bb2.i730:                                         ; preds = %bb63
  %441 = getelementptr inbounds i8* %439, i64 1, !dbg !8106
  %442 = load i8* %441, align 1, !dbg !8106
  switch i8 %442, label %bb9.preheader.i734 [
    i8 120, label %bb5.i731
    i8 88, label %bb5.i731
  ]

bb5.i731:                                         ; preds = %bb2.i730, %bb2.i730
  %443 = getelementptr inbounds i8* %439, i64 2, !dbg !8107
  br label %bb9.preheader.i734, !dbg !8107

bb9.preheader.i734:                               ; preds = %bb5.i731, %bb2.i730, %bb63
  %base.0.ph.i732 = phi i64 [ 10, %bb2.i730 ], [ 16, %bb5.i731 ], [ 10, %bb63 ]
  %s_addr.0.ph.i733 = phi i8* [ %439, %bb2.i730 ], [ %443, %bb5.i731 ], [ %439, %bb63 ]
  br label %bb9.i745

bb6.i735:                                         ; preds = %bb9.i745
  %444 = add i8 %460, -48, !dbg !8108
  %445 = icmp ult i8 %444, 10, !dbg !8108
  br i1 %445, label %bb.i758, label %bb1.i759, !dbg !8108

bb.i758:                                          ; preds = %bb6.i735
  %446 = sext i8 %460 to i32, !dbg !8108
  %447 = add nsw i32 %446, -48, !dbg !8108
  br label %__getxdigit.exit765, !dbg !8108

bb1.i759:                                         ; preds = %bb6.i735
  %448 = add i8 %460, -65, !dbg !8108
  %449 = icmp ult i8 %448, 6, !dbg !8108
  br i1 %449, label %bb2.i760, label %bb3.i761, !dbg !8108

bb2.i760:                                         ; preds = %bb1.i759
  %450 = sext i8 %460 to i32, !dbg !8108
  %451 = add nsw i32 %450, -55, !dbg !8108
  br label %__getxdigit.exit765, !dbg !8108

bb3.i761:                                         ; preds = %bb1.i759
  %452 = add i8 %460, -97, !dbg !8108
  %453 = icmp ult i8 %452, 6, !dbg !8108
  br i1 %453, label %bb4.i762, label %bb8.i741, !dbg !8108

bb4.i762:                                         ; preds = %bb3.i761
  %454 = sext i8 %460 to i32, !dbg !8108
  %455 = add nsw i32 %454, -87, !dbg !8108
  br label %__getxdigit.exit765, !dbg !8108

__getxdigit.exit765:                              ; preds = %bb4.i762, %bb2.i760, %bb.i758
  %iftmp.12.0.i763 = phi i32 [ %447, %bb.i758 ], [ %451, %bb2.i760 ], [ %455, %bb4.i762 ]
  %456 = icmp eq i32 %iftmp.12.0.i763, -1, !dbg !8110
  br i1 %456, label %bb8.i741, label %bb7.i737, !dbg !8110

bb7.i737:                                         ; preds = %__getxdigit.exit765
  %457 = mul nsw i64 %res.0.ph.i738, %base.0.ph.i732, !dbg !8111
  %458 = sext i32 %iftmp.12.0.i763 to i64, !dbg !8111
  %459 = add nsw i64 %458, %457, !dbg !8111
  %indvar.next1653 = add i64 %indvar1652, 1
  br label %bb9.i745, !dbg !8111

bb8.i741:                                         ; preds = %__getxdigit.exit765, %bb3.i761
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8112

bb9.i745:                                         ; preds = %bb7.i737, %bb9.preheader.i734
  %indvar1652 = phi i64 [ 0, %bb9.preheader.i734 ], [ %indvar.next1653, %bb7.i737 ]
  %res.0.ph.i738 = phi i64 [ 0, %bb9.preheader.i734 ], [ %459, %bb7.i737 ]
  %s_addr.0.ph14.i739 = getelementptr i8* %s_addr.0.ph.i733, i64 %indvar1652
  %460 = load i8* %s_addr.0.ph14.i739, align 1, !dbg !8114
  %461 = icmp eq i8 %460, 0, !dbg !8114
  br i1 %461, label %__str_to_int.exit746, label %bb6.i735, !dbg !8114

__str_to_int.exit746:                             ; preds = %bb9.i745
  %462 = trunc i64 %res.0.ph.i738 to i32, !dbg !8103
  %463 = zext i32 %n_stream_fill_info.0 to i64, !dbg !8103
  %464 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 0, !dbg !8103
  store i32 %462, i32* %464, align 8, !dbg !8103
  %465 = sext i32 %434 to i64, !dbg !8115
  %466 = getelementptr inbounds i8** %1, i64 %465, !dbg !8115
  %467 = load i8** %466, align 8, !dbg !8115
  br label %bb3.i754, !dbg !8116

bb.i748:                                          ; preds = %bb3.i754
  %468 = icmp eq i8 %469, 0, !dbg !8117
  br i1 %468, label %bb64, label %bb2.i750, !dbg !8117

bb2.i750:                                         ; preds = %bb.i748
  %indvar.next.i749 = add i64 %indvar.i751, 1
  br label %bb3.i754, !dbg !8118

bb3.i754:                                         ; preds = %bb2.i750, %__str_to_int.exit746
  %indvar.i751 = phi i64 [ %indvar.next.i749, %bb2.i750 ], [ 0, %__str_to_int.exit746 ]
  %a_addr.0.i753 = getelementptr i8* %467, i64 %indvar.i751
  %b_addr.0.i752 = getelementptr [4 x i8]* @.str38292, i64 0, i64 %indvar.i751
  %469 = load i8* %a_addr.0.i753, align 1, !dbg !8116
  %470 = load i8* %b_addr.0.i752, align 1, !dbg !8116
  %471 = icmp eq i8 %469, %470, !dbg !8116
  br i1 %471, label %bb.i748, label %bb3.i811, !dbg !8116

bb64:                                             ; preds = %bb.i748
  %472 = add i32 %k.0, 4, !dbg !8119
  %473 = icmp slt i32 %472, %0, !dbg !8119
  br i1 %473, label %bb66, label %bb65, !dbg !8119

bb65:                                             ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8120

bb66:                                             ; preds = %bb64
  %474 = add i32 %k.0, 3, !dbg !8122
  %475 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8123
  store i32 0, i32* %475, align 4, !dbg !8123
  %476 = sext i32 %474 to i64, !dbg !8124
  %477 = getelementptr inbounds i8** %1, i64 %476, !dbg !8124
  %478 = load i8** %477, align 8, !dbg !8124
  %479 = load i8* %478, align 1, !dbg !8125
  switch i8 %479, label %bb9.preheader.i772 [
    i8 0, label %bb.i767
    i8 48, label %bb2.i768
  ]

bb.i767:                                          ; preds = %bb66
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8126

bb2.i768:                                         ; preds = %bb66
  %480 = getelementptr inbounds i8* %478, i64 1, !dbg !8127
  %481 = load i8* %480, align 1, !dbg !8127
  switch i8 %481, label %bb9.preheader.i772 [
    i8 120, label %bb5.i769
    i8 88, label %bb5.i769
  ]

bb5.i769:                                         ; preds = %bb2.i768, %bb2.i768
  %482 = getelementptr inbounds i8* %478, i64 2, !dbg !8128
  br label %bb9.preheader.i772, !dbg !8128

bb9.preheader.i772:                               ; preds = %bb5.i769, %bb2.i768, %bb66
  %base.0.ph.i770 = phi i64 [ 10, %bb2.i768 ], [ 16, %bb5.i769 ], [ 10, %bb66 ]
  %s_addr.0.ph.i771 = phi i8* [ %478, %bb2.i768 ], [ %482, %bb5.i769 ], [ %478, %bb66 ]
  br label %bb9.i783

bb6.i773:                                         ; preds = %bb9.i783
  %483 = add i8 %499, -48, !dbg !8129
  %484 = icmp ult i8 %483, 10, !dbg !8129
  br i1 %484, label %bb.i834, label %bb1.i835, !dbg !8129

bb.i834:                                          ; preds = %bb6.i773
  %485 = sext i8 %499 to i32, !dbg !8129
  %486 = add nsw i32 %485, -48, !dbg !8129
  br label %__getxdigit.exit841, !dbg !8129

bb1.i835:                                         ; preds = %bb6.i773
  %487 = add i8 %499, -65, !dbg !8129
  %488 = icmp ult i8 %487, 6, !dbg !8129
  br i1 %488, label %bb2.i836, label %bb3.i837, !dbg !8129

bb2.i836:                                         ; preds = %bb1.i835
  %489 = sext i8 %499 to i32, !dbg !8129
  %490 = add nsw i32 %489, -55, !dbg !8129
  br label %__getxdigit.exit841, !dbg !8129

bb3.i837:                                         ; preds = %bb1.i835
  %491 = add i8 %499, -97, !dbg !8129
  %492 = icmp ult i8 %491, 6, !dbg !8129
  br i1 %492, label %bb4.i838, label %bb8.i779, !dbg !8129

bb4.i838:                                         ; preds = %bb3.i837
  %493 = sext i8 %499 to i32, !dbg !8129
  %494 = add nsw i32 %493, -87, !dbg !8129
  br label %__getxdigit.exit841, !dbg !8129

__getxdigit.exit841:                              ; preds = %bb4.i838, %bb2.i836, %bb.i834
  %iftmp.12.0.i839 = phi i32 [ %486, %bb.i834 ], [ %490, %bb2.i836 ], [ %494, %bb4.i838 ]
  %495 = icmp eq i32 %iftmp.12.0.i839, -1, !dbg !8131
  br i1 %495, label %bb8.i779, label %bb7.i775, !dbg !8131

bb7.i775:                                         ; preds = %__getxdigit.exit841
  %496 = mul nsw i64 %res.0.ph.i776, %base.0.ph.i770, !dbg !8132
  %497 = sext i32 %iftmp.12.0.i839 to i64, !dbg !8132
  %498 = add nsw i64 %497, %496, !dbg !8132
  %indvar.next1656 = add i64 %indvar1655, 1
  br label %bb9.i783, !dbg !8132

bb8.i779:                                         ; preds = %__getxdigit.exit841, %bb3.i837
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8133

bb9.i783:                                         ; preds = %bb7.i775, %bb9.preheader.i772
  %indvar1655 = phi i64 [ 0, %bb9.preheader.i772 ], [ %indvar.next1656, %bb7.i775 ]
  %res.0.ph.i776 = phi i64 [ 0, %bb9.preheader.i772 ], [ %498, %bb7.i775 ]
  %s_addr.0.ph14.i777 = getelementptr i8* %s_addr.0.ph.i771, i64 %indvar1655
  %499 = load i8* %s_addr.0.ph14.i777, align 1, !dbg !8135
  %500 = icmp eq i8 %499, 0, !dbg !8135
  br i1 %500, label %__str_to_int.exit784, label %bb6.i773, !dbg !8135

__str_to_int.exit784:                             ; preds = %bb9.i783
  %501 = trunc i64 %res.0.ph.i776 to i32, !dbg !8124
  %502 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !8124
  store i32 %501, i32* %502, align 8, !dbg !8124
  %503 = sext i32 %472 to i64, !dbg !8136
  %504 = getelementptr inbounds i8** %1, i64 %503, !dbg !8136
  %505 = load i8** %504, align 8, !dbg !8136
  %506 = add i32 %k.0, 5, !dbg !8136
  %507 = load i8* %505, align 1, !dbg !8137
  switch i8 %507, label %bb9.preheader.i791 [
    i8 0, label %bb.i786
    i8 48, label %bb2.i787
  ]

bb.i786:                                          ; preds = %__str_to_int.exit784
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8138

bb2.i787:                                         ; preds = %__str_to_int.exit784
  %508 = getelementptr inbounds i8* %505, i64 1, !dbg !8139
  %509 = load i8* %508, align 1, !dbg !8139
  switch i8 %509, label %bb9.preheader.i791 [
    i8 120, label %bb5.i788
    i8 88, label %bb5.i788
  ]

bb5.i788:                                         ; preds = %bb2.i787, %bb2.i787
  %510 = getelementptr inbounds i8* %505, i64 2, !dbg !8140
  br label %bb9.preheader.i791, !dbg !8140

bb9.preheader.i791:                               ; preds = %bb5.i788, %bb2.i787, %__str_to_int.exit784
  %base.0.ph.i789 = phi i64 [ 10, %bb2.i787 ], [ 16, %bb5.i788 ], [ 10, %__str_to_int.exit784 ]
  %s_addr.0.ph.i790 = phi i8* [ %505, %bb2.i787 ], [ %510, %bb5.i788 ], [ %505, %__str_to_int.exit784 ]
  br label %bb9.i802

bb6.i792:                                         ; preds = %bb9.i802
  %511 = add i8 %527, -48, !dbg !8141
  %512 = icmp ult i8 %511, 10, !dbg !8141
  br i1 %512, label %bb.i815, label %bb1.i816, !dbg !8141

bb.i815:                                          ; preds = %bb6.i792
  %513 = sext i8 %527 to i32, !dbg !8141
  %514 = add nsw i32 %513, -48, !dbg !8141
  br label %__getxdigit.exit822, !dbg !8141

bb1.i816:                                         ; preds = %bb6.i792
  %515 = add i8 %527, -65, !dbg !8141
  %516 = icmp ult i8 %515, 6, !dbg !8141
  br i1 %516, label %bb2.i817, label %bb3.i818, !dbg !8141

bb2.i817:                                         ; preds = %bb1.i816
  %517 = sext i8 %527 to i32, !dbg !8141
  %518 = add nsw i32 %517, -55, !dbg !8141
  br label %__getxdigit.exit822, !dbg !8141

bb3.i818:                                         ; preds = %bb1.i816
  %519 = add i8 %527, -97, !dbg !8141
  %520 = icmp ult i8 %519, 6, !dbg !8141
  br i1 %520, label %bb4.i819, label %bb8.i798, !dbg !8141

bb4.i819:                                         ; preds = %bb3.i818
  %521 = sext i8 %527 to i32, !dbg !8141
  %522 = add nsw i32 %521, -87, !dbg !8141
  br label %__getxdigit.exit822, !dbg !8141

__getxdigit.exit822:                              ; preds = %bb4.i819, %bb2.i817, %bb.i815
  %iftmp.12.0.i820 = phi i32 [ %514, %bb.i815 ], [ %518, %bb2.i817 ], [ %522, %bb4.i819 ]
  %523 = icmp eq i32 %iftmp.12.0.i820, -1, !dbg !8143
  br i1 %523, label %bb8.i798, label %bb7.i794, !dbg !8143

bb7.i794:                                         ; preds = %__getxdigit.exit822
  %524 = mul nsw i64 %res.0.ph.i795, %base.0.ph.i789, !dbg !8144
  %525 = sext i32 %iftmp.12.0.i820 to i64, !dbg !8144
  %526 = add nsw i64 %525, %524, !dbg !8144
  %indvar.next1659 = add i64 %indvar1658, 1
  br label %bb9.i802, !dbg !8144

bb8.i798:                                         ; preds = %__getxdigit.exit822, %bb3.i818
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8145

bb9.i802:                                         ; preds = %bb7.i794, %bb9.preheader.i791
  %indvar1658 = phi i64 [ 0, %bb9.preheader.i791 ], [ %indvar.next1659, %bb7.i794 ]
  %res.0.ph.i795 = phi i64 [ 0, %bb9.preheader.i791 ], [ %526, %bb7.i794 ]
  %s_addr.0.ph14.i796 = getelementptr i8* %s_addr.0.ph.i790, i64 %indvar1658
  %527 = load i8* %s_addr.0.ph14.i796, align 1, !dbg !8147
  %528 = icmp eq i8 %527, 0, !dbg !8147
  br i1 %528, label %__str_to_int.exit803, label %bb6.i792, !dbg !8147

__str_to_int.exit803:                             ; preds = %bb9.i802
  %529 = trunc i64 %res.0.ph.i795 to i32, !dbg !8136
  %530 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8136
  %531 = bitcast i8** %530 to i32*, !dbg !8136
  store i32 %529, i32* %531, align 8, !dbg !8136
  %532 = add i32 %n_stream_fill_info.0, 1, !dbg !8148
  br label %bb99, !dbg !8148

bb.i805:                                          ; preds = %bb3.i811
  %533 = icmp eq i8 %534, 0, !dbg !8149
  br i1 %533, label %bb68, label %bb2.i807, !dbg !8149

bb2.i807:                                         ; preds = %bb.i805
  %indvar.next.i806 = add i64 %indvar.i808, 1
  br label %bb3.i811, !dbg !8151

bb3.i811:                                         ; preds = %bb2.i807, %bb3.i754
  %indvar.i808 = phi i64 [ %indvar.next.i806, %bb2.i807 ], [ 0, %bb3.i754 ]
  %a_addr.0.i810 = getelementptr i8* %467, i64 %indvar.i808
  %b_addr.0.i809 = getelementptr [5 x i8]* @.str39293, i64 0, i64 %indvar.i808
  %534 = load i8* %a_addr.0.i810, align 1, !dbg !8152
  %535 = load i8* %b_addr.0.i809, align 1, !dbg !8152
  %536 = icmp eq i8 %534, %535, !dbg !8152
  br i1 %536, label %bb.i805, label %bb3.i830, !dbg !8152

bb68:                                             ; preds = %bb.i805
  %537 = add i32 %k.0, 3, !dbg !8153
  %538 = icmp slt i32 %537, %0, !dbg !8154
  br i1 %538, label %bb70, label %bb69, !dbg !8154

bb69:                                             ; preds = %bb68
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8155

bb70:                                             ; preds = %bb68
  %539 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8157
  store i32 1, i32* %539, align 4, !dbg !8157
  %540 = sext i32 %537 to i64, !dbg !8158
  %541 = getelementptr inbounds i8** %1, i64 %540, !dbg !8158
  %542 = load i8** %541, align 8, !dbg !8158
  %543 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8158
  store i8* %542, i8** %543, align 8, !dbg !8158
  %544 = add i32 %k.0, 4, !dbg !8158
  %545 = call fastcc i64 @__convert_escape_sequences(i8* %542) nounwind, !dbg !8159
  %546 = trunc i64 %545 to i32, !dbg !8159
  %547 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 2, !dbg !8159
  store i32 %546, i32* %547, align 8, !dbg !8159
  %548 = add i32 %n_stream_fill_info.0, 1, !dbg !8160
  br label %bb99, !dbg !8160

bb.i824:                                          ; preds = %bb3.i830
  %549 = icmp eq i8 %550, 0, !dbg !8161
  br i1 %549, label %bb72, label %bb2.i826, !dbg !8161

bb2.i826:                                         ; preds = %bb.i824
  %indvar.next.i825 = add i64 %indvar.i827, 1
  br label %bb3.i830, !dbg !8163

bb3.i830:                                         ; preds = %bb2.i826, %bb3.i811
  %indvar.i827 = phi i64 [ %indvar.next.i825, %bb2.i826 ], [ 0, %bb3.i811 ]
  %a_addr.0.i829 = getelementptr i8* %467, i64 %indvar.i827
  %b_addr.0.i828 = getelementptr [5 x i8]* @.str40294, i64 0, i64 %indvar.i827
  %550 = load i8* %a_addr.0.i829, align 1, !dbg !8164
  %551 = load i8* %b_addr.0.i828, align 1, !dbg !8164
  %552 = icmp eq i8 %550, %551, !dbg !8164
  br i1 %552, label %bb.i824, label %bb75, !dbg !8164

bb72:                                             ; preds = %bb.i824
  %553 = add i32 %k.0, 3, !dbg !8165
  %554 = icmp slt i32 %553, %0, !dbg !8166
  br i1 %554, label %bb74, label %bb73, !dbg !8166

bb73:                                             ; preds = %bb72
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8167

bb74:                                             ; preds = %bb72
  %555 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 1, !dbg !8169
  store i32 2, i32* %555, align 4, !dbg !8169
  %556 = sext i32 %553 to i64, !dbg !8170
  %557 = getelementptr inbounds i8** %1, i64 %556, !dbg !8170
  %558 = load i8** %557, align 8, !dbg !8170
  %559 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 %463, i32 3, i32 0, !dbg !8170
  store i8* %558, i8** %559, align 8, !dbg !8170
  %560 = add i32 %k.0, 4, !dbg !8170
  %561 = add i32 %n_stream_fill_info.0, 1, !dbg !8171
  br label %bb99, !dbg !8171

bb75:                                             ; preds = %bb3.i830
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([121 x i8]* @.str36290, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !
  unreachable, !dbg !8172

bb.i844:                                          ; preds = %bb3.i850
  %562 = icmp eq i8 %563, 0, !dbg !8174
  br i1 %562, label %bb78, label %bb2.i846, !dbg !8174

bb2.i846:                                         ; preds = %bb.i844
  %indvar.next.i845 = add i64 %indvar.i847, 1
  br label %bb3.i850, !dbg !8176

bb3.i850:                                         ; preds = %bb2.i846, %bb3.i715
  %indvar.i847 = phi i64 [ %indvar.next.i845, %bb2.i846 ], [ 0, %bb3.i715 ]
  %a_addr.0.i849 = getelementptr i8* %18, i64 %indvar.i847
  %b_addr.0.i848 = getelementptr [17 x i8]* @.str41295, i64 0, i64 %indvar.i847
  %563 = load i8* %a_addr.0.i849, align 1, !dbg !8177
  %564 = load i8* %b_addr.0.i848, align 1, !dbg !8177
  %565 = icmp eq i8 %563, %564, !dbg !8177
  br i1 %565, label %bb.i844, label %bb3.i861, !dbg !8177

bb.i855:                                          ; preds = %bb3.i861
  %566 = icmp eq i8 %567, 0, !dbg !8174
  br i1 %566, label %bb78, label %bb2.i857, !dbg !8174

bb2.i857:                                         ; preds = %bb.i855
  %indvar.next.i856 = add i64 %indvar.i858, 1
  br label %bb3.i861, !dbg !8176

bb3.i861:                                         ; preds = %bb2.i857, %bb3.i850
  %indvar.i858 = phi i64 [ %indvar.next.i856, %bb2.i857 ], [ 0, %bb3.i850 ]
  %a_addr.0.i860 = getelementptr i8* %18, i64 %indvar.i858
  %b_addr.0.i859 = getelementptr [16 x i8]* @.str42296, i64 0, i64 %indvar.i858
  %567 = load i8* %a_addr.0.i860, align 1, !dbg !8177
  %568 = load i8* %b_addr.0.i859, align 1, !dbg !8177
  %569 = icmp eq i8 %567, %568, !dbg !8177
  br i1 %569, label %bb.i855, label %bb97, !dbg !8177

bb78:                                             ; preds = %bb.i855, %bb.i844
  %570 = icmp ugt i32 %n_dgram_fill_info.0, 99, !dbg !8178
  br i1 %570, label %bb81, label %bb82, !dbg !8178

bb81:                                             ; preds = %bb78
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([34 x i8]* @.str44298, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8179

bb82:                                             ; preds = %bb78
  %571 = add nsw i32 %k.0, 2, !dbg !8181
  %572 = icmp slt i32 %571, %0, !dbg !8181
  br i1 %572, label %bb84, label %bb83, !dbg !8181

bb83:                                             ; preds = %bb82
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8182

bb84:                                             ; preds = %bb82
  %573 = add nsw i32 %k.0, 1, !dbg !8184
  %574 = sext i32 %573 to i64, !dbg !8185
  %575 = getelementptr inbounds i8** %1, i64 %574, !dbg !8185
  %576 = load i8** %575, align 8, !dbg !8185
  %577 = load i8* %576, align 1, !dbg !8186
  switch i8 %577, label %bb9.preheader.i695 [
    i8 0, label %bb.i690
    i8 48, label %bb2.i691
  ]

bb.i690:                                          ; preds = %bb84
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8187

bb2.i691:                                         ; preds = %bb84
  %578 = getelementptr inbounds i8* %576, i64 1, !dbg !8188
  %579 = load i8* %578, align 1, !dbg !8188
  switch i8 %579, label %bb9.preheader.i695 [
    i8 120, label %bb5.i692
    i8 88, label %bb5.i692
  ]

bb5.i692:                                         ; preds = %bb2.i691, %bb2.i691
  %580 = getelementptr inbounds i8* %576, i64 2, !dbg !8189
  br label %bb9.preheader.i695, !dbg !8189

bb9.preheader.i695:                               ; preds = %bb5.i692, %bb2.i691, %bb84
  %base.0.ph.i693 = phi i64 [ 10, %bb2.i691 ], [ 16, %bb5.i692 ], [ 10, %bb84 ]
  %s_addr.0.ph.i694 = phi i8* [ %576, %bb2.i691 ], [ %580, %bb5.i692 ], [ %576, %bb84 ]
  br label %bb9.i706

bb6.i696:                                         ; preds = %bb9.i706
  %581 = add i8 %597, -48, !dbg !8190
  %582 = icmp ult i8 %581, 10, !dbg !8190
  br i1 %582, label %bb.i719, label %bb1.i720, !dbg !8190

bb.i719:                                          ; preds = %bb6.i696
  %583 = sext i8 %597 to i32, !dbg !8190
  %584 = add nsw i32 %583, -48, !dbg !8190
  br label %__getxdigit.exit726, !dbg !8190

bb1.i720:                                         ; preds = %bb6.i696
  %585 = add i8 %597, -65, !dbg !8190
  %586 = icmp ult i8 %585, 6, !dbg !8190
  br i1 %586, label %bb2.i721, label %bb3.i722, !dbg !8190

bb2.i721:                                         ; preds = %bb1.i720
  %587 = sext i8 %597 to i32, !dbg !8190
  %588 = add nsw i32 %587, -55, !dbg !8190
  br label %__getxdigit.exit726, !dbg !8190

bb3.i722:                                         ; preds = %bb1.i720
  %589 = add i8 %597, -97, !dbg !8190
  %590 = icmp ult i8 %589, 6, !dbg !8190
  br i1 %590, label %bb4.i723, label %bb8.i702, !dbg !8190

bb4.i723:                                         ; preds = %bb3.i722
  %591 = sext i8 %597 to i32, !dbg !8190
  %592 = add nsw i32 %591, -87, !dbg !8190
  br label %__getxdigit.exit726, !dbg !8190

__getxdigit.exit726:                              ; preds = %bb4.i723, %bb2.i721, %bb.i719
  %iftmp.12.0.i724 = phi i32 [ %584, %bb.i719 ], [ %588, %bb2.i721 ], [ %592, %bb4.i723 ]
  %593 = icmp eq i32 %iftmp.12.0.i724, -1, !dbg !8192
  br i1 %593, label %bb8.i702, label %bb7.i698, !dbg !8192

bb7.i698:                                         ; preds = %__getxdigit.exit726
  %594 = mul nsw i64 %res.0.ph.i699, %base.0.ph.i693, !dbg !8193
  %595 = sext i32 %iftmp.12.0.i724 to i64, !dbg !8193
  %596 = add nsw i64 %595, %594, !dbg !8193
  %indvar.next = add i64 %indvar, 1
  br label %bb9.i706, !dbg !8193

bb8.i702:                                         ; preds = %__getxdigit.exit726, %bb3.i722
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8194

bb9.i706:                                         ; preds = %bb7.i698, %bb9.preheader.i695
  %indvar = phi i64 [ 0, %bb9.preheader.i695 ], [ %indvar.next, %bb7.i698 ]
  %res.0.ph.i699 = phi i64 [ 0, %bb9.preheader.i695 ], [ %596, %bb7.i698 ]
  %s_addr.0.ph14.i700 = getelementptr i8* %s_addr.0.ph.i694, i64 %indvar
  %597 = load i8* %s_addr.0.ph14.i700, align 1, !dbg !8196
  %598 = icmp eq i8 %597, 0, !dbg !8196
  br i1 %598, label %__str_to_int.exit707, label %bb6.i696, !dbg !8196

__str_to_int.exit707:                             ; preds = %bb9.i706
  %599 = trunc i64 %res.0.ph.i699 to i32, !dbg !8185
  %600 = zext i32 %n_dgram_fill_info.0 to i64, !dbg !8185
  %601 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 0, !dbg !8185
  store i32 %599, i32* %601, align 8, !dbg !8185
  %602 = sext i32 %571 to i64, !dbg !8197
  %603 = getelementptr inbounds i8** %1, i64 %602, !dbg !8197
  %604 = load i8** %603, align 8, !dbg !8197
  br label %bb3.i686, !dbg !8198

bb.i680:                                          ; preds = %bb3.i686
  %605 = icmp eq i8 %606, 0, !dbg !8199
  br i1 %605, label %bb85, label %bb2.i682, !dbg !8199

bb2.i682:                                         ; preds = %bb.i680
  %indvar.next.i681 = add i64 %indvar.i683, 1
  br label %bb3.i686, !dbg !8200

bb3.i686:                                         ; preds = %bb2.i682, %__str_to_int.exit707
  %indvar.i683 = phi i64 [ %indvar.next.i681, %bb2.i682 ], [ 0, %__str_to_int.exit707 ]
  %a_addr.0.i685 = getelementptr i8* %604, i64 %indvar.i683
  %b_addr.0.i684 = getelementptr [4 x i8]* @.str38292, i64 0, i64 %indvar.i683
  %606 = load i8* %a_addr.0.i685, align 1, !dbg !8198
  %607 = load i8* %b_addr.0.i684, align 1, !dbg !8198
  %608 = icmp eq i8 %606, %607, !dbg !8198
  br i1 %608, label %bb.i680, label %bb3.i383, !dbg !8198

bb85:                                             ; preds = %bb.i680
  %609 = add i32 %k.0, 4, !dbg !8201
  %610 = icmp slt i32 %609, %0, !dbg !8201
  br i1 %610, label %bb87, label %bb86, !dbg !8201

bb86:                                             ; preds = %bb85
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8202

bb87:                                             ; preds = %bb85
  %611 = add i32 %k.0, 3, !dbg !8204
  %612 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8205
  store i32 0, i32* %612, align 4, !dbg !8205
  %613 = sext i32 %611 to i64, !dbg !8206
  %614 = getelementptr inbounds i8** %1, i64 %613, !dbg !8206
  %615 = load i8** %614, align 8, !dbg !8206
  %616 = load i8* %615, align 1, !dbg !8207
  switch i8 %616, label %bb9.preheader.i439 [
    i8 0, label %bb.i434
    i8 48, label %bb2.i435
  ]

bb.i434:                                          ; preds = %bb87
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8208

bb2.i435:                                         ; preds = %bb87
  %617 = getelementptr inbounds i8* %615, i64 1, !dbg !8209
  %618 = load i8* %617, align 1, !dbg !8209
  switch i8 %618, label %bb9.preheader.i439 [
    i8 120, label %bb5.i436
    i8 88, label %bb5.i436
  ]

bb5.i436:                                         ; preds = %bb2.i435, %bb2.i435
  %619 = getelementptr inbounds i8* %615, i64 2, !dbg !8210
  br label %bb9.preheader.i439, !dbg !8210

bb9.preheader.i439:                               ; preds = %bb5.i436, %bb2.i435, %bb87
  %base.0.ph.i437 = phi i64 [ 10, %bb2.i435 ], [ 16, %bb5.i436 ], [ 10, %bb87 ]
  %s_addr.0.ph.i438 = phi i8* [ %615, %bb2.i435 ], [ %619, %bb5.i436 ], [ %615, %bb87 ]
  br label %bb9.i450

bb6.i440:                                         ; preds = %bb9.i450
  %620 = add i8 %636, -48, !dbg !8211
  %621 = icmp ult i8 %620, 10, !dbg !8211
  br i1 %621, label %bb.i463, label %bb1.i464, !dbg !8211

bb.i463:                                          ; preds = %bb6.i440
  %622 = sext i8 %636 to i32, !dbg !8211
  %623 = add nsw i32 %622, -48, !dbg !8211
  br label %__getxdigit.exit470, !dbg !8211

bb1.i464:                                         ; preds = %bb6.i440
  %624 = add i8 %636, -65, !dbg !8211
  %625 = icmp ult i8 %624, 6, !dbg !8211
  br i1 %625, label %bb2.i465, label %bb3.i466, !dbg !8211

bb2.i465:                                         ; preds = %bb1.i464
  %626 = sext i8 %636 to i32, !dbg !8211
  %627 = add nsw i32 %626, -55, !dbg !8211
  br label %__getxdigit.exit470, !dbg !8211

bb3.i466:                                         ; preds = %bb1.i464
  %628 = add i8 %636, -97, !dbg !8211
  %629 = icmp ult i8 %628, 6, !dbg !8211
  br i1 %629, label %bb4.i467, label %bb8.i446, !dbg !8211

bb4.i467:                                         ; preds = %bb3.i466
  %630 = sext i8 %636 to i32, !dbg !8211
  %631 = add nsw i32 %630, -87, !dbg !8211
  br label %__getxdigit.exit470, !dbg !8211

__getxdigit.exit470:                              ; preds = %bb4.i467, %bb2.i465, %bb.i463
  %iftmp.12.0.i468 = phi i32 [ %623, %bb.i463 ], [ %627, %bb2.i465 ], [ %631, %bb4.i467 ]
  %632 = icmp eq i32 %iftmp.12.0.i468, -1, !dbg !8213
  br i1 %632, label %bb8.i446, label %bb7.i442, !dbg !8213

bb7.i442:                                         ; preds = %__getxdigit.exit470
  %633 = mul nsw i64 %res.0.ph.i443, %base.0.ph.i437, !dbg !8214
  %634 = sext i32 %iftmp.12.0.i468 to i64, !dbg !8214
  %635 = add nsw i64 %634, %633, !dbg !8214
  %indvar.next1647 = add i64 %indvar1646, 1
  br label %bb9.i450, !dbg !8214

bb8.i446:                                         ; preds = %__getxdigit.exit470, %bb3.i466
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8215

bb9.i450:                                         ; preds = %bb7.i442, %bb9.preheader.i439
  %indvar1646 = phi i64 [ 0, %bb9.preheader.i439 ], [ %indvar.next1647, %bb7.i442 ]
  %res.0.ph.i443 = phi i64 [ 0, %bb9.preheader.i439 ], [ %635, %bb7.i442 ]
  %s_addr.0.ph14.i444 = getelementptr i8* %s_addr.0.ph.i438, i64 %indvar1646
  %636 = load i8* %s_addr.0.ph14.i444, align 1, !dbg !8217
  %637 = icmp eq i8 %636, 0, !dbg !8217
  br i1 %637, label %__str_to_int.exit451, label %bb6.i440, !dbg !8217

__str_to_int.exit451:                             ; preds = %bb9.i450
  %638 = trunc i64 %res.0.ph.i443 to i32, !dbg !8206
  %639 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !8206
  store i32 %638, i32* %639, align 8, !dbg !8206
  %640 = sext i32 %609 to i64, !dbg !8218
  %641 = getelementptr inbounds i8** %1, i64 %640, !dbg !8218
  %642 = load i8** %641, align 8, !dbg !8218
  %643 = add i32 %k.0, 5, !dbg !8218
  %644 = load i8* %642, align 1, !dbg !8219
  switch i8 %644, label %bb9.preheader.i392 [
    i8 0, label %bb.i387
    i8 48, label %bb2.i388
  ]

bb.i387:                                          ; preds = %__str_to_int.exit451
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8220

bb2.i388:                                         ; preds = %__str_to_int.exit451
  %645 = getelementptr inbounds i8* %642, i64 1, !dbg !8221
  %646 = load i8* %645, align 1, !dbg !8221
  switch i8 %646, label %bb9.preheader.i392 [
    i8 120, label %bb5.i389
    i8 88, label %bb5.i389
  ]

bb5.i389:                                         ; preds = %bb2.i388, %bb2.i388
  %647 = getelementptr inbounds i8* %642, i64 2, !dbg !8222
  br label %bb9.preheader.i392, !dbg !8222

bb9.preheader.i392:                               ; preds = %bb5.i389, %bb2.i388, %__str_to_int.exit451
  %base.0.ph.i390 = phi i64 [ 10, %bb2.i388 ], [ 16, %bb5.i389 ], [ 10, %__str_to_int.exit451 ]
  %s_addr.0.ph.i391 = phi i8* [ %642, %bb2.i388 ], [ %647, %bb5.i389 ], [ %642, %__str_to_int.exit451 ]
  br label %bb9.i403

bb6.i393:                                         ; preds = %bb9.i403
  %648 = add i8 %664, -48, !dbg !8223
  %649 = icmp ult i8 %648, 10, !dbg !8223
  br i1 %649, label %bb.i416, label %bb1.i417, !dbg !8223

bb.i416:                                          ; preds = %bb6.i393
  %650 = sext i8 %664 to i32, !dbg !8223
  %651 = add nsw i32 %650, -48, !dbg !8223
  br label %__getxdigit.exit423, !dbg !8223

bb1.i417:                                         ; preds = %bb6.i393
  %652 = add i8 %664, -65, !dbg !8223
  %653 = icmp ult i8 %652, 6, !dbg !8223
  br i1 %653, label %bb2.i418, label %bb3.i419, !dbg !8223

bb2.i418:                                         ; preds = %bb1.i417
  %654 = sext i8 %664 to i32, !dbg !8223
  %655 = add nsw i32 %654, -55, !dbg !8223
  br label %__getxdigit.exit423, !dbg !8223

bb3.i419:                                         ; preds = %bb1.i417
  %656 = add i8 %664, -97, !dbg !8223
  %657 = icmp ult i8 %656, 6, !dbg !8223
  br i1 %657, label %bb4.i420, label %bb8.i399, !dbg !8223

bb4.i420:                                         ; preds = %bb3.i419
  %658 = sext i8 %664 to i32, !dbg !8223
  %659 = add nsw i32 %658, -87, !dbg !8223
  br label %__getxdigit.exit423, !dbg !8223

__getxdigit.exit423:                              ; preds = %bb4.i420, %bb2.i418, %bb.i416
  %iftmp.12.0.i421 = phi i32 [ %651, %bb.i416 ], [ %655, %bb2.i418 ], [ %659, %bb4.i420 ]
  %660 = icmp eq i32 %iftmp.12.0.i421, -1, !dbg !8225
  br i1 %660, label %bb8.i399, label %bb7.i395, !dbg !8225

bb7.i395:                                         ; preds = %__getxdigit.exit423
  %661 = mul nsw i64 %res.0.ph.i396, %base.0.ph.i390, !dbg !8226
  %662 = sext i32 %iftmp.12.0.i421 to i64, !dbg !8226
  %663 = add nsw i64 %662, %661, !dbg !8226
  %indvar.next1650 = add i64 %indvar1649, 1
  br label %bb9.i403, !dbg !8226

bb8.i399:                                         ; preds = %__getxdigit.exit423, %bb3.i419
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8227

bb9.i403:                                         ; preds = %bb7.i395, %bb9.preheader.i392
  %indvar1649 = phi i64 [ 0, %bb9.preheader.i392 ], [ %indvar.next1650, %bb7.i395 ]
  %res.0.ph.i396 = phi i64 [ 0, %bb9.preheader.i392 ], [ %663, %bb7.i395 ]
  %s_addr.0.ph14.i397 = getelementptr i8* %s_addr.0.ph.i391, i64 %indvar1649
  %664 = load i8* %s_addr.0.ph14.i397, align 1, !dbg !8229
  %665 = icmp eq i8 %664, 0, !dbg !8229
  br i1 %665, label %__str_to_int.exit404, label %bb6.i393, !dbg !8229

__str_to_int.exit404:                             ; preds = %bb9.i403
  %666 = trunc i64 %res.0.ph.i396 to i32, !dbg !8218
  %667 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8218
  %668 = bitcast i8** %667 to i32*, !dbg !8218
  store i32 %666, i32* %668, align 8, !dbg !8218
  %669 = add i32 %n_dgram_fill_info.0, 1, !dbg !8230
  br label %bb99, !dbg !8230

bb.i377:                                          ; preds = %bb3.i383
  %670 = icmp eq i8 %671, 0, !dbg !8231
  br i1 %670, label %bb89, label %bb2.i379, !dbg !8231

bb2.i379:                                         ; preds = %bb.i377
  %indvar.next.i378 = add i64 %indvar.i380, 1
  br label %bb3.i383, !dbg !8233

bb3.i383:                                         ; preds = %bb2.i379, %bb3.i686
  %indvar.i380 = phi i64 [ %indvar.next.i378, %bb2.i379 ], [ 0, %bb3.i686 ]
  %a_addr.0.i382 = getelementptr i8* %604, i64 %indvar.i380
  %b_addr.0.i381 = getelementptr [5 x i8]* @.str39293, i64 0, i64 %indvar.i380
  %671 = load i8* %a_addr.0.i382, align 1, !dbg !8234
  %672 = load i8* %b_addr.0.i381, align 1, !dbg !8234
  %673 = icmp eq i8 %671, %672, !dbg !8234
  br i1 %673, label %bb.i377, label %bb3.i163, !dbg !8234

bb89:                                             ; preds = %bb.i377
  %674 = add i32 %k.0, 3, !dbg !8235
  %675 = icmp slt i32 %674, %0, !dbg !8236
  br i1 %675, label %bb91, label %bb90, !dbg !8236

bb90:                                             ; preds = %bb89
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8237

bb91:                                             ; preds = %bb89
  %676 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8239
  store i32 1, i32* %676, align 4, !dbg !8239
  %677 = sext i32 %674 to i64, !dbg !8240
  %678 = getelementptr inbounds i8** %1, i64 %677, !dbg !8240
  %679 = load i8** %678, align 8, !dbg !8240
  %680 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8240
  store i8* %679, i8** %680, align 8, !dbg !8240
  %681 = add i32 %k.0, 4, !dbg !8240
  %682 = call fastcc i64 @__convert_escape_sequences(i8* %679) nounwind, !dbg !8241
  %683 = trunc i64 %682 to i32, !dbg !8241
  %684 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 2, !dbg !8241
  store i32 %683, i32* %684, align 8, !dbg !8241
  %685 = add i32 %n_dgram_fill_info.0, 1, !dbg !8242
  br label %bb99, !dbg !8242

bb.i157:                                          ; preds = %bb3.i163
  %686 = icmp eq i8 %687, 0, !dbg !8243
  br i1 %686, label %bb93, label %bb2.i159, !dbg !8243

bb2.i159:                                         ; preds = %bb.i157
  %indvar.next.i158 = add i64 %indvar.i160, 1
  br label %bb3.i163, !dbg !8245

bb3.i163:                                         ; preds = %bb2.i159, %bb3.i383
  %indvar.i160 = phi i64 [ %indvar.next.i158, %bb2.i159 ], [ 0, %bb3.i383 ]
  %a_addr.0.i162 = getelementptr i8* %604, i64 %indvar.i160
  %b_addr.0.i161 = getelementptr [5 x i8]* @.str40294, i64 0, i64 %indvar.i160
  %687 = load i8* %a_addr.0.i162, align 1, !dbg !8246
  %688 = load i8* %b_addr.0.i161, align 1, !dbg !8246
  %689 = icmp eq i8 %687, %688, !dbg !8246
  br i1 %689, label %bb.i157, label %bb96, !dbg !8246

bb93:                                             ; preds = %bb.i157
  %690 = add i32 %k.0, 3, !dbg !8247
  %691 = icmp slt i32 %690, %0, !dbg !8248
  br i1 %691, label %bb95, label %bb94, !dbg !8248

bb94:                                             ; preds = %bb93
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8249

bb95:                                             ; preds = %bb93
  %692 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 1, !dbg !8251
  store i32 2, i32* %692, align 4, !dbg !8251
  %693 = sext i32 %690 to i64, !dbg !8252
  %694 = getelementptr inbounds i8** %1, i64 %693, !dbg !8252
  %695 = load i8** %694, align 8, !dbg !8252
  %696 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 %600, i32 3, i32 0, !dbg !8252
  store i8* %695, i8** %696, align 8, !dbg !8252
  %697 = add i32 %k.0, 4, !dbg !8252
  %698 = add i32 %n_dgram_fill_info.0, 1, !dbg !8253
  br label %bb99, !dbg !8253

bb96:                                             ; preds = %bb3.i163
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([95 x i8]* @.str43297, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !d
  unreachable, !dbg !8254

bb97:                                             ; preds = %bb3.i861
  %699 = icmp eq i32 %704, 1024, !dbg !8256
  br i1 %699, label %bb.i105, label %__add_arg.exit, !dbg !8256

bb.i105:                                          ; preds = %bb97
  call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([37 x i8]* @.str3258, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !8258

__add_arg.exit:                                   ; preds = %bb97
  %700 = add nsw i32 %k.0, 1, !dbg !8257
  %701 = sext i32 %704 to i64, !dbg !8260
  %702 = getelementptr inbounds [1024 x i8*]* %new_argv, i64 0, i64 %701, !dbg !8260
  store i8* %18, i8** %702, align 8, !dbg !8260
  %703 = add nsw i32 %704, 1, !dbg !8261
  br label %bb99, !dbg !8257

bb99:                                             ; preds = %__add_arg.exit, %bb95, %bb91, %__str_to_int.exit404, %bb74, %bb70, %__str_to_int.exit803, %bb55, %__str_to_int.exit632, %__str_to_int.exit557, %__str_to_int.exit489, %bb34, %bb31, %bb28, %__str
  %704 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %63, %__add_arg.exit132 ], [ %704, %__str_to_int.exit300 ], [ %704, %bb28 ], [ %704, %bb31 ], [ %704, %bb34 ], [ %704, %__str_to_int.exit489 ], [ %704, %__str_to_int.exit557 ], [ %704, %__str_t
  %save_all_writes_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %save_all_writes_flag.0, %__add_arg.exit132 ], [ %save_all_writes_flag.0, %__str_to_int.exit300 ], [ %save_all_writes_flag.0, %bb28 ], [ 1, %bb31 ], [ %save_all_writes_flag.0
  %sym_stdout_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stdout_flag.0, %__add_arg.exit132 ], [ %sym_stdout_flag.0, %__str_to_int.exit300 ], [ 1, %bb28 ], [ %sym_stdout_flag.0, %bb31 ], [ %sym_stdout_flag.0, %bb34 ], [ %sym_stdout_
  %sym_dgram_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgram_len.0, %__add_arg.exit132 ], [ %sym_dgram_len.0, %__str_to_int.exit300 ], [ %sym_dgram_len.0, %bb28 ], [ %sym_dgram_len.0, %bb31 ], [ %sym_dgram_len.0, %bb34 ], [ %sym_dg
  %sym_dgrams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_dgrams.0, %__add_arg.exit132 ], [ %sym_dgrams.0, %__str_to_int.exit300 ], [ %sym_dgrams.0, %bb28 ], [ %sym_dgrams.0, %bb31 ], [ %sym_dgrams.0, %bb34 ], [ %sym_dgrams.0, %__str_to_
  %sym_stream_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_stream_len.0, %__add_arg.exit132 ], [ %sym_stream_len.0, %__str_to_int.exit300 ], [ %sym_stream_len.0, %bb28 ], [ %sym_stream_len.0, %bb31 ], [ %sym_stream_len.0, %bb34 ], [ %
  %sym_streams.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_streams.0, %__add_arg.exit132 ], [ %sym_streams.0, %__str_to_int.exit300 ], [ %sym_streams.0, %bb28 ], [ %sym_streams.0, %bb31 ], [ %sym_streams.0, %bb34 ], [ %sym_streams.0, %__
  %sym_file_len.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_file_len.0, %__add_arg.exit132 ], [ %223, %__str_to_int.exit300 ], [ %sym_file_len.0, %bb28 ], [ %sym_file_len.0, %bb31 ], [ %sym_file_len.0, %bb34 ], [ %sym_file_len.0, %__str_
  %sym_files.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %sym_files.0, %__add_arg.exit132 ], [ %196, %__str_to_int.exit300 ], [ %sym_files.0, %bb28 ], [ %sym_files.0, %bb31 ], [ %sym_files.0, %bb34 ], [ %sym_files.0, %__str_to_int.exit489 ], 
  %one_line_streams_flag.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %one_line_streams_flag.0, %__add_arg.exit132 ], [ %one_line_streams_flag.0, %__str_to_int.exit300 ], [ %one_line_streams_flag.0, %bb28 ], [ %one_line_streams_flag.0, %bb31 ]
  %n_stream_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_stream_fill_info.0, %__add_arg.exit132 ], [ %n_stream_fill_info.0, %__str_to_int.exit300 ], [ %n_stream_fill_info.0, %bb28 ], [ %n_stream_fill_info.0, %bb31 ], [ %n_stream_f
  %n_dgram_fill_info.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %n_dgram_fill_info.0, %__add_arg.exit132 ], [ %n_dgram_fill_info.0, %__str_to_int.exit300 ], [ %n_dgram_fill_info.0, %bb28 ], [ %n_dgram_fill_info.0, %bb31 ], [ %n_dgram_fill_in
  %fd_fail.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %fd_fail.0, %__add_arg.exit132 ], [ %fd_fail.0, %__str_to_int.exit300 ], [ %fd_fail.0, %bb28 ], [ %fd_fail.0, %bb31 ], [ 1, %bb34 ], [ %287, %__str_to_int.exit489 ], [ %fd_fail.0, %__str_
  %sym_arg_num.1 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %60, %__add_arg.exit132 ], [ %sym_arg_num.1, %__str_to_int.exit300 ], [ %sym_arg_num.1, %bb28 ], [ %sym_arg_num.1, %bb31 ], [ %sym_arg_num.1, %bb34 ], [ %sym_arg_num.1, %__str_to_int.
  %k.0 = phi i32 [ 0, %bb3.i ], [ 0, %entry ], [ 0, %bb ], [ %32, %__add_arg.exit132 ], [ %200, %__str_to_int.exit300 ], [ %232, %bb28 ], [ %241, %bb31 ], [ %250, %bb34 ], [ %264, %__str_to_int.exit489 ], [ %328, %__str_to_int.exit557 ], [ %392, %__str_t
  %705 = icmp slt i32 %k.0, %0, !dbg !8262
  br i1 %705, label %bb3, label %bb100, !dbg !8262

bb100:                                            ; preds = %bb99
  %706 = add nsw i32 %704, 1, !dbg !8263
  %707 = sext i32 %706 to i64, !dbg !8263
  %int_cast_to_i64 = bitcast i64 3 to i64
  %708 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %708, label %klee_overshift_check.exit, label %bb.i2

bb.i2:                                            ; preds = %bb100
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb100
  %709 = shl nsw i64 %707, 3, !dbg !8263
  %710 = call noalias i8* @malloc(i64 %709) nounwind, !dbg !8263
  %711 = bitcast i8* %710 to i8**, !dbg !8263
  call void @klee_mark_global(i8* %710) nounwind, !dbg !8264
  %712 = sext i32 %704 to i64, !dbg !8265
  %int_cast_to_i641 = bitcast i64 3 to i64
  %713 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %713, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %714 = shl nsw i64 %712, 3, !dbg !8265
  %new_argv101102 = bitcast [1024 x i8*]* %new_argv to i8*, !dbg !8265
  %715 = call i8* @memcpy(i8* %710, i8* %new_argv101102, i64 %714)
  %716 = getelementptr inbounds i8** %711, i64 %712, !dbg !8266
  store i8* null, i8** %716, align 8, !dbg !8266
  store i32 %704, i32* %argcPtr, align 4, !dbg !8267
  store i8** %711, i8*** %argvPtr, align 8, !dbg !8268
  %stream_fill_info103 = getelementptr inbounds [100 x %struct.fill_info_t]* %stream_fill_info, i64 0, i64 0, !dbg !8269
  %dgram_fill_info104 = getelementptr inbounds [100 x %struct.fill_info_t]* %dgram_fill_info, i64 0, i64 0, !dbg !8269
  call void @klee_init_fds(i32 %sym_files.0, i32 %sym_file_len.0, i32 %sym_stdout_flag.0, i32 %save_all_writes_flag.0, i32 %sym_streams.0, i32 %sym_stream_len.0, i32 %sym_dgrams.0, i32 %sym_dgram_len.0, i32 %fd_fail.0, i32 %one_line_streams_flag.0, %stru
  ret void, !dbg !8270
}

declare void @llvm.dbg.value(metadata, i64, metadata) nounwind readnone

define internal fastcc i8* @__get_sym_str(i32 %numChars, i8* %name) nounwind {
entry:
  %0 = add nsw i32 %numChars, 1, !dbg !8271
  %1 = sext i32 %0 to i64, !dbg !8271
  %2 = tail call noalias i8* @malloc(i64 %1) nounwind, !dbg !8271
  tail call void @klee_mark_global(i8* %2) nounwind, !dbg !8272
  tail call void @klee_make_symbolic(i8* %2, i64 %1, i8* %name) nounwind, !dbg !8273
  %3 = icmp sgt i32 %numChars, 0, !dbg !8274
  br i1 %3, label %bb.lr.ph, label %bb2, !dbg !8274

bb.lr.ph:                                         ; preds = %entry
  %tmp1 = zext i32 %numChars to i64
  br label %bb

bb:                                               ; preds = %bb, %bb.lr.ph
  %indvar = phi i64 [ 0, %bb.lr.ph ], [ %indvar.next, %bb ]
  %scevgep = getelementptr i8* %2, i64 %indvar
  %4 = load i8* %scevgep, align 1, !dbg !8275
  %5 = add i8 %4, -32, !dbg !8276
  %6 = icmp ult i8 %5, 95, !dbg !8276
  %7 = zext i1 %6 to i64, !dbg !8275
  tail call void @klee_prefer_cex(i8* %2, i64 %7) nounwind, !dbg !8275
  %indvar.next = add i64 %indvar, 1
  %exitcond2 = icmp eq i64 %indvar.next, %tmp1
  br i1 %exitcond2, label %bb2, label %bb, !dbg !8274

bb2:                                              ; preds = %bb, %entry
  %8 = sext i32 %numChars to i64, !dbg !8278
  %9 = getelementptr inbounds i8* %2, i64 %8, !dbg !8278
  store i8 0, i8* %9, align 1, !dbg !8278
  ret i8* %2, !dbg !8279
}

declare void @klee_mark_global(i8*)

declare void @klee_make_symbolic(i8*, i64, i8*)

declare void @klee_prefer_cex(i8*, i64)

declare void @klee_report_error(i8*, i32, i8*, i8*) noreturn

define internal fastcc i64 @__convert_escape_sequences(i8* nocapture %s) nounwind {
entry:
  br label %bb21, !dbg !8280

bb1:                                              ; preds = %bb21
  store i8 %70, i8* %d.0, align 1, !dbg !8281
  %0 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !8281
  br label %bb21.backedge, !dbg !8281

bb21.backedge:                                    ; preds = %bb19, %klee_overshift_check.exit9, %bb15, %klee_overshift_check.exit7, %klee_overshift_check.exit5, %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb1
  %s_addr.0.be = phi i8* [ %0, %bb1 ], [ %4, %bb3 ], [ %63, %klee_overshift_check.exit9 ], [ %48, %bb19 ], [ %4, %bb10 ], [ %4, %bb9 ], [ %4, %bb8 ], [ %4, %bb7 ], [ %4, %bb6 ], [ %4, %bb5 ], [ %4, %bb4 ], [ %21, %klee_overshift_check.exit5 ], [ %14, %kl
  %indvar.next = add i64 %69, 1
  br label %bb21

bb2:                                              ; preds = %bb21
  %1 = getelementptr inbounds i8* %s_addr.0, i64 1, !dbg !8282
  %2 = load i8* %1, align 1, !dbg !8283
  %3 = sext i8 %2 to i32, !dbg !8283
  %4 = getelementptr inbounds i8* %s_addr.0, i64 2, !dbg !8283
  switch i32 %3, label %bb3 [
    i32 48, label %bb11
    i32 49, label %bb11
    i32 50, label %bb11
    i32 51, label %bb11
    i32 52, label %bb11
    i32 53, label %bb11
    i32 54, label %bb11
    i32 55, label %bb11
    i32 97, label %bb4
    i32 98, label %bb5
    i32 102, label %bb6
    i32 110, label %bb7
    i32 114, label %bb8
    i32 116, label %bb9
    i32 118, label %bb10
    i32 120, label %bb16
  ], !dbg !8283

bb3:                                              ; preds = %bb2
  store i8 %2, i8* %d.0, align 1, !dbg !8284
  br label %bb21.backedge, !dbg !8284

bb4:                                              ; preds = %bb2
  store i8 7, i8* %d.0, align 1, !dbg !8285
  br label %bb21.backedge, !dbg !8285

bb5:                                              ; preds = %bb2
  store i8 8, i8* %d.0, align 1, !dbg !8286
  br label %bb21.backedge, !dbg !8286

bb6:                                              ; preds = %bb2
  store i8 12, i8* %d.0, align 1, !dbg !8287
  br label %bb21.backedge, !dbg !8287

bb7:                                              ; preds = %bb2
  store i8 10, i8* %d.0, align 1, !dbg !8288
  br label %bb21.backedge, !dbg !8288

bb8:                                              ; preds = %bb2
  store i8 13, i8* %d.0, align 1, !dbg !8289
  br label %bb21.backedge, !dbg !8289

bb9:                                              ; preds = %bb2
  store i8 9, i8* %d.0, align 1, !dbg !8290
  br label %bb21.backedge, !dbg !8290

bb10:                                             ; preds = %bb2
  store i8 11, i8* %d.0, align 1, !dbg !8291
  br label %bb21.backedge, !dbg !8291

bb11:                                             ; preds = %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2, %bb2
  %5 = add i8 %2, -48, !dbg !8292
  %6 = add nsw i32 %3, -48, !dbg !8292
  %7 = icmp ult i8 %5, 8, !dbg !8292
  %. = select i1 %7, i32 %6, i32 -1
  %8 = load i8* %4, align 1, !dbg !8295
  %9 = add i8 %8, -48, !dbg !8296
  %10 = icmp ult i8 %9, 8, !dbg !8296
  br i1 %10, label %__getodigit.exit26, label %bb15, !dbg !8296

__getodigit.exit26:                               ; preds = %bb11
  %11 = sext i8 %8 to i32, !dbg !8296
  %12 = add nsw i32 %11, -48, !dbg !8296
  %13 = icmp sgt i32 %12, -1, !dbg !8295
  br i1 %13, label %bb12, label %bb15, !dbg !8295

bb12:                                             ; preds = %__getodigit.exit26
  %14 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !8297
  %15 = load i8* %14, align 1, !dbg !8298
  %16 = add i8 %15, -48, !dbg !8299
  %17 = icmp ult i8 %16, 8, !dbg !8299
  br i1 %17, label %__getodigit.exit38, label %bb14, !dbg !8299

__getodigit.exit38:                               ; preds = %bb12
  %18 = sext i8 %15 to i32, !dbg !8299
  %19 = add nsw i32 %18, -48, !dbg !8299
  %20 = icmp sgt i32 %19, -1, !dbg !8298
  br i1 %20, label %bb13, label %bb14, !dbg !8298

bb13:                                             ; preds = %__getodigit.exit38
  %21 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !8300
  %int_cast_to_i64 = zext i32 6 to i64
  %22 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %22, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb13
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb13
  %23 = shl nsw i32 %., 6, !dbg !8301
  %int_cast_to_i641 = zext i32 3 to i64
  %24 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %24, label %klee_overshift_check.exit5, label %bb.i4

bb.i4:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit5:                       ; preds = %klee_overshift_check.exit
  %25 = shl nsw i32 %12, 3, !dbg !8301
  %26 = or i32 %25, %23
  %27 = or i32 %26, %19
  %28 = trunc i32 %27 to i8, !dbg !8301
  store i8 %28, i8* %d.0, align 1, !dbg !8301
  br label %bb21.backedge, !dbg !8301

bb14:                                             ; preds = %__getodigit.exit38, %bb12
  %int_cast_to_i642 = zext i32 3 to i64
  %29 = icmp ult i64 %int_cast_to_i642, 32
  br i1 %29, label %klee_overshift_check.exit7, label %bb.i6

bb.i6:                                            ; preds = %bb14
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit7:                       ; preds = %bb14
  %30 = shl nsw i32 %., 3, !dbg !8302
  %31 = or i32 %12, %30
  %32 = trunc i32 %31 to i8, !dbg !8302
  store i8 %32, i8* %d.0, align 1, !dbg !8302
  br label %bb21.backedge, !dbg !8302

bb15:                                             ; preds = %__getodigit.exit26, %bb11
  %33 = trunc i32 %. to i8, !dbg !8303
  store i8 %33, i8* %d.0, align 1, !dbg !8303
  br label %bb21.backedge, !dbg !8303

bb16:                                             ; preds = %bb2
  %34 = load i8* %4, align 1, !dbg !8304
  %35 = add i8 %34, -48, !dbg !8305
  %36 = icmp ult i8 %35, 10, !dbg !8305
  br i1 %36, label %bb.i28, label %bb1.i29, !dbg !8305

bb.i28:                                           ; preds = %bb16
  %37 = sext i8 %34 to i32, !dbg !8305
  %38 = add nsw i32 %37, -48, !dbg !8305
  br label %__getxdigit.exit34, !dbg !8305

bb1.i29:                                          ; preds = %bb16
  %39 = add i8 %34, -65, !dbg !8305
  %40 = icmp ult i8 %39, 6, !dbg !8305
  br i1 %40, label %bb2.i30, label %bb3.i31, !dbg !8305

bb2.i30:                                          ; preds = %bb1.i29
  %41 = sext i8 %34 to i32, !dbg !8305
  %42 = add nsw i32 %41, -55, !dbg !8305
  br label %__getxdigit.exit34, !dbg !8305

bb3.i31:                                          ; preds = %bb1.i29
  %43 = add i8 %34, -97, !dbg !8305
  %44 = icmp ult i8 %43, 6, !dbg !8305
  br i1 %44, label %bb4.i32, label %bb20, !dbg !8305

bb4.i32:                                          ; preds = %bb3.i31
  %45 = sext i8 %34 to i32, !dbg !8305
  %46 = add nsw i32 %45, -87, !dbg !8305
  br label %__getxdigit.exit34, !dbg !8305

__getxdigit.exit34:                               ; preds = %bb4.i32, %bb2.i30, %bb.i28
  %iftmp.12.0.i33 = phi i32 [ %38, %bb.i28 ], [ %42, %bb2.i30 ], [ %46, %bb4.i32 ]
  %47 = icmp sgt i32 %iftmp.12.0.i33, -1, !dbg !8304
  br i1 %47, label %bb17, label %bb20, !dbg !8304

bb17:                                             ; preds = %__getxdigit.exit34
  %48 = getelementptr inbounds i8* %s_addr.0, i64 3, !dbg !8306
  %49 = load i8* %48, align 1, !dbg !8307
  %50 = add i8 %49, -48, !dbg !8308
  %51 = icmp ult i8 %50, 10, !dbg !8308
  br i1 %51, label %bb.i27, label %bb1.i, !dbg !8308

bb.i27:                                           ; preds = %bb17
  %52 = sext i8 %49 to i32, !dbg !8308
  %53 = add nsw i32 %52, -48, !dbg !8308
  br label %__getxdigit.exit, !dbg !8308

bb1.i:                                            ; preds = %bb17
  %54 = add i8 %49, -65, !dbg !8308
  %55 = icmp ult i8 %54, 6, !dbg !8308
  br i1 %55, label %bb2.i, label %bb3.i, !dbg !8308

bb2.i:                                            ; preds = %bb1.i
  %56 = sext i8 %49 to i32, !dbg !8308
  %57 = add nsw i32 %56, -55, !dbg !8308
  br label %__getxdigit.exit, !dbg !8308

bb3.i:                                            ; preds = %bb1.i
  %58 = add i8 %49, -97, !dbg !8308
  %59 = icmp ult i8 %58, 6, !dbg !8308
  br i1 %59, label %bb4.i, label %bb19, !dbg !8308

bb4.i:                                            ; preds = %bb3.i
  %60 = sext i8 %49 to i32, !dbg !8308
  %61 = add nsw i32 %60, -87, !dbg !8308
  br label %__getxdigit.exit, !dbg !8308

__getxdigit.exit:                                 ; preds = %bb4.i, %bb2.i, %bb.i27
  %iftmp.12.0.i = phi i32 [ %53, %bb.i27 ], [ %57, %bb2.i ], [ %61, %bb4.i ]
  %62 = icmp sgt i32 %iftmp.12.0.i, -1, !dbg !8307
  br i1 %62, label %bb18, label %bb19, !dbg !8307

bb18:                                             ; preds = %__getxdigit.exit
  %63 = getelementptr inbounds i8* %s_addr.0, i64 4, !dbg !8309
  %int_cast_to_i643 = zext i32 4 to i64
  %64 = icmp ult i64 %int_cast_to_i643, 32
  br i1 %64, label %klee_overshift_check.exit9, label %bb.i8

bb.i8:                                            ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit9:                       ; preds = %bb18
  %65 = shl nsw i32 %iftmp.12.0.i33, 4, !dbg !8310
  %66 = or i32 %iftmp.12.0.i, %65
  %67 = trunc i32 %66 to i8, !dbg !8310
  store i8 %67, i8* %d.0, align 1, !dbg !8310
  br label %bb21.backedge, !dbg !8310

bb19:                                             ; preds = %__getxdigit.exit, %bb3.i
  %68 = trunc i32 %iftmp.12.0.i33 to i8, !dbg !8311
  store i8 %68, i8* %d.0, align 1, !dbg !8311
  br label %bb21.backedge, !dbg !8311

bb20:                                             ; preds = %__getxdigit.exit34, %bb3.i31
  tail call void @klee_report_error(i8* getelementptr inbounds ([16 x i8]* @.str255, i64 0, i64 0), i32 24, i8* getelementptr inbounds ([24 x i8]* @.str2257, i64 0, i64 0), i8* getelementptr inbounds ([9 x i8]* @.str1256, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !8312

bb21:                                             ; preds = %bb21.backedge, %entry
  %69 = phi i64 [ %indvar.next, %bb21.backedge ], [ 0, %entry ]
  %s_addr.0 = phi i8* [ %s_addr.0.be, %bb21.backedge ], [ %s, %entry ]
  %d.0 = getelementptr i8* %s, i64 %69
  %70 = load i8* %s_addr.0, align 1, !dbg !8314
  switch i8 %70, label %bb1 [
    i8 0, label %bb22
    i8 92, label %bb2
  ]

bb22:                                             ; preds = %bb21
  ret i64 %69, !dbg !8315
}

declare i32 @klee_shadow_enabled()

define i32 @kill(i32 %pid, i32 %sig) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str2302, i64 0, i64 0)) nounwind, !dbg !8316
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8318
  store i32 1, i32* %0, align 4, !dbg !8318
  ret i32 -1, !dbg !8319
}

define i32 @fork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str300, i64 0, i64 0)) nounwind, !dbg !8320
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8322
  store i32 12, i32* %0, align 4, !dbg !8322
  ret i32 -1, !dbg !8323
}

declare void @klee_warning(i8*)

define i32 @vfork() nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str300, i64 0, i64 0)) nounwind, !dbg !8324
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8327
  store i32 12, i32* %0, align 4, !dbg !8327
  ret i32 -1, !dbg !8325
}

define weak i32 @execve(i8* %file, i8** %argv, i8** %envp) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8328
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8328
  store i32 13, i32* %0, align 4, !dbg !8328
  ret i32 -1, !dbg !8329
}

define weak i32 @execvp(i8* %file, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8331
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8331
  store i32 13, i32* %0, align 4, !dbg !8331
  ret i32 -1, !dbg !8332
}

define weak i32 @execv(i8* %path, i8** %argv) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8334
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !8334
  store i32 13, i32* %0, align 4, !dbg !8334
  ret i32 -1, !dbg !8335
}

define weak i32 @execle(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8337
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8337
  store i32 13, i32* %0, align 4, !dbg !8337
  ret i32 -1, !dbg !8338
}

define weak i32 @execlp(i8* %file, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8340
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8340
  store i32 13, i32* %0, align 4, !dbg !8340
  ret i32 -1, !dbg !8341
}

define weak i32 @execl(i8* %path, i8* %arg, ...) nounwind {
entry:
  call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str1301, i64 0, i64 0)) nounwind, !dbg !8343
  %0 = call i32* @__errno_location() nounwind readnone, !dbg !8343
  store i32 13, i32* %0, align 4, !dbg !8343
  ret i32 -1, !dbg !8344
}

define void @longjmp(%struct.__jmp_buf_tag* nocapture %env, i32 %val) noreturn nounwind {
entry:
  tail call void @klee_report_error(i8* getelementptr inbounds ([10 x i8]* @.str3303, i64 0, i64 0), i32 35, i8* getelementptr inbounds ([20 x i8]* @.str4304, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str5305, i64 0, i64 0)) noreturn nounwin
  unreachable, !dbg !8346
}

define weak i32 @_setjmp(%struct.__jmp_buf_tag* %__env) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([9 x i8]* @.str6306, i64 0, i64 0)) nounwind, !dbg !8348
  ret i32 0, !dbg !8350
}

declare void @klee_warning_once(i8*)

define %struct.exe_file_t* @__get_file(i32 %fd) nounwind readonly {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8351
  br i1 %0, label %bb, label %bb3, !dbg !8351

bb:                                               ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8352
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8353
  %3 = load i32* %2, align 4, !dbg !8353
  %4 = and i32 %3, 1
  %toBool = icmp eq i32 %4, 0, !dbg !8353
  br i1 %toBool, label %bb3, label %bb1, !dbg !8353

bb1:                                              ; preds = %bb
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8352
  br label %bb3, !dbg !8354

bb3:                                              ; preds = %bb1, %bb, %entry
  %.0 = phi %struct.exe_file_t* [ %5, %bb1 ], [ null, %bb ], [ null, %entry ]
  ret %struct.exe_file_t* %.0, !dbg !8354
}

define i32 @umask(i32 %mask) nounwind {
entry:
  %0 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8355
  %1 = and i32 %mask, 511, !dbg !8356
  store i32 %1, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !8356
  ret i32 %0, !dbg !8357
}

define i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = icmp ult i32 %out_fd, 32, !dbg !8358
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !8358

bb.i:                                             ; preds = %entry
  %1 = sext i32 %out_fd to i64, !dbg !8360
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8361
  %3 = load i32* %2, align 4, !dbg !8361
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8361
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !8361

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8360
  br label %__get_file.exit, !dbg !8362

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = icmp ult i32 %in_fd, 32, !dbg !8363
  br i1 %6, label %bb.i8, label %__get_file.exit11, !dbg !8363

bb.i8:                                            ; preds = %__get_file.exit
  %7 = sext i32 %in_fd to i64, !dbg !8365
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, i32 1, !dbg !8366
  %9 = load i32* %8, align 4, !dbg !8366
  %10 = and i32 %9, 1
  %toBool.i7 = icmp eq i32 %10, 0, !dbg !8366
  br i1 %toBool.i7, label %__get_file.exit11, label %bb1.i9, !dbg !8366

bb1.i9:                                           ; preds = %bb.i8
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %7, !dbg !8365
  br label %__get_file.exit11, !dbg !8367

__get_file.exit11:                                ; preds = %bb1.i9, %bb.i8, %__get_file.exit
  %.0.i10 = phi %struct.exe_file_t* [ %11, %bb1.i9 ], [ null, %bb.i8 ], [ null, %__get_file.exit ]
  %12 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !8368
  %13 = load %struct.exe_disk_file_t** %12, align 8, !dbg !8368
  %14 = icmp eq %struct.exe_disk_file_t* %13, null, !dbg !8368
  br i1 %14, label %bb, label %bb1, !dbg !8368

bb:                                               ; preds = %__get_file.exit11
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 3, !dbg !8368
  %16 = load %struct.exe_disk_file_t** %15, align 8, !dbg !8368
  %17 = icmp eq %struct.exe_disk_file_t* %16, null, !dbg !8368
  br i1 %17, label %bb2, label %bb1, !dbg !8368

bb1:                                              ; preds = %bb, %__get_file.exit11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8369
  store i32 22, i32* %18, align 4, !dbg !8369
  br label %bb5, !dbg !8370

bb2:                                              ; preds = %bb
  %19 = getelementptr inbounds %struct.exe_file_t* %.0.i10, i64 0, i32 0, !dbg !8371
  %20 = load i32* %19, align 8, !dbg !8371
  %21 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !8371
  %22 = load i32* %21, align 8, !dbg !8371
  %23 = tail call i64 (i64, ...)* @syscall(i64 40, i32 %22, i32 %20, i64* %offset, i64 %count) nounwind, !dbg !8371
  %24 = icmp slt i64 %23, 0, !dbg !8372
  br i1 %24, label %bb3, label %bb5, !dbg !8372

bb3:                                              ; preds = %bb2
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8373
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8373
  store i32 %26, i32* %25, align 4, !dbg !8373
  br label %bb5, !dbg !8373

bb5:                                              ; preds = %bb3, %bb2, %bb1
  %.0 = phi i64 [ -1, %bb1 ], [ %23, %bb3 ], [ %23, %bb2 ]
  ret i64 %.0, !dbg !8370
}

declare i64 @syscall(i64, ...) nounwind

declare i32 @klee_get_errno()

define i64 @sendfile64(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind {
entry:
  %0 = tail call i64 @sendfile(i32 %out_fd, i32 %in_fd, i64* %offset, i64 %count) nounwind, !dbg !8374
  ret i64 %0, !dbg !8374
}

define i32 @fsync(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8376
  br i1 %0, label %bb.i, label %bb, !dbg !8376

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8378
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8379
  %3 = load i32* %2, align 4, !dbg !8379
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8379
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8379

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8378
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8380
  br i1 %6, label %bb, label %bb1, !dbg !8380

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8381
  store i32 9, i32* %7, align 4, !dbg !8381
  br label %bb6, !dbg !8382

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8383
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8383
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8383
  br i1 %10, label %bb3, label %bb6, !dbg !8383

bb3:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8384
  %12 = load i32* %11, align 8, !dbg !8384
  %13 = tail call i64 (i64, ...)* @syscall(i64 74, i32 %12) nounwind, !dbg !8384
  %14 = trunc i64 %13 to i32, !dbg !8384
  %15 = icmp eq i32 %14, -1, !dbg !8385
  br i1 %15, label %bb4, label %bb6, !dbg !8385

bb4:                                              ; preds = %bb3
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8386
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8386
  store i32 %17, i32* %16, align 4, !dbg !8386
  br label %bb6, !dbg !8386

bb6:                                              ; preds = %bb4, %bb3, %bb1, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb1 ], [ -1, %bb4 ], [ %14, %bb3 ]
  ret i32 %.0, !dbg !8382
}

define i32 @chroot(i8* nocapture %path) nounwind {
entry:
  %0 = load i8* %path, align 1, !dbg !8387
  switch i8 %0, label %bb4 [
    i8 0, label %bb
    i8 47, label %bb2
  ]

bb:                                               ; preds = %entry
  %1 = tail call i32* @__errno_location() nounwind readnone, !dbg !8389
  store i32 2, i32* %1, align 4, !dbg !8389
  br label %bb5, !dbg !8390

bb2:                                              ; preds = %entry
  %2 = getelementptr inbounds i8* %path, i64 1, !dbg !8391
  %3 = load i8* %2, align 1, !dbg !8391
  %4 = icmp eq i8 %3, 0, !dbg !8391
  br i1 %4, label %bb5, label %bb4, !dbg !8391

bb4:                                              ; preds = %bb2, %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str308, i64 0, i64 0)) nounwind, !dbg !8392
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8393
  store i32 2, i32* %5, align 4, !dbg !8393
  br label %bb5, !dbg !8394

bb5:                                              ; preds = %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb4 ], [ 0, %bb2 ]
  ret i32 %.0, !dbg !8390
}

define i32 @fstatfs(i32 %fd, %11* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8395
  br i1 %0, label %bb.i, label %bb, !dbg !8395

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8397
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8398
  %3 = load i32* %2, align 4, !dbg !8398
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8398
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8398

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8397
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8399
  br i1 %6, label %bb, label %bb1, !dbg !8399

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8400
  store i32 9, i32* %7, align 4, !dbg !8400
  br label %bb6, !dbg !8401

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8402
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8402
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8402
  br i1 %10, label %bb3, label %bb2, !dbg !8402

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str1309, i64 0, i64 0)) nounwind, !dbg !8403
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8404
  store i32 9, i32* %11, align 4, !dbg !8404
  br label %bb6, !dbg !8405

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8406
  %13 = load i32* %12, align 8, !dbg !8406
  %14 = tail call i64 (i64, ...)* @syscall(i64 138, i32 %13, %11* %buf) nounwind, !dbg !8406
  %15 = trunc i64 %14 to i32, !dbg !8406
  %16 = icmp eq i32 %15, -1, !dbg !8407
  br i1 %16, label %bb4, label %bb6, !dbg !8407

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8408
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8408
  store i32 %18, i32* %17, align 4, !dbg !8408
  br label %bb6, !dbg !8408

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8401
}

define i32 @fcntl(i32 %fd, i32 %cmd, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8409
  br i1 %0, label %bb.i, label %bb, !dbg !8409

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8411
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8412
  %3 = load i32* %2, align 4, !dbg !8412
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8412
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8412

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8411
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8413
  br i1 %6, label %bb, label %bb1, !dbg !8413

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8414
  store i32 9, i32* %7, align 4, !dbg !8414
  br label %bb35, !dbg !8415

bb1:                                              ; preds = %__get_file.exit
  switch i32 %cmd, label %bb8 [
    i32 3, label %bb21
    i32 1, label %bb21
    i32 11, label %bb21
    i32 9, label %bb21
  ]

bb8:                                              ; preds = %bb1
  %cmd.off = add i32 %cmd, -1025
  %8 = icmp ult i32 %cmd.off, 2
  br i1 %8, label %bb21, label %bb13, !dbg !8416

bb13:                                             ; preds = %bb8
  %ap1415 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8417
  call void @llvm.va_start(i8* %ap1415), !dbg !8417
  %9 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8418
  %10 = load i32* %9, align 8, !dbg !8418
  %11 = icmp ugt i32 %10, 47, !dbg !8418
  br i1 %11, label %bb17, label %bb16, !dbg !8418

bb16:                                             ; preds = %bb13
  %12 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8418
  %13 = load i8** %12, align 8, !dbg !8418
  %tmp = zext i32 %10 to i64
  %14 = ptrtoint i8* %13 to i64, !dbg !8418
  %15 = add i64 %14, %tmp, !dbg !8418
  %16 = inttoptr i64 %15 to i8*, !dbg !8418
  %17 = add i32 %10, 8, !dbg !8418
  store i32 %17, i32* %9, align 8, !dbg !8418
  br label %bb18, !dbg !8418

bb17:                                             ; preds = %bb13
  %18 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8418
  %19 = load i8** %18, align 8, !dbg !8418
  %20 = getelementptr inbounds i8* %19, i64 8, !dbg !8418
  store i8* %20, i8** %18, align 8, !dbg !8418
  br label %bb18, !dbg !8418

bb18:                                             ; preds = %bb17, %bb16
  %addr.76.0 = phi i8* [ %19, %bb17 ], [ %16, %bb16 ]
  %21 = bitcast i8* %addr.76.0 to i32*, !dbg !8418
  %22 = load i32* %21, align 4, !dbg !8418
  call void @llvm.va_end(i8* %ap1415), !dbg !8419
  br label %bb21, !dbg !8419

bb21:                                             ; preds = %bb18, %bb8, %bb1, %bb1, %bb1, %bb1
  %arg.0 = phi i32 [ %22, %bb18 ], [ 0, %bb1 ], [ 0, %bb1 ], [ 0, %bb8 ], [ 0, %bb1 ], [ 0, %bb1 ]
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8420
  %24 = load %struct.exe_disk_file_t** %23, align 8, !dbg !8420
  %25 = icmp eq %struct.exe_disk_file_t* %24, null, !dbg !8420
  br i1 %25, label %bb32, label %bb22, !dbg !8420

bb22:                                             ; preds = %bb21
  switch i32 %cmd, label %bb31 [
    i32 1, label %bb23
    i32 2, label %bb26
    i32 3, label %bb35
    i32 4, label %bb35
  ], !dbg !8421

bb23:                                             ; preds = %bb22
  %26 = load i32* %2, align 4, !dbg !8422
  %int_cast_to_i64 = zext i32 1 to i64
  %27 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %27, label %klee_overshift_check.exit, label %bb.i1

bb.i1:                                            ; preds = %bb23
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb23
  %28 = lshr i32 %26, 1
  %.lobit = and i32 %28, 1
  br label %bb35

bb26:                                             ; preds = %bb22
  %29 = load i32* %2, align 4, !dbg !8423
  %30 = and i32 %29, -3, !dbg !8423
  store i32 %30, i32* %2, align 4, !dbg !8423
  %31 = and i32 %arg.0, 1
  %toBool27 = icmp eq i32 %31, 0, !dbg !8424
  br i1 %toBool27, label %bb35, label %bb28, !dbg !8424

bb28:                                             ; preds = %bb26
  %32 = or i32 %29, 2, !dbg !8425
  store i32 %32, i32* %2, align 4, !dbg !8425
  br label %bb35, !dbg !8425

bb31:                                             ; preds = %bb22
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2310, i64 0, i64 0)) nounwind, !dbg !8426
  %33 = call i32* @__errno_location() nounwind readnone, !dbg !8427
  store i32 22, i32* %33, align 4, !dbg !8427
  br label %bb35, !dbg !8428

bb32:                                             ; preds = %bb21
  %34 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8429
  %35 = load i32* %34, align 8, !dbg !8429
  %36 = call i64 (i64, ...)* @syscall(i64 72, i32 %35, i32 %cmd, i32 %arg.0) nounwind, !dbg !8429
  %37 = trunc i64 %36 to i32, !dbg !8429
  %38 = icmp eq i32 %37, -1, !dbg !8430
  br i1 %38, label %bb33, label %bb35, !dbg !8430

bb33:                                             ; preds = %bb32
  %39 = call i32* @__errno_location() nounwind readnone, !dbg !8431
  %40 = call i32 @klee_get_errno() nounwind, !dbg !8431
  store i32 %40, i32* %39, align 4, !dbg !8431
  br label %bb35, !dbg !8431

bb35:                                             ; preds = %bb33, %bb32, %bb31, %bb28, %bb26, %klee_overshift_check.exit, %bb22, %bb22, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb31 ], [ %.lobit, %klee_overshift_check.exit ], [ 0, %bb26 ], [ 0, %bb28 ], [ 0, %bb22 ], [ 0, %bb22 ], [ -1, %bb33 ], [ %37, %bb32 ]
  ret i32 %.0, !dbg !8415
}

define i32 @futimens(i32 %fd, %struct.timespec* %times) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8432
  br i1 %0, label %bb.i, label %bb3, !dbg !8432

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8434
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8435
  %3 = load i32* %2, align 4, !dbg !8435
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8435
  br i1 %toBool.i, label %bb3, label %__get_file.exit, !dbg !8435

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8434
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb3, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8436
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !8436
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !8436
  br i1 %8, label %bb4, label %bb1, !dbg !8436

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str3311, i64 0, i64 0)) nounwind, !dbg !8437
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8438
  store i32 2, i32* %9, align 4, !dbg !8438
  br label %bb7, !dbg !8439

bb3:                                              ; preds = %__get_file.exit, %bb.i, %entry
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !8440
  store i32 9, i32* %10, align 4, !dbg !8440
  br label %bb7, !dbg !8441

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8442
  %12 = load i32* %11, align 8, !dbg !8442
  %13 = sext i32 %12 to i64, !dbg !8442
  %14 = tail call i64 (i64, ...)* @syscall(i64 280, i64 %13, i64 0, %struct.timespec* %times, i64 0) nounwind, !dbg !8442
  %15 = trunc i64 %14 to i32, !dbg !8442
  %16 = icmp eq i32 %15, -1, !dbg !8443
  br i1 %16, label %bb5, label %bb7, !dbg !8443

bb5:                                              ; preds = %bb4
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8444
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8444
  store i32 %18, i32* %17, align 4, !dbg !8444
  br label %bb7, !dbg !8444

bb7:                                              ; preds = %bb5, %bb4, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ -1, %bb5 ], [ %15, %bb4 ]
  ret i32 %.0, !dbg !8439
}

define i32 @fchown(i32 %fd, i32 %owner, i32 %group) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8445
  br i1 %0, label %bb.i, label %bb, !dbg !8445

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8447
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8448
  %3 = load i32* %2, align 4, !dbg !8448
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8448
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8448

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8447
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8449
  br i1 %6, label %bb, label %bb1, !dbg !8449

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8450
  store i32 9, i32* %7, align 4, !dbg !8450
  br label %bb6, !dbg !8451

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8452
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8452
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8452
  br i1 %10, label %bb3, label %bb2, !dbg !8452

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4312, i64 0, i64 0)) nounwind, !dbg !8453
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8456
  store i32 1, i32* %11, align 4, !dbg !8456
  br label %bb6, !dbg !8455

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8457
  %13 = load i32* %12, align 8, !dbg !8457
  %14 = tail call i64 (i64, ...)* @syscall(i64 93, i32 %13, i32 %owner, i32 %group) nounwind, !dbg !8457
  %15 = trunc i64 %14 to i32, !dbg !8457
  %16 = icmp eq i32 %15, -1, !dbg !8458
  br i1 %16, label %bb4, label %bb6, !dbg !8458

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8459
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8459
  store i32 %18, i32* %17, align 4, !dbg !8459
  br label %bb6, !dbg !8459

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8451
}

define i32 @fchdir(i32 %fd) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8460
  br i1 %0, label %bb.i, label %bb, !dbg !8460

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8462
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8463
  %3 = load i32* %2, align 4, !dbg !8463
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8463
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8463

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8462
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8464
  br i1 %6, label %bb, label %bb1, !dbg !8464

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8465
  store i32 9, i32* %7, align 4, !dbg !8465
  br label %bb6, !dbg !8466

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8467
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8467
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8467
  br i1 %10, label %bb3, label %bb2, !dbg !8467

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5313, i64 0, i64 0)) nounwind, !dbg !8468
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8469
  store i32 2, i32* %11, align 4, !dbg !8469
  br label %bb6, !dbg !8470

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8471
  %13 = load i32* %12, align 8, !dbg !8471
  %14 = tail call i64 (i64, ...)* @syscall(i64 81, i32 %13) nounwind, !dbg !8471
  %15 = trunc i64 %14 to i32, !dbg !8471
  %16 = icmp eq i32 %15, -1, !dbg !8472
  br i1 %16, label %bb4, label %bb6, !dbg !8472

bb4:                                              ; preds = %bb3
  %17 = tail call i32* @__errno_location() nounwind readnone, !dbg !8473
  %18 = tail call i32 @klee_get_errno() nounwind, !dbg !8473
  store i32 %18, i32* %17, align 4, !dbg !8473
  br label %bb6, !dbg !8473

bb6:                                              ; preds = %bb4, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %15, %bb3 ]
  ret i32 %.0, !dbg !8466
}

define i32 @ioctl(i32 %fd, i64 %request, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !8474
  br i1 %0, label %bb.i, label %bb, !dbg !8474

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8476
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8477
  %3 = load i32* %2, align 4, !dbg !8477
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8477
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8477

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8476
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8478
  br i1 %6, label %bb, label %bb1, !dbg !8478

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !8479
  store i32 9, i32* %7, align 4, !dbg !8479
  br label %bb49, !dbg !8480

bb1:                                              ; preds = %__get_file.exit
  %ap23 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !8481
  call void @llvm.va_start(i8* %ap23), !dbg !8481
  %8 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !8482
  %9 = load i32* %8, align 8, !dbg !8482
  %10 = icmp ugt i32 %9, 47, !dbg !8482
  br i1 %10, label %bb5, label %bb4, !dbg !8482

bb4:                                              ; preds = %bb1
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !8482
  %12 = load i8** %11, align 8, !dbg !8482
  %tmp = zext i32 %9 to i64
  %13 = ptrtoint i8* %12 to i64, !dbg !8482
  %14 = add i64 %13, %tmp, !dbg !8482
  %15 = inttoptr i64 %14 to i8*, !dbg !8482
  %16 = add i32 %9, 8, !dbg !8482
  store i32 %16, i32* %8, align 8, !dbg !8482
  br label %bb6, !dbg !8482

bb5:                                              ; preds = %bb1
  %17 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !8482
  %18 = load i8** %17, align 8, !dbg !8482
  %19 = getelementptr inbounds i8* %18, i64 8, !dbg !8482
  store i8* %19, i8** %17, align 8, !dbg !8482
  br label %bb6, !dbg !8482

bb6:                                              ; preds = %bb5, %bb4
  %addr.99.0 = phi i8* [ %18, %bb5 ], [ %15, %bb4 ]
  %20 = bitcast i8* %addr.99.0 to i8**, !dbg !8482
  %21 = load i8** %20, align 8, !dbg !8482
  call void @llvm.va_end(i8* %ap23), !dbg !8483
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8484
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8484
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !8484
  br i1 %24, label %bb46, label %bb9, !dbg !8484

bb9:                                              ; preds = %bb6
  %25 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 3, !dbg !8485
  %26 = load %struct.stat** %25, align 8, !dbg !8485
  switch i64 %request, label %bb45 [
    i64 21505, label %bb10
    i64 21506, label %bb13
    i64 21507, label %bb16
    i64 21508, label %bb19
    i64 21523, label %bb22
    i64 21524, label %bb25
    i64 21531, label %bb28
    i64 35093, label %bb38
    i64 35111, label %bb36
    i64 35123, label %bb35
    i64 2150657282, label %bb34
  ], !dbg !8486

bb10:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([41 x i8]* @.str6314, i64 0, i64 0)) nounwind, !dbg !8487
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8488
  %28 = load i32* %27, align 8, !dbg !8488
  %29 = and i32 %28, 61440, !dbg !8488
  %30 = icmp eq i32 %29, 8192, !dbg !8488
  br i1 %30, label %bb11, label %bb12, !dbg !8488

bb11:                                             ; preds = %bb10
  %31 = bitcast i8* %21 to i32*, !dbg !8489
  store i32 27906, i32* %31, align 4, !dbg !8489
  %32 = getelementptr inbounds i8* %21, i64 4
  %33 = bitcast i8* %32 to i32*, !dbg !8490
  store i32 5, i32* %33, align 4, !dbg !8490
  %34 = getelementptr inbounds i8* %21, i64 8
  %35 = bitcast i8* %34 to i32*, !dbg !8491
  store i32 1215, i32* %35, align 4, !dbg !8491
  %36 = getelementptr inbounds i8* %21, i64 12
  %37 = bitcast i8* %36 to i32*, !dbg !8492
  store i32 35287, i32* %37, align 4, !dbg !8492
  %38 = getelementptr inbounds i8* %21, i64 16
  store i8 0, i8* %38, align 4, !dbg !8493
  %39 = getelementptr inbounds i8* %21, i64 17
  store i8 3, i8* %39, align 1, !dbg !8494
  %40 = getelementptr inbounds i8* %21, i64 18, !dbg !8495
  store i8 28, i8* %40, align 1, !dbg !8495
  %41 = getelementptr inbounds i8* %21, i64 19, !dbg !8496
  store i8 127, i8* %41, align 1, !dbg !8496
  %42 = getelementptr inbounds i8* %21, i64 20, !dbg !8497
  store i8 21, i8* %42, align 1, !dbg !8497
  %43 = getelementptr inbounds i8* %21, i64 21, !dbg !8498
  store i8 4, i8* %43, align 1, !dbg !8498
  %44 = getelementptr inbounds i8* %21, i64 22, !dbg !8499
  store i8 0, i8* %44, align 1, !dbg !8499
  %45 = getelementptr inbounds i8* %21, i64 23, !dbg !8500
  store i8 1, i8* %45, align 1, !dbg !8500
  %46 = getelementptr inbounds i8* %21, i64 24, !dbg !8501
  store i8 -1, i8* %46, align 1, !dbg !8501
  %47 = getelementptr inbounds i8* %21, i64 25, !dbg !8502
  store i8 17, i8* %47, align 1, !dbg !8502
  %48 = getelementptr inbounds i8* %21, i64 26, !dbg !8503
  store i8 19, i8* %48, align 1, !dbg !8503
  %49 = getelementptr inbounds i8* %21, i64 27, !dbg !8504
  store i8 26, i8* %49, align 1, !dbg !8504
  %50 = getelementptr inbounds i8* %21, i64 28, !dbg !8505
  store i8 -1, i8* %50, align 1, !dbg !8505
  %51 = getelementptr inbounds i8* %21, i64 29, !dbg !8506
  store i8 18, i8* %51, align 1, !dbg !8506
  %52 = getelementptr inbounds i8* %21, i64 30, !dbg !8507
  store i8 15, i8* %52, align 1, !dbg !8507
  %53 = getelementptr inbounds i8* %21, i64 31, !dbg !8508
  store i8 23, i8* %53, align 1, !dbg !8508
  %54 = getelementptr inbounds i8* %21, i64 32, !dbg !8509
  store i8 22, i8* %54, align 1, !dbg !8509
  %55 = getelementptr inbounds i8* %21, i64 33, !dbg !8510
  store i8 -1, i8* %55, align 1, !dbg !8510
  %56 = getelementptr inbounds i8* %21, i64 34, !dbg !8511
  store i8 0, i8* %56, align 1, !dbg !8511
  %57 = getelementptr inbounds i8* %21, i64 35, !dbg !8512
  store i8 0, i8* %57, align 1, !dbg !8512
  br label %bb49, !dbg !8513

bb12:                                             ; preds = %bb10
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !8514
  store i32 25, i32* %58, align 4, !dbg !8514
  br label %bb49, !dbg !8515

bb13:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([42 x i8]* @.str7315, i64 0, i64 0)) nounwind, !dbg !8516
  %59 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8517
  %60 = load i32* %59, align 8, !dbg !8517
  %61 = and i32 %60, 61440, !dbg !8517
  %62 = icmp eq i32 %61, 8192, !dbg !8517
  br i1 %62, label %bb49, label %bb15, !dbg !8517

bb15:                                             ; preds = %bb13
  %63 = call i32* @__errno_location() nounwind readnone, !dbg !8518
  store i32 25, i32* %63, align 4, !dbg !8518
  br label %bb49, !dbg !8519

bb16:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str8316, i64 0, i64 0)) nounwind, !dbg !8520
  %64 = icmp eq i32 %fd, 0, !dbg !8521
  br i1 %64, label %bb49, label %bb18, !dbg !8521

bb18:                                             ; preds = %bb16
  %65 = call i32* @__errno_location() nounwind readnone, !dbg !8522
  store i32 25, i32* %65, align 4, !dbg !8522
  br label %bb49, !dbg !8523

bb19:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str9317, i64 0, i64 0)) nounwind, !dbg !8524
  %66 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8525
  %67 = load i32* %66, align 8, !dbg !8525
  %68 = and i32 %67, 61440, !dbg !8525
  %69 = icmp eq i32 %68, 8192, !dbg !8525
  br i1 %69, label %bb49, label %bb21, !dbg !8525

bb21:                                             ; preds = %bb19
  %70 = call i32* @__errno_location() nounwind readnone, !dbg !8526
  store i32 25, i32* %70, align 4, !dbg !8526
  br label %bb49, !dbg !8527

bb22:                                             ; preds = %bb9
  %71 = bitcast i8* %21 to i16*, !dbg !8528
  store i16 24, i16* %71, align 2, !dbg !8528
  %72 = getelementptr inbounds i8* %21, i64 2
  %73 = bitcast i8* %72 to i16*, !dbg !8529
  store i16 80, i16* %73, align 2, !dbg !8529
  call void @klee_warning_once(i8* getelementptr inbounds ([45 x i8]* @.str10318, i64 0, i64 0)) nounwind, !dbg !8530
  %74 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8531
  %75 = load i32* %74, align 8, !dbg !8531
  %76 = and i32 %75, 61440, !dbg !8531
  %77 = icmp eq i32 %76, 8192, !dbg !8531
  br i1 %77, label %bb49, label %bb24, !dbg !8531

bb24:                                             ; preds = %bb22
  %78 = call i32* @__errno_location() nounwind readnone, !dbg !8532
  store i32 25, i32* %78, align 4, !dbg !8532
  br label %bb49, !dbg !8533

bb25:                                             ; preds = %bb9
  call void @klee_warning_once(i8* getelementptr inbounds ([46 x i8]* @.str11319, i64 0, i64 0)) nounwind, !dbg !8534
  %79 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8535
  %80 = load i32* %79, align 8, !dbg !8535
  %81 = and i32 %80, 61440, !dbg !8535
  %82 = icmp eq i32 %81, 8192, !dbg !8535
  %83 = call i32* @__errno_location() nounwind readnone, !dbg !8536
  br i1 %82, label %bb26, label %bb27, !dbg !8535

bb26:                                             ; preds = %bb25
  store i32 22, i32* %83, align 4, !dbg !8536
  br label %bb49, !dbg !8537

bb27:                                             ; preds = %bb25
  store i32 25, i32* %83, align 4, !dbg !8538
  br label %bb49, !dbg !8539

bb28:                                             ; preds = %bb9
  %84 = bitcast i8* %21 to i32*, !dbg !8540
  call void @klee_warning_once(i8* getelementptr inbounds ([43 x i8]* @.str12320, i64 0, i64 0)) nounwind, !dbg !8541
  %85 = getelementptr inbounds %struct.stat* %26, i64 0, i32 3, !dbg !8542
  %86 = load i32* %85, align 8, !dbg !8542
  %87 = and i32 %86, 61440, !dbg !8542
  %88 = icmp eq i32 %87, 8192, !dbg !8542
  br i1 %88, label %bb29, label %bb33, !dbg !8542

bb29:                                             ; preds = %bb28
  %89 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8543
  %90 = load i64* %89, align 8, !dbg !8543
  %91 = load %struct.exe_disk_file_t** %22, align 8, !dbg !8543
  %92 = getelementptr inbounds %struct.exe_disk_file_t* %91, i64 0, i32 0, !dbg !8543
  %93 = load i32* %92, align 8, !dbg !8543
  %94 = zext i32 %93 to i64, !dbg !8543
  %95 = icmp slt i64 %90, %94, !dbg !8543
  br i1 %95, label %bb30, label %bb32, !dbg !8543

bb30:                                             ; preds = %bb29
  %96 = trunc i64 %90 to i32, !dbg !8544
  %97 = sub i32 %93, %96, !dbg !8544
  br label %bb32, !dbg !8544

bb32:                                             ; preds = %bb30, %bb29
  %storemerge = phi i32 [ %97, %bb30 ], [ 0, %bb29 ]
  store i32 %storemerge, i32* %84, align 4
  br label %bb49, !dbg !8545

bb33:                                             ; preds = %bb28
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !8546
  store i32 25, i32* %98, align 4, !dbg !8546
  br label %bb49, !dbg !8547

bb34:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str13321, i64 0, i64 0)) nounwind, !dbg !8548
  %99 = call i32* @__errno_location() nounwind readnone, !dbg !8549
  store i32 22, i32* %99, align 4, !dbg !8549
  br label %bb49, !dbg !8550

bb35:                                             ; preds = %bb9
  %100 = getelementptr inbounds i8* %21, i64 16
  %101 = bitcast i8* %100 to i32*, !dbg !8551
  store i32 0, i32* %101, align 8, !dbg !8551
  br label %bb49, !dbg !8552

bb36:                                             ; preds = %bb9
  %102 = getelementptr inbounds i8* %21, i64 18
  %103 = call i8* @memset(i8* %102, i32 221, i64 14)
  br label %bb49, !dbg !8553

bb38:                                             ; preds = %bb9
  %104 = getelementptr inbounds i8* %21, i64 16
  %105 = bitcast i8* %104 to i16*, !dbg !8554
  %106 = load i16* %105, align 8, !dbg !8554
  %107 = zext i16 %106 to i32, !dbg !8554
  switch i32 %107, label %bb40 [
    i32 2, label %bb41
    i32 10, label %bb43
  ], !dbg !8554

bb40:                                             ; preds = %bb38
  store i16 2, i16* %105, align 8, !dbg !8555
  br label %bb41, !dbg !8555

bb41:                                             ; preds = %bb40, %bb38
  %108 = getelementptr inbounds i8* %21, i64 20
  %109 = bitcast i8* %108 to i32*
  store i32 -572662307, i32* %109, align 4
  br label %bb49, !dbg !8556

bb43:                                             ; preds = %bb38
  %110 = getelementptr inbounds i8* %21, i64 24
  %111 = call i8* @memset(i8* %110, i32 221, i64 16)
  br label %bb49, !dbg !8557

bb45:                                             ; preds = %bb9
  call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str2310, i64 0, i64 0)) nounwind, !dbg !8558
  %112 = call i32* @__errno_location() nounwind readnone, !dbg !8559
  store i32 22, i32* %112, align 4, !dbg !8559
  br label %bb49, !dbg !8560

bb46:                                             ; preds = %bb6
  %113 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8561
  %114 = load i32* %113, align 8, !dbg !8561
  %115 = call i64 (i64, ...)* @syscall(i64 16, i32 %114, i64 %request, i8* %21) nounwind, !dbg !8561
  %116 = trunc i64 %115 to i32, !dbg !8561
  %117 = icmp eq i32 %116, -1, !dbg !8562
  br i1 %117, label %bb47, label %bb49, !dbg !8562

bb47:                                             ; preds = %bb46
  %118 = call i32* @__errno_location() nounwind readnone, !dbg !8563
  %119 = call i32 @klee_get_errno() nounwind, !dbg !8563
  store i32 %119, i32* %118, align 4, !dbg !8563
  br label %bb49, !dbg !8563

bb49:                                             ; preds = %bb47, %bb46, %bb45, %bb43, %bb41, %bb36, %bb35, %bb34, %bb33, %bb32, %bb27, %bb26, %bb24, %bb22, %bb21, %bb19, %bb18, %bb16, %bb15, %bb13, %bb12, %bb11, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb45 ], [ -1, %bb34 ], [ 0, %bb35 ], [ 0, %bb36 ], [ 0, %bb41 ], [ 0, %bb43 ], [ 0, %bb32 ], [ -1, %bb33 ], [ -1, %bb26 ], [ -1, %bb27 ], [ -1, %bb24 ], [ -1, %bb21 ], [ -1, %bb18 ], [ -1, %bb15 ], [ 0, %bb11 ], [ -1, 
  ret i32 %.0, !dbg !8480
}

define void @__undo_get_new_fd(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = bitcast %struct.exe_file_t* %f to i8*, !dbg !8564
  %1 = call i8* @memset(i8* %0, i32 0, i64 56)
  ret void, !dbg !8566
}

define i32 @__get_new_fd(%struct.exe_file_t** nocapture %pf) nounwind {
entry:
  br label %bb2, !dbg !8567

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !8568
  %1 = and i32 %0, 1, !dbg !8568
  %2 = icmp eq i32 %1, 0, !dbg !8568
  br i1 %2, label %bb5, label %bb1, !dbg !8568

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !8567

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !8567
  br i1 %3, label %bb, label %bb3, !dbg !8567

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !8569
  br i1 %4, label %bb4, label %bb5, !dbg !8569

bb4:                                              ; preds = %bb3
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !8570
  store i32 23, i32* %5, align 4, !dbg !8570
  br label %bb6, !dbg !8571

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !8572
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !8572
  store %struct.exe_file_t* %7, %struct.exe_file_t** %pf, align 8, !dbg !8572
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8573
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = load %struct.exe_file_t** %pf, align 8, !dbg !8574
  %11 = getelementptr inbounds %struct.exe_file_t* %10, i64 0, i32 0, !dbg !8574
  store i32 -1, i32* %11, align 8, !dbg !8574
  %12 = load %struct.exe_file_t** %pf, align 8, !dbg !8575
  %13 = getelementptr inbounds %struct.exe_file_t* %12, i64 0, i32 1, !dbg !8575
  store i32 1, i32* %13, align 4, !dbg !8575
  br label %bb6, !dbg !8576

bb6:                                              ; preds = %bb5, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ %fd.0, %bb5 ]
  ret i32 %.0, !dbg !8571
}

define i32 @select(i32 %nfds, %struct.__sigset_t* %read, %struct.__sigset_t* %write, %struct.__sigset_t* %except, %struct.timespec* nocapture %timeout) nounwind {
entry:
  %in_read = alloca %struct.__sigset_t, align 8
  %in_write = alloca %struct.__sigset_t, align 8
  %in_except = alloca %struct.__sigset_t, align 8
  %os_read = alloca %struct.__sigset_t, align 8
  %os_write = alloca %struct.__sigset_t, align 8
  %os_except = alloca %struct.__sigset_t, align 8
  %tv = alloca %struct.timespec, align 8
  %0 = icmp eq %struct.__sigset_t* %read, null, !dbg !8577
  %in_read3 = bitcast %struct.__sigset_t* %in_read to i8*, !dbg !8578
  br i1 %0, label %bb2, label %bb, !dbg !8577

bb:                                               ; preds = %entry
  %1 = bitcast %struct.__sigset_t* %read to i8*, !dbg !8579
  %2 = call i8* @memcpy(i8* %in_read3, i8* %1, i64 128)
  %3 = call i8* @memset(i8* %1, i32 0, i64 128)
  br label %bb4, !dbg !8580

bb2:                                              ; preds = %entry
  %4 = call i8* @memset(i8* %in_read3, i32 0, i64 128)
  br label %bb4, !dbg !8578

bb4:                                              ; preds = %bb2, %bb
  %5 = icmp eq %struct.__sigset_t* %write, null, !dbg !8581
  %in_write8 = bitcast %struct.__sigset_t* %in_write to i8*, !dbg !8582
  br i1 %5, label %bb7, label %bb5, !dbg !8581

bb5:                                              ; preds = %bb4
  %6 = bitcast %struct.__sigset_t* %write to i8*, !dbg !8583
  %7 = call i8* @memcpy(i8* %in_write8, i8* %6, i64 128)
  %8 = call i8* @memset(i8* %6, i32 0, i64 128)
  br label %bb9, !dbg !8584

bb7:                                              ; preds = %bb4
  %9 = call i8* @memset(i8* %in_write8, i32 0, i64 128)
  br label %bb9, !dbg !8582

bb9:                                              ; preds = %bb7, %bb5
  %10 = icmp eq %struct.__sigset_t* %except, null, !dbg !8585
  %in_except13 = bitcast %struct.__sigset_t* %in_except to i8*, !dbg !8586
  br i1 %10, label %bb12, label %bb10, !dbg !8585

bb10:                                             ; preds = %bb9
  %11 = bitcast %struct.__sigset_t* %except to i8*, !dbg !8587
  %12 = call i8* @memcpy(i8* %in_except13, i8* %11, i64 128)
  %13 = call i8* @memset(i8* %11, i32 0, i64 128)
  br label %bb14, !dbg !8588

bb12:                                             ; preds = %bb9
  %14 = call i8* @memset(i8* %in_except13, i32 0, i64 128)
  br label %bb14, !dbg !8586

bb14:                                             ; preds = %bb12, %bb10
  %os_read15 = bitcast %struct.__sigset_t* %os_read to i8*, !dbg !8589
  %15 = call i8* @memset(i8* %os_read15, i32 0, i64 128)
  %os_write16 = bitcast %struct.__sigset_t* %os_write to i8*, !dbg !8590
  %16 = call i8* @memset(i8* %os_write16, i32 0, i64 128)
  %os_except17 = bitcast %struct.__sigset_t* %os_except to i8*, !dbg !8591
  %17 = call i8* @memset(i8* %os_except17, i32 0, i64 128)
  br label %bb47, !dbg !8592

bb18:                                             ; preds = %bb47
  %int_cast_to_i64 = zext i32 64 to i64
  %18 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %19 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %19, label %bb.i20, label %klee_div_zero_check.exit

bb.i20:                                           ; preds = %bb18
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb18
  call void @klee_disable_symbex() nounwind
  %20 = sdiv i32 %i.0, 64, !dbg !8593
  %21 = sext i32 %20 to i64, !dbg !8593
  %22 = getelementptr inbounds %struct.__sigset_t* %in_read, i64 0, i32 0, i64 %21, !dbg !8593
  %23 = load i64* %22, align 8, !dbg !8593
  %24 = and i32 %i.0, 63
  %int_cast_to_i6410 = zext i32 %24 to i64
  %25 = icmp ult i64 %int_cast_to_i6410, 32
  br i1 %25, label %klee_overshift_check.exit, label %bb.i39

bb.i39:                                           ; preds = %klee_div_zero_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %klee_div_zero_check.exit
  %26 = shl i32 1, %24, !dbg !8593
  %27 = sext i32 %26 to i64, !dbg !8593
  %28 = and i64 %23, %27, !dbg !8593
  %29 = icmp eq i64 %28, 0, !dbg !8593
  br i1 %29, label %bb19, label %bb21, !dbg !8593

bb19:                                             ; preds = %klee_overshift_check.exit
  %30 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8593
  %31 = load i64* %30, align 8, !dbg !8593
  %32 = and i64 %31, %27, !dbg !8593
  %33 = icmp eq i64 %32, 0, !dbg !8593
  br i1 %33, label %bb20, label %bb21, !dbg !8593

bb20:                                             ; preds = %bb19
  %34 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8593
  %35 = load i64* %34, align 8, !dbg !8593
  %36 = and i64 %35, %27, !dbg !8593
  %37 = icmp eq i64 %36, 0, !dbg !8593
  br i1 %37, label %bb46, label %bb21, !dbg !8593

bb21:                                             ; preds = %bb20, %bb19, %klee_overshift_check.exit
  %38 = icmp ult i32 %i.0, 32, !dbg !8594
  br i1 %38, label %bb.i, label %bb22, !dbg !8594

bb.i:                                             ; preds = %bb21
  %39 = load i32* %scevgep91, align 4, !dbg !8596
  %40 = and i32 %39, 1
  %toBool.i = icmp eq i32 %40, 0, !dbg !8596
  %41 = icmp eq %struct.exe_file_t* %scevgep89, null, !dbg !8597
  %or.cond = or i1 %toBool.i, %41
  br i1 %or.cond, label %bb22, label %bb23, !dbg !8596

bb22:                                             ; preds = %bb.i, %bb21
  %42 = call i32* @__errno_location() nounwind readnone, !dbg !8598
  store i32 9, i32* %42, align 4, !dbg !8598
  br label %bb68, !dbg !8599

bb23:                                             ; preds = %bb.i
  %43 = load %struct.exe_disk_file_t** %scevgep92, align 8, !dbg !8600
  %44 = icmp eq %struct.exe_disk_file_t* %43, null, !dbg !8600
  br i1 %44, label %bb38, label %bb24, !dbg !8600

bb24:                                             ; preds = %bb23
  br i1 %29, label %bb34, label %bb25, !dbg !8601

bb25:                                             ; preds = %bb24
  %45 = and i32 %39, 16, !dbg !8602
  %46 = icmp eq i32 %45, 0, !dbg !8602
  br i1 %46, label %bb33, label %bb27, !dbg !8602

bb27:                                             ; preds = %bb25
  %47 = and i32 %39, 32, !dbg !8603
  %48 = icmp eq i32 %47, 0, !dbg !8603
  br i1 %48, label %bb29, label %bb28, !dbg !8603

bb28:                                             ; preds = %bb27
  %49 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !8604
  %50 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !8604
  %51 = icmp ult i32 %49, %50, !dbg !8604
  %52 = zext i1 %51 to i32, !dbg !8604
  br label %bb32, !dbg !8604

bb29:                                             ; preds = %bb27
  %53 = and i32 %39, 64, !dbg !8605
  %54 = icmp eq i32 %53, 0, !dbg !8605
  br i1 %54, label %bb33, label %bb30, !dbg !8605

bb30:                                             ; preds = %bb29
  %55 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !8606
  %56 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !8606
  %57 = icmp ult i32 %55, %56, !dbg !8606
  %58 = zext i1 %57 to i32, !dbg !8606
  br label %bb32, !dbg !8606

bb32:                                             ; preds = %bb30, %bb28
  %flags.0 = phi i32 [ %52, %bb28 ], [ %58, %bb30 ]
  %toBool = icmp eq i32 %flags.0, 0, !dbg !8607
  br i1 %toBool, label %bb34, label %bb33, !dbg !8607

bb33:                                             ; preds = %bb32, %bb29, %bb25
  %flags.076 = phi i32 [ %flags.0, %bb32 ], [ 1, %bb25 ], [ 1, %bb29 ]
  %59 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %21, !dbg !8607
  %60 = load i64* %59, align 8, !dbg !8607
  %61 = or i64 %60, %27, !dbg !8607
  store i64 %61, i64* %59, align 8, !dbg !8607
  br label %bb34, !dbg !8607

bb34:                                             ; preds = %bb33, %bb32, %bb24
  %flags.1 = phi i32 [ %flags.076, %bb33 ], [ 0, %bb24 ], [ 0, %bb32 ]
  %62 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8608
  %63 = load i64* %62, align 8, !dbg !8608
  %64 = and i64 %63, %27, !dbg !8608
  %65 = icmp eq i64 %64, 0, !dbg !8608
  br i1 %65, label %bb36, label %bb35, !dbg !8608

bb35:                                             ; preds = %bb34
  %66 = or i32 %flags.1, 2, !dbg !8609
  %67 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %21, !dbg !8609
  %68 = load i64* %67, align 8, !dbg !8609
  %69 = or i64 %68, %27, !dbg !8609
  store i64 %69, i64* %67, align 8, !dbg !8609
  br label %bb36, !dbg !8609

bb36:                                             ; preds = %bb35, %bb34
  %flags.2 = phi i32 [ %66, %bb35 ], [ %flags.1, %bb34 ]
  %not. = icmp ne i32 %flags.2, 0
  %70 = zext i1 %not. to i32
  %count.1. = add i32 %70, %count.1
  br label %bb46

bb38:                                             ; preds = %bb23
  br i1 %29, label %bb40, label %bb39, !dbg !8610

bb39:                                             ; preds = %bb38
  %71 = load i32* %scevgep8990, align 8, !dbg !8610
  %int_cast_to_i641 = zext i32 64 to i64
  %72 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %73 = icmp eq i64 %int_cast_to_i641, 0
  br i1 %73, label %bb.i21, label %klee_div_zero_check.exit22

bb.i21:                                           ; preds = %bb39
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit22:                       ; preds = %bb39
  call void @klee_disable_symbex() nounwind
  %74 = sdiv i32 %71, 64, !dbg !8610
  %75 = sext i32 %74 to i64, !dbg !8610
  %76 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %75, !dbg !8610
  %77 = load i64* %76, align 8, !dbg !8610
  %78 = and i32 %71, 63
  %int_cast_to_i6411 = zext i32 %78 to i64
  %79 = icmp ult i64 %int_cast_to_i6411, 32
  br i1 %79, label %klee_overshift_check.exit41, label %bb.i40

bb.i40:                                           ; preds = %klee_div_zero_check.exit22
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit41:                      ; preds = %klee_div_zero_check.exit22
  %80 = shl i32 1, %78, !dbg !8610
  %81 = sext i32 %80 to i64, !dbg !8610
  %82 = or i64 %81, %77, !dbg !8610
  store i64 %82, i64* %76, align 8, !dbg !8610
  br label %bb40, !dbg !8610

bb40:                                             ; preds = %klee_overshift_check.exit41, %bb38
  %83 = getelementptr inbounds %struct.__sigset_t* %in_write, i64 0, i32 0, i64 %21, !dbg !8611
  %84 = load i64* %83, align 8, !dbg !8611
  %85 = and i64 %84, %27, !dbg !8611
  %86 = icmp eq i64 %85, 0, !dbg !8611
  %.pre.pre = load i32* %scevgep8990, align 8
  br i1 %86, label %bb42, label %bb41, !dbg !8611

bb41:                                             ; preds = %bb40
  %int_cast_to_i642 = zext i32 64 to i64
  %87 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %88 = icmp eq i64 %int_cast_to_i642, 0
  br i1 %88, label %bb.i23, label %klee_div_zero_check.exit24

bb.i23:                                           ; preds = %bb41
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit24:                       ; preds = %bb41
  call void @klee_disable_symbex() nounwind
  %89 = sdiv i32 %.pre.pre, 64, !dbg !8611
  %90 = sext i32 %89 to i64, !dbg !8611
  %91 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %90, !dbg !8611
  %92 = load i64* %91, align 8, !dbg !8611
  %93 = and i32 %.pre.pre, 63
  %int_cast_to_i6412 = zext i32 %93 to i64
  %94 = icmp ult i64 %int_cast_to_i6412, 32
  br i1 %94, label %klee_overshift_check.exit43, label %bb.i42

bb.i42:                                           ; preds = %klee_div_zero_check.exit24
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit43:                      ; preds = %klee_div_zero_check.exit24
  %95 = shl i32 1, %93, !dbg !8611
  %96 = sext i32 %95 to i64, !dbg !8611
  %97 = or i64 %96, %92, !dbg !8611
  store i64 %97, i64* %91, align 8, !dbg !8611
  br label %bb42, !dbg !8611

bb42:                                             ; preds = %klee_overshift_check.exit43, %bb40
  %98 = getelementptr inbounds %struct.__sigset_t* %in_except, i64 0, i32 0, i64 %21, !dbg !8612
  %99 = load i64* %98, align 8, !dbg !8612
  %100 = and i64 %99, %27, !dbg !8612
  %101 = icmp eq i64 %100, 0, !dbg !8612
  br i1 %101, label %bb44, label %bb43, !dbg !8612

bb43:                                             ; preds = %bb42
  %int_cast_to_i643 = zext i32 64 to i64
  %102 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %103 = icmp eq i64 %int_cast_to_i643, 0
  br i1 %103, label %bb.i25, label %klee_div_zero_check.exit26

bb.i25:                                           ; preds = %bb43
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit26:                       ; preds = %bb43
  call void @klee_disable_symbex() nounwind
  %104 = sdiv i32 %.pre.pre, 64, !dbg !8612
  %105 = sext i32 %104 to i64, !dbg !8612
  %106 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %105, !dbg !8612
  %107 = load i64* %106, align 8, !dbg !8612
  %108 = and i32 %.pre.pre, 63
  %int_cast_to_i6413 = zext i32 %108 to i64
  %109 = icmp ult i64 %int_cast_to_i6413, 32
  br i1 %109, label %klee_overshift_check.exit45, label %bb.i44

bb.i44:                                           ; preds = %klee_div_zero_check.exit26
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit45:                      ; preds = %klee_div_zero_check.exit26
  %110 = shl i32 1, %108, !dbg !8612
  %111 = sext i32 %110 to i64, !dbg !8612
  %112 = or i64 %107, %111, !dbg !8612
  store i64 %112, i64* %106, align 8, !dbg !8612
  br label %bb44, !dbg !8612

bb44:                                             ; preds = %klee_overshift_check.exit45, %bb42
  %113 = add nsw i32 %.pre.pre, 1, !dbg !8613
  %114 = icmp slt i32 %.pre.pre, %os_nfds.1, !dbg !8613
  %os_nfds.1. = select i1 %114, i32 %os_nfds.1, i32 %113
  br label %bb46

bb46:                                             ; preds = %bb44, %bb36, %bb20
  %count.0 = phi i32 [ %count.1, %bb20 ], [ %count.1., %bb36 ], [ %count.1, %bb44 ]
  %os_nfds.0 = phi i32 [ %os_nfds.1, %bb20 ], [ %os_nfds.1, %bb36 ], [ %os_nfds.1., %bb44 ]
  %indvar.next87 = add i64 %indvar86, 1
  br label %bb47, !dbg !8592

bb47:                                             ; preds = %bb46, %bb14
  %indvar86 = phi i64 [ %indvar.next87, %bb46 ], [ 0, %bb14 ]
  %count.1 = phi i32 [ %count.0, %bb46 ], [ 0, %bb14 ]
  %os_nfds.1 = phi i32 [ %os_nfds.0, %bb46 ], [ 0, %bb14 ]
  %scevgep92 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 3
  %scevgep91 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 1
  %scevgep89 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86
  %scevgep8990 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar86, i32 0
  %i.0 = trunc i64 %indvar86 to i32
  %115 = icmp slt i32 %i.0, %nfds, !dbg !8592
  br i1 %115, label %bb18, label %bb48, !dbg !8592

bb48:                                             ; preds = %bb47
  %116 = icmp sgt i32 %os_nfds.1, 0, !dbg !8614
  br i1 %116, label %bb49, label %bb68, !dbg !8614

bb49:                                             ; preds = %bb48
  %117 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !8615
  store i64 0, i64* %117, align 8, !dbg !8615
  %118 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !8615
  store i64 0, i64* %118, align 8, !dbg !8615
  %119 = call i64 (i64, ...)* @syscall(i64 23, i32 %os_nfds.1, %struct.__sigset_t* %os_read, %struct.__sigset_t* %os_write, %struct.__sigset_t* %os_except, %struct.timespec* %tv) nounwind, !dbg !8616
  %120 = trunc i64 %119 to i32, !dbg !8616
  %121 = icmp eq i32 %120, -1, !dbg !8617
  br i1 %121, label %bb50, label %bb52, !dbg !8617

bb50:                                             ; preds = %bb49
  %122 = icmp eq i32 %count.1, 0, !dbg !8618
  br i1 %122, label %bb51, label %bb68, !dbg !8618

bb51:                                             ; preds = %bb50
  %123 = call i32* @__errno_location() nounwind readnone, !dbg !8619
  %124 = call i32 @klee_get_errno() nounwind, !dbg !8619
  store i32 %124, i32* %123, align 4, !dbg !8619
  br label %bb68, !dbg !8620

bb52:                                             ; preds = %bb49
  %125 = add nsw i32 %120, %count.1, !dbg !8621
  %126 = icmp sgt i32 %nfds, 0, !dbg !8622
  br i1 %126, label %bb53.lr.ph, label %bb68, !dbg !8622

bb53.lr.ph:                                       ; preds = %bb52
  %tmp3 = zext i32 %nfds to i64
  br label %bb53

bb53:                                             ; preds = %bb65, %bb53.lr.ph
  %indvar = phi i64 [ 0, %bb53.lr.ph ], [ %indvar.next, %bb65 ]
  %scevgep82 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 3
  %scevgep81 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %i.177 = trunc i64 %indvar to i32
  %127 = icmp ult i32 %i.177, 32, !dbg !8623
  br i1 %127, label %bb.i71, label %bb65, !dbg !8623

bb.i71:                                           ; preds = %bb53
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar
  %scevgep83 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %128 = load i32* %scevgep83, align 4, !dbg !8625
  %129 = and i32 %128, 1
  %toBool.i70 = icmp eq i32 %129, 0, !dbg !8625
  %130 = icmp eq %struct.exe_file_t* %scevgep, null, !dbg !8626
  %or.cond93 = or i1 %toBool.i70, %130
  br i1 %or.cond93, label %bb65, label %bb55, !dbg !8625

bb55:                                             ; preds = %bb.i71
  %131 = load %struct.exe_disk_file_t** %scevgep82, align 8, !dbg !8626
  %132 = icmp eq %struct.exe_disk_file_t* %131, null, !dbg !8626
  br i1 %132, label %bb56, label %bb65, !dbg !8626

bb56:                                             ; preds = %bb55
  br i1 %0, label %bb59, label %bb57, !dbg !8627

bb57:                                             ; preds = %bb56
  %133 = load i32* %scevgep81, align 8, !dbg !8627
  %int_cast_to_i644 = zext i32 64 to i64
  %134 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %135 = icmp eq i64 %int_cast_to_i644, 0
  br i1 %135, label %bb.i27, label %klee_div_zero_check.exit28

bb.i27:                                           ; preds = %bb57
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit28:                       ; preds = %bb57
  call void @klee_disable_symbex() nounwind
  %136 = sdiv i32 %133, 64, !dbg !8627
  %137 = sext i32 %136 to i64, !dbg !8627
  %138 = getelementptr inbounds %struct.__sigset_t* %os_read, i64 0, i32 0, i64 %137, !dbg !8627
  %139 = load i64* %138, align 8, !dbg !8627
  %140 = and i32 %133, 63
  %int_cast_to_i6414 = zext i32 %140 to i64
  %141 = icmp ult i64 %int_cast_to_i6414, 32
  br i1 %141, label %klee_overshift_check.exit47, label %bb.i46

bb.i46:                                           ; preds = %klee_div_zero_check.exit28
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit47:                      ; preds = %klee_div_zero_check.exit28
  %142 = shl i32 1, %140, !dbg !8627
  %143 = sext i32 %142 to i64, !dbg !8627
  %144 = and i64 %143, %139, !dbg !8627
  %145 = icmp eq i64 %144, 0, !dbg !8627
  br i1 %145, label %bb59, label %bb58, !dbg !8627

bb58:                                             ; preds = %klee_overshift_check.exit47
  %int_cast_to_i645 = zext i32 64 to i64
  %146 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %147 = icmp eq i64 %int_cast_to_i645, 0
  br i1 %147, label %bb.i29, label %klee_div_zero_check.exit30

bb.i29:                                           ; preds = %bb58
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit30:                       ; preds = %bb58
  call void @klee_disable_symbex() nounwind
  %148 = sdiv i32 %i.177, 64, !dbg !8627
  %149 = sext i32 %148 to i64, !dbg !8627
  %150 = getelementptr inbounds %struct.__sigset_t* %read, i64 0, i32 0, i64 %149, !dbg !8627
  %151 = load i64* %150, align 8, !dbg !8627
  %152 = and i32 %i.177, 63
  %int_cast_to_i6415 = zext i32 %152 to i64
  %153 = icmp ult i64 %int_cast_to_i6415, 32
  br i1 %153, label %klee_overshift_check.exit49, label %bb.i48

bb.i48:                                           ; preds = %klee_div_zero_check.exit30
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit49:                      ; preds = %klee_div_zero_check.exit30
  %154 = shl i32 1, %152, !dbg !8627
  %155 = sext i32 %154 to i64, !dbg !8627
  %156 = or i64 %151, %155, !dbg !8627
  store i64 %156, i64* %150, align 8, !dbg !8627
  br label %bb59, !dbg !8627

bb59:                                             ; preds = %klee_overshift_check.exit49, %klee_overshift_check.exit47, %bb56
  br i1 %5, label %bb62, label %bb60, !dbg !8628

bb60:                                             ; preds = %bb59
  %157 = load i32* %scevgep81, align 8, !dbg !8628
  %int_cast_to_i646 = zext i32 64 to i64
  %158 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %159 = icmp eq i64 %int_cast_to_i646, 0
  br i1 %159, label %bb.i31, label %klee_div_zero_check.exit32

bb.i31:                                           ; preds = %bb60
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit32:                       ; preds = %bb60
  call void @klee_disable_symbex() nounwind
  %160 = sdiv i32 %157, 64, !dbg !8628
  %161 = sext i32 %160 to i64, !dbg !8628
  %162 = getelementptr inbounds %struct.__sigset_t* %os_write, i64 0, i32 0, i64 %161, !dbg !8628
  %163 = load i64* %162, align 8, !dbg !8628
  %164 = and i32 %157, 63
  %int_cast_to_i6416 = zext i32 %164 to i64
  %165 = icmp ult i64 %int_cast_to_i6416, 32
  br i1 %165, label %klee_overshift_check.exit51, label %bb.i50

bb.i50:                                           ; preds = %klee_div_zero_check.exit32
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit51:                      ; preds = %klee_div_zero_check.exit32
  %166 = shl i32 1, %164, !dbg !8628
  %167 = sext i32 %166 to i64, !dbg !8628
  %168 = and i64 %167, %163, !dbg !8628
  %169 = icmp eq i64 %168, 0, !dbg !8628
  br i1 %169, label %bb62, label %bb61, !dbg !8628

bb61:                                             ; preds = %klee_overshift_check.exit51
  %int_cast_to_i647 = zext i32 64 to i64
  %170 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %171 = icmp eq i64 %int_cast_to_i647, 0
  br i1 %171, label %bb.i33, label %klee_div_zero_check.exit34

bb.i33:                                           ; preds = %bb61
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit34:                       ; preds = %bb61
  call void @klee_disable_symbex() nounwind
  %172 = sdiv i32 %i.177, 64, !dbg !8628
  %173 = sext i32 %172 to i64, !dbg !8628
  %174 = getelementptr inbounds %struct.__sigset_t* %write, i64 0, i32 0, i64 %173, !dbg !8628
  %175 = load i64* %174, align 8, !dbg !8628
  %176 = and i32 %i.177, 63
  %int_cast_to_i6417 = zext i32 %176 to i64
  %177 = icmp ult i64 %int_cast_to_i6417, 32
  br i1 %177, label %klee_overshift_check.exit53, label %bb.i52

bb.i52:                                           ; preds = %klee_div_zero_check.exit34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit53:                      ; preds = %klee_div_zero_check.exit34
  %178 = shl i32 1, %176, !dbg !8628
  %179 = sext i32 %178 to i64, !dbg !8628
  %180 = or i64 %175, %179, !dbg !8628
  store i64 %180, i64* %174, align 8, !dbg !8628
  br label %bb62, !dbg !8628

bb62:                                             ; preds = %klee_overshift_check.exit53, %klee_overshift_check.exit51, %bb59
  br i1 %10, label %bb65, label %bb63, !dbg !8629

bb63:                                             ; preds = %bb62
  %181 = load i32* %scevgep81, align 8, !dbg !8629
  %int_cast_to_i648 = zext i32 64 to i64
  %182 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %183 = icmp eq i64 %int_cast_to_i648, 0
  br i1 %183, label %bb.i35, label %klee_div_zero_check.exit36

bb.i35:                                           ; preds = %bb63
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit36:                       ; preds = %bb63
  call void @klee_disable_symbex() nounwind
  %184 = sdiv i32 %181, 64, !dbg !8629
  %185 = sext i32 %184 to i64, !dbg !8629
  %186 = getelementptr inbounds %struct.__sigset_t* %os_except, i64 0, i32 0, i64 %185, !dbg !8629
  %187 = load i64* %186, align 8, !dbg !8629
  %188 = and i32 %181, 63
  %int_cast_to_i6418 = zext i32 %188 to i64
  %189 = icmp ult i64 %int_cast_to_i6418, 32
  br i1 %189, label %klee_overshift_check.exit55, label %bb.i54

bb.i54:                                           ; preds = %klee_div_zero_check.exit36
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit55:                      ; preds = %klee_div_zero_check.exit36
  %190 = shl i32 1, %188, !dbg !8629
  %191 = sext i32 %190 to i64, !dbg !8629
  %192 = and i64 %191, %187, !dbg !8629
  %193 = icmp eq i64 %192, 0, !dbg !8629
  br i1 %193, label %bb65, label %bb64, !dbg !8629

bb64:                                             ; preds = %klee_overshift_check.exit55
  %int_cast_to_i649 = zext i32 64 to i64
  %194 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %195 = icmp eq i64 %int_cast_to_i649, 0
  br i1 %195, label %bb.i37, label %klee_div_zero_check.exit38

bb.i37:                                           ; preds = %bb64
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit38:                       ; preds = %bb64
  call void @klee_disable_symbex() nounwind
  %196 = sdiv i32 %i.177, 64, !dbg !8629
  %197 = sext i32 %196 to i64, !dbg !8629
  %198 = getelementptr inbounds %struct.__sigset_t* %except, i64 0, i32 0, i64 %197, !dbg !8629
  %199 = load i64* %198, align 8, !dbg !8629
  %200 = and i32 %i.177, 63
  %int_cast_to_i6419 = zext i32 %200 to i64
  %201 = icmp ult i64 %int_cast_to_i6419, 32
  br i1 %201, label %klee_overshift_check.exit57, label %bb.i56

bb.i56:                                           ; preds = %klee_div_zero_check.exit38
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit57:                      ; preds = %klee_div_zero_check.exit38
  %202 = shl i32 1, %200, !dbg !8629
  %203 = sext i32 %202 to i64, !dbg !8629
  %204 = or i64 %199, %203, !dbg !8629
  store i64 %204, i64* %198, align 8, !dbg !8629
  br label %bb65, !dbg !8629

bb65:                                             ; preds = %klee_overshift_check.exit57, %klee_overshift_check.exit55, %bb62, %bb55, %bb.i71, %bb53
  %indvar.next = add i64 %indvar, 1
  %exitcond4 = icmp eq i64 %indvar.next, %tmp3
  br i1 %exitcond4, label %bb68, label %bb53, !dbg !8622

bb68:                                             ; preds = %bb65, %bb52, %bb51, %bb50, %bb48, %bb22
  %.0 = phi i32 [ -1, %bb22 ], [ -1, %bb51 ], [ %count.1, %bb50 ], [ %count.1, %bb48 ], [ %125, %bb52 ], [ %125, %bb65 ]
  ret i32 %.0, !dbg !8599
}

define i32 @close(i32 %fd) nounwind {
entry:
  %0 = load i32* @n_calls.5871, align 4, !dbg !8630
  %1 = add nsw i32 %0, 1, !dbg !8630
  store i32 %1, i32* @n_calls.5871, align 4, !dbg !8630
  %2 = icmp ult i32 %fd, 32, !dbg !8631
  br i1 %2, label %bb.i, label %bb, !dbg !8631

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !8633
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !8634
  %5 = load i32* %4, align 4, !dbg !8634
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !8634
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8634

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !8633
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !8635
  br i1 %8, label %bb, label %bb1, !dbg !8635

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8636
  store i32 9, i32* %9, align 4, !dbg !8636
  br label %bb9, !dbg !8637

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8638
  %11 = icmp eq i32 %10, 0, !dbg !8638
  br i1 %11, label %bb4, label %bb2, !dbg !8638

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 8, !dbg !8638
  %13 = load i32* %12, align 4, !dbg !8638
  %14 = icmp eq i32 %13, %1, !dbg !8638
  br i1 %14, label %bb3, label %bb4, !dbg !8638

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !8639
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !8639
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8640
  store i32 5, i32* %16, align 4, !dbg !8640
  br label %bb9, !dbg !8641

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !8642
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !8642
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !8642
  br i1 %19, label %bb5, label %bb8, !dbg !8642

bb5:                                              ; preds = %bb4
  %20 = and i32 %5, 16, !dbg !8642
  %21 = icmp eq i32 %20, 0, !dbg !8642
  br i1 %21, label %bb8, label %bb6, !dbg !8642

bb6:                                              ; preds = %bb5
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !8643
  %23 = load i32* %22, align 8, !dbg !8643
  %24 = tail call i64 (i64, ...)* @syscall(i64 3, i32 %23) nounwind, !dbg !8643
  %25 = trunc i64 %24 to i32, !dbg !8643
  br label %bb8, !dbg !8643

bb8:                                              ; preds = %bb6, %bb5, %bb4
  %r.0 = phi i32 [ %25, %bb6 ], [ 0, %bb4 ], [ 0, %bb5 ]
  %26 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8644
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  br label %bb9, !dbg !8645

bb9:                                              ; preds = %bb8, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ %r.0, %bb8 ]
  ret i32 %.0, !dbg !8637
}

define i32 @dup2(i32 %oldfd, i32 %newfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8646
  br i1 %0, label %bb.i, label %bb, !dbg !8646

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8648
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8649
  %3 = load i32* %2, align 4, !dbg !8649
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8649
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8649

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8648
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8650
  %7 = icmp ugt i32 %newfd, 31, !dbg !8650
  %8 = or i1 %6, %7, !dbg !8650
  br i1 %8, label %bb, label %bb10, !dbg !8650

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8651
  store i32 9, i32* %9, align 4, !dbg !8651
  br label %bb17, !dbg !8652

bb4:                                              ; preds = %bb10
  %scevgep1920 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 0
  %10 = load i32* %scevgep1920, align 8, !dbg !8653
  %11 = icmp eq i32 %10, %newfd, !dbg !8653
  br i1 %11, label %bb11, label %bb6, !dbg !8653

bb6:                                              ; preds = %bb4
  %12 = icmp eq i32 %idx.1, -1, !dbg !8654
  br i1 %12, label %bb7, label %bb9, !dbg !8654

bb7:                                              ; preds = %bb6
  %13 = load i32* %scevgep, align 4, !dbg !8654
  %14 = and i32 %13, 1, !dbg !8654
  %15 = icmp eq i32 %14, 0, !dbg !8654
  br i1 %15, label %bb8, label %bb9, !dbg !8654

bb8:                                              ; preds = %bb7
  br label %bb9, !dbg !8655

bb9:                                              ; preds = %bb8, %bb7, %bb6
  %idx.0 = phi i32 [ %i.0, %bb8 ], [ -1, %bb7 ], [ %idx.1, %bb6 ]
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !8656

bb10:                                             ; preds = %bb9, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %__get_file.exit ]
  %idx.1 = phi i32 [ %idx.0, %bb9 ], [ -1, %__get_file.exit ]
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %i.0 = trunc i64 %indvar to i32
  %16 = icmp slt i32 %i.0, 32, !dbg !8656
  br i1 %16, label %bb4, label %bb11, !dbg !8656

bb11:                                             ; preds = %bb10, %bb4
  %idx.2 = phi i32 [ %idx.1, %bb10 ], [ %i.0, %bb4 ]
  %17 = icmp eq i32 %idx.2, -1, !dbg !8657
  br i1 %17, label %bb12, label %bb13, !dbg !8657

bb12:                                             ; preds = %bb11
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8658
  store i32 24, i32* %18, align 4, !dbg !8658
  br label %bb17, !dbg !8659

bb13:                                             ; preds = %bb11
  %19 = sext i32 %idx.2 to i64, !dbg !8660
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, !dbg !8660
  %21 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %19, i32 1, !dbg !8661
  %22 = load i32* %21, align 4, !dbg !8661
  %23 = and i32 %22, 1
  %toBool14 = icmp eq i32 %23, 0, !dbg !8661
  br i1 %toBool14, label %bb16, label %bb15, !dbg !8661

bb15:                                             ; preds = %bb13
  %24 = tail call i32 @close(i32 %newfd) nounwind, !dbg !8661
  br label %bb16, !dbg !8661

bb16:                                             ; preds = %bb15, %bb13
  %25 = bitcast %struct.exe_file_t* %20 to i8*, !dbg !8662
  %26 = bitcast %struct.exe_file_t* %5 to i8*, !dbg !8662
  %27 = call i8* @memcpy(i8* %25, i8* %26, i64 56)
  %28 = load i32* %21, align 4, !dbg !8663
  %29 = and i32 %28, -3, !dbg !8663
  store i32 %29, i32* %21, align 4, !dbg !8663
  br label %bb17, !dbg !8664

bb17:                                             ; preds = %bb16, %bb12, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb12 ], [ %newfd, %bb16 ]
  ret i32 %.0, !dbg !8652
}

define i32 @dup(i32 %oldfd) nounwind {
entry:
  %0 = icmp ult i32 %oldfd, 32, !dbg !8665
  br i1 %0, label %bb.i, label %bb, !dbg !8665

bb.i:                                             ; preds = %entry
  %1 = sext i32 %oldfd to i64, !dbg !8667
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8668
  %3 = load i32* %2, align 4, !dbg !8668
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8668
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8668

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8667
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8669
  br i1 %6, label %bb, label %bb4, !dbg !8669

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8670
  store i32 9, i32* %7, align 4, !dbg !8670
  br label %bb8, !dbg !8671

bb2:                                              ; preds = %bb4
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %8 = load i32* %scevgep, align 4, !dbg !8672
  %9 = and i32 %8, 1, !dbg !8672
  %10 = icmp eq i32 %9, 0, !dbg !8672
  br i1 %10, label %bb7, label %bb3, !dbg !8672

bb3:                                              ; preds = %bb2
  %indvar.next = add i64 %indvar, 1
  br label %bb4, !dbg !8673

bb4:                                              ; preds = %bb3, %__get_file.exit
  %indvar = phi i64 [ %indvar.next, %bb3 ], [ 0, %__get_file.exit ]
  %fd.0 = trunc i64 %indvar to i32
  %11 = icmp slt i32 %fd.0, 32, !dbg !8673
  br i1 %11, label %bb2, label %bb5, !dbg !8673

bb5:                                              ; preds = %bb4
  %12 = icmp eq i32 %fd.0, 32, !dbg !8674
  br i1 %12, label %bb6, label %bb7, !dbg !8674

bb6:                                              ; preds = %bb5
  %13 = tail call i32* @__errno_location() nounwind readnone, !dbg !8675
  store i32 24, i32* %13, align 4, !dbg !8675
  br label %bb8, !dbg !8676

bb7:                                              ; preds = %bb5, %bb2
  %14 = tail call i32 @dup2(i32 %oldfd, i32 %fd.0) nounwind, !dbg !8677
  br label %bb8, !dbg !8677

bb8:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb6 ], [ %14, %bb7 ]
  ret i32 %.0, !dbg !8671
}

define i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %count) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8678
  br i1 %0, label %bb.i, label %bb, !dbg !8678

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8680
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8681
  %3 = load i32* %2, align 4, !dbg !8681
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8681
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8681

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8680
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8682
  br i1 %6, label %bb, label %bb1, !dbg !8682

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8683
  store i32 9, i32* %7, align 4, !dbg !8683
  br label %bb19, !dbg !8684

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8685
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8685
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8685
  br i1 %10, label %bb3, label %bb2, !dbg !8685

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str14322, i64 0, i64 0)) nounwind, !dbg !8686
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !8687
  store i32 22, i32* %11, align 4, !dbg !8687
  br label %bb19, !dbg !8688

bb3:                                              ; preds = %bb1
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 2, !dbg !8689
  %13 = load i64* %12, align 8, !dbg !8689
  %14 = icmp ult i64 %13, 4096, !dbg !8689
  br i1 %14, label %bb4, label %bb11, !dbg !8689

bb4:                                              ; preds = %bb3
  %int_cast_to_i64 = bitcast i64 280 to i64
  %15 = call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind
  %16 = icmp eq i64 %int_cast_to_i64, 0
  br i1 %16, label %bb.i2, label %klee_div_zero_check.exit

bb.i2:                                            ; preds = %bb4
  call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_div_zero_check.exit:                         ; preds = %bb4
  call void @klee_disable_symbex() nounwind
  %17 = udiv i64 %13, 280, !dbg !8690
  %18 = mul i64 %17, 280, !dbg !8691
  %19 = icmp eq i64 %18, %13, !dbg !8691
  br i1 %19, label %bb5, label %bb6, !dbg !8691

bb5:                                              ; preds = %klee_div_zero_check.exit
  %20 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8691
  %21 = zext i32 %20 to i64, !dbg !8691
  %22 = icmp ult i64 %21, %17, !dbg !8691
  br i1 %22, label %bb6, label %bb8.preheader, !dbg !8691

bb8.preheader:                                    ; preds = %bb5
  %23 = icmp ugt i64 %21, %17, !dbg !8692
  br i1 %23, label %bb7.lr.ph, label %bb9, !dbg !8692

bb7.lr.ph:                                        ; preds = %bb8.preheader
  %tmp1 = add i64 %17, 1
  %tmp5 = add i64 %18, 280
  %tmp8 = add i64 %17, 65
  br label %bb7

bb6:                                              ; preds = %bb5, %klee_div_zero_check.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !8693
  store i32 22, i32* %24, align 4, !dbg !8693
  br label %bb19, !dbg !8694

bb7:                                              ; preds = %klee_overshift_check.exit, %bb7.lr.ph
  %indvar = phi i64 [ 0, %bb7.lr.ph ], [ %38, %klee_overshift_check.exit ]
  %tmp51 = add i64 %tmp1, %indvar
  %tmp3 = mul i64 %indvar, 280
  %tmp49 = add i64 %tmp5, %tmp3
  %tmp7 = add i64 %17, %indvar
  %tmp9 = add i64 %tmp8, %indvar
  %tmp42 = trunc i64 %tmp9 to i8
  %scevgep36 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 1
  %scevgep35 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 4, i64 0
  %scevgep32 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 1
  %scevgep31 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 3
  %scevgep30 = getelementptr %struct.dirent* %dirp, i64 %indvar, i32 2
  %scevgep29 = getelementptr inbounds %struct.dirent* %dirp, i64 %indvar, i32 0
  %25 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !8695
  %scevgep = getelementptr %struct.exe_disk_file_t* %25, i64 %tmp7, i32 3
  %26 = load %struct.stat** %scevgep, align 8, !dbg !8696
  %27 = getelementptr inbounds %struct.stat* %26, i64 0, i32 1, !dbg !8696
  %28 = load i64* %27, align 8, !dbg !8696
  store i64 %28, i64* %scevgep29, align 8, !dbg !8696
  store i16 280, i16* %scevgep30, align 8, !dbg !8697
  %29 = load %struct.stat** %scevgep, align 8, !dbg !8698
  %30 = getelementptr inbounds %struct.stat* %29, i64 0, i32 3, !dbg !8698
  %31 = load i32* %30, align 8, !dbg !8698
  %int_cast_to_i641 = zext i32 12 to i64
  %32 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %32, label %klee_overshift_check.exit, label %bb.i3

bb.i3:                                            ; preds = %bb7
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb7
  %33 = lshr i32 %31, 12
  %.tr = trunc i32 %33 to i8
  %34 = and i8 %.tr, 15, !dbg !8698
  store i8 %34, i8* %scevgep31, align 2, !dbg !8698
  store i8 %tmp42, i8* %scevgep35, align 1, !dbg !8699
  store i8 0, i8* %scevgep36, align 1, !dbg !8700
  store i64 %tmp49, i64* %scevgep32, align 8, !dbg !8701
  %35 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8692
  %36 = zext i32 %35 to i64, !dbg !8692
  %37 = icmp sgt i64 %36, %tmp51, !dbg !8692
  %38 = add i64 %indvar, 1
  br i1 %37, label %bb7, label %bb8.bb9_crit_edge, !dbg !8692

bb8.bb9_crit_edge:                                ; preds = %klee_overshift_check.exit
  %tmp18 = add i64 %tmp3, 280
  %scevgep34 = getelementptr %struct.dirent* %dirp, i64 %38
  br label %bb9

bb9:                                              ; preds = %bb8.bb9_crit_edge, %bb8.preheader
  %dirp_addr.0.lcssa = phi %struct.dirent* [ %scevgep34, %bb8.bb9_crit_edge ], [ %dirp, %bb8.preheader ]
  %bytes.0.lcssa = phi i64 [ %tmp18, %bb8.bb9_crit_edge ], [ 0, %bb8.preheader ]
  %39 = icmp ugt i32 %count, 4096, !dbg !8702
  %40 = zext i32 %count to i64
  %41 = select i1 %39, i64 4096, i64 %40, !dbg !8702
  %42 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 0, !dbg !8703
  store i64 0, i64* %42, align 8, !dbg !8703
  %43 = trunc i64 %41 to i16, !dbg !8704
  %44 = trunc i64 %bytes.0.lcssa to i16, !dbg !8704
  %45 = sub i16 %43, %44, !dbg !8704
  %46 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 2, !dbg !8704
  store i16 %45, i16* %46, align 8, !dbg !8704
  %47 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 3, !dbg !8705
  store i8 0, i8* %47, align 2, !dbg !8705
  %48 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 4, i64 0, !dbg !8706
  store i8 0, i8* %48, align 1, !dbg !8706
  %49 = getelementptr inbounds %struct.dirent* %dirp_addr.0.lcssa, i64 0, i32 1, !dbg !8707
  store i64 4096, i64* %49, align 8, !dbg !8707
  %50 = zext i16 %45 to i64, !dbg !8708
  %51 = add nsw i64 %50, %bytes.0.lcssa, !dbg !8708
  store i64 %41, i64* %12, align 8, !dbg !8709
  %52 = trunc i64 %51 to i32, !dbg !8710
  br label %bb19, !dbg !8710

bb11:                                             ; preds = %bb3
  %53 = trunc i64 %13 to i32, !dbg !8711
  %54 = add i32 %53, -4096, !dbg !8711
  %55 = zext i32 %count to i64, !dbg !8712
  %56 = bitcast %struct.dirent* %dirp to i8*, !dbg !8712
  %57 = call i8* @memset(i8* %56, i32 0, i64 %55)
  %58 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8713
  %59 = load i32* %58, align 8, !dbg !8713
  %60 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %59, i32 %54, i32 0) nounwind, !dbg !8713
  %61 = trunc i64 %60 to i32, !dbg !8713
  %62 = icmp eq i32 %61, -1, !dbg !8714
  br i1 %62, label %bb12, label %bb13, !dbg !8714

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str15323, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 1436, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.6593, i64 0, i64 0)) 
  unreachable, !dbg !8714

bb13:                                             ; preds = %bb11
  %63 = load i32* %58, align 8, !dbg !8715
  %64 = tail call i64 (i64, ...)* @syscall(i64 217, i32 %63, %struct.dirent* %dirp, i32 %count) nounwind, !dbg !8715
  %65 = trunc i64 %64 to i32, !dbg !8715
  %66 = icmp eq i32 %65, -1, !dbg !8716
  br i1 %66, label %bb14, label %bb15, !dbg !8716

bb14:                                             ; preds = %bb13
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !8717
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !8717
  store i32 %68, i32* %67, align 4, !dbg !8717
  br label %bb19, !dbg !8717

bb15:                                             ; preds = %bb13
  %69 = load i32* %58, align 8, !dbg !8718
  %70 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %69, i32 0, i32 1) nounwind, !dbg !8718
  %71 = add nsw i64 %70, 4096, !dbg !8718
  store i64 %71, i64* %12, align 8, !dbg !8718
  %72 = icmp sgt i32 %65, 0, !dbg !8719
  br i1 %72, label %bb16, label %bb19, !dbg !8719

bb16:                                             ; preds = %bb16, %bb15
  %pos.023 = phi i32 [ %82, %bb16 ], [ 0, %bb15 ]
  %73 = sext i32 %pos.023 to i64, !dbg !8720
  %.sum = add i64 %73, 8
  %74 = getelementptr inbounds i8* %56, i64 %.sum
  %75 = bitcast i8* %74 to i64*, !dbg !8721
  %76 = load i64* %75, align 8, !dbg !8721
  %77 = add nsw i64 %76, 4096, !dbg !8721
  store i64 %77, i64* %75, align 8, !dbg !8721
  %.sum22 = add i64 %73, 16
  %78 = getelementptr inbounds i8* %56, i64 %.sum22
  %79 = bitcast i8* %78 to i16*, !dbg !8722
  %80 = load i16* %79, align 8, !dbg !8722
  %81 = zext i16 %80 to i32, !dbg !8722
  %82 = add nsw i32 %81, %pos.023, !dbg !8722
  %83 = icmp slt i32 %82, %65, !dbg !8719
  br i1 %83, label %bb16, label %bb19, !dbg !8719

bb19:                                             ; preds = %bb16, %bb15, %bb14, %bb9, %bb6, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb6 ], [ %52, %bb9 ], [ -1, %bb14 ], [ %65, %bb15 ], [ %65, %bb16 ]
  ret i32 %.0, !dbg !8684
}

define i64 @__fd_gather_write(%struct.exe_file_t* nocapture %f, %struct.direntry_t* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !8723
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8723
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !8723
  br i1 %2, label %bb16, label %bb14.preheader, !dbg !8723

bb14.preheader:                                   ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !8724
  %tmp4 = zext i32 %iovcnt to i64
  br label %bb14

bb:                                               ; preds = %bb14
  %4 = load i64* %scevgep28, align 8, !dbg !8725
  %5 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8726
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 4, !dbg !8726
  %7 = load %struct.exe_sockaddr_t** %6, align 8, !dbg !8726
  %8 = icmp eq %struct.exe_sockaddr_t* %7, null, !dbg !8726
  br i1 %8, label %bb2, label %bb1, !dbg !8726

bb1:                                              ; preds = %bb
  %9 = load i8** %scevgep27, align 8, !dbg !8727
  tail call void @klee_check_memory_access(i8* %9, i64 %4) nounwind, !dbg !8727
  br label %skip, !dbg !8727

bb2:                                              ; preds = %bb
  %10 = load i64* %3, align 8, !dbg !8724
  %11 = add i64 %10, %4, !dbg !8724
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 0, !dbg !8724
  %13 = load i32* %12, align 8, !dbg !8724
  %14 = zext i32 %13 to i64, !dbg !8724
  %15 = icmp ugt i64 %11, %14, !dbg !8724
  br i1 %15, label %bb3, label %bb8, !dbg !8724

bb3:                                              ; preds = %bb2
  %16 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !8728
  %17 = icmp eq i32 %16, 0, !dbg !8728
  br i1 %17, label %bb5, label %bb4, !dbg !8728

bb4:                                              ; preds = %bb3
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17325, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 2246, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7291, i64 0, i64 0)) n
  unreachable, !dbg !8729

bb5:                                              ; preds = %bb3
  %18 = icmp slt i64 %10, %14, !dbg !8730
  br i1 %18, label %bb6, label %bb10, !dbg !8730

bb6:                                              ; preds = %bb5
  %19 = sub nsw i64 %14, %10, !dbg !8731
  br label %bb8, !dbg !8731

bb8:                                              ; preds = %bb6, %bb2
  %this_len.0 = phi i64 [ %19, %bb6 ], [ %4, %bb2 ]
  %20 = icmp eq i64 %this_len.0, 0, !dbg !8732
  br i1 %20, label %bb10, label %bb9, !dbg !8732

bb9:                                              ; preds = %bb8
  %21 = load i8** %scevgep27, align 8, !dbg !8733
  %22 = getelementptr inbounds %struct.exe_disk_file_t* %5, i64 0, i32 1, !dbg !8733
  %23 = load i8** %22, align 8, !dbg !8733
  %24 = getelementptr inbounds i8* %23, i64 %10, !dbg !8733
  %25 = call i8* @memcpy(i8* %24, i8* %21, i64 %this_len.0)
  %.pre = load i64* %scevgep28, align 8
  br label %bb10, !dbg !8733

bb10:                                             ; preds = %bb9, %bb8, %bb5
  %26 = phi i64 [ %4, %bb8 ], [ %.pre, %bb9 ], [ %4, %bb5 ]
  %this_len.021 = phi i64 [ 0, %bb8 ], [ %this_len.0, %bb9 ], [ 0, %bb5 ]
  %27 = icmp eq i64 %26, %this_len.021, !dbg !8734
  br i1 %27, label %bb12, label %bb11, !dbg !8734

bb11:                                             ; preds = %bb10
  tail call void @klee_warning_once(i8* getelementptr inbounds ([23 x i8]* @.str18326, i64 0, i64 0)) nounwind, !dbg !8735
  br label %bb12, !dbg !8735

bb12:                                             ; preds = %bb11, %bb10
  %28 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8736
  %29 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !8736
  %30 = icmp eq %struct.exe_disk_file_t* %28, %29, !dbg !8736
  br i1 %30, label %bb13, label %skip, !dbg !8736

bb13:                                             ; preds = %bb12
  %31 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8737
  %32 = trunc i64 %this_len.021 to i32, !dbg !8737
  %33 = add i32 %31, %32, !dbg !8737
  store i32 %33, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !8737
  br label %skip, !dbg !8738

skip:                                             ; preds = %bb13, %bb12, %bb1
  %34 = load i64* %scevgep28, align 8, !dbg !8739
  %35 = add i64 %34, %total.0, !dbg !8739
  %36 = load i64* %3, align 8, !dbg !8740
  %37 = add i64 %36, %34, !dbg !8740
  store i64 %37, i64* %3, align 8, !dbg !8740
  %indvar.next = add i64 %indvar, 1
  br label %bb14, !dbg !8741

bb14:                                             ; preds = %skip, %bb14.preheader
  %indvar = phi i64 [ 0, %bb14.preheader ], [ %indvar.next, %skip ]
  %total.0 = phi i64 [ 0, %bb14.preheader ], [ %35, %skip ]
  %scevgep28 = getelementptr %struct.direntry_t* %iov, i64 %indvar, i32 1
  %scevgep27 = getelementptr inbounds %struct.direntry_t* %iov, i64 %indvar, i32 0
  %tmp5 = sub i64 %tmp4, %indvar
  %iovcnt_addr.0 = trunc i64 %tmp5 to i32
  %38 = icmp sgt i32 %iovcnt_addr.0, 0, !dbg !8741
  br i1 %38, label %bb, label %bb19, !dbg !8741

bb16:                                             ; preds = %entry
  %39 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !8742
  %40 = load i32* %39, align 8, !dbg !8742
  %41 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %40, %struct.direntry_t* %iov, i32 %iovcnt) nounwind, !dbg !8742
  %42 = trunc i64 %41 to i32, !dbg !8742
  %43 = icmp slt i32 %42, 0, !dbg !8743
  br i1 %43, label %bb17, label %bb18, !dbg !8743

bb17:                                             ; preds = %bb16
  %44 = tail call i32* @__errno_location() nounwind readnone, !dbg !8744
  %45 = tail call i32 @klee_get_errno() nounwind, !dbg !8744
  store i32 %45, i32* %44, align 4, !dbg !8744
  br label %bb18, !dbg !8744

bb18:                                             ; preds = %bb17, %bb16
  %46 = sext i32 %42 to i64, !dbg !8745
  br label %bb19, !dbg !8745

bb19:                                             ; preds = %bb18, %bb14
  %.0 = phi i64 [ %46, %bb18 ], [ %total.0, %bb14 ]
  ret i64 %.0, !dbg !8746
}

declare void @klee_check_memory_access(i8*, i64)

define i64 @writev(i32 %fd, %struct.direntry_t* %iov, i32 %iovcnt) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8747
  br i1 %0, label %bb.i, label %bb, !dbg !8747

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8749
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8750
  %3 = load i32* %2, align 4, !dbg !8750
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8750
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8750

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8749
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8751
  br i1 %6, label %bb, label %bb1, !dbg !8751

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8752
  store i32 9, i32* %7, align 4, !dbg !8752
  br label %bb6, !dbg !8753

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8754
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8754
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8754
  br i1 %10, label %bb2, label %bb5, !dbg !8754

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8755
  %12 = load i32* %11, align 8, !dbg !8755
  %13 = tail call i64 (i64, ...)* @syscall(i64 20, i32 %12, %struct.direntry_t* %iov, i32 %iovcnt) nounwind, !dbg !8755
  %14 = trunc i64 %13 to i32, !dbg !8755
  %15 = icmp eq i32 %14, -1, !dbg !8756
  br i1 %15, label %bb3, label %bb4, !dbg !8756

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8757
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8757
  store i32 %17, i32* %16, align 4, !dbg !8757
  br label %bb6, !dbg !8758

bb4:                                              ; preds = %bb2
  %18 = sext i32 %14 to i64, !dbg !8759
  br label %bb6, !dbg !8759

bb5:                                              ; preds = %bb1
  %19 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %5, %struct.direntry_t* %iov, i32 %iovcnt) nounwind, !dbg !8760
  br label %bb6, !dbg !8760

bb6:                                              ; preds = %bb5, %bb4, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ %18, %bb4 ], [ %19, %bb5 ]
  ret i64 %.0, !dbg !8753
}

define i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !8761
  br i1 %0, label %bb.i, label %bb, !dbg !8761

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !8763
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !8764
  %3 = load i32* %2, align 4, !dbg !8764
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !8764
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !8764

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !8763
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !8765
  br i1 %6, label %bb, label %bb1, !dbg !8765

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !8766
  store i32 9, i32* %7, align 4, !dbg !8766
  br label %bb6, !dbg !8767

bb1:                                              ; preds = %__get_file.exit
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !8768
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !8768
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !8768
  br i1 %10, label %bb2, label %bb5, !dbg !8768

bb2:                                              ; preds = %bb1
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !8769
  %12 = load i32* %11, align 8, !dbg !8769
  %13 = tail call i64 (i64, ...)* @syscall(i64 5, i32 %12, %struct.stat* %buf) nounwind, !dbg !8769
  %14 = trunc i64 %13 to i32, !dbg !8769
  %15 = icmp eq i32 %14, -1, !dbg !8770
  br i1 %15, label %bb3, label %bb6, !dbg !8770

bb3:                                              ; preds = %bb2
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !8771
  %17 = tail call i32 @klee_get_errno() nounwind, !dbg !8771
  store i32 %17, i32* %16, align 4, !dbg !8771
  br label %bb6, !dbg !8771

bb5:                                              ; preds = %bb1
  %18 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 0, i32 3, !dbg !8772
  %19 = load %struct.stat** %18, align 8, !dbg !8772
  %20 = bitcast %struct.stat* %buf to i8*, !dbg !8772
  %21 = bitcast %struct.stat* %19 to i8*, !dbg !8772
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 144)
  br label %bb6, !dbg !8773

bb6:                                              ; preds = %bb5, %bb3, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ 0, %bb5 ], [ -1, %bb3 ], [ %14, %bb2 ]
  ret i32 %.0, !dbg !8767
}

define i64 @__fd_scatter_read(%struct.exe_file_t* nocapture %f, %struct.direntry_t* %iov, i32 %iovcnt) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([57 x i8]* @.str19327, i64 0, i64 0)) nounwind, !dbg !8774
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !8775
  %1 = load %struct.exe_disk_file_t** %0, align 8, !dbg !8775
  %2 = icmp eq %struct.exe_disk_file_t* %1, null, !dbg !8775
  br i1 %2, label %bb9, label %bb, !dbg !8775

bb:                                               ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !8776
  %4 = load i64* %3, align 8, !dbg !8776
  %5 = icmp slt i64 %4, 0, !dbg !8776
  br i1 %5, label %bb1, label %bb2, !dbg !8776

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20328, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 2186, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !8776

bb2:                                              ; preds = %bb
  %6 = getelementptr inbounds %struct.exe_disk_file_t* %1, i64 0, i32 0, !dbg !8777
  %7 = load i32* %6, align 8, !dbg !8777
  %8 = zext i32 %7 to i64, !dbg !8777
  %9 = icmp sge i64 %8, %4, !dbg !8777
  %10 = icmp sgt i32 %iovcnt, 0, !dbg !8778
  %or.cond = and i1 %9, %10
  br i1 %or.cond, label %bb4.lr.ph, label %bb22, !dbg !8777

bb4.lr.ph:                                        ; preds = %bb2
  %tmp2 = zext i32 %iovcnt to i64
  %tmp3 = add i64 %tmp2, -1
  br label %bb4

bb4:                                              ; preds = %bb4.bb4_crit_edge, %bb4.lr.ph
  %11 = phi i32 [ %7, %bb4.lr.ph ], [ %.pre36, %bb4.bb4_crit_edge ]
  %12 = phi %struct.exe_disk_file_t* [ %1, %bb4.lr.ph ], [ %.pre, %bb4.bb4_crit_edge ]
  %13 = phi i64 [ %4, %bb4.lr.ph ], [ %26, %bb4.bb4_crit_edge ]
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4.bb4_crit_edge ]
  %total.025 = phi i64 [ 0, %bb4.lr.ph ], [ %24, %bb4.bb4_crit_edge ]
  %scevgep2930 = getelementptr inbounds %struct.direntry_t* %iov, i64 %indvar, i32 0
  %scevgep = getelementptr %struct.direntry_t* %iov, i64 %indvar, i32 1
  %14 = load i64* %scevgep, align 8, !dbg !8779
  %15 = add i64 %14, %13, !dbg !8780
  %16 = zext i32 %11 to i64, !dbg !8780
  %17 = sub nsw i64 %16, %13, !dbg !8781
  %18 = icmp ugt i64 %15, %16, !dbg !8780
  %. = select i1 %18, i64 %17, i64 %14
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 1, !dbg !8782
  %20 = load i8** %19, align 8, !dbg !8782
  %21 = getelementptr inbounds i8* %20, i64 %13, !dbg !8782
  %22 = load i8** %scevgep2930, align 8, !dbg !8782
  %23 = call i8* @memcpy(i8* %22, i8* %21, i64 %.)
  %24 = add i64 %., %total.025, !dbg !8783
  %25 = load i64* %3, align 8, !dbg !8784
  %26 = add i64 %25, %., !dbg !8784
  store i64 %26, i64* %3, align 8, !dbg !8784
  %exitcond4 = icmp eq i64 %indvar, %tmp3
  br i1 %exitcond4, label %bb22, label %bb4.bb4_crit_edge, !dbg !8778

bb4.bb4_crit_edge:                                ; preds = %bb4
  %indvar.next = add i64 %indvar, 1
  %.pre = load %struct.exe_disk_file_t** %0, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %.pre, i64 0, i32 0
  %.pre36 = load i32* %.phi.trans.insert, align 8
  br label %bb4

bb9:                                              ; preds = %entry
  %27 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 0, !dbg !8785
  %28 = load i32* %27, align 8, !dbg !8785
  %29 = tail call i64 (i64, ...)* @syscall(i64 19, i32 %28, %struct.direntry_t* %iov, i32 %iovcnt) nounwind, !dbg !8785
  %30 = icmp slt i64 %29, 0, !dbg !8786
  br i1 %30, label %bb10, label %bb11, !dbg !8786

bb10:                                             ; preds = %bb9
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !8787
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !8787
  store i32 %32, i32* %31, align 4, !dbg !8787
  br label %bb22, !dbg !8787

bb11:                                             ; preds = %bb9
  %33 = tail call i32 @klee_zest_enabled() nounwind, !dbg !8788
  %34 = icmp eq i32 %33, 0, !dbg !8788
  br i1 %34, label %bb22, label %bb20, !dbg !8788

bb14:                                             ; preds = %bb20
  %scevgep35 = getelementptr %struct.direntry_t* %iov, i64 %indvar31, i32 1
  %35 = load i64* %scevgep35, align 8, !dbg !8789
  %36 = icmp ugt i64 %cb.1, %35, !dbg !8789
  %this_len13.0 = select i1 %36, i64 %35, i64 %cb.1
  %37 = tail call noalias i8* @malloc(i64 %this_len13.0) nounwind, !dbg !8790
  %38 = icmp eq i8* %37, null, !dbg !8791
  br i1 %38, label %bb18, label %bb19, !dbg !8791

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21329, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 2218, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7229, i64 0, i64 0)) 
  unreachable, !dbg !8792

bb19:                                             ; preds = %bb14
  %39 = sub i64 %cb.1, %35, !dbg !8793
  %.24 = select i1 %36, i64 %39, i64 0
  %40 = load i8** %scevgep3334, align 8, !dbg !8794
  %41 = call i8* @memcpy(i8* %37, i8* %40, i64 %this_len13.0)
  tail call void @klee_make_symbolic(i8* %37, i64 %this_len13.0, i8* getelementptr inbounds ([11 x i8]* @.str22330, i64 0, i64 0)) nounwind, !dbg !8795
  %42 = load i8** %scevgep3334, align 8, !dbg !8796
  %43 = call i8* @memcpy(i8* %42, i8* %37, i64 %this_len13.0)
  tail call void @free(i8* %37) nounwind, !dbg !8797
  %indvar.next32 = add i64 %indvar31, 1
  br label %bb20, !dbg !8798

bb20:                                             ; preds = %bb19, %bb11
  %indvar31 = phi i64 [ %indvar.next32, %bb19 ], [ 0, %bb11 ]
  %cb.1 = phi i64 [ %.24, %bb19 ], [ %29, %bb11 ]
  %scevgep3334 = getelementptr inbounds %struct.direntry_t* %iov, i64 %indvar31, i32 0
  %44 = icmp eq i64 %cb.1, 0, !dbg !8799
  br i1 %44, label %bb22, label %bb14, !dbg !8799

bb22:                                             ; preds = %bb20, %bb11, %bb10, %bb4, %bb2
  %.0 = phi i64 [ 0, %bb2 ], [ %29, %bb11 ], [ %29, %bb10 ], [ %24, %bb4 ], [ %29, %bb20 ]
  ret i64 %.0, !dbg !8800
}

declare i32 @klee_zest_enabled()

define i32 @munmap(i8* nocapture %addr, i64 %length) nounwind {
entry:
  tail call void @free(i8* %addr) nounwind, !dbg !8801
  ret i32 0, !dbg !8803
}

define weak i32 @pipe(i32* %filedes) nounwind {
entry:
  %os_filedes = alloca [2 x i32], align 4
  br label %bb2.i, !dbg !8804

bb.i:                                             ; preds = %bb2.i
  %scevgep.i = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i, i32 1
  %0 = load i32* %scevgep.i, align 4, !dbg !8806
  %1 = and i32 %0, 1, !dbg !8806
  %2 = icmp eq i32 %1, 0, !dbg !8806
  br i1 %2, label %__get_new_fd.exit, label %bb1.i, !dbg !8806

bb1.i:                                            ; preds = %bb.i
  %indvar.next.i = add i64 %indvar.i, 1
  br label %bb2.i, !dbg !8804

bb2.i:                                            ; preds = %bb1.i, %entry
  %indvar.i = phi i64 [ %indvar.next.i, %bb1.i ], [ 0, %entry ]
  %fd.0.i = trunc i64 %indvar.i to i32
  %3 = icmp slt i32 %fd.0.i, 32, !dbg !8804
  br i1 %3, label %bb.i, label %bb3.i, !dbg !8804

bb3.i:                                            ; preds = %bb2.i
  %4 = icmp eq i32 %fd.0.i, 32, !dbg !8807
  br i1 %4, label %__get_new_fd.exit.thread, label %__get_new_fd.exit, !dbg !8807

__get_new_fd.exit.thread:                         ; preds = %bb3.i
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !8808
  store i32 23, i32* %5, align 4, !dbg !8808
  store i32 -1, i32* %filedes, align 4, !dbg !8805
  br label %bb

__get_new_fd.exit:                                ; preds = %bb3.i, %bb.i
  %6 = sext i32 %fd.0.i to i64, !dbg !8809
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !8809
  %8 = bitcast %struct.exe_file_t* %7 to i8*, !dbg !8810
  %9 = call i8* @memset(i8* %8, i32 0, i64 56)
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !8811
  store i32 -1, i32* %10, align 8, !dbg !8811
  %11 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !8812
  store i32 1, i32* %11, align 4, !dbg !8812
  store i32 %fd.0.i, i32* %filedes, align 4, !dbg !8805
  %12 = icmp slt i32 %fd.0.i, 0, !dbg !8805
  br i1 %12, label %__get_new_fd.exit.bb_crit_edge, label %bb2.i15, !dbg !8805

__get_new_fd.exit.bb_crit_edge:                   ; preds = %__get_new_fd.exit
  %.pre = call i32* @__errno_location() nounwind readnone, !dbg !8813
  br label %bb

bb:                                               ; preds = %__get_new_fd.exit.bb_crit_edge, %__get_new_fd.exit.thread
  %.pre-phi = phi i32* [ %.pre, %__get_new_fd.exit.bb_crit_edge ], [ %5, %__get_new_fd.exit.thread ]
  %13 = call i32 @klee_get_errno() nounwind, !dbg !8813
  store i32 %13, i32* %.pre-phi, align 4, !dbg !8813
  %14 = load i32* %filedes, align 4, !dbg !8814
  br label %bb7, !dbg !8814

bb.i10:                                           ; preds = %bb2.i15
  %scevgep.i9 = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar.i13, i32 1
  %15 = load i32* %scevgep.i9, align 4, !dbg !8815
  %16 = and i32 %15, 1, !dbg !8815
  %17 = icmp eq i32 %16, 0, !dbg !8815
  br i1 %17, label %__get_new_fd.exit20, label %bb1.i12, !dbg !8815

bb1.i12:                                          ; preds = %bb.i10
  %indvar.next.i11 = add i64 %indvar.i13, 1
  br label %bb2.i15, !dbg !8817

bb2.i15:                                          ; preds = %bb1.i12, %__get_new_fd.exit
  %indvar.i13 = phi i64 [ %indvar.next.i11, %bb1.i12 ], [ 0, %__get_new_fd.exit ]
  %fd.0.i14 = trunc i64 %indvar.i13 to i32
  %18 = icmp slt i32 %fd.0.i14, 32, !dbg !8817
  br i1 %18, label %bb.i10, label %bb3.i16, !dbg !8817

bb3.i16:                                          ; preds = %bb2.i15
  %19 = icmp eq i32 %fd.0.i14, 32, !dbg !8818
  br i1 %19, label %__get_new_fd.exit20.thread, label %__get_new_fd.exit20, !dbg !8818

__get_new_fd.exit20.thread:                       ; preds = %bb3.i16
  %20 = call i32* @__errno_location() nounwind readnone, !dbg !8819
  store i32 23, i32* %20, align 4, !dbg !8819
  %21 = getelementptr inbounds i32* %filedes, i64 1, !dbg !8816
  store i32 -1, i32* %21, align 4, !dbg !8816
  br label %bb2

__get_new_fd.exit20:                              ; preds = %bb3.i16, %bb.i10
  %22 = sext i32 %fd.0.i14 to i64, !dbg !8820
  %23 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, !dbg !8820
  %24 = bitcast %struct.exe_file_t* %23 to i8*, !dbg !8821
  %25 = call i8* @memset(i8* %24, i32 0, i64 56)
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 0, !dbg !8822
  store i32 -1, i32* %26, align 8, !dbg !8822
  %27 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %22, i32 1, !dbg !8823
  store i32 1, i32* %27, align 4, !dbg !8823
  %28 = getelementptr inbounds i32* %filedes, i64 1, !dbg !8816
  store i32 %fd.0.i14, i32* %28, align 4, !dbg !8816
  %29 = icmp slt i32 %fd.0.i14, 0, !dbg !8816
  br i1 %29, label %__get_new_fd.exit20.bb2_crit_edge, label %bb3, !dbg !8816

__get_new_fd.exit20.bb2_crit_edge:                ; preds = %__get_new_fd.exit20
  %.pre29 = call i32* @__errno_location() nounwind readnone, !dbg !8824
  br label %bb2

bb2:                                              ; preds = %__get_new_fd.exit20.bb2_crit_edge, %__get_new_fd.exit20.thread
  %.pre-phi30 = phi i32* [ %.pre29, %__get_new_fd.exit20.bb2_crit_edge ], [ %20, %__get_new_fd.exit20.thread ]
  %30 = phi i32* [ %28, %__get_new_fd.exit20.bb2_crit_edge ], [ %21, %__get_new_fd.exit20.thread ]
  %31 = call i32 @klee_get_errno() nounwind, !dbg !8824
  store i32 %31, i32* %.pre-phi30, align 4, !dbg !8824
  %32 = load i32* %30, align 4, !dbg !8825
  br label %bb7, !dbg !8825

bb3:                                              ; preds = %__get_new_fd.exit20
  %os_filedes4 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 0, !dbg !8826
  %33 = call i64 (i64, ...)* @syscall(i64 22, i32* %os_filedes4) nounwind, !dbg !8826
  %34 = trunc i64 %33 to i32, !dbg !8826
  %35 = icmp slt i32 %34, 0, !dbg !8827
  br i1 %35, label %bb5, label %bb6, !dbg !8827

bb5:                                              ; preds = %bb3
  %36 = call i32* @__errno_location() nounwind readnone, !dbg !8828
  %37 = call i32 @klee_get_errno() nounwind, !dbg !8828
  store i32 %37, i32* %36, align 4, !dbg !8828
  br label %bb7, !dbg !8829

bb6:                                              ; preds = %bb3
  %38 = load i32* %os_filedes4, align 4, !dbg !8830
  store i32 %38, i32* %10, align 8, !dbg !8830
  store i32 5, i32* %11, align 4, !dbg !8830
  %39 = getelementptr inbounds [2 x i32]* %os_filedes, i64 0, i64 1, !dbg !8831
  %40 = load i32* %39, align 4, !dbg !8831
  store i32 %40, i32* %26, align 8, !dbg !8831
  store i32 9, i32* %27, align 4, !dbg !8831
  %41 = load i32* %28, align 4, !dbg !8832
  %42 = load i32* %filedes, align 4, !dbg !8832
  %43 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8832
  %44 = call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %43, i8* noalias getelementptr inbounds ([47 x i8]* @.str23331, i64 0, i64 0), i32 %42, i32 %41, i32 %38, i32 %40)
  br label %bb7, !dbg !8833

bb7:                                              ; preds = %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ %14, %bb ], [ %32, %bb2 ], [ %34, %bb5 ], [ 0, %bb6 ]
  ret i32 %.0, !dbg !8814
}

declare i64 @klee_get_valuel(i64)

declare void @klee_assume(i64)

define internal fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %cp_treat_symbolic) nounwind {
entry:
  %0 = icmp eq i8* %pathname, null, !dbg !8834
  br i1 %0, label %bb59, label %bb, !dbg !8834

bb:                                               ; preds = %entry
  %1 = load i8* %pathname, align 1, !dbg !8834
  %2 = icmp eq i8 %1, 0, !dbg !8834
  br i1 %2, label %bb59, label %bb2, !dbg !8834

bb2:                                              ; preds = %bb
  %3 = tail call i32 @klee_zest_enabled() nounwind, !dbg !8835
  %4 = icmp eq i32 %3, 1, !dbg !8835
  %5 = zext i1 %4 to i8, !dbg !8835
  store i8 %5, i8* @UseConcretePath, align 1, !dbg !8835
  %6 = getelementptr inbounds i8* %pathname, i64 1, !dbg !8836
  %7 = load i8* %6, align 1, !dbg !8836
  %8 = icmp eq i8 %7, 0, !dbg !8836
  br i1 %8, label %bb3, label %bb11, !dbg !8836

bb3:                                              ; preds = %bb2
  %9 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8836
  %10 = icmp eq i32 %9, 0, !dbg !8836
  br i1 %10, label %bb4, label %bb3.bb11_crit_edge, !dbg !8836

bb3.bb11_crit_edge:                               ; preds = %bb3
  %.pre = load i8* @UseConcretePath, align 1
  br label %bb11

bb4:                                              ; preds = %bb3
  %11 = load i8* %pathname, align 1, !dbg !8837
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 8, !dbg !8838
  %13 = sext i8 %11 to i32, !dbg !8839
  br label %bb10, !dbg !8838

bb5:                                              ; preds = %bb10
  %int_cast_to_i64 = zext i32 24 to i64
  %14 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %14, label %klee_overshift_check.exit, label %bb.i4

bb.i4:                                            ; preds = %bb5
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb5
  %sext = shl i32 %28, 24
  %int_cast_to_i641 = zext i32 24 to i64
  %15 = icmp ult i64 %int_cast_to_i641, 32
  br i1 %15, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit
  %16 = ashr exact i32 %sext, 24, !dbg !8839
  %17 = add nsw i32 %16, 65, !dbg !8839
  %18 = icmp eq i32 %13, %17, !dbg !8839
  br i1 %18, label %bb6, label %bb9, !dbg !8839

bb6:                                              ; preds = %klee_overshift_check.exit6
  %19 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !8840
  %20 = zext i32 %28 to i64, !dbg !8840
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, i32 3, !dbg !8841
  %22 = load %struct.stat** %21, align 8, !dbg !8841
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 1, !dbg !8841
  %24 = load i64* %23, align 8, !dbg !8841
  %25 = icmp eq i64 %24, 0, !dbg !8841
  br i1 %25, label %bb59, label %bb8, !dbg !8841

bb8:                                              ; preds = %bb6
  %26 = getelementptr inbounds %struct.exe_disk_file_t* %19, i64 %20, !dbg !8840
  br label %bb59, !dbg !8842

bb9:                                              ; preds = %klee_overshift_check.exit6
  %27 = add i32 %28, 1, !dbg !8838
  br label %bb10, !dbg !8838

bb10:                                             ; preds = %bb9, %bb4
  %28 = phi i32 [ 0, %bb4 ], [ %27, %bb9 ]
  %29 = icmp ugt i32 %12, %28, !dbg !8838
  br i1 %29, label %bb5, label %bb59, !dbg !8838

bb11:                                             ; preds = %bb3.bb11_crit_edge, %bb2
  %30 = phi i8 [ %.pre, %bb3.bb11_crit_edge ], [ %5, %bb2 ]
  %toBool = icmp eq i8 %30, 0, !dbg !8843
  %toBool13 = icmp eq i8 %cp_treat_symbolic, 0, !dbg !8843
  %or.cond = or i1 %toBool, %toBool13
  br i1 %or.cond, label %bb59, label %bb14, !dbg !8843

bb14:                                             ; preds = %bb11
  %31 = load i8* %pathname, align 1, !dbg !8844
  %32 = sext i8 %31 to i64, !dbg !8844
  %33 = tail call i32 @klee_is_symbolic(i64 %32) nounwind, !dbg !8844
  %34 = icmp eq i32 %33, 0, !dbg !8844
  br i1 %34, label %bb19, label %bb16, !dbg !8844

bb16:                                             ; preds = %bb14
  %35 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8845
  %36 = icmp eq i32 %35, 0, !dbg !8845
  br i1 %36, label %bb17, label %bb41, !dbg !8845

bb17:                                             ; preds = %bb16
  %37 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8846
  %38 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %37, i8* noalias getelementptr inbounds ([32 x i8]* @.str24332, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !8846

bb19:                                             ; preds = %bb14
  %39 = tail call i8* @strchr(i8* %pathname, i32 46) nounwind readonly, !dbg !8847
  %40 = icmp eq i8* %39, null, !dbg !8848
  br i1 %40, label %bb56, label %bb37, !dbg !8848

bb37:                                             ; preds = %bb19
  %41 = tail call i32 @strcmp(i8* %39, i8* getelementptr inbounds ([6 x i8]* @.str25333, i64 0, i64 0)) nounwind readonly, !dbg !8849
  %phitmp = icmp eq i32 %41, 0
  br i1 %phitmp, label %bb38, label %bb56, !dbg !8849

bb38:                                             ; preds = %bb37
  %42 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8850
  %43 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %42, i8* noalias getelementptr inbounds ([40 x i8]* @.str26334, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb41, !dbg !8850

bb41:                                             ; preds = %bb38, %bb17, %bb16
  %44 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8851
  %45 = icmp eq i32 %44, 0, !dbg !8852
  br i1 %45, label %bb43, label %bb42, !dbg !8852

bb42:                                             ; preds = %bb41
  %46 = tail call i64 @strlen(i8* %pathname) nounwind readonly, !dbg !8853
  %int_cast_to_i642 = bitcast i64 32 to i64
  %47 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %47, label %klee_overshift_check.exit8, label %bb.i7

bb.i7:                                            ; preds = %bb42
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit8:                       ; preds = %bb42
  %48 = shl i64 %46, 32
  %sext63 = add i64 %48, 4294967296
  %int_cast_to_i643 = bitcast i64 32 to i64
  %49 = icmp ult i64 %int_cast_to_i643, 64
  br i1 %49, label %klee_overshift_check.exit10, label %bb.i9

bb.i9:                                            ; preds = %klee_overshift_check.exit8
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit10:                      ; preds = %klee_overshift_check.exit8
  %50 = ashr exact i64 %sext63, 32, !dbg !8854
  %51 = tail call noalias i8* @malloc(i64 %50) nounwind, !dbg !8854
  %52 = call i8* @memcpy(i8* %51, i8* %pathname, i64 %50)
  br label %bb43, !dbg !8855

bb43:                                             ; preds = %klee_overshift_check.exit10, %bb41
  %toConcretize.0 = phi i8* [ %51, %klee_overshift_check.exit10 ], [ %pathname, %bb41 ]
  %53 = ptrtoint i8* %toConcretize.0 to i64, !dbg !8856
  %54 = tail call i64 @klee_get_valuel(i64 %53) nounwind, !dbg !8856
  %55 = inttoptr i64 %54 to i8*, !dbg !8856
  %56 = icmp eq i8* %55, %toConcretize.0, !dbg !8859
  %57 = zext i1 %56 to i64, !dbg !8859
  tail call void @klee_assume(i64 %57) nounwind, !dbg !8859
  br label %bb.i, !dbg !8860

bb.i:                                             ; preds = %bb13.i, %bb43
  %sc.0.i = phi i8* [ %55, %bb43 ], [ %sc.1.i, %bb13.i ]
  %58 = phi i32 [ 0, %bb43 ], [ %75, %bb13.i ]
  %59 = load i8* %sc.0.i, align 1, !dbg !8861
  %60 = load i8* @UseConcretePath, align 1, !dbg !8862
  %toBool3not.i = icmp eq i8 %60, 0, !dbg !8862
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8862

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %58, -1
  %61 = and i32 %tmp.i, %58, !dbg !8862
  %62 = icmp eq i32 %61, 0, !dbg !8862
  br i1 %62, label %bb8.i, label %bb12.i, !dbg !8862

bb8.i:                                            ; preds = %bb7.i
  switch i8 %59, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8863
  br label %bb50.preheader, !dbg !8863

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8864
  %63 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8864
  br label %bb13.i, !dbg !8864

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %64 = sext i8 %59 to i64, !dbg !8865
  %65 = tail call i64 @klee_get_valuel(i64 %64) nounwind, !dbg !8865
  %66 = trunc i64 %65 to i8, !dbg !8865
  %67 = icmp eq i8 %66, %59, !dbg !8866
  %68 = zext i1 %67 to i64, !dbg !8866
  tail call void @klee_assume(i64 %68) nounwind, !dbg !8866
  store i8 %66, i8* %sc.0.i, align 1, !dbg !8867
  %69 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8867
  %70 = icmp eq i8 %66, 0, !dbg !8868
  br i1 %70, label %bb50.preheader, label %bb13.i, !dbg !8868

bb50.preheader:                                   ; preds = %bb12.i, %bb9.i
  %71 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !8869
  %72 = icmp eq i32 %71, 0, !dbg !8869
  br i1 %72, label %bb52, label %bb44.lr.ph, !dbg !8869

bb44.lr.ph:                                       ; preds = %bb50.preheader
  %73 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 8, !dbg !8870
  %tmp = icmp ugt i32 %71, 1
  %.op = add i32 %71, -1
  %74 = zext i32 %.op to i64
  %.op76 = add i64 %74, 1
  %tmp70 = select i1 %tmp, i64 %.op76, i64 1
  br label %bb44

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %69, %bb12.i ], [ %63, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %75 = add i32 %58, 1, !dbg !8860
  br label %bb.i, !dbg !8860

bb44:                                             ; preds = %bb49, %bb44.lr.ph
  %indvar = phi i64 [ 0, %bb44.lr.ph ], [ %indvar.next, %bb49 ]
  %df15.165 = phi %struct.exe_disk_file_t* [ null, %bb44.lr.ph ], [ %df15.0, %bb49 ]
  %scevgep71 = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar, i32 2
  %scevgep = getelementptr %struct.exe_disk_file_t* %73, i64 %indvar
  %76 = load i8** %scevgep71, align 8, !dbg !8870
  %77 = icmp eq i8* %76, null, !dbg !8870
  br i1 %77, label %bb49, label %bb45, !dbg !8870

bb45:                                             ; preds = %bb44
  %78 = tail call i32 @strcmp(i8* %76, i8* %pathname) nounwind readonly, !dbg !8871
  %79 = icmp eq i32 %78, 0, !dbg !8871
  br i1 %79, label %bb48, label %bb49, !dbg !8871

bb48:                                             ; preds = %bb45
  br label %bb49, !dbg !8872

bb49:                                             ; preds = %bb48, %bb45, %bb44
  %df15.0 = phi %struct.exe_disk_file_t* [ %scevgep, %bb48 ], [ %df15.165, %bb45 ], [ %df15.165, %bb44 ]
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp70
  br i1 %exitcond3, label %bb51, label %bb44, !dbg !8869

bb51:                                             ; preds = %bb49
  %80 = icmp eq %struct.exe_disk_file_t* %df15.0, null, !dbg !8873
  br i1 %80, label %bb52, label %bb53, !dbg !8873

bb52:                                             ; preds = %bb51, %bb50.preheader
  %81 = tail call %struct.exe_disk_file_t* @klee_init_cp_file(i8* %toConcretize.0, i32 %flags) nounwind, !dbg !8874
  br label %bb53, !dbg !8874

bb53:                                             ; preds = %bb52, %bb51
  %df15.2 = phi %struct.exe_disk_file_t* [ %81, %bb52 ], [ %df15.0, %bb51 ]
  br i1 %45, label %bb59, label %bb54, !dbg !8875

bb54:                                             ; preds = %bb53
  tail call void @free(i8* %toConcretize.0) nounwind, !dbg !8876
  br label %bb59, !dbg !8876

bb56:                                             ; preds = %bb37, %bb19
  %82 = tail call i32 @klee_shadow_enabled() nounwind, !dbg !8851
  %83 = icmp eq i32 %82, 0, !dbg !8852
  br i1 %83, label %bb57, label %bb59, !dbg !8877

bb57:                                             ; preds = %bb56
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !8878
  %85 = tail call i32 (%struct.FILE*, i8*, ...)* bitcast (i32 (%4*, i8*, ...)* @fprintf to i32 (%struct.FILE*, i8*, ...)*)(%struct.FILE* noalias %84, i8* noalias getelementptr inbounds ([32 x i8]* @.str27335, i64 0, i64 0), i8* %pathname) nounwind, !dbg 
  br label %bb59, !dbg !8878

bb59:                                             ; preds = %bb57, %bb56, %bb54, %bb53, %bb11, %bb10, %bb8, %bb6, %bb, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %26, %bb8 ], [ null, %bb ], [ null, %entry ], [ null, %bb6 ], [ %df15.2, %bb53 ], [ %df15.2, %bb54 ], [ null, %bb11 ], [ null, %bb57 ], [ null, %bb56 ], [ null, %bb10 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !8879
}

declare i32 @klee_is_symbolic(i64)

define i32 @utime(i8* %path, i8* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8880
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8883
  br i1 %1, label %bb1, label %bb, !dbg !8883

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([40 x i8]* @.str28336, i64 0, i64 0)) nounwind, !dbg !8884
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8885
  store i32 2, i32* %2, align 4, !dbg !8885
  br label %bb4, !dbg !8886

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8887
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8887
  %5 = inttoptr i64 %4 to i8*, !dbg !8887
  %6 = icmp eq i8* %5, %path, !dbg !8890
  %7 = zext i1 %6 to i64, !dbg !8890
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8890
  br label %bb.i, !dbg !8891

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8892
  %10 = load i8* @UseConcretePath, align 1, !dbg !8893
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8893
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8893

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8893
  %12 = icmp eq i32 %11, 0, !dbg !8893
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8893

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8894
  br label %__concretize_string.exit, !dbg !8894

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8895
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8895
  br label %bb13.i, !dbg !8895

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8896
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8896
  %16 = trunc i64 %15 to i8, !dbg !8896
  %17 = icmp eq i8 %16, %9, !dbg !8897
  %18 = zext i1 %17 to i64, !dbg !8897
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8897
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8898
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8898
  %20 = icmp eq i8 %16, 0, !dbg !8899
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8899

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8891
  br label %bb.i, !dbg !8891

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 132, i8* %path, i8* %times) nounwind, !dbg !8889
  %23 = trunc i64 %22 to i32, !dbg !8889
  %24 = icmp eq i32 %23, -1, !dbg !8900
  br i1 %24, label %bb2, label %bb4, !dbg !8900

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8901
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8901
  store i32 %26, i32* %25, align 4, !dbg !8901
  br label %bb4, !dbg !8901

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8886
}

define i64 @readlink(i8* %path, i8* %buf, i64 %bufsize) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8902
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8904
  br i1 %1, label %bb12, label %bb, !dbg !8904

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8905
  %3 = load %struct.stat** %2, align 8, !dbg !8905
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8905
  %5 = load i32* %4, align 8, !dbg !8905
  %6 = and i32 %5, 61440, !dbg !8905
  %7 = icmp eq i32 %6, 40960, !dbg !8905
  br i1 %7, label %bb1, label %bb11, !dbg !8905

bb1:                                              ; preds = %bb
  %8 = load i8* %path, align 1, !dbg !8906
  store i8 %8, i8* %buf, align 1, !dbg !8906
  %9 = icmp ugt i64 %bufsize, 1, !dbg !8907
  br i1 %9, label %bb3, label %bb9, !dbg !8907

bb3:                                              ; preds = %bb1
  %10 = getelementptr inbounds i8* %buf, i64 1, !dbg !8907
  store i8 46, i8* %10, align 1, !dbg !8907
  %11 = icmp ugt i64 %bufsize, 2, !dbg !8908
  br i1 %11, label %bb5, label %bb9, !dbg !8908

bb5:                                              ; preds = %bb3
  %12 = getelementptr inbounds i8* %buf, i64 2, !dbg !8908
  store i8 108, i8* %12, align 1, !dbg !8908
  %13 = icmp ugt i64 %bufsize, 3, !dbg !8909
  br i1 %13, label %bb7, label %bb9, !dbg !8909

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds i8* %buf, i64 3, !dbg !8909
  store i8 110, i8* %14, align 1, !dbg !8909
  %15 = icmp ugt i64 %bufsize, 4, !dbg !8910
  br i1 %15, label %bb8, label %bb9, !dbg !8910

bb8:                                              ; preds = %bb7
  %16 = getelementptr inbounds i8* %buf, i64 4, !dbg !8910
  store i8 107, i8* %16, align 1, !dbg !8910
  br label %bb9, !dbg !8910

bb9:                                              ; preds = %bb8, %bb7, %bb5, %bb3, %bb1
  %17 = icmp ugt i64 %bufsize, 5, !dbg !8911
  %min = select i1 %17, i64 5, i64 %bufsize, !dbg !8911
  br label %bb15, !dbg !8911

bb11:                                             ; preds = %bb
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !8912
  store i32 22, i32* %18, align 4, !dbg !8912
  br label %bb15, !dbg !8913

bb12:                                             ; preds = %entry
  %19 = tail call i64 (i64, ...)* @syscall(i64 89, i8* %path, i8* %buf, i64 %bufsize) nounwind, !dbg !8914
  %20 = trunc i64 %19 to i32, !dbg !8914
  %21 = icmp eq i32 %20, -1, !dbg !8915
  br i1 %21, label %bb13, label %bb14, !dbg !8915

bb13:                                             ; preds = %bb12
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !8916
  %23 = tail call i32 @klee_get_errno() nounwind, !dbg !8916
  store i32 %23, i32* %22, align 4, !dbg !8916
  br label %bb14, !dbg !8916

bb14:                                             ; preds = %bb13, %bb12
  %24 = sext i32 %20 to i64, !dbg !8917
  br label %bb15, !dbg !8917

bb15:                                             ; preds = %bb14, %bb11, %bb9
  %.0 = phi i64 [ %min, %bb9 ], [ -1, %bb11 ], [ %24, %bb14 ]
  ret i64 %.0, !dbg !8911
}

define i32 @utimes(i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8918
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8920
  br i1 %1, label %bb1, label %bb, !dbg !8920

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([41 x i8]* @.str29337, i64 0, i64 0)) nounwind, !dbg !8921
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8922
  store i32 2, i32* %2, align 4, !dbg !8922
  br label %bb4, !dbg !8923

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8924
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8924
  %5 = inttoptr i64 %4 to i8*, !dbg !8924
  %6 = icmp eq i8* %5, %path, !dbg !8927
  %7 = zext i1 %6 to i64, !dbg !8927
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8927
  br label %bb.i, !dbg !8928

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8929
  %10 = load i8* @UseConcretePath, align 1, !dbg !8930
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !8930
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8930

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !8930
  %12 = icmp eq i32 %11, 0, !dbg !8930
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !8930

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8931
  br label %__concretize_string.exit, !dbg !8931

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8932
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8932
  br label %bb13.i, !dbg !8932

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !8933
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !8933
  %16 = trunc i64 %15 to i8, !dbg !8933
  %17 = icmp eq i8 %16, %9, !dbg !8934
  %18 = zext i1 %17 to i64, !dbg !8934
  tail call void @klee_assume(i64 %18) nounwind, !dbg !8934
  store i8 %16, i8* %sc.0.i, align 1, !dbg !8935
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8935
  %20 = icmp eq i8 %16, 0, !dbg !8936
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !8936

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8928
  br label %bb.i, !dbg !8928

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 235, i8* %path, %struct.timespec* %times) nounwind, !dbg !8926
  %23 = trunc i64 %22 to i32, !dbg !8926
  %24 = icmp eq i32 %23, -1, !dbg !8937
  br i1 %24, label %bb2, label %bb4, !dbg !8937

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !8938
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !8938
  store i32 %26, i32* %25, align 4, !dbg !8938
  br label %bb4, !dbg !8938

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8923
}

define i32 @unlink(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8939
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8941
  br i1 %1, label %bb5, label %bb, !dbg !8941

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8942
  %3 = load %struct.stat** %2, align 8, !dbg !8942
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8942
  %5 = load i32* %4, align 8, !dbg !8942
  %6 = and i32 %5, 61440, !dbg !8942
  %7 = icmp eq i32 %6, 32768, !dbg !8942
  br i1 %7, label %bb1, label %bb2, !dbg !8942

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !8943
  store i64 0, i64* %8, align 8, !dbg !8943
  br label %bb8, !dbg !8944

bb2:                                              ; preds = %bb
  %9 = icmp eq i32 %6, 16384, !dbg !8945
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !8946
  br i1 %9, label %bb3, label %bb4, !dbg !8945

bb3:                                              ; preds = %bb2
  store i32 21, i32* %10, align 4, !dbg !8946
  br label %bb8, !dbg !8947

bb4:                                              ; preds = %bb2
  store i32 1, i32* %10, align 4, !dbg !8948
  br label %bb8, !dbg !8949

bb5:                                              ; preds = %entry
  %11 = ptrtoint i8* %pathname to i64, !dbg !8950
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !8950
  %13 = inttoptr i64 %12 to i8*, !dbg !8950
  %14 = icmp eq i8* %13, %pathname, !dbg !8953
  %15 = zext i1 %14 to i64, !dbg !8953
  tail call void @klee_assume(i64 %15) nounwind, !dbg !8953
  br label %bb.i, !dbg !8954

bb.i:                                             ; preds = %bb13.i, %bb5
  %sc.0.i = phi i8* [ %13, %bb5 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb5 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !8955
  %18 = load i8* @UseConcretePath, align 1, !dbg !8956
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !8956
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8956

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !8956
  %20 = icmp eq i32 %19, 0, !dbg !8956
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !8956

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8957
  br label %__concretize_string.exit, !dbg !8957

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8958
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8958
  br label %bb13.i, !dbg !8958

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !8959
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !8959
  %24 = trunc i64 %23 to i8, !dbg !8959
  %25 = icmp eq i8 %24, %17, !dbg !8960
  %26 = zext i1 %25 to i64, !dbg !8960
  tail call void @klee_assume(i64 %26) nounwind, !dbg !8960
  store i8 %24, i8* %sc.0.i, align 1, !dbg !8961
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8961
  %28 = icmp eq i8 %24, 0, !dbg !8962
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !8962

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !8954
  br label %bb.i, !dbg !8954

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 87, i8* %pathname) nounwind, !dbg !8952
  %31 = trunc i64 %30 to i32, !dbg !8952
  %32 = icmp eq i32 %31, -1, !dbg !8963
  br i1 %32, label %bb6, label %bb8, !dbg !8963

bb6:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !8964
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !8964
  store i32 %34, i32* %33, align 4, !dbg !8964
  br label %bb8, !dbg !8964

bb8:                                              ; preds = %bb6, %__concretize_string.exit, %bb4, %bb3, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb3 ], [ -1, %bb4 ], [ -1, %bb6 ], [ %31, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8944
}

define i32 @rmdir(i8* %pathname) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !8965
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8967
  br i1 %1, label %bb3, label %bb, !dbg !8967

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !8968
  %3 = load %struct.stat** %2, align 8, !dbg !8968
  %4 = getelementptr inbounds %struct.stat* %3, i64 0, i32 3, !dbg !8968
  %5 = load i32* %4, align 8, !dbg !8968
  %6 = and i32 %5, 61440, !dbg !8968
  %7 = icmp eq i32 %6, 16384, !dbg !8968
  br i1 %7, label %bb1, label %bb2, !dbg !8968

bb1:                                              ; preds = %bb
  %8 = getelementptr inbounds %struct.stat* %3, i64 0, i32 1, !dbg !8969
  store i64 0, i64* %8, align 8, !dbg !8969
  br label %bb6, !dbg !8970

bb2:                                              ; preds = %bb
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !8971
  store i32 20, i32* %9, align 4, !dbg !8971
  br label %bb6, !dbg !8972

bb3:                                              ; preds = %entry
  %10 = ptrtoint i8* %pathname to i64, !dbg !8973
  %11 = tail call i64 @klee_get_valuel(i64 %10) nounwind, !dbg !8973
  %12 = inttoptr i64 %11 to i8*, !dbg !8973
  %13 = icmp eq i8* %12, %pathname, !dbg !8976
  %14 = zext i1 %13 to i64, !dbg !8976
  tail call void @klee_assume(i64 %14) nounwind, !dbg !8976
  br label %bb.i, !dbg !8977

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %12, %bb3 ], [ %sc.1.i, %bb13.i ]
  %15 = phi i32 [ 0, %bb3 ], [ %28, %bb13.i ]
  %16 = load i8* %sc.0.i, align 1, !dbg !8978
  %17 = load i8* @UseConcretePath, align 1, !dbg !8979
  %toBool3not.i = icmp eq i8 %17, 0, !dbg !8979
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !8979

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %15, -1
  %18 = and i32 %tmp.i, %15, !dbg !8979
  %19 = icmp eq i32 %18, 0, !dbg !8979
  br i1 %19, label %bb8.i, label %bb12.i, !dbg !8979

bb8.i:                                            ; preds = %bb7.i
  switch i8 %16, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !8980
  br label %__concretize_string.exit, !dbg !8980

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !8981
  %20 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8981
  br label %bb13.i, !dbg !8981

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %21 = sext i8 %16 to i64, !dbg !8982
  %22 = tail call i64 @klee_get_valuel(i64 %21) nounwind, !dbg !8982
  %23 = trunc i64 %22 to i8, !dbg !8982
  %24 = icmp eq i8 %23, %16, !dbg !8983
  %25 = zext i1 %24 to i64, !dbg !8983
  tail call void @klee_assume(i64 %25) nounwind, !dbg !8983
  store i8 %23, i8* %sc.0.i, align 1, !dbg !8984
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !8984
  %27 = icmp eq i8 %23, 0, !dbg !8985
  br i1 %27, label %__concretize_string.exit, label %bb13.i, !dbg !8985

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %26, %bb12.i ], [ %20, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %28 = add i32 %15, 1, !dbg !8977
  br label %bb.i, !dbg !8977

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %29 = tail call i64 (i64, ...)* @syscall(i64 84, i8* %pathname) nounwind, !dbg !8975
  %30 = trunc i64 %29 to i32, !dbg !8975
  %31 = icmp eq i32 %30, -1, !dbg !8986
  br i1 %31, label %bb4, label %bb6, !dbg !8986

bb4:                                              ; preds = %__concretize_string.exit
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !8987
  %33 = tail call i32 @klee_get_errno() nounwind, !dbg !8987
  store i32 %33, i32* %32, align 4, !dbg !8987
  br label %bb6, !dbg !8987

bb6:                                              ; preds = %bb4, %__concretize_string.exit, %bb2, %bb1
  %.0 = phi i32 [ 0, %bb1 ], [ -1, %bb2 ], [ -1, %bb4 ], [ %30, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8970
}

define i32 @__fd_statfs(i8* %path, %11* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !8988
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !8990
  br i1 %1, label %bb1, label %bb, !dbg !8990

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5313, i64 0, i64 0)) nounwind, !dbg !8991
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !8992
  store i32 2, i32* %2, align 4, !dbg !8992
  br label %bb4, !dbg !8993

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !8994
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !8994
  %5 = inttoptr i64 %4 to i8*, !dbg !8994
  %6 = icmp eq i8* %5, %path, !dbg !8997
  %7 = zext i1 %6 to i64, !dbg !8997
  tail call void @klee_assume(i64 %7) nounwind, !dbg !8997
  br label %bb.i, !dbg !8998

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !8999
  %10 = load i8* @UseConcretePath, align 1, !dbg !9000
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9000
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9000

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9000
  %12 = icmp eq i32 %11, 0, !dbg !9000
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9000

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9001
  br label %__concretize_string.exit, !dbg !9001

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9002
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9002
  br label %bb13.i, !dbg !9002

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9003
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9003
  %16 = trunc i64 %15 to i8, !dbg !9003
  %17 = icmp eq i8 %16, %9, !dbg !9004
  %18 = zext i1 %17 to i64, !dbg !9004
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9004
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9005
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9005
  %20 = icmp eq i8 %16, 0, !dbg !9006
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9006

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !8998
  br label %bb.i, !dbg !8998

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 137, i8* %path, %11* %buf) nounwind, !dbg !8996
  %23 = trunc i64 %22 to i32, !dbg !8996
  %24 = icmp eq i32 %23, -1, !dbg !9007
  br i1 %24, label %bb2, label %bb4, !dbg !9007

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9008
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9008
  store i32 %26, i32* %25, align 4, !dbg !9008
  br label %bb4, !dbg !9008

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !8993
}

define i32 @openat(i32 %fd, i8* %path, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = icmp ult i32 %fd, 32, !dbg !9009
  br i1 %0, label %bb.i, label %bb4, !dbg !9009

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9011
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9012
  %3 = load i32* %2, align 4, !dbg !9012
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9012
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !9012

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9011
  %cond = icmp eq %struct.exe_file_t* %5, null
  br i1 %cond, label %bb4, label %bb

bb:                                               ; preds = %__get_file.exit
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9013
  %7 = load %struct.exe_disk_file_t** %6, align 8, !dbg !9013
  %8 = icmp eq %struct.exe_disk_file_t* %7, null, !dbg !9013
  br i1 %8, label %bb3, label %bb1, !dbg !9013

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([52 x i8]* @.str30338, i64 0, i64 0)) nounwind, !dbg !9014
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !9015
  store i32 2, i32* %9, align 4, !dbg !9015
  br label %bb29, !dbg !9016

bb3:                                              ; preds = %bb
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9017
  %11 = load i32* %10, align 8, !dbg !9017
  br label %bb4, !dbg !9017

bb4:                                              ; preds = %bb3, %__get_file.exit, %bb.i, %entry
  %fd_addr.0 = phi i32 [ %11, %bb3 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %entry ]
  br label %bb7, !dbg !9018

bb5:                                              ; preds = %bb7
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %12 = load i32* %scevgep, align 4, !dbg !9019
  %13 = and i32 %12, 1, !dbg !9019
  %14 = icmp eq i32 %13, 0, !dbg !9019
  br i1 %14, label %bb10, label %bb6, !dbg !9019

bb6:                                              ; preds = %bb5
  %indvar.next = add i64 %indvar, 1
  br label %bb7, !dbg !9018

bb7:                                              ; preds = %bb6, %bb4
  %indvar = phi i64 [ %indvar.next, %bb6 ], [ 0, %bb4 ]
  %fd_idx.0 = trunc i64 %indvar to i32
  %15 = icmp slt i32 %fd_idx.0, 32, !dbg !9018
  br i1 %15, label %bb5, label %bb8, !dbg !9018

bb8:                                              ; preds = %bb7
  %16 = icmp eq i32 %fd_idx.0, 32, !dbg !9020
  br i1 %16, label %bb9, label %bb10, !dbg !9020

bb9:                                              ; preds = %bb8
  %17 = call i32* @__errno_location() nounwind readnone, !dbg !9021
  store i32 24, i32* %17, align 4, !dbg !9021
  br label %bb29, !dbg !9022

bb10:                                             ; preds = %bb8, %bb5
  %18 = sext i32 %fd_idx.0 to i64, !dbg !9023
  %19 = and i32 %flags, 64, !dbg !9024
  %20 = icmp eq i32 %19, 0, !dbg !9024
  br i1 %20, label %bb19, label %bb11, !dbg !9024

bb11:                                             ; preds = %bb10
  %ap1213 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !9025
  call void @llvm.va_start(i8* %ap1213), !dbg !9025
  %21 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !9026
  %22 = load i32* %21, align 8, !dbg !9026
  %23 = icmp ugt i32 %22, 47, !dbg !9026
  br i1 %23, label %bb15, label %bb14, !dbg !9026

bb14:                                             ; preds = %bb11
  %24 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !9026
  %25 = load i8** %24, align 8, !dbg !9026
  %tmp = zext i32 %22 to i64
  %26 = ptrtoint i8* %25 to i64, !dbg !9026
  %27 = add i64 %26, %tmp, !dbg !9026
  %28 = inttoptr i64 %27 to i8*, !dbg !9026
  %29 = add i32 %22, 8, !dbg !9026
  store i32 %29, i32* %21, align 8, !dbg !9026
  br label %bb16, !dbg !9026

bb15:                                             ; preds = %bb11
  %30 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !9026
  %31 = load i8** %30, align 8, !dbg !9026
  %32 = getelementptr inbounds i8* %31, i64 8, !dbg !9026
  store i8* %32, i8** %30, align 8, !dbg !9026
  br label %bb16, !dbg !9026

bb16:                                             ; preds = %bb15, %bb14
  %addr.67.0 = phi i8* [ %31, %bb15 ], [ %28, %bb14 ]
  %33 = bitcast i8* %addr.67.0 to i32*, !dbg !9026
  %34 = load i32* %33, align 4, !dbg !9026
  call void @llvm.va_end(i8* %ap1213), !dbg !9027
  br label %bb19, !dbg !9027

bb19:                                             ; preds = %bb16, %bb10
  %mode.0 = phi i32 [ %34, %bb16 ], [ 0, %bb10 ]
  %35 = sext i32 %flags to i64, !dbg !9028
  %36 = ptrtoint i8* %path to i64, !dbg !9029
  %37 = call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9029
  %38 = inttoptr i64 %37 to i8*, !dbg !9029
  %39 = icmp eq i8* %38, %path, !dbg !9031
  %40 = zext i1 %39 to i64, !dbg !9031
  call void @klee_assume(i64 %40) nounwind, !dbg !9031
  br label %bb.i32, !dbg !9032

bb.i32:                                           ; preds = %bb13.i, %bb19
  %sc.0.i = phi i8* [ %38, %bb19 ], [ %sc.1.i, %bb13.i ]
  %41 = phi i32 [ 0, %bb19 ], [ %54, %bb13.i ]
  %42 = load i8* %sc.0.i, align 1, !dbg !9033
  %43 = load i8* @UseConcretePath, align 1, !dbg !9034
  %toBool3not.i = icmp eq i8 %43, 0, !dbg !9034
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9034

bb7.i:                                            ; preds = %bb.i32
  %tmp.i = add i32 %41, -1
  %44 = and i32 %tmp.i, %41, !dbg !9034
  %45 = icmp eq i32 %44, 0, !dbg !9034
  br i1 %45, label %bb8.i, label %bb12.i, !dbg !9034

bb8.i:                                            ; preds = %bb7.i
  switch i8 %42, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9035
  br label %__concretize_string.exit, !dbg !9035

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9036
  %46 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9036
  br label %bb13.i, !dbg !9036

bb12.i:                                           ; preds = %bb7.i, %bb.i32
  %47 = sext i8 %42 to i64, !dbg !9037
  %48 = call i64 @klee_get_valuel(i64 %47) nounwind, !dbg !9037
  %49 = trunc i64 %48 to i8, !dbg !9037
  %50 = icmp eq i8 %49, %42, !dbg !9038
  %51 = zext i1 %50 to i64, !dbg !9038
  call void @klee_assume(i64 %51) nounwind, !dbg !9038
  store i8 %49, i8* %sc.0.i, align 1, !dbg !9039
  %52 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9039
  %53 = icmp eq i8 %49, 0, !dbg !9040
  br i1 %53, label %__concretize_string.exit, label %bb13.i, !dbg !9040

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %52, %bb12.i ], [ %46, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %54 = add i32 %41, 1, !dbg !9032
  br label %bb.i32, !dbg !9032

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %55 = sext i32 %fd_addr.0 to i64, !dbg !9028
  %56 = call i64 (i64, ...)* @syscall(i64 257, i64 %55, i8* %path, i64 %35, i32 %mode.0) nounwind, !dbg !9028
  %57 = trunc i64 %56 to i32, !dbg !9028
  %cond31 = icmp eq i32 %57, -1
  br i1 %cond31, label %bb20, label %bb23

bb20:                                             ; preds = %__concretize_string.exit
  %58 = call i32* @__errno_location() nounwind readnone, !dbg !9041
  %59 = call i32 @klee_get_errno() nounwind, !dbg !9041
  store i32 %59, i32* %58, align 4, !dbg !9041
  br label %bb29

bb23:                                             ; preds = %__concretize_string.exit
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 0, !dbg !9042
  store i32 %57, i32* %60, align 8, !dbg !9042
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %18, i32 1, !dbg !9043
  store i32 1, i32* %61, align 4, !dbg !9043
  %62 = and i32 %flags, 3, !dbg !9044
  switch i32 %62, label %bb27 [
    i32 0, label %bb24
    i32 1, label %bb26
  ]

bb24:                                             ; preds = %bb23
  store i32 5, i32* %61, align 4, !dbg !9045
  br label %bb29, !dbg !9045

bb26:                                             ; preds = %bb23
  store i32 9, i32* %61, align 4, !dbg !9046
  br label %bb29, !dbg !9046

bb27:                                             ; preds = %bb23
  store i32 13, i32* %61, align 4, !dbg !9047
  br label %bb29, !dbg !9047

bb29:                                             ; preds = %bb27, %bb26, %bb24, %bb20, %bb9, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb9 ], [ -1, %bb20 ], [ %fd_idx.0, %bb27 ], [ %fd_idx.0, %bb26 ], [ %fd_idx.0, %bb24 ]
  ret i32 %.0, !dbg !9016
}

define i32 @symlink(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !9048
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9050
  br i1 %1, label %bb1, label %bb, !dbg !9050

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31339, i64 0, i64 0)) nounwind, !dbg !9051
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9052
  store i32 2, i32* %2, align 4, !dbg !9052
  br label %bb6, !dbg !9053

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !9054
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !9056
  br i1 %4, label %bb3, label %bb2, !dbg !9056

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str31339, i64 0, i64 0)) nounwind, !dbg !9057
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !9058
  store i32 2, i32* %5, align 4, !dbg !9058
  br label %bb6, !dbg !9059

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !9060
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !9060
  %8 = inttoptr i64 %7 to i8*, !dbg !9060
  %9 = icmp eq i8* %8, %newpath, !dbg !9063
  %10 = zext i1 %9 to i64, !dbg !9063
  tail call void @klee_assume(i64 %10) nounwind, !dbg !9063
  br label %bb.i, !dbg !9064

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !9065
  %13 = load i8* @UseConcretePath, align 1, !dbg !9066
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !9066
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9066

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !9066
  %15 = icmp eq i32 %14, 0, !dbg !9066
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !9066

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9067
  br label %__concretize_string.exit, !dbg !9067

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9068
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9068
  br label %bb13.i, !dbg !9068

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !9069
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9069
  %19 = trunc i64 %18 to i8, !dbg !9069
  %20 = icmp eq i8 %19, %12, !dbg !9070
  %21 = zext i1 %20 to i64, !dbg !9070
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9070
  store i8 %19, i8* %sc.0.i, align 1, !dbg !9071
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9071
  %23 = icmp eq i8 %19, 0, !dbg !9072
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !9072

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !9064
  br label %bb.i, !dbg !9064

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !9060
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9060
  %27 = inttoptr i64 %26 to i8*, !dbg !9060
  %28 = icmp eq i8* %27, %oldpath, !dbg !9063
  %29 = zext i1 %28 to i64, !dbg !9063
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9063
  br label %bb.i10, !dbg !9064

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !9065
  %32 = load i8* @UseConcretePath, align 1, !dbg !9066
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !9066
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !9066

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !9066
  %34 = icmp eq i32 %33, 0, !dbg !9066
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !9066

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !9067
  br label %__concretize_string.exit19, !dbg !9067

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !9068
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9068
  br label %bb13.i18, !dbg !9068

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !9069
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9069
  %38 = trunc i64 %37 to i8, !dbg !9069
  %39 = icmp eq i8 %38, %31, !dbg !9070
  %40 = zext i1 %39 to i64, !dbg !9070
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9070
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !9071
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9071
  %42 = icmp eq i8 %38, 0, !dbg !9072
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !9072

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !9064
  br label %bb.i10, !dbg !9064

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 88, i8* %oldpath, i8* %newpath) nounwind, !dbg !9062
  %45 = trunc i64 %44 to i32, !dbg !9062
  %46 = icmp eq i32 %45, -1, !dbg !9073
  br i1 %46, label %bb4, label %bb6, !dbg !9073

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !9074
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !9074
  store i32 %48, i32* %47, align 4, !dbg !9074
  br label %bb6, !dbg !9074

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !9053
}

define i32 @link(i8* %oldpath, i8* %newpath) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %oldpath, i32 0, i8 zeroext 1) nounwind, !dbg !9075
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9077
  br i1 %1, label %bb1, label %bb, !dbg !9077

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32340, i64 0, i64 0)) nounwind, !dbg !9078
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9079
  store i32 2, i32* %2, align 4, !dbg !9079
  br label %bb6, !dbg !9080

bb1:                                              ; preds = %entry
  %3 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %newpath, i32 0, i8 zeroext 1) nounwind, !dbg !9081
  %4 = icmp eq %struct.exe_disk_file_t* %3, null, !dbg !9083
  br i1 %4, label %bb3, label %bb2, !dbg !9083

bb2:                                              ; preds = %bb1
  tail call void @klee_warning(i8* getelementptr inbounds ([39 x i8]* @.str32340, i64 0, i64 0)) nounwind, !dbg !9084
  %5 = tail call i32* @__errno_location() nounwind readnone, !dbg !9085
  store i32 2, i32* %5, align 4, !dbg !9085
  br label %bb6, !dbg !9086

bb3:                                              ; preds = %bb1
  %6 = ptrtoint i8* %newpath to i64, !dbg !9087
  %7 = tail call i64 @klee_get_valuel(i64 %6) nounwind, !dbg !9087
  %8 = inttoptr i64 %7 to i8*, !dbg !9087
  %9 = icmp eq i8* %8, %newpath, !dbg !9090
  %10 = zext i1 %9 to i64, !dbg !9090
  tail call void @klee_assume(i64 %10) nounwind, !dbg !9090
  br label %bb.i, !dbg !9091

bb.i:                                             ; preds = %bb13.i, %bb3
  %sc.0.i = phi i8* [ %8, %bb3 ], [ %sc.1.i, %bb13.i ]
  %11 = phi i32 [ 0, %bb3 ], [ %24, %bb13.i ]
  %12 = load i8* %sc.0.i, align 1, !dbg !9092
  %13 = load i8* @UseConcretePath, align 1, !dbg !9093
  %toBool3not.i = icmp eq i8 %13, 0, !dbg !9093
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9093

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %11, -1
  %14 = and i32 %tmp.i, %11, !dbg !9093
  %15 = icmp eq i32 %14, 0, !dbg !9093
  br i1 %15, label %bb8.i, label %bb12.i, !dbg !9093

bb8.i:                                            ; preds = %bb7.i
  switch i8 %12, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9094
  br label %__concretize_string.exit, !dbg !9094

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9095
  %16 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9095
  br label %bb13.i, !dbg !9095

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %17 = sext i8 %12 to i64, !dbg !9096
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9096
  %19 = trunc i64 %18 to i8, !dbg !9096
  %20 = icmp eq i8 %19, %12, !dbg !9097
  %21 = zext i1 %20 to i64, !dbg !9097
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9097
  store i8 %19, i8* %sc.0.i, align 1, !dbg !9098
  %22 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9098
  %23 = icmp eq i8 %19, 0, !dbg !9099
  br i1 %23, label %__concretize_string.exit, label %bb13.i, !dbg !9099

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %22, %bb12.i ], [ %16, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %24 = add i32 %11, 1, !dbg !9091
  br label %bb.i, !dbg !9091

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %25 = ptrtoint i8* %oldpath to i64, !dbg !9087
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9087
  %27 = inttoptr i64 %26 to i8*, !dbg !9087
  %28 = icmp eq i8* %27, %oldpath, !dbg !9090
  %29 = zext i1 %28 to i64, !dbg !9090
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9090
  br label %bb.i10, !dbg !9091

bb.i10:                                           ; preds = %bb13.i18, %__concretize_string.exit
  %sc.0.i8 = phi i8* [ %27, %__concretize_string.exit ], [ %sc.1.i17, %bb13.i18 ]
  %30 = phi i32 [ 0, %__concretize_string.exit ], [ %43, %bb13.i18 ]
  %31 = load i8* %sc.0.i8, align 1, !dbg !9092
  %32 = load i8* @UseConcretePath, align 1, !dbg !9093
  %toBool3not.i9 = icmp eq i8 %32, 0, !dbg !9093
  br i1 %toBool3not.i9, label %bb7.i12, label %bb12.i16, !dbg !9093

bb7.i12:                                          ; preds = %bb.i10
  %tmp.i11 = add i32 %30, -1
  %33 = and i32 %tmp.i11, %30, !dbg !9093
  %34 = icmp eq i32 %33, 0, !dbg !9093
  br i1 %34, label %bb8.i13, label %bb12.i16, !dbg !9093

bb8.i13:                                          ; preds = %bb7.i12
  switch i8 %31, label %bb13.i18 [
    i8 0, label %bb9.i14
    i8 47, label %bb11.i15
  ]

bb9.i14:                                          ; preds = %bb8.i13
  store i8 0, i8* %sc.0.i8, align 1, !dbg !9094
  br label %__concretize_string.exit19, !dbg !9094

bb11.i15:                                         ; preds = %bb8.i13
  store i8 47, i8* %sc.0.i8, align 1, !dbg !9095
  %35 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9095
  br label %bb13.i18, !dbg !9095

bb12.i16:                                         ; preds = %bb7.i12, %bb.i10
  %36 = sext i8 %31 to i64, !dbg !9096
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9096
  %38 = trunc i64 %37 to i8, !dbg !9096
  %39 = icmp eq i8 %38, %31, !dbg !9097
  %40 = zext i1 %39 to i64, !dbg !9097
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9097
  store i8 %38, i8* %sc.0.i8, align 1, !dbg !9098
  %41 = getelementptr inbounds i8* %sc.0.i8, i64 1, !dbg !9098
  %42 = icmp eq i8 %38, 0, !dbg !9099
  br i1 %42, label %__concretize_string.exit19, label %bb13.i18, !dbg !9099

bb13.i18:                                         ; preds = %bb12.i16, %bb11.i15, %bb8.i13
  %sc.1.i17 = phi i8* [ %41, %bb12.i16 ], [ %35, %bb11.i15 ], [ %sc.0.i8, %bb8.i13 ]
  %43 = add i32 %30, 1, !dbg !9091
  br label %bb.i10, !dbg !9091

__concretize_string.exit19:                       ; preds = %bb12.i16, %bb9.i14
  %44 = tail call i64 (i64, ...)* @syscall(i64 86, i8* %oldpath, i8* %newpath) nounwind, !dbg !9089
  %45 = trunc i64 %44 to i32, !dbg !9089
  %46 = icmp eq i32 %45, -1, !dbg !9100
  br i1 %46, label %bb4, label %bb6, !dbg !9100

bb4:                                              ; preds = %__concretize_string.exit19
  %47 = tail call i32* @__errno_location() nounwind readnone, !dbg !9101
  %48 = tail call i32 @klee_get_errno() nounwind, !dbg !9101
  store i32 %48, i32* %47, align 4, !dbg !9101
  br label %bb6, !dbg !9101

bb6:                                              ; preds = %bb4, %__concretize_string.exit19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %45, %__concretize_string.exit19 ]
  ret i32 %.0, !dbg !9080
}

define i32 @futimesat(i32 %fd, i8* %path, %struct.timespec* %times) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9102
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9104
  br i1 %1, label %bb1, label %bb, !dbg !9104

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str33341, i64 0, i64 0)) nounwind, !dbg !9105
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9106
  store i32 2, i32* %2, align 4, !dbg !9106
  br label %bb12, !dbg !9107

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9108
  br i1 %3, label %bb.i, label %bb6, !dbg !9108

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9110
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9111
  %6 = load i32* %5, align 4, !dbg !9111
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9111
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9111

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9110
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9112
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9112
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9112
  br i1 %11, label %bb5, label %bb3, !dbg !9112

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([55 x i8]* @.str34342, i64 0, i64 0)) nounwind, !dbg !9113
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9114
  store i32 2, i32* %12, align 4, !dbg !9114
  br label %bb12, !dbg !9115

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9116
  %14 = load i32* %13, align 8, !dbg !9116
  br label %bb6, !dbg !9116

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = icmp eq i8* %path, null, !dbg !9117
  br i1 %15, label %bb9, label %bb7, !dbg !9117

bb7:                                              ; preds = %bb6
  %16 = ptrtoint i8* %path to i64, !dbg !9118
  %17 = tail call i64 @klee_get_valuel(i64 %16) nounwind, !dbg !9118
  %18 = inttoptr i64 %17 to i8*, !dbg !9118
  %19 = icmp eq i8* %18, %path, !dbg !9120
  %20 = zext i1 %19 to i64, !dbg !9120
  tail call void @klee_assume(i64 %20) nounwind, !dbg !9120
  br label %bb.i14, !dbg !9121

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %18, %bb7 ], [ %sc.1.i, %bb13.i ]
  %21 = phi i32 [ 0, %bb7 ], [ %34, %bb13.i ]
  %22 = load i8* %sc.0.i, align 1, !dbg !9122
  %23 = load i8* @UseConcretePath, align 1, !dbg !9123
  %toBool3not.i = icmp eq i8 %23, 0, !dbg !9123
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9123

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %21, -1
  %24 = and i32 %tmp.i, %21, !dbg !9123
  %25 = icmp eq i32 %24, 0, !dbg !9123
  br i1 %25, label %bb8.i, label %bb12.i, !dbg !9123

bb8.i:                                            ; preds = %bb7.i
  switch i8 %22, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9124
  br label %bb9, !dbg !9124

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9125
  %26 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9125
  br label %bb13.i, !dbg !9125

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %27 = sext i8 %22 to i64, !dbg !9126
  %28 = tail call i64 @klee_get_valuel(i64 %27) nounwind, !dbg !9126
  %29 = trunc i64 %28 to i8, !dbg !9126
  %30 = icmp eq i8 %29, %22, !dbg !9127
  %31 = zext i1 %30 to i64, !dbg !9127
  tail call void @klee_assume(i64 %31) nounwind, !dbg !9127
  store i8 %29, i8* %sc.0.i, align 1, !dbg !9128
  %32 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9128
  %33 = icmp eq i8 %29, 0, !dbg !9129
  br i1 %33, label %bb9, label %bb13.i, !dbg !9129

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %32, %bb12.i ], [ %26, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %34 = add i32 %21, 1, !dbg !9121
  br label %bb.i14, !dbg !9121

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.64.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %35 = sext i32 %fd_addr.0 to i64, !dbg !9117
  %36 = tail call i64 (i64, ...)* @syscall(i64 261, i64 %35, i8* %iftmp.64.0, %struct.timespec* %times) nounwind, !dbg !9117
  %37 = trunc i64 %36 to i32, !dbg !9117
  %38 = icmp eq i32 %37, -1, !dbg !9130
  br i1 %38, label %bb10, label %bb12, !dbg !9130

bb10:                                             ; preds = %bb9
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !9131
  %40 = tail call i32 @klee_get_errno() nounwind, !dbg !9131
  store i32 %40, i32* %39, align 4, !dbg !9131
  br label %bb12, !dbg !9131

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %37, %bb9 ]
  ret i32 %.0, !dbg !9107
}

define i32 @unlinkat(i32 %fd, i8* %path, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9132
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9134
  br i1 %1, label %bb1, label %bb, !dbg !9134

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str35343, i64 0, i64 0)) nounwind, !dbg !9135
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9136
  store i32 2, i32* %2, align 4, !dbg !9136
  br label %bb12, !dbg !9137

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9138
  br i1 %3, label %bb.i, label %bb6, !dbg !9138

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9140
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9141
  %6 = load i32* %5, align 4, !dbg !9141
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9141
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9141

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9140
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9142
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9142
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9142
  br i1 %11, label %bb5, label %bb3, !dbg !9142

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([54 x i8]* @.str36344, i64 0, i64 0)) nounwind, !dbg !9143
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9144
  store i32 2, i32* %12, align 4, !dbg !9144
  br label %bb12, !dbg !9145

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9146
  %14 = load i32* %13, align 8, !dbg !9146
  br label %bb6, !dbg !9146

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !9147
  %16 = icmp eq i8* %path, null, !dbg !9147
  br i1 %16, label %bb9, label %bb7, !dbg !9147

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !9148
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9148
  %19 = inttoptr i64 %18 to i8*, !dbg !9148
  %20 = icmp eq i8* %19, %path, !dbg !9150
  %21 = zext i1 %20 to i64, !dbg !9150
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9150
  br label %bb.i14, !dbg !9151

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !9152
  %24 = load i8* @UseConcretePath, align 1, !dbg !9153
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !9153
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9153

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !9153
  %26 = icmp eq i32 %25, 0, !dbg !9153
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !9153

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9154
  br label %bb9, !dbg !9154

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9155
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9155
  br label %bb13.i, !dbg !9155

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !9156
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !9156
  %30 = trunc i64 %29 to i8, !dbg !9156
  %31 = icmp eq i8 %30, %23, !dbg !9157
  %32 = zext i1 %31 to i64, !dbg !9157
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9157
  store i8 %30, i8* %sc.0.i, align 1, !dbg !9158
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9158
  %34 = icmp eq i8 %30, 0, !dbg !9159
  br i1 %34, label %bb9, label %bb13.i, !dbg !9159

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !9151
  br label %bb.i14, !dbg !9151

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.63.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !9147
  %37 = tail call i64 (i64, ...)* @syscall(i64 263, i64 %36, i8* %iftmp.63.0, i64 %15) nounwind, !dbg !9147
  %38 = trunc i64 %37 to i32, !dbg !9147
  %39 = icmp eq i32 %38, -1, !dbg !9160
  br i1 %39, label %bb10, label %bb12, !dbg !9160

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !9161
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !9161
  store i32 %41, i32* %40, align 4, !dbg !9161
  br label %bb12, !dbg !9161

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !9137
}

define i32 @fstatat(i32 %fd, i8* %path, %struct.stat* %buf, i32 %flags) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9162
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9164
  br i1 %1, label %bb1, label %bb, !dbg !9164

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([42 x i8]* @.str37345, i64 0, i64 0)) nounwind, !dbg !9165
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9166
  store i32 2, i32* %2, align 4, !dbg !9166
  br label %bb12, !dbg !9167

bb1:                                              ; preds = %entry
  %3 = icmp ult i32 %fd, 32, !dbg !9168
  br i1 %3, label %bb.i, label %bb6, !dbg !9168

bb.i:                                             ; preds = %bb1
  %4 = sext i32 %fd to i64, !dbg !9170
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 1, !dbg !9171
  %6 = load i32* %5, align 4, !dbg !9171
  %7 = and i32 %6, 1
  %toBool.i = icmp eq i32 %7, 0, !dbg !9171
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9171

__get_file.exit:                                  ; preds = %bb.i
  %8 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, !dbg !9170
  %cond = icmp eq %struct.exe_file_t* %8, null
  br i1 %cond, label %bb6, label %bb2

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 3, !dbg !9172
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9172
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9172
  br i1 %11, label %bb5, label %bb3, !dbg !9172

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([53 x i8]* @.str38346, i64 0, i64 0)) nounwind, !dbg !9173
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9174
  store i32 2, i32* %12, align 4, !dbg !9174
  br label %bb12, !dbg !9175

bb5:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %4, i32 0, !dbg !9176
  %14 = load i32* %13, align 8, !dbg !9176
  br label %bb6, !dbg !9176

bb6:                                              ; preds = %bb5, %__get_file.exit, %bb.i, %bb1
  %fd_addr.0 = phi i32 [ %14, %bb5 ], [ %fd, %__get_file.exit ], [ %fd, %bb.i ], [ %fd, %bb1 ]
  %15 = sext i32 %flags to i64, !dbg !9177
  %16 = icmp eq i8* %path, null, !dbg !9177
  br i1 %16, label %bb9, label %bb7, !dbg !9177

bb7:                                              ; preds = %bb6
  %17 = ptrtoint i8* %path to i64, !dbg !9178
  %18 = tail call i64 @klee_get_valuel(i64 %17) nounwind, !dbg !9178
  %19 = inttoptr i64 %18 to i8*, !dbg !9178
  %20 = icmp eq i8* %19, %path, !dbg !9180
  %21 = zext i1 %20 to i64, !dbg !9180
  tail call void @klee_assume(i64 %21) nounwind, !dbg !9180
  br label %bb.i14, !dbg !9181

bb.i14:                                           ; preds = %bb13.i, %bb7
  %sc.0.i = phi i8* [ %19, %bb7 ], [ %sc.1.i, %bb13.i ]
  %22 = phi i32 [ 0, %bb7 ], [ %35, %bb13.i ]
  %23 = load i8* %sc.0.i, align 1, !dbg !9182
  %24 = load i8* @UseConcretePath, align 1, !dbg !9183
  %toBool3not.i = icmp eq i8 %24, 0, !dbg !9183
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9183

bb7.i:                                            ; preds = %bb.i14
  %tmp.i = add i32 %22, -1
  %25 = and i32 %tmp.i, %22, !dbg !9183
  %26 = icmp eq i32 %25, 0, !dbg !9183
  br i1 %26, label %bb8.i, label %bb12.i, !dbg !9183

bb8.i:                                            ; preds = %bb7.i
  switch i8 %23, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9184
  br label %bb9, !dbg !9184

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9185
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9185
  br label %bb13.i, !dbg !9185

bb12.i:                                           ; preds = %bb7.i, %bb.i14
  %28 = sext i8 %23 to i64, !dbg !9186
  %29 = tail call i64 @klee_get_valuel(i64 %28) nounwind, !dbg !9186
  %30 = trunc i64 %29 to i8, !dbg !9186
  %31 = icmp eq i8 %30, %23, !dbg !9187
  %32 = zext i1 %31 to i64, !dbg !9187
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9187
  store i8 %30, i8* %sc.0.i, align 1, !dbg !9188
  %33 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9188
  %34 = icmp eq i8 %30, 0, !dbg !9189
  br i1 %34, label %bb9, label %bb13.i, !dbg !9189

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %33, %bb12.i ], [ %27, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %35 = add i32 %22, 1, !dbg !9181
  br label %bb.i14, !dbg !9181

bb9:                                              ; preds = %bb12.i, %bb9.i, %bb6
  %iftmp.62.0 = phi i8* [ null, %bb6 ], [ %path, %bb9.i ], [ %path, %bb12.i ]
  %36 = sext i32 %fd_addr.0 to i64, !dbg !9177
  %37 = tail call i64 (i64, ...)* @syscall(i64 262, i64 %36, i8* %iftmp.62.0, %struct.stat* %buf, i64 %15) nounwind, !dbg !9177
  %38 = trunc i64 %37 to i32, !dbg !9177
  %39 = icmp eq i32 %38, -1, !dbg !9190
  br i1 %39, label %bb10, label %bb12, !dbg !9190

bb10:                                             ; preds = %bb9
  %40 = tail call i32* @__errno_location() nounwind readnone, !dbg !9191
  %41 = tail call i32 @klee_get_errno() nounwind, !dbg !9191
  store i32 %41, i32* %40, align 4, !dbg !9191
  br label %bb12, !dbg !9191

bb12:                                             ; preds = %bb10, %bb9, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb10 ], [ %38, %bb9 ]
  ret i32 %.0, !dbg !9167
}

define i32 @lchown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9192
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9194
  br i1 %1, label %bb1, label %bb, !dbg !9194

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4312, i64 0, i64 0)) nounwind, !dbg !9195
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9197
  store i32 1, i32* %2, align 4, !dbg !9197
  br label %bb4, !dbg !9196

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9198
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9198
  %5 = inttoptr i64 %4 to i8*, !dbg !9198
  %6 = icmp eq i8* %5, %path, !dbg !9201
  %7 = zext i1 %6 to i64, !dbg !9201
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9201
  br label %bb.i, !dbg !9202

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9203
  %10 = load i8* @UseConcretePath, align 1, !dbg !9204
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9204
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9204

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9204
  %12 = icmp eq i32 %11, 0, !dbg !9204
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9204

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9205
  br label %__concretize_string.exit, !dbg !9205

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9206
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9206
  br label %bb13.i, !dbg !9206

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9207
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9207
  %16 = trunc i64 %15 to i8, !dbg !9207
  %17 = icmp eq i8 %16, %9, !dbg !9208
  %18 = zext i1 %17 to i64, !dbg !9208
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9208
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9209
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9209
  %20 = icmp eq i8 %16, 0, !dbg !9210
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9210

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9202
  br label %bb.i, !dbg !9202

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 92, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !9200
  %23 = trunc i64 %22 to i32, !dbg !9200
  %24 = icmp eq i32 %23, -1, !dbg !9211
  br i1 %24, label %bb2, label %bb4, !dbg !9211

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9212
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9212
  store i32 %26, i32* %25, align 4, !dbg !9212
  br label %bb4, !dbg !9212

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9196
}

define i32 @chown(i8* %path, i32 %owner, i32 %group) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9213
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9215
  br i1 %1, label %bb1, label %bb, !dbg !9215

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([32 x i8]* @.str4312, i64 0, i64 0)) nounwind, !dbg !9216
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9218
  store i32 1, i32* %2, align 4, !dbg !9218
  br label %bb4, !dbg !9217

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9219
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9219
  %5 = inttoptr i64 %4 to i8*, !dbg !9219
  %6 = icmp eq i8* %5, %path, !dbg !9222
  %7 = zext i1 %6 to i64, !dbg !9222
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9222
  br label %bb.i, !dbg !9223

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9224
  %10 = load i8* @UseConcretePath, align 1, !dbg !9225
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9225
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9225

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9225
  %12 = icmp eq i32 %11, 0, !dbg !9225
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9225

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9226
  br label %__concretize_string.exit, !dbg !9226

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9227
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9227
  br label %bb13.i, !dbg !9227

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9228
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9228
  %16 = trunc i64 %15 to i8, !dbg !9228
  %17 = icmp eq i8 %16, %9, !dbg !9229
  %18 = zext i1 %17 to i64, !dbg !9229
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9229
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9230
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9230
  %20 = icmp eq i8 %16, 0, !dbg !9231
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9231

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9223
  br label %bb.i, !dbg !9223

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 94, i8* %path, i32 %owner, i32 %group) nounwind, !dbg !9221
  %23 = trunc i64 %22 to i32, !dbg !9221
  %24 = icmp eq i32 %23, -1, !dbg !9232
  br i1 %24, label %bb2, label %bb4, !dbg !9232

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9233
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9233
  store i32 %26, i32* %25, align 4, !dbg !9233
  br label %bb4, !dbg !9233

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9217
}

define i32 @chdir(i8* %path) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9234
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9236
  br i1 %1, label %bb1, label %bb, !dbg !9236

bb:                                               ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([33 x i8]* @.str5313, i64 0, i64 0)) nounwind, !dbg !9237
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9238
  store i32 2, i32* %2, align 4, !dbg !9238
  br label %bb4, !dbg !9239

bb1:                                              ; preds = %entry
  %3 = ptrtoint i8* %path to i64, !dbg !9240
  %4 = tail call i64 @klee_get_valuel(i64 %3) nounwind, !dbg !9240
  %5 = inttoptr i64 %4 to i8*, !dbg !9240
  %6 = icmp eq i8* %5, %path, !dbg !9243
  %7 = zext i1 %6 to i64, !dbg !9243
  tail call void @klee_assume(i64 %7) nounwind, !dbg !9243
  br label %bb.i, !dbg !9244

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %5, %bb1 ], [ %sc.1.i, %bb13.i ]
  %8 = phi i32 [ 0, %bb1 ], [ %21, %bb13.i ]
  %9 = load i8* %sc.0.i, align 1, !dbg !9245
  %10 = load i8* @UseConcretePath, align 1, !dbg !9246
  %toBool3not.i = icmp eq i8 %10, 0, !dbg !9246
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9246

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %8, -1
  %11 = and i32 %tmp.i, %8, !dbg !9246
  %12 = icmp eq i32 %11, 0, !dbg !9246
  br i1 %12, label %bb8.i, label %bb12.i, !dbg !9246

bb8.i:                                            ; preds = %bb7.i
  switch i8 %9, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9247
  br label %__concretize_string.exit, !dbg !9247

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9248
  %13 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9248
  br label %bb13.i, !dbg !9248

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %14 = sext i8 %9 to i64, !dbg !9249
  %15 = tail call i64 @klee_get_valuel(i64 %14) nounwind, !dbg !9249
  %16 = trunc i64 %15 to i8, !dbg !9249
  %17 = icmp eq i8 %16, %9, !dbg !9250
  %18 = zext i1 %17 to i64, !dbg !9250
  tail call void @klee_assume(i64 %18) nounwind, !dbg !9250
  store i8 %16, i8* %sc.0.i, align 1, !dbg !9251
  %19 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9251
  %20 = icmp eq i8 %16, 0, !dbg !9252
  br i1 %20, label %__concretize_string.exit, label %bb13.i, !dbg !9252

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %19, %bb12.i ], [ %13, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %21 = add i32 %8, 1, !dbg !9244
  br label %bb.i, !dbg !9244

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %22 = tail call i64 (i64, ...)* @syscall(i64 80, i8* %path) nounwind, !dbg !9242
  %23 = trunc i64 %22 to i32, !dbg !9242
  %24 = icmp eq i32 %23, -1, !dbg !9253
  br i1 %24, label %bb2, label %bb4, !dbg !9253

bb2:                                              ; preds = %__concretize_string.exit
  %25 = tail call i32* @__errno_location() nounwind readnone, !dbg !9254
  %26 = tail call i32 @klee_get_errno() nounwind, !dbg !9254
  store i32 %26, i32* %25, align 4, !dbg !9254
  br label %bb4, !dbg !9254

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ %23, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9239
}

define i32 @euidaccess(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9255
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9257
  br i1 %1, label %bb1, label %bb4, !dbg !9257

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !9258
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !9258
  %4 = inttoptr i64 %3 to i8*, !dbg !9258
  %5 = icmp eq i8* %4, %pathname, !dbg !9261
  %6 = zext i1 %5 to i64, !dbg !9261
  tail call void @klee_assume(i64 %6) nounwind, !dbg !9261
  br label %bb.i, !dbg !9262

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !9263
  %9 = load i8* @UseConcretePath, align 1, !dbg !9264
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !9264
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9264

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !9264
  %11 = icmp eq i32 %10, 0, !dbg !9264
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !9264

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9265
  br label %__concretize_string.exit, !dbg !9265

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9266
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9266
  br label %bb13.i, !dbg !9266

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !9267
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !9267
  %15 = trunc i64 %14 to i8, !dbg !9267
  %16 = icmp eq i8 %15, %8, !dbg !9268
  %17 = zext i1 %16 to i64, !dbg !9268
  tail call void @klee_assume(i64 %17) nounwind, !dbg !9268
  store i8 %15, i8* %sc.0.i, align 1, !dbg !9269
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9269
  %19 = icmp eq i8 %15, 0, !dbg !9270
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !9270

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !9262
  br label %bb.i, !dbg !9262

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !9260
  %22 = trunc i64 %21 to i32, !dbg !9260
  %23 = icmp eq i32 %22, -1, !dbg !9271
  br i1 %23, label %bb2, label %bb4, !dbg !9271

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !9272
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !9272
  store i32 %25, i32* %24, align 4, !dbg !9272
  br label %bb4, !dbg !9272

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9273
}

define i32 @access(i8* %pathname, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9274
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9276
  br i1 %1, label %bb1, label %bb4, !dbg !9276

bb1:                                              ; preds = %entry
  %2 = ptrtoint i8* %pathname to i64, !dbg !9277
  %3 = tail call i64 @klee_get_valuel(i64 %2) nounwind, !dbg !9277
  %4 = inttoptr i64 %3 to i8*, !dbg !9277
  %5 = icmp eq i8* %4, %pathname, !dbg !9280
  %6 = zext i1 %5 to i64, !dbg !9280
  tail call void @klee_assume(i64 %6) nounwind, !dbg !9280
  br label %bb.i, !dbg !9281

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %4, %bb1 ], [ %sc.1.i, %bb13.i ]
  %7 = phi i32 [ 0, %bb1 ], [ %20, %bb13.i ]
  %8 = load i8* %sc.0.i, align 1, !dbg !9282
  %9 = load i8* @UseConcretePath, align 1, !dbg !9283
  %toBool3not.i = icmp eq i8 %9, 0, !dbg !9283
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9283

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %7, -1
  %10 = and i32 %tmp.i, %7, !dbg !9283
  %11 = icmp eq i32 %10, 0, !dbg !9283
  br i1 %11, label %bb8.i, label %bb12.i, !dbg !9283

bb8.i:                                            ; preds = %bb7.i
  switch i8 %8, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9284
  br label %__concretize_string.exit, !dbg !9284

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9285
  %12 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9285
  br label %bb13.i, !dbg !9285

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %13 = sext i8 %8 to i64, !dbg !9286
  %14 = tail call i64 @klee_get_valuel(i64 %13) nounwind, !dbg !9286
  %15 = trunc i64 %14 to i8, !dbg !9286
  %16 = icmp eq i8 %15, %8, !dbg !9287
  %17 = zext i1 %16 to i64, !dbg !9287
  tail call void @klee_assume(i64 %17) nounwind, !dbg !9287
  store i8 %15, i8* %sc.0.i, align 1, !dbg !9288
  %18 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9288
  %19 = icmp eq i8 %15, 0, !dbg !9289
  br i1 %19, label %__concretize_string.exit, label %bb13.i, !dbg !9289

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %18, %bb12.i ], [ %12, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %20 = add i32 %7, 1, !dbg !9281
  br label %bb.i, !dbg !9281

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %21 = tail call i64 (i64, ...)* @syscall(i64 21, i8* %pathname, i32 %mode) nounwind, !dbg !9279
  %22 = trunc i64 %21 to i32, !dbg !9279
  %23 = icmp eq i32 %22, -1, !dbg !9290
  br i1 %23, label %bb2, label %bb4, !dbg !9290

bb2:                                              ; preds = %__concretize_string.exit
  %24 = tail call i32* @__errno_location() nounwind readnone, !dbg !9291
  %25 = tail call i32 @klee_get_errno() nounwind, !dbg !9291
  store i32 %25, i32* %24, align 4, !dbg !9291
  br label %bb4, !dbg !9291

bb4:                                              ; preds = %bb2, %__concretize_string.exit, %entry
  %.0 = phi i32 [ 0, %entry ], [ -1, %bb2 ], [ %22, %__concretize_string.exit ]
  ret i32 %.0, !dbg !9292
}

define i8* @getcwd(i8* %buf, i64 %size) nounwind {
entry:
  %0 = load i32* @n_calls.7064, align 4, !dbg !9293
  %1 = add nsw i32 %0, 1, !dbg !9293
  store i32 %1, i32* @n_calls.7064, align 4, !dbg !9293
  %2 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9294
  %3 = icmp eq i32 %2, 0, !dbg !9294
  br i1 %3, label %bb2, label %bb, !dbg !9294

bb:                                               ; preds = %entry
  %4 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 8, !dbg !9294
  %5 = load i32* %4, align 4, !dbg !9294
  %6 = icmp eq i32 %5, %1, !dbg !9294
  br i1 %6, label %bb1, label %bb2, !dbg !9294

bb1:                                              ; preds = %bb
  %7 = add i32 %2, -1, !dbg !9295
  store i32 %7, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9295
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9296
  store i32 34, i32* %8, align 4, !dbg !9296
  br label %bb9, !dbg !9297

bb2:                                              ; preds = %bb, %entry
  %9 = icmp eq i8* %buf, null, !dbg !9298
  br i1 %9, label %bb3, label %bb6, !dbg !9298

bb3:                                              ; preds = %bb2
  %10 = icmp eq i64 %size, 0, !dbg !9299
  %size_addr.0 = select i1 %10, i64 1024, i64 %size
  %11 = tail call noalias i8* @malloc(i64 %size_addr.0) nounwind, !dbg !9300
  br label %bb6, !dbg !9300

bb6:                                              ; preds = %bb3, %bb2
  %size_addr.1 = phi i64 [ %size_addr.0, %bb3 ], [ %size, %bb2 ]
  %buf_addr.0 = phi i8* [ %11, %bb3 ], [ %buf, %bb2 ]
  %12 = ptrtoint i8* %buf_addr.0 to i64, !dbg !9301
  %13 = tail call i64 @klee_get_valuel(i64 %12) nounwind, !dbg !9301
  %14 = inttoptr i64 %13 to i8*, !dbg !9301
  %15 = icmp eq i8* %14, %buf_addr.0, !dbg !9303
  %16 = zext i1 %15 to i64, !dbg !9303
  tail call void @klee_assume(i64 %16) nounwind, !dbg !9303
  %17 = tail call i64 @klee_get_valuel(i64 %size_addr.1) nounwind, !dbg !9304
  %18 = icmp eq i64 %17, %size_addr.1, !dbg !9306
  %19 = zext i1 %18 to i64, !dbg !9306
  tail call void @klee_assume(i64 %19) nounwind, !dbg !9306
  tail call void @klee_check_memory_access(i8* %14, i64 %17) nounwind, !dbg !9307
  %20 = tail call i64 (i64, ...)* @syscall(i64 79, i8* %14, i64 %17) nounwind, !dbg !9308
  %21 = trunc i64 %20 to i32, !dbg !9308
  %22 = icmp eq i32 %21, -1, !dbg !9309
  br i1 %22, label %bb7, label %bb9, !dbg !9309

bb7:                                              ; preds = %bb6
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9310
  %24 = tail call i32 @klee_get_errno() nounwind, !dbg !9310
  store i32 %24, i32* %23, align 4, !dbg !9310
  br label %bb9, !dbg !9311

bb9:                                              ; preds = %bb7, %bb6, %bb1
  %.0 = phi i8* [ null, %bb1 ], [ null, %bb7 ], [ %14, %bb6 ]
  ret i8* %.0, !dbg !9297
}

define i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9312
  br i1 %0, label %bb.i, label %__get_file.exit.thread, !dbg !9312

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9314
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9315
  %3 = load i32* %2, align 4, !dbg !9315
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9315
  br i1 %toBool.i, label %__get_file.exit.thread, label %__get_file.exit, !dbg !9315

__get_file.exit.thread:                           ; preds = %bb.i, %entry
  %5 = load i32* @n_calls.6554, align 4, !dbg !9316
  %6 = add nsw i32 %5, 1, !dbg !9316
  store i32 %6, i32* @n_calls.6554, align 4, !dbg !9316
  br label %bb

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9314
  %8 = load i32* @n_calls.6554, align 4, !dbg !9316
  %9 = add nsw i32 %8, 1, !dbg !9316
  store i32 %9, i32* @n_calls.6554, align 4, !dbg !9316
  %10 = icmp eq %struct.exe_file_t* %7, null, !dbg !9317
  br i1 %10, label %bb, label %bb1, !dbg !9317

bb:                                               ; preds = %__get_file.exit, %__get_file.exit.thread
  %11 = tail call i32* @__errno_location() nounwind readnone, !dbg !9318
  store i32 9, i32* %11, align 4, !dbg !9318
  br label %bb9, !dbg !9319

bb1:                                              ; preds = %__get_file.exit
  %12 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9320
  %13 = icmp eq i32 %12, 0, !dbg !9320
  br i1 %13, label %bb4, label %bb2, !dbg !9320

bb2:                                              ; preds = %bb1
  %14 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !9320
  %15 = load i32* %14, align 4, !dbg !9320
  %16 = icmp eq i32 %15, %9, !dbg !9320
  br i1 %16, label %bb3, label %bb4, !dbg !9320

bb3:                                              ; preds = %bb2
  %17 = add i32 %12, -1, !dbg !9321
  store i32 %17, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9321
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9322
  store i32 5, i32* %18, align 4, !dbg !9322
  br label %bb9, !dbg !9323

bb4:                                              ; preds = %bb2, %bb1
  %19 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9324
  %20 = load %struct.exe_disk_file_t** %19, align 8, !dbg !9324
  %21 = icmp eq %struct.exe_disk_file_t* %20, null, !dbg !9324
  br i1 %21, label %bb6, label %bb5, !dbg !9324

bb5:                                              ; preds = %bb4
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str39347, i64 0, i64 0)) nounwind, !dbg !9325
  %22 = tail call i32* @__errno_location() nounwind readnone, !dbg !9326
  store i32 5, i32* %22, align 4, !dbg !9326
  br label %bb9, !dbg !9327

bb6:                                              ; preds = %bb4
  %23 = tail call i64 @klee_get_valuel(i64 %length) nounwind, !dbg !9328
  %24 = icmp eq i64 %23, %length, !dbg !9330
  %25 = zext i1 %24 to i64, !dbg !9330
  tail call void @klee_assume(i64 %25) nounwind, !dbg !9330
  %26 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9331
  %27 = load i32* %26, align 8, !dbg !9331
  %28 = tail call i64 (i64, ...)* @syscall(i64 77, i32 %27, i64 %23) nounwind, !dbg !9331
  %29 = trunc i64 %28 to i32, !dbg !9331
  %30 = icmp eq i32 %29, -1, !dbg !9332
  br i1 %30, label %bb7, label %bb9, !dbg !9332

bb7:                                              ; preds = %bb6
  %31 = tail call i32* @__errno_location() nounwind readnone, !dbg !9333
  %32 = tail call i32 @klee_get_errno() nounwind, !dbg !9333
  store i32 %32, i32* %31, align 4, !dbg !9333
  br label %bb9, !dbg !9333

bb9:                                              ; preds = %bb7, %bb6, %bb5, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb5 ], [ -1, %bb7 ], [ %29, %bb6 ]
  ret i32 %.0, !dbg !9319
}

define i64 @__fd_lseek(i32 %fd, i64 %offset, i32 %whence) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9334
  br i1 %0, label %bb.i, label %__get_file.exit, !dbg !9334

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9336
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9337
  %3 = load i32* %2, align 4, !dbg !9337
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9337
  br i1 %toBool.i, label %__get_file.exit, label %bb1.i, !dbg !9337

bb1.i:                                            ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9336
  br label %__get_file.exit, !dbg !9338

__get_file.exit:                                  ; preds = %bb1.i, %bb.i, %entry
  %.0.i = phi %struct.exe_file_t* [ %5, %bb1.i ], [ null, %bb.i ], [ null, %entry ]
  %6 = tail call i64 @klee_get_valuel(i64 %offset) nounwind, !dbg !9339
  %7 = icmp eq i64 %6, %offset, !dbg !9341
  %8 = zext i1 %7 to i64, !dbg !9341
  tail call void @klee_assume(i64 %8) nounwind, !dbg !9341
  %9 = icmp eq %struct.exe_file_t* %.0.i, null, !dbg !9342
  br i1 %9, label %bb, label %bb1, !dbg !9342

bb:                                               ; preds = %__get_file.exit
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !9343
  store i32 9, i32* %10, align 4, !dbg !9343
  br label %bb19, !dbg !9344

bb1:                                              ; preds = %__get_file.exit
  %11 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 3, !dbg !9345
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !9345
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !9345
  br i1 %13, label %bb2, label %bb11, !dbg !9345

bb2:                                              ; preds = %bb1
  %14 = icmp eq i32 %whence, 0, !dbg !9346
  br i1 %14, label %bb3, label %bb4, !dbg !9346

bb3:                                              ; preds = %bb2
  %15 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9347
  %16 = load i32* %15, align 8, !dbg !9347
  %17 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %16, i64 %6, i32 0) nounwind, !dbg !9347
  br label %bb8, !dbg !9347

bb4:                                              ; preds = %bb2
  %18 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9348
  %19 = load i64* %18, align 8, !dbg !9348
  %20 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 0, !dbg !9348
  %21 = load i32* %20, align 8, !dbg !9348
  %22 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %21, i64 %19, i32 0) nounwind, !dbg !9348
  %23 = icmp eq i64 %22, -1, !dbg !9349
  br i1 %23, label %bb9, label %bb5, !dbg !9349

bb5:                                              ; preds = %bb4
  %24 = load i64* %18, align 8, !dbg !9350
  %25 = icmp eq i64 %24, %22, !dbg !9350
  br i1 %25, label %bb7, label %bb6, !dbg !9350

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([18 x i8]* @.str40348, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 709, i8* getelementptr inbounds ([11 x i8]* @__PRETTY_FUNCTION__.6098, i64 0, i64 0)) n
  unreachable, !dbg !9350

bb7:                                              ; preds = %bb5
  %26 = load i32* %20, align 8, !dbg !9351
  %27 = tail call i64 (i64, ...)* @syscall(i64 8, i32 %26, i64 %6, i32 %whence) nounwind, !dbg !9351
  br label %bb8, !dbg !9351

bb8:                                              ; preds = %bb7, %bb3
  %new_off.0 = phi i64 [ %17, %bb3 ], [ %27, %bb7 ]
  %28 = icmp eq i64 %new_off.0, -1, !dbg !9352
  br i1 %28, label %bb9, label %bb10, !dbg !9352

bb9:                                              ; preds = %bb8, %bb4
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !9353
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !9353
  store i32 %30, i32* %29, align 4, !dbg !9353
  br label %bb19, !dbg !9354

bb10:                                             ; preds = %bb8
  %31 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9355
  store i64 %new_off.0, i64* %31, align 8, !dbg !9355
  br label %bb19, !dbg !9356

bb11:                                             ; preds = %bb1
  switch i32 %whence, label %bb15 [
    i32 0, label %bb16
    i32 1, label %bb13
    i32 2, label %bb14
  ], !dbg !9357

bb13:                                             ; preds = %bb11
  %32 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9358
  %33 = load i64* %32, align 8, !dbg !9358
  %34 = add nsw i64 %33, %6, !dbg !9358
  br label %bb16, !dbg !9358

bb14:                                             ; preds = %bb11
  %35 = getelementptr inbounds %struct.exe_disk_file_t* %12, i64 0, i32 0, !dbg !9359
  %36 = load i32* %35, align 8, !dbg !9359
  %37 = zext i32 %36 to i64, !dbg !9359
  %38 = add nsw i64 %37, %6, !dbg !9359
  br label %bb16, !dbg !9359

bb15:                                             ; preds = %bb11
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !9360
  store i32 22, i32* %39, align 4, !dbg !9360
  br label %bb19, !dbg !9361

bb16:                                             ; preds = %bb14, %bb13, %bb11
  %new_off.1 = phi i64 [ %38, %bb14 ], [ %34, %bb13 ], [ %6, %bb11 ]
  %40 = icmp slt i64 %new_off.1, 0, !dbg !9362
  br i1 %40, label %bb17, label %bb18, !dbg !9362

bb17:                                             ; preds = %bb16
  %41 = tail call i32* @__errno_location() nounwind readnone, !dbg !9363
  store i32 22, i32* %41, align 4, !dbg !9363
  br label %bb19, !dbg !9364

bb18:                                             ; preds = %bb16
  %42 = getelementptr inbounds %struct.exe_file_t* %.0.i, i64 0, i32 2, !dbg !9365
  store i64 %new_off.1, i64* %42, align 8, !dbg !9365
  br label %bb19, !dbg !9366

bb19:                                             ; preds = %bb18, %bb17, %bb15, %bb10, %bb9, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb9 ], [ %new_off.0, %bb10 ], [ -1, %bb15 ], [ -1, %bb17 ], [ %new_off.1, %bb18 ]
  ret i64 %.0, !dbg !9344
}

define i64 @pread(i32 %fd, i8* %buf, i64 %count, i64 %offset) nounwind {
entry:
  %0 = load i32* @n_calls.5974, align 4, !dbg !9367
  %1 = add nsw i32 %0, 1, !dbg !9367
  store i32 %1, i32* @n_calls.5974, align 4, !dbg !9367
  %2 = icmp eq i64 %count, 0, !dbg !9368
  br i1 %2, label %bb19, label %bb1, !dbg !9368

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9369
  br i1 %3, label %bb2, label %bb3, !dbg !9369

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9370
  store i32 14, i32* %4, align 4, !dbg !9370
  br label %bb19, !dbg !9371

bb3:                                              ; preds = %bb1
  %5 = icmp slt i64 %offset, 0, !dbg !9372
  br i1 %5, label %bb4, label %bb5, !dbg !9372

bb4:                                              ; preds = %bb3
  %6 = tail call i32* @__errno_location() nounwind readnone, !dbg !9373
  store i32 22, i32* %6, align 4, !dbg !9373
  br label %bb19, !dbg !9374

bb5:                                              ; preds = %bb3
  %7 = icmp ult i32 %fd, 32, !dbg !9375
  br i1 %7, label %bb.i, label %bb6, !dbg !9375

bb.i:                                             ; preds = %bb5
  %8 = sext i32 %fd to i64, !dbg !9377
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 1, !dbg !9378
  %10 = load i32* %9, align 4, !dbg !9378
  %11 = and i32 %10, 1
  %toBool.i = icmp eq i32 %11, 0, !dbg !9378
  br i1 %toBool.i, label %bb6, label %__get_file.exit, !dbg !9378

__get_file.exit:                                  ; preds = %bb.i
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, !dbg !9377
  %13 = icmp eq %struct.exe_file_t* %12, null, !dbg !9379
  br i1 %13, label %bb6, label %bb7, !dbg !9379

bb6:                                              ; preds = %__get_file.exit, %bb.i, %bb5
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !9380
  store i32 9, i32* %14, align 4, !dbg !9380
  br label %bb19, !dbg !9381

bb7:                                              ; preds = %__get_file.exit
  %15 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9382
  %16 = icmp eq i32 %15, 0, !dbg !9382
  br i1 %16, label %bb10, label %bb8, !dbg !9382

bb8:                                              ; preds = %bb7
  %17 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9382
  %18 = load i32* %17, align 4, !dbg !9382
  %19 = icmp eq i32 %18, %1, !dbg !9382
  br i1 %19, label %bb9, label %bb10, !dbg !9382

bb9:                                              ; preds = %bb8
  %20 = add i32 %15, -1, !dbg !9383
  store i32 %20, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9383
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !9384
  store i32 5, i32* %21, align 4, !dbg !9384
  br label %bb19, !dbg !9385

bb10:                                             ; preds = %bb8, %bb7
  %22 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 3, !dbg !9386
  %23 = load %struct.exe_disk_file_t** %22, align 8, !dbg !9386
  %24 = icmp eq %struct.exe_disk_file_t* %23, null, !dbg !9386
  br i1 %24, label %bb11, label %bb14, !dbg !9386

bb11:                                             ; preds = %bb10
  %25 = ptrtoint i8* %buf to i64, !dbg !9387
  %26 = tail call i64 @klee_get_valuel(i64 %25) nounwind, !dbg !9387
  %27 = inttoptr i64 %26 to i8*, !dbg !9387
  %28 = icmp eq i8* %27, %buf, !dbg !9389
  %29 = zext i1 %28 to i64, !dbg !9389
  tail call void @klee_assume(i64 %29) nounwind, !dbg !9389
  %30 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9390
  %31 = icmp eq i64 %30, %count, !dbg !9392
  %32 = zext i1 %31 to i64, !dbg !9392
  tail call void @klee_assume(i64 %32) nounwind, !dbg !9392
  tail call void @klee_check_memory_access(i8* %27, i64 %30) nounwind, !dbg !9393
  %33 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %8, i32 0, !dbg !9394
  %34 = load i32* %33, align 8, !dbg !9394
  %35 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %34, i8* %27, i64 %30, i64 %offset) nounwind, !dbg !9394
  %36 = trunc i64 %35 to i32, !dbg !9394
  %37 = icmp eq i32 %36, -1, !dbg !9395
  br i1 %37, label %bb12, label %bb13, !dbg !9395

bb12:                                             ; preds = %bb11
  %38 = tail call i32* @__errno_location() nounwind readnone, !dbg !9396
  %39 = tail call i32 @klee_get_errno() nounwind, !dbg !9396
  store i32 %39, i32* %38, align 4, !dbg !9396
  br label %bb19, !dbg !9397

bb13:                                             ; preds = %bb11
  %40 = sext i32 %36 to i64, !dbg !9398
  br label %bb19, !dbg !9398

bb14:                                             ; preds = %bb10
  %41 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 0, !dbg !9399
  %42 = load i32* %41, align 8, !dbg !9399
  %43 = zext i32 %42 to i64, !dbg !9399
  %44 = icmp slt i64 %43, %offset, !dbg !9399
  br i1 %44, label %bb19, label %bb16, !dbg !9399

bb16:                                             ; preds = %bb14
  %45 = add i64 %offset, %count, !dbg !9400
  %46 = sub nsw i64 %43, %offset, !dbg !9401
  %47 = icmp ugt i64 %45, %43, !dbg !9400
  %.count = select i1 %47, i64 %46, i64 %count
  %48 = getelementptr inbounds %struct.exe_disk_file_t* %23, i64 0, i32 1, !dbg !9402
  %49 = load i8** %48, align 8, !dbg !9402
  %50 = getelementptr inbounds i8* %49, i64 %offset, !dbg !9402
  %51 = call i8* @memcpy(i8* %buf, i8* %50, i64 %.count)
  br label %bb19, !dbg !9403

bb19:                                             ; preds = %bb16, %bb14, %bb13, %bb12, %bb9, %bb6, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb9 ], [ -1, %bb12 ], [ %40, %bb13 ], [ %.count, %bb16 ], [ 0, %entry ], [ 0, %bb14 ]
  ret i64 %.0, !dbg !9404
}

define i64 @read(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.5898, align 4, !dbg !9405
  %1 = add nsw i32 %0, 1, !dbg !9405
  store i32 %1, i32* @n_calls.5898, align 4, !dbg !9405
  %2 = icmp eq i64 %count, 0, !dbg !9406
  br i1 %2, label %bb34, label %bb1, !dbg !9406

bb1:                                              ; preds = %entry
  %3 = icmp eq i8* %buf, null, !dbg !9407
  br i1 %3, label %bb2, label %bb3, !dbg !9407

bb2:                                              ; preds = %bb1
  %4 = tail call i32* @__errno_location() nounwind readnone, !dbg !9408
  store i32 14, i32* %4, align 4, !dbg !9408
  br label %bb34, !dbg !9409

bb3:                                              ; preds = %bb1
  %5 = icmp ult i32 %fd, 32, !dbg !9410
  br i1 %5, label %bb.i, label %bb4, !dbg !9410

bb.i:                                             ; preds = %bb3
  %6 = sext i32 %fd to i64, !dbg !9412
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9413
  %8 = load i32* %7, align 4, !dbg !9413
  %9 = and i32 %8, 1
  %toBool.i = icmp eq i32 %9, 0, !dbg !9413
  br i1 %toBool.i, label %bb4, label %__get_file.exit, !dbg !9413

__get_file.exit:                                  ; preds = %bb.i
  %10 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, !dbg !9412
  %11 = icmp eq %struct.exe_file_t* %10, null, !dbg !9414
  br i1 %11, label %bb4, label %bb5, !dbg !9414

bb4:                                              ; preds = %__get_file.exit, %bb.i, %bb3
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9415
  store i32 9, i32* %12, align 4, !dbg !9415
  br label %bb34, !dbg !9416

bb5:                                              ; preds = %__get_file.exit
  %13 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9417
  %14 = icmp eq i32 %13, 0, !dbg !9417
  br i1 %14, label %bb8, label %bb6, !dbg !9417

bb6:                                              ; preds = %bb5
  %15 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 8, !dbg !9417
  %16 = load i32* %15, align 4, !dbg !9417
  %17 = icmp eq i32 %16, %1, !dbg !9417
  br i1 %17, label %bb7, label %bb8, !dbg !9417

bb7:                                              ; preds = %bb6
  %18 = add i32 %13, -1, !dbg !9418
  store i32 %18, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9418
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !9419
  store i32 5, i32* %19, align 4, !dbg !9419
  br label %bb34, !dbg !9420

bb8:                                              ; preds = %bb6, %bb5
  %20 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9421
  %21 = load %struct.exe_disk_file_t** %20, align 8, !dbg !9421
  %22 = icmp eq %struct.exe_disk_file_t* %21, null, !dbg !9421
  br i1 %22, label %bb9, label %bb27, !dbg !9421

bb9:                                              ; preds = %bb8
  %23 = ptrtoint i8* %buf to i64, !dbg !9422
  %24 = tail call i64 @klee_get_valuel(i64 %23) nounwind, !dbg !9422
  %25 = inttoptr i64 %24 to i8*, !dbg !9422
  %26 = icmp eq i8* %25, %buf, !dbg !9424
  %27 = zext i1 %26 to i64, !dbg !9424
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9424
  %28 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9425
  %29 = icmp eq i64 %28, %count, !dbg !9427
  %30 = zext i1 %29 to i64, !dbg !9427
  tail call void @klee_assume(i64 %30) nounwind, !dbg !9427
  tail call void @klee_check_memory_access(i8* %25, i64 %28) nounwind, !dbg !9428
  %31 = load i32* %7, align 4, !dbg !9429
  %32 = and i32 %31, 16, !dbg !9429
  %33 = icmp eq i32 %32, 0, !dbg !9429
  br i1 %33, label %bb13, label %bb10, !dbg !9429

bb10:                                             ; preds = %bb9
  %34 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9429
  %35 = icmp eq i32 %34, 0, !dbg !9429
  br i1 %35, label %bb13, label %bb11, !dbg !9429

bb11:                                             ; preds = %bb10
  %36 = tail call noalias i8* @malloc(i64 %28) nounwind, !dbg !9430
  %37 = icmp eq i8* %36, null, !dbg !9431
  br i1 %37, label %bb12, label %bb13, !dbg !9431

bb12:                                             ; preds = %bb11
  tail call void @__assert_fail(i8* getelementptr inbounds ([33 x i8]* @.str21329, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 498, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9432

bb13:                                             ; preds = %bb11, %bb10, %bb9
  %incoming.0 = phi i8* [ %36, %bb11 ], [ %25, %bb10 ], [ %25, %bb9 ]
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9433
  %39 = load i32* %38, align 8, !dbg !9433
  %40 = icmp eq i32 %39, 0, !dbg !9433
  br i1 %40, label %bb15, label %bb14, !dbg !9433

bb14:                                             ; preds = %bb13
  %41 = load i32* %7, align 4, !dbg !9433
  %42 = and i32 %41, 16, !dbg !9433
  %43 = icmp eq i32 %42, 0, !dbg !9433
  br i1 %43, label %bb16, label %bb15, !dbg !9433

bb15:                                             ; preds = %bb14, %bb13
  %44 = tail call i64 (i64, ...)* @syscall(i64 0, i32 %39, i8* %incoming.0, i64 %28) nounwind, !dbg !9434
  br label %bb17, !dbg !9434

bb16:                                             ; preds = %bb14
  %45 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9435
  %46 = load i64* %45, align 8, !dbg !9435
  %47 = tail call i64 (i64, ...)* @syscall(i64 17, i32 %39, i8* %25, i64 %28, i64 %46) nounwind, !dbg !9435
  br label %bb17, !dbg !9435

bb17:                                             ; preds = %bb16, %bb15
  %r.0.in = phi i64 [ %44, %bb15 ], [ %47, %bb16 ]
  %r.0 = trunc i64 %r.0.in to i32
  %48 = load i32* %7, align 4, !dbg !9436
  %49 = and i32 %48, 16, !dbg !9436
  %50 = icmp eq i32 %49, 0, !dbg !9436
  br i1 %50, label %bb22, label %bb18, !dbg !9436

bb18:                                             ; preds = %bb17
  %51 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9436
  %52 = icmp eq i32 %51, 0, !dbg !9436
  br i1 %52, label %bb22, label %bb19, !dbg !9436

bb19:                                             ; preds = %bb18
  %53 = icmp eq i32 %r.0, -1, !dbg !9437
  br i1 %53, label %bb21, label %bb20, !dbg !9437

bb20:                                             ; preds = %bb19
  tail call void @klee_make_symbolic(i8* %incoming.0, i64 %28, i8* getelementptr inbounds ([10 x i8]* @.str41349, i64 0, i64 0)) nounwind, !dbg !9438
  %54 = sext i32 %r.0 to i64, !dbg !9439
  %55 = call i8* @memcpy(i8* %25, i8* %incoming.0, i64 %54)
  br label %bb21, !dbg !9439

bb21:                                             ; preds = %bb20, %bb19
  tail call void @free(i8* %incoming.0) nounwind, !dbg !9440
  br label %bb22, !dbg !9440

bb22:                                             ; preds = %bb21, %bb18, %bb17
  %56 = icmp eq i32 %r.0, -1, !dbg !9441
  br i1 %56, label %bb23, label %bb24, !dbg !9441

bb23:                                             ; preds = %bb22
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9442
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9442
  store i32 %58, i32* %57, align 4, !dbg !9442
  br label %bb34, !dbg !9443

bb24:                                             ; preds = %bb22
  %59 = load i32* %38, align 8, !dbg !9444
  %60 = icmp eq i32 %59, 0, !dbg !9444
  br i1 %60, label %bb24.bb26_crit_edge, label %bb25, !dbg !9444

bb24.bb26_crit_edge:                              ; preds = %bb24
  %.pre = sext i32 %r.0 to i64, !dbg !9445
  br label %bb34

bb25:                                             ; preds = %bb24
  %61 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9446
  %62 = load i64* %61, align 8, !dbg !9446
  %63 = sext i32 %r.0 to i64, !dbg !9446
  %64 = add nsw i64 %62, %63, !dbg !9446
  store i64 %64, i64* %61, align 8, !dbg !9446
  br label %bb34, !dbg !9446

bb27:                                             ; preds = %bb8
  %65 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 2, !dbg !9447
  %66 = load i64* %65, align 8, !dbg !9447
  %67 = icmp slt i64 %66, 0, !dbg !9447
  br i1 %67, label %bb28, label %bb29, !dbg !9447

bb28:                                             ; preds = %bb27
  tail call void @__assert_fail(i8* getelementptr inbounds ([12 x i8]* @.str20328, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 525, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.5902, i64 0, i64 0)) no
  unreachable, !dbg !9447

bb29:                                             ; preds = %bb27
  %68 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 0, !dbg !9448
  %69 = load i32* %68, align 8, !dbg !9448
  %70 = zext i32 %69 to i64, !dbg !9448
  %71 = icmp slt i64 %70, %66, !dbg !9448
  br i1 %71, label %bb34, label %bb31, !dbg !9448

bb31:                                             ; preds = %bb29
  %72 = add i64 %66, %count, !dbg !9449
  %73 = sub nsw i64 %70, %66, !dbg !9450
  %74 = icmp ugt i64 %72, %70, !dbg !9449
  %.count = select i1 %74, i64 %73, i64 %count
  %75 = getelementptr inbounds %struct.exe_disk_file_t* %21, i64 0, i32 1, !dbg !9451
  %76 = load i8** %75, align 8, !dbg !9451
  %77 = getelementptr inbounds i8* %76, i64 %66, !dbg !9451
  %78 = call i8* @memcpy(i8* %buf, i8* %77, i64 %.count)
  %79 = load i64* %65, align 8, !dbg !9452
  %80 = add i64 %79, %.count, !dbg !9452
  store i64 %80, i64* %65, align 8, !dbg !9452
  br label %bb34, !dbg !9453

bb34:                                             ; preds = %bb31, %bb29, %bb25, %bb24.bb26_crit_edge, %bb23, %bb7, %bb4, %bb2, %entry
  %.0 = phi i64 [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb7 ], [ -1, %bb23 ], [ %.count, %bb31 ], [ 0, %entry ], [ 0, %bb29 ], [ %.pre, %bb24.bb26_crit_edge ], [ %63, %bb25 ]
  ret i64 %.0, !dbg !9454
}

define i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind {
entry:
  %0 = tail call noalias i8* @malloc(i64 %length) nounwind, !dbg !9455
  %1 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 0) nounwind, !dbg !9456
  br label %bb5, !dbg !9457

bb:                                               ; preds = %bb5
  %2 = sub i64 %length, %count.0, !dbg !9458
  %3 = tail call i64 @read(i32 %fd, i8* %0, i64 %2) nounwind, !dbg !9458
  switch i64 %3, label %bb4 [
    i64 0, label %bb1
    i64 -1, label %bb3
  ]

bb1:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([43 x i8]* @.str42350, i64 0, i64 0)) nounwind, !dbg !9459
  br label %bb6, !dbg !9459

bb3:                                              ; preds = %bb
  tail call void @klee_warning(i8* getelementptr inbounds ([18 x i8]* @.str43351, i64 0, i64 0)) nounwind, !dbg !9460
  br label %bb6, !dbg !9460

bb4:                                              ; preds = %bb
  %4 = add i64 %3, %count.0, !dbg !9461
  br label %bb5, !dbg !9461

bb5:                                              ; preds = %bb4, %entry
  %count.0 = phi i64 [ 0, %entry ], [ %4, %bb4 ]
  %5 = icmp ult i64 %count.0, %length, !dbg !9462
  br i1 %5, label %bb, label %bb6, !dbg !9462

bb6:                                              ; preds = %bb5, %bb3, %bb1
  ret i8* %0, !dbg !9463
}

define i8* @mmap(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9464
  %1 = icmp eq i32 %prot, 1, !dbg !9464
  %2 = and i1 %0, %1, !dbg !9464
  br i1 %2, label %bb, label %bb3, !dbg !9464

bb:                                               ; preds = %entry
  %3 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %off) nounwind, !dbg !9465
  br label %bb4, !dbg !9465

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44352, i64 0, i64 0)) nounwind, !dbg !9466
  br label %bb4, !dbg !9467

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i8* [ %3, %bb ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9465
}

define i8* @mmap64(i8* %addr, i64 %length, i32 %prot, i32 %flags, i32 %fd, i64 %off) nounwind {
entry:
  %0 = icmp eq i8* %addr, null, !dbg !9468
  %1 = icmp eq i32 %prot, 1, !dbg !9468
  %2 = and i1 %0, %1, !dbg !9468
  br i1 %2, label %bb, label %bb3, !dbg !9468

bb:                                               ; preds = %entry
  %int_cast_to_i64 = bitcast i64 12 to i64
  %3 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %3, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb
  %4 = shl nsw i64 %off, 12, !dbg !9469
  %5 = tail call i8* @mmap_simple(i32 %fd, i64 %length, i64 %4) nounwind, !dbg !9469
  br label %bb4, !dbg !9469

bb3:                                              ; preds = %entry
  tail call void @klee_warning(i8* getelementptr inbounds ([30 x i8]* @.str44352, i64 0, i64 0)) nounwind, !dbg !9470
  br label %bb4, !dbg !9471

bb4:                                              ; preds = %bb3, %klee_overshift_check.exit
  %.0 = phi i8* [ %5, %klee_overshift_check.exit ], [ inttoptr (i64 -1 to i8*), %bb3 ]
  ret i8* %.0, !dbg !9469
}

define i32 @fchmod(i32 %fd, i32 %mode) nounwind {
entry:
  %0 = icmp ult i32 %fd, 32, !dbg !9472
  br i1 %0, label %bb.i, label %bb, !dbg !9472

bb.i:                                             ; preds = %entry
  %1 = sext i32 %fd to i64, !dbg !9474
  %2 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 1, !dbg !9475
  %3 = load i32* %2, align 4, !dbg !9475
  %4 = and i32 %3, 1
  %toBool.i = icmp eq i32 %4, 0, !dbg !9475
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9475

__get_file.exit:                                  ; preds = %bb.i
  %5 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, !dbg !9474
  %6 = icmp eq %struct.exe_file_t* %5, null, !dbg !9476
  br i1 %6, label %bb, label %bb1, !dbg !9476

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9477
  store i32 9, i32* %7, align 4, !dbg !9477
  br label %bb9, !dbg !9478

bb1:                                              ; preds = %__get_file.exit
  %8 = load i32* @n_calls.6299, align 4, !dbg !9479
  %9 = add nsw i32 %8, 1, !dbg !9479
  store i32 %9, i32* @n_calls.6299, align 4, !dbg !9479
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9480
  %11 = icmp eq i32 %10, 0, !dbg !9480
  br i1 %11, label %bb4, label %bb2, !dbg !9480

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 21), align 8, !dbg !9480
  %13 = load i32* %12, align 4, !dbg !9480
  %14 = icmp eq i32 %13, %9, !dbg !9480
  br i1 %14, label %bb3, label %bb4, !dbg !9480

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9481
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9481
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9482
  store i32 5, i32* %16, align 4, !dbg !9482
  br label %bb9, !dbg !9483

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 3, !dbg !9484
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9484
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9484
  br i1 %19, label %bb6, label %bb5, !dbg !9484

bb5:                                              ; preds = %bb4
  %20 = tail call i32 @geteuid() nounwind, !dbg !9485
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 3, !dbg !9485
  %22 = load %struct.stat** %21, align 8, !dbg !9485
  %23 = getelementptr inbounds %struct.stat* %22, i64 0, i32 4, !dbg !9485
  %24 = load i32* %23, align 4, !dbg !9485
  %25 = icmp eq i32 %20, %24, !dbg !9485
  br i1 %25, label %bb.i11, label %bb3.i, !dbg !9485

bb.i11:                                           ; preds = %bb5
  %26 = tail call i32 @getgid() nounwind, !dbg !9488
  %27 = load %struct.stat** %21, align 8, !dbg !9488
  %28 = getelementptr inbounds %struct.stat* %27, i64 0, i32 5, !dbg !9488
  %29 = load i32* %28, align 8, !dbg !9488
  %30 = and i32 %mode, 3071, !dbg !9489
  %31 = icmp eq i32 %26, %29, !dbg !9488
  %mode..i = select i1 %31, i32 %mode, i32 %30
  %32 = getelementptr inbounds %struct.stat* %27, i64 0, i32 3, !dbg !9490
  %33 = load i32* %32, align 8, !dbg !9490
  %34 = and i32 %33, -4096, !dbg !9490
  %35 = and i32 %mode..i, 4095, !dbg !9490
  %36 = or i32 %35, %34, !dbg !9490
  store i32 %36, i32* %32, align 8, !dbg !9490
  br label %bb9, !dbg !9491

bb3.i:                                            ; preds = %bb5
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !9492
  store i32 1, i32* %37, align 4, !dbg !9492
  br label %bb9, !dbg !9493

bb6:                                              ; preds = %bb4
  %38 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %1, i32 0, !dbg !9494
  %39 = load i32* %38, align 8, !dbg !9494
  %40 = tail call i64 (i64, ...)* @syscall(i64 91, i32 %39, i32 %mode) nounwind, !dbg !9494
  %41 = trunc i64 %40 to i32, !dbg !9494
  %42 = icmp eq i32 %41, -1, !dbg !9495
  br i1 %42, label %bb7, label %bb9, !dbg !9495

bb7:                                              ; preds = %bb6
  %43 = tail call i32* @__errno_location() nounwind readnone, !dbg !9496
  %44 = tail call i32 @klee_get_errno() nounwind, !dbg !9496
  store i32 %44, i32* %43, align 4, !dbg !9496
  br label %bb9, !dbg !9496

bb9:                                              ; preds = %bb7, %bb6, %bb3.i, %bb.i11, %bb3, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb7 ], [ %41, %bb6 ], [ 0, %bb.i11 ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9478
}

define i32 @chmod(i8* %path, i32 %mode) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9497
  %1 = load i32* @n_calls.6276, align 4, !dbg !9499
  %2 = add nsw i32 %1, 1, !dbg !9499
  store i32 %2, i32* @n_calls.6276, align 4, !dbg !9499
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9500
  %4 = icmp eq i32 %3, 0, !dbg !9500
  br i1 %4, label %bb2, label %bb, !dbg !9500

bb:                                               ; preds = %entry
  %5 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 20), align 8, !dbg !9500
  %6 = load i32* %5, align 4, !dbg !9500
  %7 = icmp eq i32 %6, %2, !dbg !9500
  br i1 %7, label %bb1, label %bb2, !dbg !9500

bb1:                                              ; preds = %bb
  %8 = add i32 %3, -1, !dbg !9501
  store i32 %8, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9501
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9502
  store i32 5, i32* %9, align 4, !dbg !9502
  br label %bb7, !dbg !9503

bb2:                                              ; preds = %bb, %entry
  %10 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9504
  br i1 %10, label %bb4, label %bb3, !dbg !9504

bb3:                                              ; preds = %bb2
  %11 = tail call i32 @geteuid() nounwind, !dbg !9505
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9505
  %13 = load %struct.stat** %12, align 8, !dbg !9505
  %14 = getelementptr inbounds %struct.stat* %13, i64 0, i32 4, !dbg !9505
  %15 = load i32* %14, align 4, !dbg !9505
  %16 = icmp eq i32 %11, %15, !dbg !9505
  br i1 %16, label %bb.i, label %bb3.i, !dbg !9505

bb.i:                                             ; preds = %bb3
  %17 = tail call i32 @getgid() nounwind, !dbg !9507
  %18 = load %struct.stat** %12, align 8, !dbg !9507
  %19 = getelementptr inbounds %struct.stat* %18, i64 0, i32 5, !dbg !9507
  %20 = load i32* %19, align 8, !dbg !9507
  %21 = and i32 %mode, 3071, !dbg !9508
  %22 = icmp eq i32 %17, %20, !dbg !9507
  %mode..i = select i1 %22, i32 %mode, i32 %21
  %23 = getelementptr inbounds %struct.stat* %18, i64 0, i32 3, !dbg !9509
  %24 = load i32* %23, align 8, !dbg !9509
  %25 = and i32 %24, -4096, !dbg !9509
  %26 = and i32 %mode..i, 4095, !dbg !9509
  %27 = or i32 %26, %25, !dbg !9509
  store i32 %27, i32* %23, align 8, !dbg !9509
  br label %bb7, !dbg !9510

bb3.i:                                            ; preds = %bb3
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !9511
  store i32 1, i32* %28, align 4, !dbg !9511
  br label %bb7, !dbg !9512

bb4:                                              ; preds = %bb2
  %29 = ptrtoint i8* %path to i64, !dbg !9513
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9513
  %31 = inttoptr i64 %30 to i8*, !dbg !9513
  %32 = icmp eq i8* %31, %path, !dbg !9516
  %33 = zext i1 %32 to i64, !dbg !9516
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9516
  br label %bb.i9, !dbg !9517

bb.i9:                                            ; preds = %bb13.i, %bb4
  %sc.0.i = phi i8* [ %31, %bb4 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb4 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9518
  %36 = load i8* @UseConcretePath, align 1, !dbg !9519
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9519
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9519

bb7.i:                                            ; preds = %bb.i9
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9519
  %38 = icmp eq i32 %37, 0, !dbg !9519
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9519

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9520
  br label %__concretize_string.exit, !dbg !9520

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9521
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9521
  br label %bb13.i, !dbg !9521

bb12.i:                                           ; preds = %bb7.i, %bb.i9
  %40 = sext i8 %35 to i64, !dbg !9522
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9522
  %42 = trunc i64 %41 to i8, !dbg !9522
  %43 = icmp eq i8 %42, %35, !dbg !9523
  %44 = zext i1 %43 to i64, !dbg !9523
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9523
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9524
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9524
  %46 = icmp eq i8 %42, 0, !dbg !9525
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9525

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9517
  br label %bb.i9, !dbg !9517

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 90, i8* %path, i32 %mode) nounwind, !dbg !9515
  %49 = trunc i64 %48 to i32, !dbg !9515
  %50 = icmp eq i32 %49, -1, !dbg !9526
  br i1 %50, label %bb5, label %bb7, !dbg !9526

bb5:                                              ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9527
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9527
  store i32 %52, i32* %51, align 4, !dbg !9527
  br label %bb7, !dbg !9527

bb7:                                              ; preds = %bb5, %__concretize_string.exit, %bb3.i, %bb.i, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb5 ], [ %49, %__concretize_string.exit ], [ 0, %bb.i ], [ -1, %bb3.i ]
  ret i32 %.0, !dbg !9503
}

define i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9528
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9530
  br i1 %1, label %bb1, label %bb, !dbg !9530

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9531
  %3 = load %struct.stat** %2, align 8, !dbg !9531
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9531
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9531
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9532

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9533
  %8 = add i64 %7, 1, !dbg !9533
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9533
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9534
  %11 = ptrtoint i8* %9 to i64, !dbg !9535
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9535
  %13 = inttoptr i64 %12 to i8*, !dbg !9535
  %14 = icmp eq i8* %13, %9, !dbg !9538
  %15 = zext i1 %14 to i64, !dbg !9538
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9538
  br label %bb.i, !dbg !9539

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9540
  %18 = load i8* @UseConcretePath, align 1, !dbg !9541
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9541
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9541

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9541
  %20 = icmp eq i32 %19, 0, !dbg !9541
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9541

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9542
  br label %__concretize_string.exit, !dbg !9542

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9543
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9543
  br label %bb13.i, !dbg !9543

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9544
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9544
  %24 = trunc i64 %23 to i8, !dbg !9544
  %25 = icmp eq i8 %24, %17, !dbg !9545
  %26 = zext i1 %25 to i64, !dbg !9545
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9545
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9546
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9546
  %28 = icmp eq i8 %24, 0, !dbg !9547
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9547

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9539
  br label %bb.i, !dbg !9539

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 6, i8* %9, %struct.stat* %buf) nounwind, !dbg !9537
  %31 = trunc i64 %30 to i32, !dbg !9537
  %32 = icmp eq i32 %31, -1, !dbg !9548
  br i1 %32, label %bb2, label %bb3, !dbg !9548

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9549
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9549
  store i32 %34, i32* %33, align 4, !dbg !9549
  br label %bb3, !dbg !9549

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9550
  br label %bb4, !dbg !9551

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9532
}

define i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %path, i32 0, i8 zeroext 1) nounwind, !dbg !9552
  %1 = icmp eq %struct.exe_disk_file_t* %0, null, !dbg !9554
  br i1 %1, label %bb1, label %bb, !dbg !9554

bb:                                               ; preds = %entry
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %0, i64 0, i32 3, !dbg !9555
  %3 = load %struct.stat** %2, align 8, !dbg !9555
  %4 = bitcast %struct.stat* %buf to i8*, !dbg !9555
  %5 = bitcast %struct.stat* %3 to i8*, !dbg !9555
  %6 = call i8* @memcpy(i8* %4, i8* %5, i64 144)
  br label %bb4, !dbg !9556

bb1:                                              ; preds = %entry
  %7 = tail call i64 @strlen(i8* %path) nounwind readonly, !dbg !9557
  %8 = add i64 %7, 1, !dbg !9557
  %9 = tail call noalias i8* @malloc(i64 %8) nounwind, !dbg !9557
  %10 = tail call i8* @strcpy(i8* noalias %9, i8* noalias %path) nounwind, !dbg !9558
  %11 = ptrtoint i8* %9 to i64, !dbg !9559
  %12 = tail call i64 @klee_get_valuel(i64 %11) nounwind, !dbg !9559
  %13 = inttoptr i64 %12 to i8*, !dbg !9559
  %14 = icmp eq i8* %13, %9, !dbg !9562
  %15 = zext i1 %14 to i64, !dbg !9562
  tail call void @klee_assume(i64 %15) nounwind, !dbg !9562
  br label %bb.i, !dbg !9563

bb.i:                                             ; preds = %bb13.i, %bb1
  %sc.0.i = phi i8* [ %13, %bb1 ], [ %sc.1.i, %bb13.i ]
  %16 = phi i32 [ 0, %bb1 ], [ %29, %bb13.i ]
  %17 = load i8* %sc.0.i, align 1, !dbg !9564
  %18 = load i8* @UseConcretePath, align 1, !dbg !9565
  %toBool3not.i = icmp eq i8 %18, 0, !dbg !9565
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9565

bb7.i:                                            ; preds = %bb.i
  %tmp.i = add i32 %16, -1
  %19 = and i32 %tmp.i, %16, !dbg !9565
  %20 = icmp eq i32 %19, 0, !dbg !9565
  br i1 %20, label %bb8.i, label %bb12.i, !dbg !9565

bb8.i:                                            ; preds = %bb7.i
  switch i8 %17, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9566
  br label %__concretize_string.exit, !dbg !9566

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9567
  %21 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9567
  br label %bb13.i, !dbg !9567

bb12.i:                                           ; preds = %bb7.i, %bb.i
  %22 = sext i8 %17 to i64, !dbg !9568
  %23 = tail call i64 @klee_get_valuel(i64 %22) nounwind, !dbg !9568
  %24 = trunc i64 %23 to i8, !dbg !9568
  %25 = icmp eq i8 %24, %17, !dbg !9569
  %26 = zext i1 %25 to i64, !dbg !9569
  tail call void @klee_assume(i64 %26) nounwind, !dbg !9569
  store i8 %24, i8* %sc.0.i, align 1, !dbg !9570
  %27 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9570
  %28 = icmp eq i8 %24, 0, !dbg !9571
  br i1 %28, label %__concretize_string.exit, label %bb13.i, !dbg !9571

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %27, %bb12.i ], [ %21, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %29 = add i32 %16, 1, !dbg !9563
  br label %bb.i, !dbg !9563

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %30 = tail call i64 (i64, ...)* @syscall(i64 4, i8* %9, %struct.stat* %buf) nounwind, !dbg !9561
  %31 = trunc i64 %30 to i32, !dbg !9561
  %32 = icmp eq i32 %31, -1, !dbg !9572
  br i1 %32, label %bb2, label %bb3, !dbg !9572

bb2:                                              ; preds = %__concretize_string.exit
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9573
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9573
  store i32 %34, i32* %33, align 4, !dbg !9573
  br label %bb3, !dbg !9573

bb3:                                              ; preds = %bb2, %__concretize_string.exit
  tail call void @free(i8* %9) nounwind, !dbg !9574
  br label %bb4, !dbg !9575

bb4:                                              ; preds = %bb3, %bb
  %.0 = phi i32 [ 0, %bb ], [ %31, %bb3 ]
  ret i32 %.0, !dbg !9556
}

define i64 @write(i32 %fd, i8* %buf, i64 %count) nounwind {
entry:
  %0 = load i32* @n_calls.6018, align 4, !dbg !9576
  %1 = add nsw i32 %0, 1, !dbg !9576
  store i32 %1, i32* @n_calls.6018, align 4, !dbg !9576
  %2 = icmp ult i32 %fd, 32, !dbg !9577
  br i1 %2, label %bb.i, label %bb, !dbg !9577

bb.i:                                             ; preds = %entry
  %3 = sext i32 %fd to i64, !dbg !9579
  %4 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 1, !dbg !9580
  %5 = load i32* %4, align 4, !dbg !9580
  %6 = and i32 %5, 1
  %toBool.i = icmp eq i32 %6, 0, !dbg !9580
  br i1 %toBool.i, label %bb, label %__get_file.exit, !dbg !9580

__get_file.exit:                                  ; preds = %bb.i
  %7 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, !dbg !9579
  %8 = icmp eq %struct.exe_file_t* %7, null, !dbg !9581
  br i1 %8, label %bb, label %bb1, !dbg !9581

bb:                                               ; preds = %__get_file.exit, %bb.i, %entry
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9582
  store i32 9, i32* %9, align 4, !dbg !9582
  br label %bb33, !dbg !9583

bb1:                                              ; preds = %__get_file.exit
  %10 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9584
  %11 = icmp eq i32 %10, 0, !dbg !9584
  br i1 %11, label %bb4, label %bb2, !dbg !9584

bb2:                                              ; preds = %bb1
  %12 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !9584
  %13 = load i32* %12, align 4, !dbg !9584
  %14 = icmp eq i32 %13, %1, !dbg !9584
  br i1 %14, label %bb3, label %bb4, !dbg !9584

bb3:                                              ; preds = %bb2
  %15 = add i32 %10, -1, !dbg !9585
  store i32 %15, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !9585
  %16 = tail call i32* @__errno_location() nounwind readnone, !dbg !9586
  store i32 5, i32* %16, align 4, !dbg !9586
  br label %bb33, !dbg !9587

bb4:                                              ; preds = %bb2, %bb1
  %17 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 3, !dbg !9588
  %18 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9588
  %19 = icmp eq %struct.exe_disk_file_t* %18, null, !dbg !9588
  br i1 %19, label %bb5, label %bb20, !dbg !9588

bb5:                                              ; preds = %bb4
  %20 = ptrtoint i8* %buf to i64, !dbg !9589
  %21 = tail call i64 @klee_get_valuel(i64 %20) nounwind, !dbg !9589
  %22 = inttoptr i64 %21 to i8*, !dbg !9589
  %23 = icmp eq i8* %22, %buf, !dbg !9591
  %24 = zext i1 %23 to i64, !dbg !9591
  tail call void @klee_assume(i64 %24) nounwind, !dbg !9591
  %25 = tail call i64 @klee_get_valuel(i64 %count) nounwind, !dbg !9592
  %26 = icmp eq i64 %25, %count, !dbg !9594
  %27 = zext i1 %26 to i64, !dbg !9594
  tail call void @klee_assume(i64 %27) nounwind, !dbg !9594
  tail call void @klee_check_memory_access(i8* %22, i64 %25) nounwind, !dbg !9595
  %28 = tail call i32 @klee_zest_enabled() nounwind, !dbg !9596
  %29 = icmp eq i32 %28, 1, !dbg !9596
  %30 = zext i1 %29 to i8, !dbg !9596
  store i8 %30, i8* @UseConcretePath, align 1, !dbg !9596
  %.not = xor i1 %29, true
  %31 = icmp eq i64 %25, 0, !dbg !9597
  %or.cond = or i1 %31, %.not
  br i1 %or.cond, label %bb10, label %bb7, !dbg !9597

bb7:                                              ; preds = %bb5
  %32 = tail call noalias i8* @malloc(i64 %25) nounwind, !dbg !9598
  %33 = icmp eq i8* %32, null, !dbg !9599
  br i1 %33, label %bb8, label %bb9, !dbg !9599

bb8:                                              ; preds = %bb7
  tail call void @__assert_fail(i8* getelementptr inbounds ([5 x i8]* @.str45353, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 636, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9599

bb9:                                              ; preds = %bb7
  %34 = call i8* @memcpy(i8* %32, i8* %22, i64 %25)
  %35 = trunc i64 %25 to i32, !dbg !9600
  %36 = ptrtoint i8* %32 to i64, !dbg !9601
  %37 = tail call i64 @klee_get_valuel(i64 %36) nounwind, !dbg !9601
  %38 = inttoptr i64 %37 to i8*, !dbg !9601
  %39 = icmp eq i8* %38, %32, !dbg !9603
  %40 = zext i1 %39 to i64, !dbg !9603
  tail call void @klee_assume(i64 %40) nounwind, !dbg !9603
  %41 = icmp eq i32 %35, 0, !dbg !9604
  br i1 %41, label %bb10, label %bb.lr.ph.i, !dbg !9604

bb.lr.ph.i:                                       ; preds = %bb9
  %tmp1 = and i64 %25, 4294967295
  br label %bb.i35

bb.i35:                                           ; preds = %bb.i35, %bb.lr.ph.i
  %indvar.i = phi i64 [ 0, %bb.lr.ph.i ], [ %indvar.next.i, %bb.i35 ]
  %sc.04.i = getelementptr i8* %38, i64 %indvar.i
  %42 = load i8* %sc.04.i, align 1, !dbg !9605
  %43 = sext i8 %42 to i64, !dbg !9606
  %44 = tail call i64 @klee_get_valuel(i64 %43) nounwind, !dbg !9606
  %45 = trunc i64 %44 to i8, !dbg !9606
  %46 = icmp eq i8 %45, %42, !dbg !9607
  %47 = zext i1 %46 to i64, !dbg !9607
  tail call void @klee_assume(i64 %47) nounwind, !dbg !9607
  store i8 %45, i8* %sc.04.i, align 1, !dbg !9608
  %indvar.next.i = add i64 %indvar.i, 1
  %exitcond2 = icmp eq i64 %indvar.next.i, %tmp1
  br i1 %exitcond2, label %bb10, label %bb.i35, !dbg !9604

bb10:                                             ; preds = %bb.i35, %bb9, %bb5
  %cbuf.0 = phi i8* [ null, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %buf_addr.0 = phi i8* [ %22, %bb5 ], [ %32, %bb9 ], [ %32, %bb.i35 ]
  %48 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 0, !dbg !9609
  %49 = load i32* %48, align 8, !dbg !9609
  %50 = add i32 %49, -1, !dbg !9609
  %51 = icmp ult i32 %50, 2, !dbg !9609
  br i1 %51, label %bb11, label %bb12, !dbg !9609

bb11:                                             ; preds = %bb10
  %52 = tail call i64 (i64, ...)* @syscall(i64 1, i32 %49, i8* %buf_addr.0, i64 %25) nounwind, !dbg !9610
  br label %bb13, !dbg !9610

bb12:                                             ; preds = %bb10
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9611
  %54 = load i64* %53, align 8, !dbg !9611
  %55 = tail call i64 (i64, ...)* @syscall(i64 18, i32 %49, i8* %buf_addr.0, i64 %25, i64 %54) nounwind, !dbg !9611
  br label %bb13, !dbg !9611

bb13:                                             ; preds = %bb12, %bb11
  %r.0.in = phi i64 [ %52, %bb11 ], [ %55, %bb12 ]
  %r.0 = trunc i64 %r.0.in to i32
  tail call void @free(i8* %cbuf.0) nounwind, !dbg !9612
  %56 = icmp eq i32 %r.0, -1, !dbg !9613
  br i1 %56, label %bb14, label %bb15, !dbg !9613

bb14:                                             ; preds = %bb13
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9614
  %58 = tail call i32 @klee_get_errno() nounwind, !dbg !9614
  store i32 %58, i32* %57, align 4, !dbg !9614
  br label %bb33, !dbg !9615

bb15:                                             ; preds = %bb13
  %59 = icmp slt i32 %r.0, 0, !dbg !9616
  br i1 %59, label %bb16, label %bb17, !dbg !9616

bb16:                                             ; preds = %bb15
  tail call void @__assert_fail(i8* getelementptr inbounds ([7 x i8]* @.str46354, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 650, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9616

bb17:                                             ; preds = %bb15
  %60 = load i32* %48, align 8, !dbg !9617
  %61 = add i32 %60, -1, !dbg !9617
  %62 = icmp ugt i32 %61, 1, !dbg !9617
  br i1 %62, label %bb18, label %bb17.bb19_crit_edge, !dbg !9617

bb17.bb19_crit_edge:                              ; preds = %bb17
  %.pre = sext i32 %r.0 to i64, !dbg !9618
  br label %bb33

bb18:                                             ; preds = %bb17
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9619
  %64 = load i64* %63, align 8, !dbg !9619
  %65 = sext i32 %r.0 to i64, !dbg !9619
  %66 = add nsw i64 %64, %65, !dbg !9619
  store i64 %66, i64* %63, align 8, !dbg !9619
  br label %bb33, !dbg !9619

bb20:                                             ; preds = %bb4
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %3, i32 2, !dbg !9620
  %68 = load i64* %67, align 8, !dbg !9620
  %69 = add i64 %68, %count, !dbg !9620
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 0, !dbg !9620
  %71 = load i32* %70, align 8, !dbg !9620
  %72 = zext i32 %71 to i64, !dbg !9620
  %73 = icmp ugt i64 %69, %72, !dbg !9620
  br i1 %73, label %bb22, label %bb26, !dbg !9620

bb22:                                             ; preds = %bb20
  %74 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !9621
  %75 = icmp eq i32 %74, 0, !dbg !9621
  br i1 %75, label %bb24, label %bb23, !dbg !9621

bb23:                                             ; preds = %bb22
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str17325, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str16324, i64 0, i64 0), i32 663, i8* getelementptr inbounds ([6 x i8]* @__PRETTY_FUNCTION__.6022, i64 0, i64 0)) nor
  unreachable, !dbg !9622

bb24:                                             ; preds = %bb22
  %76 = icmp slt i64 %68, %72, !dbg !9623
  br i1 %76, label %bb25, label %bb28, !dbg !9623

bb25:                                             ; preds = %bb24
  %77 = sub nsw i64 %72, %68, !dbg !9624
  br label %bb26, !dbg !9624

bb26:                                             ; preds = %bb25, %bb20
  %actual_count.0 = phi i64 [ %77, %bb25 ], [ %count, %bb20 ]
  %78 = icmp eq i64 %actual_count.0, 0, !dbg !9625
  br i1 %78, label %bb28, label %bb27, !dbg !9625

bb27:                                             ; preds = %bb26
  %79 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 0, i32 1, !dbg !9626
  %80 = load i8** %79, align 8, !dbg !9626
  %81 = getelementptr inbounds i8* %80, i64 %68, !dbg !9626
  %82 = call i8* @memcpy(i8* %81, i8* %buf, i64 %actual_count.0)
  br label %bb28, !dbg !9626

bb28:                                             ; preds = %bb27, %bb26, %bb24
  %actual_count.036 = phi i64 [ 0, %bb26 ], [ %actual_count.0, %bb27 ], [ 0, %bb24 ]
  %83 = icmp eq i64 %actual_count.036, %count, !dbg !9627
  br i1 %83, label %bb30, label %bb29, !dbg !9627

bb29:                                             ; preds = %bb28
  %84 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9628
  %85 = bitcast %struct.FILE* %84 to i8*, !dbg !9628
  %86 = tail call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([33 x i8]* @.str47355, i64 0, i64 0), i64 1, i64 32, i8* %85) nounwind, !dbg !9628
  br label %bb30, !dbg !9628

bb30:                                             ; preds = %bb29, %bb28
  %87 = load %struct.exe_disk_file_t** %17, align 8, !dbg !9629
  %88 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !9629
  %89 = icmp eq %struct.exe_disk_file_t* %87, %88, !dbg !9629
  br i1 %89, label %bb31, label %bb32, !dbg !9629

bb31:                                             ; preds = %bb30
  %90 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9630
  %91 = trunc i64 %actual_count.036 to i32, !dbg !9630
  %92 = add i32 %90, %91, !dbg !9630
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 8, !dbg !9630
  br label %bb32, !dbg !9630

bb32:                                             ; preds = %bb31, %bb30
  %93 = load i64* %67, align 8, !dbg !9631
  %94 = add i64 %93, %count, !dbg !9631
  store i64 %94, i64* %67, align 8, !dbg !9631
  br label %bb33, !dbg !9632

bb33:                                             ; preds = %bb32, %bb18, %bb17.bb19_crit_edge, %bb14, %bb3, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb3 ], [ -1, %bb14 ], [ %count, %bb32 ], [ %.pre, %bb17.bb19_crit_edge ], [ %65, %bb18 ]
  ret i64 %.0, !dbg !9583
}

declare i64 @strtol(i8* noalias, i8** noalias nocapture, i32) nounwind

define i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %buffer = alloca [1024 x i8], align 1
  br label %bb2, !dbg !9633

bb:                                               ; preds = %bb2
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %0 = load i32* %scevgep, align 4, !dbg !9634
  %1 = and i32 %0, 1, !dbg !9634
  %2 = icmp eq i32 %1, 0, !dbg !9634
  br i1 %2, label %bb5, label %bb1, !dbg !9634

bb1:                                              ; preds = %bb
  %indvar.next = add i64 %indvar, 1
  br label %bb2, !dbg !9633

bb2:                                              ; preds = %bb1, %entry
  %indvar = phi i64 [ %indvar.next, %bb1 ], [ 0, %entry ]
  %fd.0 = trunc i64 %indvar to i32
  %3 = icmp slt i32 %fd.0, 32, !dbg !9633
  br i1 %3, label %bb, label %bb3, !dbg !9633

bb3:                                              ; preds = %bb2
  %4 = icmp eq i32 %fd.0, 32, !dbg !9635
  br i1 %4, label %bb4, label %bb5, !dbg !9635

bb4:                                              ; preds = %bb3
  %5 = call i32* @__errno_location() nounwind readnone, !dbg !9636
  store i32 24, i32* %5, align 4, !dbg !9636
  br label %bb36, !dbg !9637

bb5:                                              ; preds = %bb3, %bb
  %6 = sext i32 %fd.0 to i64, !dbg !9638
  %7 = and i32 %flags, 3, !dbg !9639
  %8 = icmp eq i32 %7, 0, !dbg !9639
  %9 = zext i1 %8 to i8, !dbg !9639
  %10 = call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 %flags, i8 zeroext %9) nounwind, !dbg !9639
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9640
  br i1 %11, label %bb16, label %bb6, !dbg !9640

bb6:                                              ; preds = %bb5
  %12 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 3, !dbg !9641
  store %struct.exe_disk_file_t* %10, %struct.exe_disk_file_t** %12, align 8, !dbg !9641
  %13 = and i32 %flags, 192
  switch i32 %13, label %bb12 [
    i32 192, label %bb8
    i32 128, label %bb11
  ]

bb8:                                              ; preds = %bb6
  %14 = call i32* @__errno_location() nounwind readnone, !dbg !9642
  store i32 17, i32* %14, align 4, !dbg !9642
  br label %bb36, !dbg !9643

bb11:                                             ; preds = %bb6
  %15 = load %struct.FILE** bitcast (%4** @stderr to %struct.FILE**), align 8, !dbg !9644
  %16 = bitcast %struct.FILE* %15 to i8*, !dbg !9644
  %17 = call i64 bitcast (i64 (i8*, i64, i64, %4*)* @fwrite_unlocked to i64 (i8*, i64, i64, i8*)*)(i8* getelementptr inbounds ([47 x i8]* @.str48356, i64 0, i64 0), i64 1, i64 46, i8* %16) nounwind, !dbg !9644
  %18 = call i32* @__errno_location() nounwind readnone, !dbg !9645
  store i32 13, i32* %18, align 4, !dbg !9645
  br label %bb36, !dbg !9646

bb12:                                             ; preds = %bb6
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %10, i64 0, i32 3, !dbg !9647
  %20 = load %struct.stat** %19, align 8, !dbg !9647
  %21 = getelementptr inbounds %struct.stat* %20, i64 0, i32 3, !dbg !9648
  %22 = load i32* %21, align 8, !dbg !9648
  %23 = and i32 %flags, 2, !dbg !9649
  %24 = icmp eq i32 %23, 0, !dbg !9649
  br i1 %24, label %bb9.i, label %bb7.i, !dbg !9650

bb7.i:                                            ; preds = %bb12
  %25 = and i32 %22, 292, !dbg !9650
  %26 = icmp eq i32 %25, 0, !dbg !9650
  br i1 %26, label %bb9.i, label %bb13, !dbg !9650

bb9.i:                                            ; preds = %bb7.i, %bb12
  br i1 %8, label %bb14, label %bb10.i, !dbg !9651

bb10.i:                                           ; preds = %bb9.i
  %27 = and i32 %22, 146, !dbg !9651
  %28 = icmp eq i32 %27, 0, !dbg !9651
  br i1 %28, label %bb13, label %bb14, !dbg !9651

bb13:                                             ; preds = %bb10.i, %bb7.i
  %29 = call i32* @__errno_location() nounwind readnone, !dbg !9652
  store i32 13, i32* %29, align 4, !dbg !9652
  br label %bb36, !dbg !9653

bb14:                                             ; preds = %bb10.i, %bb9.i
  %30 = and i32 %22, -512, !dbg !9654
  %31 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 1), align 8, !dbg !9654
  %not = xor i32 %31, -1, !dbg !9654
  %32 = and i32 %not, %mode, !dbg !9654
  %33 = or i32 %32, %30, !dbg !9654
  store i32 %33, i32* %21, align 8, !dbg !9654
  br label %bb30, !dbg !9654

bb16:                                             ; preds = %bb5
  %34 = ptrtoint i8* %pathname to i64, !dbg !9655
  %35 = call i64 @klee_get_valuel(i64 %34) nounwind, !dbg !9655
  %36 = inttoptr i64 %35 to i8*, !dbg !9655
  %37 = icmp eq i8* %36, %pathname, !dbg !9658
  %38 = zext i1 %37 to i64, !dbg !9658
  call void @klee_assume(i64 %38) nounwind, !dbg !9658
  br label %bb.i42, !dbg !9659

bb.i42:                                           ; preds = %bb13.i, %bb16
  %sc.0.i = phi i8* [ %36, %bb16 ], [ %sc.1.i, %bb13.i ]
  %39 = phi i32 [ 0, %bb16 ], [ %52, %bb13.i ]
  %40 = load i8* %sc.0.i, align 1, !dbg !9660
  %41 = load i8* @UseConcretePath, align 1, !dbg !9661
  %toBool3not.i = icmp eq i8 %41, 0, !dbg !9661
  br i1 %toBool3not.i, label %bb7.i43, label %bb12.i45, !dbg !9661

bb7.i43:                                          ; preds = %bb.i42
  %tmp.i = add i32 %39, -1
  %42 = and i32 %tmp.i, %39, !dbg !9661
  %43 = icmp eq i32 %42, 0, !dbg !9661
  br i1 %43, label %bb8.i, label %bb12.i45, !dbg !9661

bb8.i:                                            ; preds = %bb7.i43
  switch i8 %40, label %bb13.i [
    i8 0, label %bb9.i44
    i8 47, label %bb11.i
  ]

bb9.i44:                                          ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9662
  br label %__concretize_string.exit, !dbg !9662

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9663
  %44 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9663
  br label %bb13.i, !dbg !9663

bb12.i45:                                         ; preds = %bb7.i43, %bb.i42
  %45 = sext i8 %40 to i64, !dbg !9664
  %46 = call i64 @klee_get_valuel(i64 %45) nounwind, !dbg !9664
  %47 = trunc i64 %46 to i8, !dbg !9664
  %48 = icmp eq i8 %47, %40, !dbg !9665
  %49 = zext i1 %48 to i64, !dbg !9665
  call void @klee_assume(i64 %49) nounwind, !dbg !9665
  store i8 %47, i8* %sc.0.i, align 1, !dbg !9666
  %50 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9666
  %51 = icmp eq i8 %47, 0, !dbg !9667
  br i1 %51, label %__concretize_string.exit, label %bb13.i, !dbg !9667

bb13.i:                                           ; preds = %bb12.i45, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %50, %bb12.i45 ], [ %44, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %52 = add i32 %39, 1, !dbg !9659
  br label %bb.i42, !dbg !9659

__concretize_string.exit:                         ; preds = %bb12.i45, %bb9.i44
  %53 = call i32 @strncmp(i8* %pathname, i8* getelementptr inbounds ([15 x i8]* @.str49357, i64 0, i64 0), i64 14) nounwind readonly, !dbg !9668
  %54 = icmp eq i32 %53, 0, !dbg !9668
  br i1 %54, label %bb17, label %bb26, !dbg !9668

bb17:                                             ; preds = %__concretize_string.exit
  %55 = getelementptr inbounds i8* %pathname, i64 14, !dbg !9669
  %56 = call i64 @strtol(i8* noalias nocapture %55, i8** noalias null, i32 10) nounwind, !dbg !9670
  %57 = trunc i64 %56 to i32, !dbg !9670
  %58 = icmp ult i32 %57, 32, !dbg !9672
  br i1 %58, label %bb.i, label %bb25, !dbg !9672

bb.i:                                             ; preds = %bb17
  %59 = sext i32 %57 to i64, !dbg !9674
  %60 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 1, !dbg !9675
  %61 = load i32* %60, align 4, !dbg !9675
  %62 = and i32 %61, 1
  %toBool.i = icmp eq i32 %62, 0, !dbg !9675
  br i1 %toBool.i, label %bb25, label %__get_file.exit, !dbg !9675

__get_file.exit:                                  ; preds = %bb.i
  %63 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, !dbg !9674
  %64 = icmp eq %struct.exe_file_t* %63, null, !dbg !9676
  br i1 %64, label %bb25, label %bb19, !dbg !9676

bb19:                                             ; preds = %__get_file.exit
  %65 = call i8* @strchr(i8* %55, i32 47) nounwind readonly, !dbg !9677
  %66 = icmp eq i8* %65, null, !dbg !9678
  %. = select i1 %66, i8* getelementptr inbounds ([1 x i8]* @.str50358, i64 0, i64 0), i8* %65
  %67 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %59, i32 0, !dbg !9678
  %68 = load i32* %67, align 8, !dbg !9678
  %buffer23 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 0, !dbg !9678
  %69 = call i32 (i8*, i64, i8*, ...)* @snprintf(i8* noalias %buffer23, i64 1023, i8* noalias getelementptr inbounds ([19 x i8]* @.str51359, i64 0, i64 0), i32 %68, i8* %.) nounwind, !dbg !9678
  %70 = getelementptr inbounds [1024 x i8]* %buffer, i64 0, i64 1023, !dbg !9679
  store i8 0, i8* %70, align 1, !dbg !9679
  %71 = call i64 (i64, ...)* @syscall(i64 2, i8* %buffer23, i32 %flags, i32 %mode) nounwind, !dbg !9680
  br label %bb27, !dbg !9680

bb25:                                             ; preds = %__get_file.exit, %bb.i, %bb17
  %72 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9681
  br label %bb27, !dbg !9681

bb26:                                             ; preds = %__concretize_string.exit
  %73 = call i64 (i64, ...)* @syscall(i64 2, i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9682
  br label %bb27, !dbg !9682

bb27:                                             ; preds = %bb26, %bb25, %bb19
  %os_fd.0.in = phi i64 [ %71, %bb19 ], [ %72, %bb25 ], [ %73, %bb26 ]
  %os_fd.0 = trunc i64 %os_fd.0.in to i32
  %74 = icmp eq i32 %os_fd.0, -1, !dbg !9683
  br i1 %74, label %bb28, label %bb29, !dbg !9683

bb28:                                             ; preds = %bb27
  %75 = call i32* @__errno_location() nounwind readnone, !dbg !9684
  %76 = call i32 @klee_get_errno() nounwind, !dbg !9684
  store i32 %76, i32* %75, align 4, !dbg !9684
  br label %bb36, !dbg !9685

bb29:                                             ; preds = %bb27
  %77 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 0, !dbg !9686
  store i32 %os_fd.0, i32* %77, align 8, !dbg !9686
  br label %bb30, !dbg !9686

bb30:                                             ; preds = %bb29, %bb14
  %78 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %6, i32 1, !dbg !9687
  store i32 1, i32* %78, align 4, !dbg !9687
  br i1 %8, label %bb31, label %bb32, !dbg !9688

bb31:                                             ; preds = %bb30
  store i32 5, i32* %78, align 4, !dbg !9689
  br label %bb36, !dbg !9689

bb32:                                             ; preds = %bb30
  %79 = icmp eq i32 %7, 1, !dbg !9690
  br i1 %79, label %bb33, label %bb34, !dbg !9690

bb33:                                             ; preds = %bb32
  store i32 9, i32* %78, align 4, !dbg !9691
  br label %bb36, !dbg !9691

bb34:                                             ; preds = %bb32
  store i32 13, i32* %78, align 4, !dbg !9692
  br label %bb36, !dbg !9692

bb36:                                             ; preds = %bb34, %bb33, %bb31, %bb28, %bb13, %bb11, %bb8, %bb4
  %.0 = phi i32 [ -1, %bb4 ], [ -1, %bb8 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb28 ], [ %fd.0, %bb34 ], [ %fd.0, %bb33 ], [ %fd.0, %bb31 ]
  ret i32 %.0, !dbg !9637
}

declare i32 @snprintf(i8* nocapture, i64, i8* nocapture, ...) nounwind

define i32 @__fd_openat(i32 %basefd, i8* %pathname, i32 %flags, i32 %mode) nounwind {
entry:
  %0 = icmp eq i32 %basefd, -100, !dbg !9693
  br i1 %0, label %bb5, label %bb, !dbg !9693

bb:                                               ; preds = %entry
  %1 = icmp ult i32 %basefd, 32, !dbg !9694
  br i1 %1, label %bb.i, label %bb1, !dbg !9694

bb.i:                                             ; preds = %bb
  %2 = sext i32 %basefd to i64, !dbg !9696
  %3 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 1, !dbg !9697
  %4 = load i32* %3, align 4, !dbg !9697
  %5 = and i32 %4, 1
  %toBool.i = icmp eq i32 %5, 0, !dbg !9697
  br i1 %toBool.i, label %bb1, label %__get_file.exit, !dbg !9697

__get_file.exit:                                  ; preds = %bb.i
  %6 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, !dbg !9696
  %7 = icmp eq %struct.exe_file_t* %6, null, !dbg !9698
  br i1 %7, label %bb1, label %bb2, !dbg !9698

bb1:                                              ; preds = %__get_file.exit, %bb.i, %bb
  %8 = tail call i32* @__errno_location() nounwind readnone, !dbg !9699
  store i32 9, i32* %8, align 4, !dbg !9699
  br label %bb21, !dbg !9700

bb2:                                              ; preds = %__get_file.exit
  %9 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 3, !dbg !9701
  %10 = load %struct.exe_disk_file_t** %9, align 8, !dbg !9701
  %11 = icmp eq %struct.exe_disk_file_t* %10, null, !dbg !9701
  br i1 %11, label %bb4, label %bb3, !dbg !9701

bb3:                                              ; preds = %bb2
  tail call void @klee_warning(i8* getelementptr inbounds ([44 x i8]* @.str52360, i64 0, i64 0)) nounwind, !dbg !9702
  %12 = tail call i32* @__errno_location() nounwind readnone, !dbg !9703
  store i32 2, i32* %12, align 4, !dbg !9703
  br label %bb21, !dbg !9704

bb4:                                              ; preds = %bb2
  %13 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %2, i32 0, !dbg !9705
  %14 = load i32* %13, align 8, !dbg !9705
  %phitmp = sext i32 %14 to i64
  br label %bb5, !dbg !9705

bb5:                                              ; preds = %bb4, %entry
  %basefd_addr.0 = phi i64 [ %phitmp, %bb4 ], [ -100, %entry ]
  %15 = tail call fastcc %struct.exe_disk_file_t* @__get_sym_file_internal(i8* %pathname, i32 0, i8 zeroext 1) nounwind, !dbg !9706
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !9707
  br i1 %16, label %bb10, label %bb6, !dbg !9707

bb6:                                              ; preds = %bb5
  %17 = tail call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode) nounwind, !dbg !9708
  br label %bb21, !dbg !9708

bb8:                                              ; preds = %bb10
  %scevgep = getelementptr %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %indvar, i32 1
  %18 = load i32* %scevgep, align 4, !dbg !9709
  %19 = and i32 %18, 1, !dbg !9709
  %20 = icmp eq i32 %19, 0, !dbg !9709
  br i1 %20, label %bb13, label %bb9, !dbg !9709

bb9:                                              ; preds = %bb8
  %indvar.next = add i64 %indvar, 1
  br label %bb10, !dbg !9710

bb10:                                             ; preds = %bb9, %bb5
  %indvar = phi i64 [ %indvar.next, %bb9 ], [ 0, %bb5 ]
  %fd.0 = trunc i64 %indvar to i32
  %21 = icmp slt i32 %fd.0, 32, !dbg !9710
  br i1 %21, label %bb8, label %bb11, !dbg !9710

bb11:                                             ; preds = %bb10
  %22 = icmp eq i32 %fd.0, 32, !dbg !9711
  br i1 %22, label %bb12, label %bb13, !dbg !9711

bb12:                                             ; preds = %bb11
  %23 = tail call i32* @__errno_location() nounwind readnone, !dbg !9712
  store i32 24, i32* %23, align 4, !dbg !9712
  br label %bb21, !dbg !9713

bb13:                                             ; preds = %bb11, %bb8
  %24 = sext i32 %fd.0 to i64, !dbg !9714
  %25 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, !dbg !9714
  %26 = bitcast %struct.exe_file_t* %25 to i8*, !dbg !9715
  %27 = call i8* @memset(i8* %26, i32 0, i64 56)
  %28 = sext i32 %flags to i64, !dbg !9716
  %29 = ptrtoint i8* %pathname to i64, !dbg !9717
  %30 = tail call i64 @klee_get_valuel(i64 %29) nounwind, !dbg !9717
  %31 = inttoptr i64 %30 to i8*, !dbg !9717
  %32 = icmp eq i8* %31, %pathname, !dbg !9719
  %33 = zext i1 %32 to i64, !dbg !9719
  tail call void @klee_assume(i64 %33) nounwind, !dbg !9719
  br label %bb.i23, !dbg !9720

bb.i23:                                           ; preds = %bb13.i, %bb13
  %sc.0.i = phi i8* [ %31, %bb13 ], [ %sc.1.i, %bb13.i ]
  %34 = phi i32 [ 0, %bb13 ], [ %47, %bb13.i ]
  %35 = load i8* %sc.0.i, align 1, !dbg !9721
  %36 = load i8* @UseConcretePath, align 1, !dbg !9722
  %toBool3not.i = icmp eq i8 %36, 0, !dbg !9722
  br i1 %toBool3not.i, label %bb7.i, label %bb12.i, !dbg !9722

bb7.i:                                            ; preds = %bb.i23
  %tmp.i = add i32 %34, -1
  %37 = and i32 %tmp.i, %34, !dbg !9722
  %38 = icmp eq i32 %37, 0, !dbg !9722
  br i1 %38, label %bb8.i, label %bb12.i, !dbg !9722

bb8.i:                                            ; preds = %bb7.i
  switch i8 %35, label %bb13.i [
    i8 0, label %bb9.i
    i8 47, label %bb11.i
  ]

bb9.i:                                            ; preds = %bb8.i
  store i8 0, i8* %sc.0.i, align 1, !dbg !9723
  br label %__concretize_string.exit, !dbg !9723

bb11.i:                                           ; preds = %bb8.i
  store i8 47, i8* %sc.0.i, align 1, !dbg !9724
  %39 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9724
  br label %bb13.i, !dbg !9724

bb12.i:                                           ; preds = %bb7.i, %bb.i23
  %40 = sext i8 %35 to i64, !dbg !9725
  %41 = tail call i64 @klee_get_valuel(i64 %40) nounwind, !dbg !9725
  %42 = trunc i64 %41 to i8, !dbg !9725
  %43 = icmp eq i8 %42, %35, !dbg !9726
  %44 = zext i1 %43 to i64, !dbg !9726
  tail call void @klee_assume(i64 %44) nounwind, !dbg !9726
  store i8 %42, i8* %sc.0.i, align 1, !dbg !9727
  %45 = getelementptr inbounds i8* %sc.0.i, i64 1, !dbg !9727
  %46 = icmp eq i8 %42, 0, !dbg !9728
  br i1 %46, label %__concretize_string.exit, label %bb13.i, !dbg !9728

bb13.i:                                           ; preds = %bb12.i, %bb11.i, %bb8.i
  %sc.1.i = phi i8* [ %45, %bb12.i ], [ %39, %bb11.i ], [ %sc.0.i, %bb8.i ]
  %47 = add i32 %34, 1, !dbg !9720
  br label %bb.i23, !dbg !9720

__concretize_string.exit:                         ; preds = %bb12.i, %bb9.i
  %48 = tail call i64 (i64, ...)* @syscall(i64 257, i64 %basefd_addr.0, i8* %pathname, i64 %28, i32 %mode) nounwind, !dbg !9716
  %49 = trunc i64 %48 to i32, !dbg !9716
  %50 = icmp eq i32 %49, -1, !dbg !9729
  br i1 %50, label %bb14, label %bb15, !dbg !9729

bb14:                                             ; preds = %__concretize_string.exit
  %51 = tail call i32* @__errno_location() nounwind readnone, !dbg !9730
  %52 = tail call i32 @klee_get_errno() nounwind, !dbg !9730
  store i32 %52, i32* %51, align 4, !dbg !9730
  br label %bb21, !dbg !9731

bb15:                                             ; preds = %__concretize_string.exit
  %53 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 0, !dbg !9732
  store i32 %49, i32* %53, align 8, !dbg !9732
  %54 = getelementptr inbounds %struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 %24, i32 1, !dbg !9733
  store i32 1, i32* %54, align 4, !dbg !9733
  %55 = and i32 %flags, 3, !dbg !9734
  switch i32 %55, label %bb19 [
    i32 0, label %bb16
    i32 1, label %bb18
  ]

bb16:                                             ; preds = %bb15
  store i32 5, i32* %54, align 4, !dbg !9735
  br label %bb21, !dbg !9735

bb18:                                             ; preds = %bb15
  store i32 9, i32* %54, align 4, !dbg !9736
  br label %bb21, !dbg !9736

bb19:                                             ; preds = %bb15
  store i32 13, i32* %54, align 4, !dbg !9737
  br label %bb21, !dbg !9737

bb21:                                             ; preds = %bb19, %bb18, %bb16, %bb14, %bb12, %bb6, %bb3, %bb1
  %.0 = phi i32 [ -1, %bb1 ], [ -1, %bb3 ], [ %17, %bb6 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %fd.0, %bb19 ], [ %fd.0, %bb18 ], [ %fd.0, %bb16 ]
  ret i32 %.0, !dbg !9700
}

define weak i32 @__syscall_rt_sigaction(i32 %signum, %struct.sigaction* %act, %struct.sigaction* %oldact, i64 %_something) nounwind {
entry:
  tail call void @klee_warning_once(i8* getelementptr inbounds ([18 x i8]* @.str20404, i64 0, i64 0)) nounwind, !dbg !9738
  ret i32 0, !dbg !9740
}

define weak i32 @_IO_getc(%struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (%4*)* @__fgetc_unlocked to i32 (%struct.FILE*)*)(%struct.FILE* %f) nounwind, !dbg !9741
  ret i32 %0, !dbg !9741
}

define weak i32 @_IO_putc(i32 %c, %struct.FILE* %f) nounwind {
entry:
  %0 = tail call i32 bitcast (i32 (i32, %4*)* @__fputc_unlocked to i32 (i32, %struct.FILE*)*)(i32 %c, %struct.FILE* %f) nounwind, !dbg !9743
  ret i32 %0, !dbg !9743
}

define weak i32 @rename(i8* %oldpath, i8* %newpath) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([48 x i8]* @.str11395, i64 0, i64 0)) nounwind, !dbg !9745
  %0 = tail call i64 (i64, ...)* @syscall(i64 82, i8* %oldpath, i8* %newpath) nounwind, !dbg !9746
  %1 = trunc i64 %0 to i32, !dbg !9746
  %2 = icmp eq i32 %1, -1, !dbg !9747
  br i1 %2, label %bb, label %bb1, !dbg !9747

bb:                                               ; preds = %entry
  %3 = tail call i32* @__errno_location() nounwind readnone, !dbg !9748
  %4 = tail call i32 @klee_get_errno() nounwind, !dbg !9748
  store i32 %4, i32* %3, align 4, !dbg !9748
  br label %bb1, !dbg !9748

bb1:                                              ; preds = %bb, %entry
  ret i32 %1, !dbg !9749
}

define weak i32 @clock_gettime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  %tv = alloca %struct.timespec, align 8
  %0 = call i32 @gettimeofday(%struct.timespec* noalias %tv, %struct.__mbstate_t* noalias null) nounwind, !dbg !9750
  %1 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 0, !dbg !9751
  %2 = load i64* %1, align 8, !dbg !9751
  %3 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 0, !dbg !9751
  store i64 %2, i64* %3, align 8, !dbg !9751
  %4 = getelementptr inbounds %struct.timespec* %tv, i64 0, i32 1, !dbg !9752
  %5 = load i64* %4, align 8, !dbg !9752
  %6 = mul nsw i64 %5, 1000, !dbg !9752
  %7 = getelementptr inbounds %struct.timespec* %res, i64 0, i32 1, !dbg !9752
  store i64 %6, i64* %7, align 8, !dbg !9752
  ret i32 0, !dbg !9753
}

define weak i32 @clock_settime(i32 %clk_id, %struct.timespec* %res) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([17 x i8]* @.str4389, i64 0, i64 0)) nounwind, !dbg !9754
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9756
  store i32 1, i32* %0, align 4, !dbg !9756
  ret i32 -1, !dbg !9757
}

define i32 @strverscmp(i8* nocapture %__s1, i8* nocapture %__s2) nounwind readonly {
entry:
  %0 = tail call i32 @strcmp(i8* %__s1, i8* %__s2) nounwind readonly, !dbg !9758
  ret i32 %0, !dbg !9759
}

define weak i32 @gnu_dev_major(i64 %__dev) nounwind readnone {
entry:
  %int_cast_to_i64 = bitcast i64 8 to i64
  %0 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %0, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %1 = lshr i64 %__dev, 8, !dbg !9760
  %2 = trunc i64 %1 to i32, !dbg !9760
  %3 = and i32 %2, 4095, !dbg !9760
  %int_cast_to_i641 = bitcast i64 32 to i64
  %4 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %4, label %klee_overshift_check.exit3, label %bb.i2

bb.i2:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit3:                       ; preds = %klee_overshift_check.exit
  %5 = lshr i64 %__dev, 32, !dbg !9760
  %6 = trunc i64 %5 to i32, !dbg !9760
  %7 = and i32 %6, -4096, !dbg !9760
  %8 = or i32 %3, %7, !dbg !9760
  ret i32 %8, !dbg !9760
}

define weak i32 @gnu_dev_minor(i64 %__dev) nounwind readnone {
entry:
  %0 = trunc i64 %__dev to i32, !dbg !9762
  %1 = and i32 %0, 255, !dbg !9762
  %int_cast_to_i64 = bitcast i64 12 to i64
  %2 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %2, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %3 = lshr i64 %__dev, 12, !dbg !9762
  %4 = trunc i64 %3 to i32, !dbg !9762
  %5 = and i32 %4, -256, !dbg !9762
  %6 = or i32 %5, %1, !dbg !9762
  ret i32 %6, !dbg !9762
}

define weak i64 @gnu_dev_makedev(i32 %__major, i32 %__minor) nounwind readnone {
entry:
  %0 = and i32 %__minor, 255, !dbg !9764
  %int_cast_to_i64 = zext i32 8 to i64
  %1 = icmp ult i64 %int_cast_to_i64, 32
  br i1 %1, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %entry
  %2 = shl i32 %__major, 8
  %3 = and i32 %2, 1048320, !dbg !9764
  %4 = or i32 %0, %3, !dbg !9764
  %5 = zext i32 %4 to i64, !dbg !9764
  %6 = zext i32 %__minor to i64, !dbg !9764
  %int_cast_to_i641 = bitcast i64 12 to i64
  %7 = icmp ult i64 %int_cast_to_i641, 64
  br i1 %7, label %klee_overshift_check.exit4, label %bb.i3

bb.i3:                                            ; preds = %klee_overshift_check.exit
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit4:                       ; preds = %klee_overshift_check.exit
  %8 = shl nuw nsw i64 %6, 12
  %9 = and i64 %8, 17592184995840, !dbg !9764
  %10 = zext i32 %__major to i64, !dbg !9764
  %int_cast_to_i642 = bitcast i64 32 to i64
  %11 = icmp ult i64 %int_cast_to_i642, 64
  br i1 %11, label %klee_overshift_check.exit6, label %bb.i5

bb.i5:                                            ; preds = %klee_overshift_check.exit4
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit6:                       ; preds = %klee_overshift_check.exit4
  %12 = shl nuw i64 %10, 32
  %13 = and i64 %12, -17592186044416, !dbg !9764
  %14 = or i64 %5, %13, !dbg !9764
  %15 = or i64 %14, %9, !dbg !9764
  ret i64 %15, !dbg !9764
}

define i32 @getsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32* nocapture %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !9766
}

define i32 @setsockopt(i32 %sockfd, i32 %level, i32 %optname, i8* nocapture %optval, i32 %optlen) nounwind readnone {
entry:
  ret i32 0, !dbg !9768
}

define i64 @__fd_attach_dgram(%struct.exe_file_t* nocapture %f) nounwind {
entry:
  %0 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 1, !dbg !9770
  %1 = load i32* %0, align 4, !dbg !9770
  %2 = and i32 %1, 32, !dbg !9770
  %3 = icmp eq i32 %2, 0, !dbg !9770
  br i1 %3, label %bb, label %bb9, !dbg !9770

bb:                                               ; preds = %entry
  %4 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 5, !dbg !9772
  %5 = load %struct.exe_sockaddr_t** %4, align 8, !dbg !9772
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %5, i64 0, i32 0, !dbg !9772
  %7 = load %struct.sockaddr_storage** %6, align 8, !dbg !9772
  %8 = icmp eq %struct.sockaddr_storage* %7, null, !dbg !9772
  br i1 %8, label %bb1, label %bb2, !dbg !9772

bb1:                                              ; preds = %bb
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str385, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) nor
  unreachable, !dbg !9772

bb2:                                              ; preds = %bb
  %9 = getelementptr inbounds %struct.sockaddr_storage* %7, i64 0, i32 0, !dbg !9772
  %10 = load i16* %9, align 2, !dbg !9772
  switch i16 %10, label %bb6 [
    i16 2, label %bb3
    i16 10, label %bb5
  ]

bb3:                                              ; preds = %bb2
  %11 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in*, !dbg !9772
  %12 = getelementptr inbounds %struct.sockaddr_in* %11, i64 0, i32 1, !dbg !9772
  %13 = load i16* %12, align 2, !dbg !9772
  %14 = icmp eq i16 %13, 0, !dbg !9772
  %15 = zext i1 %14 to i8, !dbg !9772
  br label %bb7, !dbg !9772

bb5:                                              ; preds = %bb2
  %16 = bitcast %struct.sockaddr_storage* %7 to %struct.sockaddr_in6*, !dbg !9772
  %17 = getelementptr inbounds %struct.sockaddr_in6* %16, i64 0, i32 1, !dbg !9772
  %18 = load i16* %17, align 2, !dbg !9772
  %19 = icmp eq i16 %18, 0, !dbg !9772
  %20 = zext i1 %19 to i8, !dbg !9772
  br label %bb7, !dbg !9772

bb6:                                              ; preds = %bb2
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 840, i8* getelementptr inbounds ([18 x i8]* @__PRETTY_FUNCTION__.7471, i64 0, i64 0)) no
  unreachable, !dbg !9772

bb7:                                              ; preds = %bb5, %bb3
  %iftmp.121.0 = phi i8 [ %15, %bb3 ], [ %20, %bb5 ]
  %toBool = icmp eq i8 %iftmp.121.0, 0, !dbg !9772
  br i1 %toBool, label %bb12, label %bb8, !dbg !9772

bb8:                                              ; preds = %bb7
  %21 = tail call i32* @__errno_location() nounwind readnone, !dbg !9773
  store i32 107, i32* %21, align 4, !dbg !9773
  br label %bb12, !dbg !9774

bb9:                                              ; preds = %entry
  %22 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 2, !dbg !9775
  store i64 0, i64* %22, align 8, !dbg !9775
  %23 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !9776
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !9776
  %25 = icmp ult i32 %23, %24, !dbg !9776
  br i1 %25, label %__get_sym_dgram.exit, label %__get_sym_dgram.exit.thread, !dbg !9776

__get_sym_dgram.exit.thread:                      ; preds = %bb9
  %26 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !9778
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** %26, align 8, !dbg !9778
  br label %bb10

__get_sym_dgram.exit:                             ; preds = %bb9
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 8, !dbg !9779
  %28 = zext i32 %23 to i64, !dbg !9779
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !9779
  %30 = add i32 %23, 1, !dbg !9779
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !9779
  %31 = getelementptr inbounds %struct.exe_file_t* %f, i64 0, i32 3, !dbg !9778
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** %31, align 8, !dbg !9778
  %32 = icmp eq %struct.exe_disk_file_t* %29, null, !dbg !9780
  br i1 %32, label %bb10, label %bb12, !dbg !9780

bb10:                                             ; preds = %__get_sym_dgram.exit, %__get_sym_dgram.exit.thread
  %33 = phi %struct.exe_disk_file_t** [ %26, %__get_sym_dgram.exit.thread ], [ %31, %__get_sym_dgram.exit ]
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %33, align 8, !dbg !9781
  %34 = tail call i32* @__errno_location() nounwind readnone, !dbg !9782
  store i32 111, i32* %34, align 4, !dbg !9782
  br label %bb12, !dbg !9783

bb12:                                             ; preds = %bb10, %__get_sym_dgram.exit, %bb8, %bb7
  %.0 = phi i64 [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb7 ], [ 0, %__get_sym_dgram.exit ]
  ret i64 %.0, !dbg !9774
}

define weak %struct._cap_struct* @cap_get_file(i8* %path_p) nounwind {
entry:
  tail call void @klee_warning(i8* getelementptr inbounds ([31 x i8]* @.str3388, i64 0, i64 0)) nounwind, !dbg !9784
  %0 = tail call i32* @__errno_location() nounwind readnone, !dbg !9786
  store i32 2, i32* %0, align 4, !dbg !9786
  ret %struct._cap_struct* null, !dbg !9787
}

define i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !9788
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9789
  br i1 %1, label %bb, label %bb1, !dbg !9789

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9790
  store i32 9, i32* %2, align 4, !dbg !9790
  br label %bb14, !dbg !9791

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9792
  %4 = load i32* %3, align 4, !dbg !9792
  %5 = and i32 %4, 16, !dbg !9792
  %6 = icmp eq i32 %5, 0, !dbg !9792
  br i1 %6, label %bb2, label %bb3, !dbg !9792

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9793
  store i32 88, i32* %7, align 4, !dbg !9793
  br label %bb14, !dbg !9794

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !9795
  br i1 %8, label %bb4, label %bb5, !dbg !9795

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9796
  store i32 14, i32* %9, align 4, !dbg !9796
  br label %bb14, !dbg !9797

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9798
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9798
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !9798
  br i1 %12, label %bb6, label %bb7, !dbg !9798

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5390, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 818, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7439, i64 0, i64 0)) no
  unreachable, !dbg !9799

bb7:                                              ; preds = %bb5
  %13 = tail call i64 @__fd_attach_dgram(%struct.exe_file_t* %0) nounwind, !dbg !9800
  %14 = icmp slt i64 %13, 0, !dbg !9800
  br i1 %14, label %bb14, label %bb9, !dbg !9800

bb9:                                              ; preds = %bb7
  %15 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9801
  %16 = load i8** %15, align 8, !dbg !9801
  %17 = icmp eq i8* %16, null, !dbg !9801
  %.pre = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !9802
  br i1 %17, label %bb11, label %bb10, !dbg !9801

bb10:                                             ; preds = %bb9
  %18 = load i32* %.pre, align 8, !dbg !9803
  %19 = zext i32 %18 to i64, !dbg !9803
  tail call void @klee_check_memory_access(i8* %16, i64 %19) nounwind, !dbg !9803
  %20 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9804
  %21 = getelementptr inbounds %struct.exe_disk_file_t* %20, i64 0, i32 4, !dbg !9804
  %22 = load %struct.exe_sockaddr_t** %21, align 8, !dbg !9804
  %23 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 1, !dbg !9804
  %24 = load i32* %23, align 8, !dbg !9804
  %25 = zext i32 %24 to i64, !dbg !9804
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %22, i64 0, i32 0, !dbg !9804
  %27 = load %struct.sockaddr_storage** %26, align 8, !dbg !9804
  %28 = load i8** %15, align 8, !dbg !9804
  %29 = bitcast %struct.sockaddr_storage* %27 to i8*, !dbg !9804
  %30 = call i8* @memcpy(i8* %28, i8* %29, i64 %25)
  br label %bb11, !dbg !9804

bb11:                                             ; preds = %bb10, %bb9
  %31 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9802
  %32 = getelementptr inbounds %struct.exe_disk_file_t* %31, i64 0, i32 4, !dbg !9802
  %33 = load %struct.exe_sockaddr_t** %32, align 8, !dbg !9802
  %34 = getelementptr inbounds %struct.exe_sockaddr_t* %33, i64 0, i32 1, !dbg !9802
  %35 = load i32* %34, align 8, !dbg !9802
  store i32 %35, i32* %.pre, align 8, !dbg !9802
  %36 = icmp eq i32 %flags, 0, !dbg !9805
  br i1 %36, label %bb13, label %bb12, !dbg !9805

bb12:                                             ; preds = %bb11
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6391, i64 0, i64 0)) nounwind, !dbg !9806
  br label %bb13, !dbg !9806

bb13:                                             ; preds = %bb12, %bb11
  %37 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !9807
  %38 = load i64* %37, align 8, !dbg !9807
  %39 = trunc i64 %38 to i32, !dbg !9807
  %40 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !9807
  %41 = load %struct.direntry_t** %40, align 8, !dbg !9807
  %42 = tail call i64 @__fd_scatter_read(%struct.exe_file_t* %0, %struct.direntry_t* %41, i32 %39) nounwind, !dbg !9807
  br label %bb14, !dbg !9807

bb14:                                             ; preds = %bb13, %bb7, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %42, %bb13 ], [ -1, %bb7 ]
  ret i64 %.0, !dbg !9791
}

define i64 @recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !9808
  ret i64 %0, !dbg !9808
}

define i64 @__fd_recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov = alloca %struct.direntry_t, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !9810
  %1 = icmp eq i32* %fromlen, null, !dbg !9810
  %2 = and i1 %0, %1, !dbg !9810
  br i1 %2, label %bb, label %bb3, !dbg !9810

bb:                                               ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !9811
  store i32 14, i32* %3, align 4, !dbg !9811
  br label %bb9, !dbg !9812

bb3:                                              ; preds = %entry
  %4 = getelementptr inbounds %struct.direntry_t* %iov, i64 0, i32 0, !dbg !9813
  store i8* %buf, i8** %4, align 8, !dbg !9813
  %5 = getelementptr inbounds %struct.direntry_t* %iov, i64 0, i32 1, !dbg !9814
  store i64 %len, i64* %5, align 8, !dbg !9814
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9815
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !9815
  store i8* %7, i8** %6, align 8, !dbg !9815
  br i1 %1, label %bb6, label %bb4, !dbg !9816

bb4:                                              ; preds = %bb3
  %8 = load i32* %fromlen, align 4, !dbg !9816
  br label %bb6, !dbg !9816

bb6:                                              ; preds = %bb4, %bb3
  %iftmp.113.0 = phi i32 [ %8, %bb4 ], [ 0, %bb3 ]
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !9816
  store i32 %iftmp.113.0, i32* %9, align 8, !dbg !9816
  %10 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !9817
  store %struct.direntry_t* %iov, %struct.direntry_t** %10, align 8, !dbg !9817
  %11 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !9818
  store i64 1, i64* %11, align 8, !dbg !9818
  %12 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !9819
  store i8* null, i8** %12, align 8, !dbg !9819
  %13 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !9820
  store i64 0, i64* %13, align 8, !dbg !9820
  %14 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !9821
  store i32 %flags, i32* %14, align 8, !dbg !9821
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !9822
  br i1 %1, label %bb9, label %bb7, !dbg !9823

bb7:                                              ; preds = %bb6
  %16 = load i32* %9, align 8, !dbg !9823
  store i32 %16, i32* %fromlen, align 4, !dbg !9823
  br label %bb9, !dbg !9823

bb9:                                              ; preds = %bb7, %bb6, %bb
  %.0 = phi i64 [ -1, %bb ], [ %15, %bb6 ], [ %15, %bb7 ]
  ret i64 %.0, !dbg !9812
}

define i64 @recvfrom(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %from, i32* %fromlen) nounwind {
entry:
  %iov.i = alloca %struct.direntry_t, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = icmp ne %struct.sockaddr* %from, null, !dbg !9824
  %1 = icmp eq i32* %fromlen, null, !dbg !9824
  %2 = and i1 %0, %1, !dbg !9824
  br i1 %2, label %bb.i, label %bb3.i, !dbg !9824

bb.i:                                             ; preds = %entry
  %3 = call i32* @__errno_location() nounwind readnone, !dbg !9827
  store i32 14, i32* %3, align 4, !dbg !9827
  br label %__fd_recvfrom.exit, !dbg !9828

bb3.i:                                            ; preds = %entry
  %4 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 0, !dbg !9829
  store i8* %buf, i8** %4, align 8, !dbg !9829
  %5 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 1, !dbg !9830
  store i64 %len, i64* %5, align 8, !dbg !9830
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !9831
  %7 = bitcast %struct.sockaddr* %from to i8*, !dbg !9831
  store i8* %7, i8** %6, align 8, !dbg !9831
  br i1 %1, label %bb6.i, label %bb4.i, !dbg !9832

bb4.i:                                            ; preds = %bb3.i
  %8 = load i32* %fromlen, align 4, !dbg !9832
  br label %bb6.i, !dbg !9832

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %8, %bb4.i ], [ 0, %bb3.i ]
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !9832
  store i32 %iftmp.113.0.i, i32* %9, align 8, !dbg !9832
  %10 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !9833
  store %struct.direntry_t* %iov.i, %struct.direntry_t** %10, align 8, !dbg !9833
  %11 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !9834
  store i64 1, i64* %11, align 8, !dbg !9834
  %12 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !9835
  store i8* null, i8** %12, align 8, !dbg !9835
  %13 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !9836
  store i64 0, i64* %13, align 8, !dbg !9836
  %14 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !9837
  store i32 %flags, i32* %14, align 8, !dbg !9837
  %15 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !9838
  br i1 %1, label %__fd_recvfrom.exit, label %bb7.i, !dbg !9839

bb7.i:                                            ; preds = %bb6.i
  %16 = load i32* %9, align 8, !dbg !9839
  store i32 %16, i32* %fromlen, align 4, !dbg !9839
  br label %__fd_recvfrom.exit, !dbg !9839

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %15, %bb6.i ], [ %15, %bb7.i ]
  ret i64 %.0.i, !dbg !9825
}

define i64 @__fd_recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
__fd_recvfrom.exit:
  %iov.i = alloca %struct.direntry_t, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 0, !dbg !9840
  store i8* %buf, i8** %0, align 8, !dbg !9840
  %1 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 1, !dbg !9843
  store i64 %len, i64* %1, align 8, !dbg !9843
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !9844
  store i8* null, i8** %2, align 8, !dbg !9844
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !9845
  store i32 0, i32* %3, align 8, !dbg !9845
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !9846
  store %struct.direntry_t* %iov.i, %struct.direntry_t** %4, align 8, !dbg !9846
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !9847
  store i64 1, i64* %5, align 8, !dbg !9847
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !9848
  store i8* null, i8** %6, align 8, !dbg !9848
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !9849
  store i64 0, i64* %7, align 8, !dbg !9849
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !9850
  store i32 %flags, i32* %8, align 8, !dbg !9850
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !9851
  ret i64 %9, !dbg !9841
}

define i64 @recv(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.direntry_t, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 0, !dbg !9852
  store i8* %buf, i8** %0, align 8, !dbg !9852
  %1 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 1, !dbg !9856
  store i64 %len, i64* %1, align 8, !dbg !9856
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !9857
  store i8* null, i8** %2, align 8, !dbg !9857
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !9858
  store i32 0, i32* %3, align 8, !dbg !9858
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !9859
  store %struct.direntry_t* %iov.i.i, %struct.direntry_t** %4, align 8, !dbg !9859
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !9860
  store i64 1, i64* %5, align 8, !dbg !9860
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !9861
  store i8* null, i8** %6, align 8, !dbg !9861
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !9862
  store i64 0, i64* %7, align 8, !dbg !9862
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !9863
  store i32 %flags, i32* %8, align 8, !dbg !9863
  %9 = call i64 @__fd_recvmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !9864
  ret i64 %9, !dbg !9854
}

define i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %fd) nounwind, !dbg !9865
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9866
  br i1 %1, label %bb, label %bb1, !dbg !9866

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9867
  store i32 9, i32* %2, align 4, !dbg !9867
  br label %bb46, !dbg !9868

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9869
  %4 = load i32* %3, align 4, !dbg !9869
  %5 = and i32 %4, 16, !dbg !9869
  %6 = icmp eq i32 %5, 0, !dbg !9869
  br i1 %6, label %bb2, label %bb3, !dbg !9869

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9870
  store i32 88, i32* %7, align 4, !dbg !9870
  br label %bb46, !dbg !9871

bb3:                                              ; preds = %bb1
  %8 = icmp eq %struct.msghdr* %msg, null, !dbg !9872
  br i1 %8, label %bb4, label %bb5, !dbg !9872

bb4:                                              ; preds = %bb3
  %9 = tail call i32* @__errno_location() nounwind readnone, !dbg !9873
  store i32 14, i32* %9, align 4, !dbg !9873
  br label %bb46, !dbg !9874

bb5:                                              ; preds = %bb3
  %10 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9875
  %11 = load %struct.exe_disk_file_t** %10, align 8, !dbg !9875
  %12 = icmp eq %struct.exe_disk_file_t* %11, null, !dbg !9875
  br i1 %12, label %bb6, label %bb7, !dbg !9875

bb6:                                              ; preds = %bb5
  tail call void @__assert_fail(i8* getelementptr inbounds ([25 x i8]* @.str5390, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 759, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !9876

bb7:                                              ; preds = %bb5
  %13 = and i32 %4, 32, !dbg !9877
  %14 = icmp eq i32 %13, 0, !dbg !9877
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !9878
  %16 = load %struct.exe_sockaddr_t** %15, align 8, !dbg !9878
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %16, i64 0, i32 0, !dbg !9878
  %18 = load %struct.sockaddr_storage** %17, align 8, !dbg !9878
  %19 = icmp eq %struct.sockaddr_storage* %18, null, !dbg !9878
  br i1 %14, label %bb8, label %bb19, !dbg !9877

bb8:                                              ; preds = %bb7
  br i1 %19, label %bb9, label %bb12, !dbg !9878

bb9:                                              ; preds = %bb8
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7392, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 763, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !9878

bb12:                                             ; preds = %bb8
  %20 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !9879
  %21 = load i16* %20, align 2, !dbg !9879
  switch i16 %21, label %bb16 [
    i16 2, label %bb13
    i16 10, label %bb15
  ]

bb13:                                             ; preds = %bb12
  %22 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !9879
  %23 = getelementptr inbounds %struct.sockaddr_in* %22, i64 0, i32 1, !dbg !9879
  %24 = load i16* %23, align 2, !dbg !9879
  %25 = icmp eq i16 %24, 0, !dbg !9879
  %26 = zext i1 %25 to i8, !dbg !9879
  br label %bb17, !dbg !9879

bb15:                                             ; preds = %bb12
  %27 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !9879
  %28 = getelementptr inbounds %struct.sockaddr_in6* %27, i64 0, i32 1, !dbg !9879
  %29 = load i16* %28, align 2, !dbg !9879
  %30 = icmp eq i16 %29, 0, !dbg !9879
  %31 = zext i1 %30 to i8, !dbg !9879
  br label %bb17, !dbg !9879

bb16:                                             ; preds = %bb12
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 764, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !9879

bb17:                                             ; preds = %bb15, %bb13
  %iftmp.115.0 = phi i8 [ %26, %bb13 ], [ %31, %bb15 ]
  %toBool = icmp eq i8 %iftmp.115.0, 0, !dbg !9879
  br i1 %toBool, label %bb41, label %bb18, !dbg !9879

bb18:                                             ; preds = %bb17
  %32 = tail call i32* @__errno_location() nounwind readnone, !dbg !9880
  store i32 107, i32* %32, align 4, !dbg !9880
  br label %bb46, !dbg !9881

bb19:                                             ; preds = %bb7
  br i1 %19, label %bb20, label %bb21, !dbg !9882

bb20:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([19 x i8]* @.str385, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) nor
  unreachable, !dbg !9882

bb21:                                             ; preds = %bb19
  %33 = getelementptr inbounds %struct.sockaddr_storage* %18, i64 0, i32 0, !dbg !9882
  %34 = load i16* %33, align 2, !dbg !9882
  switch i16 %34, label %bb25 [
    i16 2, label %bb22
    i16 10, label %bb24
  ]

bb22:                                             ; preds = %bb21
  %35 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in*, !dbg !9882
  %36 = getelementptr inbounds %struct.sockaddr_in* %35, i64 0, i32 1, !dbg !9882
  %37 = load i16* %36, align 2, !dbg !9882
  %38 = icmp eq i16 %37, 0, !dbg !9882
  %39 = zext i1 %38 to i8, !dbg !9882
  br label %bb26, !dbg !9882

bb24:                                             ; preds = %bb21
  %40 = bitcast %struct.sockaddr_storage* %18 to %struct.sockaddr_in6*, !dbg !9882
  %41 = getelementptr inbounds %struct.sockaddr_in6* %40, i64 0, i32 1, !dbg !9882
  %42 = load i16* %41, align 2, !dbg !9882
  %43 = icmp eq i16 %42, 0, !dbg !9882
  %44 = zext i1 %43 to i8, !dbg !9882
  br label %bb26, !dbg !9882

bb25:                                             ; preds = %bb21
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 770, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !9882

bb26:                                             ; preds = %bb24, %bb22
  %45 = phi i16 [ %37, %bb22 ], [ %42, %bb24 ]
  %iftmp.117.0 = phi i8 [ %39, %bb22 ], [ %44, %bb24 ]
  %toBool27 = icmp eq i8 %iftmp.117.0, 0, !dbg !9882
  br i1 %toBool27, label %bb32, label %bb28, !dbg !9882

bb28:                                             ; preds = %bb26
  %46 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9882
  %47 = load i8** %46, align 8, !dbg !9882
  %48 = icmp eq i8* %47, null, !dbg !9882
  br i1 %48, label %bb29, label %bb32, !dbg !9882

bb29:                                             ; preds = %bb28
  %49 = tail call i32* @__errno_location() nounwind readnone, !dbg !9883
  store i32 107, i32* %49, align 4, !dbg !9883
  br label %bb46, !dbg !9884

bb32:                                             ; preds = %bb28, %bb26
  switch i16 %34, label %bb36 [
    i16 2, label %bb33
    i16 10, label %bb35
  ]

bb33:                                             ; preds = %bb32
  %50 = icmp ne i16 %45, 0, !dbg !9885
  %51 = zext i1 %50 to i8, !dbg !9885
  br label %bb37, !dbg !9885

bb35:                                             ; preds = %bb32
  %52 = icmp ne i16 %45, 0, !dbg !9885
  %53 = zext i1 %52 to i8, !dbg !9885
  br label %bb37, !dbg !9885

bb36:                                             ; preds = %bb32
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 775, i8* getelementptr inbounds ([13 x i8]* @__PRETTY_FUNCTION__.7339, i64 0, i64 0)) no
  unreachable, !dbg !9885

bb37:                                             ; preds = %bb35, %bb33
  %iftmp.119.0 = phi i8 [ %51, %bb33 ], [ %53, %bb35 ]
  %toBool38 = icmp eq i8 %iftmp.119.0, 0, !dbg !9885
  br i1 %toBool38, label %bb41, label %bb39, !dbg !9885

bb39:                                             ; preds = %bb37
  %54 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9885
  %55 = load i8** %54, align 8, !dbg !9885
  %56 = icmp eq i8* %55, null, !dbg !9885
  br i1 %56, label %bb41, label %bb40, !dbg !9885

bb40:                                             ; preds = %bb39
  %57 = tail call i32* @__errno_location() nounwind readnone, !dbg !9886
  store i32 106, i32* %57, align 4, !dbg !9886
  br label %bb46, !dbg !9887

bb41:                                             ; preds = %bb39, %bb37, %bb17
  %58 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9888
  %59 = load i8** %58, align 8, !dbg !9888
  %60 = icmp eq i8* %59, null, !dbg !9888
  br i1 %60, label %bb43, label %bb42, !dbg !9888

bb42:                                             ; preds = %bb41
  %61 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !9889
  %62 = load i32* %61, align 8, !dbg !9889
  %63 = zext i32 %62 to i64, !dbg !9889
  tail call void @klee_check_memory_access(i8* %59, i64 %63) nounwind, !dbg !9889
  br label %bb43, !dbg !9889

bb43:                                             ; preds = %bb42, %bb41
  %64 = icmp eq i32 %flags, 0, !dbg !9890
  br i1 %64, label %bb45, label %bb44, !dbg !9890

bb44:                                             ; preds = %bb43
  tail call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str6391, i64 0, i64 0)) nounwind, !dbg !9891
  br label %bb45, !dbg !9891

bb45:                                             ; preds = %bb44, %bb43
  %65 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !9892
  %66 = load i64* %65, align 8, !dbg !9892
  %67 = trunc i64 %66 to i32, !dbg !9892
  %68 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !9892
  %69 = load %struct.direntry_t** %68, align 8, !dbg !9892
  %70 = tail call i64 @__fd_gather_write(%struct.exe_file_t* %0, %struct.direntry_t* %69, i32 %67) nounwind, !dbg !9892
  br label %bb46, !dbg !9892

bb46:                                             ; preds = %bb45, %bb40, %bb29, %bb18, %bb4, %bb2, %bb
  %.0 = phi i64 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb18 ], [ %70, %bb45 ], [ -1, %bb29 ], [ -1, %bb40 ]
  ret i64 %.0, !dbg !9868
}

define i64 @sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind {
entry:
  %0 = tail call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !9893
  ret i64 %0, !dbg !9893
}

define i64 @__fd_sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov = alloca %struct.direntry_t, align 8
  %msg = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov, i64 0, i32 0, !dbg !9895
  store i8* %buf, i8** %0, align 8, !dbg !9895
  %1 = getelementptr inbounds %struct.direntry_t* %iov, i64 0, i32 1, !dbg !9896
  store i64 %len, i64* %1, align 8, !dbg !9896
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !9897
  %3 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 0, !dbg !9897
  store i8* %2, i8** %3, align 8, !dbg !9897
  %4 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 1, !dbg !9898
  store i32 %tolen, i32* %4, align 8, !dbg !9898
  %5 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 2, !dbg !9899
  store %struct.direntry_t* %iov, %struct.direntry_t** %5, align 8, !dbg !9899
  %6 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 3, !dbg !9900
  store i64 1, i64* %6, align 8, !dbg !9900
  %7 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 4, !dbg !9901
  store i8* null, i8** %7, align 8, !dbg !9901
  %8 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 5, !dbg !9902
  store i64 0, i64* %8, align 8, !dbg !9902
  %9 = getelementptr inbounds %struct.msghdr* %msg, i64 0, i32 6, !dbg !9903
  store i32 %flags, i32* %9, align 8, !dbg !9903
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg, i32 %flags) nounwind, !dbg !9904
  ret i64 %10, !dbg !9904
}

define i64 @sendto(i32 %fd, i8* %buf, i64 %len, i32 %flags, %struct.sockaddr* %to, i32 %tolen) nounwind {
entry:
  %iov.i = alloca %struct.direntry_t, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 0, !dbg !9905
  store i8* %buf, i8** %0, align 8, !dbg !9905
  %1 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 1, !dbg !9908
  store i64 %len, i64* %1, align 8, !dbg !9908
  %2 = bitcast %struct.sockaddr* %to to i8*, !dbg !9909
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !9909
  store i8* %2, i8** %3, align 8, !dbg !9909
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !9910
  store i32 %tolen, i32* %4, align 8, !dbg !9910
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !9911
  store %struct.direntry_t* %iov.i, %struct.direntry_t** %5, align 8, !dbg !9911
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !9912
  store i64 1, i64* %6, align 8, !dbg !9912
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !9913
  store i8* null, i8** %7, align 8, !dbg !9913
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !9914
  store i64 0, i64* %8, align 8, !dbg !9914
  %9 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !9915
  store i32 %flags, i32* %9, align 8, !dbg !9915
  %10 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !9916
  ret i64 %10, !dbg !9906
}

define i64 @__fd_send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i = alloca %struct.direntry_t, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 0, !dbg !9917
  store i8* %buf, i8** %0, align 8, !dbg !9917
  %1 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 1, !dbg !9920
  store i64 %len, i64* %1, align 8, !dbg !9920
  %2 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !9921
  store i8* null, i8** %2, align 8, !dbg !9921
  %3 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !9922
  store i32 0, i32* %3, align 8, !dbg !9922
  %4 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !9923
  store %struct.direntry_t* %iov.i, %struct.direntry_t** %4, align 8, !dbg !9923
  %5 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !9924
  store i64 1, i64* %5, align 8, !dbg !9924
  %6 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !9925
  store i8* null, i8** %6, align 8, !dbg !9925
  %7 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !9926
  store i64 0, i64* %7, align 8, !dbg !9926
  %8 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !9927
  store i32 %flags, i32* %8, align 8, !dbg !9927
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i, i32 %flags) nounwind, !dbg !9928
  ret i64 %9, !dbg !9918
}

define i64 @send(i32 %fd, i8* %buf, i64 %len, i32 %flags) nounwind {
entry:
  %iov.i.i = alloca %struct.direntry_t, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  %0 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 0, !dbg !9929
  store i8* %buf, i8** %0, align 8, !dbg !9929
  %1 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 1, !dbg !9933
  store i64 %len, i64* %1, align 8, !dbg !9933
  %2 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !9934
  store i8* null, i8** %2, align 8, !dbg !9934
  %3 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !9935
  store i32 0, i32* %3, align 8, !dbg !9935
  %4 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !9936
  store %struct.direntry_t* %iov.i.i, %struct.direntry_t** %4, align 8, !dbg !9936
  %5 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !9937
  store i64 1, i64* %5, align 8, !dbg !9937
  %6 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !9938
  store i8* null, i8** %6, align 8, !dbg !9938
  %7 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !9939
  store i64 0, i64* %7, align 8, !dbg !9939
  %8 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !9940
  store i32 %flags, i32* %8, align 8, !dbg !9940
  %9 = call i64 @__fd_sendmsg(i32 %fd, %struct.msghdr* %msg.i.i, i32 %flags) nounwind, !dbg !9941
  ret i64 %9, !dbg !9931
}

define i32 @shutdown(i32 %sockfd, i32 %how) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !9942
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9943
  br i1 %1, label %bb, label %bb1, !dbg !9943

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9944
  store i32 9, i32* %2, align 4, !dbg !9944
  br label %bb12, !dbg !9945

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9946
  %4 = load i32* %3, align 4, !dbg !9946
  %5 = and i32 %4, 16, !dbg !9946
  %6 = icmp eq i32 %5, 0, !dbg !9946
  br i1 %6, label %bb2, label %bb3, !dbg !9946

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9947
  store i32 88, i32* %7, align 4, !dbg !9947
  br label %bb12, !dbg !9948

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9949
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !9949
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !9949
  br i1 %10, label %bb9, label %bb4, !dbg !9949

bb4:                                              ; preds = %bb3
  switch i32 %how, label %bb8 [
    i32 0, label %bb5
    i32 1, label %bb6
    i32 2, label %bb7
  ], !dbg !9950

bb5:                                              ; preds = %bb4
  %11 = and i32 %4, -5, !dbg !9951
  store i32 %11, i32* %3, align 4, !dbg !9951
  br label %bb12, !dbg !9951

bb6:                                              ; preds = %bb4
  %12 = and i32 %4, -9, !dbg !9952
  store i32 %12, i32* %3, align 4, !dbg !9952
  br label %bb12, !dbg !9952

bb7:                                              ; preds = %bb4
  %13 = and i32 %4, -13, !dbg !9953
  store i32 %13, i32* %3, align 4, !dbg !9953
  br label %bb12, !dbg !9953

bb8:                                              ; preds = %bb4
  %14 = tail call i32* @__errno_location() nounwind readnone, !dbg !9954
  store i32 22, i32* %14, align 4, !dbg !9954
  br label %bb12, !dbg !9955

bb9:                                              ; preds = %bb3
  %15 = tail call i64 (i64, ...)* @syscall(i64 48, i32 %sockfd, i32 %how) nounwind, !dbg !9956
  %16 = trunc i64 %15 to i32, !dbg !9956
  %17 = icmp eq i32 %16, -1, !dbg !9957
  br i1 %17, label %bb10, label %bb12, !dbg !9957

bb10:                                             ; preds = %bb9
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9958
  %19 = tail call i32 @klee_get_errno() nounwind, !dbg !9958
  store i32 %19, i32* %18, align 4, !dbg !9958
  br label %bb12, !dbg !9959

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb6, %bb5, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb8 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb7 ], [ 0, %bb6 ], [ 0, %bb5 ]
  ret i32 %.0, !dbg !9945
}

define i32 @__fd_shutdown(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !9960
  %1 = trunc i64 %0 to i32, !dbg !9960
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !9961
  %3 = load i64* %2, align 8, !dbg !9961
  %4 = trunc i64 %3 to i32, !dbg !9961
  %5 = tail call i32 @shutdown(i32 %1, i32 %4) nounwind, !dbg !9962
  ret i32 %5, !dbg !9962
}

define i32 @getpeername(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !9963
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9964
  br i1 %1, label %bb, label %bb1, !dbg !9964

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9965
  store i32 9, i32* %2, align 4, !dbg !9965
  br label %bb12, !dbg !9966

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9967
  %4 = load i32* %3, align 4, !dbg !9967
  %5 = and i32 %4, 16, !dbg !9967
  %6 = icmp eq i32 %5, 0, !dbg !9967
  br i1 %6, label %bb2, label %bb3, !dbg !9967

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9968
  store i32 88, i32* %7, align 4, !dbg !9968
  br label %bb12, !dbg !9969

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9970
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !9970
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !9970
  br i1 %10, label %bb9, label %bb4, !dbg !9970

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !9971
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !9971
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !9971
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !9971
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !9971
  br i1 %15, label %bb5, label %bb6, !dbg !9971

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7392, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 587, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7179, i64 0, i64 0)) no
  unreachable, !dbg !9971

bb6:                                              ; preds = %bb4
  %16 = load i32* %addrlen, align 4, !dbg !9972
  %17 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !9972
  %18 = load i32* %17, align 8, !dbg !9972
  %19 = icmp ult i32 %16, %18, !dbg !9972
  br i1 %19, label %bb7, label %bb8, !dbg !9972

bb7:                                              ; preds = %bb6
  %20 = tail call i32* @__errno_location() nounwind readnone, !dbg !9973
  store i32 22, i32* %20, align 4, !dbg !9973
  br label %bb12, !dbg !9974

bb8:                                              ; preds = %bb6
  %21 = zext i32 %18 to i64, !dbg !9975
  %22 = bitcast %struct.sockaddr* %addr to i8*, !dbg !9975
  %23 = bitcast %struct.sockaddr_storage* %14 to i8*, !dbg !9975
  %24 = call i8* @memcpy(i8* %22, i8* %23, i64 %21)
  %25 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !9976
  %26 = getelementptr inbounds %struct.exe_sockaddr_t* %25, i64 0, i32 1, !dbg !9976
  %27 = load i32* %26, align 8, !dbg !9976
  store i32 %27, i32* %addrlen, align 4, !dbg !9976
  br label %bb12, !dbg !9976

bb9:                                              ; preds = %bb3
  %28 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !9977
  %29 = load i32* %28, align 8, !dbg !9977
  %30 = tail call i64 (i64, ...)* @syscall(i64 52, i32 %29, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !9977
  %31 = trunc i64 %30 to i32, !dbg !9977
  %32 = icmp slt i32 %31, 0, !dbg !9978
  br i1 %32, label %bb10, label %bb12, !dbg !9978

bb10:                                             ; preds = %bb9
  %33 = tail call i32* @__errno_location() nounwind readnone, !dbg !9979
  %34 = tail call i32 @klee_get_errno() nounwind, !dbg !9979
  store i32 %34, i32* %33, align 4, !dbg !9979
  br label %bb12, !dbg !9980

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !9966
}

define i32 @__fd_getpeername(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !9981
  %1 = trunc i64 %0 to i32, !dbg !9981
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !9982
  %3 = load i64* %2, align 8, !dbg !9982
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !9982
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !9983
  %6 = load i64* %5, align 8, !dbg !9983
  %7 = inttoptr i64 %6 to i32*, !dbg !9983
  %8 = tail call i32 @getpeername(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !9984
  ret i32 %8, !dbg !9984
}

define i32 @getsockname(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !9985
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !9986
  br i1 %1, label %bb, label %bb1, !dbg !9986

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !9987
  store i32 9, i32* %2, align 4, !dbg !9987
  br label %bb12, !dbg !9988

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !9989
  %4 = load i32* %3, align 4, !dbg !9989
  %5 = and i32 %4, 16, !dbg !9989
  %6 = icmp eq i32 %5, 0, !dbg !9989
  br i1 %6, label %bb2, label %bb3, !dbg !9989

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !9990
  store i32 88, i32* %7, align 4, !dbg !9990
  br label %bb12, !dbg !9991

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !9992
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !9992
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !9992
  br i1 %10, label %bb9, label %bb4, !dbg !9992

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !9993
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !9993
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !9993
  br i1 %13, label %bb5, label %bb6, !dbg !9993

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8393, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 543, i8* getelementptr inbounds ([12 x i8]* @__PRETTY_FUNCTION__.7141, i64 0, i64 0)) no
  unreachable, !dbg !9993

bb6:                                              ; preds = %bb4
  %14 = load i32* %addrlen, align 4, !dbg !9994
  %15 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !9994
  %16 = load i32* %15, align 8, !dbg !9994
  %17 = icmp ult i32 %14, %16, !dbg !9994
  br i1 %17, label %bb7, label %bb8, !dbg !9994

bb7:                                              ; preds = %bb6
  %18 = tail call i32* @__errno_location() nounwind readnone, !dbg !9995
  store i32 22, i32* %18, align 4, !dbg !9995
  br label %bb12, !dbg !9996

bb8:                                              ; preds = %bb6
  %19 = zext i32 %16 to i64, !dbg !9997
  %20 = bitcast %struct.sockaddr* %addr to i8*, !dbg !9997
  %21 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !9997
  %22 = call i8* @memcpy(i8* %20, i8* %21, i64 %19)
  %23 = load i32* %15, align 8, !dbg !9998
  store i32 %23, i32* %addrlen, align 4, !dbg !9998
  br label %bb12, !dbg !9998

bb9:                                              ; preds = %bb3
  %24 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !9999
  %25 = load i32* %24, align 8, !dbg !9999
  %26 = tail call i64 (i64, ...)* @syscall(i64 51, i32 %25, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !9999
  %27 = trunc i64 %26 to i32, !dbg !9999
  %28 = icmp slt i32 %27, 0, !dbg !10000
  br i1 %28, label %bb10, label %bb12, !dbg !10000

bb10:                                             ; preds = %bb9
  %29 = tail call i32* @__errno_location() nounwind readnone, !dbg !10001
  %30 = tail call i32 @klee_get_errno() nounwind, !dbg !10001
  store i32 %30, i32* %29, align 4, !dbg !10001
  br label %bb12, !dbg !10002

bb12:                                             ; preds = %bb10, %bb9, %bb8, %bb7, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb7 ], [ -1, %bb10 ], [ 0, %bb9 ], [ 0, %bb8 ]
  ret i32 %.0, !dbg !9988
}

define i32 @__fd_getsockname(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10003
  %1 = trunc i64 %0 to i32, !dbg !10003
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10004
  %3 = load i64* %2, align 8, !dbg !10004
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10004
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10005
  %6 = load i64* %5, align 8, !dbg !10005
  %7 = inttoptr i64 %6 to i32*, !dbg !10005
  %8 = tail call i32 @getsockname(i32 %1, %struct.sockaddr* %4, i32* %7) nounwind, !dbg !10006
  ret i32 %8, !dbg !10006
}

define i32 @listen(i32 %sockfd, i32 %backlog) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10007
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10008
  br i1 %1, label %bb, label %bb1, !dbg !10008

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10009
  store i32 9, i32* %2, align 4, !dbg !10009
  br label %bb10, !dbg !10010

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10011
  %4 = load i32* %3, align 4, !dbg !10011
  %5 = and i32 %4, 16, !dbg !10011
  %6 = icmp eq i32 %5, 0, !dbg !10011
  br i1 %6, label %bb2, label %bb3, !dbg !10011

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10012
  store i32 88, i32* %7, align 4, !dbg !10012
  br label %bb10, !dbg !10013

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10014
  %9 = icmp eq i32 %8, 0, !dbg !10014
  br i1 %9, label %bb5, label %bb4, !dbg !10014

bb4:                                              ; preds = %bb3
  %10 = tail call i32* @__errno_location() nounwind readnone, !dbg !10015
  store i32 95, i32* %10, align 4, !dbg !10015
  br label %bb10, !dbg !10016

bb5:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10017
  %12 = load %struct.exe_disk_file_t** %11, align 8, !dbg !10017
  %13 = icmp eq %struct.exe_disk_file_t* %12, null, !dbg !10017
  br i1 %13, label %bb7, label %bb9, !dbg !10017

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10018
  %15 = load i32* %14, align 8, !dbg !10018
  %16 = tail call i64 (i64, ...)* @syscall(i64 50, i32 %15, i32 %backlog) nounwind, !dbg !10018
  %17 = trunc i64 %16 to i32, !dbg !10018
  %18 = icmp slt i32 %17, 0, !dbg !10019
  br i1 %18, label %bb8, label %bb9, !dbg !10019

bb8:                                              ; preds = %bb7
  %19 = tail call i32* @__errno_location() nounwind readnone, !dbg !10020
  %20 = tail call i32 @klee_get_errno() nounwind, !dbg !10020
  store i32 %20, i32* %19, align 4, !dbg !10020
  br label %bb9, !dbg !10020

bb9:                                              ; preds = %bb8, %bb7, %bb5
  %os_r.0 = phi i32 [ %17, %bb8 ], [ 0, %bb5 ], [ %17, %bb7 ]
  %21 = load i32* %3, align 4, !dbg !10021
  %22 = or i32 %21, 64, !dbg !10021
  store i32 %22, i32* %3, align 4, !dbg !10021
  br label %bb10, !dbg !10022

bb10:                                             ; preds = %bb9, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ %os_r.0, %bb9 ]
  ret i32 %.0, !dbg !10010
}

define i32 @__fd_listen(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10023
  %1 = trunc i64 %0 to i32, !dbg !10023
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10024
  %3 = load i64* %2, align 8, !dbg !10024
  %4 = trunc i64 %3 to i32, !dbg !10024
  %5 = tail call i32 @listen(i32 %1, i32 %4) nounwind, !dbg !10025
  ret i32 %5, !dbg !10025
}

define i32 @connect(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10026
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10027
  br i1 %1, label %bb, label %bb1, !dbg !10027

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10028
  store i32 9, i32* %2, align 4, !dbg !10028
  br label %bb40, !dbg !10029

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10030
  %4 = load i32* %3, align 4, !dbg !10030
  %5 = and i32 %4, 16, !dbg !10030
  %6 = icmp eq i32 %5, 0, !dbg !10030
  br i1 %6, label %bb2, label %bb3, !dbg !10030

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10031
  store i32 88, i32* %7, align 4, !dbg !10031
  br label %bb40, !dbg !10032

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10033
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10033
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10033
  br i1 %10, label %bb37, label %bb4, !dbg !10033

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 5, !dbg !10034
  %12 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10034
  %13 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 0, !dbg !10034
  %14 = load %struct.sockaddr_storage** %13, align 8, !dbg !10034
  %15 = icmp eq %struct.sockaddr_storage* %14, null, !dbg !10034
  br i1 %15, label %bb5, label %bb6, !dbg !10034

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str7392, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 335, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10034

bb6:                                              ; preds = %bb4
  %16 = and i32 %4, 32, !dbg !10035
  %17 = icmp eq i32 %16, 0, !dbg !10035
  br i1 %17, label %bb9, label %bb20, !dbg !10035

bb9:                                              ; preds = %bb6
  %18 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10036
  %19 = load i16* %18, align 2, !dbg !10036
  switch i16 %19, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %20 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in*, !dbg !10036
  %21 = getelementptr inbounds %struct.sockaddr_in* %20, i64 0, i32 1, !dbg !10036
  %22 = load i16* %21, align 2, !dbg !10036
  %23 = icmp ne i16 %22, 0, !dbg !10036
  %24 = zext i1 %23 to i8, !dbg !10036
  br label %bb14, !dbg !10036

bb12:                                             ; preds = %bb9
  %25 = bitcast %struct.sockaddr_storage* %14 to %struct.sockaddr_in6*, !dbg !10036
  %26 = getelementptr inbounds %struct.sockaddr_in6* %25, i64 0, i32 1, !dbg !10036
  %27 = load i16* %26, align 2, !dbg !10036
  %28 = icmp ne i16 %27, 0, !dbg !10036
  %29 = zext i1 %28 to i8, !dbg !10036
  br label %bb14, !dbg !10036

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10036

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.73.0 = phi i8 [ %24, %bb10 ], [ %29, %bb12 ]
  %toBool17 = icmp eq i8 %iftmp.73.0, 1, !dbg !10036
  br i1 %toBool17, label %bb19, label %bb18, !dbg !10036

bb18:                                             ; preds = %bb14
  tail call void @__assert_fail(i8* getelementptr inbounds ([505 x i8]* @.str9394, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 337, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) no
  unreachable, !dbg !10036

bb19:                                             ; preds = %bb14
  %30 = tail call i32* @__errno_location() nounwind readnone, !dbg !10037
  store i32 106, i32* %30, align 4, !dbg !10037
  br label %bb40, !dbg !10038

bb20:                                             ; preds = %bb6
  %31 = getelementptr inbounds %struct.exe_sockaddr_t* %12, i64 0, i32 1, !dbg !10039
  %32 = load i32* %31, align 8, !dbg !10039
  %33 = icmp eq i32 %32, %addrlen, !dbg !10039
  br i1 %33, label %bb21, label %bb22, !dbg !10039

bb21:                                             ; preds = %bb20
  %34 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10039
  %35 = load i16* %34, align 2, !dbg !10039
  %36 = getelementptr inbounds %struct.sockaddr_storage* %14, i64 0, i32 0, !dbg !10039
  %37 = load i16* %36, align 8, !dbg !10039
  %38 = icmp eq i16 %35, %37, !dbg !10039
  br i1 %38, label %bb23, label %bb22, !dbg !10039

bb22:                                             ; preds = %bb21, %bb20
  %39 = tail call i32* @__errno_location() nounwind readnone, !dbg !10040
  store i32 22, i32* %39, align 4, !dbg !10040
  br label %bb40, !dbg !10041

bb23:                                             ; preds = %bb21
  switch i16 %35, label %bb27 [
    i16 2, label %bb24
    i16 10, label %bb26
  ]

bb24:                                             ; preds = %bb23
  %40 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %41 = bitcast [14 x i8]* %40 to i16*, !dbg !10042
  %42 = load i16* %41, align 2, !dbg !10042
  %43 = icmp eq i16 %42, 0, !dbg !10042
  %44 = zext i1 %43 to i8, !dbg !10042
  br label %bb28, !dbg !10042

bb26:                                             ; preds = %bb23
  %45 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 1
  %46 = bitcast [14 x i8]* %45 to i16*, !dbg !10042
  %47 = load i16* %46, align 2, !dbg !10042
  %48 = icmp eq i16 %47, 0, !dbg !10042
  %49 = zext i1 %48 to i8, !dbg !10042
  br label %bb28, !dbg !10042

bb27:                                             ; preds = %bb23
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 345, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10042

bb28:                                             ; preds = %bb26, %bb24
  %iftmp.75.0 = phi i8 [ %44, %bb24 ], [ %49, %bb26 ]
  %toBool29 = icmp eq i8 %iftmp.75.0, 0, !dbg !10042
  br i1 %toBool29, label %bb31, label %bb30, !dbg !10042

bb30:                                             ; preds = %bb28
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10043
  store i32 99, i32* %50, align 4, !dbg !10043
  br label %bb31, !dbg !10043

bb31:                                             ; preds = %bb30, %bb28
  %51 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10044
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10044
  %53 = getelementptr inbounds %struct.sockaddr_storage* %52, i64 0, i32 0, !dbg !10044
  %54 = load i16* %53, align 2, !dbg !10044
  switch i16 %54, label %bb35 [
    i16 2, label %bb36
    i16 10, label %bb36
  ]

bb35:                                             ; preds = %bb31
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 348, i8* getelementptr inbounds ([8 x i8]* @__PRETTY_FUNCTION__.6905, i64 0, i64 0)) nor
  unreachable, !dbg !10044

bb36:                                             ; preds = %bb31, %bb31
  %55 = zext i32 %addrlen to i64, !dbg !10045
  %56 = load %struct.exe_sockaddr_t** %11, align 8, !dbg !10045
  %57 = getelementptr inbounds %struct.exe_sockaddr_t* %56, i64 0, i32 0, !dbg !10045
  %58 = load %struct.sockaddr_storage** %57, align 8, !dbg !10045
  %59 = bitcast %struct.sockaddr_storage* %58 to i8*, !dbg !10045
  %60 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10045
  %61 = call i8* @memcpy(i8* %59, i8* %60, i64 %55)
  br label %bb40, !dbg !10046

bb37:                                             ; preds = %bb3
  %62 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10047
  %63 = load i32* %62, align 8, !dbg !10047
  %64 = tail call i64 (i64, ...)* @syscall(i64 42, i32 %63, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10047
  %65 = trunc i64 %64 to i32, !dbg !10047
  %66 = icmp slt i32 %65, 0, !dbg !10048
  br i1 %66, label %bb38, label %bb40, !dbg !10048

bb38:                                             ; preds = %bb37
  %67 = tail call i32* @__errno_location() nounwind readnone, !dbg !10049
  %68 = tail call i32 @klee_get_errno() nounwind, !dbg !10049
  store i32 %68, i32* %67, align 4, !dbg !10049
  br label %bb40, !dbg !10049

bb40:                                             ; preds = %bb38, %bb37, %bb36, %bb22, %bb19, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb19 ], [ -1, %bb22 ], [ 0, %bb36 ], [ %65, %bb38 ], [ %65, %bb37 ]
  ret i32 %.0, !dbg !10029
}

define i32 @__fd_connect(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10050
  %1 = trunc i64 %0 to i32, !dbg !10050
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10051
  %3 = load i64* %2, align 8, !dbg !10051
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10051
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10052
  %6 = load i64* %5, align 8, !dbg !10052
  %7 = trunc i64 %6 to i32, !dbg !10052
  %8 = tail call i32 @connect(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10053
  ret i32 %8, !dbg !10053
}

define i32 @bind(i32 %sockfd, %struct.sockaddr* %addr, i32 %addrlen) nounwind {
entry:
  %0 = tail call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10054
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10055
  br i1 %1, label %bb, label %bb1, !dbg !10055

bb:                                               ; preds = %entry
  %2 = tail call i32* @__errno_location() nounwind readnone, !dbg !10056
  store i32 9, i32* %2, align 4, !dbg !10056
  br label %bb28, !dbg !10057

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10058
  %4 = load i32* %3, align 4, !dbg !10058
  %5 = and i32 %4, 16, !dbg !10058
  %6 = icmp eq i32 %5, 0, !dbg !10058
  br i1 %6, label %bb2, label %bb3, !dbg !10058

bb2:                                              ; preds = %bb1
  %7 = tail call i32* @__errno_location() nounwind readnone, !dbg !10059
  store i32 88, i32* %7, align 4, !dbg !10059
  br label %bb28, !dbg !10060

bb3:                                              ; preds = %bb1
  %8 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10061
  %9 = load %struct.exe_disk_file_t** %8, align 8, !dbg !10061
  %10 = icmp eq %struct.exe_disk_file_t* %9, null, !dbg !10061
  br i1 %10, label %bb24, label %bb4, !dbg !10061

bb4:                                              ; preds = %bb3
  %11 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 0, !dbg !10062
  %12 = load %struct.sockaddr_storage** %11, align 8, !dbg !10062
  %13 = icmp eq %struct.sockaddr_storage* %12, null, !dbg !10062
  br i1 %13, label %bb5, label %bb6, !dbg !10062

bb5:                                              ; preds = %bb4
  tail call void @__assert_fail(i8* getelementptr inbounds ([14 x i8]* @.str8393, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 283, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10062

bb6:                                              ; preds = %bb4
  %14 = and i32 %4, 32, !dbg !10063
  %15 = icmp eq i32 %14, 0, !dbg !10063
  br i1 %15, label %bb9, label %bb16, !dbg !10063

bb9:                                              ; preds = %bb6
  %16 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10063
  %17 = load i16* %16, align 2, !dbg !10063
  switch i16 %17, label %bb13 [
    i16 2, label %bb10
    i16 10, label %bb12
  ]

bb10:                                             ; preds = %bb9
  %18 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in*, !dbg !10063
  %19 = getelementptr inbounds %struct.sockaddr_in* %18, i64 0, i32 1, !dbg !10063
  %20 = load i16* %19, align 2, !dbg !10063
  %21 = icmp ne i16 %20, 0, !dbg !10063
  %22 = zext i1 %21 to i8, !dbg !10063
  br label %bb14, !dbg !10063

bb12:                                             ; preds = %bb9
  %23 = bitcast %struct.sockaddr_storage* %12 to %struct.sockaddr_in6*, !dbg !10063
  %24 = getelementptr inbounds %struct.sockaddr_in6* %23, i64 0, i32 1, !dbg !10063
  %25 = load i16* %24, align 2, !dbg !10063
  %26 = icmp ne i16 %25, 0, !dbg !10063
  %27 = zext i1 %26 to i8, !dbg !10063
  br label %bb14, !dbg !10063

bb13:                                             ; preds = %bb9
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 284, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10063

bb14:                                             ; preds = %bb12, %bb10
  %iftmp.69.0 = phi i8 [ %22, %bb10 ], [ %27, %bb12 ]
  %toBool = icmp eq i8 %iftmp.69.0, 0, !dbg !10063
  br i1 %toBool, label %bb16, label %bb15, !dbg !10063

bb15:                                             ; preds = %bb14
  %28 = tail call i32* @__errno_location() nounwind readnone, !dbg !10064
  store i32 22, i32* %28, align 4, !dbg !10064
  br label %bb28, !dbg !10065

bb16:                                             ; preds = %bb14, %bb6
  %29 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 4, i32 1, !dbg !10066
  %30 = load i32* %29, align 8, !dbg !10066
  %31 = icmp eq i32 %30, %addrlen, !dbg !10066
  br i1 %31, label %bb17, label %bb18, !dbg !10066

bb17:                                             ; preds = %bb16
  %32 = getelementptr inbounds %struct.sockaddr* %addr, i64 0, i32 0, !dbg !10066
  %33 = load i16* %32, align 2, !dbg !10066
  %34 = getelementptr inbounds %struct.sockaddr_storage* %12, i64 0, i32 0, !dbg !10066
  %35 = load i16* %34, align 8, !dbg !10066
  %36 = icmp eq i16 %33, %35, !dbg !10066
  br i1 %36, label %bb19, label %bb18, !dbg !10066

bb18:                                             ; preds = %bb17, %bb16
  %37 = tail call i32* @__errno_location() nounwind readnone, !dbg !10067
  store i32 22, i32* %37, align 4, !dbg !10067
  br label %bb28, !dbg !10068

bb19:                                             ; preds = %bb17
  %38 = zext i32 %addrlen to i64, !dbg !10069
  %39 = bitcast %struct.sockaddr_storage* %12 to i8*, !dbg !10069
  %40 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10069
  %41 = call i8* @memcpy(i8* %39, i8* %40, i64 %38)
  %42 = load %struct.sockaddr_storage** %11, align 8, !dbg !10070
  %43 = getelementptr inbounds %struct.sockaddr_storage* %42, i64 0, i32 0, !dbg !10070
  %44 = load i16* %43, align 2, !dbg !10070
  switch i16 %44, label %bb23 [
    i16 2, label %bb28
    i16 10, label %bb28
  ]

bb23:                                             ; preds = %bb19
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 294, i8* getelementptr inbounds ([5 x i8]* @__PRETTY_FUNCTION__.6833, i64 0, i64 0)) nor
  unreachable, !dbg !10070

bb24:                                             ; preds = %bb3
  %45 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10071
  %46 = load i32* %45, align 8, !dbg !10071
  %47 = tail call i64 (i64, ...)* @syscall(i64 49, i32 %46, %struct.sockaddr* %addr, i32 %addrlen) nounwind, !dbg !10071
  %48 = trunc i64 %47 to i32, !dbg !10071
  %49 = icmp slt i32 %48, 0, !dbg !10072
  br i1 %49, label %bb25, label %bb28, !dbg !10072

bb25:                                             ; preds = %bb24
  %50 = tail call i32* @__errno_location() nounwind readnone, !dbg !10073
  %51 = tail call i32 @klee_get_errno() nounwind, !dbg !10073
  store i32 %51, i32* %50, align 4, !dbg !10073
  br label %bb28, !dbg !10073

bb28:                                             ; preds = %bb25, %bb24, %bb19, %bb19, %bb18, %bb15, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb15 ], [ -1, %bb18 ], [ %48, %bb25 ], [ %48, %bb24 ], [ 0, %bb19 ], [ 0, %bb19 ]
  ret i32 %.0, !dbg !10057
}

define i32 @__fd_bind(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10074
  %1 = trunc i64 %0 to i32, !dbg !10074
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10075
  %3 = load i64* %2, align 8, !dbg !10075
  %4 = inttoptr i64 %3 to %struct.sockaddr*, !dbg !10075
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10076
  %6 = load i64* %5, align 8, !dbg !10076
  %7 = trunc i64 %6 to i32, !dbg !10076
  %8 = tail call i32 @bind(i32 %1, %struct.sockaddr* %4, i32 %7) nounwind, !dbg !10077
  ret i32 %8, !dbg !10077
}

define internal fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %a) nounwind {
entry:
  %0 = icmp eq %struct.exe_sockaddr_t* %a, null, !dbg !10078
  br i1 %0, label %bb, label %bb1, !dbg !10078

bb:                                               ; preds = %entry
  tail call void @__assert_fail(i8* getelementptr inbounds ([2 x i8]* @.str12396, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 107, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10078

bb1:                                              ; preds = %entry
  switch i32 %domain, label %bb11 [
    i32 2, label %bb2
    i32 10, label %bb5
    i32 17, label %bb8
  ], !dbg !10080

bb2:                                              ; preds = %bb1
  %1 = tail call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10081
  %2 = bitcast i8* %1 to %struct.sockaddr_storage*, !dbg !10081
  %3 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10081
  store %struct.sockaddr_storage* %2, %struct.sockaddr_storage** %3, align 8, !dbg !10081
  %4 = icmp eq i8* %1, null, !dbg !10081
  br i1 %4, label %bb12, label %bb4, !dbg !10081

bb4:                                              ; preds = %bb2
  %5 = bitcast i8* %1 to i16*, !dbg !10081
  store i16 2, i16* %5, align 8, !dbg !10081
  %6 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10081
  store i32 16, i32* %6, align 8, !dbg !10081
  br label %bb12, !dbg !10081

bb5:                                              ; preds = %bb1
  %7 = tail call noalias i8* @calloc(i64 1, i64 28) nounwind, !dbg !10082
  %8 = bitcast i8* %7 to %struct.sockaddr_storage*, !dbg !10082
  %9 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10082
  store %struct.sockaddr_storage* %8, %struct.sockaddr_storage** %9, align 8, !dbg !10082
  %10 = icmp eq i8* %7, null, !dbg !10082
  br i1 %10, label %bb12, label %bb7, !dbg !10082

bb7:                                              ; preds = %bb5
  %11 = bitcast i8* %7 to i16*, !dbg !10082
  store i16 2, i16* %11, align 8, !dbg !10082
  %12 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10082
  store i32 28, i32* %12, align 8, !dbg !10082
  br label %bb12, !dbg !10082

bb8:                                              ; preds = %bb1
  %13 = tail call noalias i8* @calloc(i64 1, i64 20) nounwind, !dbg !10083
  %14 = bitcast i8* %13 to %struct.sockaddr_storage*, !dbg !10083
  %15 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 0, !dbg !10083
  store %struct.sockaddr_storage* %14, %struct.sockaddr_storage** %15, align 8, !dbg !10083
  %16 = icmp eq i8* %13, null, !dbg !10083
  br i1 %16, label %bb12, label %bb10, !dbg !10083

bb10:                                             ; preds = %bb8
  %17 = bitcast i8* %13 to i16*, !dbg !10083
  store i16 2, i16* %17, align 8, !dbg !10083
  %18 = getelementptr inbounds %struct.exe_sockaddr_t* %a, i64 0, i32 1, !dbg !10083
  store i32 20, i32* %18, align 8, !dbg !10083
  br label %bb12, !dbg !10083

bb11:                                             ; preds = %bb1
  tail call void @__assert_fail(i8* getelementptr inbounds ([26 x i8]* @.str2387, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str1386, i64 0, i64 0), i32 127, i8* getelementptr inbounds ([20 x i8]* @__PRETTY_FUNCTION__.6681, i64 0, i64 0)) no
  unreachable, !dbg !10084

bb12:                                             ; preds = %bb10, %bb8, %bb7, %bb5, %bb4, %bb2
  %.0 = phi %struct.exe_sockaddr_t* [ %a, %bb10 ], [ %a, %bb7 ], [ %a, %bb4 ], [ null, %bb2 ], [ null, %bb5 ], [ null, %bb8 ]
  ret %struct.exe_sockaddr_t* %.0, !dbg !10081
}

define i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %connf = alloca %struct.exe_file_t*, align 8
  %fchild = alloca %struct.exe_file_t*, align 8
  %0 = call %struct.exe_file_t* @__get_file(i32 %sockfd) nounwind, !dbg !10085
  %1 = icmp eq %struct.exe_file_t* %0, null, !dbg !10086
  br i1 %1, label %bb, label %bb1, !dbg !10086

bb:                                               ; preds = %entry
  %2 = call i32* @__errno_location() nounwind readnone, !dbg !10087
  store i32 9, i32* %2, align 4, !dbg !10087
  br label %bb24, !dbg !10088

bb1:                                              ; preds = %entry
  %3 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 1, !dbg !10089
  %4 = load i32* %3, align 4, !dbg !10089
  %5 = and i32 %4, 16, !dbg !10089
  %6 = icmp eq i32 %5, 0, !dbg !10089
  br i1 %6, label %bb2, label %bb3, !dbg !10089

bb2:                                              ; preds = %bb1
  %7 = call i32* @__errno_location() nounwind readnone, !dbg !10090
  store i32 88, i32* %7, align 4, !dbg !10090
  br label %bb24, !dbg !10091

bb3:                                              ; preds = %bb1
  %8 = and i32 %4, 32, !dbg !10092
  %9 = icmp eq i32 %8, 0, !dbg !10092
  br i1 %9, label %bb5, label %bb4, !dbg !10092

bb4:                                              ; preds = %bb3
  %10 = call i32* @__errno_location() nounwind readnone, !dbg !10093
  store i32 95, i32* %10, align 4, !dbg !10093
  br label %bb24, !dbg !10094

bb5:                                              ; preds = %bb3
  %11 = and i32 %4, 64, !dbg !10095
  %12 = icmp eq i32 %11, 0, !dbg !10095
  br i1 %12, label %bb6, label %bb7, !dbg !10095

bb6:                                              ; preds = %bb5
  %13 = call i32* @__errno_location() nounwind readnone, !dbg !10096
  store i32 22, i32* %13, align 4, !dbg !10096
  br label %bb24, !dbg !10097

bb7:                                              ; preds = %bb5
  %14 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 3, !dbg !10098
  %15 = load %struct.exe_disk_file_t** %14, align 8, !dbg !10098
  %16 = icmp eq %struct.exe_disk_file_t* %15, null, !dbg !10098
  br i1 %16, label %bb19, label %bb8, !dbg !10098

bb8:                                              ; preds = %bb7
  %17 = call i32 @__get_new_fd(%struct.exe_file_t** %connf) nounwind, !dbg !10099
  %18 = icmp slt i32 %17, 0, !dbg !10100
  br i1 %18, label %bb24, label %bb10, !dbg !10100

bb10:                                             ; preds = %bb8
  %19 = load %struct.exe_file_t** %connf, align 8, !dbg !10101
  %20 = getelementptr inbounds %struct.exe_file_t* %19, i64 0, i32 1, !dbg !10101
  %21 = load i32* %20, align 4, !dbg !10101
  %22 = or i32 %21, 16, !dbg !10101
  store i32 %22, i32* %20, align 4, !dbg !10101
  %23 = load %struct.exe_file_t** %connf, align 8, !dbg !10102
  %24 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10103
  %25 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10103
  %26 = icmp ult i32 %24, %25, !dbg !10103
  br i1 %26, label %bb1.i, label %__get_sym_stream.exit, !dbg !10103

bb1.i:                                            ; preds = %bb10
  %27 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 8, !dbg !10105
  %28 = zext i32 %24 to i64, !dbg !10105
  %29 = getelementptr inbounds %struct.exe_disk_file_t* %27, i64 %28, !dbg !10105
  %30 = add i32 %24, 1, !dbg !10105
  store i32 %30, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10105
  br label %__get_sym_stream.exit, !dbg !10105

__get_sym_stream.exit:                            ; preds = %bb1.i, %bb10
  %.0.i = phi %struct.exe_disk_file_t* [ %29, %bb1.i ], [ null, %bb10 ]
  %31 = getelementptr inbounds %struct.exe_file_t* %23, i64 0, i32 3, !dbg !10102
  store %struct.exe_disk_file_t* %.0.i, %struct.exe_disk_file_t** %31, align 8, !dbg !10102
  %32 = load %struct.exe_file_t** %connf, align 8, !dbg !10106
  %33 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 3, !dbg !10106
  %34 = load %struct.exe_disk_file_t** %33, align 8, !dbg !10106
  %35 = icmp eq %struct.exe_disk_file_t* %34, null, !dbg !10106
  br i1 %35, label %bb11, label %bb12, !dbg !10106

bb11:                                             ; preds = %__get_sym_stream.exit
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str13397, i64 0, i64 0)) nounwind, !dbg !10107
  %36 = load %struct.exe_file_t** %connf, align 8, !dbg !10108
  call void @__undo_get_new_fd(%struct.exe_file_t* %36) nounwind, !dbg !10108
  %37 = call i32* @__errno_location() nounwind readnone, !dbg !10109
  store i32 23, i32* %37, align 4, !dbg !10109
  br label %bb24, !dbg !10110

bb12:                                             ; preds = %__get_sym_stream.exit
  %38 = getelementptr inbounds %struct.exe_file_t* %32, i64 0, i32 4, !dbg !10111
  %39 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 6, !dbg !10111
  %40 = load i32* %39, align 8, !dbg !10111
  %41 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %40, %struct.exe_sockaddr_t* %38) nounwind, !dbg !10111
  %42 = icmp eq %struct.exe_sockaddr_t* %41, null, !dbg !10111
  br i1 %42, label %bb13, label %bb14, !dbg !10111

bb13:                                             ; preds = %bb12
  %43 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10112
  %44 = add i32 %43, -1, !dbg !10112
  store i32 %44, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10112
  %45 = load %struct.exe_file_t** %connf, align 8, !dbg !10113
  call void @__undo_get_new_fd(%struct.exe_file_t* %45) nounwind, !dbg !10113
  %46 = call i32* @__errno_location() nounwind readnone, !dbg !10114
  store i32 12, i32* %46, align 4, !dbg !10114
  br label %bb24, !dbg !10115

bb14:                                             ; preds = %bb12
  %47 = load %struct.exe_file_t** %connf, align 8, !dbg !10116
  %48 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 3, !dbg !10116
  %49 = load %struct.exe_disk_file_t** %48, align 8, !dbg !10116
  %50 = getelementptr inbounds %struct.exe_disk_file_t* %49, i64 0, i32 4, !dbg !10116
  %51 = load %struct.exe_sockaddr_t** %50, align 8, !dbg !10116
  %52 = getelementptr inbounds %struct.exe_file_t* %47, i64 0, i32 4, i32 1, !dbg !10116
  %53 = load i32* %52, align 8, !dbg !10116
  %54 = getelementptr inbounds %struct.exe_sockaddr_t* %51, i64 0, i32 1, !dbg !10116
  store i32 %53, i32* %54, align 8, !dbg !10116
  %55 = load %struct.exe_file_t** %connf, align 8, !dbg !10117
  %56 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 3, !dbg !10117
  %57 = load %struct.exe_disk_file_t** %56, align 8, !dbg !10117
  %58 = getelementptr inbounds %struct.exe_disk_file_t* %57, i64 0, i32 4, !dbg !10117
  %59 = load %struct.exe_sockaddr_t** %58, align 8, !dbg !10117
  %60 = getelementptr inbounds %struct.exe_sockaddr_t* %59, i64 0, i32 0, !dbg !10117
  %61 = load %struct.sockaddr_storage** %60, align 8, !dbg !10117
  %62 = getelementptr inbounds %struct.exe_file_t* %55, i64 0, i32 4, i32 0, !dbg !10117
  %63 = load %struct.sockaddr_storage** %62, align 8, !dbg !10117
  %64 = getelementptr inbounds %struct.sockaddr_storage* %63, i64 0, i32 0, !dbg !10117
  %65 = load i16* %64, align 8, !dbg !10117
  %66 = getelementptr inbounds %struct.sockaddr_storage* %61, i64 0, i32 0, !dbg !10117
  store i16 %65, i16* %66, align 8, !dbg !10117
  %67 = load %struct.exe_file_t** %connf, align 8, !dbg !10118
  %68 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 3, !dbg !10118
  %69 = load %struct.exe_disk_file_t** %68, align 8, !dbg !10118
  %70 = getelementptr inbounds %struct.exe_disk_file_t* %69, i64 0, i32 4, !dbg !10118
  %71 = load %struct.exe_sockaddr_t** %70, align 8, !dbg !10118
  %72 = getelementptr inbounds %struct.exe_file_t* %67, i64 0, i32 5, !dbg !10118
  store %struct.exe_sockaddr_t* %71, %struct.exe_sockaddr_t** %72, align 8, !dbg !10118
  %73 = icmp eq %struct.sockaddr* %addr, null, !dbg !10119
  br i1 %73, label %bb14.bb18_crit_edge, label %bb15, !dbg !10119

bb14.bb18_crit_edge:                              ; preds = %bb14
  %.pre = load %struct.exe_file_t** %connf, align 8
  br label %bb18

bb15:                                             ; preds = %bb14
  %74 = load i32* %addrlen, align 4, !dbg !10120
  %75 = zext i32 %74 to i64, !dbg !10120
  %76 = bitcast %struct.sockaddr* %addr to i8*, !dbg !10120
  call void @klee_check_memory_access(i8* %76, i64 %75) nounwind, !dbg !10120
  %77 = load i32* %addrlen, align 4, !dbg !10121
  %78 = load %struct.exe_file_t** %connf, align 8, !dbg !10121
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10121
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10121
  %81 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 1, !dbg !10121
  %82 = load i32* %81, align 8, !dbg !10121
  %83 = icmp ult i32 %77, %82, !dbg !10121
  br i1 %83, label %bb16, label %bb17, !dbg !10121

bb16:                                             ; preds = %bb15
  %84 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10122
  %85 = load %struct.sockaddr_storage** %84, align 8, !dbg !10122
  %86 = bitcast %struct.sockaddr_storage* %85 to i8*, !dbg !10122
  call void @free(i8* %86) nounwind, !dbg !10122
  %87 = load %struct.exe_file_t** %connf, align 8, !dbg !10123
  %88 = getelementptr inbounds %struct.exe_file_t* %87, i64 0, i32 4, i32 0, !dbg !10123
  %89 = load %struct.sockaddr_storage** %88, align 8, !dbg !10123
  %90 = bitcast %struct.sockaddr_storage* %89 to i8*, !dbg !10123
  call void @free(i8* %90) nounwind, !dbg !10123
  %91 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10124
  %92 = add i32 %91, -1, !dbg !10124
  store i32 %92, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10124
  %93 = load %struct.exe_file_t** %connf, align 8, !dbg !10125
  call void @__undo_get_new_fd(%struct.exe_file_t* %93) nounwind, !dbg !10125
  %94 = call i32* @__errno_location() nounwind readnone, !dbg !10126
  store i32 22, i32* %94, align 4, !dbg !10126
  br label %bb24, !dbg !10127

bb17:                                             ; preds = %bb15
  %95 = zext i32 %82 to i64, !dbg !10128
  %96 = getelementptr inbounds %struct.exe_sockaddr_t* %80, i64 0, i32 0, !dbg !10128
  %97 = load %struct.sockaddr_storage** %96, align 8, !dbg !10128
  %98 = bitcast %struct.sockaddr_storage* %97 to i8*, !dbg !10128
  %99 = call i8* @memcpy(i8* %76, i8* %98, i64 %95)
  %100 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10129
  %101 = getelementptr inbounds %struct.exe_sockaddr_t* %100, i64 0, i32 1, !dbg !10129
  %102 = load i32* %101, align 8, !dbg !10129
  store i32 %102, i32* %addrlen, align 4, !dbg !10129
  br label %bb18, !dbg !10129

bb18:                                             ; preds = %bb17, %bb14.bb18_crit_edge
  %103 = phi %struct.exe_file_t* [ %.pre, %bb14.bb18_crit_edge ], [ %78, %bb17 ]
  %104 = getelementptr inbounds %struct.exe_file_t* %103, i64 0, i32 1, !dbg !10130
  %105 = load i32* %104, align 4, !dbg !10130
  %106 = or i32 %105, 12, !dbg !10130
  store i32 %106, i32* %104, align 4, !dbg !10130
  br label %bb24, !dbg !10131

bb19:                                             ; preds = %bb7
  %107 = call i32 @__get_new_fd(%struct.exe_file_t** %fchild) nounwind, !dbg !10132
  %108 = icmp slt i32 %107, 0, !dbg !10133
  br i1 %108, label %bb20, label %bb21, !dbg !10133

bb20:                                             ; preds = %bb19
  %109 = call i32* @__errno_location() nounwind readnone, !dbg !10134
  store i32 12, i32* %109, align 4, !dbg !10134
  br label %bb24, !dbg !10135

bb21:                                             ; preds = %bb19
  %110 = getelementptr inbounds %struct.exe_file_t* %0, i64 0, i32 0, !dbg !10136
  %111 = load i32* %110, align 8, !dbg !10136
  %112 = call i64 (i64, ...)* @syscall(i64 43, i32 %111, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10136
  %113 = trunc i64 %112 to i32, !dbg !10136
  %114 = icmp slt i32 %113, 0, !dbg !10137
  br i1 %114, label %bb22, label %bb23, !dbg !10137

bb22:                                             ; preds = %bb21
  %115 = call i32* @__errno_location() nounwind readnone, !dbg !10138
  %116 = call i32 @klee_get_errno() nounwind, !dbg !10138
  store i32 %116, i32* %115, align 4, !dbg !10138
  %117 = load %struct.exe_file_t** %fchild, align 8, !dbg !10139
  call void @__undo_get_new_fd(%struct.exe_file_t* %117) nounwind, !dbg !10139
  br label %bb24, !dbg !10140

bb23:                                             ; preds = %bb21
  %118 = load %struct.exe_file_t** %fchild, align 8, !dbg !10141
  %119 = getelementptr inbounds %struct.exe_file_t* %118, i64 0, i32 1, !dbg !10141
  %120 = load i32* %119, align 4, !dbg !10141
  %121 = or i32 %120, 16, !dbg !10141
  store i32 %121, i32* %119, align 4, !dbg !10141
  %122 = load %struct.exe_file_t** %fchild, align 8, !dbg !10142
  %123 = getelementptr inbounds %struct.exe_file_t* %122, i64 0, i32 1, !dbg !10142
  %124 = load i32* %123, align 4, !dbg !10142
  %125 = or i32 %124, 12, !dbg !10142
  store i32 %125, i32* %123, align 4, !dbg !10142
  %126 = load %struct.exe_file_t** %fchild, align 8, !dbg !10143
  %127 = getelementptr inbounds %struct.exe_file_t* %126, i64 0, i32 0, !dbg !10143
  store i32 %113, i32* %127, align 8, !dbg !10143
  br label %bb24, !dbg !10144

bb24:                                             ; preds = %bb23, %bb22, %bb20, %bb18, %bb16, %bb13, %bb11, %bb8, %bb6, %bb4, %bb2, %bb
  %.0 = phi i32 [ -1, %bb ], [ -1, %bb2 ], [ -1, %bb4 ], [ -1, %bb6 ], [ -1, %bb11 ], [ -1, %bb13 ], [ -1, %bb16 ], [ %17, %bb18 ], [ -1, %bb20 ], [ %113, %bb22 ], [ %107, %bb23 ], [ %17, %bb8 ]
  ret i32 %.0, !dbg !10088
}

define i32 @accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind {
entry:
  %0 = tail call i32 @__fd_accept(i32 %sockfd, %struct.sockaddr* %addr, i32* %addrlen) nounwind, !dbg !10145
  ret i32 %0, !dbg !10145
}

define weak i32 @socket(i32 %domain, i32 %type, i32 %protocol) nounwind {
entry:
  %f = alloca %struct.exe_file_t*, align 8
  %0 = call i32 @klee_zest_enabled() nounwind, !dbg !10147
  %1 = icmp eq i32 %0, 0, !dbg !10147
  br i1 %1, label %bb5, label %bb, !dbg !10147

bb:                                               ; preds = %entry
  %2 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10148
  %3 = icmp slt i32 %2, 0, !dbg !10149
  br i1 %3, label %bb1, label %bb2, !dbg !10149

bb1:                                              ; preds = %bb
  call void @klee_warning(i8* getelementptr inbounds ([25 x i8]* @.str14398, i64 0, i64 0)) nounwind, !dbg !10150
  %4 = call i32* @__errno_location() nounwind readnone, !dbg !10151
  store i32 24, i32* %4, align 4, !dbg !10151
  br label %bb28, !dbg !10152

bb2:                                              ; preds = %bb
  %5 = call i64 (i64, ...)* @syscall(i64 41, i32 %domain, i32 %type, i32 %protocol) nounwind, !dbg !10153
  %6 = trunc i64 %5 to i32, !dbg !10153
  %7 = icmp slt i32 %6, 0, !dbg !10154
  %8 = load %struct.exe_file_t** %f, align 8, !dbg !10155
  br i1 %7, label %bb3, label %bb4, !dbg !10154

bb3:                                              ; preds = %bb2
  call void @__undo_get_new_fd(%struct.exe_file_t* %8) nounwind, !dbg !10155
  %9 = call i32* @__errno_location() nounwind readnone, !dbg !10156
  %10 = call i32 @klee_get_errno() nounwind, !dbg !10156
  store i32 %10, i32* %9, align 4, !dbg !10156
  br label %bb28, !dbg !10157

bb4:                                              ; preds = %bb2
  %11 = getelementptr inbounds %struct.exe_file_t* %8, i64 0, i32 1, !dbg !10158
  %12 = load i32* %11, align 4, !dbg !10158
  %13 = or i32 %12, 16, !dbg !10158
  store i32 %13, i32* %11, align 4, !dbg !10158
  %14 = load %struct.exe_file_t** %f, align 8, !dbg !10159
  %15 = getelementptr inbounds %struct.exe_file_t* %14, i64 0, i32 1, !dbg !10159
  %16 = load i32* %15, align 4, !dbg !10159
  %17 = or i32 %16, 12, !dbg !10159
  store i32 %17, i32* %15, align 4, !dbg !10159
  %18 = load %struct.exe_file_t** %f, align 8, !dbg !10160
  %19 = getelementptr inbounds %struct.exe_file_t* %18, i64 0, i32 0, !dbg !10160
  store i32 %6, i32* %19, align 8, !dbg !10160
  br label %bb28, !dbg !10161

bb5:                                              ; preds = %entry
  switch i32 %domain, label %bb26 [
    i32 2, label %bb6
    i32 10, label %bb6
    i32 17, label %bb6
  ], !dbg !10162

bb6:                                              ; preds = %bb5, %bb5, %bb5
  switch i32 %type, label %bb25 [
    i32 1, label %bb7
    i32 2, label %bb16
    i32 3, label %bb16
    i32 10, label %bb16
  ], !dbg !10163

bb7:                                              ; preds = %bb6
  %20 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10164
  %21 = icmp slt i32 %20, 0, !dbg !10165
  br i1 %21, label %bb28, label %bb9, !dbg !10165

bb9:                                              ; preds = %bb7
  %22 = load %struct.exe_file_t** %f, align 8, !dbg !10166
  %23 = getelementptr inbounds %struct.exe_file_t* %22, i64 0, i32 1, !dbg !10166
  %24 = load i32* %23, align 4, !dbg !10166
  %25 = or i32 %24, 16, !dbg !10166
  store i32 %25, i32* %23, align 4, !dbg !10166
  %26 = load %struct.exe_file_t** %f, align 8, !dbg !10167
  %27 = getelementptr inbounds %struct.exe_file_t* %26, i64 0, i32 4, !dbg !10167
  %28 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %27) nounwind, !dbg !10167
  %29 = icmp eq %struct.exe_sockaddr_t* %28, null, !dbg !10167
  %30 = load %struct.exe_file_t** %f, align 8, !dbg !10168
  br i1 %29, label %bb10, label %bb11, !dbg !10167

bb10:                                             ; preds = %bb9
  call void @__undo_get_new_fd(%struct.exe_file_t* %30) nounwind, !dbg !10168
  %31 = call i32* @__errno_location() nounwind readnone, !dbg !10169
  store i32 12, i32* %31, align 4, !dbg !10169
  br label %bb28, !dbg !10170

bb11:                                             ; preds = %bb9
  %32 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10171
  %33 = bitcast i8* %32 to %struct.exe_sockaddr_t*, !dbg !10171
  %34 = getelementptr inbounds %struct.exe_file_t* %30, i64 0, i32 5, !dbg !10171
  store %struct.exe_sockaddr_t* %33, %struct.exe_sockaddr_t** %34, align 8, !dbg !10171
  %35 = load %struct.exe_file_t** %f, align 8, !dbg !10172
  %36 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 5, !dbg !10172
  %37 = load %struct.exe_sockaddr_t** %36, align 8, !dbg !10172
  %38 = icmp eq %struct.exe_sockaddr_t* %37, null, !dbg !10172
  br i1 %38, label %bb12, label %bb13, !dbg !10172

bb12:                                             ; preds = %bb11
  %39 = getelementptr inbounds %struct.exe_file_t* %35, i64 0, i32 4, i32 0, !dbg !10173
  %40 = load %struct.sockaddr_storage** %39, align 8, !dbg !10173
  %41 = bitcast %struct.sockaddr_storage* %40 to i8*, !dbg !10173
  call void @free(i8* %41) nounwind, !dbg !10173
  %42 = load %struct.exe_file_t** %f, align 8, !dbg !10174
  call void @__undo_get_new_fd(%struct.exe_file_t* %42) nounwind, !dbg !10174
  %43 = call i32* @__errno_location() nounwind readnone, !dbg !10175
  store i32 12, i32* %43, align 4, !dbg !10175
  br label %bb28, !dbg !10176

bb13:                                             ; preds = %bb11
  %44 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %37) nounwind, !dbg !10177
  %45 = icmp eq %struct.exe_sockaddr_t* %44, null, !dbg !10177
  %46 = load %struct.exe_file_t** %f, align 8, !dbg !10178
  br i1 %45, label %bb14, label %bb15, !dbg !10177

bb14:                                             ; preds = %bb13
  %47 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 5, !dbg !10178
  %48 = load %struct.exe_sockaddr_t** %47, align 8, !dbg !10178
  %49 = bitcast %struct.exe_sockaddr_t* %48 to i8*, !dbg !10178
  call void @free(i8* %49) nounwind, !dbg !10178
  %50 = load %struct.exe_file_t** %f, align 8, !dbg !10179
  %51 = getelementptr inbounds %struct.exe_file_t* %50, i64 0, i32 4, i32 0, !dbg !10179
  %52 = load %struct.sockaddr_storage** %51, align 8, !dbg !10179
  %53 = bitcast %struct.sockaddr_storage* %52 to i8*, !dbg !10179
  call void @free(i8* %53) nounwind, !dbg !10179
  %54 = load %struct.exe_file_t** %f, align 8, !dbg !10180
  call void @__undo_get_new_fd(%struct.exe_file_t* %54) nounwind, !dbg !10180
  %55 = call i32* @__errno_location() nounwind readnone, !dbg !10181
  store i32 12, i32* %55, align 4, !dbg !10181
  br label %bb28, !dbg !10182

bb15:                                             ; preds = %bb13
  %56 = getelementptr inbounds %struct.exe_file_t* %46, i64 0, i32 3, !dbg !10183
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %56, align 8, !dbg !10183
  %57 = load %struct.exe_file_t** %f, align 8, !dbg !10184
  %58 = getelementptr inbounds %struct.exe_file_t* %57, i64 0, i32 1, !dbg !10184
  %59 = load i32* %58, align 4, !dbg !10184
  %60 = or i32 %59, 12, !dbg !10184
  store i32 %60, i32* %58, align 4, !dbg !10184
  %61 = load %struct.exe_file_t** %f, align 8, !dbg !10185
  %62 = getelementptr inbounds %struct.exe_file_t* %61, i64 0, i32 6, !dbg !10185
  store i32 %domain, i32* %62, align 8, !dbg !10185
  br label %bb28, !dbg !10185

bb16:                                             ; preds = %bb6, %bb6, %bb6
  %63 = call i32 @__get_new_fd(%struct.exe_file_t** %f) nounwind, !dbg !10186
  %64 = icmp slt i32 %63, 0, !dbg !10187
  br i1 %64, label %bb28, label %bb18, !dbg !10187

bb18:                                             ; preds = %bb16
  %65 = load %struct.exe_file_t** %f, align 8, !dbg !10188
  %66 = getelementptr inbounds %struct.exe_file_t* %65, i64 0, i32 1, !dbg !10188
  %67 = load i32* %66, align 4, !dbg !10188
  %68 = or i32 %67, 48, !dbg !10188
  store i32 %68, i32* %66, align 4, !dbg !10188
  %69 = load %struct.exe_file_t** %f, align 8, !dbg !10189
  %70 = getelementptr inbounds %struct.exe_file_t* %69, i64 0, i32 4, !dbg !10189
  %71 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %70) nounwind, !dbg !10189
  %72 = icmp eq %struct.exe_sockaddr_t* %71, null, !dbg !10189
  %73 = load %struct.exe_file_t** %f, align 8, !dbg !10190
  br i1 %72, label %bb19, label %bb20, !dbg !10189

bb19:                                             ; preds = %bb18
  call void @__undo_get_new_fd(%struct.exe_file_t* %73) nounwind, !dbg !10190
  %74 = call i32* @__errno_location() nounwind readnone, !dbg !10191
  store i32 12, i32* %74, align 4, !dbg !10191
  br label %bb28, !dbg !10192

bb20:                                             ; preds = %bb18
  %75 = call noalias i8* @malloc(i64 16) nounwind, !dbg !10193
  %76 = bitcast i8* %75 to %struct.exe_sockaddr_t*, !dbg !10193
  %77 = getelementptr inbounds %struct.exe_file_t* %73, i64 0, i32 5, !dbg !10193
  store %struct.exe_sockaddr_t* %76, %struct.exe_sockaddr_t** %77, align 8, !dbg !10193
  %78 = load %struct.exe_file_t** %f, align 8, !dbg !10194
  %79 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 5, !dbg !10194
  %80 = load %struct.exe_sockaddr_t** %79, align 8, !dbg !10194
  %81 = icmp eq %struct.exe_sockaddr_t* %80, null, !dbg !10194
  br i1 %81, label %bb21, label %bb22, !dbg !10194

bb21:                                             ; preds = %bb20
  %82 = getelementptr inbounds %struct.exe_file_t* %78, i64 0, i32 4, i32 0, !dbg !10195
  %83 = load %struct.sockaddr_storage** %82, align 8, !dbg !10195
  %84 = bitcast %struct.sockaddr_storage* %83 to i8*, !dbg !10195
  call void @free(i8* %84) nounwind, !dbg !10195
  %85 = load %struct.exe_file_t** %f, align 8, !dbg !10196
  call void @__undo_get_new_fd(%struct.exe_file_t* %85) nounwind, !dbg !10196
  %86 = call i32* @__errno_location() nounwind readnone, !dbg !10197
  store i32 12, i32* %86, align 4, !dbg !10197
  br label %bb28, !dbg !10198

bb22:                                             ; preds = %bb20
  %87 = call fastcc %struct.exe_sockaddr_t* @__allocate_sockaddr(i32 %domain, %struct.exe_sockaddr_t* %80) nounwind, !dbg !10199
  %88 = icmp eq %struct.exe_sockaddr_t* %87, null, !dbg !10199
  %89 = load %struct.exe_file_t** %f, align 8, !dbg !10200
  br i1 %88, label %bb23, label %bb24, !dbg !10199

bb23:                                             ; preds = %bb22
  %90 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 5, !dbg !10200
  %91 = load %struct.exe_sockaddr_t** %90, align 8, !dbg !10200
  %92 = bitcast %struct.exe_sockaddr_t* %91 to i8*, !dbg !10200
  call void @free(i8* %92) nounwind, !dbg !10200
  %93 = load %struct.exe_file_t** %f, align 8, !dbg !10201
  %94 = getelementptr inbounds %struct.exe_file_t* %93, i64 0, i32 4, i32 0, !dbg !10201
  %95 = load %struct.sockaddr_storage** %94, align 8, !dbg !10201
  %96 = bitcast %struct.sockaddr_storage* %95 to i8*, !dbg !10201
  call void @free(i8* %96) nounwind, !dbg !10201
  %97 = load %struct.exe_file_t** %f, align 8, !dbg !10202
  call void @__undo_get_new_fd(%struct.exe_file_t* %97) nounwind, !dbg !10202
  %98 = call i32* @__errno_location() nounwind readnone, !dbg !10203
  store i32 12, i32* %98, align 4, !dbg !10203
  br label %bb28, !dbg !10204

bb24:                                             ; preds = %bb22
  %99 = getelementptr inbounds %struct.exe_file_t* %89, i64 0, i32 3, !dbg !10205
  store %struct.exe_disk_file_t* @dummy_dfile, %struct.exe_disk_file_t** %99, align 8, !dbg !10205
  %100 = load %struct.exe_file_t** %f, align 8, !dbg !10206
  %101 = getelementptr inbounds %struct.exe_file_t* %100, i64 0, i32 1, !dbg !10206
  %102 = load i32* %101, align 4, !dbg !10206
  %103 = or i32 %102, 12, !dbg !10206
  store i32 %103, i32* %101, align 4, !dbg !10206
  br label %bb28, !dbg !10206

bb25:                                             ; preds = %bb6
  call void @klee_warning(i8* getelementptr inbounds ([24 x i8]* @.str15399, i64 0, i64 0)) nounwind, !dbg !10207
  %104 = call i32* @__errno_location() nounwind readnone, !dbg !10208
  store i32 94, i32* %104, align 4, !dbg !10208
  br label %bb28, !dbg !10209

bb26:                                             ; preds = %bb5
  call void @klee_warning(i8* getelementptr inbounds ([28 x i8]* @.str16400, i64 0, i64 0)) nounwind, !dbg !10210
  %105 = call i32* @__errno_location() nounwind readnone, !dbg !10211
  store i32 93, i32* %105, align 4, !dbg !10211
  br label %bb28, !dbg !10212

bb28:                                             ; preds = %bb26, %bb25, %bb24, %bb23, %bb21, %bb19, %bb16, %bb15, %bb14, %bb12, %bb10, %bb7, %bb4, %bb3, %bb1
  %.0 = phi i32 [ %2, %bb1 ], [ %6, %bb3 ], [ %2, %bb4 ], [ -1, %bb26 ], [ -1, %bb25 ], [ -1, %bb19 ], [ -1, %bb21 ], [ -1, %bb23 ], [ -1, %bb10 ], [ -1, %bb12 ], [ -1, %bb14 ], [ %20, %bb7 ], [ %63, %bb16 ], [ %63, %bb24 ], [ %20, %bb15 ]
  ret i32 %.0, !dbg !10152
}

define i32 @__fd_socket(i64* nocapture %args) nounwind {
entry:
  %0 = load i64* %args, align 8, !dbg !10213
  %1 = trunc i64 %0 to i32, !dbg !10213
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10214
  %3 = load i64* %2, align 8, !dbg !10214
  %4 = trunc i64 %3 to i32, !dbg !10214
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10215
  %6 = load i64* %5, align 8, !dbg !10215
  %7 = trunc i64 %6 to i32, !dbg !10215
  %8 = tail call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10216
  ret i32 %8, !dbg !10216
}

define weak i32 @__socketcall(i32 %type, i64* %args) nounwind {
entry:
  %iov.i21 = alloca %struct.direntry_t, align 8
  %msg.i22 = alloca %struct.msghdr, align 8
  %iov.i = alloca %struct.direntry_t, align 8
  %msg.i = alloca %struct.msghdr, align 8
  %iov.i.i19 = alloca %struct.direntry_t, align 8
  %msg.i.i20 = alloca %struct.msghdr, align 8
  %iov.i.i = alloca %struct.direntry_t, align 8
  %msg.i.i = alloca %struct.msghdr, align 8
  switch i32 %type, label %bb16 [
    i32 1, label %bb
    i32 2, label %bb1
    i32 3, label %bb2
    i32 4, label %bb3
    i32 5, label %bb4
    i32 6, label %bb5
    i32 7, label %bb6
    i32 17, label %bb15
    i32 9, label %bb7
    i32 10, label %bb8
    i32 11, label %bb9
    i32 12, label %bb10
    i32 13, label %bb11
    i32 14, label %bb12
    i32 15, label %bb13
    i32 16, label %bb14
  ], !dbg !10217

bb:                                               ; preds = %entry
  %0 = load i64* %args, align 8, !dbg !10219
  %1 = trunc i64 %0 to i32, !dbg !10219
  %2 = getelementptr inbounds i64* %args, i64 1, !dbg !10221
  %3 = load i64* %2, align 8, !dbg !10221
  %4 = trunc i64 %3 to i32, !dbg !10221
  %5 = getelementptr inbounds i64* %args, i64 2, !dbg !10222
  %6 = load i64* %5, align 8, !dbg !10222
  %7 = trunc i64 %6 to i32, !dbg !10222
  %8 = call i32 @socket(i32 %1, i32 %4, i32 %7) nounwind, !dbg !10223
  br label %bb17, !dbg !10220

bb1:                                              ; preds = %entry
  %9 = load i64* %args, align 8, !dbg !10224
  %10 = trunc i64 %9 to i32, !dbg !10224
  %11 = getelementptr inbounds i64* %args, i64 1, !dbg !10226
  %12 = load i64* %11, align 8, !dbg !10226
  %13 = inttoptr i64 %12 to %struct.sockaddr*, !dbg !10226
  %14 = getelementptr inbounds i64* %args, i64 2, !dbg !10227
  %15 = load i64* %14, align 8, !dbg !10227
  %16 = trunc i64 %15 to i32, !dbg !10227
  %17 = call i32 @bind(i32 %10, %struct.sockaddr* %13, i32 %16) nounwind, !dbg !10228
  br label %bb17, !dbg !10225

bb2:                                              ; preds = %entry
  %18 = load i64* %args, align 8, !dbg !10229
  %19 = trunc i64 %18 to i32, !dbg !10229
  %20 = getelementptr inbounds i64* %args, i64 1, !dbg !10231
  %21 = load i64* %20, align 8, !dbg !10231
  %22 = inttoptr i64 %21 to %struct.sockaddr*, !dbg !10231
  %23 = getelementptr inbounds i64* %args, i64 2, !dbg !10232
  %24 = load i64* %23, align 8, !dbg !10232
  %25 = trunc i64 %24 to i32, !dbg !10232
  %26 = call i32 @connect(i32 %19, %struct.sockaddr* %22, i32 %25) nounwind, !dbg !10233
  br label %bb17, !dbg !10230

bb3:                                              ; preds = %entry
  %27 = load i64* %args, align 8, !dbg !10234
  %28 = trunc i64 %27 to i32, !dbg !10234
  %29 = getelementptr inbounds i64* %args, i64 1, !dbg !10236
  %30 = load i64* %29, align 8, !dbg !10236
  %31 = trunc i64 %30 to i32, !dbg !10236
  %32 = call i32 @listen(i32 %28, i32 %31) nounwind, !dbg !10237
  br label %bb17, !dbg !10235

bb4:                                              ; preds = %entry
  %33 = getelementptr inbounds i64* %args, i64 2, !dbg !10238
  %34 = load i64* %33, align 8, !dbg !10238
  %35 = inttoptr i64 %34 to i32*, !dbg !10238
  %36 = getelementptr inbounds i64* %args, i64 1, !dbg !10238
  %37 = load i64* %36, align 8, !dbg !10238
  %38 = inttoptr i64 %37 to %struct.sockaddr*, !dbg !10238
  %39 = load i64* %args, align 8, !dbg !10238
  %40 = trunc i64 %39 to i32, !dbg !10238
  %41 = call i32 @__fd_accept(i32 %40, %struct.sockaddr* %38, i32* %35) nounwind, !dbg !10238
  br label %bb17, !dbg !10238

bb5:                                              ; preds = %entry
  %42 = load i64* %args, align 8, !dbg !10239
  %43 = trunc i64 %42 to i32, !dbg !10239
  %44 = getelementptr inbounds i64* %args, i64 1, !dbg !10241
  %45 = load i64* %44, align 8, !dbg !10241
  %46 = inttoptr i64 %45 to %struct.sockaddr*, !dbg !10241
  %47 = getelementptr inbounds i64* %args, i64 2, !dbg !10242
  %48 = load i64* %47, align 8, !dbg !10242
  %49 = inttoptr i64 %48 to i32*, !dbg !10242
  %50 = call i32 @getsockname(i32 %43, %struct.sockaddr* %46, i32* %49) nounwind, !dbg !10243
  br label %bb17, !dbg !10240

bb6:                                              ; preds = %entry
  %51 = load i64* %args, align 8, !dbg !10244
  %52 = trunc i64 %51 to i32, !dbg !10244
  %53 = getelementptr inbounds i64* %args, i64 1, !dbg !10246
  %54 = load i64* %53, align 8, !dbg !10246
  %55 = inttoptr i64 %54 to %struct.sockaddr*, !dbg !10246
  %56 = getelementptr inbounds i64* %args, i64 2, !dbg !10247
  %57 = load i64* %56, align 8, !dbg !10247
  %58 = inttoptr i64 %57 to i32*, !dbg !10247
  %59 = call i32 @getpeername(i32 %52, %struct.sockaddr* %55, i32* %58) nounwind, !dbg !10248
  br label %bb17, !dbg !10245

bb7:                                              ; preds = %entry
  %60 = getelementptr inbounds i64* %args, i64 3, !dbg !10249
  %61 = load i64* %60, align 8, !dbg !10249
  %62 = trunc i64 %61 to i32, !dbg !10249
  %63 = getelementptr inbounds i64* %args, i64 2, !dbg !10249
  %64 = load i64* %63, align 8, !dbg !10249
  %65 = getelementptr inbounds i64* %args, i64 1, !dbg !10249
  %66 = load i64* %65, align 8, !dbg !10249
  %67 = inttoptr i64 %66 to i8*, !dbg !10249
  %68 = load i64* %args, align 8, !dbg !10249
  %69 = trunc i64 %68 to i32, !dbg !10249
  %70 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 0, !dbg !10250
  store i8* %67, i8** %70, align 8, !dbg !10250
  %71 = getelementptr inbounds %struct.direntry_t* %iov.i.i, i64 0, i32 1, !dbg !10252
  store i64 %64, i64* %71, align 8, !dbg !10252
  %72 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 0, !dbg !10253
  store i8* null, i8** %72, align 8, !dbg !10253
  %73 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 1, !dbg !10254
  store i32 0, i32* %73, align 8, !dbg !10254
  %74 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 2, !dbg !10255
  store %struct.direntry_t* %iov.i.i, %struct.direntry_t** %74, align 8, !dbg !10255
  %75 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 3, !dbg !10256
  store i64 1, i64* %75, align 8, !dbg !10256
  %76 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 4, !dbg !10257
  store i8* null, i8** %76, align 8, !dbg !10257
  %77 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 5, !dbg !10258
  store i64 0, i64* %77, align 8, !dbg !10258
  %78 = getelementptr inbounds %struct.msghdr* %msg.i.i, i64 0, i32 6, !dbg !10259
  store i32 %62, i32* %78, align 8, !dbg !10259
  %79 = call i64 @__fd_sendmsg(i32 %69, %struct.msghdr* %msg.i.i, i32 %62) nounwind, !dbg !10260
  %80 = trunc i64 %79 to i32, !dbg !10249
  br label %bb17, !dbg !10249

bb8:                                              ; preds = %entry
  %81 = getelementptr inbounds i64* %args, i64 3, !dbg !10261
  %82 = load i64* %81, align 8, !dbg !10261
  %83 = trunc i64 %82 to i32, !dbg !10261
  %84 = getelementptr inbounds i64* %args, i64 2, !dbg !10261
  %85 = load i64* %84, align 8, !dbg !10261
  %86 = getelementptr inbounds i64* %args, i64 1, !dbg !10261
  %87 = load i64* %86, align 8, !dbg !10261
  %88 = inttoptr i64 %87 to i8*, !dbg !10261
  %89 = load i64* %args, align 8, !dbg !10261
  %90 = trunc i64 %89 to i32, !dbg !10261
  %91 = getelementptr inbounds %struct.direntry_t* %iov.i.i19, i64 0, i32 0, !dbg !10262
  store i8* %88, i8** %91, align 8, !dbg !10262
  %92 = getelementptr inbounds %struct.direntry_t* %iov.i.i19, i64 0, i32 1, !dbg !10264
  store i64 %85, i64* %92, align 8, !dbg !10264
  %93 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 0, !dbg !10265
  store i8* null, i8** %93, align 8, !dbg !10265
  %94 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 1, !dbg !10266
  store i32 0, i32* %94, align 8, !dbg !10266
  %95 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 2, !dbg !10267
  store %struct.direntry_t* %iov.i.i19, %struct.direntry_t** %95, align 8, !dbg !10267
  %96 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 3, !dbg !10268
  store i64 1, i64* %96, align 8, !dbg !10268
  %97 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 4, !dbg !10269
  store i8* null, i8** %97, align 8, !dbg !10269
  %98 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 5, !dbg !10270
  store i64 0, i64* %98, align 8, !dbg !10270
  %99 = getelementptr inbounds %struct.msghdr* %msg.i.i20, i64 0, i32 6, !dbg !10271
  store i32 %83, i32* %99, align 8, !dbg !10271
  %100 = call i64 @__fd_recvmsg(i32 %90, %struct.msghdr* %msg.i.i20, i32 %83) nounwind, !dbg !10272
  %101 = trunc i64 %100 to i32, !dbg !10261
  br label %bb17, !dbg !10261

bb9:                                              ; preds = %entry
  %102 = getelementptr inbounds i64* %args, i64 5, !dbg !10273
  %103 = load i64* %102, align 8, !dbg !10273
  %104 = trunc i64 %103 to i32, !dbg !10273
  %105 = getelementptr inbounds i64* %args, i64 4, !dbg !10273
  %106 = load i64* %105, align 8, !dbg !10273
  %107 = getelementptr inbounds i64* %args, i64 3, !dbg !10273
  %108 = load i64* %107, align 8, !dbg !10273
  %109 = trunc i64 %108 to i32, !dbg !10273
  %110 = getelementptr inbounds i64* %args, i64 2, !dbg !10273
  %111 = load i64* %110, align 8, !dbg !10273
  %112 = getelementptr inbounds i64* %args, i64 1, !dbg !10273
  %113 = load i64* %112, align 8, !dbg !10273
  %114 = inttoptr i64 %113 to i8*, !dbg !10273
  %115 = load i64* %args, align 8, !dbg !10273
  %116 = trunc i64 %115 to i32, !dbg !10273
  %117 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 0, !dbg !10274
  store i8* %114, i8** %117, align 8, !dbg !10274
  %118 = getelementptr inbounds %struct.direntry_t* %iov.i, i64 0, i32 1, !dbg !10275
  store i64 %111, i64* %118, align 8, !dbg !10275
  %119 = inttoptr i64 %106 to i8*, !dbg !10276
  %120 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 0, !dbg !10276
  store i8* %119, i8** %120, align 8, !dbg !10276
  %121 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 1, !dbg !10277
  store i32 %104, i32* %121, align 8, !dbg !10277
  %122 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 2, !dbg !10278
  store %struct.direntry_t* %iov.i, %struct.direntry_t** %122, align 8, !dbg !10278
  %123 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 3, !dbg !10279
  store i64 1, i64* %123, align 8, !dbg !10279
  %124 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 4, !dbg !10280
  store i8* null, i8** %124, align 8, !dbg !10280
  %125 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 5, !dbg !10281
  store i64 0, i64* %125, align 8, !dbg !10281
  %126 = getelementptr inbounds %struct.msghdr* %msg.i, i64 0, i32 6, !dbg !10282
  store i32 %109, i32* %126, align 8, !dbg !10282
  %127 = call i64 @__fd_sendmsg(i32 %116, %struct.msghdr* %msg.i, i32 %109) nounwind, !dbg !10283
  %128 = trunc i64 %127 to i32, !dbg !10273
  br label %bb17, !dbg !10273

bb10:                                             ; preds = %entry
  %129 = getelementptr inbounds i64* %args, i64 5, !dbg !10284
  %130 = load i64* %129, align 8, !dbg !10284
  %131 = inttoptr i64 %130 to i32*, !dbg !10284
  %132 = getelementptr inbounds i64* %args, i64 4, !dbg !10284
  %133 = load i64* %132, align 8, !dbg !10284
  %134 = getelementptr inbounds i64* %args, i64 3, !dbg !10284
  %135 = load i64* %134, align 8, !dbg !10284
  %136 = trunc i64 %135 to i32, !dbg !10284
  %137 = load i64* %args, align 8, !dbg !10284
  %138 = trunc i64 %137 to i32, !dbg !10284
  %139 = icmp ne i64 %133, 0, !dbg !10285
  %140 = icmp eq i64 %130, 0, !dbg !10285
  %141 = and i1 %139, %140, !dbg !10285
  br i1 %141, label %bb.i, label %bb3.i, !dbg !10285

bb.i:                                             ; preds = %bb10
  %142 = call i32* @__errno_location() nounwind readnone, !dbg !10286
  store i32 14, i32* %142, align 4, !dbg !10286
  br label %__fd_recvfrom.exit, !dbg !10287

bb3.i:                                            ; preds = %bb10
  %143 = getelementptr inbounds i64* %args, i64 1, !dbg !10284
  %144 = load i64* %143, align 8, !dbg !10284
  %145 = getelementptr inbounds i64* %args, i64 2, !dbg !10284
  %146 = inttoptr i64 %144 to i8*, !dbg !10284
  %147 = load i64* %145, align 8, !dbg !10284
  %148 = getelementptr inbounds %struct.direntry_t* %iov.i21, i64 0, i32 0, !dbg !10288
  store i8* %146, i8** %148, align 8, !dbg !10288
  %149 = getelementptr inbounds %struct.direntry_t* %iov.i21, i64 0, i32 1, !dbg !10289
  store i64 %147, i64* %149, align 8, !dbg !10289
  %150 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 0, !dbg !10290
  %151 = inttoptr i64 %133 to i8*, !dbg !10290
  store i8* %151, i8** %150, align 8, !dbg !10290
  br i1 %140, label %bb6.i, label %bb4.i, !dbg !10291

bb4.i:                                            ; preds = %bb3.i
  %152 = load i32* %131, align 4, !dbg !10291
  br label %bb6.i, !dbg !10291

bb6.i:                                            ; preds = %bb4.i, %bb3.i
  %iftmp.113.0.i = phi i32 [ %152, %bb4.i ], [ 0, %bb3.i ]
  %153 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 1, !dbg !10291
  store i32 %iftmp.113.0.i, i32* %153, align 8, !dbg !10291
  %154 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 2, !dbg !10292
  store %struct.direntry_t* %iov.i21, %struct.direntry_t** %154, align 8, !dbg !10292
  %155 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 3, !dbg !10293
  store i64 1, i64* %155, align 8, !dbg !10293
  %156 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 4, !dbg !10294
  store i8* null, i8** %156, align 8, !dbg !10294
  %157 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 5, !dbg !10295
  store i64 0, i64* %157, align 8, !dbg !10295
  %158 = getelementptr inbounds %struct.msghdr* %msg.i22, i64 0, i32 6, !dbg !10296
  store i32 %136, i32* %158, align 8, !dbg !10296
  %159 = call i64 @__fd_recvmsg(i32 %138, %struct.msghdr* %msg.i22, i32 %136) nounwind, !dbg !10297
  br i1 %140, label %__fd_recvfrom.exit, label %bb7.i, !dbg !10298

bb7.i:                                            ; preds = %bb6.i
  %160 = load i32* %153, align 8, !dbg !10298
  store i32 %160, i32* %131, align 4, !dbg !10298
  br label %__fd_recvfrom.exit, !dbg !10298

__fd_recvfrom.exit:                               ; preds = %bb7.i, %bb6.i, %bb.i
  %.0.i = phi i64 [ -1, %bb.i ], [ %159, %bb6.i ], [ %159, %bb7.i ]
  %161 = trunc i64 %.0.i to i32, !dbg !10284
  br label %bb17, !dbg !10284

bb11:                                             ; preds = %entry
  %162 = load i64* %args, align 8, !dbg !10299
  %163 = trunc i64 %162 to i32, !dbg !10299
  %164 = getelementptr inbounds i64* %args, i64 1, !dbg !10301
  %165 = load i64* %164, align 8, !dbg !10301
  %166 = trunc i64 %165 to i32, !dbg !10301
  %167 = call i32 @shutdown(i32 %163, i32 %166) nounwind, !dbg !10302
  br label %bb17, !dbg !10300

bb12:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str17401, i64 0, i64 0)) nounwind, !dbg !10303
  br label %bb17, !dbg !10304

bb13:                                             ; preds = %entry
  call void @klee_warning(i8* getelementptr inbounds ([20 x i8]* @.str18402, i64 0, i64 0)) nounwind, !dbg !10305
  br label %bb17, !dbg !10306

bb14:                                             ; preds = %entry
  %168 = getelementptr inbounds i64* %args, i64 2, !dbg !10307
  %169 = load i64* %168, align 8, !dbg !10307
  %170 = trunc i64 %169 to i32, !dbg !10307
  %171 = getelementptr inbounds i64* %args, i64 1, !dbg !10307
  %172 = load i64* %171, align 8, !dbg !10307
  %173 = inttoptr i64 %172 to %struct.msghdr*, !dbg !10307
  %174 = load i64* %args, align 8, !dbg !10307
  %175 = trunc i64 %174 to i32, !dbg !10307
  %176 = call i64 @__fd_sendmsg(i32 %175, %struct.msghdr* %173, i32 %170) nounwind, !dbg !10307
  %177 = trunc i64 %176 to i32, !dbg !10307
  br label %bb17, !dbg !10307

bb15:                                             ; preds = %entry
  %178 = getelementptr inbounds i64* %args, i64 2, !dbg !10308
  %179 = load i64* %178, align 8, !dbg !10308
  %180 = trunc i64 %179 to i32, !dbg !10308
  %181 = getelementptr inbounds i64* %args, i64 1, !dbg !10308
  %182 = load i64* %181, align 8, !dbg !10308
  %183 = inttoptr i64 %182 to %struct.msghdr*, !dbg !10308
  %184 = load i64* %args, align 8, !dbg !10308
  %185 = trunc i64 %184 to i32, !dbg !10308
  %186 = call i64 @__fd_recvmsg(i32 %185, %struct.msghdr* %183, i32 %180) nounwind, !dbg !10308
  %187 = trunc i64 %186 to i32, !dbg !10308
  br label %bb17, !dbg !10308

bb16:                                             ; preds = %entry
  %188 = call i32 (i8*, ...)* @printf(i8* noalias getelementptr inbounds ([46 x i8]* @.str19403, i64 0, i64 0), i32 %type) nounwind, !dbg !10309
  %189 = call i32* @__errno_location() nounwind readnone, !dbg !10310
  store i32 38, i32* %189, align 4, !dbg !10310
  br label %bb17, !dbg !10311

bb17:                                             ; preds = %bb16, %bb15, %bb14, %bb13, %bb12, %bb11, %__fd_recvfrom.exit, %bb9, %bb8, %bb7, %bb6, %bb5, %bb4, %bb3, %bb2, %bb1, %bb
  %.0 = phi i32 [ -1, %bb16 ], [ %177, %bb14 ], [ 0, %bb13 ], [ 0, %bb12 ], [ %167, %bb11 ], [ %161, %__fd_recvfrom.exit ], [ %128, %bb9 ], [ %101, %bb8 ], [ %80, %bb7 ], [ %187, %bb15 ], [ %59, %bb6 ], [ %50, %bb5 ], [ %41, %bb4 ], [ %32, %bb3 ], [ %26,
  ret i32 %.0, !dbg !10220
}

define weak i8* @canonicalize_file_name(i8* %name) nounwind {
entry:
  %0 = tail call i8* @realpath(i8* noalias %name, i8* noalias null) nounwind, !dbg !10312
  ret i8* %0, !dbg !10312
}

define i32 @open(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !10314
  %1 = icmp eq i32 %0, 0, !dbg !10314
  br i1 %1, label %bb8, label %bb, !dbg !10314

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !10315
  call void @llvm.va_start(i8* %ap12), !dbg !10315
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !10316
  %3 = load i32* %2, align 8, !dbg !10316
  %4 = icmp ugt i32 %3, 47, !dbg !10316
  br i1 %4, label %bb4, label %bb3, !dbg !10316

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !10316
  %6 = load i8** %5, align 8, !dbg !10316
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !10316
  %8 = add i64 %7, %tmp, !dbg !10316
  %9 = inttoptr i64 %8 to i8*, !dbg !10316
  %10 = add i32 %3, 8, !dbg !10316
  store i32 %10, i32* %2, align 8, !dbg !10316
  br label %bb5, !dbg !10316

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !10316
  %12 = load i8** %11, align 8, !dbg !10316
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !10316
  store i8* %13, i8** %11, align 8, !dbg !10316
  br label %bb5, !dbg !10316

bb5:                                              ; preds = %bb4, %bb3
  %addr.27.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.27.0 to i32*, !dbg !10316
  %15 = load i32* %14, align 4, !dbg !10316
  call void @llvm.va_end(i8* %ap12), !dbg !10317
  br label %bb8, !dbg !10317

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !10318
  ret i32 %16, !dbg !10318
}

define weak i32 @fstat64(i32 %fd, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_fstat(i32 %fd, %struct.stat* %buf) nounwind, !dbg !10319
  ret i32 %0, !dbg !10319
}

define i32 @fstat(i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !10321
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10322
  %2 = load i64* %1, align 8, !dbg !10322
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10322
  store i64 %2, i64* %3, align 8, !dbg !10322
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10325
  %5 = load i64* %4, align 8, !dbg !10325
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10325
  store i64 %5, i64* %6, align 8, !dbg !10325
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10326
  %8 = load i32* %7, align 8, !dbg !10326
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10326
  store i32 %8, i32* %9, align 8, !dbg !10326
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10327
  %11 = load i64* %10, align 8, !dbg !10327
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10327
  store i64 %11, i64* %12, align 8, !dbg !10327
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10328
  %14 = load i32* %13, align 4, !dbg !10328
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10328
  store i32 %14, i32* %15, align 4, !dbg !10328
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10329
  %17 = load i32* %16, align 8, !dbg !10329
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10329
  store i32 %17, i32* %18, align 8, !dbg !10329
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10330
  %20 = load i64* %19, align 8, !dbg !10330
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10330
  store i64 %20, i64* %21, align 8, !dbg !10330
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10331
  %23 = load i64* %22, align 8, !dbg !10331
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10331
  store i64 %23, i64* %24, align 8, !dbg !10331
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10332
  %26 = load i64* %25, align 8, !dbg !10332
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10332
  store i64 %26, i64* %27, align 8, !dbg !10332
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10333
  %29 = load i64* %28, align 8, !dbg !10333
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10333
  store i64 %29, i64* %30, align 8, !dbg !10333
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10334
  %32 = load i64* %31, align 8, !dbg !10334
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10334
  store i64 %32, i64* %33, align 8, !dbg !10334
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10335
  %35 = load i64* %34, align 8, !dbg !10335
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10335
  store i64 %35, i64* %36, align 8, !dbg !10335
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10336
  %38 = load i64* %37, align 8, !dbg !10336
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10336
  store i64 %38, i64* %39, align 8, !dbg !10336
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10337
  %41 = load i64* %40, align 8, !dbg !10337
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10337
  store i64 %41, i64* %42, align 8, !dbg !10337
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10338
  %44 = load i64* %43, align 8, !dbg !10338
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10338
  store i64 %44, i64* %45, align 8, !dbg !10338
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10339
  %47 = load i64* %46, align 8, !dbg !10339
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10339
  store i64 %47, i64* %48, align 8, !dbg !10339
  ret i32 %0, !dbg !10340
}

define i32 @__fxstat(i32 %vers, i32 %fd, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_fstat(i32 %fd, %struct.stat* %tmp) nounwind, !dbg !10341
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10342
  %2 = load i64* %1, align 8, !dbg !10342
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10342
  store i64 %2, i64* %3, align 8, !dbg !10342
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10344
  %5 = load i64* %4, align 8, !dbg !10344
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10344
  store i64 %5, i64* %6, align 8, !dbg !10344
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10345
  %8 = load i32* %7, align 8, !dbg !10345
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10345
  store i32 %8, i32* %9, align 8, !dbg !10345
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10346
  %11 = load i64* %10, align 8, !dbg !10346
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10346
  store i64 %11, i64* %12, align 8, !dbg !10346
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10347
  %14 = load i32* %13, align 4, !dbg !10347
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10347
  store i32 %14, i32* %15, align 4, !dbg !10347
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10348
  %17 = load i32* %16, align 8, !dbg !10348
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10348
  store i32 %17, i32* %18, align 8, !dbg !10348
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10349
  %20 = load i64* %19, align 8, !dbg !10349
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10349
  store i64 %20, i64* %21, align 8, !dbg !10349
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10350
  %23 = load i64* %22, align 8, !dbg !10350
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10350
  store i64 %23, i64* %24, align 8, !dbg !10350
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10351
  %26 = load i64* %25, align 8, !dbg !10351
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10351
  store i64 %26, i64* %27, align 8, !dbg !10351
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10352
  %29 = load i64* %28, align 8, !dbg !10352
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10352
  store i64 %29, i64* %30, align 8, !dbg !10352
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10353
  %32 = load i64* %31, align 8, !dbg !10353
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10353
  store i64 %32, i64* %33, align 8, !dbg !10353
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10354
  %35 = load i64* %34, align 8, !dbg !10354
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10354
  store i64 %35, i64* %36, align 8, !dbg !10354
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10355
  %38 = load i64* %37, align 8, !dbg !10355
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10355
  store i64 %38, i64* %39, align 8, !dbg !10355
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10356
  %41 = load i64* %40, align 8, !dbg !10356
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10356
  store i64 %41, i64* %42, align 8, !dbg !10356
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10357
  %44 = load i64* %43, align 8, !dbg !10357
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10357
  store i64 %44, i64* %45, align 8, !dbg !10357
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10358
  %47 = load i64* %46, align 8, !dbg !10358
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10358
  store i64 %47, i64* %48, align 8, !dbg !10358
  ret i32 %0, !dbg !10359
}

define weak i32 @lstat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_lstat(i8* %path, %struct.stat* %buf) nounwind, !dbg !10360
  ret i32 %0, !dbg !10360
}

define i32 @lstat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10362
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10363
  %2 = load i64* %1, align 8, !dbg !10363
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10363
  store i64 %2, i64* %3, align 8, !dbg !10363
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10365
  %5 = load i64* %4, align 8, !dbg !10365
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10365
  store i64 %5, i64* %6, align 8, !dbg !10365
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10366
  %8 = load i32* %7, align 8, !dbg !10366
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10366
  store i32 %8, i32* %9, align 8, !dbg !10366
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10367
  %11 = load i64* %10, align 8, !dbg !10367
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10367
  store i64 %11, i64* %12, align 8, !dbg !10367
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10368
  %14 = load i32* %13, align 4, !dbg !10368
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10368
  store i32 %14, i32* %15, align 4, !dbg !10368
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10369
  %17 = load i32* %16, align 8, !dbg !10369
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10369
  store i32 %17, i32* %18, align 8, !dbg !10369
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10370
  %20 = load i64* %19, align 8, !dbg !10370
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10370
  store i64 %20, i64* %21, align 8, !dbg !10370
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10371
  %23 = load i64* %22, align 8, !dbg !10371
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10371
  store i64 %23, i64* %24, align 8, !dbg !10371
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10372
  %26 = load i64* %25, align 8, !dbg !10372
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10372
  store i64 %26, i64* %27, align 8, !dbg !10372
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10373
  %29 = load i64* %28, align 8, !dbg !10373
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10373
  store i64 %29, i64* %30, align 8, !dbg !10373
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10374
  %32 = load i64* %31, align 8, !dbg !10374
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10374
  store i64 %32, i64* %33, align 8, !dbg !10374
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10375
  %35 = load i64* %34, align 8, !dbg !10375
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10375
  store i64 %35, i64* %36, align 8, !dbg !10375
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10376
  %38 = load i64* %37, align 8, !dbg !10376
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10376
  store i64 %38, i64* %39, align 8, !dbg !10376
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10377
  %41 = load i64* %40, align 8, !dbg !10377
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10377
  store i64 %41, i64* %42, align 8, !dbg !10377
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10378
  %44 = load i64* %43, align 8, !dbg !10378
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10378
  store i64 %44, i64* %45, align 8, !dbg !10378
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10379
  %47 = load i64* %46, align 8, !dbg !10379
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10379
  store i64 %47, i64* %48, align 8, !dbg !10379
  ret i32 %0, !dbg !10380
}

define i32 @__lxstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_lstat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10381
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10382
  %2 = load i64* %1, align 8, !dbg !10382
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10382
  store i64 %2, i64* %3, align 8, !dbg !10382
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10384
  %5 = load i64* %4, align 8, !dbg !10384
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10384
  store i64 %5, i64* %6, align 8, !dbg !10384
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10385
  %8 = load i32* %7, align 8, !dbg !10385
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10385
  store i32 %8, i32* %9, align 8, !dbg !10385
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10386
  %11 = load i64* %10, align 8, !dbg !10386
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10386
  store i64 %11, i64* %12, align 8, !dbg !10386
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10387
  %14 = load i32* %13, align 4, !dbg !10387
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10387
  store i32 %14, i32* %15, align 4, !dbg !10387
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10388
  %17 = load i32* %16, align 8, !dbg !10388
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10388
  store i32 %17, i32* %18, align 8, !dbg !10388
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10389
  %20 = load i64* %19, align 8, !dbg !10389
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10389
  store i64 %20, i64* %21, align 8, !dbg !10389
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10390
  %23 = load i64* %22, align 8, !dbg !10390
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10390
  store i64 %23, i64* %24, align 8, !dbg !10390
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10391
  %26 = load i64* %25, align 8, !dbg !10391
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10391
  store i64 %26, i64* %27, align 8, !dbg !10391
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10392
  %29 = load i64* %28, align 8, !dbg !10392
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10392
  store i64 %29, i64* %30, align 8, !dbg !10392
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10393
  %32 = load i64* %31, align 8, !dbg !10393
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10393
  store i64 %32, i64* %33, align 8, !dbg !10393
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10394
  %35 = load i64* %34, align 8, !dbg !10394
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10394
  store i64 %35, i64* %36, align 8, !dbg !10394
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10395
  %38 = load i64* %37, align 8, !dbg !10395
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10395
  store i64 %38, i64* %39, align 8, !dbg !10395
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10396
  %41 = load i64* %40, align 8, !dbg !10396
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10396
  store i64 %41, i64* %42, align 8, !dbg !10396
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10397
  %44 = load i64* %43, align 8, !dbg !10397
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10397
  store i64 %44, i64* %45, align 8, !dbg !10397
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10398
  %47 = load i64* %46, align 8, !dbg !10398
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10398
  store i64 %47, i64* %48, align 8, !dbg !10398
  ret i32 %0, !dbg !10399
}

define weak i32 @stat64(i8* %path, %struct.stat* %buf) nounwind {
entry:
  %0 = tail call i32 @__fd_stat(i8* %path, %struct.stat* %buf) nounwind, !dbg !10400
  ret i32 %0, !dbg !10400
}

define i32 @stat(i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10402
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10403
  %2 = load i64* %1, align 8, !dbg !10403
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10403
  store i64 %2, i64* %3, align 8, !dbg !10403
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10405
  %5 = load i64* %4, align 8, !dbg !10405
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10405
  store i64 %5, i64* %6, align 8, !dbg !10405
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10406
  %8 = load i32* %7, align 8, !dbg !10406
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10406
  store i32 %8, i32* %9, align 8, !dbg !10406
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10407
  %11 = load i64* %10, align 8, !dbg !10407
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10407
  store i64 %11, i64* %12, align 8, !dbg !10407
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10408
  %14 = load i32* %13, align 4, !dbg !10408
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10408
  store i32 %14, i32* %15, align 4, !dbg !10408
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10409
  %17 = load i32* %16, align 8, !dbg !10409
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10409
  store i32 %17, i32* %18, align 8, !dbg !10409
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10410
  %20 = load i64* %19, align 8, !dbg !10410
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10410
  store i64 %20, i64* %21, align 8, !dbg !10410
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10411
  %23 = load i64* %22, align 8, !dbg !10411
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10411
  store i64 %23, i64* %24, align 8, !dbg !10411
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10412
  %26 = load i64* %25, align 8, !dbg !10412
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10412
  store i64 %26, i64* %27, align 8, !dbg !10412
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10413
  %29 = load i64* %28, align 8, !dbg !10413
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10413
  store i64 %29, i64* %30, align 8, !dbg !10413
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10414
  %32 = load i64* %31, align 8, !dbg !10414
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10414
  store i64 %32, i64* %33, align 8, !dbg !10414
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10415
  %35 = load i64* %34, align 8, !dbg !10415
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10415
  store i64 %35, i64* %36, align 8, !dbg !10415
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10416
  %38 = load i64* %37, align 8, !dbg !10416
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10416
  store i64 %38, i64* %39, align 8, !dbg !10416
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10417
  %41 = load i64* %40, align 8, !dbg !10417
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10417
  store i64 %41, i64* %42, align 8, !dbg !10417
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10418
  %44 = load i64* %43, align 8, !dbg !10418
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10418
  store i64 %44, i64* %45, align 8, !dbg !10418
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10419
  %47 = load i64* %46, align 8, !dbg !10419
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10419
  store i64 %47, i64* %48, align 8, !dbg !10419
  ret i32 %0, !dbg !10420
}

define i32 @__xstat(i32 %vers, i8* %path, %struct.stat* nocapture %buf) nounwind {
entry:
  %tmp = alloca %struct.stat, align 8
  %0 = call i32 @__fd_stat(i8* %path, %struct.stat* %tmp) nounwind, !dbg !10421
  %1 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 0, !dbg !10422
  %2 = load i64* %1, align 8, !dbg !10422
  %3 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 0, !dbg !10422
  store i64 %2, i64* %3, align 8, !dbg !10422
  %4 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 1, !dbg !10424
  %5 = load i64* %4, align 8, !dbg !10424
  %6 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 1, !dbg !10424
  store i64 %5, i64* %6, align 8, !dbg !10424
  %7 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 3, !dbg !10425
  %8 = load i32* %7, align 8, !dbg !10425
  %9 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 3, !dbg !10425
  store i32 %8, i32* %9, align 8, !dbg !10425
  %10 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 2, !dbg !10426
  %11 = load i64* %10, align 8, !dbg !10426
  %12 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 2, !dbg !10426
  store i64 %11, i64* %12, align 8, !dbg !10426
  %13 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 4, !dbg !10427
  %14 = load i32* %13, align 4, !dbg !10427
  %15 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 4, !dbg !10427
  store i32 %14, i32* %15, align 4, !dbg !10427
  %16 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 5, !dbg !10428
  %17 = load i32* %16, align 8, !dbg !10428
  %18 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 5, !dbg !10428
  store i32 %17, i32* %18, align 8, !dbg !10428
  %19 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 7, !dbg !10429
  %20 = load i64* %19, align 8, !dbg !10429
  %21 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 7, !dbg !10429
  store i64 %20, i64* %21, align 8, !dbg !10429
  %22 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 8, !dbg !10430
  %23 = load i64* %22, align 8, !dbg !10430
  %24 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 8, !dbg !10430
  store i64 %23, i64* %24, align 8, !dbg !10430
  %25 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 0, !dbg !10431
  %26 = load i64* %25, align 8, !dbg !10431
  %27 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 0, !dbg !10431
  store i64 %26, i64* %27, align 8, !dbg !10431
  %28 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 0, !dbg !10432
  %29 = load i64* %28, align 8, !dbg !10432
  %30 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 0, !dbg !10432
  store i64 %29, i64* %30, align 8, !dbg !10432
  %31 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 0, !dbg !10433
  %32 = load i64* %31, align 8, !dbg !10433
  %33 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 0, !dbg !10433
  store i64 %32, i64* %33, align 8, !dbg !10433
  %34 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 9, !dbg !10434
  %35 = load i64* %34, align 8, !dbg !10434
  %36 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 9, !dbg !10434
  store i64 %35, i64* %36, align 8, !dbg !10434
  %37 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 10, !dbg !10435
  %38 = load i64* %37, align 8, !dbg !10435
  %39 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 10, !dbg !10435
  store i64 %38, i64* %39, align 8, !dbg !10435
  %40 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 11, i32 1, !dbg !10436
  %41 = load i64* %40, align 8, !dbg !10436
  %42 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 11, i32 1, !dbg !10436
  store i64 %41, i64* %42, align 8, !dbg !10436
  %43 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 12, i32 1, !dbg !10437
  %44 = load i64* %43, align 8, !dbg !10437
  %45 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 12, i32 1, !dbg !10437
  store i64 %44, i64* %45, align 8, !dbg !10437
  %46 = getelementptr inbounds %struct.stat* %tmp, i64 0, i32 13, i32 1, !dbg !10438
  %47 = load i64* %46, align 8, !dbg !10438
  %48 = getelementptr inbounds %struct.stat* %buf, i64 0, i32 13, i32 1, !dbg !10438
  store i64 %47, i64* %48, align 8, !dbg !10438
  ret i32 %0, !dbg !10439
}

define weak i64 @lseek64(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !10440
  ret i64 %0, !dbg !10440
}

define i64 @lseek(i32 %fd, i64 %off, i32 %whence) nounwind {
entry:
  %0 = tail call i64 @__fd_lseek(i32 %fd, i64 %off, i32 %whence) nounwind, !dbg !10442
  ret i64 %0, !dbg !10442
}

define weak i32 @open64(i8* %pathname, i32 %flags, ...) nounwind {
entry:
  %ap = alloca [1 x %struct.__va_list_tag], align 8
  %0 = and i32 %flags, 64, !dbg !10444
  %1 = icmp eq i32 %0, 0, !dbg !10444
  br i1 %1, label %bb8, label %bb, !dbg !10444

bb:                                               ; preds = %entry
  %ap12 = bitcast [1 x %struct.__va_list_tag]* %ap to i8*, !dbg !10445
  call void @llvm.va_start(i8* %ap12), !dbg !10445
  %2 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 0, !dbg !10446
  %3 = load i32* %2, align 8, !dbg !10446
  %4 = icmp ugt i32 %3, 47, !dbg !10446
  br i1 %4, label %bb4, label %bb3, !dbg !10446

bb3:                                              ; preds = %bb
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 3, !dbg !10446
  %6 = load i8** %5, align 8, !dbg !10446
  %tmp = zext i32 %3 to i64
  %7 = ptrtoint i8* %6 to i64, !dbg !10446
  %8 = add i64 %7, %tmp, !dbg !10446
  %9 = inttoptr i64 %8 to i8*, !dbg !10446
  %10 = add i32 %3, 8, !dbg !10446
  store i32 %10, i32* %2, align 8, !dbg !10446
  br label %bb5, !dbg !10446

bb4:                                              ; preds = %bb
  %11 = getelementptr inbounds [1 x %struct.__va_list_tag]* %ap, i64 0, i64 0, i32 2, !dbg !10446
  %12 = load i8** %11, align 8, !dbg !10446
  %13 = getelementptr inbounds i8* %12, i64 8, !dbg !10446
  store i8* %13, i8** %11, align 8, !dbg !10446
  br label %bb5, !dbg !10446

bb5:                                              ; preds = %bb4, %bb3
  %addr.32.0 = phi i8* [ %12, %bb4 ], [ %9, %bb3 ]
  %14 = bitcast i8* %addr.32.0 to i32*, !dbg !10446
  %15 = load i32* %14, align 4, !dbg !10446
  call void @llvm.va_end(i8* %ap12), !dbg !10447
  br label %bb8, !dbg !10447

bb8:                                              ; preds = %bb5, %entry
  %mode.0 = phi i32 [ %15, %bb5 ], [ 0, %entry ]
  %16 = call i32 @__fd_open(i8* %pathname, i32 %flags, i32 %mode.0) nounwind, !dbg !10448
  ret i32 %16, !dbg !10448
}

define i64 @getdents(i32 %fd, %struct.dirent* %dirp, i64 %nbytes) nounwind {
entry:
  %0 = trunc i64 %nbytes to i32, !dbg !10449
  %1 = tail call i32 @__fd_getdents(i32 %fd, %struct.dirent* %dirp, i32 %0) nounwind, !dbg !10449
  %2 = sext i32 %1 to i64, !dbg !10449
  %3 = icmp sgt i32 %1, 0, !dbg !10450
  br i1 %3, label %bb, label %bb3, !dbg !10450

bb:                                               ; preds = %entry
  %4 = bitcast %struct.dirent* %dirp to i8*, !dbg !10451
  %5 = getelementptr inbounds i8* %4, i64 %2, !dbg !10451
  %6 = bitcast i8* %5 to %struct.dirent*, !dbg !10451
  %7 = icmp ugt %struct.dirent* %6, %dirp, !dbg !10452
  br i1 %7, label %bb1, label %bb3, !dbg !10452

bb1:                                              ; preds = %bb1, %bb
  %dp64.05 = phi %struct.dirent* [ %13, %bb1 ], [ %dirp, %bb ]
  %8 = getelementptr inbounds %struct.dirent* %dp64.05, i64 0, i32 2, !dbg !10453
  %9 = bitcast %struct.dirent* %dp64.05 to i8*, !dbg !10454
  %10 = load i16* %8, align 8, !dbg !10454
  %11 = zext i16 %10 to i64, !dbg !10454
  %12 = getelementptr inbounds i8* %9, i64 %11, !dbg !10454
  %13 = bitcast i8* %12 to %struct.dirent*, !dbg !10454
  %14 = icmp ult i8* %12, %5, !dbg !10452
  br i1 %14, label %bb1, label %bb3, !dbg !10452

bb3:                                              ; preds = %bb1, %bb, %entry
  ret i64 %2, !dbg !10455
}

define i32 @statfs(i8* %path, %11* %buf32) nounwind {
entry:
  %0 = tail call i32 @__fd_statfs(i8* %path, %11* %buf32) nounwind, !dbg !10456
  ret i32 %0, !dbg !10456
}

define i32 @ftruncate(i32 %fd, i64 %length) nounwind {
entry:
  %0 = tail call i32 @__fd_ftruncate(i32 %fd, i64 %length) nounwind, !dbg !10458
  ret i32 %0, !dbg !10458
}

declare i32 @__xstat64(i32, i8*, %struct.stat*) nounwind

define i32 @native_read_file(i8* %path, i32 %flags, i8** nocapture %_buf) nounwind {
entry:
  %s = alloca %struct.stat, align 8
  %0 = call i32 @__xstat64(i32 1, i8* %path, %struct.stat* %s) nounwind, !dbg !10460
  %1 = icmp eq i32 %0, -1, !dbg !10462
  br i1 %1, label %bb8, label %bb1, !dbg !10462

bb1:                                              ; preds = %entry
  %2 = getelementptr inbounds %struct.stat* %s, i64 0, i32 8, !dbg !10463
  %3 = load i64* %2, align 8, !dbg !10463
  %4 = call noalias i8* @malloc(i64 %3) nounwind, !dbg !10463
  store i8* %4, i8** %_buf, align 8, !dbg !10463
  %5 = call i64 (i64, ...)* @syscall(i64 2, i8* %path, i32 %flags, i32 0) nounwind, !dbg !10464
  %6 = trunc i64 %5 to i32, !dbg !10464
  %7 = icmp eq i32 %6, -1, !dbg !10465
  br i1 %7, label %bb8, label %bb6, !dbg !10465

bb4:                                              ; preds = %bb6
  %8 = getelementptr inbounds i8* %4, i64 %13, !dbg !10466
  %9 = call i64 (i64, ...)* @syscall(i64 0, i32 %6, i8* %8, i64 %14) nounwind, !dbg !10466
  %10 = trunc i64 %9 to i32, !dbg !10466
  %11 = icmp slt i32 %10, 1, !dbg !10467
  br i1 %11, label %bb7, label %bb5, !dbg !10467

bb5:                                              ; preds = %bb4
  %12 = add nsw i32 %10, %cnt.0, !dbg !10468
  br label %bb6, !dbg !10468

bb6:                                              ; preds = %bb5, %bb1
  %cnt.0 = phi i32 [ %12, %bb5 ], [ 0, %bb1 ]
  %13 = sext i32 %cnt.0 to i64, !dbg !10469
  %14 = load i64* %2, align 8, !dbg !10469
  %15 = icmp slt i64 %13, %14, !dbg !10469
  br i1 %15, label %bb4, label %bb7, !dbg !10469

bb7:                                              ; preds = %bb6, %bb4
  %16 = call i64 (i64, ...)* @syscall(i64 3, i32 %6) nounwind, !dbg !10470
  %17 = load i64* %2, align 8, !dbg !10471
  %18 = trunc i64 %17 to i32, !dbg !10471
  br label %bb8, !dbg !10471

bb8:                                              ; preds = %bb7, %bb1, %entry
  %.0 = phi i32 [ %18, %bb7 ], [ -1, %entry ], [ -1, %bb1 ]
  ret i32 %.0, !dbg !10472
}

define void @__fill_blocks(%struct.exe_disk_file_t* nocapture %dfile, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, i32 %do_memset) nounwind {
entry:
  %file = alloca i8*, align 8
  %0 = icmp eq i32 %do_memset, 0, !dbg !10473
  %1 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10474
  %2 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10475
  br label %bb22, !dbg !10476

bb:                                               ; preds = %bb22
  %scevgep40 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 1
  %3 = load i32* %scevgep40, align 4, !dbg !10477
  switch i32 %3, label %bb20 [
    i32 0, label %bb1
    i32 1, label %bb6
    i32 2, label %bb11
  ], !dbg !10477

bb1:                                              ; preds = %bb
  %4 = load i32* %scevgep39, align 8, !dbg !10478
  br i1 %0, label %bb5.preheader, label %bb2, !dbg !10473

bb5.preheader:                                    ; preds = %bb1
  %5 = icmp eq i32 %4, 0, !dbg !10478
  br i1 %5, label %bb21, label %bb4, !dbg !10478

bb2:                                              ; preds = %bb1
  %6 = zext i32 %4 to i64, !dbg !10474
  %7 = load i32* %scevgep3738, align 8, !dbg !10474
  %8 = load i8** %1, align 8, !dbg !10474
  %9 = load i32* %scevgep3536, align 8, !dbg !10474
  %10 = zext i32 %9 to i64, !dbg !10474
  %11 = getelementptr inbounds i8* %8, i64 %10, !dbg !10474
  %12 = trunc i32 %7 to i8, !dbg !10474
  %13 = zext i8 %12 to i32
  %14 = call i8* @memset(i8* %11, i32 %13, i64 %6)
  br label %bb21, !dbg !10474

bb4:                                              ; preds = %bb4, %bb5.preheader
  %j.028 = phi i32 [ %tmp32, %bb4 ], [ 0, %bb5.preheader ]
  %tmp32 = add i32 %j.028, 1
  %15 = load i8** %1, align 8, !dbg !10479
  %16 = load i32* %scevgep3536, align 8, !dbg !10479
  %17 = add i32 %16, %j.028, !dbg !10479
  %18 = zext i32 %17 to i64, !dbg !10479
  %19 = getelementptr inbounds i8* %15, i64 %18, !dbg !10479
  %20 = load i8* %19, align 1, !dbg !10479
  %21 = load i32* %scevgep3738, align 8, !dbg !10479
  %22 = trunc i32 %21 to i8, !dbg !10479
  %23 = icmp eq i8 %20, %22, !dbg !10479
  %24 = zext i1 %23 to i64, !dbg !10479
  call void @klee_assume(i64 %24) nounwind, !dbg !10479
  %25 = load i32* %scevgep39, align 8, !dbg !10478
  %26 = icmp ugt i32 %25, %tmp32, !dbg !10478
  br i1 %26, label %bb4, label %bb21, !dbg !10478

bb6:                                              ; preds = %bb
  %27 = load i32* %scevgep39, align 8, !dbg !10480
  br i1 %0, label %bb10.preheader, label %bb7, !dbg !10481

bb10.preheader:                                   ; preds = %bb6
  %28 = icmp eq i32 %27, 0, !dbg !10480
  br i1 %28, label %bb21, label %bb9, !dbg !10480

bb7:                                              ; preds = %bb6
  %29 = zext i32 %27 to i64, !dbg !10482
  %30 = load i8** %scevgep37, align 8, !dbg !10482
  %31 = load i8** %1, align 8, !dbg !10482
  %32 = load i32* %scevgep3536, align 8, !dbg !10482
  %33 = zext i32 %32 to i64, !dbg !10482
  %34 = getelementptr inbounds i8* %31, i64 %33, !dbg !10482
  %35 = call i8* @memcpy(i8* %34, i8* %30, i64 %29)
  br label %bb21, !dbg !10482

bb9:                                              ; preds = %bb9, %bb10.preheader
  %36 = phi i32 [ %tmp31, %bb9 ], [ 0, %bb10.preheader ]
  %tmp31 = add i32 %36, 1
  %37 = load i8** %1, align 8, !dbg !10483
  %38 = load i32* %scevgep3536, align 8, !dbg !10483
  %39 = add i32 %38, %36, !dbg !10483
  %40 = zext i32 %39 to i64, !dbg !10483
  %41 = getelementptr inbounds i8* %37, i64 %40, !dbg !10483
  %42 = load i8* %41, align 1, !dbg !10483
  %43 = load i8** %scevgep37, align 8, !dbg !10483
  %44 = zext i32 %36 to i64, !dbg !10483
  %45 = getelementptr inbounds i8* %43, i64 %44, !dbg !10483
  %46 = load i8* %45, align 1, !dbg !10483
  %47 = icmp eq i8 %42, %46, !dbg !10483
  %48 = zext i1 %47 to i64, !dbg !10483
  call void @klee_assume(i64 %48) nounwind, !dbg !10483
  %49 = load i32* %scevgep39, align 8, !dbg !10480
  %50 = icmp ugt i32 %49, %tmp31, !dbg !10480
  br i1 %50, label %bb9, label %bb21, !dbg !10480

bb11:                                             ; preds = %bb
  %51 = load i8** %scevgep37, align 8, !dbg !10484
  %52 = call i32 @native_read_file(i8* %51, i32 0, i8** %file) nounwind, !dbg !10484
  %53 = icmp slt i32 %52, 0, !dbg !10485
  br i1 %53, label %bb12, label %bb13, !dbg !10485

bb12:                                             ; preds = %bb11
  call void @__assert_fail(i8* getelementptr inbounds ([37 x i8]* @.str421, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 85, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn 
  unreachable, !dbg !10485

bb13:                                             ; preds = %bb11
  %54 = load i32* %2, align 8, !dbg !10475
  %55 = load i32* %scevgep3536, align 8, !dbg !10475
  %56 = add i32 %55, %52, !dbg !10475
  %57 = icmp ult i32 %54, %56, !dbg !10475
  br i1 %57, label %bb14, label %bb15, !dbg !10475

bb14:                                             ; preds = %bb13
  call void @__assert_fail(i8* getelementptr inbounds ([62 x i8]* @.str2423, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 86, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10475

bb15:                                             ; preds = %bb13
  br i1 %0, label %bb19.preheader, label %bb16, !dbg !10486

bb19.preheader:                                   ; preds = %bb15
  %58 = icmp eq i32 %52, 0, !dbg !10487
  br i1 %58, label %bb21, label %bb18.lr.ph, !dbg !10487

bb18.lr.ph:                                       ; preds = %bb19.preheader
  %59 = load i8** %file, align 8, !dbg !10488
  %60 = load i8** %1, align 8, !dbg !10488
  %61 = zext i32 %55 to i64, !dbg !10488
  %62 = getelementptr inbounds i8* %60, i64 %61, !dbg !10488
  %63 = load i8* %62, align 1, !dbg !10488
  %64 = load i8* %59, align 1, !dbg !10488
  %65 = icmp eq i8 %63, %64, !dbg !10488
  %66 = zext i1 %65 to i64, !dbg !10488
  call void @klee_assume(i64 %66) nounwind, !dbg !10488
  %exitcond3 = icmp eq i32 %52, 1
  br i1 %exitcond3, label %bb21, label %bb18.bb18_crit_edge.lr.ph, !dbg !10487

bb18.bb18_crit_edge.lr.ph:                        ; preds = %bb18.lr.ph
  %tmp8 = zext i32 %52 to i64
  %tmp9 = add i64 %tmp8, -1
  br label %bb18.bb18_crit_edge

bb16:                                             ; preds = %bb15
  %67 = sext i32 %52 to i64, !dbg !10489
  %68 = load i8** %file, align 8, !dbg !10489
  %69 = load i8** %1, align 8, !dbg !10489
  %70 = zext i32 %55 to i64, !dbg !10489
  %71 = getelementptr inbounds i8* %69, i64 %70, !dbg !10489
  %72 = call i8* @memcpy(i8* %71, i8* %68, i64 %67)
  br label %bb21, !dbg !10489

bb18.bb18_crit_edge:                              ; preds = %bb18.bb18_crit_edge, %bb18.bb18_crit_edge.lr.ph
  %indvar = phi i64 [ 0, %bb18.bb18_crit_edge.lr.ph ], [ %tmp, %bb18.bb18_crit_edge ]
  %tmp = add i64 %indvar, 1
  %scevgep = getelementptr i8* %59, i64 %tmp
  %tmp12 = trunc i64 %tmp to i32
  %.pre = load i32* %scevgep3536, align 8
  %73 = load i8** %1, align 8, !dbg !10488
  %tmp30 = add i32 %.pre, %tmp12
  %74 = zext i32 %tmp30 to i64, !dbg !10488
  %75 = getelementptr inbounds i8* %73, i64 %74, !dbg !10488
  %76 = load i8* %75, align 1, !dbg !10488
  %77 = load i8* %scevgep, align 1, !dbg !10488
  %78 = icmp eq i8 %76, %77, !dbg !10488
  %79 = zext i1 %78 to i64, !dbg !10488
  call void @klee_assume(i64 %79) nounwind, !dbg !10488
  %exitcond10 = icmp eq i64 %tmp, %tmp9
  br i1 %exitcond10, label %bb21, label %bb18.bb18_crit_edge, !dbg !10487

bb20:                                             ; preds = %bb
  call void @__assert_fail(i8* getelementptr inbounds ([27 x i8]* @.str3424, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 96, i8* getelementptr inbounds ([14 x i8]* @__PRETTY_FUNCTION__.5216, i64 0, i64 0)) noreturn
  unreachable, !dbg !10490

bb21:                                             ; preds = %bb18.bb18_crit_edge, %bb16, %bb18.lr.ph, %bb19.preheader, %bb9, %bb7, %bb10.preheader, %bb4, %bb2, %bb5.preheader
  %indvar.next34 = add i64 %indvar33, 1
  br label %bb22, !dbg !10476

bb22:                                             ; preds = %bb21, %entry
  %indvar33 = phi i64 [ %indvar.next34, %bb21 ], [ 0, %entry ]
  %i.0 = trunc i64 %indvar33 to i32
  %scevgep39 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 2
  %scevgep37 = getelementptr %struct.fill_info_t* %fill_info, i64 %indvar33, i32 3, i32 0
  %scevgep3738 = bitcast i8** %scevgep37 to i32*
  %scevgep3536 = getelementptr inbounds %struct.fill_info_t* %fill_info, i64 %indvar33, i32 0
  %80 = icmp ult i32 %i.0, %n_fill_info, !dbg !10476
  br i1 %80, label %bb, label %return, !dbg !10476

return:                                           ; preds = %bb22
  ret void, !dbg !10491
}

define internal fastcc void @__create_new_dfile(%struct.exe_disk_file_t* nocapture %dfile, i32 %size, i8* %contents, i8* %name, %struct.fill_info_t* nocapture %fill_info, i32 %n_fill_info, %struct.stat* nocapture %defaults, i32 %is_foreign) nounwind {
entry:
  %sname = alloca [256 x i8], align 1
  %src_name = alloca [256 x i8], align 1
  %originalStat = alloca %struct.stat, align 8
  %0 = call noalias i8* @malloc(i64 144) nounwind, !dbg !10492
  %1 = bitcast i8* %0 to %struct.stat*, !dbg !10492
  %2 = load i8* %name, align 1, !dbg !10493
  %3 = icmp eq i8 %2, 0, !dbg !10493
  %4 = getelementptr inbounds [256 x i8]* %sname, i64 0, i64 0, !dbg !10494
  br i1 %3, label %bb2, label %bb, !dbg !10493

bb:                                               ; preds = %bb, %entry
  %indvar57 = phi i64 [ %tmp4, %bb ], [ 0, %entry ]
  %5 = phi i8 [ %6, %bb ], [ %2, %entry ]
  %tmp4 = add i64 %indvar57, 1
  %scevgep6 = getelementptr [256 x i8]* %sname, i64 0, i64 %indvar57
  %scevgep60 = getelementptr i8* %name, i64 %tmp4
  store i8 %5, i8* %scevgep6, align 1, !dbg !10495
  %6 = load i8* %scevgep60, align 1, !dbg !10493
  %7 = icmp eq i8 %6, 0, !dbg !10493
  br i1 %7, label %bb2.loopexit, label %bb, !dbg !10493

bb2.loopexit:                                     ; preds = %bb
  %scevgep5 = getelementptr [256 x i8]* %sname, i64 0, i64 %tmp4
  br label %bb2

bb2:                                              ; preds = %bb2.loopexit, %entry
  %.lcssa50 = phi i8* [ %4, %entry ], [ %scevgep5, %bb2.loopexit ]
  %8 = call i8* @memcpy(i8* %.lcssa50, i8* getelementptr inbounds ([6 x i8]* @.str4425, i64 0, i64 0), i64 6)
  %9 = icmp eq i8* %contents, null, !dbg !10496
  %10 = icmp eq i32 %size, 0, !dbg !10496
  %11 = and i1 %9, %10, !dbg !10496
  br i1 %11, label %bb5, label %bb6, !dbg !10496

bb5:                                              ; preds = %bb2
  call void @__assert_fail(i8* getelementptr inbounds ([17 x i8]* @.str5426, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 112, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10496

bb6:                                              ; preds = %bb2
  %12 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 0, !dbg !10497
  store i32 %size, i32* %12, align 8, !dbg !10497
  %13 = zext i32 %size to i64, !dbg !10498
  %14 = call noalias i8* @malloc(i64 %13) nounwind, !dbg !10498
  br i1 %9, label %bb8, label %bb7, !dbg !10499

bb7:                                              ; preds = %bb6
  %15 = call i8* @memcpy(i8* %14, i8* %contents, i64 %13)
  %16 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10500
  store i8* %contents, i8** %16, align 8, !dbg !10500
  br label %bb9, !dbg !10500

bb8:                                              ; preds = %bb6
  %17 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10498
  store i8* %14, i8** %17, align 8, !dbg !10498
  br label %bb9, !dbg !10498

bb9:                                              ; preds = %bb8, %bb7
  %18 = phi i8* [ %contents, %bb7 ], [ %14, %bb8 ]
  %original_file.0 = phi i8* [ %14, %bb7 ], [ null, %bb8 ]
  %19 = icmp eq i32 %n_fill_info, 0, !dbg !10501
  br i1 %19, label %bb12, label %bb10, !dbg !10501

bb10:                                             ; preds = %bb9
  %20 = call i32 @klee_zest_enabled() nounwind, !dbg !10501
  %21 = icmp eq i32 %20, 0, !dbg !10501
  br i1 %21, label %bb10.bb12_crit_edge, label %bb11, !dbg !10501

bb10.bb12_crit_edge:                              ; preds = %bb10
  %.pre = load i32* %12, align 8
  %.phi.trans.insert = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1
  %.pre61 = load i8** %.phi.trans.insert, align 8
  br label %bb12

bb11:                                             ; preds = %bb10
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 1) nounwind, !dbg !10502
  %22 = load i32* %12, align 8, !dbg !10503
  %23 = zext i32 %22 to i64, !dbg !10503
  %24 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10503
  %25 = load i8** %24, align 8, !dbg !10503
  call void @klee_make_symbolic(i8* %25, i64 %23, i8* %name) nounwind, !dbg !10503
  br label %bb13, !dbg !10503

bb12:                                             ; preds = %bb10.bb12_crit_edge, %bb9
  %26 = phi i8* [ %.pre61, %bb10.bb12_crit_edge ], [ %18, %bb9 ]
  %27 = phi i32 [ %.pre, %bb10.bb12_crit_edge ], [ %size, %bb9 ]
  %28 = zext i32 %27 to i64, !dbg !10504
  call void @klee_make_symbolic(i8* %26, i64 %28, i8* %name) nounwind, !dbg !10504
  call void @__fill_blocks(%struct.exe_disk_file_t* %dfile, %struct.fill_info_t* %fill_info, i32 %n_fill_info, i32 0) nounwind, !dbg !10505
  br label %bb13, !dbg !10505

bb13:                                             ; preds = %bb12, %bb11
  br i1 %9, label %bb18, label %bb16.preheader, !dbg !10506

bb16.preheader:                                   ; preds = %bb13
  %29 = load i32* %12, align 8, !dbg !10507
  %30 = icmp eq i32 %29, 0, !dbg !10507
  br i1 %30, label %bb17, label %bb15.lr.ph, !dbg !10507

bb15.lr.ph:                                       ; preds = %bb16.preheader
  %31 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 1, !dbg !10508
  br label %bb15

bb15:                                             ; preds = %bb15, %bb15.lr.ph
  %32 = phi i32 [ 0, %bb15.lr.ph ], [ %tmp, %bb15 ]
  %tmp = add i32 %32, 1
  %33 = load i8** %31, align 8, !dbg !10508
  %34 = zext i32 %32 to i64, !dbg !10508
  %35 = getelementptr inbounds i8* %33, i64 %34, !dbg !10508
  %36 = load i8* %35, align 1, !dbg !10508
  %37 = getelementptr inbounds i8* %original_file.0, i64 %34, !dbg !10508
  %38 = load i8* %37, align 1, !dbg !10508
  %39 = icmp eq i8 %36, %38, !dbg !10508
  %40 = zext i1 %39 to i64, !dbg !10508
  call void @klee_prefer_cex(i8* %33, i64 %40) nounwind, !dbg !10508
  %41 = load i32* %12, align 8, !dbg !10507
  %42 = icmp ugt i32 %41, %tmp, !dbg !10507
  br i1 %42, label %bb15, label %bb17, !dbg !10507

bb17:                                             ; preds = %bb15, %bb16.preheader
  call void @free(i8* %original_file.0) nounwind, !dbg !10509
  br label %bb18, !dbg !10509

bb18:                                             ; preds = %bb17, %bb13
  %43 = call i32 @klee_shadow_enabled() nounwind, !dbg !10510
  %44 = icmp eq i32 %43, 0, !dbg !10510
  br i1 %44, label %bb21, label %bb19, !dbg !10510

bb19:                                             ; preds = %bb18
  %45 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %1) nounwind, !dbg !10511
  %46 = icmp eq i32 %45, -1, !dbg !10512
  br i1 %46, label %bb20, label %bb21, !dbg !10512

bb20:                                             ; preds = %bb19
  call void @__assert_fail(i8* getelementptr inbounds ([22 x i8]* @.str6427, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 143, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10512

bb21:                                             ; preds = %bb19, %bb18
  %47 = getelementptr inbounds i8* %0, i64 48
  %48 = bitcast i8* %47 to i64*, !dbg !10513
  store i64 %13, i64* %48, align 8, !dbg !10513
  call void @klee_make_symbolic(i8* %0, i64 144, i8* %4) nounwind, !dbg !10514
  %49 = getelementptr inbounds i8* %0, i64 8
  %50 = bitcast i8* %49 to i64*, !dbg !10515
  %51 = load i64* %50, align 8, !dbg !10515
  %52 = call i32 @klee_is_symbolic(i64 %51) nounwind, !dbg !10515
  %53 = icmp eq i32 %52, 0, !dbg !10515
  %54 = load i64* %50, align 8, !dbg !10515
  br i1 %53, label %bb23, label %bb25, !dbg !10515

bb23:                                             ; preds = %bb21
  %55 = and i64 %54, 2147483647, !dbg !10515
  %56 = icmp eq i64 %55, 0, !dbg !10515
  br i1 %56, label %bb24, label %bb25, !dbg !10515

bb24:                                             ; preds = %bb23
  %57 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 1, !dbg !10516
  %58 = load i64* %57, align 8, !dbg !10516
  store i64 %58, i64* %50, align 8, !dbg !10516
  br label %bb25, !dbg !10516

bb25:                                             ; preds = %bb24, %bb23, %bb21
  %59 = phi i64 [ %58, %bb24 ], [ %54, %bb23 ], [ %54, %bb21 ]
  %60 = and i64 %59, 2147483647, !dbg !10517
  %61 = icmp ne i64 %60, 0, !dbg !10517
  %62 = zext i1 %61 to i64, !dbg !10517
  call void @klee_assume(i64 %62) nounwind, !dbg !10517
  %63 = call i32 @klee_shadow_enabled() nounwind, !dbg !10518
  %64 = icmp eq i32 %63, 0, !dbg !10518
  %65 = getelementptr inbounds i8* %0, i64 56
  %66 = bitcast i8* %65 to i64*, !dbg !10519
  %67 = load i64* %66, align 8, !dbg !10519
  br i1 %64, label %bb29, label %bb26, !dbg !10518

bb26:                                             ; preds = %bb25
  %68 = icmp eq i64 %67, 4096, !dbg !10519
  %69 = zext i1 %68 to i64, !dbg !10519
  call void @klee_assume(i64 %69) nounwind, !dbg !10519
  %70 = call i32 @__xstat64(i32 1, i8* %name, %struct.stat* %originalStat) nounwind, !dbg !10520
  %71 = icmp eq i32 %70, -1, !dbg !10521
  br i1 %71, label %bb27, label %bb28, !dbg !10521

bb27:                                             ; preds = %bb26
  call void @__assert_fail(i8* getelementptr inbounds ([34 x i8]* @.str7428, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8]* @.str1422, i64 0, i64 0), i32 167, i8* getelementptr inbounds ([19 x i8]* @__PRETTY_FUNCTION__.5290, i64 0, i64 0)) noretur
  unreachable, !dbg !10521

bb28:                                             ; preds = %bb26
  %72 = load i64* %50, align 8, !dbg !10522
  %73 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 1, !dbg !10522
  %74 = load i64* %73, align 8, !dbg !10522
  %75 = icmp eq i64 %72, %74, !dbg !10522
  %76 = zext i1 %75 to i64, !dbg !10522
  call void @klee_assume(i64 %76) nounwind, !dbg !10522
  %77 = load i64* %48, align 8, !dbg !10523
  %78 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 8, !dbg !10523
  %79 = load i64* %78, align 8, !dbg !10523
  %80 = icmp eq i64 %77, %79, !dbg !10523
  %81 = zext i1 %80 to i64, !dbg !10523
  call void @klee_assume(i64 %81) nounwind, !dbg !10523
  br label %bb30, !dbg !10523

bb29:                                             ; preds = %bb25
  %82 = icmp ult i64 %67, 65536, !dbg !10524
  %83 = zext i1 %82 to i64, !dbg !10524
  call void @klee_assume(i64 %83) nounwind, !dbg !10524
  br label %bb30, !dbg !10524

bb30:                                             ; preds = %bb29, %bb28
  %84 = bitcast i8* %0 to i64*, !dbg !10525
  %85 = load i64* %84, align 8, !dbg !10525
  %86 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 0, !dbg !10525
  %87 = load i64* %86, align 8, !dbg !10525
  %88 = icmp eq i64 %85, %87, !dbg !10525
  %89 = zext i1 %88 to i64, !dbg !10525
  call void @klee_prefer_cex(i8* %0, i64 %89) nounwind, !dbg !10525
  %90 = getelementptr inbounds i8* %0, i64 40
  %91 = bitcast i8* %90 to i64*, !dbg !10526
  %92 = load i64* %91, align 8, !dbg !10526
  %93 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 7, !dbg !10526
  %94 = load i64* %93, align 8, !dbg !10526
  %95 = icmp eq i64 %92, %94, !dbg !10526
  %96 = zext i1 %95 to i64, !dbg !10526
  call void @klee_prefer_cex(i8* %0, i64 %96) nounwind, !dbg !10526
  %97 = call i32 @klee_shadow_enabled() nounwind, !dbg !10527
  %98 = icmp eq i32 %97, 0, !dbg !10527
  %99 = getelementptr inbounds i8* %0, i64 24
  %100 = bitcast i8* %99 to i32*, !dbg !10528
  %101 = load i32* %100, align 8, !dbg !10528
  br i1 %98, label %bb32, label %bb31, !dbg !10527

bb31:                                             ; preds = %bb30
  %102 = getelementptr inbounds %struct.stat* %originalStat, i64 0, i32 3, !dbg !10528
  %103 = load i32* %102, align 8, !dbg !10528
  %104 = icmp eq i32 %101, %103, !dbg !10528
  %105 = zext i1 %104 to i64, !dbg !10528
  call void @klee_prefer_cex(i8* %0, i64 %105) nounwind, !dbg !10528
  br label %bb33, !dbg !10528

bb32:                                             ; preds = %bb30
  %106 = and i32 %101, -61952, !dbg !10529
  %107 = icmp eq i32 %106, 0, !dbg !10529
  %108 = zext i1 %107 to i64, !dbg !10529
  call void @klee_prefer_cex(i8* %0, i64 %108) nounwind, !dbg !10529
  %109 = load i32* %100, align 8, !dbg !10530
  %110 = and i32 %109, 448, !dbg !10530
  %111 = icmp eq i32 %110, 384, !dbg !10530
  %112 = zext i1 %111 to i64, !dbg !10530
  call void @klee_prefer_cex(i8* %0, i64 %112) nounwind, !dbg !10530
  %113 = load i32* %100, align 8, !dbg !10531
  %114 = and i32 %113, 56, !dbg !10531
  %115 = icmp eq i32 %114, 16, !dbg !10531
  %116 = zext i1 %115 to i64, !dbg !10531
  call void @klee_prefer_cex(i8* %0, i64 %116) nounwind, !dbg !10531
  %117 = load i32* %100, align 8, !dbg !10532
  %118 = and i32 %117, 7, !dbg !10532
  %119 = icmp eq i32 %118, 2, !dbg !10532
  %120 = zext i1 %119 to i64, !dbg !10532
  call void @klee_prefer_cex(i8* %0, i64 %120) nounwind, !dbg !10532
  %121 = load i32* %100, align 8, !dbg !10533
  %122 = and i32 %121, 61440, !dbg !10533
  %123 = icmp eq i32 %122, 32768, !dbg !10533
  %124 = zext i1 %123 to i64, !dbg !10533
  call void @klee_prefer_cex(i8* %0, i64 %124) nounwind, !dbg !10533
  br label %bb33, !dbg !10533

bb33:                                             ; preds = %bb32, %bb31
  %125 = getelementptr inbounds i8* %0, i64 16
  %126 = bitcast i8* %125 to i64*, !dbg !10534
  %127 = load i64* %126, align 8, !dbg !10534
  %128 = icmp eq i64 %127, 1, !dbg !10534
  %129 = zext i1 %128 to i64, !dbg !10534
  call void @klee_prefer_cex(i8* %0, i64 %129) nounwind, !dbg !10534
  %130 = getelementptr inbounds i8* %0, i64 28
  %131 = bitcast i8* %130 to i32*, !dbg !10535
  %132 = load i32* %131, align 4, !dbg !10535
  %133 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 4, !dbg !10535
  %134 = load i32* %133, align 4, !dbg !10535
  %135 = icmp eq i32 %132, %134, !dbg !10535
  %136 = zext i1 %135 to i64, !dbg !10535
  call void @klee_prefer_cex(i8* %0, i64 %136) nounwind, !dbg !10535
  %137 = getelementptr inbounds i8* %0, i64 32
  %138 = bitcast i8* %137 to i32*, !dbg !10536
  %139 = load i32* %138, align 8, !dbg !10536
  %140 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 5, !dbg !10536
  %141 = load i32* %140, align 8, !dbg !10536
  %142 = icmp eq i32 %139, %141, !dbg !10536
  %143 = zext i1 %142 to i64, !dbg !10536
  call void @klee_prefer_cex(i8* %0, i64 %143) nounwind, !dbg !10536
  %144 = load i64* %66, align 8, !dbg !10537
  %145 = icmp eq i64 %144, 4096, !dbg !10537
  %146 = zext i1 %145 to i64, !dbg !10537
  call void @klee_prefer_cex(i8* %0, i64 %146) nounwind, !dbg !10537
  %147 = getelementptr inbounds i8* %0, i64 72
  %148 = bitcast i8* %147 to i64*, !dbg !10538
  %149 = load i64* %148, align 8, !dbg !10538
  %150 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 11, i32 0, !dbg !10538
  %151 = load i64* %150, align 8, !dbg !10538
  %152 = icmp eq i64 %149, %151, !dbg !10538
  %153 = zext i1 %152 to i64, !dbg !10538
  call void @klee_prefer_cex(i8* %0, i64 %153) nounwind, !dbg !10538
  %154 = getelementptr inbounds i8* %0, i64 88
  %155 = bitcast i8* %154 to i64*, !dbg !10539
  %156 = load i64* %155, align 8, !dbg !10539
  %157 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 12, i32 0, !dbg !10539
  %158 = load i64* %157, align 8, !dbg !10539
  %159 = icmp eq i64 %156, %158, !dbg !10539
  %160 = zext i1 %159 to i64, !dbg !10539
  call void @klee_prefer_cex(i8* %0, i64 %160) nounwind, !dbg !10539
  %161 = getelementptr inbounds i8* %0, i64 104
  %162 = bitcast i8* %161 to i64*, !dbg !10540
  %163 = load i64* %162, align 8, !dbg !10540
  %164 = getelementptr inbounds %struct.stat* %defaults, i64 0, i32 13, i32 0, !dbg !10540
  %165 = load i64* %164, align 8, !dbg !10540
  %166 = icmp eq i64 %163, %165, !dbg !10540
  %167 = zext i1 %166 to i64, !dbg !10540
  call void @klee_prefer_cex(i8* %0, i64 %167) nounwind, !dbg !10540
  br i1 %9, label %bb39, label %bb34, !dbg !10541

bb34:                                             ; preds = %bb33
  %168 = load i64* %48, align 8, !dbg !10542
  %169 = icmp sgt i64 %168, %13, !dbg !10542
  %int_cast_to_i64 = bitcast i64 63 to i64
  %170 = icmp ult i64 %int_cast_to_i64, 64
  br i1 %170, label %klee_overshift_check.exit, label %bb.i

bb.i:                                             ; preds = %bb34
  call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind
  unreachable

klee_overshift_check.exit:                        ; preds = %bb34
  %.lobit = lshr i64 %168, 63
  %171 = zext i1 %169 to i64
  %172 = or i64 %171, %.lobit
  %iftmp.35.0 = xor i64 %172, 1
  call void @klee_assume(i64 %iftmp.35.0) nounwind, !dbg !10542
  br label %bb40, !dbg !10542

bb39:                                             ; preds = %bb33
  %173 = load i32* %12, align 8, !dbg !10543
  %174 = zext i32 %173 to i64, !dbg !10543
  store i64 %174, i64* %48, align 8, !dbg !10543
  br label %bb40, !dbg !10543

bb40:                                             ; preds = %bb39, %klee_overshift_check.exit
  %175 = getelementptr inbounds i8* %0, i64 64
  %176 = bitcast i8* %175 to i64*, !dbg !10544
  store i64 8, i64* %176, align 8, !dbg !10544
  %177 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 3, !dbg !10545
  store %struct.stat* %1, %struct.stat** %177, align 8, !dbg !10545
  %178 = getelementptr inbounds %struct.exe_disk_file_t* %dfile, i64 0, i32 4, !dbg !10546
  store %struct.exe_sockaddr_t* null, %struct.exe_sockaddr_t** %178, align 8, !dbg !10546
  %179 = icmp eq i32 %is_foreign, 0, !dbg !10547
  br i1 %179, label %return, label %bb41, !dbg !10547

bb41:                                             ; preds = %bb40
  %180 = load i32* %100, align 8, !dbg !10548
  %181 = and i32 %180, 61440, !dbg !10548
  %182 = icmp eq i32 %181, 49152, !dbg !10548
  %183 = zext i1 %182 to i64, !dbg !10548
  call void @klee_assume(i64 %183) nounwind, !dbg !10548
  %184 = load i8* %name, align 1, !dbg !10549
  %185 = icmp eq i8 %184, 0, !dbg !10549
  %186 = getelementptr inbounds [256 x i8]* %src_name, i64 0, i64 0, !dbg !10550
  br i1 %185, label %bb44, label %bb42, !dbg !10549

bb42:                                             ; preds = %bb42, %bb41
  %indvar = phi i64 [ %tmp10, %bb42 ], [ 0, %bb41 ]
  %187 = phi i8 [ %188, %bb42 ], [ %184, %bb41 ]
  %tmp10 = add i64 %indvar, 1
  %scevgep12 = getelementptr [256 x i8]* %src_name, i64 0, i64 %indvar
  %scevgep = getelementptr i8* %name, i64 %tmp10
  store i8 %187, i8* %scevgep12, align 1, !dbg !10551
  %188 = load i8* %scevgep, align 1, !dbg !10549
  %189 = icmp eq i8 %188, 0, !dbg !10549
  br i1 %189, label %bb44.loopexit, label %bb42, !dbg !10549

bb44.loopexit:                                    ; preds = %bb42
  %scevgep11 = getelementptr [256 x i8]* %src_name, i64 0, i64 %tmp10
  br label %bb44

bb44:                                             ; preds = %bb44.loopexit, %bb41
  %.lcssa = phi i8* [ %186, %bb41 ], [ %scevgep11, %bb44.loopexit ]
  %190 = call i8* @memcpy(i8* %.lcssa, i8* getelementptr inbounds ([5 x i8]* @.str8429, i64 0, i64 0), i64 5)
  %191 = call noalias i8* @calloc(i64 1, i64 16) nounwind, !dbg !10552
  %192 = bitcast i8* %191 to %struct.exe_sockaddr_t*, !dbg !10552
  store %struct.exe_sockaddr_t* %192, %struct.exe_sockaddr_t** %178, align 8, !dbg !10552
  %193 = call noalias i8* @malloc(i64 128) nounwind, !dbg !10553
  %194 = bitcast i8* %193 to %struct.sockaddr_storage*, !dbg !10553
  %195 = bitcast i8* %191 to %struct.sockaddr_storage**, !dbg !10553
  store %struct.sockaddr_storage* %194, %struct.sockaddr_storage** %195, align 8, !dbg !10553
  call void @klee_make_symbolic(i8* %193, i64 128, i8* %186) nounwind, !dbg !10554
  %196 = getelementptr inbounds i8* %193, i64 2
  %197 = bitcast i8* %196 to i16*, !dbg !10555
  %198 = load i16* %197, align 2, !dbg !10555
  %199 = icmp ne i16 %198, 0, !dbg !10555
  %200 = zext i1 %199 to i64, !dbg !10555
  call void @klee_assume(i64 %200) nounwind, !dbg !10555
  %201 = load i16* %197, align 2, !dbg !10556
  %202 = icmp ne i16 %201, 0, !dbg !10556
  %203 = zext i1 %202 to i64, !dbg !10556
  call void @klee_assume(i64 %203) nounwind, !dbg !10556
  br label %return, !dbg !10556

return:                                           ; preds = %bb44, %bb40
  ret void, !dbg !10557
}

define %struct.exe_disk_file_t* @klee_init_cp_file(i8* %path, i32 %flags) nounwind {
entry:
  %def = alloca %struct.stat, align 8
  %buf = alloca i8*, align 8
  %0 = call i32 @native_read_file(i8* %path, i32 %flags, i8** %buf) nounwind, !dbg !10558
  %1 = icmp slt i32 %0, 0, !dbg !10559
  br i1 %1, label %bb7, label %bb1, !dbg !10559

bb1:                                              ; preds = %entry
  %2 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9430, i64 0, i64 0), %struct.stat* %def) nounwind, !dbg !10560
  %3 = load i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10562
  %4 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10563
  br label %bb5, !dbg !10562

bb2:                                              ; preds = %bb5
  %scevgep = getelementptr %struct.exe_disk_file_t* %4, i64 %20, i32 3
  %5 = load %struct.stat** %scevgep, align 8, !dbg !10563
  %6 = icmp eq %struct.stat* %5, null, !dbg !10563
  br i1 %6, label %bb3, label %bb4, !dbg !10563

bb3:                                              ; preds = %bb2
  %7 = load i8** %buf, align 8, !dbg !10564
  %8 = getelementptr inbounds %struct.exe_disk_file_t* %4, i64 %20, !dbg !10564
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %8, i32 %0, i8* %7, i8* %path, %struct.fill_info_t* null, i32 0, %struct.stat* %def, i32 0) nounwind, !dbg !10564
  %9 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10565
  %10 = call i64 @strlen(i8* %path) nounwind readonly, !dbg !10565
  %11 = add i64 %10, 1, !dbg !10565
  %12 = call noalias i8* @malloc(i64 %11) nounwind, !dbg !10565
  %13 = getelementptr inbounds %struct.exe_disk_file_t* %9, i64 %20, i32 2, !dbg !10565
  store i8* %12, i8** %13, align 8, !dbg !10565
  %14 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10566
  %15 = getelementptr inbounds %struct.exe_disk_file_t* %14, i64 %20, i32 2, !dbg !10566
  %16 = load i8** %15, align 8, !dbg !10566
  %17 = call i8* @strcpy(i8* noalias %16, i8* noalias %path) nounwind, !dbg !10566
  %18 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10567
  %19 = getelementptr inbounds %struct.exe_disk_file_t* %18, i64 %20, !dbg !10567
  br label %bb7, !dbg !10567

bb4:                                              ; preds = %bb2
  %indvar.next = add i64 %20, 1
  br label %bb5, !dbg !10562

bb5:                                              ; preds = %bb4, %bb1
  %20 = phi i64 [ %indvar.next, %bb4 ], [ 0, %bb1 ]
  %k.0 = trunc i64 %20 to i32
  %21 = icmp ugt i32 %3, %k.0, !dbg !10562
  br i1 %21, label %bb2, label %bb7, !dbg !10562

bb7:                                              ; preds = %bb5, %bb3, %entry
  %.0 = phi %struct.exe_disk_file_t* [ %19, %bb3 ], [ null, %entry ], [ null, %bb5 ]
  ret %struct.exe_disk_file_t* %.0, !dbg !10568
}

define void @klee_init_fds(i32 %n_files, i32 %file_length, i32 %sym_stdout_flag, i32 %save_all_writes_flag, i32 %n_streams, i32 %stream_len, i32 %n_dgrams, i32 %dgram_len, i32 %max_failures, i32 %one_line_streams, %struct.fill_info_t* %stream_fill_info, 
entry:
  %x.i = alloca i32, align 4
  %name = alloca [7 x i8], align 1
  %sname = alloca [8 x i8], align 1
  %dname = alloca [7 x i8], align 1
  %s = alloca %struct.stat, align 8
  %0 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 0, !dbg !10569
  store i8 63, i8* %0, align 1, !dbg !10569
  %1 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 1, !dbg !10569
  store i8 45, i8* %1, align 1, !dbg !10569
  %2 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 2, !dbg !10569
  store i8 100, i8* %2, align 1, !dbg !10569
  %3 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 3, !dbg !10569
  store i8 97, i8* %3, align 1, !dbg !10569
  %4 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 4, !dbg !10569
  store i8 116, i8* %4, align 1, !dbg !10569
  %5 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 5, !dbg !10569
  store i8 97, i8* %5, align 1, !dbg !10569
  %6 = getelementptr inbounds [7 x i8]* %name, i64 0, i64 6, !dbg !10569
  store i8 0, i8* %6, align 1, !dbg !10569
  %7 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 0, !dbg !10570
  store i8 83, i8* %7, align 1, !dbg !10570
  %8 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 1, !dbg !10570
  store i8 84, i8* %8, align 1, !dbg !10570
  %9 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 2, !dbg !10570
  store i8 82, i8* %9, align 1, !dbg !10570
  %10 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 3, !dbg !10570
  store i8 69, i8* %10, align 1, !dbg !10570
  %11 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 4, !dbg !10570
  store i8 65, i8* %11, align 1, !dbg !10570
  %12 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 5, !dbg !10570
  store i8 77, i8* %12, align 1, !dbg !10570
  %13 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 6, !dbg !10570
  store i8 63, i8* %13, align 1, !dbg !10570
  %14 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 7, !dbg !10570
  store i8 0, i8* %14, align 1, !dbg !10570
  %15 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 0, !dbg !10571
  store i8 68, i8* %15, align 1, !dbg !10571
  %16 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 1, !dbg !10571
  store i8 71, i8* %16, align 1, !dbg !10571
  %17 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 2, !dbg !10571
  store i8 82, i8* %17, align 1, !dbg !10571
  %18 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 3, !dbg !10571
  store i8 65, i8* %18, align 1, !dbg !10571
  %19 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 4, !dbg !10571
  store i8 77, i8* %19, align 1, !dbg !10571
  %20 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 5, !dbg !10571
  store i8 63, i8* %20, align 1, !dbg !10571
  %21 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 6, !dbg !10571
  store i8 0, i8* %21, align 1, !dbg !10571
  %22 = call i32 @__xstat64(i32 1, i8* getelementptr inbounds ([2 x i8]* @.str9430, i64 0, i64 0), %struct.stat* %s) nounwind, !dbg !10572
  store %struct.fill_info_t* %stream_fill_info, %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10574
  store i32 %n_stream_fill_info, i32* @__n_stream_fill_info, align 4, !dbg !10575
  store %struct.fill_info_t* %dgram_fill_info, %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10576
  store i32 %n_dgram_fill_info, i32* @__n_dgram_fill_info, align 4, !dbg !10577
  store i32 %n_files, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 0), align 32, !dbg !10578
  %23 = zext i32 %n_files to i64, !dbg !10579
  %24 = mul i64 %23, 40, !dbg !10579
  %25 = call noalias i8* @malloc(i64 %24) nounwind, !dbg !10579
  %26 = bitcast i8* %25 to %struct.exe_disk_file_t*, !dbg !10579
  store %struct.exe_disk_file_t* %26, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8, !dbg !10579
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 1), align 4, !dbg !10580
  %27 = icmp eq i32 %n_files, 0, !dbg !10581
  br i1 %27, label %bb3, label %bb.preheader, !dbg !10581

bb.preheader:                                     ; preds = %entry
  store i8 65, i8* %0, align 1, !dbg !10582
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %26, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10583
  %exitcond491 = icmp eq i32 %n_files, 1
  br i1 %exitcond491, label %bb3, label %bb.bb_crit_edge.lr.ph, !dbg !10581

bb.bb_crit_edge.lr.ph:                            ; preds = %bb.preheader
  %tmp5 = add i64 %23, -1
  br label %bb.bb_crit_edge

bb.bb_crit_edge:                                  ; preds = %bb.bb_crit_edge, %bb.bb_crit_edge.lr.ph
  %indvar3 = phi i64 [ 0, %bb.bb_crit_edge.lr.ph ], [ %tmp7, %bb.bb_crit_edge ]
  %tmp7 = add i64 %indvar3, 1
  %tmp9 = add i64 %indvar3, 66
  %tmp51 = trunc i64 %tmp9 to i8
  %.pre = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 6), align 8
  store i8 %tmp51, i8* %0, align 1, !dbg !10582
  %scevgep52 = getelementptr %struct.exe_disk_file_t* %.pre, i64 %tmp7
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep52, i32 %file_length, i8* null, i8* %0, %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10583
  %exitcond6 = icmp eq i64 %tmp7, %tmp5
  br i1 %exitcond6, label %bb3, label %bb.bb_crit_edge, !dbg !10581

bb3:                                              ; preds = %bb.bb_crit_edge, %bb.preheader, %entry
  store i32 10, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 2), align 8, !dbg !10584
  %28 = call noalias i8* @malloc(i64 400) nounwind, !dbg !10585
  %29 = bitcast i8* %28 to %struct.exe_disk_file_t*, !dbg !10585
  store %struct.exe_disk_file_t* %29, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 7), align 16, !dbg !10585
  %30 = call i8* @memset(i8* %28, i32 0, i64 400)
  %31 = icmp eq i32 %file_length, 0, !dbg !10586
  br i1 %31, label %bb5, label %bb4, !dbg !10586

bb4:                                              ; preds = %bb3
  %32 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10587
  %33 = bitcast i8* %32 to %struct.exe_disk_file_t*, !dbg !10587
  store %struct.exe_disk_file_t* %33, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10587
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %33, i32 %file_length, i8* null, i8* getelementptr inbounds ([6 x i8]* @.str13432, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10588
  %34 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10589
  store %struct.exe_disk_file_t* %34, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 3), align 16, !dbg !10589
  br label %bb6, !dbg !10589

bb5:                                              ; preds = %bb3
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 3), align 16, !dbg !10590
  br label %bb6, !dbg !10590

bb6:                                              ; preds = %bb5, %bb4
  store i32 %max_failures, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 14), align 8, !dbg !10591
  %35 = icmp eq i32 %max_failures, 0, !dbg !10592
  br i1 %35, label %bb8, label %bb7, !dbg !10592

bb7:                                              ; preds = %bb6
  %36 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10593
  %37 = bitcast i8* %36 to i32*, !dbg !10593
  store i32* %37, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 15), align 32, !dbg !10593
  %38 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10594
  %39 = bitcast i8* %38 to i32*, !dbg !10594
  store i32* %39, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10594
  %40 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10595
  %41 = bitcast i8* %40 to i32*, !dbg !10595
  store i32* %41, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10595
  %42 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10596
  %43 = bitcast i8* %42 to i32*, !dbg !10596
  store i32* %43, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10596
  %44 = call noalias i8* @malloc(i64 4) nounwind, !dbg !10597
  %45 = bitcast i8* %44 to i32*, !dbg !10597
  store i32* %45, i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10597
  call void @klee_make_symbolic(i8* %36, i64 4, i8* getelementptr inbounds ([10 x i8]* @.str14433, i64 0, i64 0)) nounwind, !dbg !10598
  %46 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 16), align 8, !dbg !10599
  %47 = bitcast i32* %46 to i8*, !dbg !10599
  call void @klee_make_symbolic(i8* %47, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str15434, i64 0, i64 0)) nounwind, !dbg !10599
  %48 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 17), align 16, !dbg !10600
  %49 = bitcast i32* %48 to i8*, !dbg !10600
  call void @klee_make_symbolic(i8* %49, i64 4, i8* getelementptr inbounds ([11 x i8]* @.str16435, i64 0, i64 0)) nounwind, !dbg !10600
  %50 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 18), align 8, !dbg !10601
  %51 = bitcast i32* %50 to i8*, !dbg !10601
  call void @klee_make_symbolic(i8* %51, i64 4, i8* getelementptr inbounds ([15 x i8]* @.str17436, i64 0, i64 0)) nounwind, !dbg !10601
  %52 = load i32** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 19), align 32, !dbg !10602
  %53 = bitcast i32* %52 to i8*, !dbg !10602
  call void @klee_make_symbolic(i8* %53, i64 4, i8* getelementptr inbounds ([12 x i8]* @.str18437, i64 0, i64 0)) nounwind, !dbg !10602
  br label %bb8, !dbg !10602

bb8:                                              ; preds = %bb7, %bb6
  %54 = icmp eq i32 %sym_stdout_flag, 0, !dbg !10603
  br i1 %54, label %bb10, label %bb9, !dbg !10603

bb9:                                              ; preds = %bb8
  %55 = call noalias i8* @malloc(i64 40) nounwind, !dbg !10604
  %56 = bitcast i8* %55 to %struct.exe_disk_file_t*, !dbg !10604
  store %struct.exe_disk_file_t* %56, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10604
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %56, i32 1024, i8* null, i8* getelementptr inbounds ([7 x i8]* @.str19438, i64 0, i64 0), %struct.fill_info_t* null, i32 0, %struct.stat* %s, i32 0) nounwind, !dbg !10605
  %57 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10606
  store %struct.exe_disk_file_t* %57, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 3), align 8, !dbg !10606
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 5), align 32, !dbg !10607
  br label %bb11, !dbg !10607

bb10:                                             ; preds = %bb8
  store %struct.exe_disk_file_t* null, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 4), align 8, !dbg !10608
  br label %bb11, !dbg !10608

bb11:                                             ; preds = %bb10, %bb9
  store i32 %save_all_writes_flag, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 3), align 8, !dbg !10609
  %x1.i = bitcast i32* %x.i to i8*, !dbg !10610
  call void @klee_make_symbolic(i8* %x1.i, i64 4, i8* getelementptr inbounds ([14 x i8]* @.str20439, i64 0, i64 0)) nounwind, !dbg !10610
  %58 = load i32* %x.i, align 4, !dbg !10612
  store i32 %58, i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10611
  %59 = call i32 @klee_shadow_enabled() nounwind, !dbg !10613
  %60 = icmp eq i32 %59, 0, !dbg !10613
  br i1 %60, label %bb12, label %bb13, !dbg !10613

bb12:                                             ; preds = %bb11
  %61 = load i32* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 2), align 4, !dbg !10614
  %62 = icmp eq i32 %61, 1, !dbg !10614
  %63 = zext i1 %62 to i64, !dbg !10614
  call void @klee_assume(i64 %63) nounwind, !dbg !10614
  br label %bb13, !dbg !10614

bb13:                                             ; preds = %bb12, %bb11
  store i32 %n_streams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 8), align 8, !dbg !10615
  %64 = zext i32 %n_streams to i64, !dbg !10616
  %65 = mul i64 %64, 40, !dbg !10616
  %66 = call noalias i8* @malloc(i64 %65) nounwind, !dbg !10616
  %67 = bitcast i8* %66 to %struct.exe_disk_file_t*, !dbg !10616
  store %struct.exe_disk_file_t* %67, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10616
  %68 = icmp eq i8* %66, null, !dbg !10617
  br i1 %68, label %bb14, label %bb19.preheader, !dbg !10617

bb14:                                             ; preds = %bb13
  call void @klee_warning(i8* getelementptr inbounds ([37 x i8]* @.str21440, i64 0, i64 0)) nounwind, !dbg !10618
  br label %bb19.preheader, !dbg !10618

bb19.preheader:                                   ; preds = %bb14, %bb13
  %69 = icmp eq i32 %n_streams, 0, !dbg !10619
  br i1 %69, label %bb20, label %bb16, !dbg !10619

bb16:                                             ; preds = %bb16, %bb19.preheader
  %indvar39 = phi i64 [ 0, %bb19.preheader ], [ %indvar.next40, %bb16 ]
  %tmp13 = add i64 %indvar39, 49
  %tmp44 = trunc i64 %tmp13 to i8
  %70 = call i64 @strlen(i8* %7) nounwind readonly, !dbg !10620
  %71 = add i64 %70, -1, !dbg !10620
  %72 = getelementptr inbounds [8 x i8]* %sname, i64 0, i64 %71, !dbg !10620
  store i8 %tmp44, i8* %72, align 1, !dbg !10620
  %73 = load i32* @__n_stream_fill_info, align 4, !dbg !10621
  %74 = load %struct.fill_info_t** @__stream_fill_info, align 8, !dbg !10621
  %75 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 10), align 32, !dbg !10621
  %scevgep45 = getelementptr %struct.exe_disk_file_t* %75, i64 %indvar39
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep45, i32 %stream_len, i8* null, i8* %7, %struct.fill_info_t* %74, i32 %73, %struct.stat* %s, i32 1) nounwind, !dbg !10621
  %indvar.next40 = add i64 %indvar39, 1
  %exitcond12 = icmp eq i64 %indvar.next40, %64
  br i1 %exitcond12, label %bb20, label %bb16, !dbg !10619

bb20:                                             ; preds = %bb16, %bb19.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 9), align 4, !dbg !10622
  store i32 %n_dgrams, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 11), align 8, !dbg !10623
  %76 = zext i32 %n_dgrams to i64, !dbg !10624
  %77 = mul i64 %76, 40, !dbg !10624
  %78 = call noalias i8* @malloc(i64 %77) nounwind, !dbg !10624
  %79 = bitcast i8* %78 to %struct.exe_disk_file_t*, !dbg !10624
  store %struct.exe_disk_file_t* %79, %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10624
  %80 = icmp eq i8* %78, null, !dbg !10625
  br i1 %80, label %bb21, label %bb26.preheader, !dbg !10625

bb21:                                             ; preds = %bb20
  call void @klee_warning(i8* getelementptr inbounds ([36 x i8]* @.str22441, i64 0, i64 0)) nounwind, !dbg !10626
  br label %bb26.preheader, !dbg !10626

bb26.preheader:                                   ; preds = %bb21, %bb20
  %81 = icmp eq i32 %n_dgrams, 0, !dbg !10627
  br i1 %81, label %bb27, label %bb23, !dbg !10627

bb23:                                             ; preds = %bb23, %bb26.preheader
  %indvar = phi i64 [ 0, %bb26.preheader ], [ %indvar.next, %bb23 ]
  %tmp18 = add i64 %indvar, 49
  %tmp38 = trunc i64 %tmp18 to i8
  %82 = call i64 @strlen(i8* %15) nounwind readonly, !dbg !10628
  %83 = add i64 %82, -1, !dbg !10628
  %84 = getelementptr inbounds [7 x i8]* %dname, i64 0, i64 %83, !dbg !10628
  store i8 %tmp38, i8* %84, align 1, !dbg !10628
  %85 = load i32* @__n_dgram_fill_info, align 4, !dbg !10629
  %86 = load %struct.fill_info_t** @__dgram_fill_info, align 8, !dbg !10629
  %87 = load %struct.exe_disk_file_t** getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 13), align 16, !dbg !10629
  %scevgep = getelementptr %struct.exe_disk_file_t* %87, i64 %indvar
  call fastcc void @__create_new_dfile(%struct.exe_disk_file_t* %scevgep, i32 %dgram_len, i8* null, i8* %15, %struct.fill_info_t* %86, i32 %85, %struct.stat* %s, i32 1) nounwind, !dbg !10629
  %indvar.next = add i64 %indvar, 1
  %exitcond17 = icmp eq i64 %indvar.next, %76
  br i1 %exitcond17, label %bb27, label %bb23, !dbg !10627

bb27:                                             ; preds = %bb23, %bb26.preheader
  store i32 0, i32* getelementptr inbounds (%struct.exe_file_system_t* @__exe_fs, i64 0, i32 12), align 4, !dbg !10630
  %88 = call i64 (i64, ...)* @syscall(i64 8, i32 0, i64 0, i32 1) nounwind, !dbg !10631
  %89 = icmp eq i64 %88, -1, !dbg !10632
  br i1 %89, label %bb30, label %bb29, !dbg !10632

bb29:                                             ; preds = %bb27
  store i64 %88, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 0, i32 2), align 8, !dbg !10633
  br label %bb30, !dbg !10633

bb30:                                             ; preds = %bb29, %bb27
  %90 = call i64 (i64, ...)* @syscall(i64 8, i32 1, i64 0, i32 1) nounwind, !dbg !10631
  %91 = icmp eq i64 %90, -1, !dbg !10632
  br i1 %91, label %bb30.1, label %bb29.1, !dbg !10632

bb30.1:                                           ; preds = %bb29.1, %bb30
  %92 = call i64 (i64, ...)* @syscall(i64 8, i32 2, i64 0, i32 1) nounwind, !dbg !10631
  %93 = icmp eq i64 %92, -1, !dbg !10632
  br i1 %93, label %bb30.2, label %bb29.2, !dbg !10632

bb29.1:                                           ; preds = %bb30
  store i64 %90, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 1, i32 2), align 8, !dbg !10633
  br label %bb30.1, !dbg !10633

bb30.2:                                           ; preds = %bb29.2, %bb30.1
  ret void, !dbg !10634

bb29.2:                                           ; preds = %bb30.1
  store i64 %92, i64* getelementptr inbounds (%struct.exe_sym_env_t* @__exe_env, i64 0, i32 0, i64 2, i32 2), align 8, !dbg !10633
  br label %bb30.2, !dbg !10633
}

define void @klee_mark_arg_symbolic(i32 %argc, i8** nocapture %argv) nounwind {
entry:
  %tmpStat = alloca %struct.stat, align 8
  %0 = call i32 @klee_shadow_enabled() nounwind, !dbg !10635
  %1 = call i32 @klee_shadow_replay_standalone() nounwind, !dbg !10636
  %2 = icmp sgt i32 %argc, 1, !dbg !10637
  br i1 %2, label %bb.lr.ph, label %return, !dbg !10637

bb.lr.ph:                                         ; preds = %entry
  %3 = icmp eq i32 %0, 0, !dbg !10638
  %4 = icmp eq i32 %1, 0, !dbg !10639
  %tmp23 = add i32 %argc, -2
  %tmp7 = zext i32 %tmp23 to i64
  %tmp8 = add i64 %tmp7, 1
  br label %bb

bb:                                               ; preds = %bb12, %bb.lr.ph
  %indvar21 = phi i64 [ 0, %bb.lr.ph ], [ %tmp9, %bb12 ]
  %argv_i.117 = phi i8* [ null, %bb.lr.ph ], [ %argv_i.0, %bb12 ]
  %tmp9 = add i64 %indvar21, 1
  %scevgep28 = getelementptr i8** %argv, i64 %tmp9
  %5 = load i8** %scevgep28, align 8, !dbg !10640
  br label %bb.i, !dbg !10641

bb.i:                                             ; preds = %bb.i, %bb
  %6 = phi i64 [ %indvar.next.i, %bb.i ], [ 0, %bb ]
  %scevgep.i = getelementptr i8* %5, i64 %6
  %7 = load i8* %scevgep.i, align 1, !dbg !10642
  %8 = icmp eq i8 %7, 0, !dbg !10642
  %indvar.next.i = add i64 %6, 1
  br i1 %8, label %my_strlen.exit, label %bb.i, !dbg !10642

my_strlen.exit:                                   ; preds = %bb.i
  %i.0.i = trunc i64 %6 to i32
  %.pre29 = add nsw i32 %i.0.i, 1, !dbg !10643
  %.pre30 = sext i32 %.pre29 to i64, !dbg !10643
  br i1 %3, label %bb2, label %bb1, !dbg !10638

bb1:                                              ; preds = %my_strlen.exit
  %9 = call noalias i8* @malloc(i64 %.pre30) nounwind, !dbg !10644
  %10 = call i8* @memcpy(i8* %9, i8* %5, i64 %.pre30)
  br label %bb2, !dbg !10645

bb2:                                              ; preds = %bb1, %my_strlen.exit
  %argv_i.0 = phi i8* [ %9, %bb1 ], [ %argv_i.117, %my_strlen.exit ]
  call void @klee_make_symbolic(i8* %5, i64 %.pre30, i8* getelementptr inbounds ([5 x i8]* @.str444, i64 0, i64 0)) nounwind, !dbg !10643
  %11 = load i8** %scevgep28, align 8, !dbg !10646
  %12 = sext i32 %i.0.i to i64, !dbg !10646
  %13 = getelementptr inbounds i8* %11, i64 %12, !dbg !10646
  %14 = load i8* %13, align 1, !dbg !10646
  %15 = icmp eq i8 %14, 0, !dbg !10646
  %16 = zext i1 %15 to i64, !dbg !10646
  call void @klee_assume(i64 %16) nounwind, !dbg !10646
  br i1 %3, label %bb12, label %bb5.preheader, !dbg !10647

bb5.preheader:                                    ; preds = %bb2
  %17 = icmp sgt i32 %.pre29, 0, !dbg !10648
  br i1 %17, label %bb4.lr.ph, label %bb6, !dbg !10648

bb4.lr.ph:                                        ; preds = %bb5.preheader
  %tmp2 = and i64 %indvar.next.i, 4294967295
  br label %bb4

bb4:                                              ; preds = %bb4, %bb4.lr.ph
  %indvar = phi i64 [ 0, %bb4.lr.ph ], [ %indvar.next, %bb4 ]
  %scevgep = getelementptr i8* %argv_i.0, i64 %indvar
  %18 = load i8** %scevgep28, align 8, !dbg !10649
  %scevgep20 = getelementptr i8* %18, i64 %indvar
  %19 = load i8* %scevgep20, align 1, !dbg !10649
  %20 = load i8* %scevgep, align 1, !dbg !10649
  %21 = icmp eq i8 %19, %20, !dbg !10649
  %22 = zext i1 %21 to i64, !dbg !10649
  call void @klee_prefer_cex(i8* %18, i64 %22) nounwind, !dbg !10649
  %indvar.next = add i64 %indvar, 1
  %exitcond3 = icmp eq i64 %indvar.next, %tmp2
  br i1 %exitcond3, label %bb6, label %bb4, !dbg !10648

bb6:                                              ; preds = %bb4, %bb5.preheader
  br i1 %4, label %bb11, label %bb7, !dbg !10639

bb7:                                              ; preds = %bb6
  %23 = call i32 @__xstat64(i32 1, i8* %argv_i.0, %struct.stat* %tmpStat) nounwind, !dbg !10650
  %24 = icmp eq i32 %23, 0, !dbg !10652
  br i1 %24, label %bb9, label %bb11, !dbg !10652

bb9:                                              ; preds = %bb7
  %25 = load i8** %scevgep28, align 8, !dbg !10653
  %26 = call i32 (i8*, i32, ...)* @open(i8* %25, i32 0) nounwind, !dbg !10653
  %27 = icmp eq i32 %26, -1, !dbg !10654
  br i1 %27, label %bb11, label %bb10, !dbg !10654

bb10:                                             ; preds = %bb9
  %28 = call i32 @close(i32 %26) nounwind, !dbg !10655
  br label %bb11, !dbg !10655

bb11:                                             ; preds = %bb10, %bb9, %bb7, %bb6
  call void @free(i8* %argv_i.0) nounwind, !dbg !10656
  br label %bb12, !dbg !10656

bb12:                                             ; preds = %bb11, %bb2
  %exitcond = icmp eq i64 %tmp9, %tmp8
  br i1 %exitcond, label %return, label %bb, !dbg !10637

return:                                           ; preds = %bb12, %entry
  ret void, !dbg !10657
}

declare i32 @klee_shadow_replay_standalone()

define void @klee_overshift_check(i64 %bitWidth, i64 %shift) nounwind {
entry:
  %0 = icmp ult i64 %shift, %bitWidth, !dbg !10658
  br i1 %0, label %return, label %bb, !dbg !10658

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([8 x i8]* @.str446, i64 0, i64 0), i32 0, i8* getelementptr inbounds ([16 x i8]* @.str1447, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8]* @.str2448, i64 0, i64 0)) noreturn nounwind,
  unreachable, !dbg !10660

return:                                           ; preds = %entry
  ret void, !dbg !10661
}

define void @klee_div_zero_check(i64 %z) nounwind {
entry:
  %0 = tail call i32 (...)* @klee_enable_symbex(i32 2, i32 1) nounwind, !dbg !10662
  %1 = icmp eq i64 %z, 0, !dbg !10664
  br i1 %1, label %bb, label %bb1, !dbg !10664

bb:                                               ; preds = %entry
  tail call void @klee_report_error(i8* getelementptr inbounds ([22 x i8]* @.str450, i64 0, i64 0), i32 16, i8* getelementptr inbounds ([15 x i8]* @.str1451, i64 0, i64 0), i8* getelementptr inbounds ([8 x i8]* @.str2452, i64 0, i64 0)) noreturn nounwind
  unreachable, !dbg !10665

bb1:                                              ; preds = %entry
  tail call void @klee_disable_symbex() nounwind, !dbg !10666
  ret void, !dbg !10667
}

declare i32 @klee_enable_symbex(...)

declare void @klee_disable_symbex()

define i32 @klee_range(i32 %start, i32 %end, i8* %name) nounwind {
entry:
  %x = alloca i32, align 4
  %0 = icmp slt i32 %start, %end, !dbg !10668
  br i1 %0, label %bb1, label %bb, !dbg !10668

bb:                                               ; preds = %entry
  call void @klee_report_error(i8* getelementptr inbounds ([13 x i8]* @.str454, i64 0, i64 0), i32 17, i8* getelementptr inbounds ([14 x i8]* @.str1455, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8]* @.str2456, i64 0, i64 0)) noreturn nounwind, !db
  unreachable, !dbg !10669

bb1:                                              ; preds = %entry
  %1 = add nsw i32 %start, 1, !dbg !10670
  %2 = icmp eq i32 %1, %end, !dbg !10670
  br i1 %2, label %bb8, label %bb3, !dbg !10670

bb3:                                              ; preds = %bb1
  %x4 = bitcast i32* %x to i8*, !dbg !10671
  call void @klee_make_symbolic(i8* %x4, i64 4, i8* %name) nounwind, !dbg !10671
  %3 = icmp eq i32 %start, 0, !dbg !10672
  %4 = load i32* %x, align 4, !dbg !10673
  br i1 %3, label %bb5, label %bb6, !dbg !10672

bb5:                                              ; preds = %bb3
  %5 = icmp ult i32 %4, %end, !dbg !10673
  %6 = zext i1 %5 to i64, !dbg !10673
  call void @klee_assume(i64 %6) nounwind, !dbg !10673
  br label %bb7, !dbg !10673

bb6:                                              ; preds = %bb3
  %7 = icmp sge i32 %4, %start, !dbg !10674
  %8 = zext i1 %7 to i64, !dbg !10674
  call void @klee_assume(i64 %8) nounwind, !dbg !10674
  %9 = load i32* %x, align 4, !dbg !10675
  %10 = icmp slt i32 %9, %end, !dbg !10675
  %11 = zext i1 %10 to i64, !dbg !10675
  call void @klee_assume(i64 %11) nounwind, !dbg !10675
  br label %bb7, !dbg !10675

bb7:                                              ; preds = %bb6, %bb5
  %12 = load i32* %x, align 4, !dbg !10676
  br label %bb8, !dbg !10676

bb8:                                              ; preds = %bb7, %bb1
  %.0 = phi i32 [ %12, %bb7 ], [ %start, %bb1 ]
  ret i32 %.0, !dbg !10677
}

!llvm.dbg.sp = !{!0, !7, !48, !88, !127, !165, !171, !177, !180, !183, !184, !195, !204, !208, !217, !243, !269, !278, !282, !289, !327, !368, !407, !446, !485, !526, !568, !610, !649, !691, !702, !711, !758, !786, !793, !806, !809, !812, !815, !816, !82
!llvm.dbg.gv = !{!4147, !4152, !4153, !4156, !4157, !4161, !4162, !4163, !4164, !4166, !4167, !4168, !4169, !4170, !4172, !4173, !4174, !4175, !4176, !4177, !4178, !4180, !4181, !4182, !4183, !4188, !4190, !4224, !4226, !4227, !4228, !4229, !4230, !4231,
!llvm.dbg.enum = !{!778, !2856, !4408, !4048}
!llvm.dbg.lv.__getodigit = !{!4410}
!llvm.dbg.lv.__getxdigit = !{!4411}
!llvm.dbg.lv.__isprint = !{!4412}
!llvm.dbg.lv.__streq = !{!4413, !4414}
!llvm.dbg.lv.__get_sym_str = !{!4415, !4416, !4417, !4419}
!llvm.dbg.lv.__emit_error = !{!4420}
!llvm.dbg.lv.__str_to_int = !{!4421, !4422, !4423, !4425, !4426, !4427}
!llvm.dbg.lv.__convert_escape_sequences = !{!4428, !4429, !4431, !4432}
!llvm.dbg.lv.__add_arg = !{!4435, !4436, !4437, !4438}
!llvm.dbg.lv.klee_init_env = !{!4439, !4440, !4441, !4443, !4444, !4445, !4446, !4450, !4452, !4453, !4454, !4455, !4456, !4457, !4458, !4459, !4460, !4461, !4462, !4463, !4479, !4480, !4481, !4482, !4483, !4484, !4488, !4489, !4490, !4491, !4493, !4495,
!llvm.dbg.lv.execve = !{!4509, !4510, !4511}
!llvm.dbg.lv.execvp = !{!4512, !4513}
!llvm.dbg.lv.execv = !{!4514, !4515}
!llvm.dbg.lv.execle = !{!4516, !4517}
!llvm.dbg.lv.execlp = !{!4518, !4519}
!llvm.dbg.lv.execl = !{!4520, !4521}
!llvm.dbg.lv.kill = !{!4522, !4523}
!llvm.dbg.lv.longjmp = !{!4524, !4525}
!llvm.dbg.lv._setjmp = !{!4526}
!llvm.dbg.lv.__get_file = !{!4527, !4528}
!llvm.dbg.lv.umask = !{!4531, !4532}
!llvm.dbg.lv.has_permission = !{!4534, !4535, !4536, !4538, !4539}
!llvm.dbg.lv.sendfile = !{!4540, !4541, !4542, !4543, !4544, !4546, !4547}
!llvm.dbg.lv.sendfile64 = !{!4549, !4550, !4551, !4552}
!llvm.dbg.lv.fsync = !{!4553, !4554, !4556}
!llvm.dbg.lv.chroot = !{!4558}
!llvm.dbg.lv.fstatfs = !{!4559, !4560, !4561, !4563}
!llvm.dbg.lv.fcntl = !{!4565, !4566, !4567, !4569, !4580, !4581, !4583}
!llvm.dbg.lv.futimens = !{!4585, !4586, !4587, !4589}
!llvm.dbg.lv.__df_chown = !{!4590, !4591, !4592}
!llvm.dbg.lv.fchown = !{!4593, !4594, !4595, !4596, !4598}
!llvm.dbg.lv.fchdir = !{!4600, !4601, !4603}
!llvm.dbg.lv.ioctl = !{!4605, !4606, !4607, !4609, !4610, !4611, !4613, !4631, !4641, !4643, !4684, !4686, !4688, !4690, !4698, !4716}
!llvm.dbg.lv.__undo_get_new_fd = !{!4718}
!llvm.dbg.lv.__get_new_fd = !{!4719, !4720}
!llvm.dbg.lv.select = !{!4722, !4723, !4724, !4725, !4726, !4727, !4729, !4730, !4731, !4732, !4733, !4734, !4735, !4736, !4737, !4739, !4741, !4743, !4744}
!llvm.dbg.lv.close = !{!4746, !4747, !4749}
!llvm.dbg.lv.dup2 = !{!4750, !4751, !4752, !4754, !4755, !4756}
!llvm.dbg.lv.dup = !{!4757, !4758, !4760}
!llvm.dbg.lv.__fd_getdents = !{!4762, !4763, !4764, !4765, !4767, !4769, !4770, !4771, !4773, !4775, !4776, !4777, !4779}
!llvm.dbg.lv.__fd_gather_write = !{!4781, !4782, !4783, !4784, !4786, !4788}
!llvm.dbg.lv.writev = !{!4790, !4791, !4792, !4793, !4795}
!llvm.dbg.lv.__fd_fstat = !{!4797, !4798, !4799, !4801}
!llvm.dbg.lv.__fd_scatter_read = !{!4803, !4804, !4805, !4806, !4809, !4811, !4813, !4815, !4816}
!llvm.dbg.lv.munmap = !{!4817, !4818}
!llvm.dbg.lv.pipe = !{!4819, !4820, !4823, !4824}
!llvm.dbg.lv.__concretize_ptr = !{!4825, !4826}
!llvm.dbg.lv.__concretize_string = !{!4828, !4829, !4831, !4832, !4834}
!llvm.dbg.lv.__get_sym_file_internal = !{!4836, !4837, !4838, !4839, !4841, !4842, !4844, !4846, !4847, !4849, !4851, !4852, !4856, !4857, !4859, !4860, !4861, !4863, !4864, !4866}
!llvm.dbg.lv.__get_sym_file = !{!4867}
!llvm.dbg.lv.utime = !{!4868, !4869, !4870, !4872}
!llvm.dbg.lv.readlink = !{!4873, !4874, !4875, !4876, !4878}
!llvm.dbg.lv.utimes = !{!4880, !4881, !4882, !4884}
!llvm.dbg.lv.unlink = !{!4885, !4886, !4888}
!llvm.dbg.lv.rmdir = !{!4890, !4891, !4893}
!llvm.dbg.lv.__fd_statfs = !{!4895, !4896, !4897, !4899}
!llvm.dbg.lv.openat = !{!4901, !4902, !4903, !4904, !4906, !4907, !4908, !4909}
!llvm.dbg.lv.symlink = !{!4911, !4912, !4913, !4915}
!llvm.dbg.lv.link = !{!4916, !4917, !4918, !4920}
!llvm.dbg.lv.futimesat = !{!4921, !4922, !4923, !4924, !4926, !4927}
!llvm.dbg.lv.unlinkat = !{!4928, !4929, !4930, !4931, !4933, !4934}
!llvm.dbg.lv.fstatat = !{!4935, !4936, !4937, !4938, !4939, !4941, !4942}
!llvm.dbg.lv.lchown = !{!4943, !4944, !4945, !4946, !4948}
!llvm.dbg.lv.chown = !{!4950, !4951, !4952, !4953, !4955}
!llvm.dbg.lv.chdir = !{!4957, !4958, !4960}
!llvm.dbg.lv.euidaccess = !{!4962, !4963, !4964, !4966}
!llvm.dbg.lv.access = !{!4968, !4969, !4970, !4972}
!llvm.dbg.lv.__concretize_size = !{!4974, !4975}
!llvm.dbg.lv.getcwd = !{!4977, !4978, !4979}
!llvm.dbg.lv.__fd_ftruncate = !{!4981, !4982, !4983, !4985}
!llvm.dbg.lv.__fd_lseek = !{!4987, !4988, !4989, !4990, !4992}
!llvm.dbg.lv.pread = !{!4993, !4994, !4995, !4996, !4997, !4999}
!llvm.dbg.lv.read = !{!5001, !5002, !5003, !5004, !5006, !5008}
!llvm.dbg.lv.mmap_simple = !{!5009, !5010, !5011, !5012, !5014, !5015}
!llvm.dbg.lv.mmap = !{!5016, !5017, !5018, !5019, !5020, !5021, !5022}
!llvm.dbg.lv.mmap64 = !{!5024, !5025, !5026, !5027, !5028, !5029, !5030}
!llvm.dbg.lv.__concretize_buffer = !{!5032, !5033, !5034, !5036, !5037, !5039}
!llvm.dbg.lv.__df_chmod = !{!5040, !5041}
!llvm.dbg.lv.fchmod = !{!5042, !5043, !5044, !5046}
!llvm.dbg.lv.chmod = !{!5048, !5049, !5050, !5052}
!llvm.dbg.lv.__fd_lstat = !{!5054, !5055, !5056, !5058, !5059}
!llvm.dbg.lv.__fd_stat = !{!5061, !5062, !5063, !5065, !5066}
!llvm.dbg.lv.write = !{!5068, !5069, !5070, !5071, !5073, !5075, !5076}
!llvm.dbg.lv.atoi = !{!5078}
!llvm.dbg.lv.__fd_open = !{!5079, !5080, !5081, !5082, !5084, !5085, !5086, !5088, !5091, !5092, !5093}
!llvm.dbg.lv.__fd_openat = !{!5095, !5096, !5097, !5098, !5099, !5101, !5102, !5103}
!llvm.dbg.lv.gnu_dev_major = !{!5105}
!llvm.dbg.lv.gnu_dev_minor = !{!5106}
!llvm.dbg.lv.gnu_dev_makedev = !{!5107, !5108}
!llvm.dbg.lv.getsockopt = !{!5109, !5110, !5111, !5112, !5113}
!llvm.dbg.lv.setsockopt = !{!5114, !5115, !5116, !5117, !5118}
!llvm.dbg.lv.__fd_attach_dgram = !{!5119}
!llvm.dbg.lv.cap_get_file = !{!5120}
!llvm.dbg.lv.getenv = !{!5121}
!llvm.dbg.lv.setlocale = !{!5122, !5123}
!llvm.dbg.lv.clock_settime = !{!5124, !5125}
!llvm.dbg.lv.__fd_recvmsg = !{!5126, !5127, !5128, !5129}
!llvm.dbg.lv.recvmsg = !{!5133, !5134, !5135}
!llvm.dbg.lv.__fd_recvfrom = !{!5136, !5137, !5138, !5139, !5140, !5141, !5142, !5144, !5145}
!llvm.dbg.lv.recvfrom = !{!5146, !5147, !5148, !5149, !5150, !5151}
!llvm.dbg.lv.__fd_recv = !{!5152, !5153, !5154, !5155}
!llvm.dbg.lv.recv = !{!5156, !5157, !5158, !5159}
!llvm.dbg.lv.__fd_sendmsg = !{!5160, !5161, !5162, !5163}
!llvm.dbg.lv.sendmsg = !{!5165, !5166, !5167}
!llvm.dbg.lv.__fd_sendto = !{!5168, !5169, !5170, !5171, !5172, !5173, !5174, !5176}
!llvm.dbg.lv.sendto = !{!5177, !5178, !5179, !5180, !5181, !5182}
!llvm.dbg.lv.__fd_send = !{!5183, !5184, !5185, !5186}
!llvm.dbg.lv.send = !{!5187, !5188, !5189, !5190}
!llvm.dbg.lv.shutdown = !{!5191, !5192, !5193, !5195}
!llvm.dbg.lv.__fd_shutdown = !{!5197, !5198, !5200}
!llvm.dbg.lv.getpeername = !{!5201, !5202, !5203, !5204, !5206}
!llvm.dbg.lv.__fd_getpeername = !{!5207, !5208, !5210, !5211}
!llvm.dbg.lv.getsockname = !{!5212, !5213, !5214, !5215, !5217}
!llvm.dbg.lv.__fd_getsockname = !{!5218, !5219, !5221, !5222}
!llvm.dbg.lv.listen = !{!5223, !5224, !5225, !5227}
!llvm.dbg.lv.__fd_listen = !{!5228, !5229, !5231}
!llvm.dbg.lv.connect = !{!5232, !5233, !5234, !5235, !5237}
!llvm.dbg.lv.__fd_connect = !{!5238, !5239, !5241, !5242}
!llvm.dbg.lv.bind = !{!5243, !5244, !5245, !5246, !5248}
!llvm.dbg.lv.__fd_bind = !{!5249, !5250, !5252, !5253}
!llvm.dbg.lv.rename = !{!5254, !5255, !5256}
!llvm.dbg.lv.__allocate_sockaddr = !{!5258, !5259}
!llvm.dbg.lv.__fd_accept = !{!5260, !5261, !5262, !5263, !5265, !5266, !5267, !5269, !5270}
!llvm.dbg.lv.accept = !{!5271, !5272, !5273}
!llvm.dbg.lv.socket = !{!5274, !5275, !5276, !5277, !5279, !5280}
!llvm.dbg.lv.__fd_socket = !{!5282, !5283, !5285, !5286}
!llvm.dbg.lv.__socketcall = !{!5287, !5288}
!llvm.dbg.lv.canonicalize_file_name = !{!5289}
!llvm.dbg.lv.strverscmp = !{!5290, !5291, !5292, !5295}
!llvm.dbg.lv.clock_gettime = !{!5296, !5297, !5298}
!llvm.dbg.lv._IO_putc = !{!5306, !5307}
!llvm.dbg.lv._IO_getc = !{!5308}
!llvm.dbg.lv.__syscall_rt_sigaction = !{!5309, !5310, !5311, !5312}
!llvm.dbg.lv.__stat64_to_stat = !{!5313, !5314}
!llvm.dbg.lv.fstat64 = !{!5315, !5316}
!llvm.dbg.lv.fstat = !{!5317, !5318, !5319, !5321}
!llvm.dbg.lv.__fxstat = !{!5322, !5323, !5324, !5325, !5327}
!llvm.dbg.lv.lstat64 = !{!5328, !5329}
!llvm.dbg.lv.lstat = !{!5330, !5331, !5332, !5334}
!llvm.dbg.lv.__lxstat = !{!5335, !5336, !5337, !5338, !5340}
!llvm.dbg.lv.stat64 = !{!5341, !5342, !5343, !5344, !5345, !5346}
!llvm.dbg.lv.stat = !{!5347, !5348, !5349, !5351}
!llvm.dbg.lv.__xstat = !{!5352, !5353, !5354, !5355, !5357}
!llvm.dbg.lv.lseek64 = !{!5358, !5359, !5360}
!llvm.dbg.lv.lseek = !{!5361, !5362, !5363}
!llvm.dbg.lv.open64 = !{!5364, !5365, !5366, !5369}
!llvm.dbg.lv.open = !{!5382, !5383, !5384, !5386}
!llvm.dbg.lv.getdents = !{!5388, !5389, !5390, !5391, !5402, !5403, !5405, !5407}
!llvm.dbg.lv.statfs = !{!5408, !5409}
!llvm.dbg.lv.ftruncate = !{!5410, !5411}
!llvm.dbg.lv.__sym_uint32 = !{!5412, !5413}
!llvm.dbg.lv.native_read_file = !{!5415, !5416, !5417, !5418, !5420, !5421, !5422, !5423}
!llvm.dbg.lv.__fill_blocks = !{!5424, !5425, !5426, !5427, !5428, !5430, !5431, !5432, !5433}
!llvm.dbg.lv.__create_new_dfile = !{!5435, !5436, !5437, !5438, !5439, !5440, !5441, !5442, !5443, !5445, !5446, !5448, !5449, !5450, !5451, !5453}
!llvm.dbg.lv.klee_init_cp_file = !{!5455, !5456, !5457, !5459, !5460, !5461}
!llvm.dbg.lv.klee_init_fds = !{!5462, !5463, !5464, !5465, !5466, !5467, !5468, !5469, !5470, !5471, !5472, !5473, !5474, !5475, !5476, !5478, !5480, !5482, !5483, !5484, !5485}
!llvm.dbg.lv.my_strlen = !{!5487, !5488}
!llvm.dbg.lv.klee_mark_arg_symbolic = !{!5490, !5491, !5492, !5494, !5495, !5496, !5497, !5498, !5499, !5520}
!llvm.dbg.lv.klee_overshift_check = !{!5522, !5523}
!llvm.dbg.lv.klee_div_zero_check = !{!5524}
!llvm.dbg.lv.klee_range = !{!5525, !5526, !5527, !5528}

!0 = metadata !{i32 589870, i32 0, metadata !1, metadata !"__errno_location", metadata !"__errno_location", metadata !"__errno_location", metadata !1, i32 12, metadata !3, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* ()* @__errno_locati
!1 = metadata !{i32 589865, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !2} ; [ DW_TAG_file_type ]
!2 = metadata !{i32 589841, i32 0, i32 1, metadata !"__errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!3 = metadata !{i32 589845, metadata !1, metadata !"", metadata !1, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4 = metadata !{metadata !5}
!5 = metadata !{i32 589839, metadata !1, metadata !"", metadata !1, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !6} ; [ DW_TAG_pointer_type ]
!6 = metadata !{i32 589860, metadata !1, metadata !"int", metadata !1, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!7 = metadata !{i32 589870, i32 0, metadata !8, metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !"__fgetc_unlocked", metadata !10, i32 23, metadata !11, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__fgetc_un
!8 = metadata !{i32 589865, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!9 = metadata !{i32 589841, i32 0, i32 1, metadata !"fgetc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!10 = metadata !{i32 589865, metadata !"fgetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !9} ; [ DW_TAG_file_type ]
!11 = metadata !{i32 589845, metadata !8, metadata !"", metadata !8, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !12, i32 0, null} ; [ DW_TAG_subroutine_type ]
!12 = metadata !{metadata !13, metadata !14}
!13 = metadata !{i32 589860, metadata !8, metadata !"int", metadata !8, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!14 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !15} ; [ DW_TAG_pointer_type ]
!15 = metadata !{i32 589846, metadata !16, metadata !"FILE", metadata !16, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !17} ; [ DW_TAG_typedef ]
!16 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!17 = metadata !{i32 589843, metadata !8, metadata !"__STDIO_FILE_STRUCT", metadata !16, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !18, i32 0, null} ; [ DW_TAG_structure_type ]
!18 = metadata !{metadata !19, metadata !22, metadata !27, metadata !28, metadata !30, metadata !31, metadata !32, metadata !33, metadata !34, metadata !35, metadata !37, metadata !41}
!19 = metadata !{i32 589837, metadata !17, metadata !"__modeflags", metadata !20, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !21} ; [ DW_TAG_member ]
!20 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !9} ; [ DW_TAG_file_type ]
!21 = metadata !{i32 589860, metadata !8, metadata !"short unsigned int", metadata !8, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!22 = metadata !{i32 589837, metadata !17, metadata !"__ungot_width", metadata !20, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !23} ; [ DW_TAG_member ]
!23 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !24, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!24 = metadata !{i32 589860, metadata !8, metadata !"unsigned char", metadata !8, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!25 = metadata !{metadata !26}
!26 = metadata !{i32 589857, i64 0, i64 1}        ; [ DW_TAG_subrange_type ]
!27 = metadata !{i32 589837, metadata !17, metadata !"__filedes", metadata !20, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !13} ; [ DW_TAG_member ]
!28 = metadata !{i32 589837, metadata !17, metadata !"__bufstart", metadata !20, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !29} ; [ DW_TAG_member ]
!29 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !24} ; [ DW_TAG_pointer_type ]
!30 = metadata !{i32 589837, metadata !17, metadata !"__bufend", metadata !20, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !29} ; [ DW_TAG_member ]
!31 = metadata !{i32 589837, metadata !17, metadata !"__bufpos", metadata !20, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !29} ; [ DW_TAG_member ]
!32 = metadata !{i32 589837, metadata !17, metadata !"__bufread", metadata !20, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !29} ; [ DW_TAG_member ]
!33 = metadata !{i32 589837, metadata !17, metadata !"__bufgetc_u", metadata !20, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !29} ; [ DW_TAG_member ]
!34 = metadata !{i32 589837, metadata !17, metadata !"__bufputc_u", metadata !20, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !29} ; [ DW_TAG_member ]
!35 = metadata !{i32 589837, metadata !17, metadata !"__nextopen", metadata !20, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !36} ; [ DW_TAG_member ]
!36 = metadata !{i32 589839, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !17} ; [ DW_TAG_pointer_type ]
!37 = metadata !{i32 589837, metadata !17, metadata !"__ungot", metadata !20, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !38} ; [ DW_TAG_member ]
!38 = metadata !{i32 589825, metadata !8, metadata !"", metadata !8, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !39, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!39 = metadata !{i32 589846, metadata !40, metadata !"wchar_t", metadata !40, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !13} ; [ DW_TAG_typedef ]
!40 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !9} ; [ DW_TAG_file_type ]
!41 = metadata !{i32 589837, metadata !17, metadata !"__state", metadata !20, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !42} ; [ DW_TAG_member ]
!42 = metadata !{i32 589846, metadata !43, metadata !"__mbstate_t", metadata !43, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !44} ; [ DW_TAG_typedef ]
!43 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !9} ; [ DW_TAG_file_type ]
!44 = metadata !{i32 589843, metadata !8, metadata !"", metadata !43, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !45, i32 0, null} ; [ DW_TAG_structure_type ]
!45 = metadata !{metadata !46, metadata !47}
!46 = metadata !{i32 589837, metadata !44, metadata !"__mask", metadata !43, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !39} ; [ DW_TAG_member ]
!47 = metadata !{i32 589837, metadata !44, metadata !"__wc", metadata !43, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !39} ; [ DW_TAG_member ]
!48 = metadata !{i32 589870, i32 0, metadata !49, metadata !"__fpending", metadata !"__fpending", metadata !"__fpending", metadata !49, i32 29, metadata !51, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__fpending} ; [ DW_TAG_sub
!49 = metadata !{i32 589865, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !50} ; [ DW_TAG_file_type ]
!50 = metadata !{i32 589841, i32 0, i32 1, metadata !"__fpending.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!51 = metadata !{i32 589845, metadata !49, metadata !"", metadata !49, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !52, i32 0, null} ; [ DW_TAG_subroutine_type ]
!52 = metadata !{metadata !53, metadata !56}
!53 = metadata !{i32 589846, metadata !54, metadata !"size_t", metadata !54, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !55} ; [ DW_TAG_typedef ]
!54 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !50} ; [ DW_TAG_file_type ]
!55 = metadata !{i32 589860, metadata !49, metadata !"long unsigned int", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!56 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !57} ; [ DW_TAG_pointer_type ]
!57 = metadata !{i32 589846, metadata !58, metadata !"FILE", metadata !58, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !59} ; [ DW_TAG_typedef ]
!58 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!59 = metadata !{i32 589843, metadata !49, metadata !"__STDIO_FILE_STRUCT", metadata !58, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !60, i32 0, null} ; [ DW_TAG_structure_type ]
!60 = metadata !{metadata !61, metadata !64, metadata !67, metadata !69, metadata !71, metadata !72, metadata !73, metadata !74, metadata !75, metadata !76, metadata !78, metadata !81}
!61 = metadata !{i32 589837, metadata !59, metadata !"__modeflags", metadata !62, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !63} ; [ DW_TAG_member ]
!62 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !50} ; [ DW_TAG_file_type ]
!63 = metadata !{i32 589860, metadata !49, metadata !"short unsigned int", metadata !49, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!64 = metadata !{i32 589837, metadata !59, metadata !"__ungot_width", metadata !62, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !65} ; [ DW_TAG_member ]
!65 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !66, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!66 = metadata !{i32 589860, metadata !49, metadata !"unsigned char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!67 = metadata !{i32 589837, metadata !59, metadata !"__filedes", metadata !62, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !68} ; [ DW_TAG_member ]
!68 = metadata !{i32 589860, metadata !49, metadata !"int", metadata !49, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!69 = metadata !{i32 589837, metadata !59, metadata !"__bufstart", metadata !62, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !70} ; [ DW_TAG_member ]
!70 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !66} ; [ DW_TAG_pointer_type ]
!71 = metadata !{i32 589837, metadata !59, metadata !"__bufend", metadata !62, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !70} ; [ DW_TAG_member ]
!72 = metadata !{i32 589837, metadata !59, metadata !"__bufpos", metadata !62, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !70} ; [ DW_TAG_member ]
!73 = metadata !{i32 589837, metadata !59, metadata !"__bufread", metadata !62, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !70} ; [ DW_TAG_member ]
!74 = metadata !{i32 589837, metadata !59, metadata !"__bufgetc_u", metadata !62, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !70} ; [ DW_TAG_member ]
!75 = metadata !{i32 589837, metadata !59, metadata !"__bufputc_u", metadata !62, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !70} ; [ DW_TAG_member ]
!76 = metadata !{i32 589837, metadata !59, metadata !"__nextopen", metadata !62, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !77} ; [ DW_TAG_member ]
!77 = metadata !{i32 589839, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !59} ; [ DW_TAG_pointer_type ]
!78 = metadata !{i32 589837, metadata !59, metadata !"__ungot", metadata !62, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !79} ; [ DW_TAG_member ]
!79 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !80, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!80 = metadata !{i32 589846, metadata !54, metadata !"wchar_t", metadata !54, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !68} ; [ DW_TAG_typedef ]
!81 = metadata !{i32 589837, metadata !59, metadata !"__state", metadata !62, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !82} ; [ DW_TAG_member ]
!82 = metadata !{i32 589846, metadata !83, metadata !"__mbstate_t", metadata !83, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !84} ; [ DW_TAG_typedef ]
!83 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !50} ; [ DW_TAG_file_type ]
!84 = metadata !{i32 589843, metadata !49, metadata !"", metadata !83, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !85, i32 0, null} ; [ DW_TAG_structure_type ]
!85 = metadata !{metadata !86, metadata !87}
!86 = metadata !{i32 589837, metadata !84, metadata !"__mask", metadata !83, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !80} ; [ DW_TAG_member ]
!87 = metadata !{i32 589837, metadata !84, metadata !"__wc", metadata !83, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !80} ; [ DW_TAG_member ]
!88 = metadata !{i32 589870, i32 0, metadata !89, metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !"__fputc_unlocked", metadata !91, i32 20, metadata !92, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @__f
!89 = metadata !{i32 589865, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!90 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputc_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!91 = metadata !{i32 589865, metadata !"fputc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !90} ; [ DW_TAG_file_type ]
!92 = metadata !{i32 589845, metadata !89, metadata !"", metadata !89, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !93, i32 0, null} ; [ DW_TAG_subroutine_type ]
!93 = metadata !{metadata !94, metadata !94, metadata !95}
!94 = metadata !{i32 589860, metadata !89, metadata !"int", metadata !89, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!95 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !96} ; [ DW_TAG_pointer_type ]
!96 = metadata !{i32 589846, metadata !97, metadata !"FILE", metadata !97, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !98} ; [ DW_TAG_typedef ]
!97 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!98 = metadata !{i32 589843, metadata !89, metadata !"__STDIO_FILE_STRUCT", metadata !97, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !99, i32 0, null} ; [ DW_TAG_structure_type ]
!99 = metadata !{metadata !100, metadata !103, metadata !106, metadata !107, metadata !109, metadata !110, metadata !111, metadata !112, metadata !113, metadata !114, metadata !116, metadata !120}
!100 = metadata !{i32 589837, metadata !98, metadata !"__modeflags", metadata !101, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !102} ; [ DW_TAG_member ]
!101 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !90} ; [ DW_TAG_file_type ]
!102 = metadata !{i32 589860, metadata !89, metadata !"short unsigned int", metadata !89, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!103 = metadata !{i32 589837, metadata !98, metadata !"__ungot_width", metadata !101, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !104} ; [ DW_TAG_member ]
!104 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !105, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!105 = metadata !{i32 589860, metadata !89, metadata !"unsigned char", metadata !89, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!106 = metadata !{i32 589837, metadata !98, metadata !"__filedes", metadata !101, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !94} ; [ DW_TAG_member ]
!107 = metadata !{i32 589837, metadata !98, metadata !"__bufstart", metadata !101, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !108} ; [ DW_TAG_member ]
!108 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !105} ; [ DW_TAG_pointer_type ]
!109 = metadata !{i32 589837, metadata !98, metadata !"__bufend", metadata !101, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !108} ; [ DW_TAG_member ]
!110 = metadata !{i32 589837, metadata !98, metadata !"__bufpos", metadata !101, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !108} ; [ DW_TAG_member ]
!111 = metadata !{i32 589837, metadata !98, metadata !"__bufread", metadata !101, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !108} ; [ DW_TAG_member ]
!112 = metadata !{i32 589837, metadata !98, metadata !"__bufgetc_u", metadata !101, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !108} ; [ DW_TAG_member ]
!113 = metadata !{i32 589837, metadata !98, metadata !"__bufputc_u", metadata !101, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !108} ; [ DW_TAG_member ]
!114 = metadata !{i32 589837, metadata !98, metadata !"__nextopen", metadata !101, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !115} ; [ DW_TAG_member ]
!115 = metadata !{i32 589839, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !98} ; [ DW_TAG_pointer_type ]
!116 = metadata !{i32 589837, metadata !98, metadata !"__ungot", metadata !101, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !117} ; [ DW_TAG_member ]
!117 = metadata !{i32 589825, metadata !89, metadata !"", metadata !89, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !118, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!118 = metadata !{i32 589846, metadata !119, metadata !"wchar_t", metadata !119, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !94} ; [ DW_TAG_typedef ]
!119 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !90} ; [ DW_TAG_file_type ]
!120 = metadata !{i32 589837, metadata !98, metadata !"__state", metadata !101, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !121} ; [ DW_TAG_member ]
!121 = metadata !{i32 589846, metadata !122, metadata !"__mbstate_t", metadata !122, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !123} ; [ DW_TAG_typedef ]
!122 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !90} ; [ DW_TAG_file_type ]
!123 = metadata !{i32 589843, metadata !89, metadata !"", metadata !122, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !124, i32 0, null} ; [ DW_TAG_structure_type ]
!124 = metadata !{metadata !125, metadata !126}
!125 = metadata !{i32 589837, metadata !123, metadata !"__mask", metadata !122, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !118} ; [ DW_TAG_member ]
!126 = metadata !{i32 589837, metadata !123, metadata !"__wc", metadata !122, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !118} ; [ DW_TAG_member ]
!127 = metadata !{i32 589870, i32 0, metadata !128, metadata !"__freading", metadata !"__freading", metadata !"__freading", metadata !128, i32 16, metadata !130, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @__freading} ; [ DW_TAG
!128 = metadata !{i32 589865, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !129} ; [ DW_TAG_file_type ]
!129 = metadata !{i32 589841, i32 0, i32 1, metadata !"__freading.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!130 = metadata !{i32 589845, metadata !128, metadata !"", metadata !128, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !131, i32 0, null} ; [ DW_TAG_subroutine_type ]
!131 = metadata !{metadata !132, metadata !133}
!132 = metadata !{i32 589860, metadata !128, metadata !"int", metadata !128, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!133 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !134} ; [ DW_TAG_pointer_type ]
!134 = metadata !{i32 589846, metadata !135, metadata !"FILE", metadata !135, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !136} ; [ DW_TAG_typedef ]
!135 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!136 = metadata !{i32 589843, metadata !128, metadata !"__STDIO_FILE_STRUCT", metadata !135, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !137, i32 0, null} ; [ DW_TAG_structure_type ]
!137 = metadata !{metadata !138, metadata !141, metadata !144, metadata !145, metadata !147, metadata !148, metadata !149, metadata !150, metadata !151, metadata !152, metadata !154, metadata !158}
!138 = metadata !{i32 589837, metadata !136, metadata !"__modeflags", metadata !139, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !140} ; [ DW_TAG_member ]
!139 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !129} ; [ DW_TAG_file_type ]
!140 = metadata !{i32 589860, metadata !128, metadata !"short unsigned int", metadata !128, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!141 = metadata !{i32 589837, metadata !136, metadata !"__ungot_width", metadata !139, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !142} ; [ DW_TAG_member ]
!142 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !143, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!143 = metadata !{i32 589860, metadata !128, metadata !"unsigned char", metadata !128, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!144 = metadata !{i32 589837, metadata !136, metadata !"__filedes", metadata !139, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !132} ; [ DW_TAG_member ]
!145 = metadata !{i32 589837, metadata !136, metadata !"__bufstart", metadata !139, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !146} ; [ DW_TAG_member ]
!146 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !143} ; [ DW_TAG_pointer_type ]
!147 = metadata !{i32 589837, metadata !136, metadata !"__bufend", metadata !139, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !146} ; [ DW_TAG_member ]
!148 = metadata !{i32 589837, metadata !136, metadata !"__bufpos", metadata !139, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !146} ; [ DW_TAG_member ]
!149 = metadata !{i32 589837, metadata !136, metadata !"__bufread", metadata !139, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !146} ; [ DW_TAG_member ]
!150 = metadata !{i32 589837, metadata !136, metadata !"__bufgetc_u", metadata !139, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !146} ; [ DW_TAG_member ]
!151 = metadata !{i32 589837, metadata !136, metadata !"__bufputc_u", metadata !139, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !146} ; [ DW_TAG_member ]
!152 = metadata !{i32 589837, metadata !136, metadata !"__nextopen", metadata !139, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !153} ; [ DW_TAG_member ]
!153 = metadata !{i32 589839, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !136} ; [ DW_TAG_pointer_type ]
!154 = metadata !{i32 589837, metadata !136, metadata !"__ungot", metadata !139, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !155} ; [ DW_TAG_member ]
!155 = metadata !{i32 589825, metadata !128, metadata !"", metadata !128, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !156, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!156 = metadata !{i32 589846, metadata !157, metadata !"wchar_t", metadata !157, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !132} ; [ DW_TAG_typedef ]
!157 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !129} ; [ DW_TAG_file_type ]
!158 = metadata !{i32 589837, metadata !136, metadata !"__state", metadata !139, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !159} ; [ DW_TAG_member ]
!159 = metadata !{i32 589846, metadata !160, metadata !"__mbstate_t", metadata !160, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !161} ; [ DW_TAG_typedef ]
!160 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !129} ; [ DW_TAG_file_type ]
!161 = metadata !{i32 589843, metadata !128, metadata !"", metadata !160, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !162, i32 0, null} ; [ DW_TAG_structure_type ]
!162 = metadata !{metadata !163, metadata !164}
!163 = metadata !{i32 589837, metadata !161, metadata !"__mask", metadata !160, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !156} ; [ DW_TAG_member ]
!164 = metadata !{i32 589837, metadata !161, metadata !"__wc", metadata !160, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !156} ; [ DW_TAG_member ]
!165 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_one_fd", metadata !"__check_one_fd", metadata !"", metadata !166, i32 137, metadata !168, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32)* @__check_one_fd} ; 
!166 = metadata !{i32 589865, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !167} ; [ DW_TAG_file_type ]
!167 = metadata !{i32 589841, i32 0, i32 1, metadata !"__uClibc_main.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i
!168 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !169, i32 0, null} ; [ DW_TAG_subroutine_type ]
!169 = metadata !{null, metadata !170, metadata !170}
!170 = metadata !{i32 589860, metadata !166, metadata !"int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!171 = metadata !{i32 589870, i32 0, metadata !166, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"", metadata !172, i32 55, metadata !173, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i32)* @gnu_dev_makedev409
!172 = metadata !{i32 589865, metadata !"sysmacros.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !167} ; [ DW_TAG_file_type ]
!173 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !174, i32 0, null} ; [ DW_TAG_subroutine_type ]
!174 = metadata !{metadata !175, metadata !176, metadata !176}
!175 = metadata !{i32 589860, metadata !166, metadata !"long long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!176 = metadata !{i32 589860, metadata !166, metadata !"unsigned int", metadata !166, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!177 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__check_suid", metadata !"__check_suid", metadata !"", metadata !166, i32 156, metadata !178, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 ()* @__check_suid} ; [ DW_TAG_subpro
!178 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !179, i32 0, null} ; [ DW_TAG_subroutine_type ]
!179 = metadata !{metadata !170}
!180 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !"__uClibc_init", metadata !166, i32 188, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_init}
!181 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!182 = metadata !{null}
!183 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !"__uClibc_fini", metadata !166, i32 252, metadata !181, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__uClibc_fini}
!184 = metadata !{i32 589870, i32 0, metadata !166, metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !"__uClibc_main", metadata !166, i32 281, metadata !185, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32 (i32, i8**, i8
!185 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !186, i32 0, null} ; [ DW_TAG_subroutine_type ]
!186 = metadata !{null, metadata !187, metadata !170, metadata !190, metadata !193, metadata !193, metadata !193, metadata !194}
!187 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !188} ; [ DW_TAG_pointer_type ]
!188 = metadata !{i32 589845, metadata !166, metadata !"", metadata !166, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !189, i32 0, null} ; [ DW_TAG_subroutine_type ]
!189 = metadata !{metadata !170, metadata !170, metadata !190, metadata !190}
!190 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !191} ; [ DW_TAG_pointer_type ]
!191 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !192} ; [ DW_TAG_pointer_type ]
!192 = metadata !{i32 589860, metadata !166, metadata !"char", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!193 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !181} ; [ DW_TAG_pointer_type ]
!194 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!195 = metadata !{i32 589870, i32 0, metadata !196, metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !"_stdlib_mb_cur_max", metadata !198, i32 921, metadata !199, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 ()* @
!196 = metadata !{i32 589865, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!197 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_mb_cur_max.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 
!198 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !197} ; [ DW_TAG_file_type ]
!199 = metadata !{i32 589845, metadata !196, metadata !"", metadata !196, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !200, i32 0, null} ; [ DW_TAG_subroutine_type ]
!200 = metadata !{metadata !201}
!201 = metadata !{i32 589846, metadata !202, metadata !"size_t", metadata !202, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !203} ; [ DW_TAG_typedef ]
!202 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !197} ; [ DW_TAG_file_type ]
!203 = metadata !{i32 589860, metadata !196, metadata !"long unsigned int", metadata !196, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!204 = metadata !{i32 589870, i32 0, metadata !205, metadata !"abort", metadata !"abort", metadata !"abort", metadata !205, i32 57, metadata !207, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @abort} ; [ DW_TAG_subprogram ]
!205 = metadata !{i32 589865, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !206} ; [ DW_TAG_file_type ]
!206 = metadata !{i32 589841, i32 0, i32 1, metadata !"abort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!207 = metadata !{i32 589845, metadata !205, metadata !"", metadata !205, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!208 = metadata !{i32 589870, i32 0, metadata !209, metadata !"atexit", metadata !"atexit", metadata !"atexit", metadata !211, i32 112, metadata !212, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void ()*)* @atexit} ; [ DW_TAG_subprogra
!209 = metadata !{i32 589865, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !210} ; [ DW_TAG_file_type ]
!210 = metadata !{i32 589841, i32 0, i32 1, metadata !"atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!211 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !210} ; [ DW_TAG_file_type ]
!212 = metadata !{i32 589845, metadata !209, metadata !"", metadata !209, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !213, i32 0, null} ; [ DW_TAG_subroutine_type ]
!213 = metadata !{metadata !214, metadata !215}
!214 = metadata !{i32 589860, metadata !209, metadata !"int", metadata !209, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!215 = metadata !{i32 589839, metadata !209, metadata !"", metadata !209, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !216} ; [ DW_TAG_pointer_type ]
!216 = metadata !{i32 589845, metadata !209, metadata !"", metadata !209, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!217 = metadata !{i32 589870, i32 0, metadata !218, metadata !"closedir", metadata !"closedir", metadata !"closedir", metadata !218, i32 17, metadata !220, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.DIR*)* @closedir} ; [ DW_TA
!218 = metadata !{i32 589865, metadata !"closedir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !219} ; [ DW_TAG_file_type ]
!219 = metadata !{i32 589841, i32 0, i32 1, metadata !"closedir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!220 = metadata !{i32 589845, metadata !218, metadata !"", metadata !218, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !221, i32 0, null} ; [ DW_TAG_subroutine_type ]
!221 = metadata !{metadata !222, metadata !223}
!222 = metadata !{i32 589860, metadata !218, metadata !"int", metadata !218, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!223 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !224} ; [ DW_TAG_pointer_type ]
!224 = metadata !{i32 589846, metadata !225, metadata !"DIR", metadata !225, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !226} ; [ DW_TAG_typedef ]
!225 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !219} ; [ DW_TAG_file_type ]
!226 = metadata !{i32 589843, metadata !218, metadata !"__dirstream", metadata !225, i32 128, i64 448, i64 64, i64 0, i32 0, null, metadata !227, i32 0, null} ; [ DW_TAG_structure_type ]
!227 = metadata !{metadata !228, metadata !230, metadata !234, metadata !235, metadata !237, metadata !241, metadata !242}
!228 = metadata !{i32 589837, metadata !226, metadata !"dd_fd", metadata !229, i32 47, i64 32, i64 32, i64 0, i32 0, metadata !222} ; [ DW_TAG_member ]
!229 = metadata !{i32 589865, metadata !"dirstream.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !219} ; [ DW_TAG_file_type ]
!230 = metadata !{i32 589837, metadata !226, metadata !"dd_nextloc", metadata !229, i32 50, i64 64, i64 64, i64 64, i32 0, metadata !231} ; [ DW_TAG_member ]
!231 = metadata !{i32 589846, metadata !232, metadata !"size_t", metadata !232, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !233} ; [ DW_TAG_typedef ]
!232 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !219} ; [ DW_TAG_file_type ]
!233 = metadata !{i32 589860, metadata !218, metadata !"long unsigned int", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!234 = metadata !{i32 589837, metadata !226, metadata !"dd_size", metadata !229, i32 53, i64 64, i64 64, i64 128, i32 0, metadata !231} ; [ DW_TAG_member ]
!235 = metadata !{i32 589837, metadata !226, metadata !"dd_buf", metadata !229, i32 56, i64 64, i64 64, i64 192, i32 0, metadata !236} ; [ DW_TAG_member ]
!236 = metadata !{i32 589839, metadata !218, metadata !"", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!237 = metadata !{i32 589837, metadata !226, metadata !"dd_nextoff", metadata !229, i32 59, i64 64, i64 64, i64 256, i32 0, metadata !238} ; [ DW_TAG_member ]
!238 = metadata !{i32 589846, metadata !239, metadata !"off_t", metadata !239, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !240} ; [ DW_TAG_typedef ]
!239 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !219} ; [ DW_TAG_file_type ]
!240 = metadata !{i32 589860, metadata !218, metadata !"long int", metadata !218, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!241 = metadata !{i32 589837, metadata !226, metadata !"dd_max", metadata !229, i32 62, i64 64, i64 64, i64 320, i32 0, metadata !231} ; [ DW_TAG_member ]
!242 = metadata !{i32 589837, metadata !226, metadata !"__UCLIBC_MUTEX_DUMMY_dd_lock", metadata !229, i32 65, i64 64, i64 64, i64 384, i32 0, metadata !236} ; [ DW_TAG_member ]
!243 = metadata !{i32 589870, i32 0, metadata !244, metadata !"dirfd", metadata !"dirfd", metadata !"dirfd", metadata !244, i32 14, metadata !246, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.DIR*)* @dirfd} ; [ DW_TAG_subprogram
!244 = metadata !{i32 589865, metadata !"dirfd.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !245} ; [ DW_TAG_file_type ]
!245 = metadata !{i32 589841, i32 0, i32 1, metadata !"dirfd.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!246 = metadata !{i32 589845, metadata !244, metadata !"", metadata !244, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !247, i32 0, null} ; [ DW_TAG_subroutine_type ]
!247 = metadata !{metadata !248, metadata !249}
!248 = metadata !{i32 589860, metadata !244, metadata !"int", metadata !244, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!249 = metadata !{i32 589839, metadata !244, metadata !"", metadata !244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !250} ; [ DW_TAG_pointer_type ]
!250 = metadata !{i32 589846, metadata !251, metadata !"DIR", metadata !251, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !252} ; [ DW_TAG_typedef ]
!251 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !245} ; [ DW_TAG_file_type ]
!252 = metadata !{i32 589843, metadata !244, metadata !"__dirstream", metadata !251, i32 128, i64 448, i64 64, i64 0, i32 0, null, metadata !253, i32 0, null} ; [ DW_TAG_structure_type ]
!253 = metadata !{metadata !254, metadata !256, metadata !260, metadata !261, metadata !263, metadata !267, metadata !268}
!254 = metadata !{i32 589837, metadata !252, metadata !"dd_fd", metadata !255, i32 47, i64 32, i64 32, i64 0, i32 0, metadata !248} ; [ DW_TAG_member ]
!255 = metadata !{i32 589865, metadata !"dirstream.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !245} ; [ DW_TAG_file_type ]
!256 = metadata !{i32 589837, metadata !252, metadata !"dd_nextloc", metadata !255, i32 50, i64 64, i64 64, i64 64, i32 0, metadata !257} ; [ DW_TAG_member ]
!257 = metadata !{i32 589846, metadata !258, metadata !"size_t", metadata !258, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !259} ; [ DW_TAG_typedef ]
!258 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !245} ; [ DW_TAG_file_type ]
!259 = metadata !{i32 589860, metadata !244, metadata !"long unsigned int", metadata !244, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!260 = metadata !{i32 589837, metadata !252, metadata !"dd_size", metadata !255, i32 53, i64 64, i64 64, i64 128, i32 0, metadata !257} ; [ DW_TAG_member ]
!261 = metadata !{i32 589837, metadata !252, metadata !"dd_buf", metadata !255, i32 56, i64 64, i64 64, i64 192, i32 0, metadata !262} ; [ DW_TAG_member ]
!262 = metadata !{i32 589839, metadata !244, metadata !"", metadata !244, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!263 = metadata !{i32 589837, metadata !252, metadata !"dd_nextoff", metadata !255, i32 59, i64 64, i64 64, i64 256, i32 0, metadata !264} ; [ DW_TAG_member ]
!264 = metadata !{i32 589846, metadata !265, metadata !"off_t", metadata !265, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !266} ; [ DW_TAG_typedef ]
!265 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !245} ; [ DW_TAG_file_type ]
!266 = metadata !{i32 589860, metadata !244, metadata !"long int", metadata !244, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!267 = metadata !{i32 589837, metadata !252, metadata !"dd_max", metadata !255, i32 62, i64 64, i64 64, i64 320, i32 0, metadata !257} ; [ DW_TAG_member ]
!268 = metadata !{i32 589837, metadata !252, metadata !"__UCLIBC_MUTEX_DUMMY_dd_lock", metadata !255, i32 65, i64 64, i64 64, i64 384, i32 0, metadata !262} ; [ DW_TAG_member ]
!269 = metadata !{i32 589870, i32 0, metadata !270, metadata !"__error", metadata !"__error", metadata !"__error", metadata !270, i32 51, metadata !272, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*, ...)* @__error} ; [ DW
!270 = metadata !{i32 589865, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !271} ; [ DW_TAG_file_type ]
!271 = metadata !{i32 589841, i32 0, i32 1, metadata !"error.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/error", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!272 = metadata !{i32 589845, metadata !270, metadata !"", metadata !270, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !273, i32 0, null} ; [ DW_TAG_subroutine_type ]
!273 = metadata !{null, metadata !274, metadata !274, metadata !275}
!274 = metadata !{i32 589860, metadata !270, metadata !"int", metadata !270, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!275 = metadata !{i32 589839, metadata !270, metadata !"", metadata !270, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !276} ; [ DW_TAG_pointer_type ]
!276 = metadata !{i32 589862, metadata !270, metadata !"", metadata !270, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !277} ; [ DW_TAG_const_type ]
!277 = metadata !{i32 589860, metadata !270, metadata !"char", metadata !270, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!278 = metadata !{i32 589870, i32 0, metadata !270, metadata !"__error_at_line", metadata !"__error_at_line", metadata !"__error_at_line", metadata !270, i32 72, metadata !279, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32, i32, i8*
!279 = metadata !{i32 589845, metadata !270, metadata !"", metadata !270, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !280, i32 0, null} ; [ DW_TAG_subroutine_type ]
!280 = metadata !{null, metadata !274, metadata !274, metadata !275, metadata !281, metadata !275}
!281 = metadata !{i32 589860, metadata !270, metadata !"unsigned int", metadata !270, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!282 = metadata !{i32 589870, i32 0, metadata !283, metadata !"exit", metadata !"exit", metadata !"exit", metadata !285, i32 319, metadata !286, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @exit} ; [ DW_TAG_subprogram ]
!283 = metadata !{i32 589865, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !284} ; [ DW_TAG_file_type ]
!284 = metadata !{i32 589841, i32 0, i32 1, metadata !"exit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG_
!285 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !284} ; [ DW_TAG_file_type ]
!286 = metadata !{i32 589845, metadata !283, metadata !"", metadata !283, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !287, i32 0, null} ; [ DW_TAG_subroutine_type ]
!287 = metadata !{null, metadata !288}
!288 = metadata !{i32 589860, metadata !283, metadata !"int", metadata !283, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!289 = metadata !{i32 589870, i32 0, metadata !290, metadata !"fclose", metadata !"fclose", metadata !"fclose", metadata !290, i32 15, metadata !292, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fclose} ; [ DW_TAG_subprogram ]
!290 = metadata !{i32 589865, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !291} ; [ DW_TAG_file_type ]
!291 = metadata !{i32 589841, i32 0, i32 1, metadata !"fclose.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!292 = metadata !{i32 589845, metadata !290, metadata !"", metadata !290, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !293, i32 0, null} ; [ DW_TAG_subroutine_type ]
!293 = metadata !{metadata !294, metadata !295}
!294 = metadata !{i32 589860, metadata !290, metadata !"int", metadata !290, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!295 = metadata !{i32 589839, metadata !290, metadata !"", metadata !290, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !296} ; [ DW_TAG_pointer_type ]
!296 = metadata !{i32 589846, metadata !297, metadata !"FILE", metadata !297, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !298} ; [ DW_TAG_typedef ]
!297 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !291} ; [ DW_TAG_file_type ]
!298 = metadata !{i32 589843, metadata !290, metadata !"__STDIO_FILE_STRUCT", metadata !297, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !299, i32 0, null} ; [ DW_TAG_structure_type ]
!299 = metadata !{metadata !300, metadata !303, metadata !306, metadata !307, metadata !309, metadata !310, metadata !311, metadata !312, metadata !313, metadata !314, metadata !316, metadata !320}
!300 = metadata !{i32 589837, metadata !298, metadata !"__modeflags", metadata !301, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !302} ; [ DW_TAG_member ]
!301 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !291} ; [ DW_TAG_file_type ]
!302 = metadata !{i32 589860, metadata !290, metadata !"short unsigned int", metadata !290, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!303 = metadata !{i32 589837, metadata !298, metadata !"__ungot_width", metadata !301, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !304} ; [ DW_TAG_member ]
!304 = metadata !{i32 589825, metadata !290, metadata !"", metadata !290, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !305, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!305 = metadata !{i32 589860, metadata !290, metadata !"unsigned char", metadata !290, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!306 = metadata !{i32 589837, metadata !298, metadata !"__filedes", metadata !301, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !294} ; [ DW_TAG_member ]
!307 = metadata !{i32 589837, metadata !298, metadata !"__bufstart", metadata !301, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !308} ; [ DW_TAG_member ]
!308 = metadata !{i32 589839, metadata !290, metadata !"", metadata !290, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !305} ; [ DW_TAG_pointer_type ]
!309 = metadata !{i32 589837, metadata !298, metadata !"__bufend", metadata !301, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !308} ; [ DW_TAG_member ]
!310 = metadata !{i32 589837, metadata !298, metadata !"__bufpos", metadata !301, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !308} ; [ DW_TAG_member ]
!311 = metadata !{i32 589837, metadata !298, metadata !"__bufread", metadata !301, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !308} ; [ DW_TAG_member ]
!312 = metadata !{i32 589837, metadata !298, metadata !"__bufgetc_u", metadata !301, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !308} ; [ DW_TAG_member ]
!313 = metadata !{i32 589837, metadata !298, metadata !"__bufputc_u", metadata !301, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !308} ; [ DW_TAG_member ]
!314 = metadata !{i32 589837, metadata !298, metadata !"__nextopen", metadata !301, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !315} ; [ DW_TAG_member ]
!315 = metadata !{i32 589839, metadata !290, metadata !"", metadata !290, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !298} ; [ DW_TAG_pointer_type ]
!316 = metadata !{i32 589837, metadata !298, metadata !"__ungot", metadata !301, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !317} ; [ DW_TAG_member ]
!317 = metadata !{i32 589825, metadata !290, metadata !"", metadata !290, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !318, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!318 = metadata !{i32 589846, metadata !319, metadata !"wchar_t", metadata !319, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !294} ; [ DW_TAG_typedef ]
!319 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !291} ; [ DW_TAG_file_type ]
!320 = metadata !{i32 589837, metadata !298, metadata !"__state", metadata !301, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !321} ; [ DW_TAG_member ]
!321 = metadata !{i32 589846, metadata !322, metadata !"__mbstate_t", metadata !322, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !323} ; [ DW_TAG_typedef ]
!322 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !291} ; [ DW_TAG_file_type ]
!323 = metadata !{i32 589843, metadata !290, metadata !"", metadata !322, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !324, i32 0, null} ; [ DW_TAG_structure_type ]
!324 = metadata !{metadata !325, metadata !326}
!325 = metadata !{i32 589837, metadata !323, metadata !"__mask", metadata !322, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !318} ; [ DW_TAG_member ]
!326 = metadata !{i32 589837, metadata !323, metadata !"__wc", metadata !322, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !318} ; [ DW_TAG_member ]
!327 = metadata !{i32 589870, i32 0, metadata !328, metadata !"fdopen", metadata !"fdopen", metadata !"fdopen", metadata !328, i32 14, metadata !330, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i32, i8*)* @fdopen} ; [ DW_TAG_subprogram
!328 = metadata !{i32 589865, metadata !"fdopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !329} ; [ DW_TAG_file_type ]
!329 = metadata !{i32 589841, i32 0, i32 1, metadata !"fdopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!330 = metadata !{i32 589845, metadata !328, metadata !"", metadata !328, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !331, i32 0, null} ; [ DW_TAG_subroutine_type ]
!331 = metadata !{metadata !332, metadata !344, metadata !365}
!332 = metadata !{i32 589839, metadata !328, metadata !"", metadata !328, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !333} ; [ DW_TAG_pointer_type ]
!333 = metadata !{i32 589846, metadata !334, metadata !"FILE", metadata !334, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !335} ; [ DW_TAG_typedef ]
!334 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !329} ; [ DW_TAG_file_type ]
!335 = metadata !{i32 589843, metadata !328, metadata !"__STDIO_FILE_STRUCT", metadata !334, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !336, i32 0, null} ; [ DW_TAG_structure_type ]
!336 = metadata !{metadata !337, metadata !340, metadata !343, metadata !345, metadata !347, metadata !348, metadata !349, metadata !350, metadata !351, metadata !352, metadata !354, metadata !358}
!337 = metadata !{i32 589837, metadata !335, metadata !"__modeflags", metadata !338, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !339} ; [ DW_TAG_member ]
!338 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !329} ; [ DW_TAG_file_type ]
!339 = metadata !{i32 589860, metadata !328, metadata !"short unsigned int", metadata !328, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!340 = metadata !{i32 589837, metadata !335, metadata !"__ungot_width", metadata !338, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !341} ; [ DW_TAG_member ]
!341 = metadata !{i32 589825, metadata !328, metadata !"", metadata !328, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !342, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!342 = metadata !{i32 589860, metadata !328, metadata !"unsigned char", metadata !328, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!343 = metadata !{i32 589837, metadata !335, metadata !"__filedes", metadata !338, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !344} ; [ DW_TAG_member ]
!344 = metadata !{i32 589860, metadata !328, metadata !"int", metadata !328, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!345 = metadata !{i32 589837, metadata !335, metadata !"__bufstart", metadata !338, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !346} ; [ DW_TAG_member ]
!346 = metadata !{i32 589839, metadata !328, metadata !"", metadata !328, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !342} ; [ DW_TAG_pointer_type ]
!347 = metadata !{i32 589837, metadata !335, metadata !"__bufend", metadata !338, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !346} ; [ DW_TAG_member ]
!348 = metadata !{i32 589837, metadata !335, metadata !"__bufpos", metadata !338, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !346} ; [ DW_TAG_member ]
!349 = metadata !{i32 589837, metadata !335, metadata !"__bufread", metadata !338, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !346} ; [ DW_TAG_member ]
!350 = metadata !{i32 589837, metadata !335, metadata !"__bufgetc_u", metadata !338, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !346} ; [ DW_TAG_member ]
!351 = metadata !{i32 589837, metadata !335, metadata !"__bufputc_u", metadata !338, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !346} ; [ DW_TAG_member ]
!352 = metadata !{i32 589837, metadata !335, metadata !"__nextopen", metadata !338, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !353} ; [ DW_TAG_member ]
!353 = metadata !{i32 589839, metadata !328, metadata !"", metadata !328, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !335} ; [ DW_TAG_pointer_type ]
!354 = metadata !{i32 589837, metadata !335, metadata !"__ungot", metadata !338, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !355} ; [ DW_TAG_member ]
!355 = metadata !{i32 589825, metadata !328, metadata !"", metadata !328, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !356, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!356 = metadata !{i32 589846, metadata !357, metadata !"wchar_t", metadata !357, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !344} ; [ DW_TAG_typedef ]
!357 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !329} ; [ DW_TAG_file_type ]
!358 = metadata !{i32 589837, metadata !335, metadata !"__state", metadata !338, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !359} ; [ DW_TAG_member ]
!359 = metadata !{i32 589846, metadata !360, metadata !"__mbstate_t", metadata !360, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !361} ; [ DW_TAG_typedef ]
!360 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !329} ; [ DW_TAG_file_type ]
!361 = metadata !{i32 589843, metadata !328, metadata !"", metadata !360, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !362, i32 0, null} ; [ DW_TAG_structure_type ]
!362 = metadata !{metadata !363, metadata !364}
!363 = metadata !{i32 589837, metadata !361, metadata !"__mask", metadata !360, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !356} ; [ DW_TAG_member ]
!364 = metadata !{i32 589837, metadata !361, metadata !"__wc", metadata !360, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !356} ; [ DW_TAG_member ]
!365 = metadata !{i32 589839, metadata !328, metadata !"", metadata !328, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !366} ; [ DW_TAG_pointer_type ]
!366 = metadata !{i32 589862, metadata !328, metadata !"", metadata !328, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !367} ; [ DW_TAG_const_type ]
!367 = metadata !{i32 589860, metadata !328, metadata !"char", metadata !328, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!368 = metadata !{i32 589870, i32 0, metadata !369, metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !"ferror_unlocked", metadata !371, i32 15, metadata !372, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @ferror_
!369 = metadata !{i32 589865, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !370} ; [ DW_TAG_file_type ]
!370 = metadata !{i32 589841, i32 0, i32 1, metadata !"ferror_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!371 = metadata !{i32 589865, metadata !"ferror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !370} ; [ DW_TAG_file_type ]
!372 = metadata !{i32 589845, metadata !369, metadata !"", metadata !369, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !373, i32 0, null} ; [ DW_TAG_subroutine_type ]
!373 = metadata !{metadata !374, metadata !375}
!374 = metadata !{i32 589860, metadata !369, metadata !"int", metadata !369, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!375 = metadata !{i32 589839, metadata !369, metadata !"", metadata !369, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !376} ; [ DW_TAG_pointer_type ]
!376 = metadata !{i32 589846, metadata !377, metadata !"FILE", metadata !377, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !378} ; [ DW_TAG_typedef ]
!377 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !370} ; [ DW_TAG_file_type ]
!378 = metadata !{i32 589843, metadata !369, metadata !"__STDIO_FILE_STRUCT", metadata !377, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !379, i32 0, null} ; [ DW_TAG_structure_type ]
!379 = metadata !{metadata !380, metadata !383, metadata !386, metadata !387, metadata !389, metadata !390, metadata !391, metadata !392, metadata !393, metadata !394, metadata !396, metadata !400}
!380 = metadata !{i32 589837, metadata !378, metadata !"__modeflags", metadata !381, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !382} ; [ DW_TAG_member ]
!381 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !370} ; [ DW_TAG_file_type ]
!382 = metadata !{i32 589860, metadata !369, metadata !"short unsigned int", metadata !369, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!383 = metadata !{i32 589837, metadata !378, metadata !"__ungot_width", metadata !381, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !384} ; [ DW_TAG_member ]
!384 = metadata !{i32 589825, metadata !369, metadata !"", metadata !369, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !385, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!385 = metadata !{i32 589860, metadata !369, metadata !"unsigned char", metadata !369, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!386 = metadata !{i32 589837, metadata !378, metadata !"__filedes", metadata !381, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !374} ; [ DW_TAG_member ]
!387 = metadata !{i32 589837, metadata !378, metadata !"__bufstart", metadata !381, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !388} ; [ DW_TAG_member ]
!388 = metadata !{i32 589839, metadata !369, metadata !"", metadata !369, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !385} ; [ DW_TAG_pointer_type ]
!389 = metadata !{i32 589837, metadata !378, metadata !"__bufend", metadata !381, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !388} ; [ DW_TAG_member ]
!390 = metadata !{i32 589837, metadata !378, metadata !"__bufpos", metadata !381, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !388} ; [ DW_TAG_member ]
!391 = metadata !{i32 589837, metadata !378, metadata !"__bufread", metadata !381, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !388} ; [ DW_TAG_member ]
!392 = metadata !{i32 589837, metadata !378, metadata !"__bufgetc_u", metadata !381, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !388} ; [ DW_TAG_member ]
!393 = metadata !{i32 589837, metadata !378, metadata !"__bufputc_u", metadata !381, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !388} ; [ DW_TAG_member ]
!394 = metadata !{i32 589837, metadata !378, metadata !"__nextopen", metadata !381, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !395} ; [ DW_TAG_member ]
!395 = metadata !{i32 589839, metadata !369, metadata !"", metadata !369, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !378} ; [ DW_TAG_pointer_type ]
!396 = metadata !{i32 589837, metadata !378, metadata !"__ungot", metadata !381, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !397} ; [ DW_TAG_member ]
!397 = metadata !{i32 589825, metadata !369, metadata !"", metadata !369, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !398, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!398 = metadata !{i32 589846, metadata !399, metadata !"wchar_t", metadata !399, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !374} ; [ DW_TAG_typedef ]
!399 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !370} ; [ DW_TAG_file_type ]
!400 = metadata !{i32 589837, metadata !378, metadata !"__state", metadata !381, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !401} ; [ DW_TAG_member ]
!401 = metadata !{i32 589846, metadata !402, metadata !"__mbstate_t", metadata !402, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !403} ; [ DW_TAG_typedef ]
!402 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !370} ; [ DW_TAG_file_type ]
!403 = metadata !{i32 589843, metadata !369, metadata !"", metadata !402, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !404, i32 0, null} ; [ DW_TAG_structure_type ]
!404 = metadata !{metadata !405, metadata !406}
!405 = metadata !{i32 589837, metadata !403, metadata !"__mask", metadata !402, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !398} ; [ DW_TAG_member ]
!406 = metadata !{i32 589837, metadata !403, metadata !"__wc", metadata !402, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !398} ; [ DW_TAG_member ]
!407 = metadata !{i32 589870, i32 0, metadata !408, metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !"fflush_unlocked", metadata !410, i32 70, metadata !411, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fflush_
!408 = metadata !{i32 589865, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !409} ; [ DW_TAG_file_type ]
!409 = metadata !{i32 589841, i32 0, i32 1, metadata !"fflush_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!410 = metadata !{i32 589865, metadata !"fflush.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !409} ; [ DW_TAG_file_type ]
!411 = metadata !{i32 589845, metadata !408, metadata !"", metadata !408, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !412, i32 0, null} ; [ DW_TAG_subroutine_type ]
!412 = metadata !{metadata !413, metadata !414}
!413 = metadata !{i32 589860, metadata !408, metadata !"int", metadata !408, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!414 = metadata !{i32 589839, metadata !408, metadata !"", metadata !408, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !415} ; [ DW_TAG_pointer_type ]
!415 = metadata !{i32 589846, metadata !416, metadata !"FILE", metadata !416, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !417} ; [ DW_TAG_typedef ]
!416 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !409} ; [ DW_TAG_file_type ]
!417 = metadata !{i32 589843, metadata !408, metadata !"__STDIO_FILE_STRUCT", metadata !416, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !418, i32 0, null} ; [ DW_TAG_structure_type ]
!418 = metadata !{metadata !419, metadata !422, metadata !425, metadata !426, metadata !428, metadata !429, metadata !430, metadata !431, metadata !432, metadata !433, metadata !435, metadata !439}
!419 = metadata !{i32 589837, metadata !417, metadata !"__modeflags", metadata !420, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !421} ; [ DW_TAG_member ]
!420 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !409} ; [ DW_TAG_file_type ]
!421 = metadata !{i32 589860, metadata !408, metadata !"short unsigned int", metadata !408, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!422 = metadata !{i32 589837, metadata !417, metadata !"__ungot_width", metadata !420, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !423} ; [ DW_TAG_member ]
!423 = metadata !{i32 589825, metadata !408, metadata !"", metadata !408, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !424, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!424 = metadata !{i32 589860, metadata !408, metadata !"unsigned char", metadata !408, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!425 = metadata !{i32 589837, metadata !417, metadata !"__filedes", metadata !420, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !413} ; [ DW_TAG_member ]
!426 = metadata !{i32 589837, metadata !417, metadata !"__bufstart", metadata !420, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !427} ; [ DW_TAG_member ]
!427 = metadata !{i32 589839, metadata !408, metadata !"", metadata !408, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !424} ; [ DW_TAG_pointer_type ]
!428 = metadata !{i32 589837, metadata !417, metadata !"__bufend", metadata !420, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !427} ; [ DW_TAG_member ]
!429 = metadata !{i32 589837, metadata !417, metadata !"__bufpos", metadata !420, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !427} ; [ DW_TAG_member ]
!430 = metadata !{i32 589837, metadata !417, metadata !"__bufread", metadata !420, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !427} ; [ DW_TAG_member ]
!431 = metadata !{i32 589837, metadata !417, metadata !"__bufgetc_u", metadata !420, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !427} ; [ DW_TAG_member ]
!432 = metadata !{i32 589837, metadata !417, metadata !"__bufputc_u", metadata !420, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !427} ; [ DW_TAG_member ]
!433 = metadata !{i32 589837, metadata !417, metadata !"__nextopen", metadata !420, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !434} ; [ DW_TAG_member ]
!434 = metadata !{i32 589839, metadata !408, metadata !"", metadata !408, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !417} ; [ DW_TAG_pointer_type ]
!435 = metadata !{i32 589837, metadata !417, metadata !"__ungot", metadata !420, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !436} ; [ DW_TAG_member ]
!436 = metadata !{i32 589825, metadata !408, metadata !"", metadata !408, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !437, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!437 = metadata !{i32 589846, metadata !438, metadata !"wchar_t", metadata !438, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !413} ; [ DW_TAG_typedef ]
!438 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !409} ; [ DW_TAG_file_type ]
!439 = metadata !{i32 589837, metadata !417, metadata !"__state", metadata !420, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !440} ; [ DW_TAG_member ]
!440 = metadata !{i32 589846, metadata !441, metadata !"__mbstate_t", metadata !441, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !442} ; [ DW_TAG_typedef ]
!441 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !409} ; [ DW_TAG_file_type ]
!442 = metadata !{i32 589843, metadata !408, metadata !"", metadata !441, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !443, i32 0, null} ; [ DW_TAG_structure_type ]
!443 = metadata !{metadata !444, metadata !445}
!444 = metadata !{i32 589837, metadata !442, metadata !"__mask", metadata !441, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !437} ; [ DW_TAG_member ]
!445 = metadata !{i32 589837, metadata !442, metadata !"__wc", metadata !441, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !437} ; [ DW_TAG_member ]
!446 = metadata !{i32 589870, i32 0, metadata !447, metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !"fileno_unlocked", metadata !449, i32 15, metadata !450, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*)* @fileno_
!447 = metadata !{i32 589865, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !448} ; [ DW_TAG_file_type ]
!448 = metadata !{i32 589841, i32 0, i32 1, metadata !"fileno_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!449 = metadata !{i32 589865, metadata !"fileno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !448} ; [ DW_TAG_file_type ]
!450 = metadata !{i32 589845, metadata !447, metadata !"", metadata !447, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !451, i32 0, null} ; [ DW_TAG_subroutine_type ]
!451 = metadata !{metadata !452, metadata !453}
!452 = metadata !{i32 589860, metadata !447, metadata !"int", metadata !447, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!453 = metadata !{i32 589839, metadata !447, metadata !"", metadata !447, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !454} ; [ DW_TAG_pointer_type ]
!454 = metadata !{i32 589846, metadata !455, metadata !"FILE", metadata !455, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !456} ; [ DW_TAG_typedef ]
!455 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !448} ; [ DW_TAG_file_type ]
!456 = metadata !{i32 589843, metadata !447, metadata !"__STDIO_FILE_STRUCT", metadata !455, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !457, i32 0, null} ; [ DW_TAG_structure_type ]
!457 = metadata !{metadata !458, metadata !461, metadata !464, metadata !465, metadata !467, metadata !468, metadata !469, metadata !470, metadata !471, metadata !472, metadata !474, metadata !478}
!458 = metadata !{i32 589837, metadata !456, metadata !"__modeflags", metadata !459, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !460} ; [ DW_TAG_member ]
!459 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !448} ; [ DW_TAG_file_type ]
!460 = metadata !{i32 589860, metadata !447, metadata !"short unsigned int", metadata !447, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!461 = metadata !{i32 589837, metadata !456, metadata !"__ungot_width", metadata !459, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !462} ; [ DW_TAG_member ]
!462 = metadata !{i32 589825, metadata !447, metadata !"", metadata !447, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !463, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!463 = metadata !{i32 589860, metadata !447, metadata !"unsigned char", metadata !447, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!464 = metadata !{i32 589837, metadata !456, metadata !"__filedes", metadata !459, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !452} ; [ DW_TAG_member ]
!465 = metadata !{i32 589837, metadata !456, metadata !"__bufstart", metadata !459, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !466} ; [ DW_TAG_member ]
!466 = metadata !{i32 589839, metadata !447, metadata !"", metadata !447, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !463} ; [ DW_TAG_pointer_type ]
!467 = metadata !{i32 589837, metadata !456, metadata !"__bufend", metadata !459, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !466} ; [ DW_TAG_member ]
!468 = metadata !{i32 589837, metadata !456, metadata !"__bufpos", metadata !459, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !466} ; [ DW_TAG_member ]
!469 = metadata !{i32 589837, metadata !456, metadata !"__bufread", metadata !459, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !466} ; [ DW_TAG_member ]
!470 = metadata !{i32 589837, metadata !456, metadata !"__bufgetc_u", metadata !459, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !466} ; [ DW_TAG_member ]
!471 = metadata !{i32 589837, metadata !456, metadata !"__bufputc_u", metadata !459, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !466} ; [ DW_TAG_member ]
!472 = metadata !{i32 589837, metadata !456, metadata !"__nextopen", metadata !459, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !473} ; [ DW_TAG_member ]
!473 = metadata !{i32 589839, metadata !447, metadata !"", metadata !447, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !456} ; [ DW_TAG_pointer_type ]
!474 = metadata !{i32 589837, metadata !456, metadata !"__ungot", metadata !459, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !475} ; [ DW_TAG_member ]
!475 = metadata !{i32 589825, metadata !447, metadata !"", metadata !447, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !476, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!476 = metadata !{i32 589846, metadata !477, metadata !"wchar_t", metadata !477, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !452} ; [ DW_TAG_typedef ]
!477 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !448} ; [ DW_TAG_file_type ]
!478 = metadata !{i32 589837, metadata !456, metadata !"__state", metadata !459, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !479} ; [ DW_TAG_member ]
!479 = metadata !{i32 589846, metadata !480, metadata !"__mbstate_t", metadata !480, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !481} ; [ DW_TAG_typedef ]
!480 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !448} ; [ DW_TAG_file_type ]
!481 = metadata !{i32 589843, metadata !447, metadata !"", metadata !480, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !482, i32 0, null} ; [ DW_TAG_structure_type ]
!482 = metadata !{metadata !483, metadata !484}
!483 = metadata !{i32 589837, metadata !481, metadata !"__mask", metadata !480, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !476} ; [ DW_TAG_member ]
!484 = metadata !{i32 589837, metadata !481, metadata !"__wc", metadata !480, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !476} ; [ DW_TAG_member ]
!485 = metadata !{i32 589870, i32 0, metadata !486, metadata !"fprintf", metadata !"fprintf", metadata !"fprintf", metadata !486, i32 15, metadata !488, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, ...)* @fprintf} ; [ DW_TAG_s
!486 = metadata !{i32 589865, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !487} ; [ DW_TAG_file_type ]
!487 = metadata !{i32 589841, i32 0, i32 1, metadata !"fprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!488 = metadata !{i32 589845, metadata !486, metadata !"", metadata !486, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !489, i32 0, null} ; [ DW_TAG_subroutine_type ]
!489 = metadata !{metadata !490, metadata !491, metadata !523}
!490 = metadata !{i32 589860, metadata !486, metadata !"int", metadata !486, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!491 = metadata !{i32 589839, metadata !486, metadata !"", metadata !486, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !492} ; [ DW_TAG_pointer_type ]
!492 = metadata !{i32 589846, metadata !493, metadata !"FILE", metadata !493, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !494} ; [ DW_TAG_typedef ]
!493 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !487} ; [ DW_TAG_file_type ]
!494 = metadata !{i32 589843, metadata !486, metadata !"__STDIO_FILE_STRUCT", metadata !493, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !495, i32 0, null} ; [ DW_TAG_structure_type ]
!495 = metadata !{metadata !496, metadata !499, metadata !502, metadata !503, metadata !505, metadata !506, metadata !507, metadata !508, metadata !509, metadata !510, metadata !512, metadata !516}
!496 = metadata !{i32 589837, metadata !494, metadata !"__modeflags", metadata !497, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !498} ; [ DW_TAG_member ]
!497 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !487} ; [ DW_TAG_file_type ]
!498 = metadata !{i32 589860, metadata !486, metadata !"short unsigned int", metadata !486, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!499 = metadata !{i32 589837, metadata !494, metadata !"__ungot_width", metadata !497, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !500} ; [ DW_TAG_member ]
!500 = metadata !{i32 589825, metadata !486, metadata !"", metadata !486, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !501, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!501 = metadata !{i32 589860, metadata !486, metadata !"unsigned char", metadata !486, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!502 = metadata !{i32 589837, metadata !494, metadata !"__filedes", metadata !497, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !490} ; [ DW_TAG_member ]
!503 = metadata !{i32 589837, metadata !494, metadata !"__bufstart", metadata !497, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !504} ; [ DW_TAG_member ]
!504 = metadata !{i32 589839, metadata !486, metadata !"", metadata !486, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !501} ; [ DW_TAG_pointer_type ]
!505 = metadata !{i32 589837, metadata !494, metadata !"__bufend", metadata !497, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !504} ; [ DW_TAG_member ]
!506 = metadata !{i32 589837, metadata !494, metadata !"__bufpos", metadata !497, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !504} ; [ DW_TAG_member ]
!507 = metadata !{i32 589837, metadata !494, metadata !"__bufread", metadata !497, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !504} ; [ DW_TAG_member ]
!508 = metadata !{i32 589837, metadata !494, metadata !"__bufgetc_u", metadata !497, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !504} ; [ DW_TAG_member ]
!509 = metadata !{i32 589837, metadata !494, metadata !"__bufputc_u", metadata !497, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !504} ; [ DW_TAG_member ]
!510 = metadata !{i32 589837, metadata !494, metadata !"__nextopen", metadata !497, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !511} ; [ DW_TAG_member ]
!511 = metadata !{i32 589839, metadata !486, metadata !"", metadata !486, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !494} ; [ DW_TAG_pointer_type ]
!512 = metadata !{i32 589837, metadata !494, metadata !"__ungot", metadata !497, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !513} ; [ DW_TAG_member ]
!513 = metadata !{i32 589825, metadata !486, metadata !"", metadata !486, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !514, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!514 = metadata !{i32 589846, metadata !515, metadata !"wchar_t", metadata !515, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !490} ; [ DW_TAG_typedef ]
!515 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !487} ; [ DW_TAG_file_type ]
!516 = metadata !{i32 589837, metadata !494, metadata !"__state", metadata !497, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !517} ; [ DW_TAG_member ]
!517 = metadata !{i32 589846, metadata !518, metadata !"__mbstate_t", metadata !518, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !519} ; [ DW_TAG_typedef ]
!518 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !487} ; [ DW_TAG_file_type ]
!519 = metadata !{i32 589843, metadata !486, metadata !"", metadata !518, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !520, i32 0, null} ; [ DW_TAG_structure_type ]
!520 = metadata !{metadata !521, metadata !522}
!521 = metadata !{i32 589837, metadata !519, metadata !"__mask", metadata !518, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !514} ; [ DW_TAG_member ]
!522 = metadata !{i32 589837, metadata !519, metadata !"__wc", metadata !518, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !514} ; [ DW_TAG_member ]
!523 = metadata !{i32 589839, metadata !486, metadata !"", metadata !486, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !524} ; [ DW_TAG_pointer_type ]
!524 = metadata !{i32 589862, metadata !486, metadata !"", metadata !486, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !525} ; [ DW_TAG_const_type ]
!525 = metadata !{i32 589860, metadata !486, metadata !"char", metadata !486, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!526 = metadata !{i32 589870, i32 0, metadata !527, metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !"fputs_unlocked", metadata !529, i32 24, metadata !530, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, %4*)* @fputs
!527 = metadata !{i32 589865, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !528} ; [ DW_TAG_file_type ]
!528 = metadata !{i32 589841, i32 0, i32 1, metadata !"fputs_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!529 = metadata !{i32 589865, metadata !"fputs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !528} ; [ DW_TAG_file_type ]
!530 = metadata !{i32 589845, metadata !527, metadata !"", metadata !527, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !531, i32 0, null} ; [ DW_TAG_subroutine_type ]
!531 = metadata !{metadata !532, metadata !533, metadata !536}
!532 = metadata !{i32 589860, metadata !527, metadata !"int", metadata !527, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!533 = metadata !{i32 589839, metadata !527, metadata !"", metadata !527, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !534} ; [ DW_TAG_pointer_type ]
!534 = metadata !{i32 589862, metadata !527, metadata !"", metadata !527, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !535} ; [ DW_TAG_const_type ]
!535 = metadata !{i32 589860, metadata !527, metadata !"char", metadata !527, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!536 = metadata !{i32 589839, metadata !527, metadata !"", metadata !527, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !537} ; [ DW_TAG_pointer_type ]
!537 = metadata !{i32 589846, metadata !538, metadata !"FILE", metadata !538, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !539} ; [ DW_TAG_typedef ]
!538 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !528} ; [ DW_TAG_file_type ]
!539 = metadata !{i32 589843, metadata !527, metadata !"__STDIO_FILE_STRUCT", metadata !538, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !540, i32 0, null} ; [ DW_TAG_structure_type ]
!540 = metadata !{metadata !541, metadata !544, metadata !547, metadata !548, metadata !550, metadata !551, metadata !552, metadata !553, metadata !554, metadata !555, metadata !557, metadata !561}
!541 = metadata !{i32 589837, metadata !539, metadata !"__modeflags", metadata !542, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !543} ; [ DW_TAG_member ]
!542 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !528} ; [ DW_TAG_file_type ]
!543 = metadata !{i32 589860, metadata !527, metadata !"short unsigned int", metadata !527, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!544 = metadata !{i32 589837, metadata !539, metadata !"__ungot_width", metadata !542, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !545} ; [ DW_TAG_member ]
!545 = metadata !{i32 589825, metadata !527, metadata !"", metadata !527, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !546, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!546 = metadata !{i32 589860, metadata !527, metadata !"unsigned char", metadata !527, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!547 = metadata !{i32 589837, metadata !539, metadata !"__filedes", metadata !542, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !532} ; [ DW_TAG_member ]
!548 = metadata !{i32 589837, metadata !539, metadata !"__bufstart", metadata !542, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !549} ; [ DW_TAG_member ]
!549 = metadata !{i32 589839, metadata !527, metadata !"", metadata !527, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !546} ; [ DW_TAG_pointer_type ]
!550 = metadata !{i32 589837, metadata !539, metadata !"__bufend", metadata !542, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !549} ; [ DW_TAG_member ]
!551 = metadata !{i32 589837, metadata !539, metadata !"__bufpos", metadata !542, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !549} ; [ DW_TAG_member ]
!552 = metadata !{i32 589837, metadata !539, metadata !"__bufread", metadata !542, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !549} ; [ DW_TAG_member ]
!553 = metadata !{i32 589837, metadata !539, metadata !"__bufgetc_u", metadata !542, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !549} ; [ DW_TAG_member ]
!554 = metadata !{i32 589837, metadata !539, metadata !"__bufputc_u", metadata !542, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !549} ; [ DW_TAG_member ]
!555 = metadata !{i32 589837, metadata !539, metadata !"__nextopen", metadata !542, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !556} ; [ DW_TAG_member ]
!556 = metadata !{i32 589839, metadata !527, metadata !"", metadata !527, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !539} ; [ DW_TAG_pointer_type ]
!557 = metadata !{i32 589837, metadata !539, metadata !"__ungot", metadata !542, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !558} ; [ DW_TAG_member ]
!558 = metadata !{i32 589825, metadata !527, metadata !"", metadata !527, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !559, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!559 = metadata !{i32 589846, metadata !560, metadata !"wchar_t", metadata !560, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !532} ; [ DW_TAG_typedef ]
!560 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !528} ; [ DW_TAG_file_type ]
!561 = metadata !{i32 589837, metadata !539, metadata !"__state", metadata !542, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !562} ; [ DW_TAG_member ]
!562 = metadata !{i32 589846, metadata !563, metadata !"__mbstate_t", metadata !563, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !564} ; [ DW_TAG_typedef ]
!563 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !528} ; [ DW_TAG_file_type ]
!564 = metadata !{i32 589843, metadata !527, metadata !"", metadata !563, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !565, i32 0, null} ; [ DW_TAG_structure_type ]
!565 = metadata !{metadata !566, metadata !567}
!566 = metadata !{i32 589837, metadata !564, metadata !"__mask", metadata !563, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !559} ; [ DW_TAG_member ]
!567 = metadata !{i32 589837, metadata !564, metadata !"__wc", metadata !563, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !559} ; [ DW_TAG_member ]
!568 = metadata !{i32 589870, i32 0, metadata !569, metadata !"fscanf", metadata !"fscanf", metadata !"fscanf", metadata !571, i32 173, metadata !572, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, ...)* @fscanf} ; [ DW_TAG_subp
!569 = metadata !{i32 589865, metadata !"fscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !570} ; [ DW_TAG_file_type ]
!570 = metadata !{i32 589841, i32 0, i32 1, metadata !"fscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!571 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !570} ; [ DW_TAG_file_type ]
!572 = metadata !{i32 589845, metadata !569, metadata !"", metadata !569, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !573, i32 0, null} ; [ DW_TAG_subroutine_type ]
!573 = metadata !{metadata !574, metadata !575, metadata !607}
!574 = metadata !{i32 589860, metadata !569, metadata !"int", metadata !569, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!575 = metadata !{i32 589839, metadata !569, metadata !"", metadata !569, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !576} ; [ DW_TAG_pointer_type ]
!576 = metadata !{i32 589846, metadata !577, metadata !"FILE", metadata !577, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !578} ; [ DW_TAG_typedef ]
!577 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !570} ; [ DW_TAG_file_type ]
!578 = metadata !{i32 589843, metadata !569, metadata !"__STDIO_FILE_STRUCT", metadata !577, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !579, i32 0, null} ; [ DW_TAG_structure_type ]
!579 = metadata !{metadata !580, metadata !583, metadata !586, metadata !587, metadata !589, metadata !590, metadata !591, metadata !592, metadata !593, metadata !594, metadata !596, metadata !600}
!580 = metadata !{i32 589837, metadata !578, metadata !"__modeflags", metadata !581, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !582} ; [ DW_TAG_member ]
!581 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !570} ; [ DW_TAG_file_type ]
!582 = metadata !{i32 589860, metadata !569, metadata !"short unsigned int", metadata !569, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!583 = metadata !{i32 589837, metadata !578, metadata !"__ungot_width", metadata !581, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !584} ; [ DW_TAG_member ]
!584 = metadata !{i32 589825, metadata !569, metadata !"", metadata !569, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !585, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!585 = metadata !{i32 589860, metadata !569, metadata !"unsigned char", metadata !569, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!586 = metadata !{i32 589837, metadata !578, metadata !"__filedes", metadata !581, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !574} ; [ DW_TAG_member ]
!587 = metadata !{i32 589837, metadata !578, metadata !"__bufstart", metadata !581, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !588} ; [ DW_TAG_member ]
!588 = metadata !{i32 589839, metadata !569, metadata !"", metadata !569, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !585} ; [ DW_TAG_pointer_type ]
!589 = metadata !{i32 589837, metadata !578, metadata !"__bufend", metadata !581, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !588} ; [ DW_TAG_member ]
!590 = metadata !{i32 589837, metadata !578, metadata !"__bufpos", metadata !581, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !588} ; [ DW_TAG_member ]
!591 = metadata !{i32 589837, metadata !578, metadata !"__bufread", metadata !581, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !588} ; [ DW_TAG_member ]
!592 = metadata !{i32 589837, metadata !578, metadata !"__bufgetc_u", metadata !581, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !588} ; [ DW_TAG_member ]
!593 = metadata !{i32 589837, metadata !578, metadata !"__bufputc_u", metadata !581, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !588} ; [ DW_TAG_member ]
!594 = metadata !{i32 589837, metadata !578, metadata !"__nextopen", metadata !581, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !595} ; [ DW_TAG_member ]
!595 = metadata !{i32 589839, metadata !569, metadata !"", metadata !569, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !578} ; [ DW_TAG_pointer_type ]
!596 = metadata !{i32 589837, metadata !578, metadata !"__ungot", metadata !581, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !597} ; [ DW_TAG_member ]
!597 = metadata !{i32 589825, metadata !569, metadata !"", metadata !569, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !598, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!598 = metadata !{i32 589846, metadata !599, metadata !"wchar_t", metadata !599, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !574} ; [ DW_TAG_typedef ]
!599 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !570} ; [ DW_TAG_file_type ]
!600 = metadata !{i32 589837, metadata !578, metadata !"__state", metadata !581, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !601} ; [ DW_TAG_member ]
!601 = metadata !{i32 589846, metadata !602, metadata !"__mbstate_t", metadata !602, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !603} ; [ DW_TAG_typedef ]
!602 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !570} ; [ DW_TAG_file_type ]
!603 = metadata !{i32 589843, metadata !569, metadata !"", metadata !602, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !604, i32 0, null} ; [ DW_TAG_structure_type ]
!604 = metadata !{metadata !605, metadata !606}
!605 = metadata !{i32 589837, metadata !603, metadata !"__mask", metadata !602, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !598} ; [ DW_TAG_member ]
!606 = metadata !{i32 589837, metadata !603, metadata !"__wc", metadata !602, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !598} ; [ DW_TAG_member ]
!607 = metadata !{i32 589839, metadata !569, metadata !"", metadata !569, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !608} ; [ DW_TAG_pointer_type ]
!608 = metadata !{i32 589862, metadata !569, metadata !"", metadata !569, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !609} ; [ DW_TAG_const_type ]
!609 = metadata !{i32 589860, metadata !569, metadata !"char", metadata !569, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!610 = metadata !{i32 589870, i32 0, metadata !611, metadata !"fseek", metadata !"fseek", metadata !"fseek", metadata !611, i32 25, metadata !613, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseek} ; [ DW_TAG_subprogra
!611 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !612} ; [ DW_TAG_file_type ]
!612 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!613 = metadata !{i32 589845, metadata !611, metadata !"", metadata !611, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !614, i32 0, null} ; [ DW_TAG_subroutine_type ]
!614 = metadata !{metadata !615, metadata !616, metadata !648, metadata !615}
!615 = metadata !{i32 589860, metadata !611, metadata !"int", metadata !611, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!616 = metadata !{i32 589839, metadata !611, metadata !"", metadata !611, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !617} ; [ DW_TAG_pointer_type ]
!617 = metadata !{i32 589846, metadata !618, metadata !"FILE", metadata !618, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !619} ; [ DW_TAG_typedef ]
!618 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !612} ; [ DW_TAG_file_type ]
!619 = metadata !{i32 589843, metadata !611, metadata !"__STDIO_FILE_STRUCT", metadata !618, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !620, i32 0, null} ; [ DW_TAG_structure_type ]
!620 = metadata !{metadata !621, metadata !624, metadata !627, metadata !628, metadata !630, metadata !631, metadata !632, metadata !633, metadata !634, metadata !635, metadata !637, metadata !641}
!621 = metadata !{i32 589837, metadata !619, metadata !"__modeflags", metadata !622, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !623} ; [ DW_TAG_member ]
!622 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !612} ; [ DW_TAG_file_type ]
!623 = metadata !{i32 589860, metadata !611, metadata !"short unsigned int", metadata !611, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!624 = metadata !{i32 589837, metadata !619, metadata !"__ungot_width", metadata !622, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !625} ; [ DW_TAG_member ]
!625 = metadata !{i32 589825, metadata !611, metadata !"", metadata !611, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !626, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!626 = metadata !{i32 589860, metadata !611, metadata !"unsigned char", metadata !611, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!627 = metadata !{i32 589837, metadata !619, metadata !"__filedes", metadata !622, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !615} ; [ DW_TAG_member ]
!628 = metadata !{i32 589837, metadata !619, metadata !"__bufstart", metadata !622, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !629} ; [ DW_TAG_member ]
!629 = metadata !{i32 589839, metadata !611, metadata !"", metadata !611, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !626} ; [ DW_TAG_pointer_type ]
!630 = metadata !{i32 589837, metadata !619, metadata !"__bufend", metadata !622, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !629} ; [ DW_TAG_member ]
!631 = metadata !{i32 589837, metadata !619, metadata !"__bufpos", metadata !622, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !629} ; [ DW_TAG_member ]
!632 = metadata !{i32 589837, metadata !619, metadata !"__bufread", metadata !622, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !629} ; [ DW_TAG_member ]
!633 = metadata !{i32 589837, metadata !619, metadata !"__bufgetc_u", metadata !622, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !629} ; [ DW_TAG_member ]
!634 = metadata !{i32 589837, metadata !619, metadata !"__bufputc_u", metadata !622, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !629} ; [ DW_TAG_member ]
!635 = metadata !{i32 589837, metadata !619, metadata !"__nextopen", metadata !622, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !636} ; [ DW_TAG_member ]
!636 = metadata !{i32 589839, metadata !611, metadata !"", metadata !611, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !619} ; [ DW_TAG_pointer_type ]
!637 = metadata !{i32 589837, metadata !619, metadata !"__ungot", metadata !622, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !638} ; [ DW_TAG_member ]
!638 = metadata !{i32 589825, metadata !611, metadata !"", metadata !611, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !639, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!639 = metadata !{i32 589846, metadata !640, metadata !"wchar_t", metadata !640, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !615} ; [ DW_TAG_typedef ]
!640 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !612} ; [ DW_TAG_file_type ]
!641 = metadata !{i32 589837, metadata !619, metadata !"__state", metadata !622, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !642} ; [ DW_TAG_member ]
!642 = metadata !{i32 589846, metadata !643, metadata !"__mbstate_t", metadata !643, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !644} ; [ DW_TAG_typedef ]
!643 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !612} ; [ DW_TAG_file_type ]
!644 = metadata !{i32 589843, metadata !611, metadata !"", metadata !643, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !645, i32 0, null} ; [ DW_TAG_structure_type ]
!645 = metadata !{metadata !646, metadata !647}
!646 = metadata !{i32 589837, metadata !644, metadata !"__mask", metadata !643, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !639} ; [ DW_TAG_member ]
!647 = metadata !{i32 589837, metadata !644, metadata !"__wc", metadata !643, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !639} ; [ DW_TAG_member ]
!648 = metadata !{i32 589860, metadata !611, metadata !"long int", metadata !611, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!649 = metadata !{i32 589870, i32 0, metadata !650, metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !"fwrite_unlocked", metadata !652, i32 16, metadata !653, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, i64,
!650 = metadata !{i32 589865, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !651} ; [ DW_TAG_file_type ]
!651 = metadata !{i32 589841, i32 0, i32 1, metadata !"fwrite_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!652 = metadata !{i32 589865, metadata !"fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !651} ; [ DW_TAG_file_type ]
!653 = metadata !{i32 589845, metadata !650, metadata !"", metadata !650, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !654, i32 0, null} ; [ DW_TAG_subroutine_type ]
!654 = metadata !{metadata !655, metadata !658, metadata !655, metadata !655, metadata !659}
!655 = metadata !{i32 589846, metadata !656, metadata !"size_t", metadata !656, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !657} ; [ DW_TAG_typedef ]
!656 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !651} ; [ DW_TAG_file_type ]
!657 = metadata !{i32 589860, metadata !650, metadata !"long unsigned int", metadata !650, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!658 = metadata !{i32 589839, metadata !650, metadata !"", metadata !650, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!659 = metadata !{i32 589839, metadata !650, metadata !"", metadata !650, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !660} ; [ DW_TAG_pointer_type ]
!660 = metadata !{i32 589846, metadata !661, metadata !"FILE", metadata !661, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !662} ; [ DW_TAG_typedef ]
!661 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !651} ; [ DW_TAG_file_type ]
!662 = metadata !{i32 589843, metadata !650, metadata !"__STDIO_FILE_STRUCT", metadata !661, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !663, i32 0, null} ; [ DW_TAG_structure_type ]
!663 = metadata !{metadata !664, metadata !667, metadata !670, metadata !672, metadata !674, metadata !675, metadata !676, metadata !677, metadata !678, metadata !679, metadata !681, metadata !684}
!664 = metadata !{i32 589837, metadata !662, metadata !"__modeflags", metadata !665, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !666} ; [ DW_TAG_member ]
!665 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !651} ; [ DW_TAG_file_type ]
!666 = metadata !{i32 589860, metadata !650, metadata !"short unsigned int", metadata !650, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!667 = metadata !{i32 589837, metadata !662, metadata !"__ungot_width", metadata !665, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !668} ; [ DW_TAG_member ]
!668 = metadata !{i32 589825, metadata !650, metadata !"", metadata !650, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !669, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!669 = metadata !{i32 589860, metadata !650, metadata !"unsigned char", metadata !650, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!670 = metadata !{i32 589837, metadata !662, metadata !"__filedes", metadata !665, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !671} ; [ DW_TAG_member ]
!671 = metadata !{i32 589860, metadata !650, metadata !"int", metadata !650, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!672 = metadata !{i32 589837, metadata !662, metadata !"__bufstart", metadata !665, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !673} ; [ DW_TAG_member ]
!673 = metadata !{i32 589839, metadata !650, metadata !"", metadata !650, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !669} ; [ DW_TAG_pointer_type ]
!674 = metadata !{i32 589837, metadata !662, metadata !"__bufend", metadata !665, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !673} ; [ DW_TAG_member ]
!675 = metadata !{i32 589837, metadata !662, metadata !"__bufpos", metadata !665, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !673} ; [ DW_TAG_member ]
!676 = metadata !{i32 589837, metadata !662, metadata !"__bufread", metadata !665, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !673} ; [ DW_TAG_member ]
!677 = metadata !{i32 589837, metadata !662, metadata !"__bufgetc_u", metadata !665, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !673} ; [ DW_TAG_member ]
!678 = metadata !{i32 589837, metadata !662, metadata !"__bufputc_u", metadata !665, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !673} ; [ DW_TAG_member ]
!679 = metadata !{i32 589837, metadata !662, metadata !"__nextopen", metadata !665, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !680} ; [ DW_TAG_member ]
!680 = metadata !{i32 589839, metadata !650, metadata !"", metadata !650, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !662} ; [ DW_TAG_pointer_type ]
!681 = metadata !{i32 589837, metadata !662, metadata !"__ungot", metadata !665, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !682} ; [ DW_TAG_member ]
!682 = metadata !{i32 589825, metadata !650, metadata !"", metadata !650, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !683, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!683 = metadata !{i32 589846, metadata !656, metadata !"wchar_t", metadata !656, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !671} ; [ DW_TAG_typedef ]
!684 = metadata !{i32 589837, metadata !662, metadata !"__state", metadata !665, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !685} ; [ DW_TAG_member ]
!685 = metadata !{i32 589846, metadata !686, metadata !"__mbstate_t", metadata !686, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !687} ; [ DW_TAG_typedef ]
!686 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !651} ; [ DW_TAG_file_type ]
!687 = metadata !{i32 589843, metadata !650, metadata !"", metadata !686, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !688, i32 0, null} ; [ DW_TAG_structure_type ]
!688 = metadata !{metadata !689, metadata !690}
!689 = metadata !{i32 589837, metadata !687, metadata !"__mask", metadata !686, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !683} ; [ DW_TAG_member ]
!690 = metadata !{i32 589837, metadata !687, metadata !"__wc", metadata !686, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !683} ; [ DW_TAG_member ]
!691 = metadata !{i32 589870, i32 0, metadata !692, metadata !"strspn", metadata !"strspn", metadata !"strspn", metadata !692, i32 19, metadata !694, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8*)* @strspn} ; [ DW_TAG_subprogram
!692 = metadata !{i32 589865, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !693} ; [ DW_TAG_file_type ]
!693 = metadata !{i32 589841, i32 0, i32 1, metadata !"strspn.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!694 = metadata !{i32 589845, metadata !692, metadata !"", metadata !692, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !695, i32 0, null} ; [ DW_TAG_subroutine_type ]
!695 = metadata !{metadata !696, metadata !699, metadata !699}
!696 = metadata !{i32 589846, metadata !697, metadata !"size_t", metadata !697, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !698} ; [ DW_TAG_typedef ]
!697 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !693} ; [ DW_TAG_file_type ]
!698 = metadata !{i32 589860, metadata !692, metadata !"long unsigned int", metadata !692, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!699 = metadata !{i32 589839, metadata !692, metadata !"", metadata !692, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !700} ; [ DW_TAG_pointer_type ]
!700 = metadata !{i32 589862, metadata !692, metadata !"", metadata !692, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !701} ; [ DW_TAG_const_type ]
!701 = metadata !{i32 589860, metadata !692, metadata !"char", metadata !692, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!702 = metadata !{i32 589870, i32 0, metadata !703, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !703, i32 18, metadata !705, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram ]
!703 = metadata !{i32 589865, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !704} ; [ DW_TAG_file_type ]
!704 = metadata !{i32 589841, i32 0, i32 1, metadata !"getenv.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!705 = metadata !{i32 589845, metadata !703, metadata !"", metadata !703, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !706, i32 0, null} ; [ DW_TAG_subroutine_type ]
!706 = metadata !{metadata !707, metadata !709}
!707 = metadata !{i32 589839, metadata !703, metadata !"", metadata !703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !708} ; [ DW_TAG_pointer_type ]
!708 = metadata !{i32 589860, metadata !703, metadata !"char", metadata !703, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!709 = metadata !{i32 589839, metadata !703, metadata !"", metadata !703, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !710} ; [ DW_TAG_pointer_type ]
!710 = metadata !{i32 589862, metadata !703, metadata !"", metadata !703, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !708} ; [ DW_TAG_const_type ]
!711 = metadata !{i32 589870, i32 0, metadata !712, metadata !"getline", metadata !"getline", metadata !"getline", metadata !712, i32 19, metadata !714, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8**, i64*, %4*)* @getline} ; [ DW_TAG
!712 = metadata !{i32 589865, metadata !"getline.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !713} ; [ DW_TAG_file_type ]
!713 = metadata !{i32 589841, i32 0, i32 1, metadata !"getline.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!714 = metadata !{i32 589845, metadata !712, metadata !"", metadata !712, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !715, i32 0, null} ; [ DW_TAG_subroutine_type ]
!715 = metadata !{metadata !716, metadata !719, metadata !722, metadata !726}
!716 = metadata !{i32 589846, metadata !717, metadata !"__ssize_t", metadata !717, i32 184, i64 0, i64 0, i64 0, i32 0, metadata !718} ; [ DW_TAG_typedef ]
!717 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !713} ; [ DW_TAG_file_type ]
!718 = metadata !{i32 589860, metadata !712, metadata !"long int", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!719 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !720} ; [ DW_TAG_pointer_type ]
!720 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !721} ; [ DW_TAG_pointer_type ]
!721 = metadata !{i32 589860, metadata !712, metadata !"char", metadata !712, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!722 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !723} ; [ DW_TAG_pointer_type ]
!723 = metadata !{i32 589846, metadata !724, metadata !"size_t", metadata !724, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !725} ; [ DW_TAG_typedef ]
!724 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !713} ; [ DW_TAG_file_type ]
!725 = metadata !{i32 589860, metadata !712, metadata !"long unsigned int", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!726 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !727} ; [ DW_TAG_pointer_type ]
!727 = metadata !{i32 589846, metadata !728, metadata !"FILE", metadata !728, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !729} ; [ DW_TAG_typedef ]
!728 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !713} ; [ DW_TAG_file_type ]
!729 = metadata !{i32 589843, metadata !712, metadata !"__STDIO_FILE_STRUCT", metadata !728, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !730, i32 0, null} ; [ DW_TAG_structure_type ]
!730 = metadata !{metadata !731, metadata !734, metadata !737, metadata !739, metadata !741, metadata !742, metadata !743, metadata !744, metadata !745, metadata !746, metadata !748, metadata !751}
!731 = metadata !{i32 589837, metadata !729, metadata !"__modeflags", metadata !732, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !733} ; [ DW_TAG_member ]
!732 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !713} ; [ DW_TAG_file_type ]
!733 = metadata !{i32 589860, metadata !712, metadata !"short unsigned int", metadata !712, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!734 = metadata !{i32 589837, metadata !729, metadata !"__ungot_width", metadata !732, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !735} ; [ DW_TAG_member ]
!735 = metadata !{i32 589825, metadata !712, metadata !"", metadata !712, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !736, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!736 = metadata !{i32 589860, metadata !712, metadata !"unsigned char", metadata !712, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!737 = metadata !{i32 589837, metadata !729, metadata !"__filedes", metadata !732, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !738} ; [ DW_TAG_member ]
!738 = metadata !{i32 589860, metadata !712, metadata !"int", metadata !712, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!739 = metadata !{i32 589837, metadata !729, metadata !"__bufstart", metadata !732, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !740} ; [ DW_TAG_member ]
!740 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !736} ; [ DW_TAG_pointer_type ]
!741 = metadata !{i32 589837, metadata !729, metadata !"__bufend", metadata !732, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !740} ; [ DW_TAG_member ]
!742 = metadata !{i32 589837, metadata !729, metadata !"__bufpos", metadata !732, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !740} ; [ DW_TAG_member ]
!743 = metadata !{i32 589837, metadata !729, metadata !"__bufread", metadata !732, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !740} ; [ DW_TAG_member ]
!744 = metadata !{i32 589837, metadata !729, metadata !"__bufgetc_u", metadata !732, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !740} ; [ DW_TAG_member ]
!745 = metadata !{i32 589837, metadata !729, metadata !"__bufputc_u", metadata !732, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !740} ; [ DW_TAG_member ]
!746 = metadata !{i32 589837, metadata !729, metadata !"__nextopen", metadata !732, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !747} ; [ DW_TAG_member ]
!747 = metadata !{i32 589839, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !729} ; [ DW_TAG_pointer_type ]
!748 = metadata !{i32 589837, metadata !729, metadata !"__ungot", metadata !732, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !749} ; [ DW_TAG_member ]
!749 = metadata !{i32 589825, metadata !712, metadata !"", metadata !712, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !750, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!750 = metadata !{i32 589846, metadata !724, metadata !"wchar_t", metadata !724, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !738} ; [ DW_TAG_typedef ]
!751 = metadata !{i32 589837, metadata !729, metadata !"__state", metadata !732, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !752} ; [ DW_TAG_member ]
!752 = metadata !{i32 589846, metadata !753, metadata !"__mbstate_t", metadata !753, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !754} ; [ DW_TAG_typedef ]
!753 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !713} ; [ DW_TAG_file_type ]
!754 = metadata !{i32 589843, metadata !712, metadata !"", metadata !753, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !755, i32 0, null} ; [ DW_TAG_structure_type ]
!755 = metadata !{metadata !756, metadata !757}
!756 = metadata !{i32 589837, metadata !754, metadata !"__mask", metadata !753, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !750} ; [ DW_TAG_member ]
!757 = metadata !{i32 589837, metadata !754, metadata !"__wc", metadata !753, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !750} ; [ DW_TAG_member ]
!758 = metadata !{i32 589870, i32 0, metadata !759, metadata !"exchange", metadata !"exchange", metadata !"", metadata !759, i32 220, metadata !761, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8**, %struct._getopt_data*)* @exchange} ;
!759 = metadata !{i32 589865, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !760} ; [ DW_TAG_file_type ]
!760 = metadata !{i32 589841, i32 0, i32 1, metadata !"getopt.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!761 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !762, i32 0, null} ; [ DW_TAG_subroutine_type ]
!762 = metadata !{null, metadata !763, metadata !766}
!763 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !764} ; [ DW_TAG_pointer_type ]
!764 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !765} ; [ DW_TAG_pointer_type ]
!765 = metadata !{i32 589860, metadata !759, metadata !"char", metadata !759, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!766 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !767} ; [ DW_TAG_pointer_type ]
!767 = metadata !{i32 589843, metadata !759, metadata !"_getopt_data", metadata !768, i32 35, i64 448, i64 64, i64 0, i32 0, null, metadata !769, i32 0, null} ; [ DW_TAG_structure_type ]
!768 = metadata !{i32 589865, metadata !"getopt_int.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !760} ; [ DW_TAG_file_type ]
!769 = metadata !{metadata !770, metadata !772, metadata !773, metadata !774, metadata !775, metadata !776, metadata !777, metadata !783, metadata !784, metadata !785}
!770 = metadata !{i32 589837, metadata !767, metadata !"optind", metadata !768, i32 39, i64 32, i64 32, i64 0, i32 0, metadata !771} ; [ DW_TAG_member ]
!771 = metadata !{i32 589860, metadata !759, metadata !"int", metadata !759, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!772 = metadata !{i32 589837, metadata !767, metadata !"opterr", metadata !768, i32 40, i64 32, i64 32, i64 32, i32 0, metadata !771} ; [ DW_TAG_member ]
!773 = metadata !{i32 589837, metadata !767, metadata !"optopt", metadata !768, i32 41, i64 32, i64 32, i64 64, i32 0, metadata !771} ; [ DW_TAG_member ]
!774 = metadata !{i32 589837, metadata !767, metadata !"optarg", metadata !768, i32 42, i64 64, i64 64, i64 128, i32 0, metadata !764} ; [ DW_TAG_member ]
!775 = metadata !{i32 589837, metadata !767, metadata !"__initialized", metadata !768, i32 47, i64 32, i64 32, i64 192, i32 0, metadata !771} ; [ DW_TAG_member ]
!776 = metadata !{i32 589837, metadata !767, metadata !"__nextchar", metadata !768, i32 55, i64 64, i64 64, i64 256, i32 0, metadata !764} ; [ DW_TAG_member ]
!777 = metadata !{i32 589837, metadata !767, metadata !"__ordering", metadata !768, i32 89, i64 32, i64 32, i64 320, i32 0, metadata !778} ; [ DW_TAG_member ]
!778 = metadata !{i32 589828, metadata !759, metadata !"", metadata !768, i32 87, i64 32, i64 32, i64 0, i32 0, null, metadata !779, i32 0, null} ; [ DW_TAG_enumeration_type ]
!779 = metadata !{metadata !780, metadata !781, metadata !782}
!780 = metadata !{i32 589864, metadata !"REQUIRE_ORDER", i64 0} ; [ DW_TAG_enumerator ]
!781 = metadata !{i32 589864, metadata !"PERMUTE", i64 1} ; [ DW_TAG_enumerator ]
!782 = metadata !{i32 589864, metadata !"RETURN_IN_ORDER", i64 2} ; [ DW_TAG_enumerator ]
!783 = metadata !{i32 589837, metadata !767, metadata !"__posixly_correct", metadata !768, i32 92, i64 32, i64 32, i64 352, i32 0, metadata !771} ; [ DW_TAG_member ]
!784 = metadata !{i32 589837, metadata !767, metadata !"__first_nonopt", metadata !768, i32 101, i64 32, i64 32, i64 384, i32 0, metadata !771} ; [ DW_TAG_member ]
!785 = metadata !{i32 589837, metadata !767, metadata !"__last_nonopt", metadata !768, i32 102, i64 32, i64 32, i64 416, i32 0, metadata !771} ; [ DW_TAG_member ]
!786 = metadata !{i32 589870, i32 0, metadata !759, metadata !"_getopt_initialize", metadata !"_getopt_initialize", metadata !"", metadata !759, i32 302, metadata !787, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8**, i8*, %struct
!787 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !788, i32 0, null} ; [ DW_TAG_subroutine_type ]
!788 = metadata !{metadata !789, metadata !771, metadata !791, metadata !789, metadata !766}
!789 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !790} ; [ DW_TAG_pointer_type ]
!790 = metadata !{i32 589862, metadata !759, metadata !"", metadata !759, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !765} ; [ DW_TAG_const_type ]
!791 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !792} ; [ DW_TAG_pointer_type ]
!792 = metadata !{i32 589862, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !764} ; [ DW_TAG_const_type ]
!793 = metadata !{i32 589870, i32 0, metadata !759, metadata !"_getopt_internal_r", metadata !"_getopt_internal_r", metadata !"", metadata !759, i32 423, metadata !794, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct
!794 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !795, i32 0, null} ; [ DW_TAG_subroutine_type ]
!795 = metadata !{metadata !771, metadata !771, metadata !791, metadata !789, metadata !796, metadata !804, metadata !771, metadata !766}
!796 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !797} ; [ DW_TAG_pointer_type ]
!797 = metadata !{i32 589862, metadata !759, metadata !"", metadata !759, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !798} ; [ DW_TAG_const_type ]
!798 = metadata !{i32 589843, metadata !759, metadata !"option", metadata !799, i32 109, i64 256, i64 64, i64 0, i32 0, null, metadata !800, i32 0, null} ; [ DW_TAG_structure_type ]
!799 = metadata !{i32 589865, metadata !"getopt.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !760} ; [ DW_TAG_file_type ]
!800 = metadata !{metadata !801, metadata !802, metadata !803, metadata !805}
!801 = metadata !{i32 589837, metadata !798, metadata !"name", metadata !799, i32 110, i64 64, i64 64, i64 0, i32 0, metadata !789} ; [ DW_TAG_member ]
!802 = metadata !{i32 589837, metadata !798, metadata !"has_arg", metadata !799, i32 113, i64 32, i64 32, i64 64, i32 0, metadata !771} ; [ DW_TAG_member ]
!803 = metadata !{i32 589837, metadata !798, metadata !"flag", metadata !799, i32 114, i64 64, i64 64, i64 128, i32 0, metadata !804} ; [ DW_TAG_member ]
!804 = metadata !{i32 589839, metadata !759, metadata !"", metadata !759, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !771} ; [ DW_TAG_pointer_type ]
!805 = metadata !{i32 589837, metadata !798, metadata !"val", metadata !799, i32 115, i64 32, i64 32, i64 192, i32 0, metadata !771} ; [ DW_TAG_member ]
!806 = metadata !{i32 589870, i32 0, metadata !759, metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !"_getopt_internal", metadata !759, i32 1159, metadata !807, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!807 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !808, i32 0, null} ; [ DW_TAG_subroutine_type ]
!808 = metadata !{metadata !771, metadata !771, metadata !791, metadata !789, metadata !796, metadata !804, metadata !771}
!809 = metadata !{i32 589870, i32 0, metadata !759, metadata !"getopt", metadata !"getopt", metadata !"getopt", metadata !759, i32 1177, metadata !810, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*)* @getopt} ; [ DW_TAG_su
!810 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !811, i32 0, null} ; [ DW_TAG_subroutine_type ]
!811 = metadata !{metadata !771, metadata !771, metadata !791, metadata !789}
!812 = metadata !{i32 589870, i32 0, metadata !759, metadata !"getopt_long", metadata !"getopt_long", metadata !"getopt_long", metadata !759, i32 1187, metadata !813, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**, i8*, %struct.
!813 = metadata !{i32 589845, metadata !759, metadata !"", metadata !759, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !814, i32 0, null} ; [ DW_TAG_subroutine_type ]
!814 = metadata !{metadata !771, metadata !771, metadata !791, metadata !789, metadata !796, metadata !804}
!815 = metadata !{i32 589870, i32 0, metadata !759, metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !"getopt_long_only", metadata !759, i32 1199, metadata !813, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i8**
!816 = metadata !{i32 589870, i32 0, metadata !817, metadata !"__setutent", metadata !"__setutent", metadata !"", metadata !817, i32 46, metadata !819, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @__setutent} ; [ DW_TAG_subprogram ]
!817 = metadata !{i32 589865, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !818} ; [ DW_TAG_file_type ]
!818 = metadata !{i32 589841, i32 0, i32 1, metadata !"utent.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/utmp", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!819 = metadata !{i32 589845, metadata !817, metadata !"", metadata !817, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!820 = metadata !{i32 589870, i32 0, metadata !817, metadata !"setutent", metadata !"setutent", metadata !"setutent", metadata !817, i32 73, metadata !819, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @setutent} ; [ DW_TAG_subprogra
!821 = metadata !{i32 589870, i32 0, metadata !817, metadata !"__getutent", metadata !"__getutent", metadata !"", metadata !817, i32 82, metadata !822, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (i32)* @__getutent} ; [ DW_TAG_
!822 = metadata !{i32 589845, metadata !817, metadata !"", metadata !817, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !823, i32 0, null} ; [ DW_TAG_subroutine_type ]
!823 = metadata !{metadata !824, metadata !833}
!824 = metadata !{i32 589839, metadata !817, metadata !"", metadata !817, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !825} ; [ DW_TAG_pointer_type ]
!825 = metadata !{i32 589843, metadata !817, metadata !"utmp", metadata !826, i32 61, i64 3200, i64 64, i64 0, i32 0, null, metadata !827, i32 0, null} ; [ DW_TAG_structure_type ]
!826 = metadata !{i32 589865, metadata !"utmp.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !818} ; [ DW_TAG_file_type ]
!827 = metadata !{metadata !828, metadata !830, metadata !834, metadata !839, metadata !843, metadata !844, metadata !848, metadata !853, metadata !855, metadata !864, metadata !867}
!828 = metadata !{i32 589837, metadata !825, metadata !"ut_type", metadata !826, i32 62, i64 16, i64 16, i64 0, i32 0, metadata !829} ; [ DW_TAG_member ]
!829 = metadata !{i32 589860, metadata !817, metadata !"short int", metadata !817, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!830 = metadata !{i32 589837, metadata !825, metadata !"ut_pid", metadata !826, i32 63, i64 32, i64 32, i64 32, i32 0, metadata !831} ; [ DW_TAG_member ]
!831 = metadata !{i32 589846, metadata !832, metadata !"pid_t", metadata !832, i32 100, i64 0, i64 0, i64 0, i32 0, metadata !833} ; [ DW_TAG_typedef ]
!832 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !818} ; [ DW_TAG_file_type ]
!833 = metadata !{i32 589860, metadata !817, metadata !"int", metadata !817, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!834 = metadata !{i32 589837, metadata !825, metadata !"ut_line", metadata !826, i32 64, i64 256, i64 8, i64 64, i32 0, metadata !835} ; [ DW_TAG_member ]
!835 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !836, metadata !837, i32 0, null} ; [ DW_TAG_array_type ]
!836 = metadata !{i32 589860, metadata !817, metadata !"char", metadata !817, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!837 = metadata !{metadata !838}
!838 = metadata !{i32 589857, i64 0, i64 31}      ; [ DW_TAG_subrange_type ]
!839 = metadata !{i32 589837, metadata !825, metadata !"ut_id", metadata !826, i32 65, i64 32, i64 8, i64 320, i32 0, metadata !840} ; [ DW_TAG_member ]
!840 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !836, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!841 = metadata !{metadata !842}
!842 = metadata !{i32 589857, i64 0, i64 3}       ; [ DW_TAG_subrange_type ]
!843 = metadata !{i32 589837, metadata !825, metadata !"ut_user", metadata !826, i32 66, i64 256, i64 8, i64 352, i32 0, metadata !835} ; [ DW_TAG_member ]
!844 = metadata !{i32 589837, metadata !825, metadata !"ut_host", metadata !826, i32 67, i64 2048, i64 8, i64 608, i32 0, metadata !845} ; [ DW_TAG_member ]
!845 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !836, metadata !846, i32 0, null} ; [ DW_TAG_array_type ]
!846 = metadata !{metadata !847}
!847 = metadata !{i32 589857, i64 0, i64 255}     ; [ DW_TAG_subrange_type ]
!848 = metadata !{i32 589837, metadata !825, metadata !"ut_exit", metadata !826, i32 68, i64 32, i64 16, i64 2656, i32 0, metadata !849} ; [ DW_TAG_member ]
!849 = metadata !{i32 589843, metadata !817, metadata !"exit_status", metadata !826, i32 53, i64 32, i64 16, i64 0, i32 0, null, metadata !850, i32 0, null} ; [ DW_TAG_structure_type ]
!850 = metadata !{metadata !851, metadata !852}
!851 = metadata !{i32 589837, metadata !849, metadata !"e_termination", metadata !826, i32 54, i64 16, i64 16, i64 0, i32 0, metadata !829} ; [ DW_TAG_member ]
!852 = metadata !{i32 589837, metadata !849, metadata !"e_exit", metadata !826, i32 55, i64 16, i64 16, i64 16, i32 0, metadata !829} ; [ DW_TAG_member ]
!853 = metadata !{i32 589837, metadata !825, metadata !"ut_session", metadata !826, i32 81, i64 64, i64 64, i64 2688, i32 0, metadata !854} ; [ DW_TAG_member ]
!854 = metadata !{i32 589860, metadata !817, metadata !"long int", metadata !817, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!855 = metadata !{i32 589837, metadata !825, metadata !"ut_tv", metadata !826, i32 82, i64 128, i64 64, i64 2752, i32 0, metadata !856} ; [ DW_TAG_member ]
!856 = metadata !{i32 589843, metadata !817, metadata !"timeval", metadata !857, i32 74, i64 128, i64 64, i64 0, i32 0, null, metadata !858, i32 0, null} ; [ DW_TAG_structure_type ]
!857 = metadata !{i32 589865, metadata !"time.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !818} ; [ DW_TAG_file_type ]
!858 = metadata !{metadata !859, metadata !862}
!859 = metadata !{i32 589837, metadata !856, metadata !"tv_sec", metadata !857, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !860} ; [ DW_TAG_member ]
!860 = metadata !{i32 589846, metadata !861, metadata !"__time_t", metadata !861, i32 153, i64 0, i64 0, i64 0, i32 0, metadata !854} ; [ DW_TAG_typedef ]
!861 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !818} ; [ DW_TAG_file_type ]
!862 = metadata !{i32 589837, metadata !856, metadata !"tv_usec", metadata !857, i32 76, i64 64, i64 64, i64 64, i32 0, metadata !863} ; [ DW_TAG_member ]
!863 = metadata !{i32 589846, metadata !861, metadata !"__suseconds_t", metadata !861, i32 155, i64 0, i64 0, i64 0, i32 0, metadata !854} ; [ DW_TAG_typedef ]
!864 = metadata !{i32 589837, metadata !825, metadata !"ut_addr_v6", metadata !826, i32 85, i64 128, i64 32, i64 2880, i32 0, metadata !865} ; [ DW_TAG_member ]
!865 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !866, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!866 = metadata !{i32 589846, metadata !832, metadata !"int32_t", metadata !832, i32 197, i64 0, i64 0, i64 0, i32 0, metadata !833} ; [ DW_TAG_typedef ]
!867 = metadata !{i32 589837, metadata !825, metadata !"__unused", metadata !826, i32 86, i64 160, i64 8, i64 3008, i32 0, metadata !868} ; [ DW_TAG_member ]
!868 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !836, metadata !869, i32 0, null} ; [ DW_TAG_array_type ]
!869 = metadata !{metadata !870}
!870 = metadata !{i32 589857, i64 0, i64 19}      ; [ DW_TAG_subrange_type ]
!871 = metadata !{i32 589870, i32 0, metadata !817, metadata !"endutent", metadata !"endutent", metadata !"endutent", metadata !817, i32 101, metadata !819, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @endutent} ; [ DW_TAG_subprogr
!872 = metadata !{i32 589870, i32 0, metadata !817, metadata !"getutent", metadata !"getutent", metadata !"getutent", metadata !817, i32 110, metadata !873, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* ()* @getutent} ; [ DW_TAG
!873 = metadata !{i32 589845, metadata !817, metadata !"", metadata !817, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !874, i32 0, null} ; [ DW_TAG_subroutine_type ]
!874 = metadata !{metadata !824}
!875 = metadata !{i32 589870, i32 0, metadata !817, metadata !"__getutid", metadata !"__getutid", metadata !"", metadata !817, i32 121, metadata !876, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @__getutid} ; [
!876 = metadata !{i32 589845, metadata !817, metadata !"", metadata !817, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !877, i32 0, null} ; [ DW_TAG_subroutine_type ]
!877 = metadata !{metadata !824, metadata !878}
!878 = metadata !{i32 589839, metadata !817, metadata !"", metadata !817, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !879} ; [ DW_TAG_pointer_type ]
!879 = metadata !{i32 589862, metadata !817, metadata !"", metadata !817, i32 0, i64 3200, i64 64, i64 0, i32 0, metadata !825} ; [ DW_TAG_const_type ]
!880 = metadata !{i32 589870, i32 0, metadata !817, metadata !"getutid", metadata !"getutid", metadata !"getutid", metadata !817, i32 148, metadata !876, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getutid} ;
!881 = metadata !{i32 589870, i32 0, metadata !817, metadata !"getutline", metadata !"getutline", metadata !"getutline", metadata !817, i32 159, metadata !876, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @getu
!882 = metadata !{i32 589870, i32 0, metadata !817, metadata !"pututline", metadata !"pututline", metadata !"pututline", metadata !817, i32 174, metadata !876, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.utmp* (%struct.utmp*)* @putu
!883 = metadata !{i32 589870, i32 0, metadata !817, metadata !"utmpname", metadata !"utmpname", metadata !"utmpname", metadata !817, i32 192, metadata !884, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*)* @utmpname} ; [ DW_TAG_subpro
!884 = metadata !{i32 589845, metadata !817, metadata !"", metadata !817, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !885, i32 0, null} ; [ DW_TAG_subroutine_type ]
!885 = metadata !{metadata !833, metadata !886}
!886 = metadata !{i32 589839, metadata !817, metadata !"", metadata !817, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !887} ; [ DW_TAG_pointer_type ]
!887 = metadata !{i32 589862, metadata !817, metadata !"", metadata !817, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !836} ; [ DW_TAG_const_type ]
!888 = metadata !{i32 589870, i32 0, metadata !889, metadata !"iswalnum", metadata !"iswalnum", metadata !"iswalnum", metadata !891, i32 217, metadata !892, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswalnum} ; [ DW_TAG_subpro
!889 = metadata !{i32 589865, metadata !"iswalnum.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !890} ; [ DW_TAG_file_type ]
!890 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswalnum.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!891 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !890} ; [ DW_TAG_file_type ]
!892 = metadata !{i32 589845, metadata !889, metadata !"", metadata !889, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !893, i32 0, null} ; [ DW_TAG_subroutine_type ]
!893 = metadata !{metadata !894, metadata !895}
!894 = metadata !{i32 589860, metadata !889, metadata !"int", metadata !889, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!895 = metadata !{i32 589846, metadata !896, metadata !"wint_t", metadata !896, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !897} ; [ DW_TAG_typedef ]
!896 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !890} ; [ DW_TAG_file_type ]
!897 = metadata !{i32 589860, metadata !889, metadata !"unsigned int", metadata !889, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!898 = metadata !{i32 589870, i32 0, metadata !899, metadata !"iswcntrl", metadata !"iswcntrl", metadata !"iswcntrl", metadata !901, i32 235, metadata !902, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswcntrl} ; [ DW_TAG_subpro
!899 = metadata !{i32 589865, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !900} ; [ DW_TAG_file_type ]
!900 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswcntrl.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!901 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !900} ; [ DW_TAG_file_type ]
!902 = metadata !{i32 589845, metadata !899, metadata !"", metadata !899, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !903, i32 0, null} ; [ DW_TAG_subroutine_type ]
!903 = metadata !{metadata !904, metadata !905}
!904 = metadata !{i32 589860, metadata !899, metadata !"int", metadata !899, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!905 = metadata !{i32 589846, metadata !906, metadata !"wint_t", metadata !906, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !907} ; [ DW_TAG_typedef ]
!906 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !900} ; [ DW_TAG_file_type ]
!907 = metadata !{i32 589860, metadata !899, metadata !"unsigned int", metadata !899, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!908 = metadata !{i32 589870, i32 0, metadata !909, metadata !"iswprint", metadata !"iswprint", metadata !"iswprint", metadata !911, i32 259, metadata !912, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswprint} ; [ DW_TAG_subpro
!909 = metadata !{i32 589865, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !910} ; [ DW_TAG_file_type ]
!910 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswprint.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!911 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !910} ; [ DW_TAG_file_type ]
!912 = metadata !{i32 589845, metadata !909, metadata !"", metadata !909, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !913, i32 0, null} ; [ DW_TAG_subroutine_type ]
!913 = metadata !{metadata !914, metadata !915}
!914 = metadata !{i32 589860, metadata !909, metadata !"int", metadata !909, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!915 = metadata !{i32 589846, metadata !916, metadata !"wint_t", metadata !916, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !917} ; [ DW_TAG_typedef ]
!916 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !910} ; [ DW_TAG_file_type ]
!917 = metadata !{i32 589860, metadata !909, metadata !"unsigned int", metadata !909, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!918 = metadata !{i32 589870, i32 0, metadata !919, metadata !"iswspace", metadata !"iswspace", metadata !"iswspace", metadata !921, i32 271, metadata !922, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @iswspace} ; [ DW_TAG_subpro
!919 = metadata !{i32 589865, metadata !"iswspace.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !920} ; [ DW_TAG_file_type ]
!920 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswspace.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!921 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !920} ; [ DW_TAG_file_type ]
!922 = metadata !{i32 589845, metadata !919, metadata !"", metadata !919, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !923, i32 0, null} ; [ DW_TAG_subroutine_type ]
!923 = metadata !{metadata !924, metadata !925}
!924 = metadata !{i32 589860, metadata !919, metadata !"int", metadata !919, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!925 = metadata !{i32 589846, metadata !926, metadata !"wint_t", metadata !926, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !927} ; [ DW_TAG_typedef ]
!926 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !920} ; [ DW_TAG_file_type ]
!927 = metadata !{i32 589860, metadata !919, metadata !"unsigned int", metadata !919, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!928 = metadata !{i32 589870, i32 0, metadata !929, metadata !"mbrtowc", metadata !"mbrtowc", metadata !"mbrtowc", metadata !931, i32 280, metadata !932, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8*, i64, %struct.__mbstate_t*)
!929 = metadata !{i32 589865, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !930} ; [ DW_TAG_file_type ]
!930 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbrtowc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!931 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !930} ; [ DW_TAG_file_type ]
!932 = metadata !{i32 589845, metadata !929, metadata !"", metadata !929, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !933, i32 0, null} ; [ DW_TAG_subroutine_type ]
!933 = metadata !{metadata !934, metadata !937, metadata !940, metadata !934, metadata !943}
!934 = metadata !{i32 589846, metadata !935, metadata !"size_t", metadata !935, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !936} ; [ DW_TAG_typedef ]
!935 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !930} ; [ DW_TAG_file_type ]
!936 = metadata !{i32 589860, metadata !929, metadata !"long unsigned int", metadata !929, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!937 = metadata !{i32 589839, metadata !929, metadata !"", metadata !929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !938} ; [ DW_TAG_pointer_type ]
!938 = metadata !{i32 589846, metadata !935, metadata !"wchar_t", metadata !935, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !939} ; [ DW_TAG_typedef ]
!939 = metadata !{i32 589860, metadata !929, metadata !"int", metadata !929, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!940 = metadata !{i32 589839, metadata !929, metadata !"", metadata !929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !941} ; [ DW_TAG_pointer_type ]
!941 = metadata !{i32 589862, metadata !929, metadata !"", metadata !929, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !942} ; [ DW_TAG_const_type ]
!942 = metadata !{i32 589860, metadata !929, metadata !"char", metadata !929, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!943 = metadata !{i32 589839, metadata !929, metadata !"", metadata !929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !944} ; [ DW_TAG_pointer_type ]
!944 = metadata !{i32 589846, metadata !945, metadata !"mbstate_t", metadata !945, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !946} ; [ DW_TAG_typedef ]
!945 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !930} ; [ DW_TAG_file_type ]
!946 = metadata !{i32 589843, metadata !929, metadata !"", metadata !945, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !947, i32 0, null} ; [ DW_TAG_structure_type ]
!947 = metadata !{metadata !948, metadata !949}
!948 = metadata !{i32 589837, metadata !946, metadata !"__mask", metadata !945, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !938} ; [ DW_TAG_member ]
!949 = metadata !{i32 589837, metadata !946, metadata !"__wc", metadata !945, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !938} ; [ DW_TAG_member ]
!950 = metadata !{i32 589870, i32 0, metadata !951, metadata !"mbsinit", metadata !"mbsinit", metadata !"mbsinit", metadata !953, i32 251, metadata !954, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__mbstate_t*)* @mbsinit} ; [ 
!951 = metadata !{i32 589865, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !952} ; [ DW_TAG_file_type ]
!952 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsinit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!953 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !952} ; [ DW_TAG_file_type ]
!954 = metadata !{i32 589845, metadata !951, metadata !"", metadata !951, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !955, i32 0, null} ; [ DW_TAG_subroutine_type ]
!955 = metadata !{metadata !956, metadata !957}
!956 = metadata !{i32 589860, metadata !951, metadata !"int", metadata !951, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!957 = metadata !{i32 589839, metadata !951, metadata !"", metadata !951, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !958} ; [ DW_TAG_pointer_type ]
!958 = metadata !{i32 589846, metadata !959, metadata !"mbstate_t", metadata !959, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !960} ; [ DW_TAG_typedef ]
!959 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !952} ; [ DW_TAG_file_type ]
!960 = metadata !{i32 589843, metadata !951, metadata !"", metadata !959, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !961, i32 0, null} ; [ DW_TAG_structure_type ]
!961 = metadata !{metadata !962, metadata !965}
!962 = metadata !{i32 589837, metadata !960, metadata !"__mask", metadata !959, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !963} ; [ DW_TAG_member ]
!963 = metadata !{i32 589846, metadata !964, metadata !"wchar_t", metadata !964, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !956} ; [ DW_TAG_typedef ]
!964 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !952} ; [ DW_TAG_file_type ]
!965 = metadata !{i32 589837, metadata !960, metadata !"__wc", metadata !959, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !963} ; [ DW_TAG_member ]
!966 = metadata !{i32 589870, i32 0, metadata !967, metadata !"memchr", metadata !"memchr", metadata !"memchr", metadata !967, i32 19, metadata !969, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memchr} ; [ DW_TAG_subpr
!967 = metadata !{i32 589865, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !968} ; [ DW_TAG_file_type ]
!968 = metadata !{i32 589841, i32 0, i32 1, metadata !"memchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!969 = metadata !{i32 589845, metadata !967, metadata !"", metadata !967, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !970, i32 0, null} ; [ DW_TAG_subroutine_type ]
!970 = metadata !{metadata !971, metadata !971, metadata !972, metadata !973}
!971 = metadata !{i32 589839, metadata !967, metadata !"", metadata !967, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!972 = metadata !{i32 589860, metadata !967, metadata !"int", metadata !967, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!973 = metadata !{i32 589846, metadata !974, metadata !"size_t", metadata !974, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !975} ; [ DW_TAG_typedef ]
!974 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !968} ; [ DW_TAG_file_type ]
!975 = metadata !{i32 589860, metadata !967, metadata !"long unsigned int", metadata !967, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!976 = metadata !{i32 589870, i32 0, metadata !977, metadata !"memcmp", metadata !"memcmp", metadata !"memcmp", metadata !977, i32 18, metadata !979, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @memcmp} ; [ DW_TAG_subpr
!977 = metadata !{i32 589865, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !978} ; [ DW_TAG_file_type ]
!978 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!979 = metadata !{i32 589845, metadata !977, metadata !"", metadata !977, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !980, i32 0, null} ; [ DW_TAG_subroutine_type ]
!980 = metadata !{metadata !981, metadata !982, metadata !982, metadata !983}
!981 = metadata !{i32 589860, metadata !977, metadata !"int", metadata !977, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!982 = metadata !{i32 589839, metadata !977, metadata !"", metadata !977, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!983 = metadata !{i32 589846, metadata !984, metadata !"size_t", metadata !984, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !985} ; [ DW_TAG_typedef ]
!984 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !978} ; [ DW_TAG_file_type ]
!985 = metadata !{i32 589860, metadata !977, metadata !"long unsigned int", metadata !977, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!986 = metadata !{i32 589870, i32 0, metadata !987, metadata !"mempcpy", metadata !"mempcpy", metadata !"mempcpy", metadata !987, i32 21, metadata !989, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @mempcpy} ; [ DW_TAG_s
!987 = metadata !{i32 589865, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !988} ; [ DW_TAG_file_type ]
!988 = metadata !{i32 589841, i32 0, i32 1, metadata !"mempcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!989 = metadata !{i32 589845, metadata !987, metadata !"", metadata !987, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !990, i32 0, null} ; [ DW_TAG_subroutine_type ]
!990 = metadata !{metadata !991, metadata !991, metadata !991, metadata !992}
!991 = metadata !{i32 589839, metadata !987, metadata !"", metadata !987, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!992 = metadata !{i32 589846, metadata !993, metadata !"size_t", metadata !993, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !994} ; [ DW_TAG_typedef ]
!993 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !988} ; [ DW_TAG_file_type ]
!994 = metadata !{i32 589860, metadata !987, metadata !"long unsigned int", metadata !987, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!995 = metadata !{i32 589870, i32 0, metadata !996, metadata !"memrchr", metadata !"memrchr", metadata !"memrchr", metadata !996, i32 15, metadata !998, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memrchr} ; [ DW_TAG_s
!996 = metadata !{i32 589865, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !997} ; [ DW_TAG_file_type ]
!997 = metadata !{i32 589841, i32 0, i32 1, metadata !"memrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!998 = metadata !{i32 589845, metadata !996, metadata !"", metadata !996, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !999, i32 0, null} ; [ DW_TAG_subroutine_type ]
!999 = metadata !{metadata !1000, metadata !1000, metadata !1001, metadata !1002}
!1000 = metadata !{i32 589839, metadata !996, metadata !"", metadata !996, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1001 = metadata !{i32 589860, metadata !996, metadata !"int", metadata !996, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1002 = metadata !{i32 589846, metadata !1003, metadata !"size_t", metadata !1003, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1004} ; [ DW_TAG_typedef ]
!1003 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !997} ; [ DW_TAG_file_type ]
!1004 = metadata !{i32 589860, metadata !996, metadata !"long unsigned int", metadata !996, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1005 = metadata !{i32 589870, i32 0, metadata !1006, metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !"nl_langinfo", metadata !1008, i32 1031, metadata !1009, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @nl_langinfo} 
!1006 = metadata !{i32 589865, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1007} ; [ DW_TAG_file_type ]
!1007 = metadata !{i32 589841, i32 0, i32 1, metadata !"nl_langinfo.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!1008 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1007} ; [ DW_TAG_file_type ]
!1009 = metadata !{i32 589845, metadata !1006, metadata !"", metadata !1006, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1010, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1010 = metadata !{metadata !1011, metadata !1013}
!1011 = metadata !{i32 589839, metadata !1006, metadata !"", metadata !1006, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1012} ; [ DW_TAG_pointer_type ]
!1012 = metadata !{i32 589860, metadata !1006, metadata !"char", metadata !1006, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1013 = metadata !{i32 589846, metadata !1014, metadata !"nl_item", metadata !1014, i32 41, i64 0, i64 0, i64 0, i32 0, metadata !1015} ; [ DW_TAG_typedef ]
!1014 = metadata !{i32 589865, metadata !"nl_types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1007} ; [ DW_TAG_file_type ]
!1015 = metadata !{i32 589860, metadata !1006, metadata !"int", metadata !1006, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1016 = metadata !{i32 589870, i32 0, metadata !1017, metadata !"opendir", metadata !"opendir", metadata !"opendir", metadata !1017, i32 28, metadata !1019, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.DIR* (i8*)* @opendir} ; [ DW_TA
!1017 = metadata !{i32 589865, metadata !"opendir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !1018} ; [ DW_TAG_file_type ]
!1018 = metadata !{i32 589841, i32 0, i32 1, metadata !"opendir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1019 = metadata !{i32 589845, metadata !1017, metadata !"", metadata !1017, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1020, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1020 = metadata !{metadata !1021, metadata !1042}
!1021 = metadata !{i32 589839, metadata !1017, metadata !"", metadata !1017, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1022} ; [ DW_TAG_pointer_type ]
!1022 = metadata !{i32 589846, metadata !1023, metadata !"DIR", metadata !1023, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !1024} ; [ DW_TAG_typedef ]
!1023 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1018} ; [ DW_TAG_file_type ]
!1024 = metadata !{i32 589843, metadata !1017, metadata !"__dirstream", metadata !1023, i32 128, i64 448, i64 64, i64 0, i32 0, null, metadata !1025, i32 0, null} ; [ DW_TAG_structure_type ]
!1025 = metadata !{metadata !1026, metadata !1029, metadata !1033, metadata !1034, metadata !1036, metadata !1040, metadata !1041}
!1026 = metadata !{i32 589837, metadata !1024, metadata !"dd_fd", metadata !1027, i32 47, i64 32, i64 32, i64 0, i32 0, metadata !1028} ; [ DW_TAG_member ]
!1027 = metadata !{i32 589865, metadata !"dirstream.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !1018} ; [ DW_TAG_file_type ]
!1028 = metadata !{i32 589860, metadata !1017, metadata !"int", metadata !1017, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1029 = metadata !{i32 589837, metadata !1024, metadata !"dd_nextloc", metadata !1027, i32 50, i64 64, i64 64, i64 64, i32 0, metadata !1030} ; [ DW_TAG_member ]
!1030 = metadata !{i32 589846, metadata !1031, metadata !"size_t", metadata !1031, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1032} ; [ DW_TAG_typedef ]
!1031 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1018} ; [ DW_TAG_file_type ]
!1032 = metadata !{i32 589860, metadata !1017, metadata !"long unsigned int", metadata !1017, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1033 = metadata !{i32 589837, metadata !1024, metadata !"dd_size", metadata !1027, i32 53, i64 64, i64 64, i64 128, i32 0, metadata !1030} ; [ DW_TAG_member ]
!1034 = metadata !{i32 589837, metadata !1024, metadata !"dd_buf", metadata !1027, i32 56, i64 64, i64 64, i64 192, i32 0, metadata !1035} ; [ DW_TAG_member ]
!1035 = metadata !{i32 589839, metadata !1017, metadata !"", metadata !1017, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1036 = metadata !{i32 589837, metadata !1024, metadata !"dd_nextoff", metadata !1027, i32 59, i64 64, i64 64, i64 256, i32 0, metadata !1037} ; [ DW_TAG_member ]
!1037 = metadata !{i32 589846, metadata !1038, metadata !"off_t", metadata !1038, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !1039} ; [ DW_TAG_typedef ]
!1038 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !1018} ; [ DW_TAG_file_type ]
!1039 = metadata !{i32 589860, metadata !1017, metadata !"long int", metadata !1017, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1040 = metadata !{i32 589837, metadata !1024, metadata !"dd_max", metadata !1027, i32 62, i64 64, i64 64, i64 320, i32 0, metadata !1030} ; [ DW_TAG_member ]
!1041 = metadata !{i32 589837, metadata !1024, metadata !"__UCLIBC_MUTEX_DUMMY_dd_lock", metadata !1027, i32 65, i64 64, i64 64, i64 384, i32 0, metadata !1035} ; [ DW_TAG_member ]
!1042 = metadata !{i32 589839, metadata !1017, metadata !"", metadata !1017, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1043} ; [ DW_TAG_pointer_type ]
!1043 = metadata !{i32 589862, metadata !1017, metadata !"", metadata !1017, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1044} ; [ DW_TAG_const_type ]
!1044 = metadata !{i32 589860, metadata !1017, metadata !"char", metadata !1017, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1045 = metadata !{i32 589870, i32 0, metadata !1046, metadata !"pathconf", metadata !"pathconf", metadata !"pathconf", metadata !1046, i32 46, metadata !1048, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32)* @pathconf} ; [ DW_TA
!1046 = metadata !{i32 589865, metadata !"pathconf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !1047} ; [ DW_TAG_file_type ]
!1047 = metadata !{i32 589841, i32 0, i32 1, metadata !"pathconf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/unistd", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1048 = metadata !{i32 589845, metadata !1046, metadata !"", metadata !1046, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1049, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1049 = metadata !{metadata !1050, metadata !1051, metadata !1054}
!1050 = metadata !{i32 589860, metadata !1046, metadata !"long int", metadata !1046, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1051 = metadata !{i32 589839, metadata !1046, metadata !"", metadata !1046, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1052} ; [ DW_TAG_pointer_type ]
!1052 = metadata !{i32 589862, metadata !1046, metadata !"", metadata !1046, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1053} ; [ DW_TAG_const_type ]
!1053 = metadata !{i32 589860, metadata !1046, metadata !"char", metadata !1046, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1054 = metadata !{i32 589860, metadata !1046, metadata !"int", metadata !1046, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1055 = metadata !{i32 589870, i32 0, metadata !1056, metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !"putchar_unlocked", metadata !1058, i32 17, metadata !1059, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @
!1056 = metadata !{i32 589865, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1057} ; [ DW_TAG_file_type ]
!1057 = metadata !{i32 589841, i32 0, i32 1, metadata !"putchar_unlocked.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!1058 = metadata !{i32 589865, metadata !"putchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1057} ; [ DW_TAG_file_type ]
!1059 = metadata !{i32 589845, metadata !1056, metadata !"", metadata !1056, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1060, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1060 = metadata !{metadata !1061, metadata !1061}
!1061 = metadata !{i32 589860, metadata !1056, metadata !"int", metadata !1056, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1062 = metadata !{i32 589870, i32 0, metadata !1063, metadata !"qsort", metadata !"qsort", metadata !"qsort", metadata !1065, i32 824, metadata !1066, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i64, i64, i32 (i8*, i8*)*)* @qsor
!1063 = metadata !{i32 589865, metadata !"qsort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1064} ; [ DW_TAG_file_type ]
!1064 = metadata !{i32 589841, i32 0, i32 1, metadata !"qsort.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1065 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1064} ; [ DW_TAG_file_type ]
!1066 = metadata !{i32 589845, metadata !1063, metadata !"", metadata !1063, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1067, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1067 = metadata !{null, metadata !1068, metadata !1069, metadata !1069, metadata !1072}
!1068 = metadata !{i32 589839, metadata !1063, metadata !"", metadata !1063, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1069 = metadata !{i32 589846, metadata !1070, metadata !"size_t", metadata !1070, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1071} ; [ DW_TAG_typedef ]
!1070 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1064} ; [ DW_TAG_file_type ]
!1071 = metadata !{i32 589860, metadata !1063, metadata !"long unsigned int", metadata !1063, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1072 = metadata !{i32 589839, metadata !1063, metadata !"", metadata !1063, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1073} ; [ DW_TAG_pointer_type ]
!1073 = metadata !{i32 589845, metadata !1063, metadata !"", metadata !1063, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1074, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1074 = metadata !{metadata !1075, metadata !1068, metadata !1068}
!1075 = metadata !{i32 589860, metadata !1063, metadata !"int", metadata !1063, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1076 = metadata !{i32 589870, i32 0, metadata !1077, metadata !"readdir", metadata !"readdir", metadata !"readdir", metadata !1077, i32 19, metadata !1079, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.dirent* (%struct.DIR*)* @readdi
!1077 = metadata !{i32 589865, metadata !"readdir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !1078} ; [ DW_TAG_file_type ]
!1078 = metadata !{i32 589841, i32 0, i32 1, metadata !"readdir.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1079 = metadata !{i32 589845, metadata !1077, metadata !"", metadata !1077, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1080, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1080 = metadata !{metadata !1081, metadata !1099}
!1081 = metadata !{i32 589839, metadata !1077, metadata !"", metadata !1077, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1082} ; [ DW_TAG_pointer_type ]
!1082 = metadata !{i32 589843, metadata !1077, metadata !"dirent", metadata !1083, i32 24, i64 2240, i64 64, i64 0, i32 0, null, metadata !1084, i32 0, null} ; [ DW_TAG_structure_type ]
!1083 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1078} ; [ DW_TAG_file_type ]
!1084 = metadata !{metadata !1085, metadata !1089, metadata !1092, metadata !1094, metadata !1096}
!1085 = metadata !{i32 589837, metadata !1082, metadata !"d_ino", metadata !1083, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !1086} ; [ DW_TAG_member ]
!1086 = metadata !{i32 589846, metadata !1087, metadata !"__ino_t", metadata !1087, i32 141, i64 0, i64 0, i64 0, i32 0, metadata !1088} ; [ DW_TAG_typedef ]
!1087 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1078} ; [ DW_TAG_file_type ]
!1088 = metadata !{i32 589860, metadata !1077, metadata !"long unsigned int", metadata !1077, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1089 = metadata !{i32 589837, metadata !1082, metadata !"d_off", metadata !1083, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !1090} ; [ DW_TAG_member ]
!1090 = metadata !{i32 589846, metadata !1087, metadata !"__off_t", metadata !1087, i32 145, i64 0, i64 0, i64 0, i32 0, metadata !1091} ; [ DW_TAG_typedef ]
!1091 = metadata !{i32 589860, metadata !1077, metadata !"long int", metadata !1077, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1092 = metadata !{i32 589837, metadata !1082, metadata !"d_reclen", metadata !1083, i32 32, i64 16, i64 16, i64 128, i32 0, metadata !1093} ; [ DW_TAG_member ]
!1093 = metadata !{i32 589860, metadata !1077, metadata !"short unsigned int", metadata !1077, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1094 = metadata !{i32 589837, metadata !1082, metadata !"d_type", metadata !1083, i32 33, i64 8, i64 8, i64 144, i32 0, metadata !1095} ; [ DW_TAG_member ]
!1095 = metadata !{i32 589860, metadata !1077, metadata !"unsigned char", metadata !1077, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1096 = metadata !{i32 589837, metadata !1082, metadata !"d_name", metadata !1083, i32 34, i64 2048, i64 8, i64 152, i32 0, metadata !1097} ; [ DW_TAG_member ]
!1097 = metadata !{i32 589825, metadata !1077, metadata !"", metadata !1077, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !1098, metadata !846, i32 0, null} ; [ DW_TAG_array_type ]
!1098 = metadata !{i32 589860, metadata !1077, metadata !"char", metadata !1077, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1099 = metadata !{i32 589839, metadata !1077, metadata !"", metadata !1077, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1100} ; [ DW_TAG_pointer_type ]
!1100 = metadata !{i32 589846, metadata !1101, metadata !"DIR", metadata !1101, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !1102} ; [ DW_TAG_typedef ]
!1101 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1078} ; [ DW_TAG_file_type ]
!1102 = metadata !{i32 589843, metadata !1077, metadata !"__dirstream", metadata !1101, i32 128, i64 448, i64 64, i64 0, i32 0, null, metadata !1103, i32 0, null} ; [ DW_TAG_structure_type ]
!1103 = metadata !{metadata !1104, metadata !1107, metadata !1110, metadata !1111, metadata !1113, metadata !1116, metadata !1117}
!1104 = metadata !{i32 589837, metadata !1102, metadata !"dd_fd", metadata !1105, i32 47, i64 32, i64 32, i64 0, i32 0, metadata !1106} ; [ DW_TAG_member ]
!1105 = metadata !{i32 589865, metadata !"dirstream.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/dirent", metadata !1078} ; [ DW_TAG_file_type ]
!1106 = metadata !{i32 589860, metadata !1077, metadata !"int", metadata !1077, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1107 = metadata !{i32 589837, metadata !1102, metadata !"dd_nextloc", metadata !1105, i32 50, i64 64, i64 64, i64 64, i32 0, metadata !1108} ; [ DW_TAG_member ]
!1108 = metadata !{i32 589846, metadata !1109, metadata !"size_t", metadata !1109, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1088} ; [ DW_TAG_typedef ]
!1109 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1078} ; [ DW_TAG_file_type ]
!1110 = metadata !{i32 589837, metadata !1102, metadata !"dd_size", metadata !1105, i32 53, i64 64, i64 64, i64 128, i32 0, metadata !1108} ; [ DW_TAG_member ]
!1111 = metadata !{i32 589837, metadata !1102, metadata !"dd_buf", metadata !1105, i32 56, i64 64, i64 64, i64 192, i32 0, metadata !1112} ; [ DW_TAG_member ]
!1112 = metadata !{i32 589839, metadata !1077, metadata !"", metadata !1077, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1113 = metadata !{i32 589837, metadata !1102, metadata !"dd_nextoff", metadata !1105, i32 59, i64 64, i64 64, i64 256, i32 0, metadata !1114} ; [ DW_TAG_member ]
!1114 = metadata !{i32 589846, metadata !1115, metadata !"off_t", metadata !1115, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !1091} ; [ DW_TAG_typedef ]
!1115 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !1078} ; [ DW_TAG_file_type ]
!1116 = metadata !{i32 589837, metadata !1102, metadata !"dd_max", metadata !1105, i32 62, i64 64, i64 64, i64 320, i32 0, metadata !1108} ; [ DW_TAG_member ]
!1117 = metadata !{i32 589837, metadata !1102, metadata !"__UCLIBC_MUTEX_DUMMY_dd_lock", metadata !1105, i32 65, i64 64, i64 64, i64 384, i32 0, metadata !1112} ; [ DW_TAG_member ]
!1118 = metadata !{i32 589870, i32 0, metadata !1119, metadata !"realpath", metadata !"realpath", metadata !"realpath", metadata !1119, i32 52, metadata !1121, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @realpath} ; [ DW_TA
!1119 = metadata !{i32 589865, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1120} ; [ DW_TAG_file_type ]
!1120 = metadata !{i32 589841, i32 0, i32 1, metadata !"realpath.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1121 = metadata !{i32 589845, metadata !1119, metadata !"", metadata !1119, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1122, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1122 = metadata !{metadata !1123, metadata !1125, metadata !1123}
!1123 = metadata !{i32 589839, metadata !1119, metadata !"", metadata !1119, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1124} ; [ DW_TAG_pointer_type ]
!1124 = metadata !{i32 589860, metadata !1119, metadata !"char", metadata !1119, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1125 = metadata !{i32 589839, metadata !1119, metadata !"", metadata !1119, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1126} ; [ DW_TAG_pointer_type ]
!1126 = metadata !{i32 589862, metadata !1119, metadata !"", metadata !1119, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1124} ; [ DW_TAG_const_type ]
!1127 = metadata !{i32 589870, i32 0, metadata !1128, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !1130, i32 162, metadata !1131, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32, i8*)* @setlocale} ; [ 
!1128 = metadata !{i32 589865, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1129} ; [ DW_TAG_file_type ]
!1129 = metadata !{i32 589841, i32 0, i32 1, metadata !"setlocale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1130 = metadata !{i32 589865, metadata !"locale.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/locale", metadata !1129} ; [ DW_TAG_file_type ]
!1131 = metadata !{i32 589845, metadata !1128, metadata !"", metadata !1128, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1132, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1132 = metadata !{metadata !1133, metadata !1135, metadata !1136}
!1133 = metadata !{i32 589839, metadata !1128, metadata !"", metadata !1128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1134} ; [ DW_TAG_pointer_type ]
!1134 = metadata !{i32 589860, metadata !1128, metadata !"char", metadata !1128, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1135 = metadata !{i32 589860, metadata !1128, metadata !"int", metadata !1128, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1136 = metadata !{i32 589839, metadata !1128, metadata !"", metadata !1128, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1137} ; [ DW_TAG_pointer_type ]
!1137 = metadata !{i32 589862, metadata !1128, metadata !"", metadata !1128, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1134} ; [ DW_TAG_const_type ]
!1138 = metadata !{i32 589870, i32 0, metadata !1139, metadata !"sprintf", metadata !"sprintf", metadata !"sprintf", metadata !1139, i32 19, metadata !1141, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, ...)* @sprintf} ; [ DW_T
!1139 = metadata !{i32 589865, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1140} ; [ DW_TAG_file_type ]
!1140 = metadata !{i32 589841, i32 0, i32 1, metadata !"sprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1141 = metadata !{i32 589845, metadata !1139, metadata !"", metadata !1139, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1142, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1142 = metadata !{metadata !1143, metadata !1144, metadata !1146}
!1143 = metadata !{i32 589860, metadata !1139, metadata !"int", metadata !1139, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1144 = metadata !{i32 589839, metadata !1139, metadata !"", metadata !1139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1145} ; [ DW_TAG_pointer_type ]
!1145 = metadata !{i32 589860, metadata !1139, metadata !"char", metadata !1139, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1146 = metadata !{i32 589839, metadata !1139, metadata !"", metadata !1139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1147} ; [ DW_TAG_pointer_type ]
!1147 = metadata !{i32 589862, metadata !1139, metadata !"", metadata !1139, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1145} ; [ DW_TAG_const_type ]
!1148 = metadata !{i32 589870, i32 0, metadata !1149, metadata !"_stdio_term", metadata !"_stdio_term", metadata !"_stdio_term", metadata !1149, i32 211, metadata !1151, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_term} ; [
!1149 = metadata !{i32 589865, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1150} ; [ DW_TAG_file_type ]
!1150 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdio.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1151 = metadata !{i32 589845, metadata !1149, metadata !"", metadata !1149, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1152 = metadata !{i32 589870, i32 0, metadata !1149, metadata !"_stdio_init", metadata !"_stdio_init", metadata !"_stdio_init", metadata !1149, i32 278, metadata !1151, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void ()* @_stdio_init} ; [
!1153 = metadata !{i32 589870, i32 0, metadata !1154, metadata !"stpcpy", metadata !"stpcpy", metadata !"stpcpy", metadata !1154, i32 18, metadata !1156, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @stpcpy} ; [ DW_TAG_subpro
!1154 = metadata !{i32 589865, metadata !"stpcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1155} ; [ DW_TAG_file_type ]
!1155 = metadata !{i32 589841, i32 0, i32 1, metadata !"stpcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1156 = metadata !{i32 589845, metadata !1154, metadata !"", metadata !1154, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1157, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1157 = metadata !{metadata !1158, metadata !1158, metadata !1160}
!1158 = metadata !{i32 589839, metadata !1154, metadata !"", metadata !1154, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1159} ; [ DW_TAG_pointer_type ]
!1159 = metadata !{i32 589860, metadata !1154, metadata !"char", metadata !1154, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1160 = metadata !{i32 589839, metadata !1154, metadata !"", metadata !1154, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1161} ; [ DW_TAG_pointer_type ]
!1161 = metadata !{i32 589862, metadata !1154, metadata !"", metadata !1154, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1159} ; [ DW_TAG_const_type ]
!1162 = metadata !{i32 589870, i32 0, metadata !1163, metadata !"strchr", metadata !"strchr", metadata !"strchr", metadata !1163, i32 19, metadata !1165, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strchr} ; [ DW_TAG_subpro
!1163 = metadata !{i32 589865, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1164} ; [ DW_TAG_file_type ]
!1164 = metadata !{i32 589841, i32 0, i32 1, metadata !"strchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1165 = metadata !{i32 589845, metadata !1163, metadata !"", metadata !1163, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1166, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1166 = metadata !{metadata !1167, metadata !1169, metadata !1171}
!1167 = metadata !{i32 589839, metadata !1163, metadata !"", metadata !1163, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1168} ; [ DW_TAG_pointer_type ]
!1168 = metadata !{i32 589860, metadata !1163, metadata !"char", metadata !1163, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1169 = metadata !{i32 589839, metadata !1163, metadata !"", metadata !1163, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1170} ; [ DW_TAG_pointer_type ]
!1170 = metadata !{i32 589862, metadata !1163, metadata !"", metadata !1163, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1168} ; [ DW_TAG_const_type ]
!1171 = metadata !{i32 589860, metadata !1163, metadata !"int", metadata !1163, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1172 = metadata !{i32 589870, i32 0, metadata !1173, metadata !"strcmp", metadata !"strcmp", metadata !"strcmp", metadata !1173, i32 21, metadata !1175, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*)* @strcmp} ; [ DW_TAG_subpro
!1173 = metadata !{i32 589865, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1174} ; [ DW_TAG_file_type ]
!1174 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1175 = metadata !{i32 589845, metadata !1173, metadata !"", metadata !1173, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1176, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1176 = metadata !{metadata !1177, metadata !1178, metadata !1178}
!1177 = metadata !{i32 589860, metadata !1173, metadata !"int", metadata !1173, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1178 = metadata !{i32 589839, metadata !1173, metadata !"", metadata !1173, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1179} ; [ DW_TAG_pointer_type ]
!1179 = metadata !{i32 589862, metadata !1173, metadata !"", metadata !1173, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1180} ; [ DW_TAG_const_type ]
!1180 = metadata !{i32 589860, metadata !1173, metadata !"char", metadata !1173, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1181 = metadata !{i32 589870, i32 0, metadata !1182, metadata !"strcpy", metadata !"strcpy", metadata !"strcpy", metadata !1182, i32 19, metadata !1184, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*)* @strcpy} ; [ DW_TAG_subpro
!1182 = metadata !{i32 589865, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1183} ; [ DW_TAG_file_type ]
!1183 = metadata !{i32 589841, i32 0, i32 1, metadata !"strcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1184 = metadata !{i32 589845, metadata !1182, metadata !"", metadata !1182, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1185, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1185 = metadata !{metadata !1186, metadata !1186, metadata !1188}
!1186 = metadata !{i32 589839, metadata !1182, metadata !"", metadata !1182, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1187} ; [ DW_TAG_pointer_type ]
!1187 = metadata !{i32 589860, metadata !1182, metadata !"char", metadata !1182, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1188 = metadata !{i32 589839, metadata !1182, metadata !"", metadata !1182, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1189} ; [ DW_TAG_pointer_type ]
!1189 = metadata !{i32 589862, metadata !1182, metadata !"", metadata !1182, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1187} ; [ DW_TAG_const_type ]
!1190 = metadata !{i32 589870, i32 0, metadata !1191, metadata !"strdup", metadata !"strdup", metadata !"strdup", metadata !1191, i32 24, metadata !1193, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*)* @strdup} ; [ DW_TAG_subprogram 
!1191 = metadata !{i32 589865, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1192} ; [ DW_TAG_file_type ]
!1192 = metadata !{i32 589841, i32 0, i32 1, metadata !"strdup.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1193 = metadata !{i32 589845, metadata !1191, metadata !"", metadata !1191, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1194, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1194 = metadata !{metadata !1195, metadata !1197}
!1195 = metadata !{i32 589839, metadata !1191, metadata !"", metadata !1191, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1196} ; [ DW_TAG_pointer_type ]
!1196 = metadata !{i32 589860, metadata !1191, metadata !"char", metadata !1191, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1197 = metadata !{i32 589839, metadata !1191, metadata !"", metadata !1191, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1198} ; [ DW_TAG_pointer_type ]
!1198 = metadata !{i32 589862, metadata !1191, metadata !"", metadata !1191, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1196} ; [ DW_TAG_const_type ]
!1199 = metadata !{i32 589870, i32 0, metadata !1200, metadata !"strlen", metadata !"strlen", metadata !"strlen", metadata !1200, i32 19, metadata !1202, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*)* @strlen} ; [ DW_TAG_subprogram 
!1200 = metadata !{i32 589865, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1201} ; [ DW_TAG_file_type ]
!1201 = metadata !{i32 589841, i32 0, i32 1, metadata !"strlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1202 = metadata !{i32 589845, metadata !1200, metadata !"", metadata !1200, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1203, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1203 = metadata !{metadata !1204, metadata !1207}
!1204 = metadata !{i32 589846, metadata !1205, metadata !"size_t", metadata !1205, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1206} ; [ DW_TAG_typedef ]
!1205 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1201} ; [ DW_TAG_file_type ]
!1206 = metadata !{i32 589860, metadata !1200, metadata !"long unsigned int", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1207 = metadata !{i32 589839, metadata !1200, metadata !"", metadata !1200, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1208} ; [ DW_TAG_pointer_type ]
!1208 = metadata !{i32 589862, metadata !1200, metadata !"", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1209} ; [ DW_TAG_const_type ]
!1209 = metadata !{i32 589860, metadata !1200, metadata !"char", metadata !1200, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1210 = metadata !{i32 589870, i32 0, metadata !1211, metadata !"strncmp", metadata !"strncmp", metadata !"strncmp", metadata !1211, i32 18, metadata !1213, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i8*, i64)* @strncmp} ; [ DW_T
!1211 = metadata !{i32 589865, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1212} ; [ DW_TAG_file_type ]
!1212 = metadata !{i32 589841, i32 0, i32 1, metadata !"strncmp.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1213 = metadata !{i32 589845, metadata !1211, metadata !"", metadata !1211, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1214, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1214 = metadata !{metadata !1215, metadata !1216, metadata !1216, metadata !1219}
!1215 = metadata !{i32 589860, metadata !1211, metadata !"int", metadata !1211, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1216 = metadata !{i32 589839, metadata !1211, metadata !"", metadata !1211, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1217} ; [ DW_TAG_pointer_type ]
!1217 = metadata !{i32 589862, metadata !1211, metadata !"", metadata !1211, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1218} ; [ DW_TAG_const_type ]
!1218 = metadata !{i32 589860, metadata !1211, metadata !"char", metadata !1211, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1219 = metadata !{i32 589846, metadata !1220, metadata !"size_t", metadata !1220, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1221} ; [ DW_TAG_typedef ]
!1220 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1212} ; [ DW_TAG_file_type ]
!1221 = metadata !{i32 589860, metadata !1211, metadata !"long unsigned int", metadata !1211, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1222 = metadata !{i32 589870, i32 0, metadata !1223, metadata !"strnlen", metadata !"strnlen", metadata !"strnlen", metadata !1223, i32 21, metadata !1225, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64)* @strnlen} ; [ DW_TAG_su
!1223 = metadata !{i32 589865, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1224} ; [ DW_TAG_file_type ]
!1224 = metadata !{i32 589841, i32 0, i32 1, metadata !"strnlen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1225 = metadata !{i32 589845, metadata !1223, metadata !"", metadata !1223, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1226, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1226 = metadata !{metadata !1227, metadata !1230, metadata !1227}
!1227 = metadata !{i32 589846, metadata !1228, metadata !"size_t", metadata !1228, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1229} ; [ DW_TAG_typedef ]
!1228 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1224} ; [ DW_TAG_file_type ]
!1229 = metadata !{i32 589860, metadata !1223, metadata !"long unsigned int", metadata !1223, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1230 = metadata !{i32 589839, metadata !1223, metadata !"", metadata !1223, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1231} ; [ DW_TAG_pointer_type ]
!1231 = metadata !{i32 589862, metadata !1223, metadata !"", metadata !1223, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1232} ; [ DW_TAG_const_type ]
!1232 = metadata !{i32 589860, metadata !1223, metadata !"char", metadata !1223, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1233 = metadata !{i32 589870, i32 0, metadata !1234, metadata !"strrchr", metadata !"strrchr", metadata !"strrchr", metadata !1234, i32 18, metadata !1236, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32)* @strrchr} ; [ DW_TAG_su
!1234 = metadata !{i32 589865, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1235} ; [ DW_TAG_file_type ]
!1235 = metadata !{i32 589841, i32 0, i32 1, metadata !"strrchr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1236 = metadata !{i32 589845, metadata !1234, metadata !"", metadata !1234, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1237, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1237 = metadata !{metadata !1238, metadata !1240, metadata !1242}
!1238 = metadata !{i32 589839, metadata !1234, metadata !"", metadata !1234, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1239} ; [ DW_TAG_pointer_type ]
!1239 = metadata !{i32 589860, metadata !1234, metadata !"char", metadata !1234, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1240 = metadata !{i32 589839, metadata !1234, metadata !"", metadata !1234, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1241} ; [ DW_TAG_pointer_type ]
!1241 = metadata !{i32 589862, metadata !1234, metadata !"", metadata !1234, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1239} ; [ DW_TAG_const_type ]
!1242 = metadata !{i32 589860, metadata !1234, metadata !"int", metadata !1234, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1243 = metadata !{i32 589870, i32 0, metadata !1244, metadata !"ungetc", metadata !"ungetc", metadata !"ungetc", metadata !1244, i32 29, metadata !1246, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %4*)* @ungetc} ; [ DW_TAG_subpro
!1244 = metadata !{i32 589865, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1245} ; [ DW_TAG_file_type ]
!1245 = metadata !{i32 589841, i32 0, i32 1, metadata !"ungetc.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1246 = metadata !{i32 589845, metadata !1244, metadata !"", metadata !1244, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1247, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1247 = metadata !{metadata !1248, metadata !1248, metadata !1249}
!1248 = metadata !{i32 589860, metadata !1244, metadata !"int", metadata !1244, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1249 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1250} ; [ DW_TAG_pointer_type ]
!1250 = metadata !{i32 589846, metadata !1251, metadata !"FILE", metadata !1251, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1252} ; [ DW_TAG_typedef ]
!1251 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1245} ; [ DW_TAG_file_type ]
!1252 = metadata !{i32 589843, metadata !1244, metadata !"__STDIO_FILE_STRUCT", metadata !1251, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1253, i32 0, null} ; [ DW_TAG_structure_type ]
!1253 = metadata !{metadata !1254, metadata !1257, metadata !1260, metadata !1261, metadata !1263, metadata !1264, metadata !1265, metadata !1266, metadata !1267, metadata !1268, metadata !1270, metadata !1274}
!1254 = metadata !{i32 589837, metadata !1252, metadata !"__modeflags", metadata !1255, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1256} ; [ DW_TAG_member ]
!1255 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1245} ; [ DW_TAG_file_type ]
!1256 = metadata !{i32 589860, metadata !1244, metadata !"short unsigned int", metadata !1244, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1257 = metadata !{i32 589837, metadata !1252, metadata !"__ungot_width", metadata !1255, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1258} ; [ DW_TAG_member ]
!1258 = metadata !{i32 589825, metadata !1244, metadata !"", metadata !1244, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1259, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1259 = metadata !{i32 589860, metadata !1244, metadata !"unsigned char", metadata !1244, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1260 = metadata !{i32 589837, metadata !1252, metadata !"__filedes", metadata !1255, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1248} ; [ DW_TAG_member ]
!1261 = metadata !{i32 589837, metadata !1252, metadata !"__bufstart", metadata !1255, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1262 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1259} ; [ DW_TAG_pointer_type ]
!1263 = metadata !{i32 589837, metadata !1252, metadata !"__bufend", metadata !1255, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1264 = metadata !{i32 589837, metadata !1252, metadata !"__bufpos", metadata !1255, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1265 = metadata !{i32 589837, metadata !1252, metadata !"__bufread", metadata !1255, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1266 = metadata !{i32 589837, metadata !1252, metadata !"__bufgetc_u", metadata !1255, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1267 = metadata !{i32 589837, metadata !1252, metadata !"__bufputc_u", metadata !1255, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1262} ; [ DW_TAG_member ]
!1268 = metadata !{i32 589837, metadata !1252, metadata !"__nextopen", metadata !1255, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1269} ; [ DW_TAG_member ]
!1269 = metadata !{i32 589839, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1252} ; [ DW_TAG_pointer_type ]
!1270 = metadata !{i32 589837, metadata !1252, metadata !"__ungot", metadata !1255, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1271} ; [ DW_TAG_member ]
!1271 = metadata !{i32 589825, metadata !1244, metadata !"", metadata !1244, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1272, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1272 = metadata !{i32 589846, metadata !1273, metadata !"wchar_t", metadata !1273, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1248} ; [ DW_TAG_typedef ]
!1273 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1245} ; [ DW_TAG_file_type ]
!1274 = metadata !{i32 589837, metadata !1252, metadata !"__state", metadata !1255, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1275} ; [ DW_TAG_member ]
!1275 = metadata !{i32 589846, metadata !1276, metadata !"__mbstate_t", metadata !1276, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1277} ; [ DW_TAG_typedef ]
!1276 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1245} ; [ DW_TAG_file_type ]
!1277 = metadata !{i32 589843, metadata !1244, metadata !"", metadata !1276, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1278, i32 0, null} ; [ DW_TAG_structure_type ]
!1278 = metadata !{metadata !1279, metadata !1280}
!1279 = metadata !{i32 589837, metadata !1277, metadata !"__mask", metadata !1276, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1272} ; [ DW_TAG_member ]
!1280 = metadata !{i32 589837, metadata !1277, metadata !"__wc", metadata !1276, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1272} ; [ DW_TAG_member ]
!1281 = metadata !{i32 589870, i32 0, metadata !1282, metadata !"vasprintf", metadata !"vasprintf", metadata !"vasprintf", metadata !1282, i32 36, metadata !1284, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8**, i8*, %struct.__va_list
!1282 = metadata !{i32 589865, metadata !"vasprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1283} ; [ DW_TAG_file_type ]
!1283 = metadata !{i32 589841, i32 0, i32 1, metadata !"vasprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1284 = metadata !{i32 589845, metadata !1282, metadata !"", metadata !1282, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1285, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1285 = metadata !{metadata !1286, metadata !1287, metadata !1290, metadata !1292}
!1286 = metadata !{i32 589860, metadata !1282, metadata !"int", metadata !1282, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1287 = metadata !{i32 589839, metadata !1282, metadata !"", metadata !1282, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1288} ; [ DW_TAG_pointer_type ]
!1288 = metadata !{i32 589839, metadata !1282, metadata !"", metadata !1282, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1289} ; [ DW_TAG_pointer_type ]
!1289 = metadata !{i32 589860, metadata !1282, metadata !"char", metadata !1282, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1290 = metadata !{i32 589839, metadata !1282, metadata !"", metadata !1282, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1291} ; [ DW_TAG_pointer_type ]
!1291 = metadata !{i32 589862, metadata !1282, metadata !"", metadata !1282, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1289} ; [ DW_TAG_const_type ]
!1292 = metadata !{i32 589839, metadata !1282, metadata !"", metadata !1282, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1293} ; [ DW_TAG_pointer_type ]
!1293 = metadata !{i32 589843, metadata !1282, metadata !"__va_list_tag", metadata !1294, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !1295, i32 0, null} ; [ DW_TAG_structure_type ]
!1294 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !1283} ; [ DW_TAG_file_type ]
!1295 = metadata !{metadata !1296, metadata !1298, metadata !1299, metadata !1301}
!1296 = metadata !{i32 589837, metadata !1293, metadata !"gp_offset", metadata !1294, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !1297} ; [ DW_TAG_member ]
!1297 = metadata !{i32 589860, metadata !1282, metadata !"unsigned int", metadata !1282, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1298 = metadata !{i32 589837, metadata !1293, metadata !"fp_offset", metadata !1294, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !1297} ; [ DW_TAG_member ]
!1299 = metadata !{i32 589837, metadata !1293, metadata !"overflow_arg_area", metadata !1294, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !1300} ; [ DW_TAG_member ]
!1300 = metadata !{i32 589839, metadata !1282, metadata !"", metadata !1282, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1301 = metadata !{i32 589837, metadata !1293, metadata !"reg_save_area", metadata !1294, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !1300} ; [ DW_TAG_member ]
!1302 = metadata !{i32 589870, i32 0, metadata !1303, metadata !"wcwidth", metadata !"wcwidth", metadata !"wcwidth", metadata !1305, i32 1167, metadata !1306, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @wcwidth} ; [ DW_TAG_subpr
!1303 = metadata !{i32 589865, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1304} ; [ DW_TAG_file_type ]
!1304 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcwidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!1305 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1304} ; [ DW_TAG_file_type ]
!1306 = metadata !{i32 589845, metadata !1303, metadata !"", metadata !1303, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1307, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1307 = metadata !{metadata !1308, metadata !1309}
!1308 = metadata !{i32 589860, metadata !1303, metadata !"int", metadata !1303, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1309 = metadata !{i32 589846, metadata !1310, metadata !"wchar_t", metadata !1310, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1308} ; [ DW_TAG_typedef ]
!1310 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1304} ; [ DW_TAG_file_type ]
!1311 = metadata !{i32 589870, i32 0, metadata !1312, metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !"__h_errno_location", metadata !1312, i32 11, metadata !1314, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32* (
!1312 = metadata !{i32 589865, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !1313} ; [ DW_TAG_file_type ]
!1313 = metadata !{i32 589841, i32 0, i32 1, metadata !"__h_errno_location.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata 
!1314 = metadata !{i32 589845, metadata !1312, metadata !"", metadata !1312, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1315, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1315 = metadata !{metadata !1316}
!1316 = metadata !{i32 589839, metadata !1312, metadata !"", metadata !1312, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1317} ; [ DW_TAG_pointer_type ]
!1317 = metadata !{i32 589860, metadata !1312, metadata !"int", metadata !1312, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1318 = metadata !{i32 589870, i32 0, metadata !1319, metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !"__cxa_atexit", metadata !1321, i32 158, metadata !1322, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (void (i8*)*, i8*, 
!1319 = metadata !{i32 589865, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1320} ; [ DW_TAG_file_type ]
!1320 = metadata !{i32 589841, i32 0, i32 1, metadata !"__cxa_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!1321 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !1320} ; [ DW_TAG_file_type ]
!1322 = metadata !{i32 589845, metadata !1319, metadata !"", metadata !1319, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1323, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1323 = metadata !{metadata !1324, metadata !1325, metadata !1329, metadata !1329}
!1324 = metadata !{i32 589860, metadata !1319, metadata !"int", metadata !1319, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1325 = metadata !{i32 589846, metadata !1321, metadata !"cxaefuncp", metadata !1321, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !1326} ; [ DW_TAG_typedef ]
!1326 = metadata !{i32 589839, metadata !1319, metadata !"", metadata !1319, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1327} ; [ DW_TAG_pointer_type ]
!1327 = metadata !{i32 589845, metadata !1319, metadata !"", metadata !1319, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1328, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1328 = metadata !{null, metadata !1329}
!1329 = metadata !{i32 589839, metadata !1319, metadata !"", metadata !1319, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1330 = metadata !{i32 589870, i32 0, metadata !1331, metadata !"__sigismember", metadata !"__sigismember", metadata !"__sigismember", metadata !1333, i32 117, metadata !1334, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigse
!1331 = metadata !{i32 589865, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1332} ; [ DW_TAG_file_type ]
!1332 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigsetops.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1333 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1332} ; [ DW_TAG_file_type ]
!1334 = metadata !{i32 589845, metadata !1331, metadata !"", metadata !1331, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1335, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1335 = metadata !{metadata !1336, metadata !1337, metadata !1336}
!1336 = metadata !{i32 589860, metadata !1331, metadata !"int", metadata !1331, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1337 = metadata !{i32 589839, metadata !1331, metadata !"", metadata !1331, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1338} ; [ DW_TAG_pointer_type ]
!1338 = metadata !{i32 589846, metadata !1333, metadata !"__sigset_t", metadata !1333, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1339} ; [ DW_TAG_typedef ]
!1339 = metadata !{i32 589843, metadata !1331, metadata !"", metadata !1333, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1340, i32 0, null} ; [ DW_TAG_structure_type ]
!1340 = metadata !{metadata !1341}
!1341 = metadata !{i32 589837, metadata !1339, metadata !"__val", metadata !1333, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1342} ; [ DW_TAG_member ]
!1342 = metadata !{i32 589825, metadata !1331, metadata !"", metadata !1331, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1343, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!1343 = metadata !{i32 589860, metadata !1331, metadata !"long unsigned int", metadata !1331, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1344 = metadata !{metadata !1345}
!1345 = metadata !{i32 589857, i64 0, i64 15}     ; [ DW_TAG_subrange_type ]
!1346 = metadata !{i32 589870, i32 0, metadata !1331, metadata !"__sigaddset", metadata !"__sigaddset", metadata !"__sigaddset", metadata !1333, i32 118, metadata !1334, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1347 = metadata !{i32 589870, i32 0, metadata !1331, metadata !"__sigdelset", metadata !"__sigdelset", metadata !"__sigdelset", metadata !1333, i32 119, metadata !1334, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.__sigset_t*, 
!1348 = metadata !{i32 589870, i32 0, metadata !1349, metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !"__stdio_READ", metadata !1349, i32 28, metadata !1351, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* @__
!1349 = metadata !{i32 589865, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1350} ; [ DW_TAG_file_type ]
!1350 = metadata !{i32 589841, i32 0, i32 1, metadata !"_READ.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TAG
!1351 = metadata !{i32 589845, metadata !1349, metadata !"", metadata !1349, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1352, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1352 = metadata !{metadata !1353, metadata !1356, metadata !1370, metadata !1353}
!1353 = metadata !{i32 589846, metadata !1354, metadata !"size_t", metadata !1354, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1355} ; [ DW_TAG_typedef ]
!1354 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1350} ; [ DW_TAG_file_type ]
!1355 = metadata !{i32 589860, metadata !1349, metadata !"long unsigned int", metadata !1349, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1356 = metadata !{i32 589839, metadata !1349, metadata !"", metadata !1349, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1357} ; [ DW_TAG_pointer_type ]
!1357 = metadata !{i32 589846, metadata !1358, metadata !"FILE", metadata !1358, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1359} ; [ DW_TAG_typedef ]
!1358 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1350} ; [ DW_TAG_file_type ]
!1359 = metadata !{i32 589843, metadata !1349, metadata !"__STDIO_FILE_STRUCT", metadata !1358, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1360, i32 0, null} ; [ DW_TAG_structure_type ]
!1360 = metadata !{metadata !1361, metadata !1364, metadata !1367, metadata !1369, metadata !1371, metadata !1372, metadata !1373, metadata !1374, metadata !1375, metadata !1376, metadata !1378, metadata !1381}
!1361 = metadata !{i32 589837, metadata !1359, metadata !"__modeflags", metadata !1362, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1363} ; [ DW_TAG_member ]
!1362 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1350} ; [ DW_TAG_file_type ]
!1363 = metadata !{i32 589860, metadata !1349, metadata !"short unsigned int", metadata !1349, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1364 = metadata !{i32 589837, metadata !1359, metadata !"__ungot_width", metadata !1362, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1365} ; [ DW_TAG_member ]
!1365 = metadata !{i32 589825, metadata !1349, metadata !"", metadata !1349, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1366, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1366 = metadata !{i32 589860, metadata !1349, metadata !"unsigned char", metadata !1349, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1367 = metadata !{i32 589837, metadata !1359, metadata !"__filedes", metadata !1362, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1368} ; [ DW_TAG_member ]
!1368 = metadata !{i32 589860, metadata !1349, metadata !"int", metadata !1349, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1369 = metadata !{i32 589837, metadata !1359, metadata !"__bufstart", metadata !1362, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1370 = metadata !{i32 589839, metadata !1349, metadata !"", metadata !1349, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1366} ; [ DW_TAG_pointer_type ]
!1371 = metadata !{i32 589837, metadata !1359, metadata !"__bufend", metadata !1362, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1372 = metadata !{i32 589837, metadata !1359, metadata !"__bufpos", metadata !1362, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1373 = metadata !{i32 589837, metadata !1359, metadata !"__bufread", metadata !1362, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1374 = metadata !{i32 589837, metadata !1359, metadata !"__bufgetc_u", metadata !1362, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1375 = metadata !{i32 589837, metadata !1359, metadata !"__bufputc_u", metadata !1362, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1370} ; [ DW_TAG_member ]
!1376 = metadata !{i32 589837, metadata !1359, metadata !"__nextopen", metadata !1362, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1377} ; [ DW_TAG_member ]
!1377 = metadata !{i32 589839, metadata !1349, metadata !"", metadata !1349, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1359} ; [ DW_TAG_pointer_type ]
!1378 = metadata !{i32 589837, metadata !1359, metadata !"__ungot", metadata !1362, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1379} ; [ DW_TAG_member ]
!1379 = metadata !{i32 589825, metadata !1349, metadata !"", metadata !1349, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1380, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1380 = metadata !{i32 589846, metadata !1354, metadata !"wchar_t", metadata !1354, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1368} ; [ DW_TAG_typedef ]
!1381 = metadata !{i32 589837, metadata !1359, metadata !"__state", metadata !1362, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1382} ; [ DW_TAG_member ]
!1382 = metadata !{i32 589846, metadata !1383, metadata !"__mbstate_t", metadata !1383, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1384} ; [ DW_TAG_typedef ]
!1383 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1350} ; [ DW_TAG_file_type ]
!1384 = metadata !{i32 589843, metadata !1349, metadata !"", metadata !1383, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1385, i32 0, null} ; [ DW_TAG_structure_type ]
!1385 = metadata !{metadata !1386, metadata !1387}
!1386 = metadata !{i32 589837, metadata !1384, metadata !"__mask", metadata !1383, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1380} ; [ DW_TAG_member ]
!1387 = metadata !{i32 589837, metadata !1384, metadata !"__wc", metadata !1383, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1380} ; [ DW_TAG_member ]
!1388 = metadata !{i32 589870, i32 0, metadata !1389, metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !"__stdio_WRITE", metadata !1389, i32 35, metadata !1391, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i8*, i64)* 
!1389 = metadata !{i32 589865, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1390} ; [ DW_TAG_file_type ]
!1390 = metadata !{i32 589841, i32 0, i32 1, metadata !"_WRITE.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1391 = metadata !{i32 589845, metadata !1389, metadata !"", metadata !1389, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1392, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1392 = metadata !{metadata !1393, metadata !1396, metadata !1428, metadata !1393}
!1393 = metadata !{i32 589846, metadata !1394, metadata !"size_t", metadata !1394, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1395} ; [ DW_TAG_typedef ]
!1394 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1390} ; [ DW_TAG_file_type ]
!1395 = metadata !{i32 589860, metadata !1389, metadata !"long unsigned int", metadata !1389, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1396 = metadata !{i32 589839, metadata !1389, metadata !"", metadata !1389, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1397} ; [ DW_TAG_pointer_type ]
!1397 = metadata !{i32 589846, metadata !1398, metadata !"FILE", metadata !1398, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1399} ; [ DW_TAG_typedef ]
!1398 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1390} ; [ DW_TAG_file_type ]
!1399 = metadata !{i32 589843, metadata !1389, metadata !"__STDIO_FILE_STRUCT", metadata !1398, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1400, i32 0, null} ; [ DW_TAG_structure_type ]
!1400 = metadata !{metadata !1401, metadata !1404, metadata !1407, metadata !1409, metadata !1411, metadata !1412, metadata !1413, metadata !1414, metadata !1415, metadata !1416, metadata !1418, metadata !1421}
!1401 = metadata !{i32 589837, metadata !1399, metadata !"__modeflags", metadata !1402, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1403} ; [ DW_TAG_member ]
!1402 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1390} ; [ DW_TAG_file_type ]
!1403 = metadata !{i32 589860, metadata !1389, metadata !"short unsigned int", metadata !1389, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1404 = metadata !{i32 589837, metadata !1399, metadata !"__ungot_width", metadata !1402, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1405} ; [ DW_TAG_member ]
!1405 = metadata !{i32 589825, metadata !1389, metadata !"", metadata !1389, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1406, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1406 = metadata !{i32 589860, metadata !1389, metadata !"unsigned char", metadata !1389, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1407 = metadata !{i32 589837, metadata !1399, metadata !"__filedes", metadata !1402, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1408} ; [ DW_TAG_member ]
!1408 = metadata !{i32 589860, metadata !1389, metadata !"int", metadata !1389, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1409 = metadata !{i32 589837, metadata !1399, metadata !"__bufstart", metadata !1402, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1410 = metadata !{i32 589839, metadata !1389, metadata !"", metadata !1389, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1406} ; [ DW_TAG_pointer_type ]
!1411 = metadata !{i32 589837, metadata !1399, metadata !"__bufend", metadata !1402, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1412 = metadata !{i32 589837, metadata !1399, metadata !"__bufpos", metadata !1402, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1413 = metadata !{i32 589837, metadata !1399, metadata !"__bufread", metadata !1402, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1414 = metadata !{i32 589837, metadata !1399, metadata !"__bufgetc_u", metadata !1402, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1415 = metadata !{i32 589837, metadata !1399, metadata !"__bufputc_u", metadata !1402, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1410} ; [ DW_TAG_member ]
!1416 = metadata !{i32 589837, metadata !1399, metadata !"__nextopen", metadata !1402, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1417} ; [ DW_TAG_member ]
!1417 = metadata !{i32 589839, metadata !1389, metadata !"", metadata !1389, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1399} ; [ DW_TAG_pointer_type ]
!1418 = metadata !{i32 589837, metadata !1399, metadata !"__ungot", metadata !1402, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1419} ; [ DW_TAG_member ]
!1419 = metadata !{i32 589825, metadata !1389, metadata !"", metadata !1389, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1420, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1420 = metadata !{i32 589846, metadata !1394, metadata !"wchar_t", metadata !1394, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1408} ; [ DW_TAG_typedef ]
!1421 = metadata !{i32 589837, metadata !1399, metadata !"__state", metadata !1402, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1422} ; [ DW_TAG_member ]
!1422 = metadata !{i32 589846, metadata !1423, metadata !"__mbstate_t", metadata !1423, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1424} ; [ DW_TAG_typedef ]
!1423 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1390} ; [ DW_TAG_file_type ]
!1424 = metadata !{i32 589843, metadata !1389, metadata !"", metadata !1423, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1425, i32 0, null} ; [ DW_TAG_structure_type ]
!1425 = metadata !{metadata !1426, metadata !1427}
!1426 = metadata !{i32 589837, metadata !1424, metadata !"__mask", metadata !1423, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1420} ; [ DW_TAG_member ]
!1427 = metadata !{i32 589837, metadata !1424, metadata !"__wc", metadata !1423, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1420} ; [ DW_TAG_member ]
!1428 = metadata !{i32 589839, metadata !1389, metadata !"", metadata !1389, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1429} ; [ DW_TAG_pointer_type ]
!1429 = metadata !{i32 589862, metadata !1389, metadata !"", metadata !1389, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1406} ; [ DW_TAG_const_type ]
!1430 = metadata !{i32 589870, i32 0, metadata !1431, metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !"__stdio_fwrite", metadata !1431, i32 21, metadata !1433, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i64, %4*
!1431 = metadata !{i32 589865, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1432} ; [ DW_TAG_file_type ]
!1432 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fwrite.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1433 = metadata !{i32 589845, metadata !1431, metadata !"", metadata !1431, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1434, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1434 = metadata !{metadata !1435, metadata !1438, metadata !1435, metadata !1441}
!1435 = metadata !{i32 589846, metadata !1436, metadata !"size_t", metadata !1436, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1437} ; [ DW_TAG_typedef ]
!1436 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1432} ; [ DW_TAG_file_type ]
!1437 = metadata !{i32 589860, metadata !1431, metadata !"long unsigned int", metadata !1431, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1438 = metadata !{i32 589839, metadata !1431, metadata !"", metadata !1431, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1439} ; [ DW_TAG_pointer_type ]
!1439 = metadata !{i32 589862, metadata !1431, metadata !"", metadata !1431, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1440} ; [ DW_TAG_const_type ]
!1440 = metadata !{i32 589860, metadata !1431, metadata !"unsigned char", metadata !1431, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1441 = metadata !{i32 589839, metadata !1431, metadata !"", metadata !1431, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1442} ; [ DW_TAG_pointer_type ]
!1442 = metadata !{i32 589846, metadata !1443, metadata !"FILE", metadata !1443, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1444} ; [ DW_TAG_typedef ]
!1443 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1432} ; [ DW_TAG_file_type ]
!1444 = metadata !{i32 589843, metadata !1431, metadata !"__STDIO_FILE_STRUCT", metadata !1443, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1445, i32 0, null} ; [ DW_TAG_structure_type ]
!1445 = metadata !{metadata !1446, metadata !1449, metadata !1451, metadata !1453, metadata !1455, metadata !1456, metadata !1457, metadata !1458, metadata !1459, metadata !1460, metadata !1462, metadata !1465}
!1446 = metadata !{i32 589837, metadata !1444, metadata !"__modeflags", metadata !1447, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1448} ; [ DW_TAG_member ]
!1447 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1432} ; [ DW_TAG_file_type ]
!1448 = metadata !{i32 589860, metadata !1431, metadata !"short unsigned int", metadata !1431, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1449 = metadata !{i32 589837, metadata !1444, metadata !"__ungot_width", metadata !1447, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1450} ; [ DW_TAG_member ]
!1450 = metadata !{i32 589825, metadata !1431, metadata !"", metadata !1431, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1440, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1451 = metadata !{i32 589837, metadata !1444, metadata !"__filedes", metadata !1447, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1452} ; [ DW_TAG_member ]
!1452 = metadata !{i32 589860, metadata !1431, metadata !"int", metadata !1431, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1453 = metadata !{i32 589837, metadata !1444, metadata !"__bufstart", metadata !1447, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1454 = metadata !{i32 589839, metadata !1431, metadata !"", metadata !1431, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1440} ; [ DW_TAG_pointer_type ]
!1455 = metadata !{i32 589837, metadata !1444, metadata !"__bufend", metadata !1447, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1456 = metadata !{i32 589837, metadata !1444, metadata !"__bufpos", metadata !1447, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1457 = metadata !{i32 589837, metadata !1444, metadata !"__bufread", metadata !1447, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1458 = metadata !{i32 589837, metadata !1444, metadata !"__bufgetc_u", metadata !1447, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1459 = metadata !{i32 589837, metadata !1444, metadata !"__bufputc_u", metadata !1447, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1454} ; [ DW_TAG_member ]
!1460 = metadata !{i32 589837, metadata !1444, metadata !"__nextopen", metadata !1447, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1461} ; [ DW_TAG_member ]
!1461 = metadata !{i32 589839, metadata !1431, metadata !"", metadata !1431, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1444} ; [ DW_TAG_pointer_type ]
!1462 = metadata !{i32 589837, metadata !1444, metadata !"__ungot", metadata !1447, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1463} ; [ DW_TAG_member ]
!1463 = metadata !{i32 589825, metadata !1431, metadata !"", metadata !1431, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1464, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1464 = metadata !{i32 589846, metadata !1436, metadata !"wchar_t", metadata !1436, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1452} ; [ DW_TAG_typedef ]
!1465 = metadata !{i32 589837, metadata !1444, metadata !"__state", metadata !1447, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1466} ; [ DW_TAG_member ]
!1466 = metadata !{i32 589846, metadata !1467, metadata !"__mbstate_t", metadata !1467, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1468} ; [ DW_TAG_typedef ]
!1467 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1432} ; [ DW_TAG_file_type ]
!1468 = metadata !{i32 589843, metadata !1431, metadata !"", metadata !1467, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1469, i32 0, null} ; [ DW_TAG_structure_type ]
!1469 = metadata !{metadata !1470, metadata !1471}
!1470 = metadata !{i32 589837, metadata !1468, metadata !"__mask", metadata !1467, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1464} ; [ DW_TAG_member ]
!1471 = metadata !{i32 589837, metadata !1468, metadata !"__wc", metadata !1467, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1464} ; [ DW_TAG_member ]
!1472 = metadata !{i32 589870, i32 0, metadata !1473, metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !"__stdio_rfill", metadata !1473, i32 23, metadata !1475, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__stdio_r
!1473 = metadata !{i32 589865, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1474} ; [ DW_TAG_file_type ]
!1474 = metadata !{i32 589841, i32 0, i32 1, metadata !"_rfill.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1475 = metadata !{i32 589845, metadata !1473, metadata !"", metadata !1473, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1476, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1476 = metadata !{metadata !1477, metadata !1480}
!1477 = metadata !{i32 589846, metadata !1478, metadata !"size_t", metadata !1478, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1479} ; [ DW_TAG_typedef ]
!1478 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1474} ; [ DW_TAG_file_type ]
!1479 = metadata !{i32 589860, metadata !1473, metadata !"long unsigned int", metadata !1473, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1480 = metadata !{i32 589839, metadata !1473, metadata !"", metadata !1473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1481} ; [ DW_TAG_pointer_type ]
!1481 = metadata !{i32 589846, metadata !1482, metadata !"FILE", metadata !1482, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1483} ; [ DW_TAG_typedef ]
!1482 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1474} ; [ DW_TAG_file_type ]
!1483 = metadata !{i32 589843, metadata !1473, metadata !"__STDIO_FILE_STRUCT", metadata !1482, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1484, i32 0, null} ; [ DW_TAG_structure_type ]
!1484 = metadata !{metadata !1485, metadata !1488, metadata !1491, metadata !1493, metadata !1495, metadata !1496, metadata !1497, metadata !1498, metadata !1499, metadata !1500, metadata !1502, metadata !1505}
!1485 = metadata !{i32 589837, metadata !1483, metadata !"__modeflags", metadata !1486, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1487} ; [ DW_TAG_member ]
!1486 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1474} ; [ DW_TAG_file_type ]
!1487 = metadata !{i32 589860, metadata !1473, metadata !"short unsigned int", metadata !1473, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1488 = metadata !{i32 589837, metadata !1483, metadata !"__ungot_width", metadata !1486, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1489} ; [ DW_TAG_member ]
!1489 = metadata !{i32 589825, metadata !1473, metadata !"", metadata !1473, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1490, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1490 = metadata !{i32 589860, metadata !1473, metadata !"unsigned char", metadata !1473, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1491 = metadata !{i32 589837, metadata !1483, metadata !"__filedes", metadata !1486, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1492} ; [ DW_TAG_member ]
!1492 = metadata !{i32 589860, metadata !1473, metadata !"int", metadata !1473, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1493 = metadata !{i32 589837, metadata !1483, metadata !"__bufstart", metadata !1486, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1494 = metadata !{i32 589839, metadata !1473, metadata !"", metadata !1473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1490} ; [ DW_TAG_pointer_type ]
!1495 = metadata !{i32 589837, metadata !1483, metadata !"__bufend", metadata !1486, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1496 = metadata !{i32 589837, metadata !1483, metadata !"__bufpos", metadata !1486, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1497 = metadata !{i32 589837, metadata !1483, metadata !"__bufread", metadata !1486, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1498 = metadata !{i32 589837, metadata !1483, metadata !"__bufgetc_u", metadata !1486, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1499 = metadata !{i32 589837, metadata !1483, metadata !"__bufputc_u", metadata !1486, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1494} ; [ DW_TAG_member ]
!1500 = metadata !{i32 589837, metadata !1483, metadata !"__nextopen", metadata !1486, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1501} ; [ DW_TAG_member ]
!1501 = metadata !{i32 589839, metadata !1473, metadata !"", metadata !1473, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1483} ; [ DW_TAG_pointer_type ]
!1502 = metadata !{i32 589837, metadata !1483, metadata !"__ungot", metadata !1486, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1503} ; [ DW_TAG_member ]
!1503 = metadata !{i32 589825, metadata !1473, metadata !"", metadata !1473, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1504, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1504 = metadata !{i32 589846, metadata !1478, metadata !"wchar_t", metadata !1478, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1492} ; [ DW_TAG_typedef ]
!1505 = metadata !{i32 589837, metadata !1483, metadata !"__state", metadata !1486, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1506} ; [ DW_TAG_member ]
!1506 = metadata !{i32 589846, metadata !1507, metadata !"__mbstate_t", metadata !1507, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1508} ; [ DW_TAG_typedef ]
!1507 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1474} ; [ DW_TAG_file_type ]
!1508 = metadata !{i32 589843, metadata !1473, metadata !"", metadata !1507, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1509, i32 0, null} ; [ DW_TAG_structure_type ]
!1509 = metadata !{metadata !1510, metadata !1511}
!1510 = metadata !{i32 589837, metadata !1508, metadata !"__mask", metadata !1507, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1504} ; [ DW_TAG_member ]
!1511 = metadata !{i32 589837, metadata !1508, metadata !"__wc", metadata !1507, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1504} ; [ DW_TAG_member ]
!1512 = metadata !{i32 589870, i32 0, metadata !1513, metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !"__stdio_trans2r_o", metadata !1513, i32 29, metadata !1515, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1513 = metadata !{i32 589865, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1514} ; [ DW_TAG_file_type ]
!1514 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1515 = metadata !{i32 589845, metadata !1513, metadata !"", metadata !1513, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1516, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1516 = metadata !{metadata !1517, metadata !1518, metadata !1517}
!1517 = metadata !{i32 589860, metadata !1513, metadata !"int", metadata !1513, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1518 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1519} ; [ DW_TAG_pointer_type ]
!1519 = metadata !{i32 589846, metadata !1520, metadata !"FILE", metadata !1520, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1521} ; [ DW_TAG_typedef ]
!1520 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1514} ; [ DW_TAG_file_type ]
!1521 = metadata !{i32 589843, metadata !1513, metadata !"__STDIO_FILE_STRUCT", metadata !1520, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1522, i32 0, null} ; [ DW_TAG_structure_type ]
!1522 = metadata !{metadata !1523, metadata !1526, metadata !1529, metadata !1530, metadata !1532, metadata !1533, metadata !1534, metadata !1535, metadata !1536, metadata !1537, metadata !1539, metadata !1543}
!1523 = metadata !{i32 589837, metadata !1521, metadata !"__modeflags", metadata !1524, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1525} ; [ DW_TAG_member ]
!1524 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1514} ; [ DW_TAG_file_type ]
!1525 = metadata !{i32 589860, metadata !1513, metadata !"short unsigned int", metadata !1513, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1526 = metadata !{i32 589837, metadata !1521, metadata !"__ungot_width", metadata !1524, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1527} ; [ DW_TAG_member ]
!1527 = metadata !{i32 589825, metadata !1513, metadata !"", metadata !1513, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1528, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1528 = metadata !{i32 589860, metadata !1513, metadata !"unsigned char", metadata !1513, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1529 = metadata !{i32 589837, metadata !1521, metadata !"__filedes", metadata !1524, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1517} ; [ DW_TAG_member ]
!1530 = metadata !{i32 589837, metadata !1521, metadata !"__bufstart", metadata !1524, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1531 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1528} ; [ DW_TAG_pointer_type ]
!1532 = metadata !{i32 589837, metadata !1521, metadata !"__bufend", metadata !1524, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1533 = metadata !{i32 589837, metadata !1521, metadata !"__bufpos", metadata !1524, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1534 = metadata !{i32 589837, metadata !1521, metadata !"__bufread", metadata !1524, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1535 = metadata !{i32 589837, metadata !1521, metadata !"__bufgetc_u", metadata !1524, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1536 = metadata !{i32 589837, metadata !1521, metadata !"__bufputc_u", metadata !1524, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1531} ; [ DW_TAG_member ]
!1537 = metadata !{i32 589837, metadata !1521, metadata !"__nextopen", metadata !1524, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1538} ; [ DW_TAG_member ]
!1538 = metadata !{i32 589839, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1521} ; [ DW_TAG_pointer_type ]
!1539 = metadata !{i32 589837, metadata !1521, metadata !"__ungot", metadata !1524, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1540} ; [ DW_TAG_member ]
!1540 = metadata !{i32 589825, metadata !1513, metadata !"", metadata !1513, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1541, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1541 = metadata !{i32 589846, metadata !1542, metadata !"wchar_t", metadata !1542, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1517} ; [ DW_TAG_typedef ]
!1542 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1514} ; [ DW_TAG_file_type ]
!1543 = metadata !{i32 589837, metadata !1521, metadata !"__state", metadata !1524, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1544} ; [ DW_TAG_member ]
!1544 = metadata !{i32 589846, metadata !1545, metadata !"__mbstate_t", metadata !1545, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1546} ; [ DW_TAG_typedef ]
!1545 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1514} ; [ DW_TAG_file_type ]
!1546 = metadata !{i32 589843, metadata !1513, metadata !"", metadata !1545, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1547, i32 0, null} ; [ DW_TAG_structure_type ]
!1547 = metadata !{metadata !1548, metadata !1549}
!1548 = metadata !{i32 589837, metadata !1546, metadata !"__mask", metadata !1545, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1541} ; [ DW_TAG_member ]
!1549 = metadata !{i32 589837, metadata !1546, metadata !"__wc", metadata !1545, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1541} ; [ DW_TAG_member ]
!1550 = metadata !{i32 589870, i32 0, metadata !1551, metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !"__stdio_trans2w_o", metadata !1551, i32 30, metadata !1553, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*,
!1551 = metadata !{i32 589865, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1552} ; [ DW_TAG_file_type ]
!1552 = metadata !{i32 589841, i32 0, i32 1, metadata !"_trans2w.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1553 = metadata !{i32 589845, metadata !1551, metadata !"", metadata !1551, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1554, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1554 = metadata !{metadata !1555, metadata !1556, metadata !1555}
!1555 = metadata !{i32 589860, metadata !1551, metadata !"int", metadata !1551, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1556 = metadata !{i32 589839, metadata !1551, metadata !"", metadata !1551, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1557} ; [ DW_TAG_pointer_type ]
!1557 = metadata !{i32 589846, metadata !1558, metadata !"FILE", metadata !1558, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1559} ; [ DW_TAG_typedef ]
!1558 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1552} ; [ DW_TAG_file_type ]
!1559 = metadata !{i32 589843, metadata !1551, metadata !"__STDIO_FILE_STRUCT", metadata !1558, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1560, i32 0, null} ; [ DW_TAG_structure_type ]
!1560 = metadata !{metadata !1561, metadata !1564, metadata !1567, metadata !1568, metadata !1570, metadata !1571, metadata !1572, metadata !1573, metadata !1574, metadata !1575, metadata !1577, metadata !1581}
!1561 = metadata !{i32 589837, metadata !1559, metadata !"__modeflags", metadata !1562, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1563} ; [ DW_TAG_member ]
!1562 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1552} ; [ DW_TAG_file_type ]
!1563 = metadata !{i32 589860, metadata !1551, metadata !"short unsigned int", metadata !1551, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1564 = metadata !{i32 589837, metadata !1559, metadata !"__ungot_width", metadata !1562, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1565} ; [ DW_TAG_member ]
!1565 = metadata !{i32 589825, metadata !1551, metadata !"", metadata !1551, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1566, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1566 = metadata !{i32 589860, metadata !1551, metadata !"unsigned char", metadata !1551, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1567 = metadata !{i32 589837, metadata !1559, metadata !"__filedes", metadata !1562, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1555} ; [ DW_TAG_member ]
!1568 = metadata !{i32 589837, metadata !1559, metadata !"__bufstart", metadata !1562, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1569 = metadata !{i32 589839, metadata !1551, metadata !"", metadata !1551, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1566} ; [ DW_TAG_pointer_type ]
!1570 = metadata !{i32 589837, metadata !1559, metadata !"__bufend", metadata !1562, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1571 = metadata !{i32 589837, metadata !1559, metadata !"__bufpos", metadata !1562, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1572 = metadata !{i32 589837, metadata !1559, metadata !"__bufread", metadata !1562, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1573 = metadata !{i32 589837, metadata !1559, metadata !"__bufgetc_u", metadata !1562, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1574 = metadata !{i32 589837, metadata !1559, metadata !"__bufputc_u", metadata !1562, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1569} ; [ DW_TAG_member ]
!1575 = metadata !{i32 589837, metadata !1559, metadata !"__nextopen", metadata !1562, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1576} ; [ DW_TAG_member ]
!1576 = metadata !{i32 589839, metadata !1551, metadata !"", metadata !1551, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1559} ; [ DW_TAG_pointer_type ]
!1577 = metadata !{i32 589837, metadata !1559, metadata !"__ungot", metadata !1562, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1578} ; [ DW_TAG_member ]
!1578 = metadata !{i32 589825, metadata !1551, metadata !"", metadata !1551, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1579, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1579 = metadata !{i32 589846, metadata !1580, metadata !"wchar_t", metadata !1580, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1555} ; [ DW_TAG_typedef ]
!1580 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1552} ; [ DW_TAG_file_type ]
!1581 = metadata !{i32 589837, metadata !1559, metadata !"__state", metadata !1562, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1582} ; [ DW_TAG_member ]
!1582 = metadata !{i32 589846, metadata !1583, metadata !"__mbstate_t", metadata !1583, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1584} ; [ DW_TAG_typedef ]
!1583 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1552} ; [ DW_TAG_file_type ]
!1584 = metadata !{i32 589843, metadata !1551, metadata !"", metadata !1583, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1585, i32 0, null} ; [ DW_TAG_structure_type ]
!1585 = metadata !{metadata !1586, metadata !1587}
!1586 = metadata !{i32 589837, metadata !1584, metadata !"__mask", metadata !1583, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1579} ; [ DW_TAG_member ]
!1587 = metadata !{i32 589837, metadata !1584, metadata !"__wc", metadata !1583, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1579} ; [ DW_TAG_member ]
!1588 = metadata !{i32 589870, i32 0, metadata !1589, metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !"__stdio_wcommit", metadata !1589, i32 18, metadata !1591, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*)* @__s
!1589 = metadata !{i32 589865, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1590} ; [ DW_TAG_file_type ]
!1590 = metadata !{i32 589841, i32 0, i32 1, metadata !"_wcommit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1591 = metadata !{i32 589845, metadata !1589, metadata !"", metadata !1589, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1592, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1592 = metadata !{metadata !1593, metadata !1596}
!1593 = metadata !{i32 589846, metadata !1594, metadata !"size_t", metadata !1594, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1595} ; [ DW_TAG_typedef ]
!1594 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1590} ; [ DW_TAG_file_type ]
!1595 = metadata !{i32 589860, metadata !1589, metadata !"long unsigned int", metadata !1589, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1596 = metadata !{i32 589839, metadata !1589, metadata !"", metadata !1589, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1597} ; [ DW_TAG_pointer_type ]
!1597 = metadata !{i32 589846, metadata !1598, metadata !"FILE", metadata !1598, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1599} ; [ DW_TAG_typedef ]
!1598 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1590} ; [ DW_TAG_file_type ]
!1599 = metadata !{i32 589843, metadata !1589, metadata !"__STDIO_FILE_STRUCT", metadata !1598, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1600, i32 0, null} ; [ DW_TAG_structure_type ]
!1600 = metadata !{metadata !1601, metadata !1604, metadata !1607, metadata !1609, metadata !1611, metadata !1612, metadata !1613, metadata !1614, metadata !1615, metadata !1616, metadata !1618, metadata !1621}
!1601 = metadata !{i32 589837, metadata !1599, metadata !"__modeflags", metadata !1602, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1603} ; [ DW_TAG_member ]
!1602 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1590} ; [ DW_TAG_file_type ]
!1603 = metadata !{i32 589860, metadata !1589, metadata !"short unsigned int", metadata !1589, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1604 = metadata !{i32 589837, metadata !1599, metadata !"__ungot_width", metadata !1602, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1605} ; [ DW_TAG_member ]
!1605 = metadata !{i32 589825, metadata !1589, metadata !"", metadata !1589, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1606, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1606 = metadata !{i32 589860, metadata !1589, metadata !"unsigned char", metadata !1589, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1607 = metadata !{i32 589837, metadata !1599, metadata !"__filedes", metadata !1602, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1608} ; [ DW_TAG_member ]
!1608 = metadata !{i32 589860, metadata !1589, metadata !"int", metadata !1589, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1609 = metadata !{i32 589837, metadata !1599, metadata !"__bufstart", metadata !1602, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1610 = metadata !{i32 589839, metadata !1589, metadata !"", metadata !1589, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1606} ; [ DW_TAG_pointer_type ]
!1611 = metadata !{i32 589837, metadata !1599, metadata !"__bufend", metadata !1602, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1612 = metadata !{i32 589837, metadata !1599, metadata !"__bufpos", metadata !1602, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1613 = metadata !{i32 589837, metadata !1599, metadata !"__bufread", metadata !1602, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1614 = metadata !{i32 589837, metadata !1599, metadata !"__bufgetc_u", metadata !1602, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1615 = metadata !{i32 589837, metadata !1599, metadata !"__bufputc_u", metadata !1602, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1610} ; [ DW_TAG_member ]
!1616 = metadata !{i32 589837, metadata !1599, metadata !"__nextopen", metadata !1602, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1617} ; [ DW_TAG_member ]
!1617 = metadata !{i32 589839, metadata !1589, metadata !"", metadata !1589, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1599} ; [ DW_TAG_pointer_type ]
!1618 = metadata !{i32 589837, metadata !1599, metadata !"__ungot", metadata !1602, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1619} ; [ DW_TAG_member ]
!1619 = metadata !{i32 589825, metadata !1589, metadata !"", metadata !1589, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1620, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1620 = metadata !{i32 589846, metadata !1594, metadata !"wchar_t", metadata !1594, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1608} ; [ DW_TAG_typedef ]
!1621 = metadata !{i32 589837, metadata !1599, metadata !"__state", metadata !1602, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1622} ; [ DW_TAG_member ]
!1622 = metadata !{i32 589846, metadata !1623, metadata !"__mbstate_t", metadata !1623, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1624} ; [ DW_TAG_typedef ]
!1623 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1590} ; [ DW_TAG_file_type ]
!1624 = metadata !{i32 589843, metadata !1589, metadata !"", metadata !1623, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1625, i32 0, null} ; [ DW_TAG_structure_type ]
!1625 = metadata !{metadata !1626, metadata !1627}
!1626 = metadata !{i32 589837, metadata !1624, metadata !"__mask", metadata !1623, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1620} ; [ DW_TAG_member ]
!1627 = metadata !{i32 589837, metadata !1624, metadata !"__wc", metadata !1623, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1620} ; [ DW_TAG_member ]
!1628 = metadata !{i32 589870, i32 0, metadata !1629, metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !"_stdio_fopen", metadata !1629, i32 44, metadata !1631, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %4* (i64, i8*, %4*, i32)
!1629 = metadata !{i32 589865, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1630} ; [ DW_TAG_file_type ]
!1630 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fopen.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1631 = metadata !{i32 589845, metadata !1629, metadata !"", metadata !1629, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1632, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1632 = metadata !{metadata !1633, metadata !1666, metadata !1669, metadata !1633, metadata !1645}
!1633 = metadata !{i32 589839, metadata !1629, metadata !"", metadata !1629, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1634} ; [ DW_TAG_pointer_type ]
!1634 = metadata !{i32 589846, metadata !1635, metadata !"FILE", metadata !1635, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1636} ; [ DW_TAG_typedef ]
!1635 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1630} ; [ DW_TAG_file_type ]
!1636 = metadata !{i32 589843, metadata !1629, metadata !"__STDIO_FILE_STRUCT", metadata !1635, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1637, i32 0, null} ; [ DW_TAG_structure_type ]
!1637 = metadata !{metadata !1638, metadata !1641, metadata !1644, metadata !1646, metadata !1648, metadata !1649, metadata !1650, metadata !1651, metadata !1652, metadata !1653, metadata !1655, metadata !1659}
!1638 = metadata !{i32 589837, metadata !1636, metadata !"__modeflags", metadata !1639, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1640} ; [ DW_TAG_member ]
!1639 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1630} ; [ DW_TAG_file_type ]
!1640 = metadata !{i32 589860, metadata !1629, metadata !"short unsigned int", metadata !1629, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1641 = metadata !{i32 589837, metadata !1636, metadata !"__ungot_width", metadata !1639, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1642} ; [ DW_TAG_member ]
!1642 = metadata !{i32 589825, metadata !1629, metadata !"", metadata !1629, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1643, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1643 = metadata !{i32 589860, metadata !1629, metadata !"unsigned char", metadata !1629, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1644 = metadata !{i32 589837, metadata !1636, metadata !"__filedes", metadata !1639, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1645} ; [ DW_TAG_member ]
!1645 = metadata !{i32 589860, metadata !1629, metadata !"int", metadata !1629, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1646 = metadata !{i32 589837, metadata !1636, metadata !"__bufstart", metadata !1639, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1647 = metadata !{i32 589839, metadata !1629, metadata !"", metadata !1629, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1643} ; [ DW_TAG_pointer_type ]
!1648 = metadata !{i32 589837, metadata !1636, metadata !"__bufend", metadata !1639, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1649 = metadata !{i32 589837, metadata !1636, metadata !"__bufpos", metadata !1639, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1650 = metadata !{i32 589837, metadata !1636, metadata !"__bufread", metadata !1639, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1651 = metadata !{i32 589837, metadata !1636, metadata !"__bufgetc_u", metadata !1639, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1652 = metadata !{i32 589837, metadata !1636, metadata !"__bufputc_u", metadata !1639, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1647} ; [ DW_TAG_member ]
!1653 = metadata !{i32 589837, metadata !1636, metadata !"__nextopen", metadata !1639, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1654} ; [ DW_TAG_member ]
!1654 = metadata !{i32 589839, metadata !1629, metadata !"", metadata !1629, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1636} ; [ DW_TAG_pointer_type ]
!1655 = metadata !{i32 589837, metadata !1636, metadata !"__ungot", metadata !1639, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1656} ; [ DW_TAG_member ]
!1656 = metadata !{i32 589825, metadata !1629, metadata !"", metadata !1629, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1657, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1657 = metadata !{i32 589846, metadata !1658, metadata !"wchar_t", metadata !1658, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1645} ; [ DW_TAG_typedef ]
!1658 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1630} ; [ DW_TAG_file_type ]
!1659 = metadata !{i32 589837, metadata !1636, metadata !"__state", metadata !1639, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1660} ; [ DW_TAG_member ]
!1660 = metadata !{i32 589846, metadata !1661, metadata !"__mbstate_t", metadata !1661, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1662} ; [ DW_TAG_typedef ]
!1661 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1630} ; [ DW_TAG_file_type ]
!1662 = metadata !{i32 589843, metadata !1629, metadata !"", metadata !1661, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1663, i32 0, null} ; [ DW_TAG_structure_type ]
!1663 = metadata !{metadata !1664, metadata !1665}
!1664 = metadata !{i32 589837, metadata !1662, metadata !"__mask", metadata !1661, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1657} ; [ DW_TAG_member ]
!1665 = metadata !{i32 589837, metadata !1662, metadata !"__wc", metadata !1661, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1657} ; [ DW_TAG_member ]
!1666 = metadata !{i32 589846, metadata !1667, metadata !"intptr_t", metadata !1667, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !1668} ; [ DW_TAG_typedef ]
!1667 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1630} ; [ DW_TAG_file_type ]
!1668 = metadata !{i32 589860, metadata !1629, metadata !"long int", metadata !1629, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1669 = metadata !{i32 589839, metadata !1629, metadata !"", metadata !1629, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1670} ; [ DW_TAG_pointer_type ]
!1670 = metadata !{i32 589862, metadata !1629, metadata !"", metadata !1629, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1671} ; [ DW_TAG_const_type ]
!1671 = metadata !{i32 589860, metadata !1629, metadata !"char", metadata !1629, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1672 = metadata !{i32 589870, i32 0, metadata !1673, metadata !"fseeko64", metadata !"fseeko64", metadata !"fseeko64", metadata !1675, i32 25, metadata !1676, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64, i32)* @fseeko64} ; [ 
!1673 = metadata !{i32 589865, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1674} ; [ DW_TAG_file_type ]
!1674 = metadata !{i32 589841, i32 0, i32 1, metadata !"fseeko64.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1675 = metadata !{i32 589865, metadata !"fseeko.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1674} ; [ DW_TAG_file_type ]
!1676 = metadata !{i32 589845, metadata !1673, metadata !"", metadata !1673, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1677, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1677 = metadata !{metadata !1678, metadata !1679, metadata !1711, metadata !1678}
!1678 = metadata !{i32 589860, metadata !1673, metadata !"int", metadata !1673, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1679 = metadata !{i32 589839, metadata !1673, metadata !"", metadata !1673, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1680} ; [ DW_TAG_pointer_type ]
!1680 = metadata !{i32 589846, metadata !1681, metadata !"FILE", metadata !1681, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1682} ; [ DW_TAG_typedef ]
!1681 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1674} ; [ DW_TAG_file_type ]
!1682 = metadata !{i32 589843, metadata !1673, metadata !"__STDIO_FILE_STRUCT", metadata !1681, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1683, i32 0, null} ; [ DW_TAG_structure_type ]
!1683 = metadata !{metadata !1684, metadata !1687, metadata !1690, metadata !1691, metadata !1693, metadata !1694, metadata !1695, metadata !1696, metadata !1697, metadata !1698, metadata !1700, metadata !1704}
!1684 = metadata !{i32 589837, metadata !1682, metadata !"__modeflags", metadata !1685, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1686} ; [ DW_TAG_member ]
!1685 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1674} ; [ DW_TAG_file_type ]
!1686 = metadata !{i32 589860, metadata !1673, metadata !"short unsigned int", metadata !1673, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1687 = metadata !{i32 589837, metadata !1682, metadata !"__ungot_width", metadata !1685, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1688} ; [ DW_TAG_member ]
!1688 = metadata !{i32 589825, metadata !1673, metadata !"", metadata !1673, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1689, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1689 = metadata !{i32 589860, metadata !1673, metadata !"unsigned char", metadata !1673, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1690 = metadata !{i32 589837, metadata !1682, metadata !"__filedes", metadata !1685, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1678} ; [ DW_TAG_member ]
!1691 = metadata !{i32 589837, metadata !1682, metadata !"__bufstart", metadata !1685, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1692 = metadata !{i32 589839, metadata !1673, metadata !"", metadata !1673, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1689} ; [ DW_TAG_pointer_type ]
!1693 = metadata !{i32 589837, metadata !1682, metadata !"__bufend", metadata !1685, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1694 = metadata !{i32 589837, metadata !1682, metadata !"__bufpos", metadata !1685, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1695 = metadata !{i32 589837, metadata !1682, metadata !"__bufread", metadata !1685, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1696 = metadata !{i32 589837, metadata !1682, metadata !"__bufgetc_u", metadata !1685, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1697 = metadata !{i32 589837, metadata !1682, metadata !"__bufputc_u", metadata !1685, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1692} ; [ DW_TAG_member ]
!1698 = metadata !{i32 589837, metadata !1682, metadata !"__nextopen", metadata !1685, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1699} ; [ DW_TAG_member ]
!1699 = metadata !{i32 589839, metadata !1673, metadata !"", metadata !1673, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1682} ; [ DW_TAG_pointer_type ]
!1700 = metadata !{i32 589837, metadata !1682, metadata !"__ungot", metadata !1685, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1701} ; [ DW_TAG_member ]
!1701 = metadata !{i32 589825, metadata !1673, metadata !"", metadata !1673, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1702, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1702 = metadata !{i32 589846, metadata !1703, metadata !"wchar_t", metadata !1703, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1678} ; [ DW_TAG_typedef ]
!1703 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1674} ; [ DW_TAG_file_type ]
!1704 = metadata !{i32 589837, metadata !1682, metadata !"__state", metadata !1685, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1705} ; [ DW_TAG_member ]
!1705 = metadata !{i32 589846, metadata !1706, metadata !"__mbstate_t", metadata !1706, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1707} ; [ DW_TAG_typedef ]
!1706 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1674} ; [ DW_TAG_file_type ]
!1707 = metadata !{i32 589843, metadata !1673, metadata !"", metadata !1706, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1708, i32 0, null} ; [ DW_TAG_structure_type ]
!1708 = metadata !{metadata !1709, metadata !1710}
!1709 = metadata !{i32 589837, metadata !1707, metadata !"__mask", metadata !1706, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1702} ; [ DW_TAG_member ]
!1710 = metadata !{i32 589837, metadata !1707, metadata !"__wc", metadata !1706, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1702} ; [ DW_TAG_member ]
!1711 = metadata !{i32 589846, metadata !1712, metadata !"__off64_t", metadata !1712, i32 146, i64 0, i64 0, i64 0, i32 0, metadata !1713} ; [ DW_TAG_typedef ]
!1712 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1674} ; [ DW_TAG_file_type ]
!1713 = metadata !{i32 589860, metadata !1673, metadata !"long int", metadata !1673, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1714 = metadata !{i32 589870, i32 0, metadata !1715, metadata !"getdelim", metadata !"getdelim", metadata !"getdelim", metadata !1715, i32 32, metadata !1717, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8**, i64*, i32, %4*)* @getdeli
!1715 = metadata !{i32 589865, metadata !"getdelim.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1716} ; [ DW_TAG_file_type ]
!1716 = metadata !{i32 589841, i32 0, i32 1, metadata !"getdelim.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1717 = metadata !{i32 589845, metadata !1715, metadata !"", metadata !1715, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1718, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1718 = metadata !{metadata !1719, metadata !1722, metadata !1725, metadata !1729, metadata !1730}
!1719 = metadata !{i32 589846, metadata !1720, metadata !"__ssize_t", metadata !1720, i32 184, i64 0, i64 0, i64 0, i32 0, metadata !1721} ; [ DW_TAG_typedef ]
!1720 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1716} ; [ DW_TAG_file_type ]
!1721 = metadata !{i32 589860, metadata !1715, metadata !"long int", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1722 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1723} ; [ DW_TAG_pointer_type ]
!1723 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1724} ; [ DW_TAG_pointer_type ]
!1724 = metadata !{i32 589860, metadata !1715, metadata !"char", metadata !1715, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1725 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1726} ; [ DW_TAG_pointer_type ]
!1726 = metadata !{i32 589846, metadata !1727, metadata !"size_t", metadata !1727, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1728} ; [ DW_TAG_typedef ]
!1727 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1716} ; [ DW_TAG_file_type ]
!1728 = metadata !{i32 589860, metadata !1715, metadata !"long unsigned int", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1729 = metadata !{i32 589860, metadata !1715, metadata !"int", metadata !1715, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1730 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1731} ; [ DW_TAG_pointer_type ]
!1731 = metadata !{i32 589846, metadata !1732, metadata !"FILE", metadata !1732, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1733} ; [ DW_TAG_typedef ]
!1732 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1716} ; [ DW_TAG_file_type ]
!1733 = metadata !{i32 589843, metadata !1715, metadata !"__STDIO_FILE_STRUCT", metadata !1732, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1734, i32 0, null} ; [ DW_TAG_structure_type ]
!1734 = metadata !{metadata !1735, metadata !1738, metadata !1741, metadata !1742, metadata !1744, metadata !1745, metadata !1746, metadata !1747, metadata !1748, metadata !1749, metadata !1751, metadata !1754}
!1735 = metadata !{i32 589837, metadata !1733, metadata !"__modeflags", metadata !1736, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1737} ; [ DW_TAG_member ]
!1736 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1716} ; [ DW_TAG_file_type ]
!1737 = metadata !{i32 589860, metadata !1715, metadata !"short unsigned int", metadata !1715, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1738 = metadata !{i32 589837, metadata !1733, metadata !"__ungot_width", metadata !1736, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1739} ; [ DW_TAG_member ]
!1739 = metadata !{i32 589825, metadata !1715, metadata !"", metadata !1715, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1740, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1740 = metadata !{i32 589860, metadata !1715, metadata !"unsigned char", metadata !1715, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1741 = metadata !{i32 589837, metadata !1733, metadata !"__filedes", metadata !1736, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1729} ; [ DW_TAG_member ]
!1742 = metadata !{i32 589837, metadata !1733, metadata !"__bufstart", metadata !1736, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1743 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1740} ; [ DW_TAG_pointer_type ]
!1744 = metadata !{i32 589837, metadata !1733, metadata !"__bufend", metadata !1736, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1745 = metadata !{i32 589837, metadata !1733, metadata !"__bufpos", metadata !1736, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1746 = metadata !{i32 589837, metadata !1733, metadata !"__bufread", metadata !1736, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1747 = metadata !{i32 589837, metadata !1733, metadata !"__bufgetc_u", metadata !1736, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1748 = metadata !{i32 589837, metadata !1733, metadata !"__bufputc_u", metadata !1736, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1743} ; [ DW_TAG_member ]
!1749 = metadata !{i32 589837, metadata !1733, metadata !"__nextopen", metadata !1736, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1750} ; [ DW_TAG_member ]
!1750 = metadata !{i32 589839, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1733} ; [ DW_TAG_pointer_type ]
!1751 = metadata !{i32 589837, metadata !1733, metadata !"__ungot", metadata !1736, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1752} ; [ DW_TAG_member ]
!1752 = metadata !{i32 589825, metadata !1715, metadata !"", metadata !1715, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1753, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1753 = metadata !{i32 589846, metadata !1727, metadata !"wchar_t", metadata !1727, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1729} ; [ DW_TAG_typedef ]
!1754 = metadata !{i32 589837, metadata !1733, metadata !"__state", metadata !1736, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1755} ; [ DW_TAG_member ]
!1755 = metadata !{i32 589846, metadata !1756, metadata !"__mbstate_t", metadata !1756, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1757} ; [ DW_TAG_typedef ]
!1756 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1716} ; [ DW_TAG_file_type ]
!1757 = metadata !{i32 589843, metadata !1715, metadata !"", metadata !1756, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1758, i32 0, null} ; [ DW_TAG_structure_type ]
!1758 = metadata !{metadata !1759, metadata !1760}
!1759 = metadata !{i32 589837, metadata !1757, metadata !"__mask", metadata !1756, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1753} ; [ DW_TAG_member ]
!1760 = metadata !{i32 589837, metadata !1757, metadata !"__wc", metadata !1756, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1753} ; [ DW_TAG_member ]
!1761 = metadata !{i32 589870, i32 0, metadata !1762, metadata !"isatty", metadata !"isatty", metadata !"isatty", metadata !1762, i32 27, metadata !1764, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @isatty} ; [ DW_TAG_subprogram 
!1762 = metadata !{i32 589865, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !1763} ; [ DW_TAG_file_type ]
!1763 = metadata !{i32 589841, i32 0, i32 1, metadata !"isatty.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1764 = metadata !{i32 589845, metadata !1762, metadata !"", metadata !1762, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1765, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1765 = metadata !{metadata !1766, metadata !1766}
!1766 = metadata !{i32 589860, metadata !1762, metadata !"int", metadata !1762, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1767 = metadata !{i32 589870, i32 0, metadata !1768, metadata !"iswctype", metadata !"iswctype", metadata !"iswctype", metadata !1770, i32 593, metadata !1771, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)* @iswctype} ; [ DW_T
!1768 = metadata !{i32 589865, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1769} ; [ DW_TAG_file_type ]
!1769 = metadata !{i32 589841, i32 0, i32 1, metadata !"iswctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!1770 = metadata !{i32 589865, metadata !"_wctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wctype", metadata !1769} ; [ DW_TAG_file_type ]
!1771 = metadata !{i32 589845, metadata !1768, metadata !"", metadata !1768, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1772, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1772 = metadata !{metadata !1773, metadata !1774, metadata !1777}
!1773 = metadata !{i32 589860, metadata !1768, metadata !"int", metadata !1768, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1774 = metadata !{i32 589846, metadata !1775, metadata !"wint_t", metadata !1775, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !1776} ; [ DW_TAG_typedef ]
!1775 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1769} ; [ DW_TAG_file_type ]
!1776 = metadata !{i32 589860, metadata !1768, metadata !"unsigned int", metadata !1768, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1777 = metadata !{i32 589846, metadata !1778, metadata !"wctype_t", metadata !1778, i32 71, i64 0, i64 0, i64 0, i32 0, metadata !1776} ; [ DW_TAG_typedef ]
!1778 = metadata !{i32 589865, metadata !"wctype.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1769} ; [ DW_TAG_file_type ]
!1779 = metadata !{i32 589870, i32 0, metadata !1780, metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !"mbsnrtowcs", metadata !1782, i32 698, metadata !1783, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32*, i8**, i64, i64, %s
!1780 = metadata !{i32 589865, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1781} ; [ DW_TAG_file_type ]
!1781 = metadata !{i32 589841, i32 0, i32 1, metadata !"mbsnrtowcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!1782 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !1781} ; [ DW_TAG_file_type ]
!1783 = metadata !{i32 589845, metadata !1780, metadata !"", metadata !1780, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1784, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1784 = metadata !{metadata !1785, metadata !1788, metadata !1791, metadata !1785, metadata !1785, metadata !1795}
!1785 = metadata !{i32 589846, metadata !1786, metadata !"size_t", metadata !1786, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1787} ; [ DW_TAG_typedef ]
!1786 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1781} ; [ DW_TAG_file_type ]
!1787 = metadata !{i32 589860, metadata !1780, metadata !"long unsigned int", metadata !1780, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1788 = metadata !{i32 589839, metadata !1780, metadata !"", metadata !1780, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1789} ; [ DW_TAG_pointer_type ]
!1789 = metadata !{i32 589846, metadata !1786, metadata !"wchar_t", metadata !1786, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1790} ; [ DW_TAG_typedef ]
!1790 = metadata !{i32 589860, metadata !1780, metadata !"int", metadata !1780, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1791 = metadata !{i32 589839, metadata !1780, metadata !"", metadata !1780, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1792} ; [ DW_TAG_pointer_type ]
!1792 = metadata !{i32 589839, metadata !1780, metadata !"", metadata !1780, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1793} ; [ DW_TAG_pointer_type ]
!1793 = metadata !{i32 589862, metadata !1780, metadata !"", metadata !1780, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1794} ; [ DW_TAG_const_type ]
!1794 = metadata !{i32 589860, metadata !1780, metadata !"char", metadata !1780, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1795 = metadata !{i32 589839, metadata !1780, metadata !"", metadata !1780, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1796} ; [ DW_TAG_pointer_type ]
!1796 = metadata !{i32 589846, metadata !1797, metadata !"mbstate_t", metadata !1797, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !1798} ; [ DW_TAG_typedef ]
!1797 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1781} ; [ DW_TAG_file_type ]
!1798 = metadata !{i32 589843, metadata !1780, metadata !"", metadata !1797, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1799, i32 0, null} ; [ DW_TAG_structure_type ]
!1799 = metadata !{metadata !1800, metadata !1801}
!1800 = metadata !{i32 589837, metadata !1798, metadata !"__mask", metadata !1797, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1789} ; [ DW_TAG_member ]
!1801 = metadata !{i32 589837, metadata !1798, metadata !"__wc", metadata !1797, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1789} ; [ DW_TAG_member ]
!1802 = metadata !{i32 589870, i32 0, metadata !1803, metadata !"memcpy", metadata !"memcpy", metadata !"memcpy", metadata !1803, i32 19, metadata !1805, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memcpy} ; [ DW_TAG_s
!1803 = metadata !{i32 589865, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1804} ; [ DW_TAG_file_type ]
!1804 = metadata !{i32 589841, i32 0, i32 1, metadata !"memcpy.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1805 = metadata !{i32 589845, metadata !1803, metadata !"", metadata !1803, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1806, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1806 = metadata !{metadata !1807, metadata !1807, metadata !1807, metadata !1808}
!1807 = metadata !{i32 589839, metadata !1803, metadata !"", metadata !1803, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1808 = metadata !{i32 589846, metadata !1809, metadata !"size_t", metadata !1809, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1810} ; [ DW_TAG_typedef ]
!1809 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1804} ; [ DW_TAG_file_type ]
!1810 = metadata !{i32 589860, metadata !1803, metadata !"long unsigned int", metadata !1803, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1811 = metadata !{i32 589870, i32 0, metadata !1812, metadata !"memmove", metadata !"memmove", metadata !"memmove", metadata !1812, i32 18, metadata !1814, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i8*, i64)* @memmove} ; [ DW_T
!1812 = metadata !{i32 589865, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1813} ; [ DW_TAG_file_type ]
!1813 = metadata !{i32 589841, i32 0, i32 1, metadata !"memmove.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1814 = metadata !{i32 589845, metadata !1812, metadata !"", metadata !1812, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1815, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1815 = metadata !{metadata !1816, metadata !1816, metadata !1816, metadata !1817}
!1816 = metadata !{i32 589839, metadata !1812, metadata !"", metadata !1812, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1817 = metadata !{i32 589846, metadata !1818, metadata !"size_t", metadata !1818, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1819} ; [ DW_TAG_typedef ]
!1818 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1813} ; [ DW_TAG_file_type ]
!1819 = metadata !{i32 589860, metadata !1812, metadata !"long unsigned int", metadata !1812, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1820 = metadata !{i32 589870, i32 0, metadata !1821, metadata !"memset", metadata !"memset", metadata !"memset", metadata !1821, i32 18, metadata !1823, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i32, i64)* @memset} ; [ DW_TAG_s
!1821 = metadata !{i32 589865, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1822} ; [ DW_TAG_file_type ]
!1822 = metadata !{i32 589841, i32 0, i32 1, metadata !"memset.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!1823 = metadata !{i32 589845, metadata !1821, metadata !"", metadata !1821, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1824, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1824 = metadata !{metadata !1825, metadata !1825, metadata !1826, metadata !1827}
!1825 = metadata !{i32 589839, metadata !1821, metadata !"", metadata !1821, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1826 = metadata !{i32 589860, metadata !1821, metadata !"int", metadata !1821, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1827 = metadata !{i32 589846, metadata !1828, metadata !"size_t", metadata !1828, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1829} ; [ DW_TAG_typedef ]
!1828 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1822} ; [ DW_TAG_file_type ]
!1829 = metadata !{i32 589860, metadata !1821, metadata !"long unsigned int", metadata !1821, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1830 = metadata !{i32 589870, i32 0, metadata !1831, metadata !"__raise", metadata !"__raise", metadata !"__raise", metadata !1831, i32 16, metadata !1833, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @__raise} ; [ DW_TAG_subprog
!1831 = metadata !{i32 589865, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1832} ; [ DW_TAG_file_type ]
!1832 = metadata !{i32 589841, i32 0, i32 1, metadata !"raise.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_TA
!1833 = metadata !{i32 589845, metadata !1831, metadata !"", metadata !1831, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1834, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1834 = metadata !{metadata !1835, metadata !1835}
!1835 = metadata !{i32 589860, metadata !1831, metadata !"int", metadata !1831, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1836 = metadata !{i32 589870, i32 0, metadata !1837, metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !"__libc_sigaction", metadata !1837, i32 43, metadata !1839, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %s
!1837 = metadata !{i32 589865, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !1838} ; [ DW_TAG_file_type ]
!1838 = metadata !{i32 589841, i32 0, i32 1, metadata !"sigaction.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/signal", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!1839 = metadata !{i32 589845, metadata !1837, metadata !"", metadata !1837, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1840, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1840 = metadata !{metadata !1841, metadata !1841, metadata !1842, metadata !1933}
!1841 = metadata !{i32 589860, metadata !1837, metadata !"int", metadata !1837, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1842 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1843} ; [ DW_TAG_pointer_type ]
!1843 = metadata !{i32 589862, metadata !1837, metadata !"", metadata !1837, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !1844} ; [ DW_TAG_const_type ]
!1844 = metadata !{i32 589843, metadata !1837, metadata !"sigaction", metadata !1845, i32 26, i64 1216, i64 64, i64 0, i32 0, null, metadata !1846, i32 0, null} ; [ DW_TAG_structure_type ]
!1845 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1838} ; [ DW_TAG_file_type ]
!1846 = metadata !{metadata !1847, metadata !1921, metadata !1929, metadata !1930}
!1847 = metadata !{i32 589837, metadata !1844, metadata !"__sigaction_handler", metadata !1845, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1848} ; [ DW_TAG_member ]
!1848 = metadata !{i32 589847, metadata !1837, metadata !"", metadata !1845, i32 30, i64 64, i64 64, i64 0, i32 0, null, metadata !1849, i32 0, null} ; [ DW_TAG_union_type ]
!1849 = metadata !{metadata !1850, metadata !1856}
!1850 = metadata !{i32 589837, metadata !1848, metadata !"sa_handler", metadata !1845, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !1851} ; [ DW_TAG_member ]
!1851 = metadata !{i32 589846, metadata !1852, metadata !"__sighandler_t", metadata !1852, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !1853} ; [ DW_TAG_typedef ]
!1852 = metadata !{i32 589865, metadata !"signal.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1838} ; [ DW_TAG_file_type ]
!1853 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1854} ; [ DW_TAG_pointer_type ]
!1854 = metadata !{i32 589845, metadata !1837, metadata !"", metadata !1837, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1855, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1855 = metadata !{null, metadata !1841}
!1856 = metadata !{i32 589837, metadata !1848, metadata !"sa_sigaction", metadata !1845, i32 34, i64 64, i64 64, i64 0, i32 0, metadata !1857} ; [ DW_TAG_member ]
!1857 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1858} ; [ DW_TAG_pointer_type ]
!1858 = metadata !{i32 589845, metadata !1837, metadata !"", metadata !1837, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1859, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1859 = metadata !{null, metadata !1841, metadata !1860, metadata !1895}
!1860 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1861} ; [ DW_TAG_pointer_type ]
!1861 = metadata !{i32 589846, metadata !1862, metadata !"siginfo_t", metadata !1862, i32 108, i64 0, i64 0, i64 0, i32 0, metadata !1863} ; [ DW_TAG_typedef ]
!1862 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1838} ; [ DW_TAG_file_type ]
!1863 = metadata !{i32 589843, metadata !1837, metadata !"siginfo", metadata !1862, i32 52, i64 1024, i64 64, i64 0, i32 0, null, metadata !1864, i32 0, null} ; [ DW_TAG_structure_type ]
!1864 = metadata !{metadata !1865, metadata !1866, metadata !1867, metadata !1868}
!1865 = metadata !{i32 589837, metadata !1863, metadata !"si_signo", metadata !1862, i32 53, i64 32, i64 32, i64 0, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1866 = metadata !{i32 589837, metadata !1863, metadata !"si_errno", metadata !1862, i32 54, i64 32, i64 32, i64 32, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1867 = metadata !{i32 589837, metadata !1863, metadata !"si_code", metadata !1862, i32 56, i64 32, i64 32, i64 64, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1868 = metadata !{i32 589837, metadata !1863, metadata !"_sifields", metadata !1862, i32 107, i64 896, i64 64, i64 128, i32 0, metadata !1869} ; [ DW_TAG_member ]
!1869 = metadata !{i32 589847, metadata !1837, metadata !"", metadata !1862, i32 59, i64 896, i64 64, i64 0, i32 0, null, metadata !1870, i32 0, null} ; [ DW_TAG_union_type ]
!1870 = metadata !{metadata !1871, metadata !1875, metadata !1884, metadata !1896, metadata !1902, metadata !1912, metadata !1916}
!1871 = metadata !{i32 589837, metadata !1869, metadata !"_pad", metadata !1862, i32 60, i64 896, i64 32, i64 0, i32 0, metadata !1872} ; [ DW_TAG_member ]
!1872 = metadata !{i32 589825, metadata !1837, metadata !"", metadata !1837, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !1841, metadata !1873, i32 0, null} ; [ DW_TAG_array_type ]
!1873 = metadata !{metadata !1874}
!1874 = metadata !{i32 589857, i64 0, i64 27}     ; [ DW_TAG_subrange_type ]
!1875 = metadata !{i32 589837, metadata !1869, metadata !"_kill", metadata !1862, i32 67, i64 64, i64 32, i64 0, i32 0, metadata !1876} ; [ DW_TAG_member ]
!1876 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 64, i64 64, i64 32, i64 0, i32 0, null, metadata !1877, i32 0, null} ; [ DW_TAG_structure_type ]
!1877 = metadata !{metadata !1878, metadata !1881}
!1878 = metadata !{i32 589837, metadata !1876, metadata !"si_pid", metadata !1862, i32 65, i64 32, i64 32, i64 0, i32 0, metadata !1879} ; [ DW_TAG_member ]
!1879 = metadata !{i32 589846, metadata !1880, metadata !"__pid_t", metadata !1880, i32 147, i64 0, i64 0, i64 0, i32 0, metadata !1841} ; [ DW_TAG_typedef ]
!1880 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1838} ; [ DW_TAG_file_type ]
!1881 = metadata !{i32 589837, metadata !1876, metadata !"si_uid", metadata !1862, i32 66, i64 32, i64 32, i64 32, i32 0, metadata !1882} ; [ DW_TAG_member ]
!1882 = metadata !{i32 589846, metadata !1880, metadata !"__uid_t", metadata !1880, i32 139, i64 0, i64 0, i64 0, i32 0, metadata !1883} ; [ DW_TAG_typedef ]
!1883 = metadata !{i32 589860, metadata !1837, metadata !"unsigned int", metadata !1837, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1884 = metadata !{i32 589837, metadata !1869, metadata !"_timer", metadata !1862, i32 75, i64 128, i64 64, i64 0, i32 0, metadata !1885} ; [ DW_TAG_member ]
!1885 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 71, i64 128, i64 64, i64 0, i32 0, null, metadata !1886, i32 0, null} ; [ DW_TAG_structure_type ]
!1886 = metadata !{metadata !1887, metadata !1888, metadata !1889}
!1887 = metadata !{i32 589837, metadata !1885, metadata !"si_tid", metadata !1862, i32 72, i64 32, i64 32, i64 0, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1888 = metadata !{i32 589837, metadata !1885, metadata !"si_overrun", metadata !1862, i32 73, i64 32, i64 32, i64 32, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1889 = metadata !{i32 589837, metadata !1885, metadata !"si_sigval", metadata !1862, i32 74, i64 64, i64 64, i64 64, i32 0, metadata !1890} ; [ DW_TAG_member ]
!1890 = metadata !{i32 589846, metadata !1862, metadata !"sigval_t", metadata !1862, i32 37, i64 0, i64 0, i64 0, i32 0, metadata !1891} ; [ DW_TAG_typedef ]
!1891 = metadata !{i32 589847, metadata !1837, metadata !"sigval", metadata !1862, i32 34, i64 64, i64 64, i64 0, i32 0, null, metadata !1892, i32 0, null} ; [ DW_TAG_union_type ]
!1892 = metadata !{metadata !1893, metadata !1894}
!1893 = metadata !{i32 589837, metadata !1891, metadata !"sival_int", metadata !1862, i32 35, i64 32, i64 32, i64 0, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1894 = metadata !{i32 589837, metadata !1891, metadata !"sival_ptr", metadata !1862, i32 36, i64 64, i64 64, i64 0, i32 0, metadata !1895} ; [ DW_TAG_member ]
!1895 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!1896 = metadata !{i32 589837, metadata !1869, metadata !"_rt", metadata !1862, i32 83, i64 128, i64 64, i64 0, i32 0, metadata !1897} ; [ DW_TAG_member ]
!1897 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 79, i64 128, i64 64, i64 0, i32 0, null, metadata !1898, i32 0, null} ; [ DW_TAG_structure_type ]
!1898 = metadata !{metadata !1899, metadata !1900, metadata !1901}
!1899 = metadata !{i32 589837, metadata !1897, metadata !"si_pid", metadata !1862, i32 80, i64 32, i64 32, i64 0, i32 0, metadata !1879} ; [ DW_TAG_member ]
!1900 = metadata !{i32 589837, metadata !1897, metadata !"si_uid", metadata !1862, i32 81, i64 32, i64 32, i64 32, i32 0, metadata !1882} ; [ DW_TAG_member ]
!1901 = metadata !{i32 589837, metadata !1897, metadata !"si_sigval", metadata !1862, i32 82, i64 64, i64 64, i64 64, i32 0, metadata !1890} ; [ DW_TAG_member ]
!1902 = metadata !{i32 589837, metadata !1869, metadata !"_sigchld", metadata !1862, i32 93, i64 256, i64 64, i64 0, i32 0, metadata !1903} ; [ DW_TAG_member ]
!1903 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 87, i64 256, i64 64, i64 0, i32 0, null, metadata !1904, i32 0, null} ; [ DW_TAG_structure_type ]
!1904 = metadata !{metadata !1905, metadata !1906, metadata !1907, metadata !1908, metadata !1911}
!1905 = metadata !{i32 589837, metadata !1903, metadata !"si_pid", metadata !1862, i32 88, i64 32, i64 32, i64 0, i32 0, metadata !1879} ; [ DW_TAG_member ]
!1906 = metadata !{i32 589837, metadata !1903, metadata !"si_uid", metadata !1862, i32 89, i64 32, i64 32, i64 32, i32 0, metadata !1882} ; [ DW_TAG_member ]
!1907 = metadata !{i32 589837, metadata !1903, metadata !"si_status", metadata !1862, i32 90, i64 32, i64 32, i64 64, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1908 = metadata !{i32 589837, metadata !1903, metadata !"si_utime", metadata !1862, i32 91, i64 64, i64 64, i64 128, i32 0, metadata !1909} ; [ DW_TAG_member ]
!1909 = metadata !{i32 589846, metadata !1880, metadata !"__clock_t", metadata !1880, i32 149, i64 0, i64 0, i64 0, i32 0, metadata !1910} ; [ DW_TAG_typedef ]
!1910 = metadata !{i32 589860, metadata !1837, metadata !"long int", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1911 = metadata !{i32 589837, metadata !1903, metadata !"si_stime", metadata !1862, i32 92, i64 64, i64 64, i64 192, i32 0, metadata !1909} ; [ DW_TAG_member ]
!1912 = metadata !{i32 589837, metadata !1869, metadata !"_sigfault", metadata !1862, i32 99, i64 64, i64 64, i64 0, i32 0, metadata !1913} ; [ DW_TAG_member ]
!1913 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 97, i64 64, i64 64, i64 0, i32 0, null, metadata !1914, i32 0, null} ; [ DW_TAG_structure_type ]
!1914 = metadata !{metadata !1915}
!1915 = metadata !{i32 589837, metadata !1913, metadata !"si_addr", metadata !1862, i32 98, i64 64, i64 64, i64 0, i32 0, metadata !1895} ; [ DW_TAG_member ]
!1916 = metadata !{i32 589837, metadata !1869, metadata !"_sigpoll", metadata !1862, i32 106, i64 128, i64 64, i64 0, i32 0, metadata !1917} ; [ DW_TAG_member ]
!1917 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1862, i32 103, i64 128, i64 64, i64 0, i32 0, null, metadata !1918, i32 0, null} ; [ DW_TAG_structure_type ]
!1918 = metadata !{metadata !1919, metadata !1920}
!1919 = metadata !{i32 589837, metadata !1917, metadata !"si_band", metadata !1862, i32 104, i64 64, i64 64, i64 0, i32 0, metadata !1910} ; [ DW_TAG_member ]
!1920 = metadata !{i32 589837, metadata !1917, metadata !"si_fd", metadata !1862, i32 105, i64 32, i64 32, i64 64, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1921 = metadata !{i32 589837, metadata !1844, metadata !"sa_mask", metadata !1845, i32 44, i64 1024, i64 64, i64 64, i32 0, metadata !1922} ; [ DW_TAG_member ]
!1922 = metadata !{i32 589846, metadata !1923, metadata !"__sigset_t", metadata !1923, i32 31, i64 0, i64 0, i64 0, i32 0, metadata !1924} ; [ DW_TAG_typedef ]
!1923 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1838} ; [ DW_TAG_file_type ]
!1924 = metadata !{i32 589843, metadata !1837, metadata !"", metadata !1923, i32 29, i64 1024, i64 64, i64 0, i32 0, null, metadata !1925, i32 0, null} ; [ DW_TAG_structure_type ]
!1925 = metadata !{metadata !1926}
!1926 = metadata !{i32 589837, metadata !1924, metadata !"__val", metadata !1923, i32 30, i64 1024, i64 64, i64 0, i32 0, metadata !1927} ; [ DW_TAG_member ]
!1927 = metadata !{i32 589825, metadata !1837, metadata !"", metadata !1837, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !1928, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!1928 = metadata !{i32 589860, metadata !1837, metadata !"long unsigned int", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1929 = metadata !{i32 589837, metadata !1844, metadata !"sa_flags", metadata !1845, i32 47, i64 32, i64 32, i64 1088, i32 0, metadata !1841} ; [ DW_TAG_member ]
!1930 = metadata !{i32 589837, metadata !1844, metadata !"sa_restorer", metadata !1845, i32 50, i64 64, i64 64, i64 1152, i32 0, metadata !1931} ; [ DW_TAG_member ]
!1931 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1932} ; [ DW_TAG_pointer_type ]
!1932 = metadata !{i32 589845, metadata !1837, metadata !"", metadata !1837, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1933 = metadata !{i32 589839, metadata !1837, metadata !"", metadata !1837, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1844} ; [ DW_TAG_pointer_type ]
!1934 = metadata !{i32 589870, i32 0, metadata !1935, metadata !"strerror", metadata !"strerror", metadata !"strerror", metadata !1935, i32 16, metadata !1937, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i32)* @strerror} ; [ DW_TAG_sub
!1935 = metadata !{i32 589865, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !1936} ; [ DW_TAG_file_type ]
!1936 = metadata !{i32 589841, i32 0, i32 1, metadata !"strerror.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!1937 = metadata !{i32 589845, metadata !1935, metadata !"", metadata !1935, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1938, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1938 = metadata !{metadata !1939, metadata !1941}
!1939 = metadata !{i32 589839, metadata !1935, metadata !"", metadata !1935, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1940} ; [ DW_TAG_pointer_type ]
!1940 = metadata !{i32 589860, metadata !1935, metadata !"char", metadata !1935, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!1941 = metadata !{i32 589860, metadata !1935, metadata !"int", metadata !1935, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1942 = metadata !{i32 589870, i32 0, metadata !1943, metadata !"_fp_out_narrow", metadata !"_fp_out_narrow", metadata !"", metadata !1945, i32 1225, metadata !1946, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i64, i64, i64)* @_fp_
!1943 = metadata !{i32 589865, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1944} ; [ DW_TAG_file_type ]
!1944 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_
!1945 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !1944} ; [ DW_TAG_file_type ]
!1946 = metadata !{i32 589845, metadata !1943, metadata !"", metadata !1943, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1947, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1947 = metadata !{metadata !1948, metadata !1951, metadata !1983, metadata !1983, metadata !1983}
!1948 = metadata !{i32 589846, metadata !1949, metadata !"size_t", metadata !1949, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !1950} ; [ DW_TAG_typedef ]
!1949 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1944} ; [ DW_TAG_file_type ]
!1950 = metadata !{i32 589860, metadata !1943, metadata !"long unsigned int", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1951 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1952} ; [ DW_TAG_pointer_type ]
!1952 = metadata !{i32 589846, metadata !1953, metadata !"FILE", metadata !1953, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !1954} ; [ DW_TAG_typedef ]
!1953 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1944} ; [ DW_TAG_file_type ]
!1954 = metadata !{i32 589843, metadata !1943, metadata !"__STDIO_FILE_STRUCT", metadata !1953, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !1955, i32 0, null} ; [ DW_TAG_structure_type ]
!1955 = metadata !{metadata !1956, metadata !1959, metadata !1962, metadata !1964, metadata !1966, metadata !1967, metadata !1968, metadata !1969, metadata !1970, metadata !1971, metadata !1973, metadata !1976}
!1956 = metadata !{i32 589837, metadata !1954, metadata !"__modeflags", metadata !1957, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !1958} ; [ DW_TAG_member ]
!1957 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1944} ; [ DW_TAG_file_type ]
!1958 = metadata !{i32 589860, metadata !1943, metadata !"short unsigned int", metadata !1943, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!1959 = metadata !{i32 589837, metadata !1954, metadata !"__ungot_width", metadata !1957, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !1960} ; [ DW_TAG_member ]
!1960 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1961, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1961 = metadata !{i32 589860, metadata !1943, metadata !"unsigned char", metadata !1943, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!1962 = metadata !{i32 589837, metadata !1954, metadata !"__filedes", metadata !1957, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !1963} ; [ DW_TAG_member ]
!1963 = metadata !{i32 589860, metadata !1943, metadata !"int", metadata !1943, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1964 = metadata !{i32 589837, metadata !1954, metadata !"__bufstart", metadata !1957, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1965 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1961} ; [ DW_TAG_pointer_type ]
!1966 = metadata !{i32 589837, metadata !1954, metadata !"__bufend", metadata !1957, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1967 = metadata !{i32 589837, metadata !1954, metadata !"__bufpos", metadata !1957, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1968 = metadata !{i32 589837, metadata !1954, metadata !"__bufread", metadata !1957, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1969 = metadata !{i32 589837, metadata !1954, metadata !"__bufgetc_u", metadata !1957, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1970 = metadata !{i32 589837, metadata !1954, metadata !"__bufputc_u", metadata !1957, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !1965} ; [ DW_TAG_member ]
!1971 = metadata !{i32 589837, metadata !1954, metadata !"__nextopen", metadata !1957, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !1972} ; [ DW_TAG_member ]
!1972 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1954} ; [ DW_TAG_pointer_type ]
!1973 = metadata !{i32 589837, metadata !1954, metadata !"__ungot", metadata !1957, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !1974} ; [ DW_TAG_member ]
!1974 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !1975, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!1975 = metadata !{i32 589846, metadata !1949, metadata !"wchar_t", metadata !1949, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !1963} ; [ DW_TAG_typedef ]
!1976 = metadata !{i32 589837, metadata !1954, metadata !"__state", metadata !1957, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !1977} ; [ DW_TAG_member ]
!1977 = metadata !{i32 589846, metadata !1978, metadata !"__mbstate_t", metadata !1978, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !1979} ; [ DW_TAG_typedef ]
!1978 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1944} ; [ DW_TAG_file_type ]
!1979 = metadata !{i32 589843, metadata !1943, metadata !"", metadata !1978, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !1980, i32 0, null} ; [ DW_TAG_structure_type ]
!1980 = metadata !{metadata !1981, metadata !1982}
!1981 = metadata !{i32 589837, metadata !1979, metadata !"__mask", metadata !1978, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !1975} ; [ DW_TAG_member ]
!1982 = metadata !{i32 589837, metadata !1979, metadata !"__wc", metadata !1978, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !1975} ; [ DW_TAG_member ]
!1983 = metadata !{i32 589846, metadata !1984, metadata !"intptr_t", metadata !1984, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !1985} ; [ DW_TAG_typedef ]
!1984 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1944} ; [ DW_TAG_file_type ]
!1985 = metadata !{i32 589860, metadata !1943, metadata !"long int", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!1986 = metadata !{i32 589870, i32 0, metadata !1943, metadata !"_charpad", metadata !"_charpad", metadata !"", metadata !1945, i32 1423, metadata !1987, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, i32, i64)* @_charpad} ; [ DW_TAG_
!1987 = metadata !{i32 589845, metadata !1943, metadata !"", metadata !1943, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1988, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1988 = metadata !{metadata !1948, metadata !1951, metadata !1963, metadata !1948}
!1989 = metadata !{i32 589870, i32 0, metadata !1943, metadata !"_do_one_spec", metadata !"_do_one_spec", metadata !"", metadata !1945, i32 1440, metadata !1990, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, %struct.ppfs_t*, i32*)* @
!1990 = metadata !{i32 589845, metadata !1943, metadata !"", metadata !1943, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !1991, i32 0, null} ; [ DW_TAG_subroutine_type ]
!1991 = metadata !{metadata !1963, metadata !1951, metadata !1992, metadata !2048}
!1992 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1993} ; [ DW_TAG_pointer_type ]
!1993 = metadata !{i32 589846, metadata !1945, metadata !"ppfs_t", metadata !1945, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !1994} ; [ DW_TAG_typedef ]
!1994 = metadata !{i32 589843, metadata !1943, metadata !"", metadata !1945, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !1995, i32 0, null} ; [ DW_TAG_structure_type ]
!1995 = metadata !{metadata !1996, metadata !2000, metadata !2010, metadata !2011, metadata !2012, metadata !2013, metadata !2015, metadata !2019, metadata !2033}
!1996 = metadata !{i32 589837, metadata !1994, metadata !"fmtpos", metadata !1945, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !1997} ; [ DW_TAG_member ]
!1997 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1998} ; [ DW_TAG_pointer_type ]
!1998 = metadata !{i32 589862, metadata !1943, metadata !"", metadata !1943, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !1999} ; [ DW_TAG_const_type ]
!1999 = metadata !{i32 589860, metadata !1943, metadata !"char", metadata !1943, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2000 = metadata !{i32 589837, metadata !1994, metadata !"info", metadata !1945, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2001} ; [ DW_TAG_member ]
!2001 = metadata !{i32 589843, metadata !1943, metadata !"printf_info", metadata !2002, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2003, i32 0, null} ; [ DW_TAG_structure_type ]
!2002 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1944} ; [ DW_TAG_file_type ]
!2003 = metadata !{metadata !2004, metadata !2005, metadata !2006, metadata !2007, metadata !2009}
!2004 = metadata !{i32 589837, metadata !2001, metadata !"prec", metadata !2002, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !1963} ; [ DW_TAG_member ]
!2005 = metadata !{i32 589837, metadata !2001, metadata !"width", metadata !2002, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !1963} ; [ DW_TAG_member ]
!2006 = metadata !{i32 589837, metadata !2001, metadata !"spec", metadata !2002, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !1975} ; [ DW_TAG_member ]
!2007 = metadata !{i32 589837, metadata !2001, metadata !"_flags", metadata !2002, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2008} ; [ DW_TAG_member ]
!2008 = metadata !{i32 589860, metadata !1943, metadata !"unsigned int", metadata !1943, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2009 = metadata !{i32 589837, metadata !2001, metadata !"pad", metadata !2002, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !1975} ; [ DW_TAG_member ]
!2010 = metadata !{i32 589837, metadata !1994, metadata !"maxposarg", metadata !1945, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !1963} ; [ DW_TAG_member ]
!2011 = metadata !{i32 589837, metadata !1994, metadata !"num_data_args", metadata !1945, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !1963} ; [ DW_TAG_member ]
!2012 = metadata !{i32 589837, metadata !1994, metadata !"conv_num", metadata !1945, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2008} ; [ DW_TAG_member ]
!2013 = metadata !{i32 589837, metadata !1994, metadata !"argnumber", metadata !1945, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2014} ; [ DW_TAG_member ]
!2014 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !1961, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!2015 = metadata !{i32 589837, metadata !1994, metadata !"argtype", metadata !1945, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2016} ; [ DW_TAG_member ]
!2016 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !1963, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2017 = metadata !{metadata !2018}
!2018 = metadata !{i32 589857, i64 0, i64 8}      ; [ DW_TAG_subrange_type ]
!2019 = metadata !{i32 589837, metadata !1994, metadata !"arg", metadata !1945, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2020} ; [ DW_TAG_member ]
!2020 = metadata !{i32 589846, metadata !2021, metadata !"va_list", metadata !2021, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2022} ; [ DW_TAG_typedef ]
!2021 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1944} ; [ DW_TAG_file_type ]
!2022 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2023, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!2023 = metadata !{i32 589843, metadata !1943, metadata !"__va_list_tag", metadata !2024, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2025, i32 0, null} ; [ DW_TAG_structure_type ]
!2024 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !1944} ; [ DW_TAG_file_type ]
!2025 = metadata !{metadata !2026, metadata !2027, metadata !2028, metadata !2030}
!2026 = metadata !{i32 589837, metadata !2023, metadata !"gp_offset", metadata !2024, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2008} ; [ DW_TAG_member ]
!2027 = metadata !{i32 589837, metadata !2023, metadata !"fp_offset", metadata !2024, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2008} ; [ DW_TAG_member ]
!2028 = metadata !{i32 589837, metadata !2023, metadata !"overflow_arg_area", metadata !2024, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2029} ; [ DW_TAG_member ]
!2029 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2030 = metadata !{i32 589837, metadata !2023, metadata !"reg_save_area", metadata !2024, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2029} ; [ DW_TAG_member ]
!2031 = metadata !{metadata !2032}
!2032 = metadata !{i32 589857, i64 0, i64 0}      ; [ DW_TAG_subrange_type ]
!2033 = metadata !{i32 589837, metadata !1994, metadata !"argvalue", metadata !1945, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2034} ; [ DW_TAG_member ]
!2034 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2035, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2035 = metadata !{i32 589846, metadata !1945, metadata !"argvalue_t", metadata !1945, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2036} ; [ DW_TAG_typedef ]
!2036 = metadata !{i32 589847, metadata !1943, metadata !"", metadata !1945, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2037, i32 0, null} ; [ DW_TAG_union_type ]
!2037 = metadata !{metadata !2038, metadata !2039, metadata !2040, metadata !2041, metadata !2043, metadata !2045, metadata !2047}
!2038 = metadata !{i32 589837, metadata !2036, metadata !"wc", metadata !1945, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !1975} ; [ DW_TAG_member ]
!2039 = metadata !{i32 589837, metadata !2036, metadata !"u", metadata !1945, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2008} ; [ DW_TAG_member ]
!2040 = metadata !{i32 589837, metadata !2036, metadata !"ul", metadata !1945, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !1950} ; [ DW_TAG_member ]
!2041 = metadata !{i32 589837, metadata !2036, metadata !"ull", metadata !1945, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2042} ; [ DW_TAG_member ]
!2042 = metadata !{i32 589860, metadata !1943, metadata !"long long unsigned int", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2043 = metadata !{i32 589837, metadata !2036, metadata !"d", metadata !1945, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2044} ; [ DW_TAG_member ]
!2044 = metadata !{i32 589860, metadata !1943, metadata !"double", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2045 = metadata !{i32 589837, metadata !2036, metadata !"ld", metadata !1945, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2046} ; [ DW_TAG_member ]
!2046 = metadata !{i32 589860, metadata !1943, metadata !"long double", metadata !1943, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2047 = metadata !{i32 589837, metadata !2036, metadata !"p", metadata !1945, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2029} ; [ DW_TAG_member ]
!2048 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !1963} ; [ DW_TAG_pointer_type ]
!2049 = metadata !{i32 589870, i32 0, metadata !1943, metadata !"vfprintf", metadata !"vfprintf", metadata !"vfprintf", metadata !1945, i32 1867, metadata !2050, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_t
!2050 = metadata !{i32 589845, metadata !1943, metadata !"", metadata !1943, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2051, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2051 = metadata !{metadata !1963, metadata !1951, metadata !1997, metadata !2052}
!2052 = metadata !{i32 589839, metadata !1943, metadata !"", metadata !1943, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2023} ; [ DW_TAG_pointer_type ]
!2053 = metadata !{i32 589870, i32 0, metadata !2054, metadata !"sc_getc", metadata !"sc_getc", metadata !"", metadata !2056, i32 987, metadata !2057, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @sc_getc} ; [ DW_T
!2054 = metadata !{i32 589865, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2055} ; [ DW_TAG_file_type ]
!2055 = metadata !{i32 589841, i32 0, i32 1, metadata !"vfscanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW_T
!2056 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2055} ; [ DW_TAG_file_type ]
!2057 = metadata !{i32 589845, metadata !2054, metadata !"", metadata !2054, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2058, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2058 = metadata !{metadata !2059, metadata !2060}
!2059 = metadata !{i32 589860, metadata !2054, metadata !"int", metadata !2054, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2060 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2061} ; [ DW_TAG_pointer_type ]
!2061 = metadata !{i32 589843, metadata !2054, metadata !"scan_cookie", metadata !2056, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2062, i32 0, null} ; [ DW_TAG_structure_type ]
!2062 = metadata !{metadata !2063, metadata !2064, metadata !2065, metadata !2098, metadata !2099, metadata !2100, metadata !2101, metadata !2102, metadata !2104, metadata !2105, metadata !2106, metadata !2108, metadata !2111, metadata !2112, metadata !2
!2063 = metadata !{i32 589837, metadata !2061, metadata !"cc", metadata !2056, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2064 = metadata !{i32 589837, metadata !2061, metadata !"ungot_char", metadata !2056, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2065 = metadata !{i32 589837, metadata !2061, metadata !"fp", metadata !2056, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2066} ; [ DW_TAG_member ]
!2066 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2067} ; [ DW_TAG_pointer_type ]
!2067 = metadata !{i32 589846, metadata !2068, metadata !"FILE", metadata !2068, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2069} ; [ DW_TAG_typedef ]
!2068 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2055} ; [ DW_TAG_file_type ]
!2069 = metadata !{i32 589843, metadata !2054, metadata !"__STDIO_FILE_STRUCT", metadata !2068, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2070, i32 0, null} ; [ DW_TAG_structure_type ]
!2070 = metadata !{metadata !2071, metadata !2074, metadata !2077, metadata !2078, metadata !2080, metadata !2081, metadata !2082, metadata !2083, metadata !2084, metadata !2085, metadata !2087, metadata !2091}
!2071 = metadata !{i32 589837, metadata !2069, metadata !"__modeflags", metadata !2072, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2073} ; [ DW_TAG_member ]
!2072 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2055} ; [ DW_TAG_file_type ]
!2073 = metadata !{i32 589860, metadata !2054, metadata !"short unsigned int", metadata !2054, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2074 = metadata !{i32 589837, metadata !2069, metadata !"__ungot_width", metadata !2072, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2075} ; [ DW_TAG_member ]
!2075 = metadata !{i32 589825, metadata !2054, metadata !"", metadata !2054, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2076, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2076 = metadata !{i32 589860, metadata !2054, metadata !"unsigned char", metadata !2054, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2077 = metadata !{i32 589837, metadata !2069, metadata !"__filedes", metadata !2072, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2078 = metadata !{i32 589837, metadata !2069, metadata !"__bufstart", metadata !2072, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2079 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2076} ; [ DW_TAG_pointer_type ]
!2080 = metadata !{i32 589837, metadata !2069, metadata !"__bufend", metadata !2072, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2081 = metadata !{i32 589837, metadata !2069, metadata !"__bufpos", metadata !2072, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2082 = metadata !{i32 589837, metadata !2069, metadata !"__bufread", metadata !2072, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2083 = metadata !{i32 589837, metadata !2069, metadata !"__bufgetc_u", metadata !2072, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2084 = metadata !{i32 589837, metadata !2069, metadata !"__bufputc_u", metadata !2072, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2079} ; [ DW_TAG_member ]
!2085 = metadata !{i32 589837, metadata !2069, metadata !"__nextopen", metadata !2072, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2086} ; [ DW_TAG_member ]
!2086 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2069} ; [ DW_TAG_pointer_type ]
!2087 = metadata !{i32 589837, metadata !2069, metadata !"__ungot", metadata !2072, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2088} ; [ DW_TAG_member ]
!2088 = metadata !{i32 589825, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2089, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2089 = metadata !{i32 589846, metadata !2090, metadata !"wchar_t", metadata !2090, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2059} ; [ DW_TAG_typedef ]
!2090 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2055} ; [ DW_TAG_file_type ]
!2091 = metadata !{i32 589837, metadata !2069, metadata !"__state", metadata !2072, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2092} ; [ DW_TAG_member ]
!2092 = metadata !{i32 589846, metadata !2093, metadata !"__mbstate_t", metadata !2093, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2094} ; [ DW_TAG_typedef ]
!2093 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2055} ; [ DW_TAG_file_type ]
!2094 = metadata !{i32 589843, metadata !2054, metadata !"", metadata !2093, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2095, i32 0, null} ; [ DW_TAG_structure_type ]
!2095 = metadata !{metadata !2096, metadata !2097}
!2096 = metadata !{i32 589837, metadata !2094, metadata !"__mask", metadata !2093, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2089} ; [ DW_TAG_member ]
!2097 = metadata !{i32 589837, metadata !2094, metadata !"__wc", metadata !2093, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2089} ; [ DW_TAG_member ]
!2098 = metadata !{i32 589837, metadata !2061, metadata !"nread", metadata !2056, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2099 = metadata !{i32 589837, metadata !2061, metadata !"width", metadata !2056, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2100 = metadata !{i32 589837, metadata !2061, metadata !"app_ungot", metadata !2056, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2089} ; [ DW_TAG_member ]
!2101 = metadata !{i32 589837, metadata !2061, metadata !"ungot_wchar_width", metadata !2056, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2076} ; [ DW_TAG_member ]
!2102 = metadata !{i32 589837, metadata !2061, metadata !"ungot_flag", metadata !2056, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2103} ; [ DW_TAG_member ]
!2103 = metadata !{i32 589860, metadata !2054, metadata !"char", metadata !2054, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2104 = metadata !{i32 589837, metadata !2061, metadata !"ungot_wflag", metadata !2056, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2103} ; [ DW_TAG_member ]
!2105 = metadata !{i32 589837, metadata !2061, metadata !"mb_fail", metadata !2056, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2103} ; [ DW_TAG_member ]
!2106 = metadata !{i32 589837, metadata !2061, metadata !"mbstate", metadata !2056, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2107} ; [ DW_TAG_member ]
!2107 = metadata !{i32 589846, metadata !2093, metadata !"mbstate_t", metadata !2093, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2094} ; [ DW_TAG_typedef ]
!2108 = metadata !{i32 589837, metadata !2061, metadata !"wc", metadata !2056, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2109} ; [ DW_TAG_member ]
!2109 = metadata !{i32 589846, metadata !2090, metadata !"wint_t", metadata !2090, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2110} ; [ DW_TAG_typedef ]
!2110 = metadata !{i32 589860, metadata !2054, metadata !"unsigned int", metadata !2054, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2111 = metadata !{i32 589837, metadata !2061, metadata !"ungot_wchar", metadata !2056, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2109} ; [ DW_TAG_member ]
!2112 = metadata !{i32 589837, metadata !2061, metadata !"sc_getc", metadata !2056, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2113} ; [ DW_TAG_member ]
!2113 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2057} ; [ DW_TAG_pointer_type ]
!2114 = metadata !{i32 589837, metadata !2061, metadata !"decpt", metadata !2056, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2115} ; [ DW_TAG_member ]
!2115 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2116} ; [ DW_TAG_pointer_type ]
!2116 = metadata !{i32 589862, metadata !2054, metadata !"", metadata !2054, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2076} ; [ DW_TAG_const_type ]
!2117 = metadata !{i32 589837, metadata !2061, metadata !"decpt_len", metadata !2056, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2059} ; [ DW_TAG_member ]
!2118 = metadata !{i32 589837, metadata !2061, metadata !"decpt_wc", metadata !2056, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2089} ; [ DW_TAG_member ]
!2119 = metadata !{i32 589837, metadata !2061, metadata !"fake_decpt", metadata !2056, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2115} ; [ DW_TAG_member ]
!2120 = metadata !{i32 589870, i32 0, metadata !2054, metadata !"scan_getwc", metadata !"scan_getwc", metadata !"", metadata !2056, i32 994, metadata !2057, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)* @scan_getwc}
!2121 = metadata !{i32 589870, i32 0, metadata !2054, metadata !"vfscanf", metadata !"vfscanf", metadata !"vfscanf", metadata !2056, i32 1180, metadata !2122, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i8*, %struct.__va_list_tag*
!2122 = metadata !{i32 589845, metadata !2054, metadata !"", metadata !2054, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2123, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2123 = metadata !{metadata !2059, metadata !2066, metadata !2124, metadata !2126}
!2124 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2125} ; [ DW_TAG_pointer_type ]
!2125 = metadata !{i32 589862, metadata !2054, metadata !"", metadata !2054, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2103} ; [ DW_TAG_const_type ]
!2126 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2127} ; [ DW_TAG_pointer_type ]
!2127 = metadata !{i32 589843, metadata !2054, metadata !"__va_list_tag", metadata !2128, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2129, i32 0, null} ; [ DW_TAG_structure_type ]
!2128 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2055} ; [ DW_TAG_file_type ]
!2129 = metadata !{metadata !2130, metadata !2131, metadata !2132, metadata !2134}
!2130 = metadata !{i32 589837, metadata !2127, metadata !"gp_offset", metadata !2128, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2110} ; [ DW_TAG_member ]
!2131 = metadata !{i32 589837, metadata !2127, metadata !"fp_offset", metadata !2128, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2110} ; [ DW_TAG_member ]
!2132 = metadata !{i32 589837, metadata !2127, metadata !"overflow_arg_area", metadata !2128, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2133} ; [ DW_TAG_member ]
!2133 = metadata !{i32 589839, metadata !2054, metadata !"", metadata !2054, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2134 = metadata !{i32 589837, metadata !2127, metadata !"reg_save_area", metadata !2128, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2133} ; [ DW_TAG_member ]
!2135 = metadata !{i32 589870, i32 0, metadata !2054, metadata !"kill_scan_cookie", metadata !"kill_scan_cookie", metadata !"", metadata !2056, i32 1131, metadata !2136, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_cookie*)
!2136 = metadata !{i32 589845, metadata !2054, metadata !"", metadata !2054, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2137, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2137 = metadata !{null, metadata !2060}
!2138 = metadata !{i32 589870, i32 0, metadata !2139, metadata !"vsnprintf", metadata !"vsnprintf", metadata !"vsnprintf", metadata !2139, i32 23, metadata !2141, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i8*, i64, i8*, %struct.__va_
!2139 = metadata !{i32 589865, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2140} ; [ DW_TAG_file_type ]
!2140 = metadata !{i32 589841, i32 0, i32 1, metadata !"vsnprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2141 = metadata !{i32 589845, metadata !2139, metadata !"", metadata !2139, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2142, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2142 = metadata !{metadata !2143, metadata !2144, metadata !2146, metadata !2149, metadata !2151}
!2143 = metadata !{i32 589860, metadata !2139, metadata !"int", metadata !2139, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2144 = metadata !{i32 589839, metadata !2139, metadata !"", metadata !2139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2145} ; [ DW_TAG_pointer_type ]
!2145 = metadata !{i32 589860, metadata !2139, metadata !"char", metadata !2139, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2146 = metadata !{i32 589846, metadata !2147, metadata !"size_t", metadata !2147, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2148} ; [ DW_TAG_typedef ]
!2147 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2140} ; [ DW_TAG_file_type ]
!2148 = metadata !{i32 589860, metadata !2139, metadata !"long unsigned int", metadata !2139, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2149 = metadata !{i32 589839, metadata !2139, metadata !"", metadata !2139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2150} ; [ DW_TAG_pointer_type ]
!2150 = metadata !{i32 589862, metadata !2139, metadata !"", metadata !2139, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2145} ; [ DW_TAG_const_type ]
!2151 = metadata !{i32 589839, metadata !2139, metadata !"", metadata !2139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2152} ; [ DW_TAG_pointer_type ]
!2152 = metadata !{i32 589843, metadata !2139, metadata !"__va_list_tag", metadata !2153, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2154, i32 0, null} ; [ DW_TAG_structure_type ]
!2153 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2140} ; [ DW_TAG_file_type ]
!2154 = metadata !{metadata !2155, metadata !2157, metadata !2158, metadata !2160}
!2155 = metadata !{i32 589837, metadata !2152, metadata !"gp_offset", metadata !2153, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2156} ; [ DW_TAG_member ]
!2156 = metadata !{i32 589860, metadata !2139, metadata !"unsigned int", metadata !2139, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2157 = metadata !{i32 589837, metadata !2152, metadata !"fp_offset", metadata !2153, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2156} ; [ DW_TAG_member ]
!2158 = metadata !{i32 589837, metadata !2152, metadata !"overflow_arg_area", metadata !2153, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2159} ; [ DW_TAG_member ]
!2159 = metadata !{i32 589839, metadata !2139, metadata !"", metadata !2139, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2160 = metadata !{i32 589837, metadata !2152, metadata !"reg_save_area", metadata !2153, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2159} ; [ DW_TAG_member ]
!2161 = metadata !{i32 589870, i32 0, metadata !2162, metadata !"wcswidth", metadata !"wcswidth", metadata !"wcswidth", metadata !2164, i32 1136, metadata !2165, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32*, i64)* @wcswidth} ; [ DW
!2162 = metadata !{i32 589865, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2163} ; [ DW_TAG_file_type ]
!2163 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcswidth.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2164 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2163} ; [ DW_TAG_file_type ]
!2165 = metadata !{i32 589845, metadata !2162, metadata !"", metadata !2162, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2166, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2166 = metadata !{metadata !2167, metadata !2168, metadata !2171}
!2167 = metadata !{i32 589860, metadata !2162, metadata !"int", metadata !2162, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2168 = metadata !{i32 589839, metadata !2162, metadata !"", metadata !2162, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2169} ; [ DW_TAG_pointer_type ]
!2169 = metadata !{i32 589846, metadata !2170, metadata !"wchar_t", metadata !2170, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2167} ; [ DW_TAG_typedef ]
!2170 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2163} ; [ DW_TAG_file_type ]
!2171 = metadata !{i32 589846, metadata !2170, metadata !"size_t", metadata !2170, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2172} ; [ DW_TAG_typedef ]
!2172 = metadata !{i32 589860, metadata !2162, metadata !"long unsigned int", metadata !2162, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2173 = metadata !{i32 589870, i32 0, metadata !2174, metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !"__init_scan_cookie", metadata !2176, i32 716, metadata !2177, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void 
!2174 = metadata !{i32 589865, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2175} ; [ DW_TAG_file_type ]
!2175 = metadata !{i32 589841, i32 0, i32 1, metadata !"__scan_cookie.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2176 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2175} ; [ DW_TAG_file_type ]
!2177 = metadata !{i32 589845, metadata !2174, metadata !"", metadata !2174, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2178, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2178 = metadata !{null, metadata !2179, metadata !2186}
!2179 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2180} ; [ DW_TAG_pointer_type ]
!2180 = metadata !{i32 589843, metadata !2174, metadata !"scan_cookie", metadata !2176, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2181, i32 0, null} ; [ DW_TAG_structure_type ]
!2181 = metadata !{metadata !2182, metadata !2184, metadata !2185, metadata !2218, metadata !2219, metadata !2220, metadata !2221, metadata !2222, metadata !2224, metadata !2225, metadata !2226, metadata !2228, metadata !2231, metadata !2232, metadata !2
!2182 = metadata !{i32 589837, metadata !2180, metadata !"cc", metadata !2176, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2183 = metadata !{i32 589860, metadata !2174, metadata !"int", metadata !2174, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2184 = metadata !{i32 589837, metadata !2180, metadata !"ungot_char", metadata !2176, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2185 = metadata !{i32 589837, metadata !2180, metadata !"fp", metadata !2176, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2186} ; [ DW_TAG_member ]
!2186 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2187} ; [ DW_TAG_pointer_type ]
!2187 = metadata !{i32 589846, metadata !2188, metadata !"FILE", metadata !2188, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2189} ; [ DW_TAG_typedef ]
!2188 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2175} ; [ DW_TAG_file_type ]
!2189 = metadata !{i32 589843, metadata !2174, metadata !"__STDIO_FILE_STRUCT", metadata !2188, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2190, i32 0, null} ; [ DW_TAG_structure_type ]
!2190 = metadata !{metadata !2191, metadata !2194, metadata !2197, metadata !2198, metadata !2200, metadata !2201, metadata !2202, metadata !2203, metadata !2204, metadata !2205, metadata !2207, metadata !2211}
!2191 = metadata !{i32 589837, metadata !2189, metadata !"__modeflags", metadata !2192, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2193} ; [ DW_TAG_member ]
!2192 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2175} ; [ DW_TAG_file_type ]
!2193 = metadata !{i32 589860, metadata !2174, metadata !"short unsigned int", metadata !2174, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2194 = metadata !{i32 589837, metadata !2189, metadata !"__ungot_width", metadata !2192, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2195} ; [ DW_TAG_member ]
!2195 = metadata !{i32 589825, metadata !2174, metadata !"", metadata !2174, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2196, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2196 = metadata !{i32 589860, metadata !2174, metadata !"unsigned char", metadata !2174, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2197 = metadata !{i32 589837, metadata !2189, metadata !"__filedes", metadata !2192, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2198 = metadata !{i32 589837, metadata !2189, metadata !"__bufstart", metadata !2192, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2199 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2196} ; [ DW_TAG_pointer_type ]
!2200 = metadata !{i32 589837, metadata !2189, metadata !"__bufend", metadata !2192, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2201 = metadata !{i32 589837, metadata !2189, metadata !"__bufpos", metadata !2192, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2202 = metadata !{i32 589837, metadata !2189, metadata !"__bufread", metadata !2192, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2203 = metadata !{i32 589837, metadata !2189, metadata !"__bufgetc_u", metadata !2192, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2204 = metadata !{i32 589837, metadata !2189, metadata !"__bufputc_u", metadata !2192, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2199} ; [ DW_TAG_member ]
!2205 = metadata !{i32 589837, metadata !2189, metadata !"__nextopen", metadata !2192, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2206} ; [ DW_TAG_member ]
!2206 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2189} ; [ DW_TAG_pointer_type ]
!2207 = metadata !{i32 589837, metadata !2189, metadata !"__ungot", metadata !2192, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2208} ; [ DW_TAG_member ]
!2208 = metadata !{i32 589825, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2209, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2209 = metadata !{i32 589846, metadata !2210, metadata !"wchar_t", metadata !2210, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2183} ; [ DW_TAG_typedef ]
!2210 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2175} ; [ DW_TAG_file_type ]
!2211 = metadata !{i32 589837, metadata !2189, metadata !"__state", metadata !2192, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2212} ; [ DW_TAG_member ]
!2212 = metadata !{i32 589846, metadata !2213, metadata !"__mbstate_t", metadata !2213, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2214} ; [ DW_TAG_typedef ]
!2213 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2175} ; [ DW_TAG_file_type ]
!2214 = metadata !{i32 589843, metadata !2174, metadata !"", metadata !2213, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2215, i32 0, null} ; [ DW_TAG_structure_type ]
!2215 = metadata !{metadata !2216, metadata !2217}
!2216 = metadata !{i32 589837, metadata !2214, metadata !"__mask", metadata !2213, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2209} ; [ DW_TAG_member ]
!2217 = metadata !{i32 589837, metadata !2214, metadata !"__wc", metadata !2213, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2209} ; [ DW_TAG_member ]
!2218 = metadata !{i32 589837, metadata !2180, metadata !"nread", metadata !2176, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2219 = metadata !{i32 589837, metadata !2180, metadata !"width", metadata !2176, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2220 = metadata !{i32 589837, metadata !2180, metadata !"app_ungot", metadata !2176, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2209} ; [ DW_TAG_member ]
!2221 = metadata !{i32 589837, metadata !2180, metadata !"ungot_wchar_width", metadata !2176, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2196} ; [ DW_TAG_member ]
!2222 = metadata !{i32 589837, metadata !2180, metadata !"ungot_flag", metadata !2176, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2223} ; [ DW_TAG_member ]
!2223 = metadata !{i32 589860, metadata !2174, metadata !"char", metadata !2174, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2224 = metadata !{i32 589837, metadata !2180, metadata !"ungot_wflag", metadata !2176, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2223} ; [ DW_TAG_member ]
!2225 = metadata !{i32 589837, metadata !2180, metadata !"mb_fail", metadata !2176, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2223} ; [ DW_TAG_member ]
!2226 = metadata !{i32 589837, metadata !2180, metadata !"mbstate", metadata !2176, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2227} ; [ DW_TAG_member ]
!2227 = metadata !{i32 589846, metadata !2213, metadata !"mbstate_t", metadata !2213, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2214} ; [ DW_TAG_typedef ]
!2228 = metadata !{i32 589837, metadata !2180, metadata !"wc", metadata !2176, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2229} ; [ DW_TAG_member ]
!2229 = metadata !{i32 589846, metadata !2210, metadata !"wint_t", metadata !2210, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2230} ; [ DW_TAG_typedef ]
!2230 = metadata !{i32 589860, metadata !2174, metadata !"unsigned int", metadata !2174, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2231 = metadata !{i32 589837, metadata !2180, metadata !"ungot_wchar", metadata !2176, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2229} ; [ DW_TAG_member ]
!2232 = metadata !{i32 589837, metadata !2180, metadata !"sc_getc", metadata !2176, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2233} ; [ DW_TAG_member ]
!2233 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2234} ; [ DW_TAG_pointer_type ]
!2234 = metadata !{i32 589845, metadata !2174, metadata !"", metadata !2174, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2235, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2235 = metadata !{metadata !2183, metadata !2179}
!2236 = metadata !{i32 589837, metadata !2180, metadata !"decpt", metadata !2176, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2237} ; [ DW_TAG_member ]
!2237 = metadata !{i32 589839, metadata !2174, metadata !"", metadata !2174, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2238} ; [ DW_TAG_pointer_type ]
!2238 = metadata !{i32 589862, metadata !2174, metadata !"", metadata !2174, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2196} ; [ DW_TAG_const_type ]
!2239 = metadata !{i32 589837, metadata !2180, metadata !"decpt_len", metadata !2176, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2183} ; [ DW_TAG_member ]
!2240 = metadata !{i32 589837, metadata !2180, metadata !"decpt_wc", metadata !2176, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2209} ; [ DW_TAG_member ]
!2241 = metadata !{i32 589837, metadata !2180, metadata !"fake_decpt", metadata !2176, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2237} ; [ DW_TAG_member ]
!2242 = metadata !{i32 589870, i32 0, metadata !2174, metadata !"__scan_getc", metadata !"__scan_getc", metadata !"__scan_getc", metadata !2176, i32 756, metadata !2234, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.scan_cookie*)
!2243 = metadata !{i32 589870, i32 0, metadata !2174, metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !"__scan_ungetc", metadata !2176, i32 804, metadata !2244, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.scan_c
!2244 = metadata !{i32 589845, metadata !2174, metadata !"", metadata !2174, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2245, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2245 = metadata !{null, metadata !2179}
!2246 = metadata !{i32 589870, i32 0, metadata !2247, metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !"__psfs_do_numeric", metadata !2249, i32 1791, metadata !2250, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%s
!2247 = metadata !{i32 589865, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2248} ; [ DW_TAG_file_type ]
!2248 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_do_numeric.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2249 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2248} ; [ DW_TAG_file_type ]
!2250 = metadata !{i32 589845, metadata !2247, metadata !"", metadata !2247, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2251, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2251 = metadata !{metadata !2252, metadata !2253, metadata !2273}
!2252 = metadata !{i32 589860, metadata !2247, metadata !"int", metadata !2247, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2253 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2254} ; [ DW_TAG_pointer_type ]
!2254 = metadata !{i32 589846, metadata !2249, metadata !"psfs_t", metadata !2249, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !2255} ; [ DW_TAG_typedef ]
!2255 = metadata !{i32 589843, metadata !2247, metadata !"", metadata !2249, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !2256, i32 0, null} ; [ DW_TAG_structure_type ]
!2256 = metadata !{metadata !2257, metadata !2260, metadata !2261, metadata !2262, metadata !2263, metadata !2267, metadata !2268, metadata !2269, metadata !2270, metadata !2271, metadata !2272}
!2257 = metadata !{i32 589837, metadata !2255, metadata !"pos_args", metadata !2249, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !2258} ; [ DW_TAG_member ]
!2258 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !2259, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2259 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2260 = metadata !{i32 589837, metadata !2255, metadata !"num_pos_args", metadata !2249, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2261 = metadata !{i32 589837, metadata !2255, metadata !"cur_pos_arg", metadata !2249, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2262 = metadata !{i32 589837, metadata !2255, metadata !"cur_ptr", metadata !2249, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !2259} ; [ DW_TAG_member ]
!2263 = metadata !{i32 589837, metadata !2255, metadata !"fmt", metadata !2249, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2264 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2265} ; [ DW_TAG_pointer_type ]
!2265 = metadata !{i32 589862, metadata !2247, metadata !"", metadata !2247, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2266} ; [ DW_TAG_const_type ]
!2266 = metadata !{i32 589860, metadata !2247, metadata !"unsigned char", metadata !2247, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2267 = metadata !{i32 589837, metadata !2255, metadata !"cnt", metadata !2249, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2268 = metadata !{i32 589837, metadata !2255, metadata !"dataargtype", metadata !2249, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2269 = metadata !{i32 589837, metadata !2255, metadata !"conv_num", metadata !2249, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2270 = metadata !{i32 589837, metadata !2255, metadata !"max_width", metadata !2249, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2271 = metadata !{i32 589837, metadata !2255, metadata !"store", metadata !2249, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !2266} ; [ DW_TAG_member ]
!2272 = metadata !{i32 589837, metadata !2255, metadata !"flags", metadata !2249, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !2266} ; [ DW_TAG_member ]
!2273 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2274} ; [ DW_TAG_pointer_type ]
!2274 = metadata !{i32 589843, metadata !2247, metadata !"scan_cookie", metadata !2249, i32 628, i64 640, i64 64, i64 0, i32 0, null, metadata !2275, i32 0, null} ; [ DW_TAG_structure_type ]
!2275 = metadata !{metadata !2276, metadata !2277, metadata !2278, metadata !2310, metadata !2311, metadata !2312, metadata !2313, metadata !2314, metadata !2316, metadata !2317, metadata !2318, metadata !2320, metadata !2323, metadata !2324, metadata !2
!2276 = metadata !{i32 589837, metadata !2274, metadata !"cc", metadata !2249, i32 629, i64 32, i64 32, i64 0, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2277 = metadata !{i32 589837, metadata !2274, metadata !"ungot_char", metadata !2249, i32 630, i64 32, i64 32, i64 32, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2278 = metadata !{i32 589837, metadata !2274, metadata !"fp", metadata !2249, i32 631, i64 64, i64 64, i64 64, i32 0, metadata !2279} ; [ DW_TAG_member ]
!2279 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2280} ; [ DW_TAG_pointer_type ]
!2280 = metadata !{i32 589846, metadata !2281, metadata !"FILE", metadata !2281, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2282} ; [ DW_TAG_typedef ]
!2281 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2248} ; [ DW_TAG_file_type ]
!2282 = metadata !{i32 589843, metadata !2247, metadata !"__STDIO_FILE_STRUCT", metadata !2281, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2283, i32 0, null} ; [ DW_TAG_structure_type ]
!2283 = metadata !{metadata !2284, metadata !2287, metadata !2289, metadata !2290, metadata !2292, metadata !2293, metadata !2294, metadata !2295, metadata !2296, metadata !2297, metadata !2299, metadata !2303}
!2284 = metadata !{i32 589837, metadata !2282, metadata !"__modeflags", metadata !2285, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2286} ; [ DW_TAG_member ]
!2285 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2248} ; [ DW_TAG_file_type ]
!2286 = metadata !{i32 589860, metadata !2247, metadata !"short unsigned int", metadata !2247, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2287 = metadata !{i32 589837, metadata !2282, metadata !"__ungot_width", metadata !2285, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2288} ; [ DW_TAG_member ]
!2288 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2266, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2289 = metadata !{i32 589837, metadata !2282, metadata !"__filedes", metadata !2285, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2290 = metadata !{i32 589837, metadata !2282, metadata !"__bufstart", metadata !2285, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2291 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2266} ; [ DW_TAG_pointer_type ]
!2292 = metadata !{i32 589837, metadata !2282, metadata !"__bufend", metadata !2285, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2293 = metadata !{i32 589837, metadata !2282, metadata !"__bufpos", metadata !2285, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2294 = metadata !{i32 589837, metadata !2282, metadata !"__bufread", metadata !2285, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2295 = metadata !{i32 589837, metadata !2282, metadata !"__bufgetc_u", metadata !2285, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2296 = metadata !{i32 589837, metadata !2282, metadata !"__bufputc_u", metadata !2285, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2291} ; [ DW_TAG_member ]
!2297 = metadata !{i32 589837, metadata !2282, metadata !"__nextopen", metadata !2285, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2298} ; [ DW_TAG_member ]
!2298 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2282} ; [ DW_TAG_pointer_type ]
!2299 = metadata !{i32 589837, metadata !2282, metadata !"__ungot", metadata !2285, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2300} ; [ DW_TAG_member ]
!2300 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2301, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2301 = metadata !{i32 589846, metadata !2302, metadata !"wchar_t", metadata !2302, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2252} ; [ DW_TAG_typedef ]
!2302 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2248} ; [ DW_TAG_file_type ]
!2303 = metadata !{i32 589837, metadata !2282, metadata !"__state", metadata !2285, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2304} ; [ DW_TAG_member ]
!2304 = metadata !{i32 589846, metadata !2305, metadata !"__mbstate_t", metadata !2305, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2306} ; [ DW_TAG_typedef ]
!2305 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2248} ; [ DW_TAG_file_type ]
!2306 = metadata !{i32 589843, metadata !2247, metadata !"", metadata !2305, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2307, i32 0, null} ; [ DW_TAG_structure_type ]
!2307 = metadata !{metadata !2308, metadata !2309}
!2308 = metadata !{i32 589837, metadata !2306, metadata !"__mask", metadata !2305, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2301} ; [ DW_TAG_member ]
!2309 = metadata !{i32 589837, metadata !2306, metadata !"__wc", metadata !2305, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2301} ; [ DW_TAG_member ]
!2310 = metadata !{i32 589837, metadata !2274, metadata !"nread", metadata !2249, i32 632, i64 32, i64 32, i64 128, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2311 = metadata !{i32 589837, metadata !2274, metadata !"width", metadata !2249, i32 633, i64 32, i64 32, i64 160, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2312 = metadata !{i32 589837, metadata !2274, metadata !"app_ungot", metadata !2249, i32 636, i64 32, i64 32, i64 192, i32 0, metadata !2301} ; [ DW_TAG_member ]
!2313 = metadata !{i32 589837, metadata !2274, metadata !"ungot_wchar_width", metadata !2249, i32 637, i64 8, i64 8, i64 224, i32 0, metadata !2266} ; [ DW_TAG_member ]
!2314 = metadata !{i32 589837, metadata !2274, metadata !"ungot_flag", metadata !2249, i32 642, i64 8, i64 8, i64 232, i32 0, metadata !2315} ; [ DW_TAG_member ]
!2315 = metadata !{i32 589860, metadata !2247, metadata !"char", metadata !2247, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2316 = metadata !{i32 589837, metadata !2274, metadata !"ungot_wflag", metadata !2249, i32 645, i64 8, i64 8, i64 240, i32 0, metadata !2315} ; [ DW_TAG_member ]
!2317 = metadata !{i32 589837, metadata !2274, metadata !"mb_fail", metadata !2249, i32 646, i64 8, i64 8, i64 248, i32 0, metadata !2315} ; [ DW_TAG_member ]
!2318 = metadata !{i32 589837, metadata !2274, metadata !"mbstate", metadata !2249, i32 647, i64 64, i64 32, i64 256, i32 0, metadata !2319} ; [ DW_TAG_member ]
!2319 = metadata !{i32 589846, metadata !2305, metadata !"mbstate_t", metadata !2305, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2306} ; [ DW_TAG_typedef ]
!2320 = metadata !{i32 589837, metadata !2274, metadata !"wc", metadata !2249, i32 648, i64 32, i64 32, i64 320, i32 0, metadata !2321} ; [ DW_TAG_member ]
!2321 = metadata !{i32 589846, metadata !2302, metadata !"wint_t", metadata !2302, i32 355, i64 0, i64 0, i64 0, i32 0, metadata !2322} ; [ DW_TAG_typedef ]
!2322 = metadata !{i32 589860, metadata !2247, metadata !"unsigned int", metadata !2247, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2323 = metadata !{i32 589837, metadata !2274, metadata !"ungot_wchar", metadata !2249, i32 649, i64 32, i64 32, i64 352, i32 0, metadata !2321} ; [ DW_TAG_member ]
!2324 = metadata !{i32 589837, metadata !2274, metadata !"sc_getc", metadata !2249, i32 650, i64 64, i64 64, i64 384, i32 0, metadata !2325} ; [ DW_TAG_member ]
!2325 = metadata !{i32 589839, metadata !2247, metadata !"", metadata !2247, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2326} ; [ DW_TAG_pointer_type ]
!2326 = metadata !{i32 589845, metadata !2247, metadata !"", metadata !2247, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2327, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2327 = metadata !{metadata !2252, metadata !2273}
!2328 = metadata !{i32 589837, metadata !2274, metadata !"decpt", metadata !2249, i32 663, i64 64, i64 64, i64 448, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2329 = metadata !{i32 589837, metadata !2274, metadata !"decpt_len", metadata !2249, i32 664, i64 32, i64 32, i64 512, i32 0, metadata !2252} ; [ DW_TAG_member ]
!2330 = metadata !{i32 589837, metadata !2274, metadata !"decpt_wc", metadata !2249, i32 666, i64 32, i64 32, i64 544, i32 0, metadata !2301} ; [ DW_TAG_member ]
!2331 = metadata !{i32 589837, metadata !2274, metadata !"fake_decpt", metadata !2249, i32 668, i64 64, i64 64, i64 576, i32 0, metadata !2264} ; [ DW_TAG_member ]
!2332 = metadata !{i32 589870, i32 0, metadata !2333, metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !"__new_exitfn", metadata !2335, i32 239, metadata !2336, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, %struct.exit_function* 
!2333 = metadata !{i32 589865, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2334} ; [ DW_TAG_file_type ]
!2334 = metadata !{i32 589841, i32 0, i32 1, metadata !"__exit_handler.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2335 = metadata !{i32 589865, metadata !"_atexit.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2334} ; [ DW_TAG_file_type ]
!2336 = metadata !{i32 589845, metadata !2333, metadata !"", metadata !2333, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2337, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2337 = metadata !{metadata !2338}
!2338 = metadata !{i32 589839, metadata !2333, metadata !"", metadata !2333, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2339} ; [ DW_TAG_pointer_type ]
!2339 = metadata !{i32 589843, metadata !2333, metadata !"exit_function", metadata !2335, i32 70, i64 256, i64 64, i64 0, i32 0, null, metadata !2340, i32 0, null} ; [ DW_TAG_structure_type ]
!2340 = metadata !{metadata !2341, metadata !2343}
!2341 = metadata !{i32 589837, metadata !2339, metadata !"type", metadata !2335, i32 75, i64 64, i64 64, i64 0, i32 0, metadata !2342} ; [ DW_TAG_member ]
!2342 = metadata !{i32 589860, metadata !2333, metadata !"long int", metadata !2333, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2343 = metadata !{i32 589837, metadata !2339, metadata !"funcs", metadata !2335, i32 86, i64 192, i64 64, i64 64, i32 0, metadata !2344} ; [ DW_TAG_member ]
!2344 = metadata !{i32 589847, metadata !2333, metadata !"", metadata !2335, i32 76, i64 192, i64 64, i64 0, i32 0, null, metadata !2345, i32 0, null} ; [ DW_TAG_union_type ]
!2345 = metadata !{metadata !2346, metadata !2357}
!2346 = metadata !{i32 589837, metadata !2344, metadata !"on_exit", metadata !2335, i32 80, i64 128, i64 64, i64 0, i32 0, metadata !2347} ; [ DW_TAG_member ]
!2347 = metadata !{i32 589843, metadata !2333, metadata !"", metadata !2335, i32 77, i64 128, i64 64, i64 0, i32 0, null, metadata !2348, i32 0, null} ; [ DW_TAG_structure_type ]
!2348 = metadata !{metadata !2349, metadata !2356}
!2349 = metadata !{i32 589837, metadata !2347, metadata !"func", metadata !2335, i32 78, i64 64, i64 64, i64 0, i32 0, metadata !2350} ; [ DW_TAG_member ]
!2350 = metadata !{i32 589846, metadata !2335, metadata !"oefuncp", metadata !2335, i32 54, i64 0, i64 0, i64 0, i32 0, metadata !2351} ; [ DW_TAG_typedef ]
!2351 = metadata !{i32 589839, metadata !2333, metadata !"", metadata !2333, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2352} ; [ DW_TAG_pointer_type ]
!2352 = metadata !{i32 589845, metadata !2333, metadata !"", metadata !2333, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2353, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2353 = metadata !{null, metadata !2354, metadata !2355}
!2354 = metadata !{i32 589860, metadata !2333, metadata !"int", metadata !2333, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2355 = metadata !{i32 589839, metadata !2333, metadata !"", metadata !2333, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2356 = metadata !{i32 589837, metadata !2347, metadata !"arg", metadata !2335, i32 79, i64 64, i64 64, i64 64, i32 0, metadata !2355} ; [ DW_TAG_member ]
!2357 = metadata !{i32 589837, metadata !2344, metadata !"cxa_atexit", metadata !2335, i32 85, i64 192, i64 64, i64 0, i32 0, metadata !2358} ; [ DW_TAG_member ]
!2358 = metadata !{i32 589843, metadata !2333, metadata !"", metadata !2335, i32 81, i64 192, i64 64, i64 0, i32 0, null, metadata !2359, i32 0, null} ; [ DW_TAG_structure_type ]
!2359 = metadata !{metadata !2360, metadata !2365, metadata !2366}
!2360 = metadata !{i32 589837, metadata !2358, metadata !"func", metadata !2335, i32 82, i64 64, i64 64, i64 0, i32 0, metadata !2361} ; [ DW_TAG_member ]
!2361 = metadata !{i32 589846, metadata !2335, metadata !"cxaefuncp", metadata !2335, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !2362} ; [ DW_TAG_typedef ]
!2362 = metadata !{i32 589839, metadata !2333, metadata !"", metadata !2333, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2363} ; [ DW_TAG_pointer_type ]
!2363 = metadata !{i32 589845, metadata !2333, metadata !"", metadata !2333, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2364, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2364 = metadata !{null, metadata !2355}
!2365 = metadata !{i32 589837, metadata !2358, metadata !"arg", metadata !2335, i32 83, i64 64, i64 64, i64 64, i32 0, metadata !2355} ; [ DW_TAG_member ]
!2366 = metadata !{i32 589837, metadata !2358, metadata !"dso_handle", metadata !2335, i32 84, i64 64, i64 64, i64 128, i32 0, metadata !2355} ; [ DW_TAG_member ]
!2367 = metadata !{i32 589870, i32 0, metadata !2333, metadata !"__exit_handler", metadata !"__exit_handler", metadata !"__exit_handler", metadata !2335, i32 279, metadata !2368, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i32)* @__ex
!2368 = metadata !{i32 589845, metadata !2333, metadata !"", metadata !2333, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2369, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2369 = metadata !{null, metadata !2354}
!2370 = metadata !{i32 589870, i32 0, metadata !2371, metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !"__psfs_parse_spec", metadata !2373, i32 830, metadata !2374, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%st
!2371 = metadata !{i32 589865, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2372} ; [ DW_TAG_file_type ]
!2372 = metadata !{i32 589841, i32 0, i32 1, metadata !"__psfs_parse_spec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2373 = metadata !{i32 589865, metadata !"_scanf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2372} ; [ DW_TAG_file_type ]
!2374 = metadata !{i32 589845, metadata !2371, metadata !"", metadata !2371, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2375, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2375 = metadata !{metadata !2376, metadata !2377}
!2376 = metadata !{i32 589860, metadata !2371, metadata !"int", metadata !2371, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2377 = metadata !{i32 589839, metadata !2371, metadata !"", metadata !2371, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2378} ; [ DW_TAG_pointer_type ]
!2378 = metadata !{i32 589846, metadata !2373, metadata !"psfs_t", metadata !2373, i32 686, i64 0, i64 0, i64 0, i32 0, metadata !2379} ; [ DW_TAG_typedef ]
!2379 = metadata !{i32 589843, metadata !2371, metadata !"", metadata !2373, i32 673, i64 960, i64 64, i64 0, i32 0, null, metadata !2380, i32 0, null} ; [ DW_TAG_structure_type ]
!2380 = metadata !{metadata !2381, metadata !2384, metadata !2385, metadata !2386, metadata !2387, metadata !2391, metadata !2392, metadata !2393, metadata !2394, metadata !2395, metadata !2396}
!2381 = metadata !{i32 589837, metadata !2379, metadata !"pos_args", metadata !2373, i32 678, i64 576, i64 64, i64 0, i32 0, metadata !2382} ; [ DW_TAG_member ]
!2382 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 576, i64 64, i64 0, i32 0, metadata !2383, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2383 = metadata !{i32 589839, metadata !2371, metadata !"", metadata !2371, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2384 = metadata !{i32 589837, metadata !2379, metadata !"num_pos_args", metadata !2373, i32 679, i64 32, i64 32, i64 576, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2385 = metadata !{i32 589837, metadata !2379, metadata !"cur_pos_arg", metadata !2373, i32 680, i64 32, i64 32, i64 608, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2386 = metadata !{i32 589837, metadata !2379, metadata !"cur_ptr", metadata !2373, i32 682, i64 64, i64 64, i64 640, i32 0, metadata !2383} ; [ DW_TAG_member ]
!2387 = metadata !{i32 589837, metadata !2379, metadata !"fmt", metadata !2373, i32 683, i64 64, i64 64, i64 704, i32 0, metadata !2388} ; [ DW_TAG_member ]
!2388 = metadata !{i32 589839, metadata !2371, metadata !"", metadata !2371, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2389} ; [ DW_TAG_pointer_type ]
!2389 = metadata !{i32 589862, metadata !2371, metadata !"", metadata !2371, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2390} ; [ DW_TAG_const_type ]
!2390 = metadata !{i32 589860, metadata !2371, metadata !"unsigned char", metadata !2371, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2391 = metadata !{i32 589837, metadata !2379, metadata !"cnt", metadata !2373, i32 684, i64 32, i64 32, i64 768, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2392 = metadata !{i32 589837, metadata !2379, metadata !"dataargtype", metadata !2373, i32 684, i64 32, i64 32, i64 800, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2393 = metadata !{i32 589837, metadata !2379, metadata !"conv_num", metadata !2373, i32 684, i64 32, i64 32, i64 832, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2394 = metadata !{i32 589837, metadata !2379, metadata !"max_width", metadata !2373, i32 684, i64 32, i64 32, i64 864, i32 0, metadata !2376} ; [ DW_TAG_member ]
!2395 = metadata !{i32 589837, metadata !2379, metadata !"store", metadata !2373, i32 685, i64 8, i64 8, i64 896, i32 0, metadata !2390} ; [ DW_TAG_member ]
!2396 = metadata !{i32 589837, metadata !2379, metadata !"flags", metadata !2373, i32 685, i64 8, i64 8, i64 904, i32 0, metadata !2390} ; [ DW_TAG_member ]
!2397 = metadata !{i32 589870, i32 0, metadata !2398, metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !"__stdio_adjust_position", metadata !2398, i32 21, metadata !2400, i1 false, i1 true, i32 0, i32 0, null, i32 256, i
!2398 = metadata !{i32 589865, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2399} ; [ DW_TAG_file_type ]
!2399 = metadata !{i32 589841, i32 0, i32 1, metadata !"_adjust_pos.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2400 = metadata !{i32 589845, metadata !2398, metadata !"", metadata !2398, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2401, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2401 = metadata !{metadata !2402, metadata !2403, metadata !2435}
!2402 = metadata !{i32 589860, metadata !2398, metadata !"int", metadata !2398, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2403 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2404} ; [ DW_TAG_pointer_type ]
!2404 = metadata !{i32 589846, metadata !2405, metadata !"FILE", metadata !2405, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2406} ; [ DW_TAG_typedef ]
!2405 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2399} ; [ DW_TAG_file_type ]
!2406 = metadata !{i32 589843, metadata !2398, metadata !"__STDIO_FILE_STRUCT", metadata !2405, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2407, i32 0, null} ; [ DW_TAG_structure_type ]
!2407 = metadata !{metadata !2408, metadata !2411, metadata !2414, metadata !2415, metadata !2417, metadata !2418, metadata !2419, metadata !2420, metadata !2421, metadata !2422, metadata !2424, metadata !2428}
!2408 = metadata !{i32 589837, metadata !2406, metadata !"__modeflags", metadata !2409, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2410} ; [ DW_TAG_member ]
!2409 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2399} ; [ DW_TAG_file_type ]
!2410 = metadata !{i32 589860, metadata !2398, metadata !"short unsigned int", metadata !2398, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2411 = metadata !{i32 589837, metadata !2406, metadata !"__ungot_width", metadata !2409, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2412} ; [ DW_TAG_member ]
!2412 = metadata !{i32 589825, metadata !2398, metadata !"", metadata !2398, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2413, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2413 = metadata !{i32 589860, metadata !2398, metadata !"unsigned char", metadata !2398, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2414 = metadata !{i32 589837, metadata !2406, metadata !"__filedes", metadata !2409, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2402} ; [ DW_TAG_member ]
!2415 = metadata !{i32 589837, metadata !2406, metadata !"__bufstart", metadata !2409, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2416 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2413} ; [ DW_TAG_pointer_type ]
!2417 = metadata !{i32 589837, metadata !2406, metadata !"__bufend", metadata !2409, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2418 = metadata !{i32 589837, metadata !2406, metadata !"__bufpos", metadata !2409, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2419 = metadata !{i32 589837, metadata !2406, metadata !"__bufread", metadata !2409, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2420 = metadata !{i32 589837, metadata !2406, metadata !"__bufgetc_u", metadata !2409, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2421 = metadata !{i32 589837, metadata !2406, metadata !"__bufputc_u", metadata !2409, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2416} ; [ DW_TAG_member ]
!2422 = metadata !{i32 589837, metadata !2406, metadata !"__nextopen", metadata !2409, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2423} ; [ DW_TAG_member ]
!2423 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2406} ; [ DW_TAG_pointer_type ]
!2424 = metadata !{i32 589837, metadata !2406, metadata !"__ungot", metadata !2409, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2425} ; [ DW_TAG_member ]
!2425 = metadata !{i32 589825, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2426, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2426 = metadata !{i32 589846, metadata !2427, metadata !"wchar_t", metadata !2427, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2402} ; [ DW_TAG_typedef ]
!2427 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2399} ; [ DW_TAG_file_type ]
!2428 = metadata !{i32 589837, metadata !2406, metadata !"__state", metadata !2409, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2429} ; [ DW_TAG_member ]
!2429 = metadata !{i32 589846, metadata !2430, metadata !"__mbstate_t", metadata !2430, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2431} ; [ DW_TAG_typedef ]
!2430 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2399} ; [ DW_TAG_file_type ]
!2431 = metadata !{i32 589843, metadata !2398, metadata !"", metadata !2430, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2432, i32 0, null} ; [ DW_TAG_structure_type ]
!2432 = metadata !{metadata !2433, metadata !2434}
!2433 = metadata !{i32 589837, metadata !2431, metadata !"__mask", metadata !2430, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2426} ; [ DW_TAG_member ]
!2434 = metadata !{i32 589837, metadata !2431, metadata !"__wc", metadata !2430, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2426} ; [ DW_TAG_member ]
!2435 = metadata !{i32 589839, metadata !2398, metadata !"", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2436} ; [ DW_TAG_pointer_type ]
!2436 = metadata !{i32 589846, metadata !2409, metadata !"__offmax_t", metadata !2409, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2437} ; [ DW_TAG_typedef ]
!2437 = metadata !{i32 589860, metadata !2398, metadata !"long int", metadata !2398, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2438 = metadata !{i32 589870, i32 0, metadata !2439, metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !"__stdio_seek", metadata !2439, i32 62, metadata !2441, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%4*, i64*, i32)* @_
!2439 = metadata !{i32 589865, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2440} ; [ DW_TAG_file_type ]
!2440 = metadata !{i32 589841, i32 0, i32 1, metadata !"_cs_funcs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ DW
!2441 = metadata !{i32 589845, metadata !2439, metadata !"", metadata !2439, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2442, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2442 = metadata !{metadata !2443, metadata !2444, metadata !2476, metadata !2443}
!2443 = metadata !{i32 589860, metadata !2439, metadata !"int", metadata !2439, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2444 = metadata !{i32 589839, metadata !2439, metadata !"", metadata !2439, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2445} ; [ DW_TAG_pointer_type ]
!2445 = metadata !{i32 589846, metadata !2446, metadata !"FILE", metadata !2446, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2447} ; [ DW_TAG_typedef ]
!2446 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2440} ; [ DW_TAG_file_type ]
!2447 = metadata !{i32 589843, metadata !2439, metadata !"__STDIO_FILE_STRUCT", metadata !2446, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2448, i32 0, null} ; [ DW_TAG_structure_type ]
!2448 = metadata !{metadata !2449, metadata !2452, metadata !2455, metadata !2456, metadata !2458, metadata !2459, metadata !2460, metadata !2461, metadata !2462, metadata !2463, metadata !2465, metadata !2469}
!2449 = metadata !{i32 589837, metadata !2447, metadata !"__modeflags", metadata !2450, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2451} ; [ DW_TAG_member ]
!2450 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2440} ; [ DW_TAG_file_type ]
!2451 = metadata !{i32 589860, metadata !2439, metadata !"short unsigned int", metadata !2439, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2452 = metadata !{i32 589837, metadata !2447, metadata !"__ungot_width", metadata !2450, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2453} ; [ DW_TAG_member ]
!2453 = metadata !{i32 589825, metadata !2439, metadata !"", metadata !2439, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2454, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2454 = metadata !{i32 589860, metadata !2439, metadata !"unsigned char", metadata !2439, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2455 = metadata !{i32 589837, metadata !2447, metadata !"__filedes", metadata !2450, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2443} ; [ DW_TAG_member ]
!2456 = metadata !{i32 589837, metadata !2447, metadata !"__bufstart", metadata !2450, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2457 = metadata !{i32 589839, metadata !2439, metadata !"", metadata !2439, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2454} ; [ DW_TAG_pointer_type ]
!2458 = metadata !{i32 589837, metadata !2447, metadata !"__bufend", metadata !2450, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2459 = metadata !{i32 589837, metadata !2447, metadata !"__bufpos", metadata !2450, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2460 = metadata !{i32 589837, metadata !2447, metadata !"__bufread", metadata !2450, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2461 = metadata !{i32 589837, metadata !2447, metadata !"__bufgetc_u", metadata !2450, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2462 = metadata !{i32 589837, metadata !2447, metadata !"__bufputc_u", metadata !2450, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2457} ; [ DW_TAG_member ]
!2463 = metadata !{i32 589837, metadata !2447, metadata !"__nextopen", metadata !2450, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2464} ; [ DW_TAG_member ]
!2464 = metadata !{i32 589839, metadata !2439, metadata !"", metadata !2439, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2447} ; [ DW_TAG_pointer_type ]
!2465 = metadata !{i32 589837, metadata !2447, metadata !"__ungot", metadata !2450, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2466} ; [ DW_TAG_member ]
!2466 = metadata !{i32 589825, metadata !2439, metadata !"", metadata !2439, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2467, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2467 = metadata !{i32 589846, metadata !2468, metadata !"wchar_t", metadata !2468, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2443} ; [ DW_TAG_typedef ]
!2468 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2440} ; [ DW_TAG_file_type ]
!2469 = metadata !{i32 589837, metadata !2447, metadata !"__state", metadata !2450, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2470} ; [ DW_TAG_member ]
!2470 = metadata !{i32 589846, metadata !2471, metadata !"__mbstate_t", metadata !2471, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2472} ; [ DW_TAG_typedef ]
!2471 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2440} ; [ DW_TAG_file_type ]
!2472 = metadata !{i32 589843, metadata !2439, metadata !"", metadata !2471, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2473, i32 0, null} ; [ DW_TAG_structure_type ]
!2473 = metadata !{metadata !2474, metadata !2475}
!2474 = metadata !{i32 589837, metadata !2472, metadata !"__mask", metadata !2471, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2467} ; [ DW_TAG_member ]
!2475 = metadata !{i32 589837, metadata !2472, metadata !"__wc", metadata !2471, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2467} ; [ DW_TAG_member ]
!2476 = metadata !{i32 589839, metadata !2439, metadata !"", metadata !2439, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2477} ; [ DW_TAG_pointer_type ]
!2477 = metadata !{i32 589846, metadata !2450, metadata !"__offmax_t", metadata !2450, i32 194, i64 0, i64 0, i64 0, i32 0, metadata !2478} ; [ DW_TAG_typedef ]
!2478 = metadata !{i32 589860, metadata !2439, metadata !"long int", metadata !2439, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2479 = metadata !{i32 589870, i32 0, metadata !2480, metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !"__xpg_strerror_r", metadata !2480, i32 166, metadata !2482, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i
!2480 = metadata !{i32 589865, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !2481} ; [ DW_TAG_file_type ]
!2481 = metadata !{i32 589841, i32 0, i32 1, metadata !"__xpg_strerror_r.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0
!2482 = metadata !{i32 589845, metadata !2480, metadata !"", metadata !2480, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2483, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2483 = metadata !{metadata !2484, metadata !2484, metadata !2485, metadata !2487}
!2484 = metadata !{i32 589860, metadata !2480, metadata !"int", metadata !2480, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2485 = metadata !{i32 589839, metadata !2480, metadata !"", metadata !2480, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2486} ; [ DW_TAG_pointer_type ]
!2486 = metadata !{i32 589860, metadata !2480, metadata !"char", metadata !2480, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2487 = metadata !{i32 589846, metadata !2488, metadata !"size_t", metadata !2488, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2489} ; [ DW_TAG_typedef ]
!2488 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2481} ; [ DW_TAG_file_type ]
!2489 = metadata !{i32 589860, metadata !2480, metadata !"long unsigned int", metadata !2480, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2490 = metadata !{i32 589870, i32 0, metadata !2491, metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !"_fpmaxtostr", metadata !2491, i32 207, metadata !2493, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (%4*, x86_fp80, %struc
!2491 = metadata !{i32 589865, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2492} ; [ DW_TAG_file_type ]
!2492 = metadata !{i32 589841, i32 0, i32 1, metadata !"_fpmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2493 = metadata !{i32 589845, metadata !2491, metadata !"", metadata !2491, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2494, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2494 = metadata !{metadata !2495, metadata !2498, metadata !2531, metadata !2534, metadata !2556}
!2495 = metadata !{i32 589846, metadata !2496, metadata !"ssize_t", metadata !2496, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !2497} ; [ DW_TAG_typedef ]
!2496 = metadata !{i32 589865, metadata !"types.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/sys", metadata !2492} ; [ DW_TAG_file_type ]
!2497 = metadata !{i32 589860, metadata !2491, metadata !"long int", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2498 = metadata !{i32 589839, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2499} ; [ DW_TAG_pointer_type ]
!2499 = metadata !{i32 589846, metadata !2500, metadata !"FILE", metadata !2500, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !2501} ; [ DW_TAG_typedef ]
!2500 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2492} ; [ DW_TAG_file_type ]
!2501 = metadata !{i32 589843, metadata !2491, metadata !"__STDIO_FILE_STRUCT", metadata !2500, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !2502, i32 0, null} ; [ DW_TAG_structure_type ]
!2502 = metadata !{metadata !2503, metadata !2506, metadata !2509, metadata !2511, metadata !2513, metadata !2514, metadata !2515, metadata !2516, metadata !2517, metadata !2518, metadata !2520, metadata !2524}
!2503 = metadata !{i32 589837, metadata !2501, metadata !"__modeflags", metadata !2504, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !2505} ; [ DW_TAG_member ]
!2504 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2492} ; [ DW_TAG_file_type ]
!2505 = metadata !{i32 589860, metadata !2491, metadata !"short unsigned int", metadata !2491, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2506 = metadata !{i32 589837, metadata !2501, metadata !"__ungot_width", metadata !2504, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !2507} ; [ DW_TAG_member ]
!2507 = metadata !{i32 589825, metadata !2491, metadata !"", metadata !2491, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2508, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2508 = metadata !{i32 589860, metadata !2491, metadata !"unsigned char", metadata !2491, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2509 = metadata !{i32 589837, metadata !2501, metadata !"__filedes", metadata !2504, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !2510} ; [ DW_TAG_member ]
!2510 = metadata !{i32 589860, metadata !2491, metadata !"int", metadata !2491, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2511 = metadata !{i32 589837, metadata !2501, metadata !"__bufstart", metadata !2504, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2512 = metadata !{i32 589839, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2508} ; [ DW_TAG_pointer_type ]
!2513 = metadata !{i32 589837, metadata !2501, metadata !"__bufend", metadata !2504, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2514 = metadata !{i32 589837, metadata !2501, metadata !"__bufpos", metadata !2504, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2515 = metadata !{i32 589837, metadata !2501, metadata !"__bufread", metadata !2504, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2516 = metadata !{i32 589837, metadata !2501, metadata !"__bufgetc_u", metadata !2504, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2517 = metadata !{i32 589837, metadata !2501, metadata !"__bufputc_u", metadata !2504, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !2512} ; [ DW_TAG_member ]
!2518 = metadata !{i32 589837, metadata !2501, metadata !"__nextopen", metadata !2504, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !2519} ; [ DW_TAG_member ]
!2519 = metadata !{i32 589839, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2501} ; [ DW_TAG_pointer_type ]
!2520 = metadata !{i32 589837, metadata !2501, metadata !"__ungot", metadata !2504, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !2521} ; [ DW_TAG_member ]
!2521 = metadata !{i32 589825, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !2522, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!2522 = metadata !{i32 589846, metadata !2523, metadata !"wchar_t", metadata !2523, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2510} ; [ DW_TAG_typedef ]
!2523 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2492} ; [ DW_TAG_file_type ]
!2524 = metadata !{i32 589837, metadata !2501, metadata !"__state", metadata !2504, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !2525} ; [ DW_TAG_member ]
!2525 = metadata !{i32 589846, metadata !2526, metadata !"__mbstate_t", metadata !2526, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !2527} ; [ DW_TAG_typedef ]
!2526 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2492} ; [ DW_TAG_file_type ]
!2527 = metadata !{i32 589843, metadata !2491, metadata !"", metadata !2526, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2528, i32 0, null} ; [ DW_TAG_structure_type ]
!2528 = metadata !{metadata !2529, metadata !2530}
!2529 = metadata !{i32 589837, metadata !2527, metadata !"__mask", metadata !2526, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2522} ; [ DW_TAG_member ]
!2530 = metadata !{i32 589837, metadata !2527, metadata !"__wc", metadata !2526, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2522} ; [ DW_TAG_member ]
!2531 = metadata !{i32 589846, metadata !2532, metadata !"__fpmax_t", metadata !2532, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2533} ; [ DW_TAG_typedef ]
!2532 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2492} ; [ DW_TAG_file_type ]
!2533 = metadata !{i32 589860, metadata !2491, metadata !"long double", metadata !2491, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2534 = metadata !{i32 589839, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2535} ; [ DW_TAG_pointer_type ]
!2535 = metadata !{i32 589843, metadata !2491, metadata !"printf_info", metadata !2536, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2537, i32 0, null} ; [ DW_TAG_structure_type ]
!2536 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2492} ; [ DW_TAG_file_type ]
!2537 = metadata !{metadata !2538, metadata !2539, metadata !2540, metadata !2541, metadata !2543, metadata !2544, metadata !2545, metadata !2546, metadata !2547, metadata !2548, metadata !2549, metadata !2550, metadata !2551, metadata !2552, metadata !2
!2538 = metadata !{i32 589837, metadata !2535, metadata !"prec", metadata !2536, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2510} ; [ DW_TAG_member ]
!2539 = metadata !{i32 589837, metadata !2535, metadata !"width", metadata !2536, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2510} ; [ DW_TAG_member ]
!2540 = metadata !{i32 589837, metadata !2535, metadata !"spec", metadata !2536, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2522} ; [ DW_TAG_member ]
!2541 = metadata !{i32 589837, metadata !2535, metadata !"space", metadata !2536, i32 66, i64 1, i64 32, i64 96, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2542 = metadata !{i32 589860, metadata !2491, metadata !"unsigned int", metadata !2491, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2543 = metadata !{i32 589837, metadata !2535, metadata !"showsign", metadata !2536, i32 67, i64 1, i64 32, i64 97, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2544 = metadata !{i32 589837, metadata !2535, metadata !"extra", metadata !2536, i32 68, i64 1, i64 32, i64 98, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2545 = metadata !{i32 589837, metadata !2535, metadata !"left", metadata !2536, i32 69, i64 1, i64 32, i64 99, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2546 = metadata !{i32 589837, metadata !2535, metadata !"alt", metadata !2536, i32 70, i64 1, i64 32, i64 100, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2547 = metadata !{i32 589837, metadata !2535, metadata !"group", metadata !2536, i32 71, i64 1, i64 32, i64 101, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2548 = metadata !{i32 589837, metadata !2535, metadata !"i18n", metadata !2536, i32 72, i64 1, i64 32, i64 102, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2549 = metadata !{i32 589837, metadata !2535, metadata !"wide", metadata !2536, i32 73, i64 1, i64 32, i64 103, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2550 = metadata !{i32 589837, metadata !2535, metadata !"is_char", metadata !2536, i32 74, i64 1, i64 32, i64 104, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2551 = metadata !{i32 589837, metadata !2535, metadata !"is_short", metadata !2536, i32 75, i64 1, i64 32, i64 105, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2552 = metadata !{i32 589837, metadata !2535, metadata !"is_long", metadata !2536, i32 76, i64 1, i64 32, i64 106, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2553 = metadata !{i32 589837, metadata !2535, metadata !"is_long_double", metadata !2536, i32 77, i64 1, i64 32, i64 107, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2554 = metadata !{i32 589837, metadata !2535, metadata !"__padding", metadata !2536, i32 78, i64 20, i64 32, i64 108, i32 0, metadata !2542} ; [ DW_TAG_member ]
!2555 = metadata !{i32 589837, metadata !2535, metadata !"pad", metadata !2536, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2522} ; [ DW_TAG_member ]
!2556 = metadata !{i32 589839, metadata !2491, metadata !"", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2557} ; [ DW_TAG_pointer_type ]
!2557 = metadata !{i32 589846, metadata !2491, metadata !"__fp_outfunc_t", metadata !2491, i32 17, i64 0, i64 0, i64 0, i32 0, metadata !2558} ; [ DW_TAG_typedef ]
!2558 = metadata !{i32 589845, metadata !2491, metadata !"", metadata !2491, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2559, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2559 = metadata !{metadata !2560, metadata !2498, metadata !2562, metadata !2562, metadata !2562}
!2560 = metadata !{i32 589846, metadata !2523, metadata !"size_t", metadata !2523, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2561} ; [ DW_TAG_typedef ]
!2561 = metadata !{i32 589860, metadata !2491, metadata !"long unsigned int", metadata !2491, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2562 = metadata !{i32 589846, metadata !2563, metadata !"intptr_t", metadata !2563, i32 122, i64 0, i64 0, i64 0, i32 0, metadata !2497} ; [ DW_TAG_typedef ]
!2563 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2492} ; [ DW_TAG_file_type ]
!2564 = metadata !{i32 589870, i32 0, metadata !2565, metadata !"_load_inttype", metadata !"_load_inttype", metadata !"_load_inttype", metadata !2565, i32 13, metadata !2567, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i32, i8*, i32)* 
!2565 = metadata !{i32 589865, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2566} ; [ DW_TAG_file_type ]
!2566 = metadata !{i32 589841, i32 0, i32 1, metadata !"_load_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2567 = metadata !{i32 589845, metadata !2565, metadata !"", metadata !2565, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2568, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2568 = metadata !{metadata !2569, metadata !2572, metadata !2573, metadata !2572}
!2569 = metadata !{i32 589846, metadata !2570, metadata !"uintmax_t", metadata !2570, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2571} ; [ DW_TAG_typedef ]
!2570 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2566} ; [ DW_TAG_file_type ]
!2571 = metadata !{i32 589860, metadata !2565, metadata !"long unsigned int", metadata !2565, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2572 = metadata !{i32 589860, metadata !2565, metadata !"int", metadata !2565, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2573 = metadata !{i32 589839, metadata !2565, metadata !"", metadata !2565, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2574 = metadata !{i32 589870, i32 0, metadata !2575, metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !"_ppfs_init", metadata !2577, i32 516, metadata !2578, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.ppfs_t*, i8*)* @
!2575 = metadata !{i32 589865, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2576} ; [ DW_TAG_file_type ]
!2576 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_init.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ D
!2577 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2576} ; [ DW_TAG_file_type ]
!2578 = metadata !{i32 589845, metadata !2575, metadata !"", metadata !2575, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2579, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2579 = metadata !{metadata !2580, metadata !2581, metadata !2586}
!2580 = metadata !{i32 589860, metadata !2575, metadata !"int", metadata !2575, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2581 = metadata !{i32 589839, metadata !2575, metadata !"", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2582} ; [ DW_TAG_pointer_type ]
!2582 = metadata !{i32 589846, metadata !2577, metadata !"ppfs_t", metadata !2577, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2583} ; [ DW_TAG_typedef ]
!2583 = metadata !{i32 589843, metadata !2575, metadata !"", metadata !2577, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2584, i32 0, null} ; [ DW_TAG_structure_type ]
!2584 = metadata !{metadata !2585, metadata !2589, metadata !2601, metadata !2602, metadata !2603, metadata !2604, metadata !2607, metadata !2609, metadata !2621}
!2585 = metadata !{i32 589837, metadata !2583, metadata !"fmtpos", metadata !2577, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2586} ; [ DW_TAG_member ]
!2586 = metadata !{i32 589839, metadata !2575, metadata !"", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2587} ; [ DW_TAG_pointer_type ]
!2587 = metadata !{i32 589862, metadata !2575, metadata !"", metadata !2575, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2588} ; [ DW_TAG_const_type ]
!2588 = metadata !{i32 589860, metadata !2575, metadata !"char", metadata !2575, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2589 = metadata !{i32 589837, metadata !2583, metadata !"info", metadata !2577, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2590} ; [ DW_TAG_member ]
!2590 = metadata !{i32 589843, metadata !2575, metadata !"printf_info", metadata !2591, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2592, i32 0, null} ; [ DW_TAG_structure_type ]
!2591 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2576} ; [ DW_TAG_file_type ]
!2592 = metadata !{metadata !2593, metadata !2594, metadata !2595, metadata !2598, metadata !2600}
!2593 = metadata !{i32 589837, metadata !2590, metadata !"prec", metadata !2591, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2580} ; [ DW_TAG_member ]
!2594 = metadata !{i32 589837, metadata !2590, metadata !"width", metadata !2591, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2580} ; [ DW_TAG_member ]
!2595 = metadata !{i32 589837, metadata !2590, metadata !"spec", metadata !2591, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2596} ; [ DW_TAG_member ]
!2596 = metadata !{i32 589846, metadata !2597, metadata !"wchar_t", metadata !2597, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2580} ; [ DW_TAG_typedef ]
!2597 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2576} ; [ DW_TAG_file_type ]
!2598 = metadata !{i32 589837, metadata !2590, metadata !"_flags", metadata !2591, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2599} ; [ DW_TAG_member ]
!2599 = metadata !{i32 589860, metadata !2575, metadata !"unsigned int", metadata !2575, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2600 = metadata !{i32 589837, metadata !2590, metadata !"pad", metadata !2591, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2596} ; [ DW_TAG_member ]
!2601 = metadata !{i32 589837, metadata !2583, metadata !"maxposarg", metadata !2577, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2580} ; [ DW_TAG_member ]
!2602 = metadata !{i32 589837, metadata !2583, metadata !"num_data_args", metadata !2577, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2580} ; [ DW_TAG_member ]
!2603 = metadata !{i32 589837, metadata !2583, metadata !"conv_num", metadata !2577, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2599} ; [ DW_TAG_member ]
!2604 = metadata !{i32 589837, metadata !2583, metadata !"argnumber", metadata !2577, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2605} ; [ DW_TAG_member ]
!2605 = metadata !{i32 589825, metadata !2575, metadata !"", metadata !2575, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2606, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!2606 = metadata !{i32 589860, metadata !2575, metadata !"unsigned char", metadata !2575, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2607 = metadata !{i32 589837, metadata !2583, metadata !"argtype", metadata !2577, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2608} ; [ DW_TAG_member ]
!2608 = metadata !{i32 589825, metadata !2575, metadata !"", metadata !2575, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2580, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2609 = metadata !{i32 589837, metadata !2583, metadata !"arg", metadata !2577, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2610} ; [ DW_TAG_member ]
!2610 = metadata !{i32 589846, metadata !2611, metadata !"va_list", metadata !2611, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2612} ; [ DW_TAG_typedef ]
!2611 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2576} ; [ DW_TAG_file_type ]
!2612 = metadata !{i32 589825, metadata !2575, metadata !"", metadata !2575, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2613, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!2613 = metadata !{i32 589843, metadata !2575, metadata !"__va_list_tag", metadata !2614, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2615, i32 0, null} ; [ DW_TAG_structure_type ]
!2614 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2576} ; [ DW_TAG_file_type ]
!2615 = metadata !{metadata !2616, metadata !2617, metadata !2618, metadata !2620}
!2616 = metadata !{i32 589837, metadata !2613, metadata !"gp_offset", metadata !2614, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2599} ; [ DW_TAG_member ]
!2617 = metadata !{i32 589837, metadata !2613, metadata !"fp_offset", metadata !2614, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2599} ; [ DW_TAG_member ]
!2618 = metadata !{i32 589837, metadata !2613, metadata !"overflow_arg_area", metadata !2614, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2619 = metadata !{i32 589839, metadata !2575, metadata !"", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2620 = metadata !{i32 589837, metadata !2613, metadata !"reg_save_area", metadata !2614, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2621 = metadata !{i32 589837, metadata !2583, metadata !"argvalue", metadata !2577, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2622} ; [ DW_TAG_member ]
!2622 = metadata !{i32 589825, metadata !2575, metadata !"", metadata !2575, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2623, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2623 = metadata !{i32 589846, metadata !2577, metadata !"argvalue_t", metadata !2577, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2624} ; [ DW_TAG_typedef ]
!2624 = metadata !{i32 589847, metadata !2575, metadata !"", metadata !2577, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2625, i32 0, null} ; [ DW_TAG_union_type ]
!2625 = metadata !{metadata !2626, metadata !2627, metadata !2628, metadata !2630, metadata !2632, metadata !2634, metadata !2636}
!2626 = metadata !{i32 589837, metadata !2624, metadata !"wc", metadata !2577, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2596} ; [ DW_TAG_member ]
!2627 = metadata !{i32 589837, metadata !2624, metadata !"u", metadata !2577, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2599} ; [ DW_TAG_member ]
!2628 = metadata !{i32 589837, metadata !2624, metadata !"ul", metadata !2577, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2629} ; [ DW_TAG_member ]
!2629 = metadata !{i32 589860, metadata !2575, metadata !"long unsigned int", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2630 = metadata !{i32 589837, metadata !2624, metadata !"ull", metadata !2577, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2631} ; [ DW_TAG_member ]
!2631 = metadata !{i32 589860, metadata !2575, metadata !"long long unsigned int", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2632 = metadata !{i32 589837, metadata !2624, metadata !"d", metadata !2577, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2633} ; [ DW_TAG_member ]
!2633 = metadata !{i32 589860, metadata !2575, metadata !"double", metadata !2575, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2634 = metadata !{i32 589837, metadata !2624, metadata !"ld", metadata !2577, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2635} ; [ DW_TAG_member ]
!2635 = metadata !{i32 589860, metadata !2575, metadata !"long double", metadata !2575, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2636 = metadata !{i32 589837, metadata !2624, metadata !"p", metadata !2577, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2619} ; [ DW_TAG_member ]
!2637 = metadata !{i32 589870, i32 0, metadata !2638, metadata !"_promoted_size", metadata !"_promoted_size", metadata !"", metadata !2640, i32 801, metadata !2641, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32)* @_promoted_size} ; [ 
!2638 = metadata !{i32 589865, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2639} ; [ DW_TAG_file_type ]
!2639 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_parsespec.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2640 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2639} ; [ DW_TAG_file_type ]
!2641 = metadata !{i32 589845, metadata !2638, metadata !"", metadata !2638, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2642, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2642 = metadata !{metadata !2643, metadata !2643}
!2643 = metadata !{i32 589860, metadata !2638, metadata !"int", metadata !2638, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2644 = metadata !{i32 589870, i32 0, metadata !2638, metadata !"_is_equal_or_bigger_arg", metadata !"_is_equal_or_bigger_arg", metadata !"", metadata !2640, i32 816, metadata !2645, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, i32)
!2645 = metadata !{i32 589845, metadata !2638, metadata !"", metadata !2638, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2646, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2646 = metadata !{metadata !2643, metadata !2643, metadata !2643}
!2647 = metadata !{i32 589870, i32 0, metadata !2638, metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !"_ppfs_parsespec", metadata !2640, i32 845, metadata !2648, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (%struct.p
!2648 = metadata !{i32 589845, metadata !2638, metadata !"", metadata !2638, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2649, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2649 = metadata !{metadata !2643, metadata !2650}
!2650 = metadata !{i32 589839, metadata !2638, metadata !"", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2651} ; [ DW_TAG_pointer_type ]
!2651 = metadata !{i32 589846, metadata !2640, metadata !"ppfs_t", metadata !2640, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2652} ; [ DW_TAG_typedef ]
!2652 = metadata !{i32 589843, metadata !2638, metadata !"", metadata !2640, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2653, i32 0, null} ; [ DW_TAG_structure_type ]
!2653 = metadata !{metadata !2654, metadata !2658, metadata !2670, metadata !2671, metadata !2672, metadata !2673, metadata !2676, metadata !2678, metadata !2690}
!2654 = metadata !{i32 589837, metadata !2652, metadata !"fmtpos", metadata !2640, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2655} ; [ DW_TAG_member ]
!2655 = metadata !{i32 589839, metadata !2638, metadata !"", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2656} ; [ DW_TAG_pointer_type ]
!2656 = metadata !{i32 589862, metadata !2638, metadata !"", metadata !2638, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2657} ; [ DW_TAG_const_type ]
!2657 = metadata !{i32 589860, metadata !2638, metadata !"char", metadata !2638, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2658 = metadata !{i32 589837, metadata !2652, metadata !"info", metadata !2640, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2659} ; [ DW_TAG_member ]
!2659 = metadata !{i32 589843, metadata !2638, metadata !"printf_info", metadata !2660, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2661, i32 0, null} ; [ DW_TAG_structure_type ]
!2660 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2639} ; [ DW_TAG_file_type ]
!2661 = metadata !{metadata !2662, metadata !2663, metadata !2664, metadata !2667, metadata !2669}
!2662 = metadata !{i32 589837, metadata !2659, metadata !"prec", metadata !2660, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2643} ; [ DW_TAG_member ]
!2663 = metadata !{i32 589837, metadata !2659, metadata !"width", metadata !2660, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2643} ; [ DW_TAG_member ]
!2664 = metadata !{i32 589837, metadata !2659, metadata !"spec", metadata !2660, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2665} ; [ DW_TAG_member ]
!2665 = metadata !{i32 589846, metadata !2666, metadata !"wchar_t", metadata !2666, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2643} ; [ DW_TAG_typedef ]
!2666 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2639} ; [ DW_TAG_file_type ]
!2667 = metadata !{i32 589837, metadata !2659, metadata !"_flags", metadata !2660, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2668} ; [ DW_TAG_member ]
!2668 = metadata !{i32 589860, metadata !2638, metadata !"unsigned int", metadata !2638, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2669 = metadata !{i32 589837, metadata !2659, metadata !"pad", metadata !2660, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2665} ; [ DW_TAG_member ]
!2670 = metadata !{i32 589837, metadata !2652, metadata !"maxposarg", metadata !2640, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2643} ; [ DW_TAG_member ]
!2671 = metadata !{i32 589837, metadata !2652, metadata !"num_data_args", metadata !2640, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2643} ; [ DW_TAG_member ]
!2672 = metadata !{i32 589837, metadata !2652, metadata !"conv_num", metadata !2640, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2668} ; [ DW_TAG_member ]
!2673 = metadata !{i32 589837, metadata !2652, metadata !"argnumber", metadata !2640, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2674} ; [ DW_TAG_member ]
!2674 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2675, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!2675 = metadata !{i32 589860, metadata !2638, metadata !"unsigned char", metadata !2638, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2676 = metadata !{i32 589837, metadata !2652, metadata !"argtype", metadata !2640, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2677} ; [ DW_TAG_member ]
!2677 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2643, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2678 = metadata !{i32 589837, metadata !2652, metadata !"arg", metadata !2640, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2679} ; [ DW_TAG_member ]
!2679 = metadata !{i32 589846, metadata !2680, metadata !"va_list", metadata !2680, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2681} ; [ DW_TAG_typedef ]
!2680 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2639} ; [ DW_TAG_file_type ]
!2681 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2682, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!2682 = metadata !{i32 589843, metadata !2638, metadata !"__va_list_tag", metadata !2683, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2684, i32 0, null} ; [ DW_TAG_structure_type ]
!2683 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2639} ; [ DW_TAG_file_type ]
!2684 = metadata !{metadata !2685, metadata !2686, metadata !2687, metadata !2689}
!2685 = metadata !{i32 589837, metadata !2682, metadata !"gp_offset", metadata !2683, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2668} ; [ DW_TAG_member ]
!2686 = metadata !{i32 589837, metadata !2682, metadata !"fp_offset", metadata !2683, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2668} ; [ DW_TAG_member ]
!2687 = metadata !{i32 589837, metadata !2682, metadata !"overflow_arg_area", metadata !2683, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2688} ; [ DW_TAG_member ]
!2688 = metadata !{i32 589839, metadata !2638, metadata !"", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2689 = metadata !{i32 589837, metadata !2682, metadata !"reg_save_area", metadata !2683, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2688} ; [ DW_TAG_member ]
!2690 = metadata !{i32 589837, metadata !2652, metadata !"argvalue", metadata !2640, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2691} ; [ DW_TAG_member ]
!2691 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2692, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2692 = metadata !{i32 589846, metadata !2640, metadata !"argvalue_t", metadata !2640, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2693} ; [ DW_TAG_typedef ]
!2693 = metadata !{i32 589847, metadata !2638, metadata !"", metadata !2640, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2694, i32 0, null} ; [ DW_TAG_union_type ]
!2694 = metadata !{metadata !2695, metadata !2696, metadata !2697, metadata !2699, metadata !2701, metadata !2703, metadata !2705}
!2695 = metadata !{i32 589837, metadata !2693, metadata !"wc", metadata !2640, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2665} ; [ DW_TAG_member ]
!2696 = metadata !{i32 589837, metadata !2693, metadata !"u", metadata !2640, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2668} ; [ DW_TAG_member ]
!2697 = metadata !{i32 589837, metadata !2693, metadata !"ul", metadata !2640, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2698} ; [ DW_TAG_member ]
!2698 = metadata !{i32 589860, metadata !2638, metadata !"long unsigned int", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2699 = metadata !{i32 589837, metadata !2693, metadata !"ull", metadata !2640, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2700} ; [ DW_TAG_member ]
!2700 = metadata !{i32 589860, metadata !2638, metadata !"long long unsigned int", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2701 = metadata !{i32 589837, metadata !2693, metadata !"d", metadata !2640, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2702} ; [ DW_TAG_member ]
!2702 = metadata !{i32 589860, metadata !2638, metadata !"double", metadata !2638, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2703 = metadata !{i32 589837, metadata !2693, metadata !"ld", metadata !2640, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2704} ; [ DW_TAG_member ]
!2704 = metadata !{i32 589860, metadata !2638, metadata !"long double", metadata !2638, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2705 = metadata !{i32 589837, metadata !2693, metadata !"p", metadata !2640, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2688} ; [ DW_TAG_member ]
!2706 = metadata !{i32 589870, i32 0, metadata !2707, metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !"_ppfs_prepargs", metadata !2709, i32 606, metadata !2710, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppf
!2707 = metadata !{i32 589865, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2708} ; [ DW_TAG_file_type ]
!2708 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_prepargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2709 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2708} ; [ DW_TAG_file_type ]
!2710 = metadata !{i32 589845, metadata !2707, metadata !"", metadata !2707, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2711, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2711 = metadata !{null, metadata !2712, metadata !2769}
!2712 = metadata !{i32 589839, metadata !2707, metadata !"", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2713} ; [ DW_TAG_pointer_type ]
!2713 = metadata !{i32 589846, metadata !2709, metadata !"ppfs_t", metadata !2709, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2714} ; [ DW_TAG_typedef ]
!2714 = metadata !{i32 589843, metadata !2707, metadata !"", metadata !2709, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2715, i32 0, null} ; [ DW_TAG_structure_type ]
!2715 = metadata !{metadata !2716, metadata !2720, metadata !2733, metadata !2734, metadata !2735, metadata !2736, metadata !2739, metadata !2741, metadata !2753}
!2716 = metadata !{i32 589837, metadata !2714, metadata !"fmtpos", metadata !2709, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2717} ; [ DW_TAG_member ]
!2717 = metadata !{i32 589839, metadata !2707, metadata !"", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2718} ; [ DW_TAG_pointer_type ]
!2718 = metadata !{i32 589862, metadata !2707, metadata !"", metadata !2707, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2719} ; [ DW_TAG_const_type ]
!2719 = metadata !{i32 589860, metadata !2707, metadata !"char", metadata !2707, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2720 = metadata !{i32 589837, metadata !2714, metadata !"info", metadata !2709, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2721} ; [ DW_TAG_member ]
!2721 = metadata !{i32 589843, metadata !2707, metadata !"printf_info", metadata !2722, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2723, i32 0, null} ; [ DW_TAG_structure_type ]
!2722 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2708} ; [ DW_TAG_file_type ]
!2723 = metadata !{metadata !2724, metadata !2726, metadata !2727, metadata !2730, metadata !2732}
!2724 = metadata !{i32 589837, metadata !2721, metadata !"prec", metadata !2722, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2725} ; [ DW_TAG_member ]
!2725 = metadata !{i32 589860, metadata !2707, metadata !"int", metadata !2707, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2726 = metadata !{i32 589837, metadata !2721, metadata !"width", metadata !2722, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2725} ; [ DW_TAG_member ]
!2727 = metadata !{i32 589837, metadata !2721, metadata !"spec", metadata !2722, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2728} ; [ DW_TAG_member ]
!2728 = metadata !{i32 589846, metadata !2729, metadata !"wchar_t", metadata !2729, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2725} ; [ DW_TAG_typedef ]
!2729 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2708} ; [ DW_TAG_file_type ]
!2730 = metadata !{i32 589837, metadata !2721, metadata !"_flags", metadata !2722, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2731 = metadata !{i32 589860, metadata !2707, metadata !"unsigned int", metadata !2707, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2732 = metadata !{i32 589837, metadata !2721, metadata !"pad", metadata !2722, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2728} ; [ DW_TAG_member ]
!2733 = metadata !{i32 589837, metadata !2714, metadata !"maxposarg", metadata !2709, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2725} ; [ DW_TAG_member ]
!2734 = metadata !{i32 589837, metadata !2714, metadata !"num_data_args", metadata !2709, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2725} ; [ DW_TAG_member ]
!2735 = metadata !{i32 589837, metadata !2714, metadata !"conv_num", metadata !2709, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2736 = metadata !{i32 589837, metadata !2714, metadata !"argnumber", metadata !2709, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2737} ; [ DW_TAG_member ]
!2737 = metadata !{i32 589825, metadata !2707, metadata !"", metadata !2707, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2738, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!2738 = metadata !{i32 589860, metadata !2707, metadata !"unsigned char", metadata !2707, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2739 = metadata !{i32 589837, metadata !2714, metadata !"argtype", metadata !2709, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2740} ; [ DW_TAG_member ]
!2740 = metadata !{i32 589825, metadata !2707, metadata !"", metadata !2707, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2725, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2741 = metadata !{i32 589837, metadata !2714, metadata !"arg", metadata !2709, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2742} ; [ DW_TAG_member ]
!2742 = metadata !{i32 589846, metadata !2743, metadata !"va_list", metadata !2743, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2744} ; [ DW_TAG_typedef ]
!2743 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2708} ; [ DW_TAG_file_type ]
!2744 = metadata !{i32 589825, metadata !2707, metadata !"", metadata !2707, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2745, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!2745 = metadata !{i32 589843, metadata !2707, metadata !"__va_list_tag", metadata !2746, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2747, i32 0, null} ; [ DW_TAG_structure_type ]
!2746 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2708} ; [ DW_TAG_file_type ]
!2747 = metadata !{metadata !2748, metadata !2749, metadata !2750, metadata !2752}
!2748 = metadata !{i32 589837, metadata !2745, metadata !"gp_offset", metadata !2746, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2749 = metadata !{i32 589837, metadata !2745, metadata !"fp_offset", metadata !2746, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2750 = metadata !{i32 589837, metadata !2745, metadata !"overflow_arg_area", metadata !2746, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2751} ; [ DW_TAG_member ]
!2751 = metadata !{i32 589839, metadata !2707, metadata !"", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2752 = metadata !{i32 589837, metadata !2745, metadata !"reg_save_area", metadata !2746, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2751} ; [ DW_TAG_member ]
!2753 = metadata !{i32 589837, metadata !2714, metadata !"argvalue", metadata !2709, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2754} ; [ DW_TAG_member ]
!2754 = metadata !{i32 589825, metadata !2707, metadata !"", metadata !2707, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2755, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2755 = metadata !{i32 589846, metadata !2709, metadata !"argvalue_t", metadata !2709, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2756} ; [ DW_TAG_typedef ]
!2756 = metadata !{i32 589847, metadata !2707, metadata !"", metadata !2709, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2757, i32 0, null} ; [ DW_TAG_union_type ]
!2757 = metadata !{metadata !2758, metadata !2759, metadata !2760, metadata !2762, metadata !2764, metadata !2766, metadata !2768}
!2758 = metadata !{i32 589837, metadata !2756, metadata !"wc", metadata !2709, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2728} ; [ DW_TAG_member ]
!2759 = metadata !{i32 589837, metadata !2756, metadata !"u", metadata !2709, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2731} ; [ DW_TAG_member ]
!2760 = metadata !{i32 589837, metadata !2756, metadata !"ul", metadata !2709, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2761} ; [ DW_TAG_member ]
!2761 = metadata !{i32 589860, metadata !2707, metadata !"long unsigned int", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2762 = metadata !{i32 589837, metadata !2756, metadata !"ull", metadata !2709, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2763} ; [ DW_TAG_member ]
!2763 = metadata !{i32 589860, metadata !2707, metadata !"long long unsigned int", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2764 = metadata !{i32 589837, metadata !2756, metadata !"d", metadata !2709, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2765} ; [ DW_TAG_member ]
!2765 = metadata !{i32 589860, metadata !2707, metadata !"double", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2766 = metadata !{i32 589837, metadata !2756, metadata !"ld", metadata !2709, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2767} ; [ DW_TAG_member ]
!2767 = metadata !{i32 589860, metadata !2707, metadata !"long double", metadata !2707, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2768 = metadata !{i32 589837, metadata !2756, metadata !"p", metadata !2709, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2751} ; [ DW_TAG_member ]
!2769 = metadata !{i32 589839, metadata !2707, metadata !"", metadata !2707, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2745} ; [ DW_TAG_pointer_type ]
!2770 = metadata !{i32 589870, i32 0, metadata !2771, metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !"_ppfs_setargs", metadata !2773, i32 625, metadata !2774, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (%struct.ppfs_t
!2771 = metadata !{i32 589865, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2772} ; [ DW_TAG_file_type ]
!2772 = metadata !{i32 589841, i32 0, i32 1, metadata !"_ppfs_setargs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2773 = metadata !{i32 589865, metadata !"_vfprintf.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2772} ; [ DW_TAG_file_type ]
!2774 = metadata !{i32 589845, metadata !2771, metadata !"", metadata !2771, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2775, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2775 = metadata !{null, metadata !2776}
!2776 = metadata !{i32 589839, metadata !2771, metadata !"", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2777} ; [ DW_TAG_pointer_type ]
!2777 = metadata !{i32 589846, metadata !2773, metadata !"ppfs_t", metadata !2773, i32 419, i64 0, i64 0, i64 0, i32 0, metadata !2778} ; [ DW_TAG_typedef ]
!2778 = metadata !{i32 589843, metadata !2771, metadata !"", metadata !2773, i32 400, i64 2048, i64 128, i64 0, i32 0, null, metadata !2779, i32 0, null} ; [ DW_TAG_structure_type ]
!2779 = metadata !{metadata !2780, metadata !2784, metadata !2797, metadata !2798, metadata !2799, metadata !2800, metadata !2803, metadata !2805, metadata !2817}
!2780 = metadata !{i32 589837, metadata !2778, metadata !"fmtpos", metadata !2773, i32 401, i64 64, i64 64, i64 0, i32 0, metadata !2781} ; [ DW_TAG_member ]
!2781 = metadata !{i32 589839, metadata !2771, metadata !"", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2782} ; [ DW_TAG_pointer_type ]
!2782 = metadata !{i32 589862, metadata !2771, metadata !"", metadata !2771, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2783} ; [ DW_TAG_const_type ]
!2783 = metadata !{i32 589860, metadata !2771, metadata !"char", metadata !2771, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2784 = metadata !{i32 589837, metadata !2778, metadata !"info", metadata !2773, i32 402, i64 160, i64 32, i64 64, i32 0, metadata !2785} ; [ DW_TAG_member ]
!2785 = metadata !{i32 589843, metadata !2771, metadata !"printf_info", metadata !2786, i32 56, i64 160, i64 32, i64 0, i32 0, null, metadata !2787, i32 0, null} ; [ DW_TAG_structure_type ]
!2786 = metadata !{i32 589865, metadata !"printf.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2772} ; [ DW_TAG_file_type ]
!2787 = metadata !{metadata !2788, metadata !2790, metadata !2791, metadata !2794, metadata !2796}
!2788 = metadata !{i32 589837, metadata !2785, metadata !"prec", metadata !2786, i32 57, i64 32, i64 32, i64 0, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2789 = metadata !{i32 589860, metadata !2771, metadata !"int", metadata !2771, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2790 = metadata !{i32 589837, metadata !2785, metadata !"width", metadata !2786, i32 58, i64 32, i64 32, i64 32, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2791 = metadata !{i32 589837, metadata !2785, metadata !"spec", metadata !2786, i32 60, i64 32, i64 32, i64 64, i32 0, metadata !2792} ; [ DW_TAG_member ]
!2792 = metadata !{i32 589846, metadata !2793, metadata !"wchar_t", metadata !2793, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2789} ; [ DW_TAG_typedef ]
!2793 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2772} ; [ DW_TAG_file_type ]
!2794 = metadata !{i32 589837, metadata !2785, metadata !"_flags", metadata !2786, i32 107, i64 32, i64 32, i64 96, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2795 = metadata !{i32 589860, metadata !2771, metadata !"unsigned int", metadata !2771, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2796 = metadata !{i32 589837, metadata !2785, metadata !"pad", metadata !2786, i32 141, i64 32, i64 32, i64 128, i32 0, metadata !2792} ; [ DW_TAG_member ]
!2797 = metadata !{i32 589837, metadata !2778, metadata !"maxposarg", metadata !2773, i32 404, i64 32, i64 32, i64 224, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2798 = metadata !{i32 589837, metadata !2778, metadata !"num_data_args", metadata !2773, i32 406, i64 32, i64 32, i64 256, i32 0, metadata !2789} ; [ DW_TAG_member ]
!2799 = metadata !{i32 589837, metadata !2778, metadata !"conv_num", metadata !2773, i32 407, i64 32, i64 32, i64 288, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2800 = metadata !{i32 589837, metadata !2778, metadata !"argnumber", metadata !2773, i32 408, i64 32, i64 8, i64 320, i32 0, metadata !2801} ; [ DW_TAG_member ]
!2801 = metadata !{i32 589825, metadata !2771, metadata !"", metadata !2771, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2802, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!2802 = metadata !{i32 589860, metadata !2771, metadata !"unsigned char", metadata !2771, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2803 = metadata !{i32 589837, metadata !2778, metadata !"argtype", metadata !2773, i32 409, i64 288, i64 32, i64 352, i32 0, metadata !2804} ; [ DW_TAG_member ]
!2804 = metadata !{i32 589825, metadata !2771, metadata !"", metadata !2771, i32 0, i64 288, i64 32, i64 0, i32 0, metadata !2789, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2805 = metadata !{i32 589837, metadata !2778, metadata !"arg", metadata !2773, i32 410, i64 192, i64 64, i64 640, i32 0, metadata !2806} ; [ DW_TAG_member ]
!2806 = metadata !{i32 589846, metadata !2807, metadata !"va_list", metadata !2807, i32 105, i64 0, i64 0, i64 0, i32 0, metadata !2808} ; [ DW_TAG_typedef ]
!2807 = metadata !{i32 589865, metadata !"stdarg.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2772} ; [ DW_TAG_file_type ]
!2808 = metadata !{i32 589825, metadata !2771, metadata !"", metadata !2771, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !2809, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!2809 = metadata !{i32 589843, metadata !2771, metadata !"__va_list_tag", metadata !2810, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !2811, i32 0, null} ; [ DW_TAG_structure_type ]
!2810 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/", metadata !2772} ; [ DW_TAG_file_type ]
!2811 = metadata !{metadata !2812, metadata !2813, metadata !2814, metadata !2816}
!2812 = metadata !{i32 589837, metadata !2809, metadata !"gp_offset", metadata !2810, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2813 = metadata !{i32 589837, metadata !2809, metadata !"fp_offset", metadata !2810, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2814 = metadata !{i32 589837, metadata !2809, metadata !"overflow_arg_area", metadata !2810, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !2815} ; [ DW_TAG_member ]
!2815 = metadata !{i32 589839, metadata !2771, metadata !"", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2816 = metadata !{i32 589837, metadata !2809, metadata !"reg_save_area", metadata !2810, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !2815} ; [ DW_TAG_member ]
!2817 = metadata !{i32 589837, metadata !2778, metadata !"argvalue", metadata !2773, i32 417, i64 1152, i64 128, i64 896, i32 0, metadata !2818} ; [ DW_TAG_member ]
!2818 = metadata !{i32 589825, metadata !2771, metadata !"", metadata !2771, i32 0, i64 1152, i64 128, i64 0, i32 0, metadata !2819, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!2819 = metadata !{i32 589846, metadata !2773, metadata !"argvalue_t", metadata !2773, i32 394, i64 0, i64 0, i64 0, i32 0, metadata !2820} ; [ DW_TAG_typedef ]
!2820 = metadata !{i32 589847, metadata !2771, metadata !"", metadata !2773, i32 382, i64 128, i64 128, i64 0, i32 0, null, metadata !2821, i32 0, null} ; [ DW_TAG_union_type ]
!2821 = metadata !{metadata !2822, metadata !2823, metadata !2824, metadata !2826, metadata !2828, metadata !2830, metadata !2832}
!2822 = metadata !{i32 589837, metadata !2820, metadata !"wc", metadata !2773, i32 383, i64 32, i64 32, i64 0, i32 0, metadata !2792} ; [ DW_TAG_member ]
!2823 = metadata !{i32 589837, metadata !2820, metadata !"u", metadata !2773, i32 384, i64 32, i64 32, i64 0, i32 0, metadata !2795} ; [ DW_TAG_member ]
!2824 = metadata !{i32 589837, metadata !2820, metadata !"ul", metadata !2773, i32 385, i64 64, i64 64, i64 0, i32 0, metadata !2825} ; [ DW_TAG_member ]
!2825 = metadata !{i32 589860, metadata !2771, metadata !"long unsigned int", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2826 = metadata !{i32 589837, metadata !2820, metadata !"ull", metadata !2773, i32 387, i64 64, i64 64, i64 0, i32 0, metadata !2827} ; [ DW_TAG_member ]
!2827 = metadata !{i32 589860, metadata !2771, metadata !"long long unsigned int", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2828 = metadata !{i32 589837, metadata !2820, metadata !"d", metadata !2773, i32 390, i64 64, i64 64, i64 0, i32 0, metadata !2829} ; [ DW_TAG_member ]
!2829 = metadata !{i32 589860, metadata !2771, metadata !"double", metadata !2771, i32 0, i64 64, i64 64, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2830 = metadata !{i32 589837, metadata !2820, metadata !"ld", metadata !2773, i32 391, i64 128, i64 128, i64 0, i32 0, metadata !2831} ; [ DW_TAG_member ]
!2831 = metadata !{i32 589860, metadata !2771, metadata !"long double", metadata !2771, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2832 = metadata !{i32 589837, metadata !2820, metadata !"p", metadata !2773, i32 393, i64 64, i64 64, i64 0, i32 0, metadata !2815} ; [ DW_TAG_member ]
!2833 = metadata !{i32 589870, i32 0, metadata !2834, metadata !"_store_inttype", metadata !"_store_inttype", metadata !"_store_inttype", metadata !2834, i32 33, metadata !2836, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, void (i8*, i32, i6
!2834 = metadata !{i32 589865, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2835} ; [ DW_TAG_file_type ]
!2835 = metadata !{i32 589841, i32 0, i32 1, metadata !"_store_inttype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2836 = metadata !{i32 589845, metadata !2834, metadata !"", metadata !2834, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2837, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2837 = metadata !{null, metadata !2838, metadata !2839, metadata !2840}
!2838 = metadata !{i32 589839, metadata !2834, metadata !"", metadata !2834, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!2839 = metadata !{i32 589860, metadata !2834, metadata !"int", metadata !2834, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2840 = metadata !{i32 589846, metadata !2841, metadata !"uintmax_t", metadata !2841, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2842} ; [ DW_TAG_typedef ]
!2841 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2835} ; [ DW_TAG_file_type ]
!2842 = metadata !{i32 589860, metadata !2834, metadata !"long unsigned int", metadata !2834, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2843 = metadata !{i32 589870, i32 0, metadata !2844, metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !"_uintmaxtostr", metadata !2844, i32 24, metadata !2846, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i8* (i8*, i64, i32, i
!2844 = metadata !{i32 589865, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !2845} ; [ DW_TAG_file_type ]
!2845 = metadata !{i32 589841, i32 0, i32 1, metadata !"_uintmaxtostr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdio", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2846 = metadata !{i32 589845, metadata !2844, metadata !"", metadata !2844, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2847, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2847 = metadata !{metadata !2848, metadata !2848, metadata !2850, metadata !2853, metadata !2854}
!2848 = metadata !{i32 589839, metadata !2844, metadata !"", metadata !2844, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2849} ; [ DW_TAG_pointer_type ]
!2849 = metadata !{i32 589860, metadata !2844, metadata !"char", metadata !2844, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2850 = metadata !{i32 589846, metadata !2851, metadata !"uintmax_t", metadata !2851, i32 138, i64 0, i64 0, i64 0, i32 0, metadata !2852} ; [ DW_TAG_typedef ]
!2851 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2845} ; [ DW_TAG_file_type ]
!2852 = metadata !{i32 589860, metadata !2844, metadata !"long unsigned int", metadata !2844, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2853 = metadata !{i32 589860, metadata !2844, metadata !"int", metadata !2844, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2854 = metadata !{i32 589846, metadata !2855, metadata !"__UIM_CASE", metadata !2855, i32 84, i64 0, i64 0, i64 0, i32 0, metadata !2856} ; [ DW_TAG_typedef ]
!2855 = metadata !{i32 589865, metadata !"uClibc_uintmaxtostr.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2845} ; [ DW_TAG_file_type ]
!2856 = metadata !{i32 589828, metadata !2844, metadata !"", metadata !2855, i32 79, i64 32, i64 32, i64 0, i32 0, null, metadata !2857, i32 0, null} ; [ DW_TAG_enumeration_type ]
!2857 = metadata !{metadata !2858, metadata !2859, metadata !2860, metadata !2861}
!2858 = metadata !{i32 589864, metadata !"__UIM_DECIMAL", i64 0} ; [ DW_TAG_enumerator ]
!2859 = metadata !{i32 589864, metadata !"__UIM_GROUP", i64 44} ; [ DW_TAG_enumerator ]
!2860 = metadata !{i32 589864, metadata !"__UIM_LOWER", i64 87} ; [ DW_TAG_enumerator ]
!2861 = metadata !{i32 589864, metadata !"__UIM_UPPER", i64 55} ; [ DW_TAG_enumerator ]
!2862 = metadata !{i32 589870, i32 0, metadata !2863, metadata !"tcgetattr", metadata !"tcgetattr", metadata !"tcgetattr", metadata !2863, i32 39, metadata !2865, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i32 (i32, %struct.termios*)* @tcg
!2863 = metadata !{i32 589865, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !2864} ; [ DW_TAG_file_type ]
!2864 = metadata !{i32 589841, i32 0, i32 1, metadata !"tcgetattr.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/termios", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [ 
!2865 = metadata !{i32 589845, metadata !2863, metadata !"", metadata !2863, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2866, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2866 = metadata !{metadata !2867, metadata !2867, metadata !2868}
!2867 = metadata !{i32 589860, metadata !2863, metadata !"int", metadata !2863, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2868 = metadata !{i32 589839, metadata !2863, metadata !"", metadata !2863, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2869} ; [ DW_TAG_pointer_type ]
!2869 = metadata !{i32 589843, metadata !2863, metadata !"termios", metadata !2870, i32 31, i64 480, i64 32, i64 0, i32 0, null, metadata !2871, i32 0, null} ; [ DW_TAG_structure_type ]
!2870 = metadata !{i32 589865, metadata !"termios.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2864} ; [ DW_TAG_file_type ]
!2871 = metadata !{metadata !2872, metadata !2875, metadata !2876, metadata !2877, metadata !2878, metadata !2881, metadata !2883, metadata !2885}
!2872 = metadata !{i32 589837, metadata !2869, metadata !"c_iflag", metadata !2870, i32 32, i64 32, i64 32, i64 0, i32 0, metadata !2873} ; [ DW_TAG_member ]
!2873 = metadata !{i32 589846, metadata !2870, metadata !"tcflag_t", metadata !2870, i32 27, i64 0, i64 0, i64 0, i32 0, metadata !2874} ; [ DW_TAG_typedef ]
!2874 = metadata !{i32 589860, metadata !2863, metadata !"unsigned int", metadata !2863, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2875 = metadata !{i32 589837, metadata !2869, metadata !"c_oflag", metadata !2870, i32 33, i64 32, i64 32, i64 32, i32 0, metadata !2873} ; [ DW_TAG_member ]
!2876 = metadata !{i32 589837, metadata !2869, metadata !"c_cflag", metadata !2870, i32 34, i64 32, i64 32, i64 64, i32 0, metadata !2873} ; [ DW_TAG_member ]
!2877 = metadata !{i32 589837, metadata !2869, metadata !"c_lflag", metadata !2870, i32 35, i64 32, i64 32, i64 96, i32 0, metadata !2873} ; [ DW_TAG_member ]
!2878 = metadata !{i32 589837, metadata !2869, metadata !"c_line", metadata !2870, i32 36, i64 8, i64 8, i64 128, i32 0, metadata !2879} ; [ DW_TAG_member ]
!2879 = metadata !{i32 589846, metadata !2870, metadata !"cc_t", metadata !2870, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !2880} ; [ DW_TAG_typedef ]
!2880 = metadata !{i32 589860, metadata !2863, metadata !"unsigned char", metadata !2863, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!2881 = metadata !{i32 589837, metadata !2869, metadata !"c_cc", metadata !2870, i32 37, i64 256, i64 8, i64 136, i32 0, metadata !2882} ; [ DW_TAG_member ]
!2882 = metadata !{i32 589825, metadata !2863, metadata !"", metadata !2863, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !2879, metadata !837, i32 0, null} ; [ DW_TAG_array_type ]
!2883 = metadata !{i32 589837, metadata !2869, metadata !"c_ispeed", metadata !2870, i32 38, i64 32, i64 32, i64 416, i32 0, metadata !2884} ; [ DW_TAG_member ]
!2884 = metadata !{i32 589846, metadata !2870, metadata !"speed_t", metadata !2870, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2874} ; [ DW_TAG_typedef ]
!2885 = metadata !{i32 589837, metadata !2869, metadata !"c_ospeed", metadata !2870, i32 39, i64 32, i64 32, i64 448, i32 0, metadata !2884} ; [ DW_TAG_member ]
!2886 = metadata !{i32 589870, i32 0, metadata !2887, metadata !"wcrtomb", metadata !"wcrtomb", metadata !"wcrtomb", metadata !2889, i32 342, metadata !2890, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32, %struct.__mbstate_t*)* 
!2887 = metadata !{i32 589865, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2888} ; [ DW_TAG_file_type ]
!2888 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcrtomb.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; [
!2889 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2888} ; [ DW_TAG_file_type ]
!2890 = metadata !{i32 589845, metadata !2887, metadata !"", metadata !2887, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2891, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2891 = metadata !{metadata !2892, metadata !2895, metadata !2897, metadata !2899}
!2892 = metadata !{i32 589846, metadata !2893, metadata !"size_t", metadata !2893, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2894} ; [ DW_TAG_typedef ]
!2893 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2888} ; [ DW_TAG_file_type ]
!2894 = metadata !{i32 589860, metadata !2887, metadata !"long unsigned int", metadata !2887, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2895 = metadata !{i32 589839, metadata !2887, metadata !"", metadata !2887, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2896} ; [ DW_TAG_pointer_type ]
!2896 = metadata !{i32 589860, metadata !2887, metadata !"char", metadata !2887, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2897 = metadata !{i32 589846, metadata !2893, metadata !"wchar_t", metadata !2893, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2898} ; [ DW_TAG_typedef ]
!2898 = metadata !{i32 589860, metadata !2887, metadata !"int", metadata !2887, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2899 = metadata !{i32 589839, metadata !2887, metadata !"", metadata !2887, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2900} ; [ DW_TAG_pointer_type ]
!2900 = metadata !{i32 589846, metadata !2901, metadata !"mbstate_t", metadata !2901, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2902} ; [ DW_TAG_typedef ]
!2901 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2888} ; [ DW_TAG_file_type ]
!2902 = metadata !{i32 589843, metadata !2887, metadata !"", metadata !2901, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2903, i32 0, null} ; [ DW_TAG_structure_type ]
!2903 = metadata !{metadata !2904, metadata !2905}
!2904 = metadata !{i32 589837, metadata !2902, metadata !"__mask", metadata !2901, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2897} ; [ DW_TAG_member ]
!2905 = metadata !{i32 589837, metadata !2902, metadata !"__wc", metadata !2901, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2897} ; [ DW_TAG_member ]
!2906 = metadata !{i32 589870, i32 0, metadata !2907, metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !"wcsrtombs", metadata !2909, i32 394, metadata !2910, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, %struct.__
!2907 = metadata !{i32 589865, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2908} ; [ DW_TAG_file_type ]
!2908 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!2909 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2908} ; [ DW_TAG_file_type ]
!2910 = metadata !{i32 589845, metadata !2907, metadata !"", metadata !2907, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2911, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2911 = metadata !{metadata !2912, metadata !2915, metadata !2917, metadata !2912, metadata !2921}
!2912 = metadata !{i32 589846, metadata !2913, metadata !"size_t", metadata !2913, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2914} ; [ DW_TAG_typedef ]
!2913 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2908} ; [ DW_TAG_file_type ]
!2914 = metadata !{i32 589860, metadata !2907, metadata !"long unsigned int", metadata !2907, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2915 = metadata !{i32 589839, metadata !2907, metadata !"", metadata !2907, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2916} ; [ DW_TAG_pointer_type ]
!2916 = metadata !{i32 589860, metadata !2907, metadata !"char", metadata !2907, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2917 = metadata !{i32 589839, metadata !2907, metadata !"", metadata !2907, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2918} ; [ DW_TAG_pointer_type ]
!2918 = metadata !{i32 589839, metadata !2907, metadata !"", metadata !2907, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2919} ; [ DW_TAG_pointer_type ]
!2919 = metadata !{i32 589846, metadata !2913, metadata !"wchar_t", metadata !2913, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2920} ; [ DW_TAG_typedef ]
!2920 = metadata !{i32 589860, metadata !2907, metadata !"int", metadata !2907, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2921 = metadata !{i32 589839, metadata !2907, metadata !"", metadata !2907, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2922} ; [ DW_TAG_pointer_type ]
!2922 = metadata !{i32 589846, metadata !2923, metadata !"mbstate_t", metadata !2923, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2924} ; [ DW_TAG_typedef ]
!2923 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2908} ; [ DW_TAG_file_type ]
!2924 = metadata !{i32 589843, metadata !2907, metadata !"", metadata !2923, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2925, i32 0, null} ; [ DW_TAG_structure_type ]
!2925 = metadata !{metadata !2926, metadata !2927}
!2926 = metadata !{i32 589837, metadata !2924, metadata !"__mask", metadata !2923, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2919} ; [ DW_TAG_member ]
!2927 = metadata !{i32 589837, metadata !2924, metadata !"__wc", metadata !2923, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2919} ; [ DW_TAG_member ]
!2928 = metadata !{i32 589870, i32 0, metadata !2929, metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !"__strtofpmax", metadata !2931, i32 222, metadata !2932, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, x86_fp80 (i8*, i8**, i3
!2929 = metadata !{i32 589865, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2930} ; [ DW_TAG_file_type ]
!2930 = metadata !{i32 589841, i32 0, i32 1, metadata !"__strtofpmax.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ; 
!2931 = metadata !{i32 589865, metadata !"_strtod.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2930} ; [ DW_TAG_file_type ]
!2932 = metadata !{i32 589845, metadata !2929, metadata !"", metadata !2929, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2933, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2933 = metadata !{metadata !2934, metadata !2937, metadata !2940, metadata !2942}
!2934 = metadata !{i32 589846, metadata !2935, metadata !"__fpmax_t", metadata !2935, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !2936} ; [ DW_TAG_typedef ]
!2935 = metadata !{i32 589865, metadata !"uClibc_fpmax.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !2930} ; [ DW_TAG_file_type ]
!2936 = metadata !{i32 589860, metadata !2929, metadata !"long double", metadata !2929, i32 0, i64 128, i64 128, i64 0, i32 0, i32 4} ; [ DW_TAG_base_type ]
!2937 = metadata !{i32 589839, metadata !2929, metadata !"", metadata !2929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2938} ; [ DW_TAG_pointer_type ]
!2938 = metadata !{i32 589862, metadata !2929, metadata !"", metadata !2929, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2939} ; [ DW_TAG_const_type ]
!2939 = metadata !{i32 589860, metadata !2929, metadata !"char", metadata !2929, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2940 = metadata !{i32 589839, metadata !2929, metadata !"", metadata !2929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2941} ; [ DW_TAG_pointer_type ]
!2941 = metadata !{i32 589839, metadata !2929, metadata !"", metadata !2929, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2939} ; [ DW_TAG_pointer_type ]
!2942 = metadata !{i32 589860, metadata !2929, metadata !"int", metadata !2929, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2943 = metadata !{i32 589870, i32 0, metadata !2944, metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !"_stdlib_strto_l", metadata !2946, i32 512, metadata !2947, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i8**
!2944 = metadata !{i32 589865, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2945} ; [ DW_TAG_file_type ]
!2945 = metadata !{i32 589841, i32 0, i32 1, metadata !"_stdlib_strto_l.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!2946 = metadata !{i32 589865, metadata !"stdlib.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/stdlib", metadata !2945} ; [ DW_TAG_file_type ]
!2947 = metadata !{i32 589845, metadata !2944, metadata !"", metadata !2944, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2948, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2948 = metadata !{metadata !2949, metadata !2950, metadata !2953, metadata !2955, metadata !2955}
!2949 = metadata !{i32 589860, metadata !2944, metadata !"long unsigned int", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2950 = metadata !{i32 589839, metadata !2944, metadata !"", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2951} ; [ DW_TAG_pointer_type ]
!2951 = metadata !{i32 589862, metadata !2944, metadata !"", metadata !2944, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2952} ; [ DW_TAG_const_type ]
!2952 = metadata !{i32 589860, metadata !2944, metadata !"char", metadata !2944, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2953 = metadata !{i32 589839, metadata !2944, metadata !"", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2954} ; [ DW_TAG_pointer_type ]
!2954 = metadata !{i32 589839, metadata !2944, metadata !"", metadata !2944, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2952} ; [ DW_TAG_pointer_type ]
!2955 = metadata !{i32 589860, metadata !2944, metadata !"int", metadata !2944, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2956 = metadata !{i32 589870, i32 0, metadata !2957, metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !"wcsnrtombs", metadata !2959, i32 808, metadata !2960, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 false, i64 (i8*, i32**, i64, i64, %s
!2957 = metadata !{i32 589865, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2958} ; [ DW_TAG_file_type ]
!2958 = metadata !{i32 589841, i32 0, i32 1, metadata !"wcsnrtombs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} 
!2959 = metadata !{i32 589865, metadata !"wchar.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/wchar", metadata !2958} ; [ DW_TAG_file_type ]
!2960 = metadata !{i32 589845, metadata !2957, metadata !"", metadata !2957, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2961, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2961 = metadata !{metadata !2962, metadata !2965, metadata !2967, metadata !2962, metadata !2962, metadata !2971}
!2962 = metadata !{i32 589846, metadata !2963, metadata !"size_t", metadata !2963, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !2964} ; [ DW_TAG_typedef ]
!2963 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2958} ; [ DW_TAG_file_type ]
!2964 = metadata !{i32 589860, metadata !2957, metadata !"long unsigned int", metadata !2957, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!2965 = metadata !{i32 589839, metadata !2957, metadata !"", metadata !2957, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2966} ; [ DW_TAG_pointer_type ]
!2966 = metadata !{i32 589860, metadata !2957, metadata !"char", metadata !2957, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2967 = metadata !{i32 589839, metadata !2957, metadata !"", metadata !2957, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2968} ; [ DW_TAG_pointer_type ]
!2968 = metadata !{i32 589839, metadata !2957, metadata !"", metadata !2957, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2969} ; [ DW_TAG_pointer_type ]
!2969 = metadata !{i32 589846, metadata !2963, metadata !"wchar_t", metadata !2963, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !2970} ; [ DW_TAG_typedef ]
!2970 = metadata !{i32 589860, metadata !2957, metadata !"int", metadata !2957, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2971 = metadata !{i32 589839, metadata !2957, metadata !"", metadata !2957, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2972} ; [ DW_TAG_pointer_type ]
!2972 = metadata !{i32 589846, metadata !2973, metadata !"mbstate_t", metadata !2973, i32 107, i64 0, i64 0, i64 0, i32 0, metadata !2974} ; [ DW_TAG_typedef ]
!2973 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !2958} ; [ DW_TAG_file_type ]
!2974 = metadata !{i32 589843, metadata !2957, metadata !"", metadata !2973, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !2975, i32 0, null} ; [ DW_TAG_structure_type ]
!2975 = metadata !{metadata !2976, metadata !2977}
!2976 = metadata !{i32 589837, metadata !2974, metadata !"__mask", metadata !2973, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !2969} ; [ DW_TAG_member ]
!2977 = metadata !{i32 589837, metadata !2974, metadata !"__wc", metadata !2973, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !2969} ; [ DW_TAG_member ]
!2978 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__getodigit", metadata !"__getodigit", metadata !"", metadata !2979, i32 27, metadata !2981, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!2979 = metadata !{i32 589865, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !2980} ; [ DW_TAG_file_type ]
!2980 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_init_env.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG
!2981 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2982, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2982 = metadata !{metadata !2983, metadata !2984}
!2983 = metadata !{i32 589860, metadata !2979, metadata !"int", metadata !2979, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!2984 = metadata !{i32 589862, metadata !2979, metadata !"", metadata !2979, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !2985} ; [ DW_TAG_const_type ]
!2985 = metadata !{i32 589860, metadata !2979, metadata !"char", metadata !2979, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!2986 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__getxdigit", metadata !"__getxdigit", metadata !"", metadata !2979, i32 31, metadata !2981, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!2987 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__isprint", metadata !"__isprint", metadata !"", metadata !2979, i32 124, metadata !2981, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!2988 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__streq", metadata !"__streq", metadata !"", metadata !2979, i32 129, metadata !2989, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!2989 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2990, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2990 = metadata !{metadata !2983, metadata !2991, metadata !2991}
!2991 = metadata !{i32 589839, metadata !2979, metadata !"", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2984} ; [ DW_TAG_pointer_type ]
!2992 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__get_sym_str", metadata !"__get_sym_str", metadata !"", metadata !2979, i32 139, metadata !2993, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @__get_sym_str} ; [
!2993 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2994, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2994 = metadata !{metadata !2995, metadata !2983, metadata !2995}
!2995 = metadata !{i32 589839, metadata !2979, metadata !"", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2985} ; [ DW_TAG_pointer_type ]
!2996 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__emit_error", metadata !"__emit_error", metadata !"", metadata !2979, i32 23, metadata !2997, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!2997 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !2998, i32 0, null} ; [ DW_TAG_subroutine_type ]
!2998 = metadata !{null, metadata !2991}
!2999 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__str_to_int", metadata !"__str_to_int", metadata !"", metadata !2979, i32 40, metadata !3000, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3000 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3001, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3001 = metadata !{metadata !3002, metadata !2995, metadata !2991}
!3002 = metadata !{i32 589860, metadata !2979, metadata !"long int", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3003 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__convert_escape_sequences", metadata !"__convert_escape_sequences", metadata !"", metadata !2979, i32 65, metadata !3004, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*)*
!3004 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3005, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3005 = metadata !{metadata !3006, metadata !2995}
!3006 = metadata !{i32 589846, metadata !3007, metadata !"size_t", metadata !3007, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !3008} ; [ DW_TAG_typedef ]
!3007 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !2980} ; [ DW_TAG_file_type ]
!3008 = metadata !{i32 589860, metadata !2979, metadata !"long unsigned int", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3009 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"__add_arg", metadata !"__add_arg", metadata !"", metadata !2979, i32 152, metadata !3010, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3010 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3011, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3011 = metadata !{null, metadata !3012, metadata !3013, metadata !2995, metadata !2983}
!3012 = metadata !{i32 589839, metadata !2979, metadata !"", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2983} ; [ DW_TAG_pointer_type ]
!3013 = metadata !{i32 589839, metadata !2979, metadata !"", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !2995} ; [ DW_TAG_pointer_type ]
!3014 = metadata !{i32 589870, i32 0, metadata !2979, metadata !"klee_init_env", metadata !"klee_init_env", metadata !"klee_init_env", metadata !2979, i32 161, metadata !3015, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32*, i8***)* @
!3015 = metadata !{i32 589845, metadata !2979, metadata !"", metadata !2979, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3016, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3016 = metadata !{null, metadata !3012, metadata !3017}
!3017 = metadata !{i32 589839, metadata !2979, metadata !"", metadata !2979, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3013} ; [ DW_TAG_pointer_type ]
!3018 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"fork", metadata !"fork", metadata !"fork", metadata !3019, i32 62, metadata !3021, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @fork} ; [ DW_TAG_subprogram ]
!3019 = metadata !{i32 589865, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3020} ; [ DW_TAG_file_type ]
!3020 = metadata !{i32 589841, i32 0, i32 1, metadata !"illegal.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!3021 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3022, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3022 = metadata !{metadata !3023}
!3023 = metadata !{i32 589846, metadata !3024, metadata !"pid_t", metadata !3024, i32 267, i64 0, i64 0, i64 0, i32 0, metadata !3025} ; [ DW_TAG_typedef ]
!3024 = metadata !{i32 589865, metadata !"unistd.h", metadata !"/usr/include", metadata !3020} ; [ DW_TAG_file_type ]
!3025 = metadata !{i32 589860, metadata !3019, metadata !"int", metadata !3019, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3026 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"vfork", metadata !"vfork", metadata !"vfork", metadata !3019, i32 68, metadata !3021, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 ()* @vfork} ; [ DW_TAG_subprogram ]
!3027 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execve", metadata !"execve", metadata !"execve", metadata !3019, i32 60, metadata !3028, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**, i8**)* @execve} ; [ DW_TAG_
!3028 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3029, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3029 = metadata !{metadata !3025, metadata !3030, metadata !3033, metadata !3033}
!3030 = metadata !{i32 589839, metadata !3019, metadata !"", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3031} ; [ DW_TAG_pointer_type ]
!3031 = metadata !{i32 589862, metadata !3019, metadata !"", metadata !3019, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3032} ; [ DW_TAG_const_type ]
!3032 = metadata !{i32 589860, metadata !3019, metadata !"char", metadata !3019, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3033 = metadata !{i32 589839, metadata !3019, metadata !"", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3034} ; [ DW_TAG_pointer_type ]
!3034 = metadata !{i32 589862, metadata !3019, metadata !"", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3035} ; [ DW_TAG_const_type ]
!3035 = metadata !{i32 589839, metadata !3019, metadata !"", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3032} ; [ DW_TAG_pointer_type ]
!3036 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execvp", metadata !"execvp", metadata !"execvp", metadata !3019, i32 59, metadata !3037, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execvp} ; [ DW_TAG_subpro
!3037 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3038, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3038 = metadata !{metadata !3025, metadata !3030, metadata !3033}
!3039 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execv", metadata !"execv", metadata !"execv", metadata !3019, i32 58, metadata !3037, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8**)* @execv} ; [ DW_TAG_subprogram
!3040 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execle", metadata !"execle", metadata !"execle", metadata !3019, i32 57, metadata !3041, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execle} ; [ DW_TAG_su
!3041 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3042, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3042 = metadata !{metadata !3025, metadata !3030, metadata !3030}
!3043 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execlp", metadata !"execlp", metadata !"execlp", metadata !3019, i32 56, metadata !3041, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execlp} ; [ DW_TAG_su
!3044 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"execl", metadata !"execl", metadata !"execl", metadata !3019, i32 55, metadata !3041, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*, ...)* @execl} ; [ DW_TAG_subpro
!3045 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"kill", metadata !"kill", metadata !"kill", metadata !3019, i32 22, metadata !3046, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @kill} ; [ DW_TAG_subprogram ]
!3046 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3047, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3047 = metadata !{metadata !3025, metadata !3023, metadata !3025}
!3048 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"longjmp", metadata !"longjmp", metadata !"longjmp", metadata !3019, i32 34, metadata !3049, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.__jmp_buf_tag*, i32)* @lon
!3049 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3050, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3050 = metadata !{null, metadata !3051, metadata !3025}
!3051 = metadata !{i32 589839, metadata !3019, metadata !"", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3052} ; [ DW_TAG_pointer_type ]
!3052 = metadata !{i32 589843, metadata !3019, metadata !"__jmp_buf_tag", metadata !3053, i32 35, i64 1600, i64 64, i64 0, i32 0, null, metadata !3054, i32 0, null} ; [ DW_TAG_structure_type ]
!3053 = metadata !{i32 589865, metadata !"setjmp.h", metadata !"/usr/include", metadata !3020} ; [ DW_TAG_file_type ]
!3054 = metadata !{metadata !3055, metadata !3061, metadata !3062}
!3055 = metadata !{i32 589837, metadata !3052, metadata !"__jmpbuf", metadata !3053, i32 40, i64 512, i64 64, i64 0, i32 0, metadata !3056} ; [ DW_TAG_member ]
!3056 = metadata !{i32 589846, metadata !3053, metadata !"__jmp_buf", metadata !3053, i32 35, i64 0, i64 0, i64 0, i32 0, metadata !3057} ; [ DW_TAG_typedef ]
!3057 = metadata !{i32 589825, metadata !3019, metadata !"", metadata !3019, i32 0, i64 512, i64 64, i64 0, i32 0, metadata !3058, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!3058 = metadata !{i32 589860, metadata !3019, metadata !"long int", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3059 = metadata !{metadata !3060}
!3060 = metadata !{i32 589857, i64 0, i64 7}      ; [ DW_TAG_subrange_type ]
!3061 = metadata !{i32 589837, metadata !3052, metadata !"__mask_was_saved", metadata !3053, i32 41, i64 32, i64 32, i64 512, i32 0, metadata !3025} ; [ DW_TAG_member ]
!3062 = metadata !{i32 589837, metadata !3052, metadata !"__saved_mask", metadata !3053, i32 42, i64 1024, i64 64, i64 576, i32 0, metadata !3063} ; [ DW_TAG_member ]
!3063 = metadata !{i32 589846, metadata !3064, metadata !"__sigset_t", metadata !3064, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !3065} ; [ DW_TAG_typedef ]
!3064 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3020} ; [ DW_TAG_file_type ]
!3065 = metadata !{i32 589843, metadata !3019, metadata !"", metadata !3066, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !3067, i32 0, null} ; [ DW_TAG_structure_type ]
!3066 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3020} ; [ DW_TAG_file_type ]
!3067 = metadata !{metadata !3068}
!3068 = metadata !{i32 589837, metadata !3065, metadata !"__val", metadata !3066, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !3069} ; [ DW_TAG_member ]
!3069 = metadata !{i32 589825, metadata !3019, metadata !"", metadata !3019, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3070, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!3070 = metadata !{i32 589860, metadata !3019, metadata !"long unsigned int", metadata !3019, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3071 = metadata !{i32 589870, i32 0, metadata !3019, metadata !"_setjmp", metadata !"_setjmp", metadata !"_setjmp", metadata !3019, i32 29, metadata !3072, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.__jmp_buf_tag*)* @_setjmp} 
!3072 = metadata !{i32 589845, metadata !3019, metadata !"", metadata !3019, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3073, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3073 = metadata !{metadata !3025, metadata !3051}
!3074 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__get_file", metadata !"__get_file", metadata !"__get_file", metadata !3075, i32 143, metadata !3077, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_file_t* (i32)* @__
!3075 = metadata !{i32 589865, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3076} ; [ DW_TAG_file_type ]
!3076 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile_un
!3077 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3078, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3078 = metadata !{metadata !3079, metadata !3085}
!3079 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3080} ; [ DW_TAG_pointer_type ]
!3080 = metadata !{i32 589846, metadata !3081, metadata !"exe_file_t", metadata !3081, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3082} ; [ DW_TAG_typedef ]
!3081 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3076} ; [ DW_TAG_file_type ]
!3082 = metadata !{i32 589843, metadata !3075, metadata !"exe_file_t", metadata !3081, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !3083, i32 0, null} ; [ DW_TAG_structure_type ]
!3083 = metadata !{metadata !3084, metadata !3086, metadata !3088, metadata !3092, metadata !3164, metadata !3165, metadata !3166}
!3084 = metadata !{i32 589837, metadata !3082, metadata !"fd", metadata !3081, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3085} ; [ DW_TAG_member ]
!3085 = metadata !{i32 589860, metadata !3075, metadata !"int", metadata !3075, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3086 = metadata !{i32 589837, metadata !3082, metadata !"flags", metadata !3081, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3087} ; [ DW_TAG_member ]
!3087 = metadata !{i32 589860, metadata !3075, metadata !"unsigned int", metadata !3075, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3088 = metadata !{i32 589837, metadata !3082, metadata !"off", metadata !3081, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3089} ; [ DW_TAG_member ]
!3089 = metadata !{i32 589846, metadata !3090, metadata !"off64_t", metadata !3090, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3090 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3076} ; [ DW_TAG_file_type ]
!3091 = metadata !{i32 589860, metadata !3075, metadata !"long int", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3092 = metadata !{i32 589837, metadata !3082, metadata !"dfile", metadata !3081, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3093} ; [ DW_TAG_member ]
!3093 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3094} ; [ DW_TAG_pointer_type ]
!3094 = metadata !{i32 589846, metadata !3081, metadata !"exe_disk_file_t", metadata !3081, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3095} ; [ DW_TAG_typedef ]
!3095 = metadata !{i32 589843, metadata !3075, metadata !"", metadata !3081, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3096, i32 0, null} ; [ DW_TAG_structure_type ]
!3096 = metadata !{metadata !3097, metadata !3098, metadata !3101, metadata !3102, metadata !3143}
!3097 = metadata !{i32 589837, metadata !3095, metadata !"size", metadata !3081, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3087} ; [ DW_TAG_member ]
!3098 = metadata !{i32 589837, metadata !3095, metadata !"contents", metadata !3081, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3099} ; [ DW_TAG_member ]
!3099 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3100} ; [ DW_TAG_pointer_type ]
!3100 = metadata !{i32 589860, metadata !3075, metadata !"char", metadata !3075, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3101 = metadata !{i32 589837, metadata !3095, metadata !"path", metadata !3081, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3099} ; [ DW_TAG_member ]
!3102 = metadata !{i32 589837, metadata !3095, metadata !"stat", metadata !3081, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3103} ; [ DW_TAG_member ]
!3103 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3104} ; [ DW_TAG_pointer_type ]
!3104 = metadata !{i32 589843, metadata !3075, metadata !"stat64", metadata !3081, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3105, i32 0, null} ; [ DW_TAG_structure_type ]
!3105 = metadata !{metadata !3106, metadata !3111, metadata !3113, metadata !3115, metadata !3117, metadata !3119, metadata !3121, metadata !3122, metadata !3123, metadata !3125, metadata !3127, metadata !3129, metadata !3137, metadata !3138, metadata !3
!3106 = metadata !{i32 589837, metadata !3104, metadata !"st_dev", metadata !3107, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3108} ; [ DW_TAG_member ]
!3107 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3108 = metadata !{i32 589846, metadata !3109, metadata !"__dev_t", metadata !3109, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3109 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3110 = metadata !{i32 589860, metadata !3075, metadata !"long unsigned int", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3111 = metadata !{i32 589837, metadata !3104, metadata !"st_ino", metadata !3107, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3112} ; [ DW_TAG_member ]
!3112 = metadata !{i32 589846, metadata !3109, metadata !"__ino64_t", metadata !3109, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3113 = metadata !{i32 589837, metadata !3104, metadata !"st_nlink", metadata !3107, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3114} ; [ DW_TAG_member ]
!3114 = metadata !{i32 589846, metadata !3109, metadata !"__nlink_t", metadata !3109, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3115 = metadata !{i32 589837, metadata !3104, metadata !"st_mode", metadata !3107, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3116 = metadata !{i32 589846, metadata !3109, metadata !"__mode_t", metadata !3109, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3117 = metadata !{i32 589837, metadata !3104, metadata !"st_uid", metadata !3107, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3118} ; [ DW_TAG_member ]
!3118 = metadata !{i32 589846, metadata !3109, metadata !"__uid_t", metadata !3109, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3119 = metadata !{i32 589837, metadata !3104, metadata !"st_gid", metadata !3107, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3120} ; [ DW_TAG_member ]
!3120 = metadata !{i32 589846, metadata !3109, metadata !"__gid_t", metadata !3109, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3121 = metadata !{i32 589837, metadata !3104, metadata !"__pad0", metadata !3107, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3085} ; [ DW_TAG_member ]
!3122 = metadata !{i32 589837, metadata !3104, metadata !"st_rdev", metadata !3107, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3108} ; [ DW_TAG_member ]
!3123 = metadata !{i32 589837, metadata !3104, metadata !"st_size", metadata !3107, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3124} ; [ DW_TAG_member ]
!3124 = metadata !{i32 589846, metadata !3109, metadata !"__off_t", metadata !3109, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3125 = metadata !{i32 589837, metadata !3104, metadata !"st_blksize", metadata !3107, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3126} ; [ DW_TAG_member ]
!3126 = metadata !{i32 589846, metadata !3109, metadata !"__blksize_t", metadata !3109, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3127 = metadata !{i32 589837, metadata !3104, metadata !"st_blocks", metadata !3107, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3128} ; [ DW_TAG_member ]
!3128 = metadata !{i32 589846, metadata !3109, metadata !"__blkcnt64_t", metadata !3109, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3129 = metadata !{i32 589837, metadata !3104, metadata !"st_atim", metadata !3107, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3130 = metadata !{i32 589843, metadata !3075, metadata !"timespec", metadata !3131, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3132, i32 0, null} ; [ DW_TAG_structure_type ]
!3131 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3076} ; [ DW_TAG_file_type ]
!3132 = metadata !{metadata !3133, metadata !3135}
!3133 = metadata !{i32 589837, metadata !3130, metadata !"tv_sec", metadata !3131, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3134} ; [ DW_TAG_member ]
!3134 = metadata !{i32 589846, metadata !3109, metadata !"__time_t", metadata !3109, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3135 = metadata !{i32 589837, metadata !3130, metadata !"tv_nsec", metadata !3131, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3136} ; [ DW_TAG_member ]
!3136 = metadata !{i32 589846, metadata !3109, metadata !"__syscall_slong_t", metadata !3109, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3137 = metadata !{i32 589837, metadata !3104, metadata !"st_mtim", metadata !3107, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3138 = metadata !{i32 589837, metadata !3104, metadata !"st_ctim", metadata !3107, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3139 = metadata !{i32 589837, metadata !3104, metadata !"__glibc_reserved", metadata !3107, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3140} ; [ DW_TAG_member ]
!3140 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3136, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!3141 = metadata !{metadata !3142}
!3142 = metadata !{i32 589857, i64 0, i64 2}      ; [ DW_TAG_subrange_type ]
!3143 = metadata !{i32 589837, metadata !3095, metadata !"src", metadata !3081, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3144} ; [ DW_TAG_member ]
!3144 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3145} ; [ DW_TAG_pointer_type ]
!3145 = metadata !{i32 589846, metadata !3081, metadata !"exe_sockaddr_t", metadata !3081, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3146} ; [ DW_TAG_typedef ]
!3146 = metadata !{i32 589843, metadata !3075, metadata !"", metadata !3081, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3147, i32 0, null} ; [ DW_TAG_structure_type ]
!3147 = metadata !{metadata !3148, metadata !3161}
!3148 = metadata !{i32 589837, metadata !3146, metadata !"addr", metadata !3081, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3149} ; [ DW_TAG_member ]
!3149 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3150} ; [ DW_TAG_pointer_type ]
!3150 = metadata !{i32 589843, metadata !3075, metadata !"sockaddr_storage", metadata !3151, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3152, i32 0, null} ; [ DW_TAG_structure_type ]
!3151 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3152 = metadata !{metadata !3153, metadata !3156, metadata !3157}
!3153 = metadata !{i32 589837, metadata !3150, metadata !"ss_family", metadata !3151, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3154} ; [ DW_TAG_member ]
!3154 = metadata !{i32 589846, metadata !3151, metadata !"sa_family_t", metadata !3151, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3155} ; [ DW_TAG_typedef ]
!3155 = metadata !{i32 589860, metadata !3075, metadata !"short unsigned int", metadata !3075, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3156 = metadata !{i32 589837, metadata !3150, metadata !"__ss_align", metadata !3151, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3110} ; [ DW_TAG_member ]
!3157 = metadata !{i32 589837, metadata !3150, metadata !"__ss_padding", metadata !3151, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3158} ; [ DW_TAG_member ]
!3158 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3100, metadata !3159, i32 0, null} ; [ DW_TAG_array_type ]
!3159 = metadata !{metadata !3160}
!3160 = metadata !{i32 589857, i64 0, i64 111}    ; [ DW_TAG_subrange_type ]
!3161 = metadata !{i32 589837, metadata !3146, metadata !"addrlen", metadata !3081, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3162} ; [ DW_TAG_member ]
!3162 = metadata !{i32 589846, metadata !3163, metadata !"socklen_t", metadata !3163, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3163 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3164 = metadata !{i32 589837, metadata !3082, metadata !"local", metadata !3081, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3145} ; [ DW_TAG_member ]
!3165 = metadata !{i32 589837, metadata !3082, metadata !"foreign", metadata !3081, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3144} ; [ DW_TAG_member ]
!3166 = metadata !{i32 589837, metadata !3082, metadata !"domain", metadata !3081, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3085} ; [ DW_TAG_member ]
!3167 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"umask", metadata !"umask", metadata !"umask", metadata !3075, i32 203, metadata !3168, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @umask} ; [ DW_TAG_subprogram ]
!3168 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3169, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3169 = metadata !{metadata !3170, metadata !3170}
!3170 = metadata !{i32 589846, metadata !3090, metadata !"mode_t", metadata !3090, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3171 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"has_permission", metadata !"has_permission", metadata !"", metadata !3075, i32 212, metadata !3172, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3172 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3173, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3173 = metadata !{metadata !3085, metadata !3085, metadata !3103}
!3174 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"sendfile", metadata !"sendfile", metadata !"sendfile", metadata !3075, i32 2483, metadata !3175, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @sendfil
!3175 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3176, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3176 = metadata !{metadata !3177, metadata !3085, metadata !3085, metadata !3178, metadata !3180}
!3177 = metadata !{i32 589846, metadata !3090, metadata !"ssize_t", metadata !3090, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3178 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3179} ; [ DW_TAG_pointer_type ]
!3179 = metadata !{i32 589846, metadata !3090, metadata !"off_t", metadata !3090, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3180 = metadata !{i32 589846, metadata !3090, metadata !"size_t", metadata !3090, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3181 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"sendfile64", metadata !"sendfile64", metadata !"sendfile64", metadata !3075, i32 2499, metadata !3175, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32, i64*, i64)* @s
!3182 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fsync", metadata !"fsync", metadata !"fsync", metadata !3075, i32 1715, metadata !3183, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fsync} ; [ DW_TAG_subprogram ]
!3183 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3184, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3184 = metadata !{metadata !3085, metadata !3085}
!3185 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"chroot", metadata !"chroot", metadata !"chroot", metadata !3075, i32 2075, metadata !3186, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chroot} ; [ DW_TAG_subprogram
!3186 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3187, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3187 = metadata !{metadata !3085, metadata !3188}
!3188 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3189} ; [ DW_TAG_pointer_type ]
!3189 = metadata !{i32 589862, metadata !3075, metadata !"", metadata !3075, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3100} ; [ DW_TAG_const_type ]
!3190 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fstatfs", metadata !"fstatfs", metadata !"fstatfs", metadata !3075, i32 1695, metadata !3191, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %11*)* @fstatfs} ; [ DW_TAG_
!3191 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3192, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3192 = metadata !{metadata !3085, metadata !3085, metadata !3193}
!3193 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3194} ; [ DW_TAG_pointer_type ]
!3194 = metadata !{i32 589843, metadata !3075, metadata !"statfs", metadata !3195, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !3196, i32 0, null} ; [ DW_TAG_structure_type ]
!3195 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3196 = metadata !{metadata !3197, metadata !3199, metadata !3200, metadata !3202, metadata !3203, metadata !3204, metadata !3206, metadata !3207, metadata !3213, metadata !3214, metadata !3215, metadata !3216}
!3197 = metadata !{i32 589837, metadata !3194, metadata !"f_type", metadata !3195, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !3198} ; [ DW_TAG_member ]
!3198 = metadata !{i32 589846, metadata !3109, metadata !"__fsword_t", metadata !3109, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3199 = metadata !{i32 589837, metadata !3194, metadata !"f_bsize", metadata !3195, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !3198} ; [ DW_TAG_member ]
!3200 = metadata !{i32 589837, metadata !3194, metadata !"f_blocks", metadata !3195, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3201} ; [ DW_TAG_member ]
!3201 = metadata !{i32 589846, metadata !3109, metadata !"__fsblkcnt_t", metadata !3109, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3202 = metadata !{i32 589837, metadata !3194, metadata !"f_bfree", metadata !3195, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3201} ; [ DW_TAG_member ]
!3203 = metadata !{i32 589837, metadata !3194, metadata !"f_bavail", metadata !3195, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3201} ; [ DW_TAG_member ]
!3204 = metadata !{i32 589837, metadata !3194, metadata !"f_files", metadata !3195, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !3205} ; [ DW_TAG_member ]
!3205 = metadata !{i32 589846, metadata !3109, metadata !"__fsfilcnt_t", metadata !3109, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3206 = metadata !{i32 589837, metadata !3194, metadata !"f_ffree", metadata !3195, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !3205} ; [ DW_TAG_member ]
!3207 = metadata !{i32 589837, metadata !3194, metadata !"f_fsid", metadata !3195, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !3208} ; [ DW_TAG_member ]
!3208 = metadata !{i32 589846, metadata !3109, metadata !"__fsid_t", metadata !3109, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !3209} ; [ DW_TAG_typedef ]
!3209 = metadata !{i32 589843, metadata !3075, metadata !"", metadata !3109, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !3210, i32 0, null} ; [ DW_TAG_structure_type ]
!3210 = metadata !{metadata !3211}
!3211 = metadata !{i32 589837, metadata !3209, metadata !"__val", metadata !3109, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !3212} ; [ DW_TAG_member ]
!3212 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3085, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3213 = metadata !{i32 589837, metadata !3194, metadata !"f_namelen", metadata !3195, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !3198} ; [ DW_TAG_member ]
!3214 = metadata !{i32 589837, metadata !3194, metadata !"f_frsize", metadata !3195, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !3198} ; [ DW_TAG_member ]
!3215 = metadata !{i32 589837, metadata !3194, metadata !"f_flags", metadata !3195, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !3198} ; [ DW_TAG_member ]
!3216 = metadata !{i32 589837, metadata !3194, metadata !"f_spare", metadata !3195, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !3217} ; [ DW_TAG_member ]
!3217 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !3198, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!3218 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fcntl", metadata !"fcntl", metadata !"fcntl", metadata !3075, i32 1611, metadata !3219, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, ...)* @fcntl} ; [ DW_TAG_subp
!3219 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3220, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3220 = metadata !{metadata !3085, metadata !3085, metadata !3085}
!3221 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"futimens", metadata !"futimens", metadata !"futimens", metadata !3075, i32 1169, metadata !3222, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.timespec*)* @futi
!3222 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3223, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3223 = metadata !{metadata !3085, metadata !3085, metadata !3224}
!3224 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3225} ; [ DW_TAG_pointer_type ]
!3225 = metadata !{i32 589862, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3130} ; [ DW_TAG_const_type ]
!3226 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__df_chown", metadata !"__df_chown", metadata !"", metadata !3075, i32 977, metadata !3227, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3227 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3228, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3228 = metadata !{metadata !3085, metadata !3093, metadata !3229, metadata !3230}
!3229 = metadata !{i32 589846, metadata !3090, metadata !"uid_t", metadata !3090, i32 86, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3230 = metadata !{i32 589846, metadata !3090, metadata !"gid_t", metadata !3090, i32 70, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!3231 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fchown", metadata !"fchown", metadata !"fchown", metadata !3075, i32 996, metadata !3232, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @fchown} ; [ DW_TAG_s
!3232 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3233, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3233 = metadata !{metadata !3085, metadata !3085, metadata !3229, metadata !3230}
!3234 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fchdir", metadata !"fchdir", metadata !"fchdir", metadata !3075, i32 811, metadata !3183, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @fchdir} ; [ DW_TAG_subprogram 
!3235 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"ioctl", metadata !"ioctl", metadata !"ioctl", metadata !3075, i32 2303, metadata !3236, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64, ...)* @ioctl} ; [ DW_TAG_subp
!3236 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3237, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3237 = metadata !{metadata !3085, metadata !3085, metadata !3110}
!3238 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !"__undo_get_new_fd", metadata !3075, i32 2149, metadata !3239, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%s
!3239 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3240, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3240 = metadata !{null, metadata !3079}
!3241 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !"__get_new_fd", metadata !3075, i32 2127, metadata !3242, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.exe_file_t
!3242 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3243, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3243 = metadata !{metadata !3085, metadata !3244}
!3244 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3079} ; [ DW_TAG_pointer_type ]
!3245 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"select", metadata !"select", metadata !"select", metadata !3075, i32 1875, metadata !3246, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.__sigset_t*, %struct.__
!3246 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3247, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3247 = metadata !{metadata !3085, metadata !3085, metadata !3248, metadata !3248, metadata !3248, metadata !3256}
!3248 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3249} ; [ DW_TAG_pointer_type ]
!3249 = metadata !{i32 589846, metadata !3250, metadata !"fd_set", metadata !3250, i32 82, i64 0, i64 0, i64 0, i32 0, metadata !3251} ; [ DW_TAG_typedef ]
!3250 = metadata !{i32 589865, metadata !"select.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3076} ; [ DW_TAG_file_type ]
!3251 = metadata !{i32 589843, metadata !3075, metadata !"", metadata !3250, i32 65, i64 1024, i64 64, i64 0, i32 0, null, metadata !3252, i32 0, null} ; [ DW_TAG_structure_type ]
!3252 = metadata !{metadata !3253}
!3253 = metadata !{i32 589837, metadata !3251, metadata !"fds_bits", metadata !3250, i32 69, i64 1024, i64 64, i64 0, i32 0, metadata !3254} ; [ DW_TAG_member ]
!3254 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3255, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!3255 = metadata !{i32 589846, metadata !3250, metadata !"__fd_mask", metadata !3250, i32 65, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3256 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3257} ; [ DW_TAG_pointer_type ]
!3257 = metadata !{i32 589843, metadata !3075, metadata !"timeval", metadata !3258, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !3259, i32 0, null} ; [ DW_TAG_structure_type ]
!3258 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3259 = metadata !{metadata !3260, metadata !3261}
!3260 = metadata !{i32 589837, metadata !3257, metadata !"tv_sec", metadata !3258, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3134} ; [ DW_TAG_member ]
!3261 = metadata !{i32 589837, metadata !3257, metadata !"tv_usec", metadata !3258, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !3262} ; [ DW_TAG_member ]
!3262 = metadata !{i32 589846, metadata !3109, metadata !"__suseconds_t", metadata !3109, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3263 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"close", metadata !"close", metadata !"close", metadata !3075, i32 412, metadata !3183, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @close} ; [ DW_TAG_subprogram ]
!3264 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"dup2", metadata !"dup2", metadata !"dup2", metadata !3075, i32 1731, metadata !3219, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @dup2} ; [ DW_TAG_subprogram ]
!3265 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"dup", metadata !"dup", metadata !"dup", metadata !3075, i32 1779, metadata !3183, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32)* @dup} ; [ DW_TAG_subprogram ]
!3266 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !"__fd_getdents", metadata !3075, i32 1367, metadata !3267, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.di
!3267 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3268, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3268 = metadata !{metadata !3085, metadata !3087, metadata !3269, metadata !3087}
!3269 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3270} ; [ DW_TAG_pointer_type ]
!3270 = metadata !{i32 589843, metadata !3075, metadata !"dirent64", metadata !3271, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !3272, i32 0, null} ; [ DW_TAG_structure_type ]
!3271 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3272 = metadata !{metadata !3273, metadata !3274, metadata !3276, metadata !3277, metadata !3279}
!3273 = metadata !{i32 589837, metadata !3270, metadata !"d_ino", metadata !3271, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3112} ; [ DW_TAG_member ]
!3274 = metadata !{i32 589837, metadata !3270, metadata !"d_off", metadata !3271, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !3275} ; [ DW_TAG_member ]
!3275 = metadata !{i32 589846, metadata !3109, metadata !"__off64_t", metadata !3109, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3276 = metadata !{i32 589837, metadata !3270, metadata !"d_reclen", metadata !3271, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !3155} ; [ DW_TAG_member ]
!3277 = metadata !{i32 589837, metadata !3270, metadata !"d_type", metadata !3271, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !3278} ; [ DW_TAG_member ]
!3278 = metadata !{i32 589860, metadata !3075, metadata !"unsigned char", metadata !3075, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3279 = metadata !{i32 589837, metadata !3270, metadata !"d_name", metadata !3271, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !3280} ; [ DW_TAG_member ]
!3280 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3100, metadata !846, i32 0, null} ; [ DW_TAG_array_type ]
!3281 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !"__fd_gather_write", metadata !3075, i32 2232, metadata !3282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3282 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3283, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3283 = metadata !{metadata !3177, metadata !3079, metadata !3284, metadata !3085}
!3284 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3285} ; [ DW_TAG_pointer_type ]
!3285 = metadata !{i32 589862, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3286} ; [ DW_TAG_const_type ]
!3286 = metadata !{i32 589843, metadata !3075, metadata !"iovec", metadata !3287, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3288, i32 0, null} ; [ DW_TAG_structure_type ]
!3287 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!3288 = metadata !{metadata !3289, metadata !3291}
!3289 = metadata !{i32 589837, metadata !3286, metadata !"iov_base", metadata !3287, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3290} ; [ DW_TAG_member ]
!3290 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3291 = metadata !{i32 589837, metadata !3286, metadata !"iov_len", metadata !3287, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3180} ; [ DW_TAG_member ]
!3292 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"writev", metadata !"writev", metadata !"writev", metadata !3075, i32 2278, metadata !3293, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.direntry_t*, i32)* @wri
!3293 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3294, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3294 = metadata !{metadata !3177, metadata !3085, metadata !3284, metadata !3085}
!3295 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !"__fd_fstat", metadata !3075, i32 1028, metadata !3172, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @__
!3296 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !"__fd_scatter_read", metadata !3075, i32 2181, metadata !3282, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%st
!3297 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"munmap", metadata !"munmap", metadata !"munmap", metadata !3075, i32 909, metadata !3298, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i64)* @munmap} ; [ DW_TAG_subpro
!3298 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3299, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3299 = metadata !{metadata !3085, metadata !3290, metadata !3180}
!3300 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"pipe", metadata !"pipe", metadata !"pipe", metadata !3075, i32 2154, metadata !3301, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32*)* @pipe} ; [ DW_TAG_subprogram ]
!3301 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3302, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3302 = metadata !{metadata !3085, metadata !3303}
!3303 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3085} ; [ DW_TAG_pointer_type ]
!3304 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__concretize_ptr", metadata !"__concretize_ptr", metadata !"", metadata !3075, i32 2019, metadata !3305, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram 
!3305 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3306, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3306 = metadata !{metadata !3290, metadata !3290}
!3307 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__concretize_string", metadata !"__concretize_string", metadata !"", metadata !3075, i32 2032, metadata !3308, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3308 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3309, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3309 = metadata !{metadata !3188, metadata !3188}
!3310 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__get_sym_file_internal", metadata !"__get_sym_file_internal", metadata !"", metadata !3075, i32 61, metadata !3311, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_disk
!3311 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3312, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3312 = metadata !{metadata !3093, metadata !3188, metadata !3085, metadata !3313}
!3313 = metadata !{i32 589860, metadata !3075, metadata !"_Bool", metadata !3075, i32 0, i64 8, i64 8, i64 0, i32 0, i32 2} ; [ DW_TAG_base_type ]
!3314 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__get_sym_file", metadata !"__get_sym_file", metadata !"", metadata !3075, i32 56, metadata !3315, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3315 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3316, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3316 = metadata !{metadata !3093, metadata !3188}
!3317 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"utime", metadata !"utime", metadata !"utime", metadata !3075, i32 2108, metadata !3318, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @utime} ; [ DW_TAG_subprogra
!3318 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3319, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3319 = metadata !{metadata !3085, metadata !3188, metadata !3290}
!3320 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"readlink", metadata !"readlink", metadata !"readlink", metadata !3075, i32 1842, metadata !3321, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i8*, i8*, i64)* @readlink} ; [
!3321 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3322, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3322 = metadata !{metadata !3177, metadata !3188, metadata !3099, metadata !3180}
!3323 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"utimes", metadata !"utimes", metadata !"utimes", metadata !3075, i32 2090, metadata !3324, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.timespec*)* @utimes} ; 
!3324 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3325, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3325 = metadata !{metadata !3085, metadata !3188, metadata !3326}
!3326 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3327} ; [ DW_TAG_pointer_type ]
!3327 = metadata !{i32 589862, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3257} ; [ DW_TAG_const_type ]
!3328 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"unlink", metadata !"unlink", metadata !"unlink", metadata !3075, i32 1820, metadata !3186, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @unlink} ; [ DW_TAG_subprogram
!3329 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"rmdir", metadata !"rmdir", metadata !"rmdir", metadata !3075, i32 1801, metadata !3186, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @rmdir} ; [ DW_TAG_subprogram ]
!3330 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !"__fd_statfs", metadata !3075, i32 1678, metadata !3331, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %11*)* @__fd_sta
!3331 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3332, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3332 = metadata !{metadata !3085, metadata !3188, metadata !3193}
!3333 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"openat", metadata !"openat", metadata !"openat", metadata !3075, i32 1228, metadata !3334, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, ...)* @openat} ; [ DW
!3334 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3335, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3335 = metadata !{metadata !3085, metadata !3085, metadata !3188, metadata !3085}
!3336 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"symlink", metadata !"symlink", metadata !"symlink", metadata !3075, i32 1209, metadata !3337, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @symlink} ; [ DW_TAG_s
!3337 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3338, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3338 = metadata !{metadata !3085, metadata !3188, metadata !3188}
!3339 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"link", metadata !"link", metadata !"link", metadata !3075, i32 1190, metadata !3337, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @link} ; [ DW_TAG_subprogram ]
!3340 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"futimesat", metadata !"futimesat", metadata !"futimesat", metadata !3075, i32 1139, metadata !3341, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.timespec*
!3341 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3342, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3342 = metadata !{metadata !3085, metadata !3085, metadata !3188, metadata !3326}
!3343 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"unlinkat", metadata !"unlinkat", metadata !"unlinkat", metadata !3075, i32 1106, metadata !3334, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32)* @unlinkat} ; [
!3344 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fstatat", metadata !"fstatat", metadata !"fstatat", metadata !3075, i32 1065, metadata !3345, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*, i32)* @f
!3345 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3346, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3346 = metadata !{metadata !3085, metadata !3085, metadata !3188, metadata !3347, metadata !3085}
!3347 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3348} ; [ DW_TAG_pointer_type ]
!3348 = metadata !{i32 589843, metadata !3075, metadata !"stat", metadata !3107, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3349, i32 0, null} ; [ DW_TAG_structure_type ]
!3349 = metadata !{metadata !3350, metadata !3351, metadata !3353, metadata !3354, metadata !3355, metadata !3356, metadata !3357, metadata !3358, metadata !3359, metadata !3360, metadata !3361, metadata !3363, metadata !3364, metadata !3365, metadata !3
!3350 = metadata !{i32 589837, metadata !3348, metadata !"st_dev", metadata !3107, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3108} ; [ DW_TAG_member ]
!3351 = metadata !{i32 589837, metadata !3348, metadata !"st_ino", metadata !3107, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3352} ; [ DW_TAG_member ]
!3352 = metadata !{i32 589846, metadata !3109, metadata !"__ino_t", metadata !3109, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3110} ; [ DW_TAG_typedef ]
!3353 = metadata !{i32 589837, metadata !3348, metadata !"st_nlink", metadata !3107, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3114} ; [ DW_TAG_member ]
!3354 = metadata !{i32 589837, metadata !3348, metadata !"st_mode", metadata !3107, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3116} ; [ DW_TAG_member ]
!3355 = metadata !{i32 589837, metadata !3348, metadata !"st_uid", metadata !3107, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3118} ; [ DW_TAG_member ]
!3356 = metadata !{i32 589837, metadata !3348, metadata !"st_gid", metadata !3107, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3120} ; [ DW_TAG_member ]
!3357 = metadata !{i32 589837, metadata !3348, metadata !"__pad0", metadata !3107, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3085} ; [ DW_TAG_member ]
!3358 = metadata !{i32 589837, metadata !3348, metadata !"st_rdev", metadata !3107, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3108} ; [ DW_TAG_member ]
!3359 = metadata !{i32 589837, metadata !3348, metadata !"st_size", metadata !3107, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3124} ; [ DW_TAG_member ]
!3360 = metadata !{i32 589837, metadata !3348, metadata !"st_blksize", metadata !3107, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3126} ; [ DW_TAG_member ]
!3361 = metadata !{i32 589837, metadata !3348, metadata !"st_blocks", metadata !3107, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3362} ; [ DW_TAG_member ]
!3362 = metadata !{i32 589846, metadata !3109, metadata !"__blkcnt_t", metadata !3109, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3091} ; [ DW_TAG_typedef ]
!3363 = metadata !{i32 589837, metadata !3348, metadata !"st_atim", metadata !3107, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3364 = metadata !{i32 589837, metadata !3348, metadata !"st_mtim", metadata !3107, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3365 = metadata !{i32 589837, metadata !3348, metadata !"st_ctim", metadata !3107, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3130} ; [ DW_TAG_member ]
!3366 = metadata !{i32 589837, metadata !3348, metadata !"__glibc_reserved", metadata !3107, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3140} ; [ DW_TAG_member ]
!3367 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"lchown", metadata !"lchown", metadata !"lchown", metadata !3075, i32 1014, metadata !3368, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @lchown} ; [ DW_TAG_
!3368 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3369, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3369 = metadata !{metadata !3085, metadata !3188, metadata !3229, metadata !3230}
!3370 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"chown", metadata !"chown", metadata !"chown", metadata !3075, i32 983, metadata !3368, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @chown} ; [ DW_TAG_subpr
!3371 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"chdir", metadata !"chdir", metadata !"chdir", metadata !3075, i32 793, metadata !3186, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*)* @chdir} ; [ DW_TAG_subprogram ]
!3372 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"euidaccess", metadata !"euidaccess", metadata !"euidaccess", metadata !3075, i32 184, metadata !3373, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @euidaccess} ;
!3373 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3374, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3374 = metadata !{metadata !3085, metadata !3188, metadata !3085}
!3375 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"access", metadata !"access", metadata !"access", metadata !3075, i32 166, metadata !3373, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @access} ; [ DW_TAG_subpro
!3376 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__concretize_size", metadata !"__concretize_size", metadata !"", metadata !3075, i32 2026, metadata !3377, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogra
!3377 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3378, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3378 = metadata !{metadata !3180, metadata !3180}
!3379 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"getcwd", metadata !"getcwd", metadata !"getcwd", metadata !3075, i32 1984, metadata !3380, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64)* @getcwd} ; [ DW_TAG_subpr
!3380 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3381, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3381 = metadata !{metadata !3099, metadata !3099, metadata !3180}
!3382 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !"__fd_ftruncate", metadata !3075, i32 1333, metadata !3383, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @
!3383 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3384, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3384 = metadata !{metadata !3085, metadata !3085, metadata !3089}
!3385 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !"__fd_lseek", metadata !3075, i32 685, metadata !3386, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @__fd_lse
!3386 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3387, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3387 = metadata !{metadata !3089, metadata !3085, metadata !3089, metadata !3085}
!3388 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"pread", metadata !"pread", metadata !"pread", metadata !3075, i32 540, metadata !3389, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i64)* @pread} ; [ DW_TAG_
!3389 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3390, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3390 = metadata !{metadata !3177, metadata !3085, metadata !3290, metadata !3180, metadata !3179}
!3391 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"read", metadata !"read", metadata !"read", metadata !3075, i32 455, metadata !3392, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @read} ; [ DW_TAG_subprogra
!3392 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3393, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3393 = metadata !{metadata !3177, metadata !3085, metadata !3290, metadata !3180}
!3394 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"mmap_simple", metadata !"mmap_simple", metadata !"mmap_simple", metadata !3075, i32 831, metadata !3395, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i64, i64)* @mmap_
!3395 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3396, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3396 = metadata !{metadata !3290, metadata !3085, metadata !3180, metadata !3179}
!3397 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"mmap", metadata !"mmap", metadata !"mmap", metadata !3075, i32 881, metadata !3398, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap} ; [ D
!3398 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3399, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3399 = metadata !{metadata !3290, metadata !3290, metadata !3180, metadata !3085, metadata !3085, metadata !3085, metadata !3179}
!3400 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"mmap64", metadata !"mmap64", metadata !"mmap64", metadata !3075, i32 853, metadata !3401, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*, i64, i32, i32, i32, i64)* @mmap6
!3401 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3402, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3402 = metadata !{metadata !3290, metadata !3290, metadata !3180, metadata !3085, metadata !3085, metadata !3085, metadata !3089}
!3403 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__concretize_buffer", metadata !"__concretize_buffer", metadata !"", metadata !3075, i32 2056, metadata !3404, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subpr
!3404 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3405, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3405 = metadata !{metadata !3188, metadata !3188, metadata !3087}
!3406 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__df_chmod", metadata !"__df_chmod", metadata !"", metadata !3075, i32 915, metadata !3407, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3407 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3408, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3408 = metadata !{metadata !3085, metadata !3093, metadata !3170}
!3409 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"fchmod", metadata !"fchmod", metadata !"fchmod", metadata !3075, i32 950, metadata !3410, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @fchmod} ; [ DW_TAG_subpro
!3410 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3411, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3411 = metadata !{metadata !3085, metadata !3085, metadata !3170}
!3412 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"chmod", metadata !"chmod", metadata !"chmod", metadata !3075, i32 928, metadata !3413, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32)* @chmod} ; [ DW_TAG_subprogram
!3413 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3414, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3414 = metadata !{metadata !3085, metadata !3188, metadata !3170}
!3415 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !"__fd_lstat", metadata !3075, i32 771, metadata !3416, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__f
!3416 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3417, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3417 = metadata !{metadata !3085, metadata !3188, metadata !3103}
!3418 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_stat", metadata !"__fd_stat", metadata !"__fd_stat", metadata !3075, i32 742, metadata !3416, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @__fd_s
!3419 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"write", metadata !"write", metadata !"write", metadata !3075, i32 605, metadata !3392, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64)* @write} ; [ DW_TAG_subpr
!3420 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"atoi", metadata !"atoi", metadata !"atoi", metadata !3421, i32 279, metadata !3186, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3421 = metadata !{i32 589865, metadata !"stdlib.h", metadata !"/usr/include", metadata !3076} ; [ DW_TAG_file_type ]
!3422 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_open", metadata !"__fd_open", metadata !"__fd_open", metadata !3075, i32 242, metadata !3423, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, i32)* @__fd_open} 
!3423 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3424, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3424 = metadata !{metadata !3085, metadata !3188, metadata !3085, metadata !3170}
!3425 = metadata !{i32 589870, i32 0, metadata !3075, metadata !"__fd_openat", metadata !"__fd_openat", metadata !"__fd_openat", metadata !3075, i32 358, metadata !3426, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, i32, i32)* @
!3426 = metadata !{i32 589845, metadata !3075, metadata !"", metadata !3075, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3427, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3427 = metadata !{metadata !3085, metadata !3085, metadata !3188, metadata !3085, metadata !3170}
!3428 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !"gnu_dev_major", metadata !3429, i32 248, metadata !3431, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3429 = metadata !{i32 589865, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3430} ; [ DW_TAG_file_type ]
!3430 = metadata !{i32 589841, i32 0, i32 1, metadata !"stubs.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3431 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3432, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3432 = metadata !{metadata !3433, metadata !3434}
!3433 = metadata !{i32 589860, metadata !3429, metadata !"unsigned int", metadata !3429, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3434 = metadata !{i32 589860, metadata !3429, metadata !"long long unsigned int", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3435 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !"gnu_dev_minor", metadata !3429, i32 253, metadata !3431, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64)* @gnu_dev_m
!3436 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !"gnu_dev_makedev", metadata !3429, i32 258, metadata !3437, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i32)*
!3437 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3438, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3438 = metadata !{metadata !3434, metadata !3433, metadata !3433}
!3439 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__get_sym_stream", metadata !"__get_sym_stream", metadata !"", metadata !3440, i32 88, metadata !3441, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3440 = metadata !{i32 589865, metadata !"sockets.c.inc", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3430} ; [ DW_TAG_file_type ]
!3441 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3442, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3442 = metadata !{metadata !3443}
!3443 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3444} ; [ DW_TAG_pointer_type ]
!3444 = metadata !{i32 589846, metadata !3445, metadata !"exe_disk_file_t", metadata !3445, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !3446} ; [ DW_TAG_typedef ]
!3445 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3430} ; [ DW_TAG_file_type ]
!3446 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3445, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !3447, i32 0, null} ; [ DW_TAG_structure_type ]
!3447 = metadata !{metadata !3448, metadata !3449, metadata !3452, metadata !3453, metadata !3494}
!3448 = metadata !{i32 589837, metadata !3446, metadata !"size", metadata !3445, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3433} ; [ DW_TAG_member ]
!3449 = metadata !{i32 589837, metadata !3446, metadata !"contents", metadata !3445, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3450 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3451} ; [ DW_TAG_pointer_type ]
!3451 = metadata !{i32 589860, metadata !3429, metadata !"char", metadata !3429, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3452 = metadata !{i32 589837, metadata !3446, metadata !"path", metadata !3445, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3453 = metadata !{i32 589837, metadata !3446, metadata !"stat", metadata !3445, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3454} ; [ DW_TAG_member ]
!3454 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3455} ; [ DW_TAG_pointer_type ]
!3455 = metadata !{i32 589843, metadata !3429, metadata !"stat64", metadata !3456, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !3457, i32 0, null} ; [ DW_TAG_structure_type ]
!3456 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3457 = metadata !{metadata !3458, metadata !3462, metadata !3464, metadata !3466, metadata !3468, metadata !3470, metadata !3472, metadata !3474, metadata !3475, metadata !3478, metadata !3480, metadata !3482, metadata !3490, metadata !3491, metadata !3
!3458 = metadata !{i32 589837, metadata !3455, metadata !"st_dev", metadata !3456, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3459} ; [ DW_TAG_member ]
!3459 = metadata !{i32 589846, metadata !3460, metadata !"__dev_t", metadata !3460, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3461} ; [ DW_TAG_typedef ]
!3460 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3461 = metadata !{i32 589860, metadata !3429, metadata !"long unsigned int", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3462 = metadata !{i32 589837, metadata !3455, metadata !"st_ino", metadata !3456, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3463} ; [ DW_TAG_member ]
!3463 = metadata !{i32 589846, metadata !3460, metadata !"__ino64_t", metadata !3460, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3461} ; [ DW_TAG_typedef ]
!3464 = metadata !{i32 589837, metadata !3455, metadata !"st_nlink", metadata !3456, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3465} ; [ DW_TAG_member ]
!3465 = metadata !{i32 589846, metadata !3460, metadata !"__nlink_t", metadata !3460, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3461} ; [ DW_TAG_typedef ]
!3466 = metadata !{i32 589837, metadata !3455, metadata !"st_mode", metadata !3456, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3467} ; [ DW_TAG_member ]
!3467 = metadata !{i32 589846, metadata !3460, metadata !"__mode_t", metadata !3460, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3433} ; [ DW_TAG_typedef ]
!3468 = metadata !{i32 589837, metadata !3455, metadata !"st_uid", metadata !3456, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3469} ; [ DW_TAG_member ]
!3469 = metadata !{i32 589846, metadata !3460, metadata !"__uid_t", metadata !3460, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3433} ; [ DW_TAG_typedef ]
!3470 = metadata !{i32 589837, metadata !3455, metadata !"st_gid", metadata !3456, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3471} ; [ DW_TAG_member ]
!3471 = metadata !{i32 589846, metadata !3460, metadata !"__gid_t", metadata !3460, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3433} ; [ DW_TAG_typedef ]
!3472 = metadata !{i32 589837, metadata !3455, metadata !"__pad0", metadata !3456, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3473 = metadata !{i32 589860, metadata !3429, metadata !"int", metadata !3429, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3474 = metadata !{i32 589837, metadata !3455, metadata !"st_rdev", metadata !3456, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3459} ; [ DW_TAG_member ]
!3475 = metadata !{i32 589837, metadata !3455, metadata !"st_size", metadata !3456, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3476} ; [ DW_TAG_member ]
!3476 = metadata !{i32 589846, metadata !3460, metadata !"__off_t", metadata !3460, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3477 = metadata !{i32 589860, metadata !3429, metadata !"long int", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3478 = metadata !{i32 589837, metadata !3455, metadata !"st_blksize", metadata !3456, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3479} ; [ DW_TAG_member ]
!3479 = metadata !{i32 589846, metadata !3460, metadata !"__blksize_t", metadata !3460, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3480 = metadata !{i32 589837, metadata !3455, metadata !"st_blocks", metadata !3456, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3481} ; [ DW_TAG_member ]
!3481 = metadata !{i32 589846, metadata !3460, metadata !"__blkcnt64_t", metadata !3460, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3482 = metadata !{i32 589837, metadata !3455, metadata !"st_atim", metadata !3456, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3483} ; [ DW_TAG_member ]
!3483 = metadata !{i32 589843, metadata !3429, metadata !"timespec", metadata !3484, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3485, i32 0, null} ; [ DW_TAG_structure_type ]
!3484 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3430} ; [ DW_TAG_file_type ]
!3485 = metadata !{metadata !3486, metadata !3488}
!3486 = metadata !{i32 589837, metadata !3483, metadata !"tv_sec", metadata !3484, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3487} ; [ DW_TAG_member ]
!3487 = metadata !{i32 589846, metadata !3460, metadata !"__time_t", metadata !3460, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3488 = metadata !{i32 589837, metadata !3483, metadata !"tv_nsec", metadata !3484, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3489} ; [ DW_TAG_member ]
!3489 = metadata !{i32 589846, metadata !3460, metadata !"__syscall_slong_t", metadata !3460, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3490 = metadata !{i32 589837, metadata !3455, metadata !"st_mtim", metadata !3456, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3483} ; [ DW_TAG_member ]
!3491 = metadata !{i32 589837, metadata !3455, metadata !"st_ctim", metadata !3456, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3483} ; [ DW_TAG_member ]
!3492 = metadata !{i32 589837, metadata !3455, metadata !"__glibc_reserved", metadata !3456, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3493} ; [ DW_TAG_member ]
!3493 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3489, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!3494 = metadata !{i32 589837, metadata !3446, metadata !"src", metadata !3445, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3495} ; [ DW_TAG_member ]
!3495 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3496} ; [ DW_TAG_pointer_type ]
!3496 = metadata !{i32 589846, metadata !3445, metadata !"exe_sockaddr_t", metadata !3445, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3497} ; [ DW_TAG_typedef ]
!3497 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3445, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !3498, i32 0, null} ; [ DW_TAG_structure_type ]
!3498 = metadata !{metadata !3499, metadata !3510}
!3499 = metadata !{i32 589837, metadata !3497, metadata !"addr", metadata !3445, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !3500} ; [ DW_TAG_member ]
!3500 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3501} ; [ DW_TAG_pointer_type ]
!3501 = metadata !{i32 589843, metadata !3429, metadata !"sockaddr_storage", metadata !3502, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !3503, i32 0, null} ; [ DW_TAG_structure_type ]
!3502 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3503 = metadata !{metadata !3504, metadata !3507, metadata !3508}
!3504 = metadata !{i32 589837, metadata !3501, metadata !"ss_family", metadata !3502, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !3505} ; [ DW_TAG_member ]
!3505 = metadata !{i32 589846, metadata !3502, metadata !"sa_family_t", metadata !3502, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3506} ; [ DW_TAG_typedef ]
!3506 = metadata !{i32 589860, metadata !3429, metadata !"short unsigned int", metadata !3429, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3507 = metadata !{i32 589837, metadata !3501, metadata !"__ss_align", metadata !3502, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3461} ; [ DW_TAG_member ]
!3508 = metadata !{i32 589837, metadata !3501, metadata !"__ss_padding", metadata !3502, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !3509} ; [ DW_TAG_member ]
!3509 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3451, metadata !3159, i32 0, null} ; [ DW_TAG_array_type ]
!3510 = metadata !{i32 589837, metadata !3497, metadata !"addrlen", metadata !3445, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !3511} ; [ DW_TAG_member ]
!3511 = metadata !{i32 589846, metadata !3512, metadata !"socklen_t", metadata !3512, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3433} ; [ DW_TAG_typedef ]
!3512 = metadata !{i32 589865, metadata !"confname.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3513 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__get_sym_dgram", metadata !"__get_sym_dgram", metadata !"", metadata !3440, i32 99, metadata !3441, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3514 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"getsockopt", metadata !"getsockopt", metadata !"getsockopt", metadata !3440, i32 861, metadata !3515, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32*)
!3515 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3516, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3516 = metadata !{metadata !3473, metadata !3473, metadata !3473, metadata !3473, metadata !3517, metadata !3518}
!3517 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!3518 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3511} ; [ DW_TAG_pointer_type ]
!3519 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"setsockopt", metadata !"setsockopt", metadata !"setsockopt", metadata !3440, i32 867, metadata !3520, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32, i8*, i32)*
!3520 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3521, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3521 = metadata !{metadata !3473, metadata !3473, metadata !3473, metadata !3473, metadata !3517, metadata !3511}
!3522 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !"__fd_attach_dgram", metadata !3440, i32 838, metadata !3523, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (%str
!3523 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3524, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3524 = metadata !{metadata !3525, metadata !3527}
!3525 = metadata !{i32 589846, metadata !3526, metadata !"ssize_t", metadata !3526, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3526 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3430} ; [ DW_TAG_file_type ]
!3527 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3528} ; [ DW_TAG_pointer_type ]
!3528 = metadata !{i32 589843, metadata !3429, metadata !"exe_file_t", metadata !3529, i32 8, i64 448, i64 64, i64 0, i32 0, null, metadata !3530, i32 0, null} ; [ DW_TAG_structure_type ]
!3529 = metadata !{i32 589865, metadata !"sockets.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3430} ; [ DW_TAG_file_type ]
!3530 = metadata !{metadata !3531, metadata !3532, metadata !3533, metadata !3535, metadata !3536, metadata !3537, metadata !3538}
!3531 = metadata !{i32 589837, metadata !3528, metadata !"fd", metadata !3445, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3532 = metadata !{i32 589837, metadata !3528, metadata !"flags", metadata !3445, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3433} ; [ DW_TAG_member ]
!3533 = metadata !{i32 589837, metadata !3528, metadata !"off", metadata !3445, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !3534} ; [ DW_TAG_member ]
!3534 = metadata !{i32 589846, metadata !3526, metadata !"off64_t", metadata !3526, i32 102, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3535 = metadata !{i32 589837, metadata !3528, metadata !"dfile", metadata !3445, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !3443} ; [ DW_TAG_member ]
!3536 = metadata !{i32 589837, metadata !3528, metadata !"local", metadata !3445, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !3496} ; [ DW_TAG_member ]
!3537 = metadata !{i32 589837, metadata !3528, metadata !"foreign", metadata !3445, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !3495} ; [ DW_TAG_member ]
!3538 = metadata !{i32 589837, metadata !3528, metadata !"domain", metadata !3445, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3539 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"cap_get_file", metadata !"cap_get_file", metadata !"cap_get_file", metadata !3429, i32 592, metadata !3540, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct._cap_struct* (i8
!3540 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3541, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3541 = metadata !{metadata !3542, metadata !3546}
!3542 = metadata !{i32 589846, metadata !3543, metadata !"cap_t", metadata !3543, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3544} ; [ DW_TAG_typedef ]
!3543 = metadata !{i32 589865, metadata !"capability.h", metadata !"/usr/include/sys", metadata !3430} ; [ DW_TAG_file_type ]
!3544 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3545} ; [ DW_TAG_pointer_type ]
!3545 = metadata !{i32 589843, metadata !3429, metadata !"_cap_struct", metadata !3543, i32 41, i64 0, i64 0, i64 0, i32 4, null, null, i32 0, null} ; [ DW_TAG_structure_type ]
!3546 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3547} ; [ DW_TAG_pointer_type ]
!3547 = metadata !{i32 589862, metadata !3429, metadata !"", metadata !3429, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3451} ; [ DW_TAG_const_type ]
!3548 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"getenv", metadata !"getenv", metadata !"getenv", metadata !3429, i32 585, metadata !3549, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i8*)* @getenv} ; [ DW_TAG_subprogram 
!3549 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3550, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3550 = metadata !{metadata !3450, metadata !3546}
!3551 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"setlocale", metadata !"setlocale", metadata !"setlocale", metadata !3429, i32 579, metadata !3552, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i8* (i32, i8*)* @setlocale} ; [ D
!3552 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3553, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3553 = metadata !{metadata !3450, metadata !3473, metadata !3450}
!3554 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"clock_settime", metadata !"clock_settime", metadata !"clock_settime", metadata !3429, i32 171, metadata !3555, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3555 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3556, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3556 = metadata !{metadata !3473, metadata !3557, metadata !3558}
!3557 = metadata !{i32 589846, metadata !3484, metadata !"clockid_t", metadata !3484, i32 103, i64 0, i64 0, i64 0, i32 0, metadata !3473} ; [ DW_TAG_typedef ]
!3558 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3559} ; [ DW_TAG_pointer_type ]
!3559 = metadata !{i32 589862, metadata !3429, metadata !"", metadata !3429, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3483} ; [ DW_TAG_const_type ]
!3560 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !"__fd_recvmsg", metadata !3440, i32 799, metadata !3561, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3561 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3562, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3562 = metadata !{metadata !3525, metadata !3473, metadata !3563, metadata !3473}
!3563 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3564} ; [ DW_TAG_pointer_type ]
!3564 = metadata !{i32 589843, metadata !3429, metadata !"msghdr", metadata !3502, i32 225, i64 448, i64 64, i64 0, i32 0, null, metadata !3565, i32 0, null} ; [ DW_TAG_structure_type ]
!3565 = metadata !{metadata !3566, metadata !3567, metadata !3568, metadata !3577, metadata !3578, metadata !3579, metadata !3580}
!3566 = metadata !{i32 589837, metadata !3564, metadata !"msg_name", metadata !3502, i32 226, i64 64, i64 64, i64 0, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3567 = metadata !{i32 589837, metadata !3564, metadata !"msg_namelen", metadata !3502, i32 227, i64 32, i64 32, i64 64, i32 0, metadata !3511} ; [ DW_TAG_member ]
!3568 = metadata !{i32 589837, metadata !3564, metadata !"msg_iov", metadata !3502, i32 229, i64 64, i64 64, i64 128, i32 0, metadata !3569} ; [ DW_TAG_member ]
!3569 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3570} ; [ DW_TAG_pointer_type ]
!3570 = metadata !{i32 589843, metadata !3429, metadata !"iovec", metadata !3571, i32 44, i64 128, i64 64, i64 0, i32 0, null, metadata !3572, i32 0, null} ; [ DW_TAG_structure_type ]
!3571 = metadata !{i32 589865, metadata !"uio.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3572 = metadata !{metadata !3573, metadata !3574}
!3573 = metadata !{i32 589837, metadata !3570, metadata !"iov_base", metadata !3571, i32 45, i64 64, i64 64, i64 0, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3574 = metadata !{i32 589837, metadata !3570, metadata !"iov_len", metadata !3571, i32 46, i64 64, i64 64, i64 64, i32 0, metadata !3575} ; [ DW_TAG_member ]
!3575 = metadata !{i32 589846, metadata !3576, metadata !"size_t", metadata !3576, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !3461} ; [ DW_TAG_typedef ]
!3576 = metadata !{i32 589865, metadata !"sigstack.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3577 = metadata !{i32 589837, metadata !3564, metadata !"msg_iovlen", metadata !3502, i32 230, i64 64, i64 64, i64 192, i32 0, metadata !3575} ; [ DW_TAG_member ]
!3578 = metadata !{i32 589837, metadata !3564, metadata !"msg_control", metadata !3502, i32 232, i64 64, i64 64, i64 256, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3579 = metadata !{i32 589837, metadata !3564, metadata !"msg_controllen", metadata !3502, i32 233, i64 64, i64 64, i64 320, i32 0, metadata !3575} ; [ DW_TAG_member ]
!3580 = metadata !{i32 589837, metadata !3564, metadata !"msg_flags", metadata !3502, i32 238, i64 32, i64 32, i64 384, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3581 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"recvmsg", metadata !"recvmsg", metadata !"recvmsg", metadata !3440, i32 794, metadata !3561, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @recvm
!3582 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !"__fd_recvfrom", metadata !3440, i32 706, metadata !3583, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i
!3583 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3584, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3584 = metadata !{metadata !3525, metadata !3473, metadata !3517, metadata !3575, metadata !3473, metadata !3585, metadata !3518}
!3585 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3586} ; [ DW_TAG_pointer_type ]
!3586 = metadata !{i32 589843, metadata !3429, metadata !"sockaddr", metadata !3502, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !3587, i32 0, null} ; [ DW_TAG_structure_type ]
!3587 = metadata !{metadata !3588, metadata !3589}
!3588 = metadata !{i32 589837, metadata !3586, metadata !"sa_family", metadata !3502, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3505} ; [ DW_TAG_member ]
!3589 = metadata !{i32 589837, metadata !3586, metadata !"sa_data", metadata !3502, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !3590} ; [ DW_TAG_member ]
!3590 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3451, metadata !3591, i32 0, null} ; [ DW_TAG_array_type ]
!3591 = metadata !{metadata !3592}
!3592 = metadata !{i32 589857, i64 0, i64 13}     ; [ DW_TAG_subrange_type ]
!3593 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"recvfrom", metadata !"recvfrom", metadata !"recvfrom", metadata !3440, i32 701, metadata !3583, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.soc
!3594 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_recv", metadata !"__fd_recv", metadata !"__fd_recv", metadata !3440, i32 672, metadata !3595, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_r
!3595 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3596, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3596 = metadata !{metadata !3525, metadata !3473, metadata !3517, metadata !3575, metadata !3473}
!3597 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"recv", metadata !"recv", metadata !"recv", metadata !3440, i32 667, metadata !3595, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @recv} ; [ DW_TAG_subp
!3598 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !"__fd_sendmsg", metadata !3440, i32 740, metadata !3599, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr
!3599 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3600, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3600 = metadata !{metadata !3525, metadata !3473, metadata !3601, metadata !3473}
!3601 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3602} ; [ DW_TAG_pointer_type ]
!3602 = metadata !{i32 589862, metadata !3429, metadata !"", metadata !3429, i32 0, i64 448, i64 64, i64 0, i32 0, metadata !3564} ; [ DW_TAG_const_type ]
!3603 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"sendmsg", metadata !"sendmsg", metadata !"sendmsg", metadata !3440, i32 735, metadata !3599, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.msghdr*, i32)* @sendm
!3604 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !"__fd_sendto", metadata !3440, i32 682, metadata !3605, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %s
!3605 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3606, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3606 = metadata !{metadata !3525, metadata !3473, metadata !3517, metadata !3575, metadata !3473, metadata !3607, metadata !3511}
!3607 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3608} ; [ DW_TAG_pointer_type ]
!3608 = metadata !{i32 589862, metadata !3429, metadata !"", metadata !3429, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !3586} ; [ DW_TAG_const_type ]
!3609 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"sendto", metadata !"sendto", metadata !"sendto", metadata !3440, i32 677, metadata !3605, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32, %struct.sockaddr*
!3610 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_send", metadata !"__fd_send", metadata !"__fd_send", metadata !3440, i32 663, metadata !3595, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @__fd_s
!3611 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"send", metadata !"send", metadata !"send", metadata !3440, i32 658, metadata !3595, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i8*, i64, i32)* @send} ; [ DW_TAG_subp
!3612 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"shutdown", metadata !"shutdown", metadata !"shutdown", metadata !3440, i32 615, metadata !3613, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @shutdown} ; [ DW_TA
!3613 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3614, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3614 = metadata !{metadata !3473, metadata !3473, metadata !3473}
!3615 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !"__fd_shutdown", metadata !3440, i32 609, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_shu
!3616 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3617, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3617 = metadata !{metadata !3473, metadata !3618}
!3618 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3461} ; [ DW_TAG_pointer_type ]
!3619 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"getpeername", metadata !"getpeername", metadata !"getpeername", metadata !3440, i32 571, metadata !3620, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3620 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3621, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3621 = metadata !{metadata !3473, metadata !3473, metadata !3585, metadata !3518}
!3622 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !"__fd_getpeername", metadata !3440, i32 564, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3623 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"getsockname", metadata !"getsockname", metadata !"getsockname", metadata !3440, i32 527, metadata !3620, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3624 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !"__fd_getsockname", metadata !3440, i32 519, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* 
!3625 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"listen", metadata !"listen", metadata !"listen", metadata !3440, i32 375, metadata !3613, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32)* @listen} ; [ DW_TAG_subpro
!3626 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_listen", metadata !"__fd_listen", metadata !"__fd_listen", metadata !3440, i32 368, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_listen} ;
!3627 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"connect", metadata !"connect", metadata !"connect", metadata !3440, i32 319, metadata !3628, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @con
!3628 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3629, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3629 = metadata !{metadata !3473, metadata !3473, metadata !3607, metadata !3511}
!3630 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_connect", metadata !"__fd_connect", metadata !"__fd_connect", metadata !3440, i32 312, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_connec
!3631 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"bind", metadata !"bind", metadata !"bind", metadata !3440, i32 267, metadata !3628, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32)* @bind} ; [ DW
!3632 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_bind", metadata !"__fd_bind", metadata !"__fd_bind", metadata !3440, i32 259, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_bind} ; [ DW_TA
!3633 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"rename", metadata !"rename", metadata !"rename", metadata !3429, i32 144, metadata !3634, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @rename} ; [ DW_TAG_subpro
!3634 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3635, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3635 = metadata !{metadata !3473, metadata !3546, metadata !3546}
!3636 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__allocate_sockaddr", metadata !"__allocate_sockaddr", metadata !"", metadata !3440, i32 106, metadata !3637, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.exe_sockaddr_t*
!3637 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3638, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3638 = metadata !{metadata !3495, metadata !3473, metadata !3495}
!3639 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_accept", metadata !"__fd_accept", metadata !"__fd_accept", metadata !3440, i32 413, metadata !3620, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*
!3640 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"accept", metadata !"accept", metadata !"accept", metadata !3440, i32 409, metadata !3620, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.sockaddr*, i32*)* @accep
!3641 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"socket", metadata !"socket", metadata !"socket", metadata !3440, i32 141, metadata !3642, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i32)* @socket} ; [ DW_TAG_s
!3642 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3643, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3643 = metadata !{metadata !3473, metadata !3473, metadata !3473, metadata !3473}
!3644 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__fd_socket", metadata !"__fd_socket", metadata !"__fd_socket", metadata !3440, i32 132, metadata !3616, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i64*)* @__fd_socket} ;
!3645 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__socketcall", metadata !"__socketcall", metadata !"__socketcall", metadata !3440, i32 25, metadata !3646, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64*)* @__socke
!3646 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3647, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3647 = metadata !{metadata !3473, metadata !3473, metadata !3618}
!3648 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !"canonicalize_file_name", metadata !3429, i32 265, metadata !3549, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 
!3649 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"strverscmp", metadata !"strverscmp", metadata !"strverscmp", metadata !3429, i32 243, metadata !3634, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i8*)* @strverscmp} ;
!3650 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"clock_gettime", metadata !"clock_gettime", metadata !"clock_gettime", metadata !3429, i32 162, metadata !3651, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.tim
!3651 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3652, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3652 = metadata !{metadata !3473, metadata !3557, metadata !3653}
!3653 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3483} ; [ DW_TAG_pointer_type ]
!3654 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"_IO_putc", metadata !"_IO_putc", metadata !"_IO_putc", metadata !3429, i32 96, metadata !3655, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.FILE*)* @_IO_putc} 
!3655 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3656, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3656 = metadata !{metadata !3473, metadata !3473, metadata !3657}
!3657 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3658} ; [ DW_TAG_pointer_type ]
!3658 = metadata !{i32 589846, metadata !3526, metadata !"FILE", metadata !3526, i32 64, i64 0, i64 0, i64 0, i32 0, metadata !3659} ; [ DW_TAG_typedef ]
!3659 = metadata !{i32 589843, metadata !3429, metadata !"_IO_FILE", metadata !3526, i32 44, i64 1728, i64 64, i64 0, i32 0, null, metadata !3660, i32 0, null} ; [ DW_TAG_structure_type ]
!3660 = metadata !{metadata !3661, metadata !3663, metadata !3664, metadata !3665, metadata !3666, metadata !3667, metadata !3668, metadata !3669, metadata !3670, metadata !3671, metadata !3672, metadata !3673, metadata !3674, metadata !3682, metadata !3
!3661 = metadata !{i32 589837, metadata !3659, metadata !"_flags", metadata !3662, i32 246, i64 32, i64 32, i64 0, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3662 = metadata !{i32 589865, metadata !"libio.h", metadata !"/usr/include", metadata !3430} ; [ DW_TAG_file_type ]
!3663 = metadata !{i32 589837, metadata !3659, metadata !"_IO_read_ptr", metadata !3662, i32 251, i64 64, i64 64, i64 64, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3664 = metadata !{i32 589837, metadata !3659, metadata !"_IO_read_end", metadata !3662, i32 252, i64 64, i64 64, i64 128, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3665 = metadata !{i32 589837, metadata !3659, metadata !"_IO_read_base", metadata !3662, i32 253, i64 64, i64 64, i64 192, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3666 = metadata !{i32 589837, metadata !3659, metadata !"_IO_write_base", metadata !3662, i32 254, i64 64, i64 64, i64 256, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3667 = metadata !{i32 589837, metadata !3659, metadata !"_IO_write_ptr", metadata !3662, i32 255, i64 64, i64 64, i64 320, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3668 = metadata !{i32 589837, metadata !3659, metadata !"_IO_write_end", metadata !3662, i32 256, i64 64, i64 64, i64 384, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3669 = metadata !{i32 589837, metadata !3659, metadata !"_IO_buf_base", metadata !3662, i32 257, i64 64, i64 64, i64 448, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3670 = metadata !{i32 589837, metadata !3659, metadata !"_IO_buf_end", metadata !3662, i32 258, i64 64, i64 64, i64 512, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3671 = metadata !{i32 589837, metadata !3659, metadata !"_IO_save_base", metadata !3662, i32 260, i64 64, i64 64, i64 576, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3672 = metadata !{i32 589837, metadata !3659, metadata !"_IO_backup_base", metadata !3662, i32 261, i64 64, i64 64, i64 640, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3673 = metadata !{i32 589837, metadata !3659, metadata !"_IO_save_end", metadata !3662, i32 262, i64 64, i64 64, i64 704, i32 0, metadata !3450} ; [ DW_TAG_member ]
!3674 = metadata !{i32 589837, metadata !3659, metadata !"_markers", metadata !3662, i32 264, i64 64, i64 64, i64 768, i32 0, metadata !3675} ; [ DW_TAG_member ]
!3675 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3676} ; [ DW_TAG_pointer_type ]
!3676 = metadata !{i32 589843, metadata !3429, metadata !"_IO_marker", metadata !3662, i32 160, i64 192, i64 64, i64 0, i32 0, null, metadata !3677, i32 0, null} ; [ DW_TAG_structure_type ]
!3677 = metadata !{metadata !3678, metadata !3679, metadata !3681}
!3678 = metadata !{i32 589837, metadata !3676, metadata !"_next", metadata !3662, i32 161, i64 64, i64 64, i64 0, i32 0, metadata !3675} ; [ DW_TAG_member ]
!3679 = metadata !{i32 589837, metadata !3676, metadata !"_sbuf", metadata !3662, i32 162, i64 64, i64 64, i64 64, i32 0, metadata !3680} ; [ DW_TAG_member ]
!3680 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3659} ; [ DW_TAG_pointer_type ]
!3681 = metadata !{i32 589837, metadata !3676, metadata !"_pos", metadata !3662, i32 166, i64 32, i64 32, i64 128, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3682 = metadata !{i32 589837, metadata !3659, metadata !"_chain", metadata !3662, i32 266, i64 64, i64 64, i64 832, i32 0, metadata !3680} ; [ DW_TAG_member ]
!3683 = metadata !{i32 589837, metadata !3659, metadata !"_fileno", metadata !3662, i32 268, i64 32, i64 32, i64 896, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3684 = metadata !{i32 589837, metadata !3659, metadata !"_flags2", metadata !3662, i32 272, i64 32, i64 32, i64 928, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3685 = metadata !{i32 589837, metadata !3659, metadata !"_old_offset", metadata !3662, i32 274, i64 64, i64 64, i64 960, i32 0, metadata !3476} ; [ DW_TAG_member ]
!3686 = metadata !{i32 589837, metadata !3659, metadata !"_cur_column", metadata !3662, i32 278, i64 16, i64 16, i64 1024, i32 0, metadata !3506} ; [ DW_TAG_member ]
!3687 = metadata !{i32 589837, metadata !3659, metadata !"_vtable_offset", metadata !3662, i32 279, i64 8, i64 8, i64 1040, i32 0, metadata !3688} ; [ DW_TAG_member ]
!3688 = metadata !{i32 589860, metadata !3429, metadata !"signed char", metadata !3429, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3689 = metadata !{i32 589837, metadata !3659, metadata !"_shortbuf", metadata !3662, i32 280, i64 8, i64 8, i64 1048, i32 0, metadata !3690} ; [ DW_TAG_member ]
!3690 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3451, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!3691 = metadata !{i32 589837, metadata !3659, metadata !"_lock", metadata !3662, i32 284, i64 64, i64 64, i64 1088, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3692 = metadata !{i32 589837, metadata !3659, metadata !"_offset", metadata !3662, i32 293, i64 64, i64 64, i64 1152, i32 0, metadata !3693} ; [ DW_TAG_member ]
!3693 = metadata !{i32 589846, metadata !3460, metadata !"__off64_t", metadata !3460, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3694 = metadata !{i32 589837, metadata !3659, metadata !"__pad1", metadata !3662, i32 302, i64 64, i64 64, i64 1216, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3695 = metadata !{i32 589837, metadata !3659, metadata !"__pad2", metadata !3662, i32 303, i64 64, i64 64, i64 1280, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3696 = metadata !{i32 589837, metadata !3659, metadata !"__pad3", metadata !3662, i32 304, i64 64, i64 64, i64 1344, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3697 = metadata !{i32 589837, metadata !3659, metadata !"__pad4", metadata !3662, i32 305, i64 64, i64 64, i64 1408, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3698 = metadata !{i32 589837, metadata !3659, metadata !"__pad5", metadata !3662, i32 306, i64 64, i64 64, i64 1472, i32 0, metadata !3575} ; [ DW_TAG_member ]
!3699 = metadata !{i32 589837, metadata !3659, metadata !"_mode", metadata !3662, i32 308, i64 32, i64 32, i64 1536, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3700 = metadata !{i32 589837, metadata !3659, metadata !"_unused2", metadata !3662, i32 310, i64 160, i64 8, i64 1568, i32 0, metadata !3701} ; [ DW_TAG_member ]
!3701 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !3451, metadata !869, i32 0, null} ; [ DW_TAG_array_type ]
!3702 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"_IO_getc", metadata !"_IO_getc", metadata !"_IO_getc", metadata !3429, i32 91, metadata !3703, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (%struct.FILE*)* @_IO_getc} ; [ D
!3703 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3704, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3704 = metadata !{metadata !3473, metadata !3657}
!3705 = metadata !{i32 589870, i32 0, metadata !3429, metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !"__syscall_rt_sigaction", metadata !3429, i32 44, metadata !3706, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!3706 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3707, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3707 = metadata !{metadata !3473, metadata !3473, metadata !3708, metadata !3799, metadata !3575}
!3708 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3709} ; [ DW_TAG_pointer_type ]
!3709 = metadata !{i32 589862, metadata !3429, metadata !"", metadata !3429, i32 0, i64 1216, i64 64, i64 0, i32 0, metadata !3710} ; [ DW_TAG_const_type ]
!3710 = metadata !{i32 589843, metadata !3429, metadata !"sigaction", metadata !3711, i32 25, i64 1216, i64 64, i64 0, i32 0, null, metadata !3712, i32 0, null} ; [ DW_TAG_structure_type ]
!3711 = metadata !{i32 589865, metadata !"sigaction.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3712 = metadata !{metadata !3713, metadata !3788, metadata !3795, metadata !3796}
!3713 = metadata !{i32 589837, metadata !3710, metadata !"__sigaction_handler", metadata !3711, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3714} ; [ DW_TAG_member ]
!3714 = metadata !{i32 589847, metadata !3429, metadata !"", metadata !3711, i32 29, i64 64, i64 64, i64 0, i32 0, null, metadata !3715, i32 0, null} ; [ DW_TAG_union_type ]
!3715 = metadata !{metadata !3716, metadata !3722}
!3716 = metadata !{i32 589837, metadata !3714, metadata !"sa_handler", metadata !3711, i32 31, i64 64, i64 64, i64 0, i32 0, metadata !3717} ; [ DW_TAG_member ]
!3717 = metadata !{i32 589846, metadata !3718, metadata !"__sighandler_t", metadata !3718, i32 204, i64 0, i64 0, i64 0, i32 0, metadata !3719} ; [ DW_TAG_typedef ]
!3718 = metadata !{i32 589865, metadata !"signal.h", metadata !"/usr/include", metadata !3430} ; [ DW_TAG_file_type ]
!3719 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3720} ; [ DW_TAG_pointer_type ]
!3720 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3721, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3721 = metadata !{null, metadata !3473}
!3722 = metadata !{i32 589837, metadata !3714, metadata !"sa_sigaction", metadata !3711, i32 33, i64 64, i64 64, i64 0, i32 0, metadata !3723} ; [ DW_TAG_member ]
!3723 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3724} ; [ DW_TAG_pointer_type ]
!3724 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3725, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3725 = metadata !{null, metadata !3473, metadata !3726, metadata !3517}
!3726 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3727} ; [ DW_TAG_pointer_type ]
!3727 = metadata !{i32 589846, metadata !3728, metadata !"siginfo_t", metadata !3728, i32 154, i64 0, i64 0, i64 0, i32 0, metadata !3729} ; [ DW_TAG_typedef ]
!3728 = metadata !{i32 589865, metadata !"siginfo.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3729 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 63, i64 1024, i64 64, i64 0, i32 0, null, metadata !3730, i32 0, null} ; [ DW_TAG_structure_type ]
!3730 = metadata !{metadata !3731, metadata !3732, metadata !3733, metadata !3734}
!3731 = metadata !{i32 589837, metadata !3729, metadata !"si_signo", metadata !3728, i32 64, i64 32, i64 32, i64 0, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3732 = metadata !{i32 589837, metadata !3729, metadata !"si_errno", metadata !3728, i32 65, i64 32, i64 32, i64 32, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3733 = metadata !{i32 589837, metadata !3729, metadata !"si_code", metadata !3728, i32 67, i64 32, i64 32, i64 64, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3734 = metadata !{i32 589837, metadata !3729, metadata !"_sifields", metadata !3728, i32 127, i64 896, i64 64, i64 128, i32 0, metadata !3735} ; [ DW_TAG_member ]
!3735 = metadata !{i32 589847, metadata !3429, metadata !"", metadata !3728, i32 70, i64 896, i64 64, i64 0, i32 0, null, metadata !3736, i32 0, null} ; [ DW_TAG_union_type ]
!3736 = metadata !{metadata !3737, metadata !3739, metadata !3745, metadata !3756, metadata !3762, metadata !3771, metadata !3777, metadata !3782}
!3737 = metadata !{i32 589837, metadata !3735, metadata !"_pad", metadata !3728, i32 71, i64 896, i64 32, i64 0, i32 0, metadata !3738} ; [ DW_TAG_member ]
!3738 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 896, i64 32, i64 0, i32 0, metadata !3473, metadata !1873, i32 0, null} ; [ DW_TAG_array_type ]
!3739 = metadata !{i32 589837, metadata !3735, metadata !"_kill", metadata !3728, i32 78, i64 64, i64 32, i64 0, i32 0, metadata !3740} ; [ DW_TAG_member ]
!3740 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 75, i64 64, i64 32, i64 0, i32 0, null, metadata !3741, i32 0, null} ; [ DW_TAG_structure_type ]
!3741 = metadata !{metadata !3742, metadata !3744}
!3742 = metadata !{i32 589837, metadata !3740, metadata !"si_pid", metadata !3728, i32 76, i64 32, i64 32, i64 0, i32 0, metadata !3743} ; [ DW_TAG_member ]
!3743 = metadata !{i32 589846, metadata !3460, metadata !"__pid_t", metadata !3460, i32 134, i64 0, i64 0, i64 0, i32 0, metadata !3473} ; [ DW_TAG_typedef ]
!3744 = metadata !{i32 589837, metadata !3740, metadata !"si_uid", metadata !3728, i32 77, i64 32, i64 32, i64 32, i32 0, metadata !3469} ; [ DW_TAG_member ]
!3745 = metadata !{i32 589837, metadata !3735, metadata !"_timer", metadata !3728, i32 86, i64 128, i64 64, i64 0, i32 0, metadata !3746} ; [ DW_TAG_member ]
!3746 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 82, i64 128, i64 64, i64 0, i32 0, null, metadata !3747, i32 0, null} ; [ DW_TAG_structure_type ]
!3747 = metadata !{metadata !3748, metadata !3749, metadata !3750}
!3748 = metadata !{i32 589837, metadata !3746, metadata !"si_tid", metadata !3728, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3749 = metadata !{i32 589837, metadata !3746, metadata !"si_overrun", metadata !3728, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3750 = metadata !{i32 589837, metadata !3746, metadata !"si_sigval", metadata !3728, i32 85, i64 64, i64 64, i64 64, i32 0, metadata !3751} ; [ DW_TAG_member ]
!3751 = metadata !{i32 589846, metadata !3728, metadata !"sigval_t", metadata !3728, i32 58, i64 0, i64 0, i64 0, i32 0, metadata !3752} ; [ DW_TAG_typedef ]
!3752 = metadata !{i32 589847, metadata !3429, metadata !"sigval", metadata !3728, i32 33, i64 64, i64 64, i64 0, i32 0, null, metadata !3753, i32 0, null} ; [ DW_TAG_union_type ]
!3753 = metadata !{metadata !3754, metadata !3755}
!3754 = metadata !{i32 589837, metadata !3752, metadata !"sival_int", metadata !3728, i32 34, i64 32, i64 32, i64 0, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3755 = metadata !{i32 589837, metadata !3752, metadata !"sival_ptr", metadata !3728, i32 35, i64 64, i64 64, i64 0, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3756 = metadata !{i32 589837, metadata !3735, metadata !"_rt", metadata !3728, i32 94, i64 128, i64 64, i64 0, i32 0, metadata !3757} ; [ DW_TAG_member ]
!3757 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 90, i64 128, i64 64, i64 0, i32 0, null, metadata !3758, i32 0, null} ; [ DW_TAG_structure_type ]
!3758 = metadata !{metadata !3759, metadata !3760, metadata !3761}
!3759 = metadata !{i32 589837, metadata !3757, metadata !"si_pid", metadata !3728, i32 91, i64 32, i64 32, i64 0, i32 0, metadata !3743} ; [ DW_TAG_member ]
!3760 = metadata !{i32 589837, metadata !3757, metadata !"si_uid", metadata !3728, i32 92, i64 32, i64 32, i64 32, i32 0, metadata !3469} ; [ DW_TAG_member ]
!3761 = metadata !{i32 589837, metadata !3757, metadata !"si_sigval", metadata !3728, i32 93, i64 64, i64 64, i64 64, i32 0, metadata !3751} ; [ DW_TAG_member ]
!3762 = metadata !{i32 589837, metadata !3735, metadata !"_sigchld", metadata !3728, i32 104, i64 256, i64 64, i64 0, i32 0, metadata !3763} ; [ DW_TAG_member ]
!3763 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 98, i64 256, i64 64, i64 0, i32 0, null, metadata !3764, i32 0, null} ; [ DW_TAG_structure_type ]
!3764 = metadata !{metadata !3765, metadata !3766, metadata !3767, metadata !3768, metadata !3770}
!3765 = metadata !{i32 589837, metadata !3763, metadata !"si_pid", metadata !3728, i32 99, i64 32, i64 32, i64 0, i32 0, metadata !3743} ; [ DW_TAG_member ]
!3766 = metadata !{i32 589837, metadata !3763, metadata !"si_uid", metadata !3728, i32 100, i64 32, i64 32, i64 32, i32 0, metadata !3469} ; [ DW_TAG_member ]
!3767 = metadata !{i32 589837, metadata !3763, metadata !"si_status", metadata !3728, i32 101, i64 32, i64 32, i64 64, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3768 = metadata !{i32 589837, metadata !3763, metadata !"si_utime", metadata !3728, i32 102, i64 64, i64 64, i64 128, i32 0, metadata !3769} ; [ DW_TAG_member ]
!3769 = metadata !{i32 589846, metadata !3728, metadata !"__sigchld_clock_t", metadata !3728, i32 63, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!3770 = metadata !{i32 589837, metadata !3763, metadata !"si_stime", metadata !3728, i32 103, i64 64, i64 64, i64 192, i32 0, metadata !3769} ; [ DW_TAG_member ]
!3771 = metadata !{i32 589837, metadata !3735, metadata !"_sigfault", metadata !3728, i32 111, i64 128, i64 64, i64 0, i32 0, metadata !3772} ; [ DW_TAG_member ]
!3772 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 108, i64 128, i64 64, i64 0, i32 0, null, metadata !3773, i32 0, null} ; [ DW_TAG_structure_type ]
!3773 = metadata !{metadata !3774, metadata !3775}
!3774 = metadata !{i32 589837, metadata !3772, metadata !"si_addr", metadata !3728, i32 109, i64 64, i64 64, i64 0, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3775 = metadata !{i32 589837, metadata !3772, metadata !"si_addr_lsb", metadata !3728, i32 110, i64 16, i64 16, i64 64, i32 0, metadata !3776} ; [ DW_TAG_member ]
!3776 = metadata !{i32 589860, metadata !3429, metadata !"short int", metadata !3429, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3777 = metadata !{i32 589837, metadata !3735, metadata !"_sigpoll", metadata !3728, i32 118, i64 128, i64 64, i64 0, i32 0, metadata !3778} ; [ DW_TAG_member ]
!3778 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 115, i64 128, i64 64, i64 0, i32 0, null, metadata !3779, i32 0, null} ; [ DW_TAG_structure_type ]
!3779 = metadata !{metadata !3780, metadata !3781}
!3780 = metadata !{i32 589837, metadata !3778, metadata !"si_band", metadata !3728, i32 116, i64 64, i64 64, i64 0, i32 0, metadata !3477} ; [ DW_TAG_member ]
!3781 = metadata !{i32 589837, metadata !3778, metadata !"si_fd", metadata !3728, i32 117, i64 32, i64 32, i64 64, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3782 = metadata !{i32 589837, metadata !3735, metadata !"_sigsys", metadata !3728, i32 126, i64 128, i64 64, i64 0, i32 0, metadata !3783} ; [ DW_TAG_member ]
!3783 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3728, i32 122, i64 128, i64 64, i64 0, i32 0, null, metadata !3784, i32 0, null} ; [ DW_TAG_structure_type ]
!3784 = metadata !{metadata !3785, metadata !3786, metadata !3787}
!3785 = metadata !{i32 589837, metadata !3783, metadata !"_call_addr", metadata !3728, i32 123, i64 64, i64 64, i64 0, i32 0, metadata !3517} ; [ DW_TAG_member ]
!3786 = metadata !{i32 589837, metadata !3783, metadata !"_syscall", metadata !3728, i32 124, i64 32, i64 32, i64 64, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3787 = metadata !{i32 589837, metadata !3783, metadata !"_arch", metadata !3728, i32 125, i64 32, i64 32, i64 96, i32 0, metadata !3433} ; [ DW_TAG_member ]
!3788 = metadata !{i32 589837, metadata !3710, metadata !"sa_mask", metadata !3711, i32 43, i64 1024, i64 64, i64 64, i32 0, metadata !3789} ; [ DW_TAG_member ]
!3789 = metadata !{i32 589846, metadata !3718, metadata !"__sigset_t", metadata !3718, i32 40, i64 0, i64 0, i64 0, i32 0, metadata !3790} ; [ DW_TAG_typedef ]
!3790 = metadata !{i32 589843, metadata !3429, metadata !"", metadata !3791, i32 28, i64 1024, i64 64, i64 0, i32 0, null, metadata !3792, i32 0, null} ; [ DW_TAG_structure_type ]
!3791 = metadata !{i32 589865, metadata !"sigset.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!3792 = metadata !{metadata !3793}
!3793 = metadata !{i32 589837, metadata !3790, metadata !"__val", metadata !3791, i32 29, i64 1024, i64 64, i64 0, i32 0, metadata !3794} ; [ DW_TAG_member ]
!3794 = metadata !{i32 589825, metadata !3429, metadata !"", metadata !3429, i32 0, i64 1024, i64 64, i64 0, i32 0, metadata !3461, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!3795 = metadata !{i32 589837, metadata !3710, metadata !"sa_flags", metadata !3711, i32 46, i64 32, i64 32, i64 1088, i32 0, metadata !3473} ; [ DW_TAG_member ]
!3796 = metadata !{i32 589837, metadata !3710, metadata !"sa_restorer", metadata !3711, i32 49, i64 64, i64 64, i64 1152, i32 0, metadata !3797} ; [ DW_TAG_member ]
!3797 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3798} ; [ DW_TAG_pointer_type ]
!3798 = metadata !{i32 589845, metadata !3429, metadata !"", metadata !3429, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !182, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3799 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3710} ; [ DW_TAG_pointer_type ]
!3800 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"__stat64_to_stat", metadata !"__stat64_to_stat", metadata !"", metadata !3801, i32 42, metadata !3803, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3801 = metadata !{i32 589865, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3802} ; [ DW_TAG_file_type ]
!3802 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_32.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compile
!3803 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3804, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3804 = metadata !{null, metadata !3805, metadata !3847}
!3805 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3806} ; [ DW_TAG_pointer_type ]
!3806 = metadata !{i32 589843, metadata !3801, metadata !"stat64", metadata !3807, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3808, i32 0, null} ; [ DW_TAG_structure_type ]
!3807 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3802} ; [ DW_TAG_file_type ]
!3808 = metadata !{metadata !3809, metadata !3814, metadata !3816, metadata !3818, metadata !3821, metadata !3823, metadata !3825, metadata !3827, metadata !3828, metadata !3831, metadata !3833, metadata !3835, metadata !3843, metadata !3844, metadata !3
!3809 = metadata !{i32 589837, metadata !3806, metadata !"st_dev", metadata !3810, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3811} ; [ DW_TAG_member ]
!3810 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3802} ; [ DW_TAG_file_type ]
!3811 = metadata !{i32 589846, metadata !3812, metadata !"__dev_t", metadata !3812, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3812 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3802} ; [ DW_TAG_file_type ]
!3813 = metadata !{i32 589860, metadata !3801, metadata !"long unsigned int", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3814 = metadata !{i32 589837, metadata !3806, metadata !"st_ino", metadata !3810, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3815} ; [ DW_TAG_member ]
!3815 = metadata !{i32 589846, metadata !3812, metadata !"__ino64_t", metadata !3812, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3816 = metadata !{i32 589837, metadata !3806, metadata !"st_nlink", metadata !3810, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3817} ; [ DW_TAG_member ]
!3817 = metadata !{i32 589846, metadata !3812, metadata !"__nlink_t", metadata !3812, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3818 = metadata !{i32 589837, metadata !3806, metadata !"st_mode", metadata !3810, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3819} ; [ DW_TAG_member ]
!3819 = metadata !{i32 589846, metadata !3812, metadata !"__mode_t", metadata !3812, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3820} ; [ DW_TAG_typedef ]
!3820 = metadata !{i32 589860, metadata !3801, metadata !"unsigned int", metadata !3801, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3821 = metadata !{i32 589837, metadata !3806, metadata !"st_uid", metadata !3810, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3822} ; [ DW_TAG_member ]
!3822 = metadata !{i32 589846, metadata !3812, metadata !"__uid_t", metadata !3812, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3820} ; [ DW_TAG_typedef ]
!3823 = metadata !{i32 589837, metadata !3806, metadata !"st_gid", metadata !3810, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3824} ; [ DW_TAG_member ]
!3824 = metadata !{i32 589846, metadata !3812, metadata !"__gid_t", metadata !3812, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3820} ; [ DW_TAG_typedef ]
!3825 = metadata !{i32 589837, metadata !3806, metadata !"__pad0", metadata !3810, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3826} ; [ DW_TAG_member ]
!3826 = metadata !{i32 589860, metadata !3801, metadata !"int", metadata !3801, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3827 = metadata !{i32 589837, metadata !3806, metadata !"st_rdev", metadata !3810, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3811} ; [ DW_TAG_member ]
!3828 = metadata !{i32 589837, metadata !3806, metadata !"st_size", metadata !3810, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3829} ; [ DW_TAG_member ]
!3829 = metadata !{i32 589846, metadata !3812, metadata !"__off_t", metadata !3812, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3830 = metadata !{i32 589860, metadata !3801, metadata !"long int", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3831 = metadata !{i32 589837, metadata !3806, metadata !"st_blksize", metadata !3810, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3832} ; [ DW_TAG_member ]
!3832 = metadata !{i32 589846, metadata !3812, metadata !"__blksize_t", metadata !3812, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3833 = metadata !{i32 589837, metadata !3806, metadata !"st_blocks", metadata !3810, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3834} ; [ DW_TAG_member ]
!3834 = metadata !{i32 589846, metadata !3812, metadata !"__blkcnt64_t", metadata !3812, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3835 = metadata !{i32 589837, metadata !3806, metadata !"st_atim", metadata !3810, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3836 = metadata !{i32 589843, metadata !3801, metadata !"timespec", metadata !3837, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3838, i32 0, null} ; [ DW_TAG_structure_type ]
!3837 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3802} ; [ DW_TAG_file_type ]
!3838 = metadata !{metadata !3839, metadata !3841}
!3839 = metadata !{i32 589837, metadata !3836, metadata !"tv_sec", metadata !3837, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3840} ; [ DW_TAG_member ]
!3840 = metadata !{i32 589846, metadata !3812, metadata !"__time_t", metadata !3812, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3841 = metadata !{i32 589837, metadata !3836, metadata !"tv_nsec", metadata !3837, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3842} ; [ DW_TAG_member ]
!3842 = metadata !{i32 589846, metadata !3812, metadata !"__syscall_slong_t", metadata !3812, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3843 = metadata !{i32 589837, metadata !3806, metadata !"st_mtim", metadata !3810, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3844 = metadata !{i32 589837, metadata !3806, metadata !"st_ctim", metadata !3810, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3845 = metadata !{i32 589837, metadata !3806, metadata !"__glibc_reserved", metadata !3810, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !3846} ; [ DW_TAG_member ]
!3846 = metadata !{i32 589825, metadata !3801, metadata !"", metadata !3801, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3842, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!3847 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3848} ; [ DW_TAG_pointer_type ]
!3848 = metadata !{i32 589843, metadata !3801, metadata !"stat", metadata !3810, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !3849, i32 0, null} ; [ DW_TAG_structure_type ]
!3849 = metadata !{metadata !3850, metadata !3851, metadata !3853, metadata !3854, metadata !3855, metadata !3856, metadata !3857, metadata !3858, metadata !3859, metadata !3860, metadata !3861, metadata !3863, metadata !3864, metadata !3865, metadata !3
!3850 = metadata !{i32 589837, metadata !3848, metadata !"st_dev", metadata !3810, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !3811} ; [ DW_TAG_member ]
!3851 = metadata !{i32 589837, metadata !3848, metadata !"st_ino", metadata !3810, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !3852} ; [ DW_TAG_member ]
!3852 = metadata !{i32 589846, metadata !3812, metadata !"__ino_t", metadata !3812, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3853 = metadata !{i32 589837, metadata !3848, metadata !"st_nlink", metadata !3810, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !3817} ; [ DW_TAG_member ]
!3854 = metadata !{i32 589837, metadata !3848, metadata !"st_mode", metadata !3810, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !3819} ; [ DW_TAG_member ]
!3855 = metadata !{i32 589837, metadata !3848, metadata !"st_uid", metadata !3810, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !3822} ; [ DW_TAG_member ]
!3856 = metadata !{i32 589837, metadata !3848, metadata !"st_gid", metadata !3810, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !3824} ; [ DW_TAG_member ]
!3857 = metadata !{i32 589837, metadata !3848, metadata !"__pad0", metadata !3810, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !3826} ; [ DW_TAG_member ]
!3858 = metadata !{i32 589837, metadata !3848, metadata !"st_rdev", metadata !3810, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !3811} ; [ DW_TAG_member ]
!3859 = metadata !{i32 589837, metadata !3848, metadata !"st_size", metadata !3810, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !3829} ; [ DW_TAG_member ]
!3860 = metadata !{i32 589837, metadata !3848, metadata !"st_blksize", metadata !3810, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !3832} ; [ DW_TAG_member ]
!3861 = metadata !{i32 589837, metadata !3848, metadata !"st_blocks", metadata !3810, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !3862} ; [ DW_TAG_member ]
!3862 = metadata !{i32 589846, metadata !3812, metadata !"__blkcnt_t", metadata !3812, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3863 = metadata !{i32 589837, metadata !3848, metadata !"st_atim", metadata !3810, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3864 = metadata !{i32 589837, metadata !3848, metadata !"st_mtim", metadata !3810, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3865 = metadata !{i32 589837, metadata !3848, metadata !"st_ctim", metadata !3810, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !3836} ; [ DW_TAG_member ]
!3866 = metadata !{i32 589837, metadata !3848, metadata !"__glibc_reserved", metadata !3810, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !3846} ; [ DW_TAG_member ]
!3867 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"fstat64", metadata !"fstat64", metadata !"fstat64", metadata !3801, i32 207, metadata !3868, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat64} ; [
!3868 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3869, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3869 = metadata !{metadata !3826, metadata !3826, metadata !3805}
!3870 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"fstat", metadata !"fstat", metadata !"fstat", metadata !3801, i32 119, metadata !3871, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, %struct.stat*)* @fstat} ; [ DW_TAG_
!3871 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3872, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3872 = metadata !{metadata !3826, metadata !3826, metadata !3847}
!3873 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"__fxstat", metadata !"__fxstat", metadata !"__fxstat", metadata !3801, i32 112, metadata !3874, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, %struct.stat*)* @__fx
!3874 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3875, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3875 = metadata !{metadata !3826, metadata !3826, metadata !3826, metadata !3847}
!3876 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"lstat64", metadata !"lstat64", metadata !"lstat64", metadata !3801, i32 203, metadata !3877, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat64} ; [
!3877 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3878, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3878 = metadata !{metadata !3826, metadata !3879, metadata !3805}
!3879 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3880} ; [ DW_TAG_pointer_type ]
!3880 = metadata !{i32 589862, metadata !3801, metadata !"", metadata !3801, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3881} ; [ DW_TAG_const_type ]
!3881 = metadata !{i32 589860, metadata !3801, metadata !"char", metadata !3801, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3882 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"lstat", metadata !"lstat", metadata !"lstat", metadata !3801, i32 105, metadata !3883, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @lstat} ; [ DW_TAG_
!3883 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3884, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3884 = metadata !{metadata !3826, metadata !3879, metadata !3847}
!3885 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"__lxstat", metadata !"__lxstat", metadata !"__lxstat", metadata !3801, i32 98, metadata !3886, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__lxs
!3886 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3887, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3887 = metadata !{metadata !3826, metadata !3826, metadata !3879, metadata !3847}
!3888 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !3801, i32 199, metadata !3877, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat64} ; [ DW_
!3889 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"stat", metadata !"stat", metadata !"stat", metadata !3801, i32 91, metadata !3883, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %struct.stat*)* @stat} ; [ DW_TAG_subpr
!3890 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"__xstat", metadata !"__xstat", metadata !"__xstat", metadata !3801, i32 84, metadata !3886, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i8*, %struct.stat*)* @__xstat}
!3891 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"lseek64", metadata !"lseek64", metadata !"lseek64", metadata !3801, i32 195, metadata !3892, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek64} ; [ DW_T
!3892 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3893, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3893 = metadata !{metadata !3894, metadata !3826, metadata !3894, metadata !3826}
!3894 = metadata !{i32 589846, metadata !3895, metadata !"off64_t", metadata !3895, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3895 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3802} ; [ DW_TAG_file_type ]
!3896 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"lseek", metadata !"lseek", metadata !"lseek", metadata !3801, i32 80, metadata !3897, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, i64, i32)* @lseek} ; [ DW_TAG_subpro
!3897 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3898, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3898 = metadata !{metadata !3899, metadata !3826, metadata !3899, metadata !3826}
!3899 = metadata !{i32 589846, metadata !3895, metadata !"off_t", metadata !3895, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3900 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"open64", metadata !"open64", metadata !"open64", metadata !3801, i32 181, metadata !3901, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open64} ; [ DW_TAG_s
!3901 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3902, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3902 = metadata !{metadata !3826, metadata !3879, metadata !3826}
!3903 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"open", metadata !"open", metadata !"open", metadata !3801, i32 66, metadata !3901, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i32, ...)* @open} ; [ DW_TAG_subprogram
!3904 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"getdents", metadata !"getdents", metadata !"getdents", metadata !3801, i32 155, metadata !3905, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i64 (i32, %struct.dirent*, i64)* @ge
!3905 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3906, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3906 = metadata !{metadata !3907, metadata !3826, metadata !3908, metadata !3920}
!3907 = metadata !{i32 589846, metadata !3895, metadata !"ssize_t", metadata !3895, i32 115, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3908 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3909} ; [ DW_TAG_pointer_type ]
!3909 = metadata !{i32 589843, metadata !3801, metadata !"dirent", metadata !3910, i32 23, i64 2240, i64 64, i64 0, i32 0, null, metadata !3911, i32 0, null} ; [ DW_TAG_structure_type ]
!3910 = metadata !{i32 589865, metadata !"dirent.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3802} ; [ DW_TAG_file_type ]
!3911 = metadata !{metadata !3912, metadata !3913, metadata !3914, metadata !3916, metadata !3918}
!3912 = metadata !{i32 589837, metadata !3909, metadata !"d_ino", metadata !3910, i32 25, i64 64, i64 64, i64 0, i32 0, metadata !3852} ; [ DW_TAG_member ]
!3913 = metadata !{i32 589837, metadata !3909, metadata !"d_off", metadata !3910, i32 26, i64 64, i64 64, i64 64, i32 0, metadata !3829} ; [ DW_TAG_member ]
!3914 = metadata !{i32 589837, metadata !3909, metadata !"d_reclen", metadata !3910, i32 31, i64 16, i64 16, i64 128, i32 0, metadata !3915} ; [ DW_TAG_member ]
!3915 = metadata !{i32 589860, metadata !3801, metadata !"short unsigned int", metadata !3801, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3916 = metadata !{i32 589837, metadata !3909, metadata !"d_type", metadata !3910, i32 32, i64 8, i64 8, i64 144, i32 0, metadata !3917} ; [ DW_TAG_member ]
!3917 = metadata !{i32 589860, metadata !3801, metadata !"unsigned char", metadata !3801, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!3918 = metadata !{i32 589837, metadata !3909, metadata !"d_name", metadata !3910, i32 33, i64 2048, i64 8, i64 152, i32 0, metadata !3919} ; [ DW_TAG_member ]
!3919 = metadata !{i32 589825, metadata !3801, metadata !"", metadata !3801, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3881, metadata !846, i32 0, null} ; [ DW_TAG_array_type ]
!3920 = metadata !{i32 589846, metadata !3895, metadata !"size_t", metadata !3895, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3921 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"statfs", metadata !"statfs", metadata !"statfs", metadata !3801, i32 130, metadata !3922, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, %11*)* @statfs} ; [ DW_TAG_subpr
!3922 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3923, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3923 = metadata !{metadata !3826, metadata !3879, metadata !3924}
!3924 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3925} ; [ DW_TAG_pointer_type ]
!3925 = metadata !{i32 589843, metadata !3801, metadata !"statfs", metadata !3926, i32 25, i64 960, i64 64, i64 0, i32 0, null, metadata !3927, i32 0, null} ; [ DW_TAG_structure_type ]
!3926 = metadata !{i32 589865, metadata !"statfs.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3802} ; [ DW_TAG_file_type ]
!3927 = metadata !{metadata !3928, metadata !3930, metadata !3931, metadata !3933, metadata !3934, metadata !3935, metadata !3937, metadata !3938, metadata !3944, metadata !3945, metadata !3946, metadata !3947}
!3928 = metadata !{i32 589837, metadata !3925, metadata !"f_type", metadata !3926, i32 26, i64 64, i64 64, i64 0, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3929 = metadata !{i32 589846, metadata !3812, metadata !"__fsword_t", metadata !3812, i32 172, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!3930 = metadata !{i32 589837, metadata !3925, metadata !"f_bsize", metadata !3926, i32 27, i64 64, i64 64, i64 64, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3931 = metadata !{i32 589837, metadata !3925, metadata !"f_blocks", metadata !3926, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !3932} ; [ DW_TAG_member ]
!3932 = metadata !{i32 589846, metadata !3812, metadata !"__fsblkcnt_t", metadata !3812, i32 163, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3933 = metadata !{i32 589837, metadata !3925, metadata !"f_bfree", metadata !3926, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3932} ; [ DW_TAG_member ]
!3934 = metadata !{i32 589837, metadata !3925, metadata !"f_bavail", metadata !3926, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !3932} ; [ DW_TAG_member ]
!3935 = metadata !{i32 589837, metadata !3925, metadata !"f_files", metadata !3926, i32 32, i64 64, i64 64, i64 320, i32 0, metadata !3936} ; [ DW_TAG_member ]
!3936 = metadata !{i32 589846, metadata !3812, metadata !"__fsfilcnt_t", metadata !3812, i32 167, i64 0, i64 0, i64 0, i32 0, metadata !3813} ; [ DW_TAG_typedef ]
!3937 = metadata !{i32 589837, metadata !3925, metadata !"f_ffree", metadata !3926, i32 33, i64 64, i64 64, i64 384, i32 0, metadata !3936} ; [ DW_TAG_member ]
!3938 = metadata !{i32 589837, metadata !3925, metadata !"f_fsid", metadata !3926, i32 41, i64 64, i64 32, i64 448, i32 0, metadata !3939} ; [ DW_TAG_member ]
!3939 = metadata !{i32 589846, metadata !3812, metadata !"__fsid_t", metadata !3812, i32 135, i64 0, i64 0, i64 0, i32 0, metadata !3940} ; [ DW_TAG_typedef ]
!3940 = metadata !{i32 589843, metadata !3801, metadata !"", metadata !3812, i32 134, i64 64, i64 32, i64 0, i32 0, null, metadata !3941, i32 0, null} ; [ DW_TAG_structure_type ]
!3941 = metadata !{metadata !3942}
!3942 = metadata !{i32 589837, metadata !3940, metadata !"__val", metadata !3812, i32 134, i64 64, i64 32, i64 0, i32 0, metadata !3943} ; [ DW_TAG_member ]
!3943 = metadata !{i32 589825, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !3826, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!3944 = metadata !{i32 589837, metadata !3925, metadata !"f_namelen", metadata !3926, i32 42, i64 64, i64 64, i64 512, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3945 = metadata !{i32 589837, metadata !3925, metadata !"f_frsize", metadata !3926, i32 43, i64 64, i64 64, i64 576, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3946 = metadata !{i32 589837, metadata !3925, metadata !"f_flags", metadata !3926, i32 44, i64 64, i64 64, i64 640, i32 0, metadata !3929} ; [ DW_TAG_member ]
!3947 = metadata !{i32 589837, metadata !3925, metadata !"f_spare", metadata !3926, i32 45, i64 256, i64 64, i64 704, i32 0, metadata !3948} ; [ DW_TAG_member ]
!3948 = metadata !{i32 589825, metadata !3801, metadata !"", metadata !3801, i32 0, i64 256, i64 64, i64 0, i32 0, metadata !3929, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!3949 = metadata !{i32 589870, i32 0, metadata !3801, metadata !"ftruncate", metadata !"ftruncate", metadata !"ftruncate", metadata !3801, i32 126, metadata !3950, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i64)* @ftruncate} ; [ D
!3950 = metadata !{i32 589845, metadata !3801, metadata !"", metadata !3801, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3951, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3951 = metadata !{metadata !3826, metadata !3826, metadata !3899}
!3952 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !3955, i32 503, metadata !3956, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!3953 = metadata !{i32 589865, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3954} ; [ DW_TAG_file_type ]
!3954 = metadata !{i32 589841, i32 0, i32 1, metadata !"fd_init.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TAG_compi
!3955 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3954} ; [ DW_TAG_file_type ]
!3956 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !3957, i32 0, null} ; [ DW_TAG_subroutine_type ]
!3957 = metadata !{metadata !3958, metadata !3959, metadata !3962}
!3958 = metadata !{i32 589860, metadata !3953, metadata !"int", metadata !3953, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3959 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3960} ; [ DW_TAG_pointer_type ]
!3960 = metadata !{i32 589862, metadata !3953, metadata !"", metadata !3953, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3961} ; [ DW_TAG_const_type ]
!3961 = metadata !{i32 589860, metadata !3953, metadata !"char", metadata !3953, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!3962 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3963} ; [ DW_TAG_pointer_type ]
!3963 = metadata !{i32 589843, metadata !3953, metadata !"stat64", metadata !3964, i32 30, i64 1152, i64 64, i64 0, i32 0, null, metadata !3965, i32 0, null} ; [ DW_TAG_structure_type ]
!3964 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3954} ; [ DW_TAG_file_type ]
!3965 = metadata !{metadata !3966, metadata !3971, metadata !3973, metadata !3975, metadata !3978, metadata !3980, metadata !3982, metadata !3983, metadata !3984, metadata !3987, metadata !3989, metadata !3991, metadata !3999, metadata !4000, metadata !4
!3966 = metadata !{i32 589837, metadata !3963, metadata !"st_dev", metadata !3967, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !3968} ; [ DW_TAG_member ]
!3967 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3954} ; [ DW_TAG_file_type ]
!3968 = metadata !{i32 589846, metadata !3969, metadata !"__dev_t", metadata !3969, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !3970} ; [ DW_TAG_typedef ]
!3969 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3954} ; [ DW_TAG_file_type ]
!3970 = metadata !{i32 589860, metadata !3953, metadata !"long unsigned int", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3971 = metadata !{i32 589837, metadata !3963, metadata !"st_ino", metadata !3967, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3972} ; [ DW_TAG_member ]
!3972 = metadata !{i32 589846, metadata !3969, metadata !"__ino64_t", metadata !3969, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !3970} ; [ DW_TAG_typedef ]
!3973 = metadata !{i32 589837, metadata !3963, metadata !"st_nlink", metadata !3967, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !3974} ; [ DW_TAG_member ]
!3974 = metadata !{i32 589846, metadata !3969, metadata !"__nlink_t", metadata !3969, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !3970} ; [ DW_TAG_typedef ]
!3975 = metadata !{i32 589837, metadata !3963, metadata !"st_mode", metadata !3967, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !3976} ; [ DW_TAG_member ]
!3976 = metadata !{i32 589846, metadata !3969, metadata !"__mode_t", metadata !3969, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !3977} ; [ DW_TAG_typedef ]
!3977 = metadata !{i32 589860, metadata !3953, metadata !"unsigned int", metadata !3953, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!3978 = metadata !{i32 589837, metadata !3963, metadata !"st_uid", metadata !3967, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !3979} ; [ DW_TAG_member ]
!3979 = metadata !{i32 589846, metadata !3969, metadata !"__uid_t", metadata !3969, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !3977} ; [ DW_TAG_typedef ]
!3980 = metadata !{i32 589837, metadata !3963, metadata !"st_gid", metadata !3967, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !3981} ; [ DW_TAG_member ]
!3981 = metadata !{i32 589846, metadata !3969, metadata !"__gid_t", metadata !3969, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !3977} ; [ DW_TAG_typedef ]
!3982 = metadata !{i32 589837, metadata !3963, metadata !"__pad0", metadata !3967, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !3958} ; [ DW_TAG_member ]
!3983 = metadata !{i32 589837, metadata !3963, metadata !"st_rdev", metadata !3967, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !3968} ; [ DW_TAG_member ]
!3984 = metadata !{i32 589837, metadata !3963, metadata !"st_size", metadata !3967, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !3985} ; [ DW_TAG_member ]
!3985 = metadata !{i32 589846, metadata !3969, metadata !"__off_t", metadata !3969, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!3986 = metadata !{i32 589860, metadata !3953, metadata !"long int", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!3987 = metadata !{i32 589837, metadata !3963, metadata !"st_blksize", metadata !3967, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !3988} ; [ DW_TAG_member ]
!3988 = metadata !{i32 589846, metadata !3969, metadata !"__blksize_t", metadata !3969, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!3989 = metadata !{i32 589837, metadata !3963, metadata !"st_blocks", metadata !3967, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !3990} ; [ DW_TAG_member ]
!3990 = metadata !{i32 589846, metadata !3969, metadata !"__blkcnt64_t", metadata !3969, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!3991 = metadata !{i32 589837, metadata !3963, metadata !"st_atim", metadata !3967, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !3992} ; [ DW_TAG_member ]
!3992 = metadata !{i32 589843, metadata !3953, metadata !"timespec", metadata !3993, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !3994, i32 0, null} ; [ DW_TAG_structure_type ]
!3993 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !3954} ; [ DW_TAG_file_type ]
!3994 = metadata !{metadata !3995, metadata !3997}
!3995 = metadata !{i32 589837, metadata !3992, metadata !"tv_sec", metadata !3993, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !3996} ; [ DW_TAG_member ]
!3996 = metadata !{i32 589846, metadata !3969, metadata !"__time_t", metadata !3969, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!3997 = metadata !{i32 589837, metadata !3992, metadata !"tv_nsec", metadata !3993, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !3998} ; [ DW_TAG_member ]
!3998 = metadata !{i32 589846, metadata !3969, metadata !"__syscall_slong_t", metadata !3969, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!3999 = metadata !{i32 589837, metadata !3963, metadata !"st_mtim", metadata !3967, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !3992} ; [ DW_TAG_member ]
!4000 = metadata !{i32 589837, metadata !3963, metadata !"st_ctim", metadata !3967, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !3992} ; [ DW_TAG_member ]
!4001 = metadata !{i32 589837, metadata !3963, metadata !"__glibc_reserved", metadata !3967, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4002} ; [ DW_TAG_member ]
!4002 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !3998, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!4003 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"__sym_uint32", metadata !"__sym_uint32", metadata !"", metadata !3953, i32 227, metadata !4004, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4004 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4005, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4005 = metadata !{metadata !3977, metadata !3959}
!4006 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"native_read_file", metadata !"native_read_file", metadata !"native_read_file", metadata !3953, i32 349, metadata !4007, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i8*, i3
!4007 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4008, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4008 = metadata !{metadata !3958, metadata !3959, metadata !3958, metadata !4009}
!4009 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4010} ; [ DW_TAG_pointer_type ]
!4010 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3961} ; [ DW_TAG_pointer_type ]
!4011 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !"__fill_blocks", metadata !3953, i32 55, metadata !4012, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk
!4012 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4013, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4013 = metadata !{null, metadata !4014, metadata !4041, metadata !3977, metadata !3958}
!4014 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4015} ; [ DW_TAG_pointer_type ]
!4015 = metadata !{i32 589846, metadata !3964, metadata !"exe_disk_file_t", metadata !3964, i32 34, i64 0, i64 0, i64 0, i32 0, metadata !4016} ; [ DW_TAG_typedef ]
!4016 = metadata !{i32 589843, metadata !3953, metadata !"", metadata !3964, i32 26, i64 320, i64 64, i64 0, i32 0, null, metadata !4017, i32 0, null} ; [ DW_TAG_structure_type ]
!4017 = metadata !{metadata !4018, metadata !4019, metadata !4020, metadata !4021, metadata !4022}
!4018 = metadata !{i32 589837, metadata !4016, metadata !"size", metadata !3964, i32 27, i64 32, i64 32, i64 0, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4019 = metadata !{i32 589837, metadata !4016, metadata !"contents", metadata !3964, i32 28, i64 64, i64 64, i64 64, i32 0, metadata !4010} ; [ DW_TAG_member ]
!4020 = metadata !{i32 589837, metadata !4016, metadata !"path", metadata !3964, i32 29, i64 64, i64 64, i64 128, i32 0, metadata !4010} ; [ DW_TAG_member ]
!4021 = metadata !{i32 589837, metadata !4016, metadata !"stat", metadata !3964, i32 30, i64 64, i64 64, i64 192, i32 0, metadata !3962} ; [ DW_TAG_member ]
!4022 = metadata !{i32 589837, metadata !4016, metadata !"src", metadata !3964, i32 31, i64 64, i64 64, i64 256, i32 0, metadata !4023} ; [ DW_TAG_member ]
!4023 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4024} ; [ DW_TAG_pointer_type ]
!4024 = metadata !{i32 589846, metadata !3964, metadata !"exe_sockaddr_t", metadata !3964, i32 26, i64 0, i64 0, i64 0, i32 0, metadata !4025} ; [ DW_TAG_typedef ]
!4025 = metadata !{i32 589843, metadata !3953, metadata !"", metadata !3964, i32 21, i64 128, i64 64, i64 0, i32 0, null, metadata !4026, i32 0, null} ; [ DW_TAG_structure_type ]
!4026 = metadata !{metadata !4027, metadata !4038}
!4027 = metadata !{i32 589837, metadata !4025, metadata !"addr", metadata !3964, i32 22, i64 64, i64 64, i64 0, i32 0, metadata !4028} ; [ DW_TAG_member ]
!4028 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4029} ; [ DW_TAG_pointer_type ]
!4029 = metadata !{i32 589843, metadata !3953, metadata !"sockaddr_storage", metadata !4030, i32 163, i64 1024, i64 64, i64 0, i32 0, null, metadata !4031, i32 0, null} ; [ DW_TAG_structure_type ]
!4030 = metadata !{i32 589865, metadata !"socket.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3954} ; [ DW_TAG_file_type ]
!4031 = metadata !{metadata !4032, metadata !4035, metadata !4036}
!4032 = metadata !{i32 589837, metadata !4029, metadata !"ss_family", metadata !4030, i32 164, i64 16, i64 16, i64 0, i32 0, metadata !4033} ; [ DW_TAG_member ]
!4033 = metadata !{i32 589846, metadata !4030, metadata !"sa_family_t", metadata !4030, i32 150, i64 0, i64 0, i64 0, i32 0, metadata !4034} ; [ DW_TAG_typedef ]
!4034 = metadata !{i32 589860, metadata !3953, metadata !"short unsigned int", metadata !3953, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4035 = metadata !{i32 589837, metadata !4029, metadata !"__ss_align", metadata !4030, i32 165, i64 64, i64 64, i64 64, i32 0, metadata !3970} ; [ DW_TAG_member ]
!4036 = metadata !{i32 589837, metadata !4029, metadata !"__ss_padding", metadata !4030, i32 166, i64 896, i64 8, i64 128, i32 0, metadata !4037} ; [ DW_TAG_member ]
!4037 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 896, i64 8, i64 0, i32 0, metadata !3961, metadata !3159, i32 0, null} ; [ DW_TAG_array_type ]
!4038 = metadata !{i32 589837, metadata !4025, metadata !"addrlen", metadata !3964, i32 23, i64 32, i64 32, i64 64, i32 0, metadata !4039} ; [ DW_TAG_member ]
!4039 = metadata !{i32 589846, metadata !4040, metadata !"socklen_t", metadata !4040, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3977} ; [ DW_TAG_typedef ]
!4040 = metadata !{i32 589865, metadata !"socket_type.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3954} ; [ DW_TAG_file_type ]
!4041 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4042} ; [ DW_TAG_pointer_type ]
!4042 = metadata !{i32 589846, metadata !4043, metadata !"fill_info_t", metadata !4043, i32 152, i64 0, i64 0, i64 0, i32 0, metadata !4044} ; [ DW_TAG_typedef ]
!4043 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !3954} ; [ DW_TAG_file_type ]
!4044 = metadata !{i32 589843, metadata !3953, metadata !"", metadata !3964, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !4045, i32 0, null} ; [ DW_TAG_structure_type ]
!4045 = metadata !{metadata !4046, metadata !4047, metadata !4053, metadata !4054}
!4046 = metadata !{i32 589837, metadata !4044, metadata !"offset", metadata !3964, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4047 = metadata !{i32 589837, metadata !4044, metadata !"fill_method", metadata !3964, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4048} ; [ DW_TAG_member ]
!4048 = metadata !{i32 589828, metadata !3953, metadata !"", metadata !3964, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4049, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4049 = metadata !{metadata !4050, metadata !4051, metadata !4052}
!4050 = metadata !{i32 589864, metadata !"fill_set", i64 0} ; [ DW_TAG_enumerator ]
!4051 = metadata !{i32 589864, metadata !"fill_copy", i64 1} ; [ DW_TAG_enumerator ]
!4052 = metadata !{i32 589864, metadata !"fill_file", i64 2} ; [ DW_TAG_enumerator ]
!4053 = metadata !{i32 589837, metadata !4044, metadata !"length", metadata !3964, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4054 = metadata !{i32 589837, metadata !4044, metadata !"arg", metadata !3964, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !4055} ; [ DW_TAG_member ]
!4055 = metadata !{i32 589847, metadata !3953, metadata !"", metadata !3964, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !4056, i32 0, null} ; [ DW_TAG_union_type ]
!4056 = metadata !{metadata !4057, metadata !4058}
!4057 = metadata !{i32 589837, metadata !4055, metadata !"value", metadata !3964, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !3958} ; [ DW_TAG_member ]
!4058 = metadata !{i32 589837, metadata !4055, metadata !"string", metadata !3964, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !4010} ; [ DW_TAG_member ]
!4059 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"__create_new_dfile", metadata !"__create_new_dfile", metadata !"", metadata !3953, i32 104, metadata !4060, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (%struct.exe_disk_fi
!4060 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4061, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4061 = metadata !{null, metadata !4014, metadata !3977, metadata !4010, metadata !3959, metadata !4041, metadata !3977, metadata !3962, metadata !3958}
!4062 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !"klee_init_cp_file", metadata !3953, i32 370, metadata !4063, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, %struct.e
!4063 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4064, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4064 = metadata !{metadata !4014, metadata !3959, metadata !3958}
!4065 = metadata !{i32 589870, i32 0, metadata !3953, metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !"klee_init_fds", metadata !3953, i32 249, metadata !4066, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void (i32, i32, i32, 
!4066 = metadata !{i32 589845, metadata !3953, metadata !"", metadata !3953, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4067, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4067 = metadata !{null, metadata !3977, metadata !3977, metadata !3958, metadata !3958, metadata !3977, metadata !3977, metadata !3977, metadata !3977, metadata !3977, metadata !3958, metadata !4041, metadata !3977, metadata !4041, metadata !3977}
!4068 = metadata !{i32 589870, i32 0, metadata !4069, metadata !"my_strlen", metadata !"my_strlen", metadata !"", metadata !4069, i32 19, metadata !4071, i1 true, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4069 = metadata !{i32 589865, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4070} ; [ DW_TAG_file_type ]
!4070 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_mark_arg_symbolic.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 
!4071 = metadata !{i32 589845, metadata !4069, metadata !"", metadata !4069, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4072, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4072 = metadata !{metadata !4073, metadata !4074}
!4073 = metadata !{i32 589860, metadata !4069, metadata !"int", metadata !4069, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4074 = metadata !{i32 589839, metadata !4069, metadata !"", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4075} ; [ DW_TAG_pointer_type ]
!4075 = metadata !{i32 589860, metadata !4069, metadata !"char", metadata !4069, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4076 = metadata !{i32 589870, i32 0, metadata !4069, metadata !"stat64", metadata !"stat64", metadata !"stat64", metadata !4077, i32 503, metadata !4078, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, null} ; [ DW_TAG_subprogram ]
!4077 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !4070} ; [ DW_TAG_file_type ]
!4078 = metadata !{i32 589845, metadata !4069, metadata !"", metadata !4069, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4079, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4079 = metadata !{metadata !4073, metadata !4080, metadata !4082}
!4080 = metadata !{i32 589839, metadata !4069, metadata !"", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4081} ; [ DW_TAG_pointer_type ]
!4081 = metadata !{i32 589862, metadata !4069, metadata !"", metadata !4069, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4075} ; [ DW_TAG_const_type ]
!4082 = metadata !{i32 589839, metadata !4069, metadata !"", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4083} ; [ DW_TAG_pointer_type ]
!4083 = metadata !{i32 589843, metadata !4069, metadata !"stat64", metadata !4084, i32 120, i64 1152, i64 64, i64 0, i32 0, null, metadata !4085, i32 0, null} ; [ DW_TAG_structure_type ]
!4084 = metadata !{i32 589865, metadata !"stat.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4070} ; [ DW_TAG_file_type ]
!4085 = metadata !{metadata !4086, metadata !4090, metadata !4092, metadata !4094, metadata !4097, metadata !4099, metadata !4101, metadata !4102, metadata !4103, metadata !4106, metadata !4108, metadata !4110, metadata !4118, metadata !4119, metadata !4
!4086 = metadata !{i32 589837, metadata !4083, metadata !"st_dev", metadata !4084, i32 121, i64 64, i64 64, i64 0, i32 0, metadata !4087} ; [ DW_TAG_member ]
!4087 = metadata !{i32 589846, metadata !4088, metadata !"__dev_t", metadata !4088, i32 125, i64 0, i64 0, i64 0, i32 0, metadata !4089} ; [ DW_TAG_typedef ]
!4088 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !4070} ; [ DW_TAG_file_type ]
!4089 = metadata !{i32 589860, metadata !4069, metadata !"long unsigned int", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4090 = metadata !{i32 589837, metadata !4083, metadata !"st_ino", metadata !4084, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4091} ; [ DW_TAG_member ]
!4091 = metadata !{i32 589846, metadata !4088, metadata !"__ino64_t", metadata !4088, i32 129, i64 0, i64 0, i64 0, i32 0, metadata !4089} ; [ DW_TAG_typedef ]
!4092 = metadata !{i32 589837, metadata !4083, metadata !"st_nlink", metadata !4084, i32 124, i64 64, i64 64, i64 128, i32 0, metadata !4093} ; [ DW_TAG_member ]
!4093 = metadata !{i32 589846, metadata !4088, metadata !"__nlink_t", metadata !4088, i32 131, i64 0, i64 0, i64 0, i32 0, metadata !4089} ; [ DW_TAG_typedef ]
!4094 = metadata !{i32 589837, metadata !4083, metadata !"st_mode", metadata !4084, i32 125, i64 32, i64 32, i64 192, i32 0, metadata !4095} ; [ DW_TAG_member ]
!4095 = metadata !{i32 589846, metadata !4088, metadata !"__mode_t", metadata !4088, i32 130, i64 0, i64 0, i64 0, i32 0, metadata !4096} ; [ DW_TAG_typedef ]
!4096 = metadata !{i32 589860, metadata !4069, metadata !"unsigned int", metadata !4069, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4097 = metadata !{i32 589837, metadata !4083, metadata !"st_uid", metadata !4084, i32 132, i64 32, i64 32, i64 224, i32 0, metadata !4098} ; [ DW_TAG_member ]
!4098 = metadata !{i32 589846, metadata !4088, metadata !"__uid_t", metadata !4088, i32 126, i64 0, i64 0, i64 0, i32 0, metadata !4096} ; [ DW_TAG_typedef ]
!4099 = metadata !{i32 589837, metadata !4083, metadata !"st_gid", metadata !4084, i32 133, i64 32, i64 32, i64 256, i32 0, metadata !4100} ; [ DW_TAG_member ]
!4100 = metadata !{i32 589846, metadata !4088, metadata !"__gid_t", metadata !4088, i32 127, i64 0, i64 0, i64 0, i32 0, metadata !4096} ; [ DW_TAG_typedef ]
!4101 = metadata !{i32 589837, metadata !4083, metadata !"__pad0", metadata !4084, i32 135, i64 32, i64 32, i64 288, i32 0, metadata !4073} ; [ DW_TAG_member ]
!4102 = metadata !{i32 589837, metadata !4083, metadata !"st_rdev", metadata !4084, i32 136, i64 64, i64 64, i64 320, i32 0, metadata !4087} ; [ DW_TAG_member ]
!4103 = metadata !{i32 589837, metadata !4083, metadata !"st_size", metadata !4084, i32 137, i64 64, i64 64, i64 384, i32 0, metadata !4104} ; [ DW_TAG_member ]
!4104 = metadata !{i32 589846, metadata !4088, metadata !"__off_t", metadata !4088, i32 132, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!4105 = metadata !{i32 589860, metadata !4069, metadata !"long int", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4106 = metadata !{i32 589837, metadata !4083, metadata !"st_blksize", metadata !4084, i32 143, i64 64, i64 64, i64 448, i32 0, metadata !4107} ; [ DW_TAG_member ]
!4107 = metadata !{i32 589846, metadata !4088, metadata !"__blksize_t", metadata !4088, i32 158, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!4108 = metadata !{i32 589837, metadata !4083, metadata !"st_blocks", metadata !4084, i32 144, i64 64, i64 64, i64 512, i32 0, metadata !4109} ; [ DW_TAG_member ]
!4109 = metadata !{i32 589846, metadata !4088, metadata !"__blkcnt64_t", metadata !4088, i32 162, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!4110 = metadata !{i32 589837, metadata !4083, metadata !"st_atim", metadata !4084, i32 152, i64 128, i64 64, i64 576, i32 0, metadata !4111} ; [ DW_TAG_member ]
!4111 = metadata !{i32 589843, metadata !4069, metadata !"timespec", metadata !4112, i32 121, i64 128, i64 64, i64 0, i32 0, null, metadata !4113, i32 0, null} ; [ DW_TAG_structure_type ]
!4112 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include", metadata !4070} ; [ DW_TAG_file_type ]
!4113 = metadata !{metadata !4114, metadata !4116}
!4114 = metadata !{i32 589837, metadata !4111, metadata !"tv_sec", metadata !4112, i32 122, i64 64, i64 64, i64 0, i32 0, metadata !4115} ; [ DW_TAG_member ]
!4115 = metadata !{i32 589846, metadata !4088, metadata !"__time_t", metadata !4088, i32 140, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!4116 = metadata !{i32 589837, metadata !4111, metadata !"tv_nsec", metadata !4112, i32 123, i64 64, i64 64, i64 64, i32 0, metadata !4117} ; [ DW_TAG_member ]
!4117 = metadata !{i32 589846, metadata !4088, metadata !"__syscall_slong_t", metadata !4088, i32 177, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!4118 = metadata !{i32 589837, metadata !4083, metadata !"st_mtim", metadata !4084, i32 153, i64 128, i64 64, i64 704, i32 0, metadata !4111} ; [ DW_TAG_member ]
!4119 = metadata !{i32 589837, metadata !4083, metadata !"st_ctim", metadata !4084, i32 154, i64 128, i64 64, i64 832, i32 0, metadata !4111} ; [ DW_TAG_member ]
!4120 = metadata !{i32 589837, metadata !4083, metadata !"__glibc_reserved", metadata !4084, i32 164, i64 192, i64 64, i64 960, i32 0, metadata !4121} ; [ DW_TAG_member ]
!4121 = metadata !{i32 589825, metadata !4069, metadata !"", metadata !4069, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4117, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!4122 = metadata !{i32 589870, i32 0, metadata !4069, metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !"klee_mark_arg_symbolic", metadata !4069, i32 25, metadata !4123, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 t
!4123 = metadata !{i32 589845, metadata !4069, metadata !"", metadata !4069, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4124, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4124 = metadata !{null, metadata !4073, metadata !4125}
!4125 = metadata !{i32 589839, metadata !4069, metadata !"", metadata !4069, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4074} ; [ DW_TAG_pointer_type ]
!4126 = metadata !{i32 589870, i32 0, metadata !4127, metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !"klee_overshift_check", metadata !4127, i32 20, metadata !4129, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, v
!4127 = metadata !{i32 589865, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4128} ; [ DW_TAG_file_type ]
!4128 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_overshift_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0}
!4129 = metadata !{i32 589845, metadata !4127, metadata !"", metadata !4127, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4130, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4130 = metadata !{null, metadata !4131, metadata !4131}
!4131 = metadata !{i32 589860, metadata !4127, metadata !"long long unsigned int", metadata !4127, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4132 = metadata !{i32 589870, i32 0, metadata !4133, metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !"klee_div_zero_check", metadata !4133, i32 12, metadata !4135, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, void
!4133 = metadata !{i32 589865, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4134} ; [ DW_TAG_file_type ]
!4134 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_div_zero_check.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} 
!4135 = metadata !{i32 589845, metadata !4133, metadata !"", metadata !4133, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4136, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4136 = metadata !{null, metadata !4137}
!4137 = metadata !{i32 589860, metadata !4133, metadata !"long long int", metadata !4133, i32 0, i64 64, i64 64, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4138 = metadata !{i32 589870, i32 0, metadata !4139, metadata !"klee_range", metadata !"klee_range", metadata !"klee_range", metadata !4139, i32 13, metadata !4141, i1 false, i1 true, i32 0, i32 0, null, i32 256, i1 true, i32 (i32, i32, i8*)* @klee_rang
!4139 = metadata !{i32 589865, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !4140} ; [ DW_TAG_file_type ]
!4140 = metadata !{i32 589841, i32 0, i32 1, metadata !"klee_range.c", metadata !"/home/shadowvm/shadow/klee-change/runtime/Intrinsic/", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 true, metadata !"", i32 0} ; [ DW_TA
!4141 = metadata !{i32 589845, metadata !4139, metadata !"", metadata !4139, i32 0, i64 0, i64 0, i64 0, i32 0, null, metadata !4142, i32 0, null} ; [ DW_TAG_subroutine_type ]
!4142 = metadata !{metadata !4143, metadata !4143, metadata !4143, metadata !4144}
!4143 = metadata !{i32 589860, metadata !4139, metadata !"int", metadata !4139, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4144 = metadata !{i32 589839, metadata !4139, metadata !"", metadata !4139, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4145} ; [ DW_TAG_pointer_type ]
!4145 = metadata !{i32 589862, metadata !4139, metadata !"", metadata !4139, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !4146} ; [ DW_TAG_const_type ]
!4146 = metadata !{i32 589860, metadata !4139, metadata !"char", metadata !4139, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4147 = metadata !{i32 589876, i32 0, metadata !49, metadata !"__evoke_link_warning___fpending", metadata !"__evoke_link_warning___fpending", metadata !"", metadata !49, i32 24, metadata !4148, i1 true, i1 true, [167 x i8]* @__evoke_link_warning___fpendi
!4148 = metadata !{i32 589825, metadata !49, metadata !"", metadata !49, i32 0, i64 1336, i64 8, i64 0, i32 0, metadata !4149, metadata !4150, i32 0, null} ; [ DW_TAG_array_type ]
!4149 = metadata !{i32 589860, metadata !49, metadata !"char", metadata !49, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4150 = metadata !{metadata !4151}
!4151 = metadata !{i32 589857, i64 0, i64 166}    ; [ DW_TAG_subrange_type ]
!4152 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__libc_stack_end", metadata !"__libc_stack_end", metadata !"", metadata !166, i32 52, metadata !194, i1 false, i1 true, i8** @__libc_stack_end} ; [ DW_TAG_variable ]
!4153 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__uclibc_progname", metadata !"__uclibc_progname", metadata !"", metadata !166, i32 110, metadata !4154, i1 false, i1 true, i8** @__uclibc_progname} ; [ DW_TAG_variable ]
!4154 = metadata !{i32 589839, metadata !166, metadata !"", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4155} ; [ DW_TAG_pointer_type ]
!4155 = metadata !{i32 589862, metadata !166, metadata !"", metadata !166, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !192} ; [ DW_TAG_const_type ]
!4156 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__environ", metadata !"__environ", metadata !"", metadata !166, i32 125, metadata !190, i1 false, i1 true, i8*** @__environ} ; [ DW_TAG_variable ]
!4157 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__pagesize", metadata !"__pagesize", metadata !"", metadata !166, i32 129, metadata !4158, i1 false, i1 true, i64* @__pagesize} ; [ DW_TAG_variable ]
!4158 = metadata !{i32 589846, metadata !4159, metadata !"size_t", metadata !4159, i32 214, i64 0, i64 0, i64 0, i32 0, metadata !4160} ; [ DW_TAG_typedef ]
!4159 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !167} ; [ DW_TAG_file_type ]
!4160 = metadata !{i32 589860, metadata !166, metadata !"long unsigned int", metadata !166, i32 0, i64 64, i64 64, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4161 = metadata !{i32 589876, i32 0, metadata !180, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !166, i32 189, metadata !170, i1 true, i1 true, i32* @been_there_done_that.2848} ; [ DW_TAG_variable ]
!4162 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__app_fini", metadata !"__app_fini", metadata !"", metadata !166, i32 244, metadata !193, i1 false, i1 true, void ()** @__app_fini} ; [ DW_TAG_variable ]
!4163 = metadata !{i32 589876, i32 0, metadata !166, metadata !"__rtld_fini", metadata !"__rtld_fini", metadata !"", metadata !166, i32 247, metadata !193, i1 false, i1 true, void ()** @__rtld_fini} ; [ DW_TAG_variable ]
!4164 = metadata !{i32 589876, i32 0, metadata !205, metadata !"been_there_done_that", metadata !"been_there_done_that", metadata !"", metadata !205, i32 49, metadata !4165, i1 true, i1 true, i32* @been_there_done_that} ; [ DW_TAG_variable ]
!4165 = metadata !{i32 589860, metadata !205, metadata !"int", metadata !205, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4166 = metadata !{i32 589876, i32 0, metadata !270, metadata !"error_message_count", metadata !"error_message_count", metadata !"", metadata !270, i32 40, metadata !281, i1 false, i1 true, i32* @error_message_count} ; [ DW_TAG_variable ]
!4167 = metadata !{i32 589876, i32 0, metadata !278, metadata !"old_line_number", metadata !"old_line_number", metadata !"", metadata !270, i32 77, metadata !281, i1 true, i1 true, i32* @old_line_number.2047} ; [ DW_TAG_variable ]
!4168 = metadata !{i32 589876, i32 0, metadata !278, metadata !"old_file_name", metadata !"old_file_name", metadata !"", metadata !270, i32 76, metadata !275, i1 true, i1 true, i8** @old_file_name.2046} ; [ DW_TAG_variable ]
!4169 = metadata !{i32 589876, i32 0, metadata !270, metadata !"error_one_per_line", metadata !"error_one_per_line", metadata !"", metadata !270, i32 43, metadata !274, i1 false, i1 true, i32* @error_one_per_line} ; [ DW_TAG_variable ]
!4170 = metadata !{i32 589876, i32 0, metadata !285, metadata !"__exit_cleanup", metadata !"__exit_cleanup", metadata !"", metadata !285, i32 309, metadata !4171, i1 false, i1 true, void (i32)** @__exit_cleanup} ; [ DW_TAG_variable ]
!4171 = metadata !{i32 589839, metadata !283, metadata !"", metadata !283, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !286} ; [ DW_TAG_pointer_type ]
!4172 = metadata !{i32 589876, i32 0, metadata !759, metadata !"optind", metadata !"optind", metadata !"", metadata !759, i32 152, metadata !771, i1 false, i1 true, i32* @optind} ; [ DW_TAG_variable ]
!4173 = metadata !{i32 589876, i32 0, metadata !759, metadata !"opterr", metadata !"opterr", metadata !"", metadata !759, i32 157, metadata !771, i1 false, i1 true, i32* @opterr} ; [ DW_TAG_variable ]
!4174 = metadata !{i32 589876, i32 0, metadata !759, metadata !"optopt", metadata !"optopt", metadata !"", metadata !759, i32 163, metadata !771, i1 false, i1 true, i32* @optopt} ; [ DW_TAG_variable ]
!4175 = metadata !{i32 589876, i32 0, metadata !759, metadata !"getopt_data", metadata !"getopt_data", metadata !"", metadata !759, i32 167, metadata !767, i1 true, i1 true, %struct._getopt_data* @getopt_data} ; [ DW_TAG_variable ]
!4176 = metadata !{i32 589876, i32 0, metadata !759, metadata !"optarg", metadata !"optarg", metadata !"", metadata !759, i32 137, metadata !764, i1 false, i1 true, i8** @optarg} ; [ DW_TAG_variable ]
!4177 = metadata !{i32 589876, i32 0, metadata !817, metadata !"static_fd", metadata !"static_fd", metadata !"", metadata !817, i32 39, metadata !833, i1 true, i1 true, i32* @static_fd} ; [ DW_TAG_variable ]
!4178 = metadata !{i32 589876, i32 0, metadata !817, metadata !"default_file_name", metadata !"default_file_name", metadata !"", metadata !817, i32 41, metadata !4179, i1 true, i1 true, [14 x i8]* @default_file_name} ; [ DW_TAG_variable ]
!4179 = metadata !{i32 589825, metadata !817, metadata !"", metadata !817, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !836, metadata !3591, i32 0, null} ; [ DW_TAG_array_type ]
!4180 = metadata !{i32 589876, i32 0, metadata !817, metadata !"static_ut_name", metadata !"static_ut_name", metadata !"", metadata !817, i32 42, metadata !886, i1 true, i1 true, i8** @static_ut_name} ; [ DW_TAG_variable ]
!4181 = metadata !{i32 589876, i32 0, metadata !817, metadata !"static_utmp", metadata !"static_utmp", metadata !"", metadata !817, i32 40, metadata !825, i1 true, i1 true, %struct.utmp* @static_utmp} ; [ DW_TAG_variable ]
!4182 = metadata !{i32 589876, i32 0, metadata !928, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !931, i32 281, metadata !944, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2221} ; [ DW_TAG_variable ]
!4183 = metadata !{i32 589876, i32 0, metadata !1008, metadata !"nl_data", metadata !"nl_data", metadata !"", metadata !1008, i32 968, metadata !4184, i1 true, i1 true, [417 x i8]* @nl_data} ; [ DW_TAG_variable ]
!4184 = metadata !{i32 589825, metadata !1006, metadata !"", metadata !1006, i32 0, i64 3336, i64 8, i64 0, i32 0, metadata !4185, metadata !4186, i32 0, null} ; [ DW_TAG_array_type ]
!4185 = metadata !{i32 589860, metadata !1006, metadata !"unsigned char", metadata !1006, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4186 = metadata !{metadata !4187}
!4187 = metadata !{i32 589857, i64 0, i64 416}    ; [ DW_TAG_subrange_type ]
!4188 = metadata !{i32 589876, i32 0, metadata !1130, metadata !"C_string", metadata !"C_string", metadata !"", metadata !1130, i32 159, metadata !4189, i1 true, i1 true, [2 x i8]* @C_string} ; [ DW_TAG_variable ]
!4189 = metadata !{i32 589825, metadata !1128, metadata !"", metadata !1128, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !1134, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4190 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"_stdio_streams", metadata !"_stdio_streams", metadata !"", metadata !1149, i32 131, metadata !4191, i1 true, i1 true, [3 x %4]* @_stdio_streams} ; [ DW_TAG_variable ]
!4191 = metadata !{i32 589825, metadata !1149, metadata !"", metadata !1149, i32 0, i64 1920, i64 64, i64 0, i32 0, metadata !4192, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!4192 = metadata !{i32 589846, metadata !4193, metadata !"FILE", metadata !4193, i32 46, i64 0, i64 0, i64 0, i32 0, metadata !4194} ; [ DW_TAG_typedef ]
!4193 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1150} ; [ DW_TAG_file_type ]
!4194 = metadata !{i32 589843, metadata !1149, metadata !"__STDIO_FILE_STRUCT", metadata !4193, i32 46, i64 640, i64 64, i64 0, i32 0, null, metadata !4195, i32 0, null} ; [ DW_TAG_structure_type ]
!4195 = metadata !{metadata !4196, metadata !4199, metadata !4202, metadata !4204, metadata !4206, metadata !4207, metadata !4208, metadata !4209, metadata !4210, metadata !4211, metadata !4213, metadata !4217}
!4196 = metadata !{i32 589837, metadata !4194, metadata !"__modeflags", metadata !4197, i32 234, i64 16, i64 16, i64 0, i32 0, metadata !4198} ; [ DW_TAG_member ]
!4197 = metadata !{i32 589865, metadata !"uClibc_stdio.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !1150} ; [ DW_TAG_file_type ]
!4198 = metadata !{i32 589860, metadata !1149, metadata !"short unsigned int", metadata !1149, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4199 = metadata !{i32 589837, metadata !4194, metadata !"__ungot_width", metadata !4197, i32 237, i64 16, i64 8, i64 16, i32 0, metadata !4200} ; [ DW_TAG_member ]
!4200 = metadata !{i32 589825, metadata !1149, metadata !"", metadata !1149, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !4201, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4201 = metadata !{i32 589860, metadata !1149, metadata !"unsigned char", metadata !1149, i32 0, i64 8, i64 8, i64 0, i32 0, i32 8} ; [ DW_TAG_base_type ]
!4202 = metadata !{i32 589837, metadata !4194, metadata !"__filedes", metadata !4197, i32 244, i64 32, i64 32, i64 32, i32 0, metadata !4203} ; [ DW_TAG_member ]
!4203 = metadata !{i32 589860, metadata !1149, metadata !"int", metadata !1149, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4204 = metadata !{i32 589837, metadata !4194, metadata !"__bufstart", metadata !4197, i32 246, i64 64, i64 64, i64 64, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4205 = metadata !{i32 589839, metadata !1149, metadata !"", metadata !1149, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4201} ; [ DW_TAG_pointer_type ]
!4206 = metadata !{i32 589837, metadata !4194, metadata !"__bufend", metadata !4197, i32 247, i64 64, i64 64, i64 128, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4207 = metadata !{i32 589837, metadata !4194, metadata !"__bufpos", metadata !4197, i32 248, i64 64, i64 64, i64 192, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4208 = metadata !{i32 589837, metadata !4194, metadata !"__bufread", metadata !4197, i32 249, i64 64, i64 64, i64 256, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4209 = metadata !{i32 589837, metadata !4194, metadata !"__bufgetc_u", metadata !4197, i32 252, i64 64, i64 64, i64 320, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4210 = metadata !{i32 589837, metadata !4194, metadata !"__bufputc_u", metadata !4197, i32 255, i64 64, i64 64, i64 384, i32 0, metadata !4205} ; [ DW_TAG_member ]
!4211 = metadata !{i32 589837, metadata !4194, metadata !"__nextopen", metadata !4197, i32 261, i64 64, i64 64, i64 448, i32 0, metadata !4212} ; [ DW_TAG_member ]
!4212 = metadata !{i32 589839, metadata !1149, metadata !"", metadata !1149, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4194} ; [ DW_TAG_pointer_type ]
!4213 = metadata !{i32 589837, metadata !4194, metadata !"__ungot", metadata !4197, i32 268, i64 64, i64 32, i64 512, i32 0, metadata !4214} ; [ DW_TAG_member ]
!4214 = metadata !{i32 589825, metadata !1149, metadata !"", metadata !1149, i32 0, i64 64, i64 32, i64 0, i32 0, metadata !4215, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4215 = metadata !{i32 589846, metadata !4216, metadata !"wchar_t", metadata !4216, i32 326, i64 0, i64 0, i64 0, i32 0, metadata !4203} ; [ DW_TAG_typedef ]
!4216 = metadata !{i32 589865, metadata !"stddef.h", metadata !"/home/shadowvm/shadow/kleeDeploy/llvm-gcc4.2-2.9-x86_64-linux/bin/../lib/gcc/x86_64-unknown-linux-gnu/4.2.1/include", metadata !1150} ; [ DW_TAG_file_type ]
!4217 = metadata !{i32 589837, metadata !4194, metadata !"__state", metadata !4197, i32 271, i64 64, i64 32, i64 576, i32 0, metadata !4218} ; [ DW_TAG_member ]
!4218 = metadata !{i32 589846, metadata !4219, metadata !"__mbstate_t", metadata !4219, i32 85, i64 0, i64 0, i64 0, i32 0, metadata !4220} ; [ DW_TAG_typedef ]
!4219 = metadata !{i32 589865, metadata !"wchar.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include", metadata !1150} ; [ DW_TAG_file_type ]
!4220 = metadata !{i32 589843, metadata !1149, metadata !"", metadata !4219, i32 82, i64 64, i64 32, i64 0, i32 0, null, metadata !4221, i32 0, null} ; [ DW_TAG_structure_type ]
!4221 = metadata !{metadata !4222, metadata !4223}
!4222 = metadata !{i32 589837, metadata !4220, metadata !"__mask", metadata !4219, i32 83, i64 32, i64 32, i64 0, i32 0, metadata !4215} ; [ DW_TAG_member ]
!4223 = metadata !{i32 589837, metadata !4220, metadata !"__wc", metadata !4219, i32 84, i64 32, i64 32, i64 32, i32 0, metadata !4215} ; [ DW_TAG_member ]
!4224 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"stdin", metadata !"stdin", metadata !"", metadata !1149, i32 154, metadata !4225, i1 false, i1 true, %4** @stdin} ; [ DW_TAG_variable ]
!4225 = metadata !{i32 589839, metadata !1149, metadata !"", metadata !1149, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4192} ; [ DW_TAG_pointer_type ]
!4226 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"stdout", metadata !"stdout", metadata !"", metadata !1149, i32 155, metadata !4225, i1 false, i1 true, %4** @stdout} ; [ DW_TAG_variable ]
!4227 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"stderr", metadata !"stderr", metadata !"", metadata !1149, i32 156, metadata !4225, i1 false, i1 true, %4** @stderr} ; [ DW_TAG_variable ]
!4228 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"__stdin", metadata !"__stdin", metadata !"", metadata !1149, i32 159, metadata !4225, i1 false, i1 true, %4** @__stdin} ; [ DW_TAG_variable ]
!4229 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"__stdout", metadata !"__stdout", metadata !"", metadata !1149, i32 162, metadata !4225, i1 false, i1 true, %4** @__stdout} ; [ DW_TAG_variable ]
!4230 = metadata !{i32 589876, i32 0, metadata !1149, metadata !"_stdio_openlist", metadata !"_stdio_openlist", metadata !"", metadata !1149, i32 180, metadata !4212, i1 false, i1 true, %4** @_stdio_openlist} ; [ DW_TAG_variable ]
!4231 = metadata !{i32 589876, i32 0, metadata !4232, metadata !"errno", metadata !"errno", metadata !"", metadata !4232, i32 7, metadata !4234, i1 false, i1 true, i32* @errno} ; [ DW_TAG_variable ]
!4232 = metadata !{i32 589865, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !4233} ; [ DW_TAG_file_type ]
!4233 = metadata !{i32 589841, i32 0, i32 1, metadata !"errno.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/internals", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0} ;
!4234 = metadata !{i32 589860, metadata !4232, metadata !"int", metadata !4232, i32 0, i64 32, i64 32, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4235 = metadata !{i32 589876, i32 0, metadata !4232, metadata !"h_errno", metadata !"h_errno", metadata !"", metadata !4232, i32 8, metadata !4234, i1 false, i1 true, i32* @h_errno} ; [ DW_TAG_variable ]
!4236 = metadata !{i32 589876, i32 0, metadata !1770, metadata !"desc2flag", metadata !"desc2flag", metadata !"", metadata !1770, i32 569, metadata !4237, i1 true, i1 true, [13 x i16]* @desc2flag} ; [ DW_TAG_variable ]
!4237 = metadata !{i32 589825, metadata !1768, metadata !"", metadata !1768, i32 0, i64 208, i64 16, i64 0, i32 0, metadata !4238, metadata !4239, i32 0, null} ; [ DW_TAG_array_type ]
!4238 = metadata !{i32 589860, metadata !1768, metadata !"short unsigned int", metadata !1768, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4239 = metadata !{metadata !4240}
!4240 = metadata !{i32 589857, i64 0, i64 12}     ; [ DW_TAG_subrange_type ]
!4241 = metadata !{i32 589876, i32 0, metadata !1779, metadata !"mbstate", metadata !"mbstate", metadata !"", metadata !1782, i32 699, metadata !1796, i1 true, i1 true, %struct.__mbstate_t* @mbstate.2222} ; [ DW_TAG_variable ]
!4242 = metadata !{i32 589876, i32 0, metadata !1934, metadata !"buf", metadata !"buf", metadata !"", metadata !1935, i32 17, metadata !4243, i1 true, i1 true, [50 x i8]* @buf.1212} ; [ DW_TAG_variable ]
!4243 = metadata !{i32 589825, metadata !1935, metadata !"", metadata !1935, i32 0, i64 400, i64 8, i64 0, i32 0, metadata !1940, metadata !4244, i32 0, null} ; [ DW_TAG_array_type ]
!4244 = metadata !{metadata !4245}
!4245 = metadata !{i32 589857, i64 0, i64 49}     ; [ DW_TAG_subrange_type ]
!4246 = metadata !{i32 589876, i32 0, metadata !1989, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !1945, i32 1441, metadata !4247, i1 true, i1 true, [7 x i8]* @spec_base.3674} ; [ DW_TAG_variable ]
!4247 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !1999, metadata !4248, i32 0, null} ; [ DW_TAG_array_type ]
!4248 = metadata !{metadata !4249}
!4249 = metadata !{i32 589857, i64 0, i64 6}      ; [ DW_TAG_subrange_type ]
!4250 = metadata !{i32 589876, i32 0, metadata !1989, metadata !"prefix", metadata !"prefix", metadata !"", metadata !1945, i32 1443, metadata !4251, i1 true, i1 true, [12 x i8]* @prefix.3675} ; [ DW_TAG_variable ]
!4251 = metadata !{i32 589825, metadata !1943, metadata !"", metadata !1943, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !1999, metadata !4252, i32 0, null} ; [ DW_TAG_array_type ]
!4252 = metadata !{metadata !4253}
!4253 = metadata !{i32 589857, i64 0, i64 11}     ; [ DW_TAG_subrange_type ]
!4254 = metadata !{i32 589876, i32 0, metadata !4255, metadata !"__C_ctype_b_data", metadata !"__C_ctype_b_data", metadata !"", metadata !4255, i32 471, metadata !4257, i1 false, i1 true, [384 x i16]* @__C_ctype_b_data} ; [ DW_TAG_variable ]
!4255 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4256} ; [ DW_TAG_file_type ]
!4256 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32 0}
!4257 = metadata !{i32 589825, metadata !4258, metadata !"", metadata !4258, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4259, metadata !4262, i32 0, null} ; [ DW_TAG_array_type ]
!4258 = metadata !{i32 589865, metadata !"__C_ctype_b.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4256} ; [ DW_TAG_file_type ]
!4259 = metadata !{i32 589846, metadata !4260, metadata !"__ctype_mask_t", metadata !4260, i32 38, i64 0, i64 0, i64 0, i32 0, metadata !4261} ; [ DW_TAG_typedef ]
!4260 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4256} ; [ DW_TAG_file_type ]
!4261 = metadata !{i32 589860, metadata !4258, metadata !"short unsigned int", metadata !4258, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4262 = metadata !{metadata !4263}
!4263 = metadata !{i32 589857, i64 0, i64 383}    ; [ DW_TAG_subrange_type ]
!4264 = metadata !{i32 589876, i32 0, metadata !4255, metadata !"__C_ctype_b", metadata !"__C_ctype_b", metadata !"", metadata !4255, i32 862, metadata !4265, i1 false, i1 true, i16** @__C_ctype_b} ; [ DW_TAG_variable ]
!4265 = metadata !{i32 589839, metadata !4258, metadata !"", metadata !4258, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4259} ; [ DW_TAG_pointer_type ]
!4266 = metadata !{i32 589876, i32 0, metadata !4255, metadata !"__ctype_b", metadata !"__ctype_b", metadata !"", metadata !4255, i32 867, metadata !4265, i1 false, i1 true, i16** @__ctype_b} ; [ DW_TAG_variable ]
!4267 = metadata !{i32 589876, i32 0, metadata !2176, metadata !"decpt_str", metadata !"decpt_str", metadata !"", metadata !2176, i32 711, metadata !4268, i1 true, i1 true, [2 x i8]* @decpt_str} ; [ DW_TAG_variable ]
!4268 = metadata !{i32 589825, metadata !2174, metadata !"", metadata !2174, i32 0, i64 16, i64 8, i64 0, i32 0, metadata !2223, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4269 = metadata !{i32 589876, i32 0, metadata !2249, metadata !"spec_base", metadata !"spec_base", metadata !"", metadata !2249, i32 1787, metadata !4270, i1 true, i1 true, [15 x i8]* @spec_base} ; [ DW_TAG_variable ]
!4270 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 120, i64 8, i64 0, i32 0, metadata !2266, metadata !4271, i32 0, null} ; [ DW_TAG_array_type ]
!4271 = metadata !{metadata !4272}
!4272 = metadata !{i32 589857, i64 0, i64 14}     ; [ DW_TAG_subrange_type ]
!4273 = metadata !{i32 589876, i32 0, metadata !2249, metadata !"nil_string", metadata !"nil_string", metadata !"", metadata !2249, i32 1788, metadata !4274, i1 true, i1 true, [6 x i8]* @nil_string} ; [ DW_TAG_variable ]
!4274 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 48, i64 8, i64 0, i32 0, metadata !2266, metadata !4275, i32 0, null} ; [ DW_TAG_array_type ]
!4275 = metadata !{metadata !4276}
!4276 = metadata !{i32 589857, i64 0, i64 5}      ; [ DW_TAG_subrange_type ]
!4277 = metadata !{i32 589876, i32 0, metadata !2246, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !2249, i32 2154, metadata !4278, i1 true, i1 true, [11 x i8]* @nan_inf_str.3836} ; [ DW_TAG_variable ]
!4278 = metadata !{i32 589825, metadata !2247, metadata !"", metadata !2247, i32 0, i64 88, i64 8, i64 0, i32 0, metadata !2266, metadata !4279, i32 0, null} ; [ DW_TAG_array_type ]
!4279 = metadata !{metadata !4280}
!4280 = metadata !{i32 589857, i64 0, i64 10}     ; [ DW_TAG_subrange_type ]
!4281 = metadata !{i32 589876, i32 0, metadata !2335, metadata !"__exit_count", metadata !"__exit_count", metadata !"", metadata !2335, i32 226, metadata !2354, i1 false, i1 true, i32* @__exit_count} ; [ DW_TAG_variable ]
!4282 = metadata !{i32 589876, i32 0, metadata !2335, metadata !"__exit_function_table", metadata !"__exit_function_table", metadata !"", metadata !2335, i32 228, metadata !2338, i1 false, i1 true, %struct.exit_function** @__exit_function_table} ; [ DW_T
!4283 = metadata !{i32 589876, i32 0, metadata !2335, metadata !"__exit_slots", metadata !"__exit_slots", metadata !"", metadata !2335, i32 229, metadata !2354, i1 false, i1 true, i32* @__exit_slots} ; [ DW_TAG_variable ]
!4284 = metadata !{i32 589876, i32 0, metadata !2373, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !2373, i32 822, metadata !4285, i1 true, i1 true, [4 x i8]* @spec_flags} ; [ DW_TAG_variable ]
!4285 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 32, i64 8, i64 0, i32 0, metadata !2390, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!4286 = metadata !{i32 589876, i32 0, metadata !2373, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !2373, i32 824, metadata !4287, i1 true, i1 true, [23 x i8]* @spec_chars} ; [ DW_TAG_variable ]
!4287 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 184, i64 8, i64 0, i32 0, metadata !2390, metadata !4288, i32 0, null} ; [ DW_TAG_array_type ]
!4288 = metadata !{metadata !4289}
!4289 = metadata !{i32 589857, i64 0, i64 22}     ; [ DW_TAG_subrange_type ]
!4290 = metadata !{i32 589876, i32 0, metadata !2373, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !2373, i32 825, metadata !4291, i1 true, i1 true, [18 x i8]* @qual_chars} ; [ DW_TAG_variable ]
!4291 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 144, i64 8, i64 0, i32 0, metadata !2390, metadata !4292, i32 0, null} ; [ DW_TAG_array_type ]
!4292 = metadata !{metadata !4293}
!4293 = metadata !{i32 589857, i64 0, i64 17}     ; [ DW_TAG_subrange_type ]
!4294 = metadata !{i32 589876, i32 0, metadata !2373, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !2373, i32 826, metadata !4295, i1 true, i1 true, [8 x i8]* @spec_ranges} ; [ DW_TAG_variable ]
!4295 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !2390, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!4296 = metadata !{i32 589876, i32 0, metadata !2373, metadata !"spec_allowed", metadata !"spec_allowed", metadata !"", metadata !2373, i32 827, metadata !4297, i1 true, i1 true, [8 x i16]* @spec_allowed} ; [ DW_TAG_variable ]
!4297 = metadata !{i32 589825, metadata !2371, metadata !"", metadata !2371, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4298, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!4298 = metadata !{i32 589860, metadata !2371, metadata !"short unsigned int", metadata !2371, i32 0, i64 16, i64 16, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4299 = metadata !{i32 589876, i32 0, metadata !2479, metadata !"unknown", metadata !"unknown", metadata !"", metadata !2480, i32 170, metadata !4300, i1 true, i1 true, [14 x i8]* @unknown.1225} ; [ DW_TAG_variable ]
!4300 = metadata !{i32 589825, metadata !2480, metadata !"", metadata !2480, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !2486, metadata !3591, i32 0, null} ; [ DW_TAG_array_type ]
!4301 = metadata !{i32 589876, i32 0, metadata !2491, metadata !"fmt", metadata !"fmt", metadata !"", metadata !2491, i32 102, metadata !4302, i1 true, i1 true, [20 x i8]* @fmt} ; [ DW_TAG_variable ]
!4302 = metadata !{i32 589825, metadata !2491, metadata !"", metadata !2491, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !4303, metadata !869, i32 0, null} ; [ DW_TAG_array_type ]
!4303 = metadata !{i32 589860, metadata !2491, metadata !"char", metadata !2491, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4304 = metadata !{i32 589876, i32 0, metadata !2491, metadata !"exp10_table", metadata !"exp10_table", metadata !"", metadata !2491, i32 116, metadata !4305, i1 true, i1 true, [13 x x86_fp80]* @exp10_table} ; [ DW_TAG_variable ]
!4305 = metadata !{i32 589825, metadata !2491, metadata !"", metadata !2491, i32 0, i64 1664, i64 128, i64 0, i32 0, metadata !2531, metadata !4239, i32 0, null} ; [ DW_TAG_array_type ]
!4306 = metadata !{i32 589876, i32 0, metadata !2640, metadata !"type_codes", metadata !"type_codes", metadata !"", metadata !2640, i32 759, metadata !4307, i1 true, i1 true, [12 x i16]* @type_codes} ; [ DW_TAG_variable ]
!4307 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 192, i64 16, i64 0, i32 0, metadata !4308, metadata !4252, i32 0, null} ; [ DW_TAG_array_type ]
!4308 = metadata !{i32 589860, metadata !2638, metadata !"short int", metadata !2638, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4309 = metadata !{i32 589876, i32 0, metadata !2640, metadata !"type_sizes", metadata !"type_sizes", metadata !"", metadata !2640, i32 777, metadata !4310, i1 true, i1 true, [12 x i8]* @type_sizes} ; [ DW_TAG_variable ]
!4310 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 96, i64 8, i64 0, i32 0, metadata !2675, metadata !4252, i32 0, null} ; [ DW_TAG_array_type ]
!4311 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"spec_flags", metadata !"spec_flags", metadata !"", metadata !2640, i32 861, metadata !4312, i1 true, i1 true, [8 x i8]* @spec_flags.3665} ; [ DW_TAG_variable ]
!4312 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !2657, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!4313 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"qual_chars", metadata !"qual_chars", metadata !"", metadata !2640, i32 866, metadata !4314, i1 true, i1 true, [20 x i8]* @qual_chars.3670} ; [ DW_TAG_variable ]
!4314 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 160, i64 8, i64 0, i32 0, metadata !2657, metadata !869, i32 0, null} ; [ DW_TAG_array_type ]
!4315 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"spec_chars", metadata !"spec_chars", metadata !"", metadata !2640, i32 862, metadata !4316, i1 true, i1 true, [21 x i8]* @spec_chars.3666} ; [ DW_TAG_variable ]
!4316 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !2657, metadata !4317, i32 0, null} ; [ DW_TAG_array_type ]
!4317 = metadata !{metadata !4318}
!4318 = metadata !{i32 589857, i64 0, i64 20}     ; [ DW_TAG_subrange_type ]
!4319 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"spec_ranges", metadata !"spec_ranges", metadata !"", metadata !2640, i32 863, metadata !4320, i1 true, i1 true, [9 x i8]* @spec_ranges.3667} ; [ DW_TAG_variable ]
!4320 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 72, i64 8, i64 0, i32 0, metadata !2657, metadata !2017, i32 0, null} ; [ DW_TAG_array_type ]
!4321 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"spec_or_mask", metadata !"spec_or_mask", metadata !"", metadata !2640, i32 864, metadata !4322, i1 true, i1 true, [8 x i16]* @spec_or_mask.3668} ; [ DW_TAG_variable ]
!4322 = metadata !{i32 589825, metadata !2638, metadata !"", metadata !2638, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4308, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!4323 = metadata !{i32 589876, i32 0, metadata !2647, metadata !"spec_and_mask", metadata !"spec_and_mask", metadata !"", metadata !2640, i32 865, metadata !4322, i1 true, i1 true, [8 x i16]* @spec_and_mask.3669} ; [ DW_TAG_variable ]
!4324 = metadata !{i32 589876, i32 0, metadata !2928, metadata !"nan_inf_str", metadata !"nan_inf_str", metadata !"", metadata !2931, i32 348, metadata !4325, i1 true, i1 true, [21 x i8]* @nan_inf_str.2180} ; [ DW_TAG_variable ]
!4325 = metadata !{i32 589825, metadata !2929, metadata !"", metadata !2929, i32 0, i64 168, i64 8, i64 0, i32 0, metadata !2939, metadata !4317, i32 0, null} ; [ DW_TAG_array_type ]
!4326 = metadata !{i32 589876, i32 0, metadata !4327, metadata !"_string_syserrmsgs", metadata !"_string_syserrmsgs", metadata !"", metadata !4327, i32 13, metadata !4329, i1 false, i1 true, [2906 x i8]* @_string_syserrmsgs} ; [ DW_TAG_variable ]
!4327 = metadata !{i32 589865, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !4328} ; [ DW_TAG_file_type ]
!4328 = metadata !{i32 589841, i32 0, i32 1, metadata !"_string_syserrmsgs.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/string", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", i32
!4329 = metadata !{i32 589825, metadata !4327, metadata !"", metadata !4327, i32 0, i64 23248, i64 8, i64 0, i32 0, metadata !4330, metadata !4331, i32 0, null} ; [ DW_TAG_array_type ]
!4330 = metadata !{i32 589860, metadata !4327, metadata !"char", metadata !4327, i32 0, i64 8, i64 8, i64 0, i32 0, i32 6} ; [ DW_TAG_base_type ]
!4331 = metadata !{metadata !4332}
!4332 = metadata !{i32 589857, i64 0, i64 2905}   ; [ DW_TAG_subrange_type ]
!4333 = metadata !{i32 589876, i32 0, metadata !4334, metadata !"__C_ctype_tolower_data", metadata !"__C_ctype_tolower_data", metadata !"", metadata !4334, i32 878, metadata !4336, i1 false, i1 true, [384 x i16]* @__C_ctype_tolower_data} ; [ DW_TAG_varia
!4334 = metadata !{i32 589865, metadata !"ctype.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4335} ; [ DW_TAG_file_type ]
!4335 = metadata !{i32 589841, i32 0, i32 1, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !"4.2.1 (Based on Apple Inc. build 5658) (LLVM build 2.9)", i1 true, i1 false, metadata !"", 
!4336 = metadata !{i32 589825, metadata !4337, metadata !"", metadata !4337, i32 0, i64 6144, i64 16, i64 0, i32 0, metadata !4338, metadata !4262, i32 0, null} ; [ DW_TAG_array_type ]
!4337 = metadata !{i32 589865, metadata !"__C_ctype_tolower.c", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/libc/misc/ctype", metadata !4335} ; [ DW_TAG_file_type ]
!4338 = metadata !{i32 589846, metadata !4339, metadata !"__ctype_touplow_t", metadata !4339, i32 42, i64 0, i64 0, i64 0, i32 0, metadata !4340} ; [ DW_TAG_typedef ]
!4339 = metadata !{i32 589865, metadata !"uClibc_touplow.h", metadata !"/home/shadowvm/shadow/kleeDeploy/klee-uclibc/./include/bits", metadata !4335} ; [ DW_TAG_file_type ]
!4340 = metadata !{i32 589860, metadata !4337, metadata !"short int", metadata !4337, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4341 = metadata !{i32 589876, i32 0, metadata !4334, metadata !"__C_ctype_tolower", metadata !"__C_ctype_tolower", metadata !"", metadata !4334, i32 981, metadata !4342, i1 false, i1 true, i16** @__C_ctype_tolower} ; [ DW_TAG_variable ]
!4342 = metadata !{i32 589839, metadata !4337, metadata !"", metadata !4337, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4338} ; [ DW_TAG_pointer_type ]
!4343 = metadata !{i32 589876, i32 0, metadata !4334, metadata !"__ctype_tolower", metadata !"__ctype_tolower", metadata !"", metadata !4334, i32 988, metadata !4342, i1 false, i1 true, i16** @__ctype_tolower} ; [ DW_TAG_variable ]
!4344 = metadata !{i32 589876, i32 0, metadata !3263, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 413, metadata !3085, i1 true, i1 true, i32* @n_calls.5871} ; [ DW_TAG_variable ]
!4345 = metadata !{i32 589876, i32 0, metadata !3379, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 1985, metadata !3085, i1 true, i1 true, i32* @n_calls.7064} ; [ DW_TAG_variable ]
!4346 = metadata !{i32 589876, i32 0, metadata !3382, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 1334, metadata !3085, i1 true, i1 true, i32* @n_calls.6554} ; [ DW_TAG_variable ]
!4347 = metadata !{i32 589876, i32 0, metadata !3388, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 541, metadata !3085, i1 true, i1 true, i32* @n_calls.5974} ; [ DW_TAG_variable ]
!4348 = metadata !{i32 589876, i32 0, metadata !3391, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 456, metadata !3085, i1 true, i1 true, i32* @n_calls.5898} ; [ DW_TAG_variable ]
!4349 = metadata !{i32 589876, i32 0, metadata !3409, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 951, metadata !3085, i1 true, i1 true, i32* @n_calls.6299} ; [ DW_TAG_variable ]
!4350 = metadata !{i32 589876, i32 0, metadata !3412, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 929, metadata !3085, i1 true, i1 true, i32* @n_calls.6276} ; [ DW_TAG_variable ]
!4351 = metadata !{i32 589876, i32 0, metadata !3419, metadata !"n_calls", metadata !"n_calls", metadata !"", metadata !3075, i32 606, metadata !3085, i1 true, i1 true, i32* @n_calls.6018} ; [ DW_TAG_variable ]
!4352 = metadata !{i32 589876, i32 0, metadata !3075, metadata !"UseConcretePath", metadata !"UseConcretePath", metadata !"", metadata !3075, i32 42, metadata !3313, i1 false, i1 true, i8* @UseConcretePath} ; [ DW_TAG_variable ]
!4353 = metadata !{i32 589876, i32 0, metadata !3440, metadata !"dummy_dfile", metadata !"dummy_dfile", metadata !"", metadata !3440, i32 85, metadata !3444, i1 true, i1 true, %struct.exe_disk_file_t* @dummy_dfile} ; [ DW_TAG_variable ]
!4354 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__one_line_streams", metadata !"__one_line_streams", metadata !"", metadata !3953, i32 49, metadata !3958, i1 true, i1 true, null} ; [ DW_TAG_variable ]
!4355 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__stream_fill_info", metadata !"__stream_fill_info", metadata !"", metadata !3953, i32 50, metadata !4041, i1 true, i1 true, %struct.fill_info_t** @__stream_fill_info} ; [ DW_TAG_variable ]
!4356 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__n_stream_fill_info", metadata !"__n_stream_fill_info", metadata !"", metadata !3953, i32 51, metadata !3977, i1 true, i1 true, i32* @__n_stream_fill_info} ; [ DW_TAG_variable ]
!4357 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__dgram_fill_info", metadata !"__dgram_fill_info", metadata !"", metadata !3953, i32 52, metadata !4041, i1 true, i1 true, %struct.fill_info_t** @__dgram_fill_info} ; [ DW_TAG_variable ]
!4358 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__n_dgram_fill_info", metadata !"__n_dgram_fill_info", metadata !"", metadata !3953, i32 53, metadata !3977, i1 true, i1 true, i32* @__n_dgram_fill_info} ; [ DW_TAG_variable ]
!4359 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__exe_env", metadata !"__exe_env", metadata !"", metadata !3953, i32 39, metadata !4360, i1 false, i1 true, %struct.exe_sym_env_t* @__exe_env} ; [ DW_TAG_variable ]
!4360 = metadata !{i32 589846, metadata !3964, metadata !"exe_sym_env_t", metadata !3964, i32 101, i64 0, i64 0, i64 0, i32 0, metadata !4361} ; [ DW_TAG_typedef ]
!4361 = metadata !{i32 589843, metadata !3953, metadata !"", metadata !3964, i32 88, i64 14464, i64 64, i64 0, i32 0, null, metadata !4362, i32 0, null} ; [ DW_TAG_structure_type ]
!4362 = metadata !{metadata !4363, metadata !4377, metadata !4379, metadata !4380}
!4363 = metadata !{i32 589837, metadata !4361, metadata !"fds", metadata !3964, i32 89, i64 14336, i64 64, i64 0, i32 0, metadata !4364} ; [ DW_TAG_member ]
!4364 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 14336, i64 64, i64 0, i32 0, metadata !4365, metadata !837, i32 0, null} ; [ DW_TAG_array_type ]
!4365 = metadata !{i32 589846, metadata !3964, metadata !"exe_file_t", metadata !3964, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !4366} ; [ DW_TAG_typedef ]
!4366 = metadata !{i32 589843, metadata !3953, metadata !"exe_file_t", metadata !3964, i32 44, i64 448, i64 64, i64 0, i32 0, null, metadata !4367, i32 0, null} ; [ DW_TAG_structure_type ]
!4367 = metadata !{metadata !4368, metadata !4369, metadata !4370, metadata !4373, metadata !4374, metadata !4375, metadata !4376}
!4368 = metadata !{i32 589837, metadata !4366, metadata !"fd", metadata !3964, i32 45, i64 32, i64 32, i64 0, i32 0, metadata !3958} ; [ DW_TAG_member ]
!4369 = metadata !{i32 589837, metadata !4366, metadata !"flags", metadata !3964, i32 46, i64 32, i64 32, i64 32, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4370 = metadata !{i32 589837, metadata !4366, metadata !"off", metadata !3964, i32 49, i64 64, i64 64, i64 64, i32 0, metadata !4371} ; [ DW_TAG_member ]
!4371 = metadata !{i32 589846, metadata !4372, metadata !"off64_t", metadata !4372, i32 98, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!4372 = metadata !{i32 589865, metadata !"types.h", metadata !"/usr/include/x86_64-linux-gnu/sys", metadata !3954} ; [ DW_TAG_file_type ]
!4373 = metadata !{i32 589837, metadata !4366, metadata !"dfile", metadata !3964, i32 50, i64 64, i64 64, i64 128, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4374 = metadata !{i32 589837, metadata !4366, metadata !"local", metadata !3964, i32 51, i64 128, i64 64, i64 192, i32 0, metadata !4024} ; [ DW_TAG_member ]
!4375 = metadata !{i32 589837, metadata !4366, metadata !"foreign", metadata !3964, i32 52, i64 64, i64 64, i64 320, i32 0, metadata !4023} ; [ DW_TAG_member ]
!4376 = metadata !{i32 589837, metadata !4366, metadata !"domain", metadata !3964, i32 56, i64 32, i64 32, i64 384, i32 0, metadata !3958} ; [ DW_TAG_member ]
!4377 = metadata !{i32 589837, metadata !4361, metadata !"umask", metadata !3964, i32 90, i64 32, i64 32, i64 14336, i32 0, metadata !4378} ; [ DW_TAG_member ]
!4378 = metadata !{i32 589846, metadata !4372, metadata !"mode_t", metadata !4372, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3977} ; [ DW_TAG_typedef ]
!4379 = metadata !{i32 589837, metadata !4361, metadata !"version", metadata !3964, i32 91, i64 32, i64 32, i64 14368, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4380 = metadata !{i32 589837, metadata !4361, metadata !"save_all_writes", metadata !3964, i32 95, i64 32, i64 32, i64 14400, i32 0, metadata !3958} ; [ DW_TAG_member ]
!4381 = metadata !{i32 589876, i32 0, metadata !3953, metadata !"__exe_fs", metadata !"__exe_fs", metadata !"", metadata !3953, i32 26, metadata !4382, i1 false, i1 true, %struct.exe_file_system_t* @__exe_fs} ; [ DW_TAG_variable ]
!4382 = metadata !{i32 589846, metadata !3964, metadata !"exe_file_system_t", metadata !3964, i32 88, i64 0, i64 0, i64 0, i32 0, metadata !4383} ; [ DW_TAG_typedef ]
!4383 = metadata !{i32 589843, metadata !3953, metadata !"", metadata !3964, i32 59, i64 1216, i64 64, i64 0, i32 0, null, metadata !4384, i32 0, null} ; [ DW_TAG_structure_type ]
!4384 = metadata !{metadata !4385, metadata !4386, metadata !4387, metadata !4388, metadata !4389, metadata !4390, metadata !4391, metadata !4392, metadata !4393, metadata !4394, metadata !4395, metadata !4396, metadata !4397, metadata !4398, metadata !4
!4385 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_files", metadata !3964, i32 60, i64 32, i64 32, i64 0, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4386 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_files_used", metadata !3964, i32 61, i64 32, i64 32, i64 32, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4387 = metadata !{i32 589837, metadata !4383, metadata !"n_cp_files", metadata !3964, i32 62, i64 32, i64 32, i64 64, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4388 = metadata !{i32 589837, metadata !4383, metadata !"sym_stdin", metadata !3964, i32 63, i64 64, i64 64, i64 128, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4389 = metadata !{i32 589837, metadata !4383, metadata !"sym_stdout", metadata !3964, i32 63, i64 64, i64 64, i64 192, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4390 = metadata !{i32 589837, metadata !4383, metadata !"stdout_writes", metadata !3964, i32 64, i64 32, i64 32, i64 256, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4391 = metadata !{i32 589837, metadata !4383, metadata !"sym_files", metadata !3964, i32 65, i64 64, i64 64, i64 320, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4392 = metadata !{i32 589837, metadata !4383, metadata !"cp_files", metadata !3964, i32 66, i64 64, i64 64, i64 384, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4393 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_streams", metadata !3964, i32 68, i64 32, i64 32, i64 448, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4394 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_streams_used", metadata !3964, i32 69, i64 32, i64 32, i64 480, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4395 = metadata !{i32 589837, metadata !4383, metadata !"sym_streams", metadata !3964, i32 70, i64 64, i64 64, i64 512, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4396 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_dgrams", metadata !3964, i32 72, i64 32, i64 32, i64 576, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4397 = metadata !{i32 589837, metadata !4383, metadata !"n_sym_dgrams_used", metadata !3964, i32 73, i64 32, i64 32, i64 608, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4398 = metadata !{i32 589837, metadata !4383, metadata !"sym_dgrams", metadata !3964, i32 74, i64 64, i64 64, i64 640, i32 0, metadata !4014} ; [ DW_TAG_member ]
!4399 = metadata !{i32 589837, metadata !4383, metadata !"max_failures", metadata !3964, i32 76, i64 32, i64 32, i64 704, i32 0, metadata !3977} ; [ DW_TAG_member ]
!4400 = metadata !{i32 589837, metadata !4383, metadata !"read_fail", metadata !3964, i32 79, i64 64, i64 64, i64 768, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4401 = metadata !{i32 589839, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !3958} ; [ DW_TAG_pointer_type ]
!4402 = metadata !{i32 589837, metadata !4383, metadata !"write_fail", metadata !3964, i32 79, i64 64, i64 64, i64 832, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4403 = metadata !{i32 589837, metadata !4383, metadata !"close_fail", metadata !3964, i32 79, i64 64, i64 64, i64 896, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4404 = metadata !{i32 589837, metadata !4383, metadata !"ftruncate_fail", metadata !3964, i32 79, i64 64, i64 64, i64 960, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4405 = metadata !{i32 589837, metadata !4383, metadata !"getcwd_fail", metadata !3964, i32 79, i64 64, i64 64, i64 1024, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4406 = metadata !{i32 589837, metadata !4383, metadata !"chmod_fail", metadata !3964, i32 80, i64 64, i64 64, i64 1088, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4407 = metadata !{i32 589837, metadata !4383, metadata !"fchmod_fail", metadata !3964, i32 80, i64 64, i64 64, i64 1152, i32 0, metadata !4401} ; [ DW_TAG_member ]
!4408 = metadata !{i32 589828, metadata !2979, metadata !"", metadata !4409, i32 103, i64 32, i64 32, i64 0, i32 0, null, metadata !4049, i32 0, null} ; [ DW_TAG_enumeration_type ]
!4409 = metadata !{i32 589865, metadata !"fd.h", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !2980} ; [ DW_TAG_file_type ]
!4410 = metadata !{i32 590081, metadata !2978, metadata !"c", metadata !2979, i32 27, metadata !2984, i32 0} ; [ DW_TAG_arg_variable ]
!4411 = metadata !{i32 590081, metadata !2986, metadata !"c", metadata !2979, i32 31, metadata !2984, i32 0} ; [ DW_TAG_arg_variable ]
!4412 = metadata !{i32 590081, metadata !2987, metadata !"c", metadata !2979, i32 124, metadata !2984, i32 0} ; [ DW_TAG_arg_variable ]
!4413 = metadata !{i32 590081, metadata !2988, metadata !"a", metadata !2979, i32 129, metadata !2991, i32 0} ; [ DW_TAG_arg_variable ]
!4414 = metadata !{i32 590081, metadata !2988, metadata !"b", metadata !2979, i32 129, metadata !2991, i32 0} ; [ DW_TAG_arg_variable ]
!4415 = metadata !{i32 590081, metadata !2992, metadata !"numChars", metadata !2979, i32 139, metadata !2983, i32 0} ; [ DW_TAG_arg_variable ]
!4416 = metadata !{i32 590081, metadata !2992, metadata !"name", metadata !2979, i32 139, metadata !2995, i32 0} ; [ DW_TAG_arg_variable ]
!4417 = metadata !{i32 590080, metadata !4418, metadata !"i", metadata !2979, i32 140, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4418 = metadata !{i32 589835, metadata !2992, i32 139, i32 0, metadata !2979, i32 4} ; [ DW_TAG_lexical_block ]
!4419 = metadata !{i32 590080, metadata !4418, metadata !"s", metadata !2979, i32 141, metadata !2995, i32 0} ; [ DW_TAG_auto_variable ]
!4420 = metadata !{i32 590081, metadata !2996, metadata !"msg", metadata !2979, i32 23, metadata !2991, i32 0} ; [ DW_TAG_arg_variable ]
!4421 = metadata !{i32 590081, metadata !2999, metadata !"s", metadata !2979, i32 40, metadata !2995, i32 0} ; [ DW_TAG_arg_variable ]
!4422 = metadata !{i32 590081, metadata !2999, metadata !"error_msg", metadata !2979, i32 40, metadata !2991, i32 0} ; [ DW_TAG_arg_variable ]
!4423 = metadata !{i32 590080, metadata !4424, metadata !"res", metadata !2979, i32 41, metadata !3002, i32 0} ; [ DW_TAG_auto_variable ]
!4424 = metadata !{i32 589835, metadata !2999, i32 40, i32 0, metadata !2979, i32 6} ; [ DW_TAG_lexical_block ]
!4425 = metadata !{i32 590080, metadata !4424, metadata !"c", metadata !2979, i32 42, metadata !2985, i32 0} ; [ DW_TAG_auto_variable ]
!4426 = metadata !{i32 590080, metadata !4424, metadata !"d", metadata !2979, i32 43, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4427 = metadata !{i32 590080, metadata !4424, metadata !"base", metadata !2979, i32 44, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4428 = metadata !{i32 590081, metadata !3003, metadata !"s", metadata !2979, i32 64, metadata !2995, i32 0} ; [ DW_TAG_arg_variable ]
!4429 = metadata !{i32 590080, metadata !4430, metadata !"d0", metadata !2979, i32 66, metadata !2995, i32 0} ; [ DW_TAG_auto_variable ]
!4430 = metadata !{i32 589835, metadata !3003, i32 65, i32 0, metadata !2979, i32 7} ; [ DW_TAG_lexical_block ]
!4431 = metadata !{i32 590080, metadata !4430, metadata !"d", metadata !2979, i32 66, metadata !2995, i32 0} ; [ DW_TAG_auto_variable ]
!4432 = metadata !{i32 590080, metadata !4433, metadata !"n", metadata !2979, i32 74, metadata !4434, i32 0} ; [ DW_TAG_auto_variable ]
!4433 = metadata !{i32 589835, metadata !4430, i32 75, i32 0, metadata !2979, i32 8} ; [ DW_TAG_lexical_block ]
!4434 = metadata !{i32 589825, metadata !2979, metadata !"", metadata !2979, i32 0, i64 96, i64 32, i64 0, i32 0, metadata !2983, metadata !3141, i32 0, null} ; [ DW_TAG_array_type ]
!4435 = metadata !{i32 590081, metadata !3009, metadata !"argc", metadata !2979, i32 152, metadata !3012, i32 0} ; [ DW_TAG_arg_variable ]
!4436 = metadata !{i32 590081, metadata !3009, metadata !"argv", metadata !2979, i32 152, metadata !3013, i32 0} ; [ DW_TAG_arg_variable ]
!4437 = metadata !{i32 590081, metadata !3009, metadata !"arg", metadata !2979, i32 152, metadata !2995, i32 0} ; [ DW_TAG_arg_variable ]
!4438 = metadata !{i32 590081, metadata !3009, metadata !"argcMax", metadata !2979, i32 152, metadata !2983, i32 0} ; [ DW_TAG_arg_variable ]
!4439 = metadata !{i32 590081, metadata !3014, metadata !"argcPtr", metadata !2979, i32 161, metadata !3012, i32 0} ; [ DW_TAG_arg_variable ]
!4440 = metadata !{i32 590081, metadata !3014, metadata !"argvPtr", metadata !2979, i32 161, metadata !3017, i32 0} ; [ DW_TAG_arg_variable ]
!4441 = metadata !{i32 590080, metadata !4442, metadata !"argc", metadata !2979, i32 162, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4442 = metadata !{i32 589835, metadata !3014, i32 161, i32 0, metadata !2979, i32 10} ; [ DW_TAG_lexical_block ]
!4443 = metadata !{i32 590080, metadata !4442, metadata !"argv", metadata !2979, i32 163, metadata !3013, i32 0} ; [ DW_TAG_auto_variable ]
!4444 = metadata !{i32 590080, metadata !4442, metadata !"new_argc", metadata !2979, i32 165, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4445 = metadata !{i32 590080, metadata !4442, metadata !"n_args", metadata !2979, i32 165, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4446 = metadata !{i32 590080, metadata !4442, metadata !"new_argv", metadata !2979, i32 166, metadata !4447, i32 0} ; [ DW_TAG_auto_variable ]
!4447 = metadata !{i32 589825, metadata !2979, metadata !"", metadata !2979, i32 0, i64 65536, i64 64, i64 0, i32 0, metadata !2995, metadata !4448, i32 0, null} ; [ DW_TAG_array_type ]
!4448 = metadata !{metadata !4449}
!4449 = metadata !{i32 589857, i64 0, i64 1023}   ; [ DW_TAG_subrange_type ]
!4450 = metadata !{i32 590080, metadata !4442, metadata !"max_len", metadata !2979, i32 167, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4451 = metadata !{i32 589860, metadata !2979, metadata !"unsigned int", metadata !2979, i32 0, i64 32, i64 32, i64 0, i32 0, i32 7} ; [ DW_TAG_base_type ]
!4452 = metadata !{i32 590080, metadata !4442, metadata !"min_argvs", metadata !2979, i32 167, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4453 = metadata !{i32 590080, metadata !4442, metadata !"max_argvs", metadata !2979, i32 167, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4454 = metadata !{i32 590080, metadata !4442, metadata !"sym_files", metadata !2979, i32 168, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4455 = metadata !{i32 590080, metadata !4442, metadata !"sym_file_len", metadata !2979, i32 168, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4456 = metadata !{i32 590080, metadata !4442, metadata !"sym_streams", metadata !2979, i32 169, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4457 = metadata !{i32 590080, metadata !4442, metadata !"sym_stream_len", metadata !2979, i32 169, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4458 = metadata !{i32 590080, metadata !4442, metadata !"sym_dgrams", metadata !2979, i32 170, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4459 = metadata !{i32 590080, metadata !4442, metadata !"sym_dgram_len", metadata !2979, i32 170, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4460 = metadata !{i32 590080, metadata !4442, metadata !"sym_stdout_flag", metadata !2979, i32 172, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4461 = metadata !{i32 590080, metadata !4442, metadata !"save_all_writes_flag", metadata !2979, i32 173, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4462 = metadata !{i32 590080, metadata !4442, metadata !"one_line_streams_flag", metadata !2979, i32 174, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4463 = metadata !{i32 590080, metadata !4442, metadata !"stream_fill_info", metadata !2979, i32 175, metadata !4464, i32 0} ; [ DW_TAG_auto_variable ]
!4464 = metadata !{i32 589825, metadata !2979, metadata !"", metadata !2979, i32 0, i64 19200, i64 64, i64 0, i32 0, metadata !4465, metadata !4477, i32 0, null} ; [ DW_TAG_array_type ]
!4465 = metadata !{i32 589846, metadata !4466, metadata !"fill_info_t", metadata !4466, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !4467} ; [ DW_TAG_typedef ]
!4466 = metadata !{i32 589865, metadata !"waitflags.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !2980} ; [ DW_TAG_file_type ]
!4467 = metadata !{i32 589843, metadata !2979, metadata !"", metadata !4409, i32 101, i64 192, i64 64, i64 0, i32 0, null, metadata !4468, i32 0, null} ; [ DW_TAG_structure_type ]
!4468 = metadata !{metadata !4469, metadata !4470, metadata !4471, metadata !4472}
!4469 = metadata !{i32 589837, metadata !4467, metadata !"offset", metadata !4409, i32 102, i64 32, i64 32, i64 0, i32 0, metadata !4451} ; [ DW_TAG_member ]
!4470 = metadata !{i32 589837, metadata !4467, metadata !"fill_method", metadata !4409, i32 103, i64 32, i64 32, i64 32, i32 0, metadata !4408} ; [ DW_TAG_member ]
!4471 = metadata !{i32 589837, metadata !4467, metadata !"length", metadata !4409, i32 104, i64 32, i64 32, i64 64, i32 0, metadata !4451} ; [ DW_TAG_member ]
!4472 = metadata !{i32 589837, metadata !4467, metadata !"arg", metadata !4409, i32 108, i64 64, i64 64, i64 128, i32 0, metadata !4473} ; [ DW_TAG_member ]
!4473 = metadata !{i32 589847, metadata !2979, metadata !"", metadata !4409, i32 105, i64 64, i64 64, i64 0, i32 0, null, metadata !4474, i32 0, null} ; [ DW_TAG_union_type ]
!4474 = metadata !{metadata !4475, metadata !4476}
!4475 = metadata !{i32 589837, metadata !4473, metadata !"value", metadata !4409, i32 106, i64 32, i64 32, i64 0, i32 0, metadata !2983} ; [ DW_TAG_member ]
!4476 = metadata !{i32 589837, metadata !4473, metadata !"string", metadata !4409, i32 107, i64 64, i64 64, i64 0, i32 0, metadata !2995} ; [ DW_TAG_member ]
!4477 = metadata !{metadata !4478}
!4478 = metadata !{i32 589857, i64 0, i64 99}     ; [ DW_TAG_subrange_type ]
!4479 = metadata !{i32 590080, metadata !4442, metadata !"n_stream_fill_info", metadata !2979, i32 176, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4480 = metadata !{i32 590080, metadata !4442, metadata !"dgram_fill_info", metadata !2979, i32 177, metadata !4464, i32 0} ; [ DW_TAG_auto_variable ]
!4481 = metadata !{i32 590080, metadata !4442, metadata !"n_dgram_fill_info", metadata !2979, i32 178, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4482 = metadata !{i32 590080, metadata !4442, metadata !"fd_fail", metadata !2979, i32 180, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4483 = metadata !{i32 590080, metadata !4442, metadata !"final_argv", metadata !2979, i32 181, metadata !3013, i32 0} ; [ DW_TAG_auto_variable ]
!4484 = metadata !{i32 590080, metadata !4442, metadata !"sym_arg_name", metadata !2979, i32 182, metadata !4485, i32 0} ; [ DW_TAG_auto_variable ]
!4485 = metadata !{i32 589825, metadata !2979, metadata !"", metadata !2979, i32 0, i64 40, i64 8, i64 0, i32 0, metadata !2985, metadata !4486, i32 0, null} ; [ DW_TAG_array_type ]
!4486 = metadata !{metadata !4487}
!4487 = metadata !{i32 589857, i64 0, i64 4}      ; [ DW_TAG_subrange_type ]
!4488 = metadata !{i32 590080, metadata !4442, metadata !"sym_arg_num", metadata !2979, i32 183, metadata !4451, i32 0} ; [ DW_TAG_auto_variable ]
!4489 = metadata !{i32 590080, metadata !4442, metadata !"k", metadata !2979, i32 184, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4490 = metadata !{i32 590080, metadata !4442, metadata !"i", metadata !2979, i32 184, metadata !2983, i32 0} ; [ DW_TAG_auto_variable ]
!4491 = metadata !{i32 590080, metadata !4492, metadata !"msg", metadata !2979, i32 204, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4492 = metadata !{i32 589835, metadata !4442, i32 204, i32 0, metadata !2979, i32 11} ; [ DW_TAG_lexical_block ]
!4493 = metadata !{i32 590080, metadata !4494, metadata !"msg", metadata !2979, i32 215, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4494 = metadata !{i32 589835, metadata !4442, i32 216, i32 0, metadata !2979, i32 12} ; [ DW_TAG_lexical_block ]
!4495 = metadata !{i32 590080, metadata !4496, metadata !"msg", metadata !2979, i32 235, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4496 = metadata !{i32 589835, metadata !4442, i32 235, i32 0, metadata !2979, i32 13} ; [ DW_TAG_lexical_block ]
!4497 = metadata !{i32 590080, metadata !4498, metadata !"msg", metadata !2979, i32 258, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4498 = metadata !{i32 589835, metadata !4442, i32 258, i32 0, metadata !2979, i32 14} ; [ DW_TAG_lexical_block ]
!4499 = metadata !{i32 590080, metadata !4500, metadata !"msg", metadata !2979, i32 265, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4500 = metadata !{i32 589835, metadata !4442, i32 265, i32 0, metadata !2979, i32 15} ; [ DW_TAG_lexical_block ]
!4501 = metadata !{i32 590080, metadata !4502, metadata !"msg", metadata !2979, i32 275, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4502 = metadata !{i32 589835, metadata !4442, i32 275, i32 0, metadata !2979, i32 16} ; [ DW_TAG_lexical_block ]
!4503 = metadata !{i32 590080, metadata !4504, metadata !"msg", metadata !2979, i32 289, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4504 = metadata !{i32 589835, metadata !4442, i32 289, i32 0, metadata !2979, i32 17} ; [ DW_TAG_lexical_block ]
!4505 = metadata !{i32 590080, metadata !4504, metadata !"msg2", metadata !2979, i32 290, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4506 = metadata !{i32 590080, metadata !4507, metadata !"msg", metadata !2979, i32 330, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4507 = metadata !{i32 589835, metadata !4442, i32 330, i32 0, metadata !2979, i32 18} ; [ DW_TAG_lexical_block ]
!4508 = metadata !{i32 590080, metadata !4507, metadata !"msg2", metadata !2979, i32 331, metadata !2991, i32 0} ; [ DW_TAG_auto_variable ]
!4509 = metadata !{i32 590081, metadata !3027, metadata !"file", metadata !3019, i32 60, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4510 = metadata !{i32 590081, metadata !3027, metadata !"argv", metadata !3019, i32 60, metadata !3033, i32 0} ; [ DW_TAG_arg_variable ]
!4511 = metadata !{i32 590081, metadata !3027, metadata !"envp", metadata !3019, i32 60, metadata !3033, i32 0} ; [ DW_TAG_arg_variable ]
!4512 = metadata !{i32 590081, metadata !3036, metadata !"file", metadata !3019, i32 59, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4513 = metadata !{i32 590081, metadata !3036, metadata !"argv", metadata !3019, i32 59, metadata !3033, i32 0} ; [ DW_TAG_arg_variable ]
!4514 = metadata !{i32 590081, metadata !3039, metadata !"path", metadata !3019, i32 58, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4515 = metadata !{i32 590081, metadata !3039, metadata !"argv", metadata !3019, i32 58, metadata !3033, i32 0} ; [ DW_TAG_arg_variable ]
!4516 = metadata !{i32 590081, metadata !3040, metadata !"path", metadata !3019, i32 57, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4517 = metadata !{i32 590081, metadata !3040, metadata !"arg", metadata !3019, i32 57, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4518 = metadata !{i32 590081, metadata !3043, metadata !"file", metadata !3019, i32 56, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4519 = metadata !{i32 590081, metadata !3043, metadata !"arg", metadata !3019, i32 56, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4520 = metadata !{i32 590081, metadata !3044, metadata !"path", metadata !3019, i32 55, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4521 = metadata !{i32 590081, metadata !3044, metadata !"arg", metadata !3019, i32 55, metadata !3030, i32 0} ; [ DW_TAG_arg_variable ]
!4522 = metadata !{i32 590081, metadata !3045, metadata !"pid", metadata !3019, i32 22, metadata !3023, i32 0} ; [ DW_TAG_arg_variable ]
!4523 = metadata !{i32 590081, metadata !3045, metadata !"sig", metadata !3019, i32 22, metadata !3025, i32 0} ; [ DW_TAG_arg_variable ]
!4524 = metadata !{i32 590081, metadata !3048, metadata !"env", metadata !3019, i32 34, metadata !3051, i32 0} ; [ DW_TAG_arg_variable ]
!4525 = metadata !{i32 590081, metadata !3048, metadata !"val", metadata !3019, i32 34, metadata !3025, i32 0} ; [ DW_TAG_arg_variable ]
!4526 = metadata !{i32 590081, metadata !3071, metadata !"__env", metadata !3019, i32 29, metadata !3051, i32 0} ; [ DW_TAG_arg_variable ]
!4527 = metadata !{i32 590081, metadata !3074, metadata !"fd", metadata !3075, i32 143, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4528 = metadata !{i32 590080, metadata !4529, metadata !"f", metadata !3075, i32 157, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4529 = metadata !{i32 589835, metadata !4530, i32 143, i32 0, metadata !3075, i32 1} ; [ DW_TAG_lexical_block ]
!4530 = metadata !{i32 589835, metadata !3074, i32 143, i32 0, metadata !3075, i32 0} ; [ DW_TAG_lexical_block ]
!4531 = metadata !{i32 590081, metadata !3167, metadata !"mask", metadata !3075, i32 203, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!4532 = metadata !{i32 590080, metadata !4533, metadata !"r", metadata !3075, i32 204, metadata !3170, i32 0} ; [ DW_TAG_auto_variable ]
!4533 = metadata !{i32 589835, metadata !3167, i32 203, i32 0, metadata !3075, i32 2} ; [ DW_TAG_lexical_block ]
!4534 = metadata !{i32 590081, metadata !3171, metadata !"flags", metadata !3075, i32 212, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4535 = metadata !{i32 590081, metadata !3171, metadata !"s", metadata !3075, i32 212, metadata !3103, i32 0} ; [ DW_TAG_arg_variable ]
!4536 = metadata !{i32 590080, metadata !4537, metadata !"write_access", metadata !3075, i32 213, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4537 = metadata !{i32 589835, metadata !3171, i32 212, i32 0, metadata !3075, i32 3} ; [ DW_TAG_lexical_block ]
!4538 = metadata !{i32 590080, metadata !4537, metadata !"read_access", metadata !3075, i32 213, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4539 = metadata !{i32 590080, metadata !4537, metadata !"mode", metadata !3075, i32 214, metadata !3170, i32 0} ; [ DW_TAG_auto_variable ]
!4540 = metadata !{i32 590081, metadata !3174, metadata !"out_fd", metadata !3075, i32 2482, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4541 = metadata !{i32 590081, metadata !3174, metadata !"in_fd", metadata !3075, i32 2482, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4542 = metadata !{i32 590081, metadata !3174, metadata !"offset", metadata !3075, i32 2482, metadata !3178, i32 0} ; [ DW_TAG_arg_variable ]
!4543 = metadata !{i32 590081, metadata !3174, metadata !"count", metadata !3075, i32 2482, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4544 = metadata !{i32 590080, metadata !4545, metadata !"out_f", metadata !3075, i32 2484, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4545 = metadata !{i32 589835, metadata !3174, i32 2483, i32 0, metadata !3075, i32 4} ; [ DW_TAG_lexical_block ]
!4546 = metadata !{i32 590080, metadata !4545, metadata !"in_f", metadata !3075, i32 2485, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4547 = metadata !{i32 590080, metadata !4548, metadata !"os", metadata !3075, i32 2491, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!4548 = metadata !{i32 589835, metadata !4545, i32 2491, i32 0, metadata !3075, i32 5} ; [ DW_TAG_lexical_block ]
!4549 = metadata !{i32 590081, metadata !3181, metadata !"out_fd", metadata !3075, i32 2498, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4550 = metadata !{i32 590081, metadata !3181, metadata !"in_fd", metadata !3075, i32 2498, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4551 = metadata !{i32 590081, metadata !3181, metadata !"offset", metadata !3075, i32 2498, metadata !3178, i32 0} ; [ DW_TAG_arg_variable ]
!4552 = metadata !{i32 590081, metadata !3181, metadata !"count", metadata !3075, i32 2498, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4553 = metadata !{i32 590081, metadata !3182, metadata !"fd", metadata !3075, i32 1715, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4554 = metadata !{i32 590080, metadata !4555, metadata !"f", metadata !3075, i32 1716, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4555 = metadata !{i32 589835, metadata !3182, i32 1715, i32 0, metadata !3075, i32 7} ; [ DW_TAG_lexical_block ]
!4556 = metadata !{i32 590080, metadata !4557, metadata !"r", metadata !3075, i32 1724, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4557 = metadata !{i32 589835, metadata !4555, i32 1724, i32 0, metadata !3075, i32 8} ; [ DW_TAG_lexical_block ]
!4558 = metadata !{i32 590081, metadata !3185, metadata !"path", metadata !3075, i32 2075, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4559 = metadata !{i32 590081, metadata !3190, metadata !"fd", metadata !3075, i32 1695, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4560 = metadata !{i32 590081, metadata !3190, metadata !"buf", metadata !3075, i32 1695, metadata !3193, i32 0} ; [ DW_TAG_arg_variable ]
!4561 = metadata !{i32 590080, metadata !4562, metadata !"f", metadata !3075, i32 1696, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4562 = metadata !{i32 589835, metadata !3190, i32 1695, i32 0, metadata !3075, i32 10} ; [ DW_TAG_lexical_block ]
!4563 = metadata !{i32 590080, metadata !4564, metadata !"r", metadata !3075, i32 1708, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4564 = metadata !{i32 589835, metadata !4562, i32 1708, i32 0, metadata !3075, i32 11} ; [ DW_TAG_lexical_block ]
!4565 = metadata !{i32 590081, metadata !3218, metadata !"fd", metadata !3075, i32 1611, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4566 = metadata !{i32 590081, metadata !3218, metadata !"cmd", metadata !3075, i32 1611, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4567 = metadata !{i32 590080, metadata !4568, metadata !"f", metadata !3075, i32 1612, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4568 = metadata !{i32 589835, metadata !3218, i32 1611, i32 0, metadata !3075, i32 12} ; [ DW_TAG_lexical_block ]
!4569 = metadata !{i32 590080, metadata !4568, metadata !"ap", metadata !3075, i32 1613, metadata !4570, i32 0} ; [ DW_TAG_auto_variable ]
!4570 = metadata !{i32 589846, metadata !4571, metadata !"va_list", metadata !4571, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !4572} ; [ DW_TAG_typedef ]
!4571 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3076} ; [ DW_TAG_file_type ]
!4572 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !4573, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!4573 = metadata !{i32 589843, metadata !3075, metadata !"__va_list_tag", metadata !4574, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !4575, i32 0, null} ; [ DW_TAG_structure_type ]
!4574 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3076} ; [ DW_TAG_file_type ]
!4575 = metadata !{metadata !4576, metadata !4577, metadata !4578, metadata !4579}
!4576 = metadata !{i32 589837, metadata !4573, metadata !"gp_offset", metadata !4574, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3087} ; [ DW_TAG_member ]
!4577 = metadata !{i32 589837, metadata !4573, metadata !"fp_offset", metadata !4574, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3087} ; [ DW_TAG_member ]
!4578 = metadata !{i32 589837, metadata !4573, metadata !"overflow_arg_area", metadata !4574, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !3290} ; [ DW_TAG_member ]
!4579 = metadata !{i32 589837, metadata !4573, metadata !"reg_save_area", metadata !4574, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !3290} ; [ DW_TAG_member ]
!4580 = metadata !{i32 590080, metadata !4568, metadata !"arg", metadata !3075, i32 1614, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!4581 = metadata !{i32 590080, metadata !4582, metadata !"flags", metadata !3075, i32 1644, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4582 = metadata !{i32 589835, metadata !4568, i32 1644, i32 0, metadata !3075, i32 13} ; [ DW_TAG_lexical_block ]
!4583 = metadata !{i32 590080, metadata !4584, metadata !"r", metadata !3075, i32 1671, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4584 = metadata !{i32 589835, metadata !4568, i32 1671, i32 0, metadata !3075, i32 14} ; [ DW_TAG_lexical_block ]
!4585 = metadata !{i32 590081, metadata !3221, metadata !"fd", metadata !3075, i32 1169, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4586 = metadata !{i32 590081, metadata !3221, metadata !"times", metadata !3075, i32 1169, metadata !3224, i32 0} ; [ DW_TAG_arg_variable ]
!4587 = metadata !{i32 590080, metadata !4588, metadata !"f", metadata !3075, i32 1170, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4588 = metadata !{i32 589835, metadata !3221, i32 1169, i32 0, metadata !3075, i32 15} ; [ DW_TAG_lexical_block ]
!4589 = metadata !{i32 590080, metadata !4588, metadata !"r", metadata !3075, i32 1182, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4590 = metadata !{i32 590081, metadata !3226, metadata !"df", metadata !3075, i32 977, metadata !3093, i32 0} ; [ DW_TAG_arg_variable ]
!4591 = metadata !{i32 590081, metadata !3226, metadata !"owner", metadata !3075, i32 977, metadata !3229, i32 0} ; [ DW_TAG_arg_variable ]
!4592 = metadata !{i32 590081, metadata !3226, metadata !"group", metadata !3075, i32 977, metadata !3230, i32 0} ; [ DW_TAG_arg_variable ]
!4593 = metadata !{i32 590081, metadata !3231, metadata !"fd", metadata !3075, i32 996, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4594 = metadata !{i32 590081, metadata !3231, metadata !"owner", metadata !3075, i32 996, metadata !3229, i32 0} ; [ DW_TAG_arg_variable ]
!4595 = metadata !{i32 590081, metadata !3231, metadata !"group", metadata !3075, i32 996, metadata !3230, i32 0} ; [ DW_TAG_arg_variable ]
!4596 = metadata !{i32 590080, metadata !4597, metadata !"f", metadata !3075, i32 997, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4597 = metadata !{i32 589835, metadata !3231, i32 996, i32 0, metadata !3075, i32 17} ; [ DW_TAG_lexical_block ]
!4598 = metadata !{i32 590080, metadata !4599, metadata !"r", metadata !3075, i32 1007, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4599 = metadata !{i32 589835, metadata !4597, i32 1007, i32 0, metadata !3075, i32 18} ; [ DW_TAG_lexical_block ]
!4600 = metadata !{i32 590081, metadata !3234, metadata !"fd", metadata !3075, i32 811, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4601 = metadata !{i32 590080, metadata !4602, metadata !"f", metadata !3075, i32 812, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4602 = metadata !{i32 589835, metadata !3234, i32 811, i32 0, metadata !3075, i32 19} ; [ DW_TAG_lexical_block ]
!4603 = metadata !{i32 590080, metadata !4604, metadata !"r", metadata !3075, i32 824, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4604 = metadata !{i32 589835, metadata !4602, i32 824, i32 0, metadata !3075, i32 20} ; [ DW_TAG_lexical_block ]
!4605 = metadata !{i32 590081, metadata !3235, metadata !"fd", metadata !3075, i32 2303, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4606 = metadata !{i32 590081, metadata !3235, metadata !"request", metadata !3075, i32 2303, metadata !3110, i32 0} ; [ DW_TAG_arg_variable ]
!4607 = metadata !{i32 590080, metadata !4608, metadata !"f", metadata !3075, i32 2304, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4608 = metadata !{i32 589835, metadata !3235, i32 2303, i32 0, metadata !3075, i32 21} ; [ DW_TAG_lexical_block ]
!4609 = metadata !{i32 590080, metadata !4608, metadata !"ap", metadata !3075, i32 2305, metadata !4570, i32 0} ; [ DW_TAG_auto_variable ]
!4610 = metadata !{i32 590080, metadata !4608, metadata !"buf", metadata !3075, i32 2306, metadata !3290, i32 0} ; [ DW_TAG_auto_variable ]
!4611 = metadata !{i32 590080, metadata !4612, metadata !"stat", metadata !3075, i32 2322, metadata !3347, i32 0} ; [ DW_TAG_auto_variable ]
!4612 = metadata !{i32 589835, metadata !4608, i32 2322, i32 0, metadata !3075, i32 22} ; [ DW_TAG_lexical_block ]
!4613 = metadata !{i32 590080, metadata !4614, metadata !"ts", metadata !3075, i32 2326, metadata !4615, i32 0} ; [ DW_TAG_auto_variable ]
!4614 = metadata !{i32 589835, metadata !4612, i32 2326, i32 0, metadata !3075, i32 23} ; [ DW_TAG_lexical_block ]
!4615 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4616} ; [ DW_TAG_pointer_type ]
!4616 = metadata !{i32 589843, metadata !3075, metadata !"termios", metadata !4617, i32 29, i64 480, i64 32, i64 0, i32 0, null, metadata !4618, i32 0, null} ; [ DW_TAG_structure_type ]
!4617 = metadata !{i32 589865, metadata !"termios.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!4618 = metadata !{metadata !4619, metadata !4621, metadata !4622, metadata !4623, metadata !4624, metadata !4626, metadata !4628, metadata !4630}
!4619 = metadata !{i32 589837, metadata !4616, metadata !"c_iflag", metadata !4617, i32 30, i64 32, i64 32, i64 0, i32 0, metadata !4620} ; [ DW_TAG_member ]
!4620 = metadata !{i32 589846, metadata !4617, metadata !"tcflag_t", metadata !4617, i32 29, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!4621 = metadata !{i32 589837, metadata !4616, metadata !"c_oflag", metadata !4617, i32 31, i64 32, i64 32, i64 32, i32 0, metadata !4620} ; [ DW_TAG_member ]
!4622 = metadata !{i32 589837, metadata !4616, metadata !"c_cflag", metadata !4617, i32 32, i64 32, i64 32, i64 64, i32 0, metadata !4620} ; [ DW_TAG_member ]
!4623 = metadata !{i32 589837, metadata !4616, metadata !"c_lflag", metadata !4617, i32 33, i64 32, i64 32, i64 96, i32 0, metadata !4620} ; [ DW_TAG_member ]
!4624 = metadata !{i32 589837, metadata !4616, metadata !"c_line", metadata !4617, i32 34, i64 8, i64 8, i64 128, i32 0, metadata !4625} ; [ DW_TAG_member ]
!4625 = metadata !{i32 589846, metadata !4617, metadata !"cc_t", metadata !4617, i32 24, i64 0, i64 0, i64 0, i32 0, metadata !3278} ; [ DW_TAG_typedef ]
!4626 = metadata !{i32 589837, metadata !4616, metadata !"c_cc", metadata !4617, i32 35, i64 256, i64 8, i64 136, i32 0, metadata !4627} ; [ DW_TAG_member ]
!4627 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 256, i64 8, i64 0, i32 0, metadata !4625, metadata !837, i32 0, null} ; [ DW_TAG_array_type ]
!4628 = metadata !{i32 589837, metadata !4616, metadata !"c_ispeed", metadata !4617, i32 36, i64 32, i64 32, i64 416, i32 0, metadata !4629} ; [ DW_TAG_member ]
!4629 = metadata !{i32 589846, metadata !4617, metadata !"speed_t", metadata !4617, i32 25, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!4630 = metadata !{i32 589837, metadata !4616, metadata !"c_ospeed", metadata !4617, i32 37, i64 32, i64 32, i64 448, i32 0, metadata !4629} ; [ DW_TAG_member ]
!4631 = metadata !{i32 590080, metadata !4632, metadata !"ws", metadata !3075, i32 2395, metadata !4633, i32 0} ; [ DW_TAG_auto_variable ]
!4632 = metadata !{i32 589835, metadata !4612, i32 2395, i32 0, metadata !3075, i32 24} ; [ DW_TAG_lexical_block ]
!4633 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4634} ; [ DW_TAG_pointer_type ]
!4634 = metadata !{i32 589843, metadata !3075, metadata !"winsize", metadata !4635, i32 28, i64 64, i64 16, i64 0, i32 0, null, metadata !4636, i32 0, null} ; [ DW_TAG_structure_type ]
!4635 = metadata !{i32 589865, metadata !"ioctl-types.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3076} ; [ DW_TAG_file_type ]
!4636 = metadata !{metadata !4637, metadata !4638, metadata !4639, metadata !4640}
!4637 = metadata !{i32 589837, metadata !4634, metadata !"ws_row", metadata !4635, i32 29, i64 16, i64 16, i64 0, i32 0, metadata !3155} ; [ DW_TAG_member ]
!4638 = metadata !{i32 589837, metadata !4634, metadata !"ws_col", metadata !4635, i32 30, i64 16, i64 16, i64 16, i32 0, metadata !3155} ; [ DW_TAG_member ]
!4639 = metadata !{i32 589837, metadata !4634, metadata !"ws_xpixel", metadata !4635, i32 31, i64 16, i64 16, i64 32, i32 0, metadata !3155} ; [ DW_TAG_member ]
!4640 = metadata !{i32 589837, metadata !4634, metadata !"ws_ypixel", metadata !4635, i32 32, i64 16, i64 16, i64 48, i32 0, metadata !3155} ; [ DW_TAG_member ]
!4641 = metadata !{i32 590080, metadata !4642, metadata !"res", metadata !3075, i32 2418, metadata !3303, i32 0} ; [ DW_TAG_auto_variable ]
!4642 = metadata !{i32 589835, metadata !4612, i32 2418, i32 0, metadata !3075, i32 25} ; [ DW_TAG_lexical_block ]
!4643 = metadata !{i32 590080, metadata !4644, metadata !"ifr", metadata !3075, i32 2438, metadata !4645, i32 0} ; [ DW_TAG_auto_variable ]
!4644 = metadata !{i32 589835, metadata !4612, i32 2438, i32 0, metadata !3075, i32 26} ; [ DW_TAG_lexical_block ]
!4645 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4646} ; [ DW_TAG_pointer_type ]
!4646 = metadata !{i32 589843, metadata !3075, metadata !"ifreq", metadata !4647, i32 127, i64 320, i64 64, i64 0, i32 0, null, metadata !4648, i32 0, null} ; [ DW_TAG_structure_type ]
!4647 = metadata !{i32 589865, metadata !"if.h", metadata !"/usr/include/net", metadata !3076} ; [ DW_TAG_file_type ]
!4648 = metadata !{metadata !4649, metadata !4654}
!4649 = metadata !{i32 589837, metadata !4646, metadata !"ifr_ifrn", metadata !4647, i32 133, i64 128, i64 8, i64 0, i32 0, metadata !4650} ; [ DW_TAG_member ]
!4650 = metadata !{i32 589847, metadata !3075, metadata !"", metadata !4647, i32 131, i64 128, i64 8, i64 0, i32 0, null, metadata !4651, i32 0, null} ; [ DW_TAG_union_type ]
!4651 = metadata !{metadata !4652}
!4652 = metadata !{i32 589837, metadata !4650, metadata !"ifrn_name", metadata !4647, i32 132, i64 128, i64 8, i64 0, i32 0, metadata !4653} ; [ DW_TAG_member ]
!4653 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !3100, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!4654 = metadata !{i32 589837, metadata !4646, metadata !"ifr_ifru", metadata !4647, i32 149, i64 192, i64 64, i64 128, i32 0, metadata !4655} ; [ DW_TAG_member ]
!4655 = metadata !{i32 589847, metadata !3075, metadata !"", metadata !4647, i32 136, i64 192, i64 64, i64 0, i32 0, null, metadata !4656, i32 0, null} ; [ DW_TAG_union_type ]
!4656 = metadata !{metadata !4657, metadata !4663, metadata !4664, metadata !4665, metadata !4666, metadata !4667, metadata !4669, metadata !4670, metadata !4671, metadata !4680, metadata !4681, metadata !4682}
!4657 = metadata !{i32 589837, metadata !4655, metadata !"ifru_addr", metadata !4647, i32 137, i64 128, i64 16, i64 0, i32 0, metadata !4658} ; [ DW_TAG_member ]
!4658 = metadata !{i32 589843, metadata !3075, metadata !"sockaddr", metadata !3151, i32 150, i64 128, i64 16, i64 0, i32 0, null, metadata !4659, i32 0, null} ; [ DW_TAG_structure_type ]
!4659 = metadata !{metadata !4660, metadata !4661}
!4660 = metadata !{i32 589837, metadata !4658, metadata !"sa_family", metadata !3151, i32 151, i64 16, i64 16, i64 0, i32 0, metadata !3154} ; [ DW_TAG_member ]
!4661 = metadata !{i32 589837, metadata !4658, metadata !"sa_data", metadata !3151, i32 152, i64 112, i64 8, i64 16, i32 0, metadata !4662} ; [ DW_TAG_member ]
!4662 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 112, i64 8, i64 0, i32 0, metadata !3100, metadata !3591, i32 0, null} ; [ DW_TAG_array_type ]
!4663 = metadata !{i32 589837, metadata !4655, metadata !"ifru_dstaddr", metadata !4647, i32 138, i64 128, i64 16, i64 0, i32 0, metadata !4658} ; [ DW_TAG_member ]
!4664 = metadata !{i32 589837, metadata !4655, metadata !"ifru_broadaddr", metadata !4647, i32 139, i64 128, i64 16, i64 0, i32 0, metadata !4658} ; [ DW_TAG_member ]
!4665 = metadata !{i32 589837, metadata !4655, metadata !"ifru_netmask", metadata !4647, i32 140, i64 128, i64 16, i64 0, i32 0, metadata !4658} ; [ DW_TAG_member ]
!4666 = metadata !{i32 589837, metadata !4655, metadata !"ifru_hwaddr", metadata !4647, i32 141, i64 128, i64 16, i64 0, i32 0, metadata !4658} ; [ DW_TAG_member ]
!4667 = metadata !{i32 589837, metadata !4655, metadata !"ifru_flags", metadata !4647, i32 142, i64 16, i64 16, i64 0, i32 0, metadata !4668} ; [ DW_TAG_member ]
!4668 = metadata !{i32 589860, metadata !3075, metadata !"short int", metadata !3075, i32 0, i64 16, i64 16, i64 0, i32 0, i32 5} ; [ DW_TAG_base_type ]
!4669 = metadata !{i32 589837, metadata !4655, metadata !"ifru_ivalue", metadata !4647, i32 143, i64 32, i64 32, i64 0, i32 0, metadata !3085} ; [ DW_TAG_member ]
!4670 = metadata !{i32 589837, metadata !4655, metadata !"ifru_mtu", metadata !4647, i32 144, i64 32, i64 32, i64 0, i32 0, metadata !3085} ; [ DW_TAG_member ]
!4671 = metadata !{i32 589837, metadata !4655, metadata !"ifru_map", metadata !4647, i32 145, i64 192, i64 64, i64 0, i32 0, metadata !4672} ; [ DW_TAG_member ]
!4672 = metadata !{i32 589843, metadata !3075, metadata !"ifmap", metadata !4647, i32 112, i64 192, i64 64, i64 0, i32 0, null, metadata !4673, i32 0, null} ; [ DW_TAG_structure_type ]
!4673 = metadata !{metadata !4674, metadata !4675, metadata !4676, metadata !4677, metadata !4678, metadata !4679}
!4674 = metadata !{i32 589837, metadata !4672, metadata !"mem_start", metadata !4647, i32 113, i64 64, i64 64, i64 0, i32 0, metadata !3110} ; [ DW_TAG_member ]
!4675 = metadata !{i32 589837, metadata !4672, metadata !"mem_end", metadata !4647, i32 114, i64 64, i64 64, i64 64, i32 0, metadata !3110} ; [ DW_TAG_member ]
!4676 = metadata !{i32 589837, metadata !4672, metadata !"base_addr", metadata !4647, i32 115, i64 16, i64 16, i64 128, i32 0, metadata !3155} ; [ DW_TAG_member ]
!4677 = metadata !{i32 589837, metadata !4672, metadata !"irq", metadata !4647, i32 116, i64 8, i64 8, i64 144, i32 0, metadata !3278} ; [ DW_TAG_member ]
!4678 = metadata !{i32 589837, metadata !4672, metadata !"dma", metadata !4647, i32 117, i64 8, i64 8, i64 152, i32 0, metadata !3278} ; [ DW_TAG_member ]
!4679 = metadata !{i32 589837, metadata !4672, metadata !"port", metadata !4647, i32 118, i64 8, i64 8, i64 160, i32 0, metadata !3278} ; [ DW_TAG_member ]
!4680 = metadata !{i32 589837, metadata !4655, metadata !"ifru_slave", metadata !4647, i32 146, i64 128, i64 8, i64 0, i32 0, metadata !4653} ; [ DW_TAG_member ]
!4681 = metadata !{i32 589837, metadata !4655, metadata !"ifru_newname", metadata !4647, i32 147, i64 128, i64 8, i64 0, i32 0, metadata !4653} ; [ DW_TAG_member ]
!4682 = metadata !{i32 589837, metadata !4655, metadata !"ifru_data", metadata !4647, i32 148, i64 64, i64 64, i64 0, i32 0, metadata !4683} ; [ DW_TAG_member ]
!4683 = metadata !{i32 589846, metadata !3109, metadata !"__caddr_t", metadata !3109, i32 186, i64 0, i64 0, i64 0, i32 0, metadata !3099} ; [ DW_TAG_typedef ]
!4684 = metadata !{i32 590080, metadata !4685, metadata !"ifr", metadata !3075, i32 2443, metadata !4645, i32 0} ; [ DW_TAG_auto_variable ]
!4685 = metadata !{i32 589835, metadata !4612, i32 2443, i32 0, metadata !3075, i32 27} ; [ DW_TAG_lexical_block ]
!4686 = metadata !{i32 590080, metadata !4685, metadata !"ia", metadata !3075, i32 2444, metadata !4687, i32 0} ; [ DW_TAG_auto_variable ]
!4687 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4662} ; [ DW_TAG_pointer_type ]
!4688 = metadata !{i32 590080, metadata !4689, metadata !"ifr", metadata !3075, i32 2450, metadata !4645, i32 0} ; [ DW_TAG_auto_variable ]
!4689 = metadata !{i32 589835, metadata !4612, i32 2450, i32 0, metadata !3075, i32 28} ; [ DW_TAG_lexical_block ]
!4690 = metadata !{i32 590080, metadata !4691, metadata !"ia", metadata !3075, i32 2456, metadata !4692, i32 0} ; [ DW_TAG_auto_variable ]
!4691 = metadata !{i32 589835, metadata !4689, i32 2456, i32 0, metadata !3075, i32 29} ; [ DW_TAG_lexical_block ]
!4692 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4693} ; [ DW_TAG_pointer_type ]
!4693 = metadata !{i32 589843, metadata !3075, metadata !"in_addr", metadata !4694, i32 32, i64 32, i64 32, i64 0, i32 0, null, metadata !4695, i32 0, null} ; [ DW_TAG_structure_type ]
!4694 = metadata !{i32 589865, metadata !"in.h", metadata !"/usr/include/netinet", metadata !3076} ; [ DW_TAG_file_type ]
!4695 = metadata !{metadata !4696}
!4696 = metadata !{i32 589837, metadata !4693, metadata !"s_addr", metadata !4694, i32 33, i64 32, i64 32, i64 0, i32 0, metadata !4697} ; [ DW_TAG_member ]
!4697 = metadata !{i32 589846, metadata !4694, metadata !"in_addr_t", metadata !4694, i32 32, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!4698 = metadata !{i32 590080, metadata !4699, metadata !"ia", metadata !3075, i32 2462, metadata !4700, i32 0} ; [ DW_TAG_auto_variable ]
!4699 = metadata !{i32 589835, metadata !4689, i32 2462, i32 0, metadata !3075, i32 30} ; [ DW_TAG_lexical_block ]
!4700 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4701} ; [ DW_TAG_pointer_type ]
!4701 = metadata !{i32 589843, metadata !3075, metadata !"in6_addr", metadata !4694, i32 210, i64 128, i64 32, i64 0, i32 0, null, metadata !4702, i32 0, null} ; [ DW_TAG_structure_type ]
!4702 = metadata !{metadata !4703}
!4703 = metadata !{i32 589837, metadata !4701, metadata !"__in6_u", metadata !4694, i32 218, i64 128, i64 32, i64 0, i32 0, metadata !4704} ; [ DW_TAG_member ]
!4704 = metadata !{i32 589847, metadata !3075, metadata !"", metadata !4694, i32 212, i64 128, i64 32, i64 0, i32 0, null, metadata !4705, i32 0, null} ; [ DW_TAG_union_type ]
!4705 = metadata !{metadata !4706, metadata !4710, metadata !4713}
!4706 = metadata !{i32 589837, metadata !4704, metadata !"__u6_addr8", metadata !4694, i32 213, i64 128, i64 8, i64 0, i32 0, metadata !4707} ; [ DW_TAG_member ]
!4707 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 8, i64 0, i32 0, metadata !4708, metadata !1344, i32 0, null} ; [ DW_TAG_array_type ]
!4708 = metadata !{i32 589846, metadata !4709, metadata !"uint8_t", metadata !4709, i32 49, i64 0, i64 0, i64 0, i32 0, metadata !3278} ; [ DW_TAG_typedef ]
!4709 = metadata !{i32 589865, metadata !"stdint.h", metadata !"/usr/include", metadata !3076} ; [ DW_TAG_file_type ]
!4710 = metadata !{i32 589837, metadata !4704, metadata !"__u6_addr16", metadata !4694, i32 215, i64 128, i64 16, i64 0, i32 0, metadata !4711} ; [ DW_TAG_member ]
!4711 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 16, i64 0, i32 0, metadata !4712, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!4712 = metadata !{i32 589846, metadata !4709, metadata !"uint16_t", metadata !4709, i32 51, i64 0, i64 0, i64 0, i32 0, metadata !3155} ; [ DW_TAG_typedef ]
!4713 = metadata !{i32 589837, metadata !4704, metadata !"__u6_addr32", metadata !4694, i32 216, i64 128, i64 32, i64 0, i32 0, metadata !4714} ; [ DW_TAG_member ]
!4714 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 32, i64 0, i32 0, metadata !4715, metadata !841, i32 0, null} ; [ DW_TAG_array_type ]
!4715 = metadata !{i32 589846, metadata !4709, metadata !"uint32_t", metadata !4709, i32 55, i64 0, i64 0, i64 0, i32 0, metadata !3087} ; [ DW_TAG_typedef ]
!4716 = metadata !{i32 590080, metadata !4717, metadata !"r", metadata !3075, i32 2475, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4717 = metadata !{i32 589835, metadata !4608, i32 2475, i32 0, metadata !3075, i32 31} ; [ DW_TAG_lexical_block ]
!4718 = metadata !{i32 590081, metadata !3238, metadata !"f", metadata !3075, i32 2149, metadata !3079, i32 0} ; [ DW_TAG_arg_variable ]
!4719 = metadata !{i32 590081, metadata !3241, metadata !"pf", metadata !3075, i32 2127, metadata !3244, i32 0} ; [ DW_TAG_arg_variable ]
!4720 = metadata !{i32 590080, metadata !4721, metadata !"fd", metadata !3075, i32 2128, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4721 = metadata !{i32 589835, metadata !3241, i32 2127, i32 0, metadata !3075, i32 33} ; [ DW_TAG_lexical_block ]
!4722 = metadata !{i32 590081, metadata !3245, metadata !"nfds", metadata !3075, i32 1874, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4723 = metadata !{i32 590081, metadata !3245, metadata !"read", metadata !3075, i32 1874, metadata !3248, i32 0} ; [ DW_TAG_arg_variable ]
!4724 = metadata !{i32 590081, metadata !3245, metadata !"write", metadata !3075, i32 1874, metadata !3248, i32 0} ; [ DW_TAG_arg_variable ]
!4725 = metadata !{i32 590081, metadata !3245, metadata !"except", metadata !3075, i32 1875, metadata !3248, i32 0} ; [ DW_TAG_arg_variable ]
!4726 = metadata !{i32 590081, metadata !3245, metadata !"timeout", metadata !3075, i32 1875, metadata !3256, i32 0} ; [ DW_TAG_arg_variable ]
!4727 = metadata !{i32 590080, metadata !4728, metadata !"in_read", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4728 = metadata !{i32 589835, metadata !3245, i32 1875, i32 0, metadata !3075, i32 34} ; [ DW_TAG_lexical_block ]
!4729 = metadata !{i32 590080, metadata !4728, metadata !"in_write", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4730 = metadata !{i32 590080, metadata !4728, metadata !"in_except", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4731 = metadata !{i32 590080, metadata !4728, metadata !"os_read", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4732 = metadata !{i32 590080, metadata !4728, metadata !"os_write", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4733 = metadata !{i32 590080, metadata !4728, metadata !"os_except", metadata !3075, i32 1876, metadata !3249, i32 0} ; [ DW_TAG_auto_variable ]
!4734 = metadata !{i32 590080, metadata !4728, metadata !"i", metadata !3075, i32 1877, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4735 = metadata !{i32 590080, metadata !4728, metadata !"count", metadata !3075, i32 1877, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4736 = metadata !{i32 590080, metadata !4728, metadata !"os_nfds", metadata !3075, i32 1877, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4737 = metadata !{i32 590080, metadata !4738, metadata !"f", metadata !3075, i32 1913, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4738 = metadata !{i32 589835, metadata !4728, i32 1913, i32 0, metadata !3075, i32 35} ; [ DW_TAG_lexical_block ]
!4739 = metadata !{i32 590080, metadata !4740, metadata !"flags", metadata !3075, i32 1919, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!4740 = metadata !{i32 589835, metadata !4738, i32 1919, i32 0, metadata !3075, i32 36} ; [ DW_TAG_lexical_block ]
!4741 = metadata !{i32 590080, metadata !4742, metadata !"tv", metadata !3075, i32 1952, metadata !3257, i32 0} ; [ DW_TAG_auto_variable ]
!4742 = metadata !{i32 589835, metadata !4728, i32 1952, i32 0, metadata !3075, i32 37} ; [ DW_TAG_lexical_block ]
!4743 = metadata !{i32 590080, metadata !4742, metadata !"r", metadata !3075, i32 1953, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4744 = metadata !{i32 590080, metadata !4745, metadata !"f", metadata !3075, i32 1968, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4745 = metadata !{i32 589835, metadata !4742, i32 1968, i32 0, metadata !3075, i32 38} ; [ DW_TAG_lexical_block ]
!4746 = metadata !{i32 590081, metadata !3263, metadata !"fd", metadata !3075, i32 412, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4747 = metadata !{i32 590080, metadata !4748, metadata !"f", metadata !3075, i32 414, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4748 = metadata !{i32 589835, metadata !3263, i32 412, i32 0, metadata !3075, i32 39} ; [ DW_TAG_lexical_block ]
!4749 = metadata !{i32 590080, metadata !4748, metadata !"r", metadata !3075, i32 415, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4750 = metadata !{i32 590081, metadata !3264, metadata !"oldfd", metadata !3075, i32 1731, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4751 = metadata !{i32 590081, metadata !3264, metadata !"newfd", metadata !3075, i32 1731, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4752 = metadata !{i32 590080, metadata !4753, metadata !"f", metadata !3075, i32 1732, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4753 = metadata !{i32 589835, metadata !3264, i32 1731, i32 0, metadata !3075, i32 40} ; [ DW_TAG_lexical_block ]
!4754 = metadata !{i32 590080, metadata !4753, metadata !"i", metadata !3075, i32 1742, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4755 = metadata !{i32 590080, metadata !4753, metadata !"idx", metadata !3075, i32 1742, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4756 = metadata !{i32 590080, metadata !4753, metadata !"f2", metadata !3075, i32 1756, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4757 = metadata !{i32 590081, metadata !3265, metadata !"oldfd", metadata !3075, i32 1779, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4758 = metadata !{i32 590080, metadata !4759, metadata !"f", metadata !3075, i32 1780, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4759 = metadata !{i32 589835, metadata !3265, i32 1779, i32 0, metadata !3075, i32 41} ; [ DW_TAG_lexical_block ]
!4760 = metadata !{i32 590080, metadata !4761, metadata !"fd", metadata !3075, i32 1788, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4761 = metadata !{i32 589835, metadata !4759, i32 1789, i32 0, metadata !3075, i32 42} ; [ DW_TAG_lexical_block ]
!4762 = metadata !{i32 590081, metadata !3266, metadata !"fd", metadata !3075, i32 1367, metadata !3087, i32 0} ; [ DW_TAG_arg_variable ]
!4763 = metadata !{i32 590081, metadata !3266, metadata !"dirp", metadata !3075, i32 1367, metadata !3269, i32 0} ; [ DW_TAG_arg_variable ]
!4764 = metadata !{i32 590081, metadata !3266, metadata !"count", metadata !3075, i32 1367, metadata !3087, i32 0} ; [ DW_TAG_arg_variable ]
!4765 = metadata !{i32 590080, metadata !4766, metadata !"f", metadata !3075, i32 1368, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4766 = metadata !{i32 589835, metadata !3266, i32 1367, i32 0, metadata !3075, i32 43} ; [ DW_TAG_lexical_block ]
!4767 = metadata !{i32 590080, metadata !4768, metadata !"i", metadata !3075, i32 1387, metadata !3089, i32 0} ; [ DW_TAG_auto_variable ]
!4768 = metadata !{i32 589835, metadata !4766, i32 1387, i32 0, metadata !3075, i32 44} ; [ DW_TAG_lexical_block ]
!4769 = metadata !{i32 590080, metadata !4768, metadata !"pad", metadata !3075, i32 1387, metadata !3089, i32 0} ; [ DW_TAG_auto_variable ]
!4770 = metadata !{i32 590080, metadata !4768, metadata !"bytes", metadata !3075, i32 1387, metadata !3089, i32 0} ; [ DW_TAG_auto_variable ]
!4771 = metadata !{i32 590080, metadata !4772, metadata !"df", metadata !3075, i32 1397, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4772 = metadata !{i32 589835, metadata !4768, i32 1397, i32 0, metadata !3075, i32 45} ; [ DW_TAG_lexical_block ]
!4773 = metadata !{i32 590080, metadata !4774, metadata !"os_pos", metadata !3075, i32 1421, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!4774 = metadata !{i32 589835, metadata !4766, i32 1421, i32 0, metadata !3075, i32 46} ; [ DW_TAG_lexical_block ]
!4775 = metadata !{i32 590080, metadata !4774, metadata !"res", metadata !3075, i32 1423, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4776 = metadata !{i32 590080, metadata !4774, metadata !"s", metadata !3075, i32 1434, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4777 = metadata !{i32 590080, metadata !4778, metadata !"pos", metadata !3075, i32 1443, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4778 = metadata !{i32 589835, metadata !4774, i32 1443, i32 0, metadata !3075, i32 47} ; [ DW_TAG_lexical_block ]
!4779 = metadata !{i32 590080, metadata !4780, metadata !"dp", metadata !3075, i32 1449, metadata !3269, i32 0} ; [ DW_TAG_auto_variable ]
!4780 = metadata !{i32 589835, metadata !4778, i32 1449, i32 0, metadata !3075, i32 48} ; [ DW_TAG_lexical_block ]
!4781 = metadata !{i32 590081, metadata !3281, metadata !"f", metadata !3075, i32 2231, metadata !3079, i32 0} ; [ DW_TAG_arg_variable ]
!4782 = metadata !{i32 590081, metadata !3281, metadata !"iov", metadata !3075, i32 2231, metadata !3284, i32 0} ; [ DW_TAG_arg_variable ]
!4783 = metadata !{i32 590081, metadata !3281, metadata !"iovcnt", metadata !3075, i32 2231, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4784 = metadata !{i32 590080, metadata !4785, metadata !"total", metadata !3075, i32 2233, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!4785 = metadata !{i32 589835, metadata !3281, i32 2232, i32 0, metadata !3075, i32 49} ; [ DW_TAG_lexical_block ]
!4786 = metadata !{i32 590080, metadata !4787, metadata !"this_len", metadata !3075, i32 2237, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4787 = metadata !{i32 589835, metadata !4785, i32 2237, i32 0, metadata !3075, i32 50} ; [ DW_TAG_lexical_block ]
!4788 = metadata !{i32 590080, metadata !4789, metadata !"os", metadata !3075, i32 2271, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4789 = metadata !{i32 589835, metadata !4785, i32 2271, i32 0, metadata !3075, i32 51} ; [ DW_TAG_lexical_block ]
!4790 = metadata !{i32 590081, metadata !3292, metadata !"fd", metadata !3075, i32 2278, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4791 = metadata !{i32 590081, metadata !3292, metadata !"iov", metadata !3075, i32 2278, metadata !3284, i32 0} ; [ DW_TAG_arg_variable ]
!4792 = metadata !{i32 590081, metadata !3292, metadata !"iovcnt", metadata !3075, i32 2278, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4793 = metadata !{i32 590080, metadata !4794, metadata !"f", metadata !3075, i32 2279, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4794 = metadata !{i32 589835, metadata !3292, i32 2278, i32 0, metadata !3075, i32 52} ; [ DW_TAG_lexical_block ]
!4795 = metadata !{i32 590080, metadata !4796, metadata !"r", metadata !3075, i32 2289, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4796 = metadata !{i32 589835, metadata !4794, i32 2290, i32 0, metadata !3075, i32 53} ; [ DW_TAG_lexical_block ]
!4797 = metadata !{i32 590081, metadata !3295, metadata !"fd", metadata !3075, i32 1028, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4798 = metadata !{i32 590081, metadata !3295, metadata !"buf", metadata !3075, i32 1028, metadata !3103, i32 0} ; [ DW_TAG_arg_variable ]
!4799 = metadata !{i32 590080, metadata !4800, metadata !"f", metadata !3075, i32 1029, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4800 = metadata !{i32 589835, metadata !3295, i32 1028, i32 0, metadata !3075, i32 54} ; [ DW_TAG_lexical_block ]
!4801 = metadata !{i32 590080, metadata !4802, metadata !"r", metadata !3075, i32 1045, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4802 = metadata !{i32 589835, metadata !4800, i32 1045, i32 0, metadata !3075, i32 55} ; [ DW_TAG_lexical_block ]
!4803 = metadata !{i32 590081, metadata !3296, metadata !"f", metadata !3075, i32 2180, metadata !3079, i32 0} ; [ DW_TAG_arg_variable ]
!4804 = metadata !{i32 590081, metadata !3296, metadata !"iov", metadata !3075, i32 2180, metadata !3284, i32 0} ; [ DW_TAG_arg_variable ]
!4805 = metadata !{i32 590081, metadata !3296, metadata !"iovcnt", metadata !3075, i32 2180, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4806 = metadata !{i32 590080, metadata !4807, metadata !"total", metadata !3075, i32 2184, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!4807 = metadata !{i32 589835, metadata !4808, i32 2184, i32 0, metadata !3075, i32 57} ; [ DW_TAG_lexical_block ]
!4808 = metadata !{i32 589835, metadata !3296, i32 2181, i32 0, metadata !3075, i32 56} ; [ DW_TAG_lexical_block ]
!4809 = metadata !{i32 590080, metadata !4810, metadata !"this_len", metadata !3075, i32 2191, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4810 = metadata !{i32 589835, metadata !4807, i32 2191, i32 0, metadata !3075, i32 58} ; [ DW_TAG_lexical_block ]
!4811 = metadata !{i32 590080, metadata !4812, metadata !"os", metadata !3075, i32 2201, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!4812 = metadata !{i32 589835, metadata !4808, i32 2201, i32 0, metadata !3075, i32 59} ; [ DW_TAG_lexical_block ]
!4813 = metadata !{i32 590080, metadata !4814, metadata !"p", metadata !3075, i32 2205, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4814 = metadata !{i32 589835, metadata !4812, i32 2206, i32 0, metadata !3075, i32 60} ; [ DW_TAG_lexical_block ]
!4815 = metadata !{i32 590080, metadata !4814, metadata !"cb", metadata !3075, i32 2206, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!4816 = metadata !{i32 590080, metadata !4814, metadata !"this_len", metadata !3075, i32 2207, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4817 = metadata !{i32 590081, metadata !3297, metadata !"addr", metadata !3075, i32 908, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!4818 = metadata !{i32 590081, metadata !3297, metadata !"length", metadata !3075, i32 908, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4819 = metadata !{i32 590081, metadata !3300, metadata !"filedes", metadata !3075, i32 2154, metadata !3303, i32 0} ; [ DW_TAG_arg_variable ]
!4820 = metadata !{i32 590080, metadata !4821, metadata !"f", metadata !3075, i32 2155, metadata !4822, i32 0} ; [ DW_TAG_auto_variable ]
!4821 = metadata !{i32 589835, metadata !3300, i32 2154, i32 0, metadata !3075, i32 62} ; [ DW_TAG_lexical_block ]
!4822 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 128, i64 64, i64 0, i32 0, metadata !3079, metadata !25, i32 0, null} ; [ DW_TAG_array_type ]
!4823 = metadata !{i32 590080, metadata !4821, metadata !"os_filedes", metadata !3075, i32 2156, metadata !3212, i32 0} ; [ DW_TAG_auto_variable ]
!4824 = metadata !{i32 590080, metadata !4821, metadata !"r", metadata !3075, i32 2157, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4825 = metadata !{i32 590081, metadata !3304, metadata !"p", metadata !3075, i32 2019, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!4826 = metadata !{i32 590080, metadata !4827, metadata !"pc", metadata !3075, i32 2021, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4827 = metadata !{i32 589835, metadata !3304, i32 2019, i32 0, metadata !3075, i32 63} ; [ DW_TAG_lexical_block ]
!4828 = metadata !{i32 590081, metadata !3307, metadata !"s", metadata !3075, i32 2032, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4829 = metadata !{i32 590080, metadata !4830, metadata !"sc", metadata !3075, i32 2033, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4830 = metadata !{i32 589835, metadata !3307, i32 2032, i32 0, metadata !3075, i32 64} ; [ DW_TAG_lexical_block ]
!4831 = metadata !{i32 590080, metadata !4830, metadata !"i", metadata !3075, i32 2034, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!4832 = metadata !{i32 590080, metadata !4833, metadata !"c", metadata !3075, i32 2037, metadata !3100, i32 0} ; [ DW_TAG_auto_variable ]
!4833 = metadata !{i32 589835, metadata !4830, i32 2037, i32 0, metadata !3075, i32 65} ; [ DW_TAG_lexical_block ]
!4834 = metadata !{i32 590080, metadata !4835, metadata !"cc", metadata !3075, i32 2046, metadata !3100, i32 0} ; [ DW_TAG_auto_variable ]
!4835 = metadata !{i32 589835, metadata !4833, i32 2046, i32 0, metadata !3075, i32 66} ; [ DW_TAG_lexical_block ]
!4836 = metadata !{i32 590081, metadata !3310, metadata !"pathname", metadata !3075, i32 61, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4837 = metadata !{i32 590081, metadata !3310, metadata !"flags", metadata !3075, i32 61, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4838 = metadata !{i32 590081, metadata !3310, metadata !"cp_treat_symbolic", metadata !3075, i32 61, metadata !3313, i32 0} ; [ DW_TAG_arg_variable ]
!4839 = metadata !{i32 590080, metadata !4840, metadata !"c", metadata !3075, i32 62, metadata !3100, i32 0} ; [ DW_TAG_auto_variable ]
!4840 = metadata !{i32 589835, metadata !3310, i32 61, i32 0, metadata !3075, i32 67} ; [ DW_TAG_lexical_block ]
!4841 = metadata !{i32 590080, metadata !4840, metadata !"i", metadata !3075, i32 63, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!4842 = metadata !{i32 590080, metadata !4843, metadata !"df", metadata !3075, i32 73, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4843 = metadata !{i32 589835, metadata !4840, i32 73, i32 0, metadata !3075, i32 68} ; [ DW_TAG_lexical_block ]
!4844 = metadata !{i32 590080, metadata !4845, metadata !"df", metadata !3075, i32 80, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4845 = metadata !{i32 589835, metadata !4840, i32 80, i32 0, metadata !3075, i32 69} ; [ DW_TAG_lexical_block ]
!4846 = metadata !{i32 590080, metadata !4845, metadata !"file_check", metadata !3075, i32 81, metadata !3313, i32 0} ; [ DW_TAG_auto_variable ]
!4847 = metadata !{i32 590080, metadata !4848, metadata !"dot", metadata !3075, i32 90, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4848 = metadata !{i32 589835, metadata !4845, i32 90, i32 0, metadata !3075, i32 70} ; [ DW_TAG_lexical_block ]
!4849 = metadata !{i32 590080, metadata !4850, metadata !"__s1_len", metadata !3075, i32 91, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4850 = metadata !{i32 589835, metadata !4848, i32 91, i32 0, metadata !3075, i32 71} ; [ DW_TAG_lexical_block ]
!4851 = metadata !{i32 590080, metadata !4850, metadata !"__s2_len", metadata !3075, i32 91, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4852 = metadata !{i32 590080, metadata !4853, metadata !"__s2", metadata !3075, i32 91, metadata !4854, i32 0} ; [ DW_TAG_auto_variable ]
!4853 = metadata !{i32 589835, metadata !4850, i32 91, i32 0, metadata !3075, i32 72} ; [ DW_TAG_lexical_block ]
!4854 = metadata !{i32 589839, metadata !3075, metadata !"", metadata !3075, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !4855} ; [ DW_TAG_pointer_type ]
!4855 = metadata !{i32 589862, metadata !3075, metadata !"", metadata !3075, i32 0, i64 8, i64 8, i64 0, i32 0, metadata !3278} ; [ DW_TAG_const_type ]
!4856 = metadata !{i32 590080, metadata !4853, metadata !"__result", metadata !3075, i32 91, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4857 = metadata !{i32 590080, metadata !4858, metadata !"shadow", metadata !3075, i32 97, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4858 = metadata !{i32 589835, metadata !4845, i32 97, i32 0, metadata !3075, i32 73} ; [ DW_TAG_lexical_block ]
!4859 = metadata !{i32 590080, metadata !4858, metadata !"toConcretize", metadata !3075, i32 98, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4860 = metadata !{i32 590080, metadata !4858, metadata !"concrete_path", metadata !3075, i32 113, metadata !3188, i32 0} ; [ DW_TAG_auto_variable ]
!4861 = metadata !{i32 590080, metadata !4862, metadata !"len", metadata !3075, i32 106, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4862 = metadata !{i32 589835, metadata !4858, i32 106, i32 0, metadata !3075, i32 74} ; [ DW_TAG_lexical_block ]
!4863 = metadata !{i32 590080, metadata !4862, metadata !"pathCopy", metadata !3075, i32 107, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!4864 = metadata !{i32 590080, metadata !4865, metadata !"__s1_len", metadata !3075, i32 115, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4865 = metadata !{i32 589835, metadata !4858, i32 115, i32 0, metadata !3075, i32 75} ; [ DW_TAG_lexical_block ]
!4866 = metadata !{i32 590080, metadata !4865, metadata !"__s2_len", metadata !3075, i32 115, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4867 = metadata !{i32 590081, metadata !3314, metadata !"pathname", metadata !3075, i32 56, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4868 = metadata !{i32 590081, metadata !3317, metadata !"path", metadata !3075, i32 2108, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4869 = metadata !{i32 590081, metadata !3317, metadata !"times", metadata !3075, i32 2108, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!4870 = metadata !{i32 590080, metadata !4871, metadata !"dfile", metadata !3075, i32 2109, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4871 = metadata !{i32 589835, metadata !3317, i32 2108, i32 0, metadata !3075, i32 77} ; [ DW_TAG_lexical_block ]
!4872 = metadata !{i32 590080, metadata !4871, metadata !"r", metadata !3075, i32 2118, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4873 = metadata !{i32 590081, metadata !3320, metadata !"path", metadata !3075, i32 1842, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4874 = metadata !{i32 590081, metadata !3320, metadata !"buf", metadata !3075, i32 1842, metadata !3099, i32 0} ; [ DW_TAG_arg_variable ]
!4875 = metadata !{i32 590081, metadata !3320, metadata !"bufsize", metadata !3075, i32 1842, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4876 = metadata !{i32 590080, metadata !4877, metadata !"dfile", metadata !3075, i32 1843, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4877 = metadata !{i32 589835, metadata !3320, i32 1842, i32 0, metadata !3075, i32 78} ; [ DW_TAG_lexical_block ]
!4878 = metadata !{i32 590080, metadata !4879, metadata !"r", metadata !3075, i32 1859, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4879 = metadata !{i32 589835, metadata !4877, i32 1859, i32 0, metadata !3075, i32 79} ; [ DW_TAG_lexical_block ]
!4880 = metadata !{i32 590081, metadata !3323, metadata !"path", metadata !3075, i32 2090, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4881 = metadata !{i32 590081, metadata !3323, metadata !"times", metadata !3075, i32 2090, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4882 = metadata !{i32 590080, metadata !4883, metadata !"dfile", metadata !3075, i32 2091, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4883 = metadata !{i32 589835, metadata !3323, i32 2090, i32 0, metadata !3075, i32 80} ; [ DW_TAG_lexical_block ]
!4884 = metadata !{i32 590080, metadata !4883, metadata !"r", metadata !3075, i32 2101, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4885 = metadata !{i32 590081, metadata !3328, metadata !"pathname", metadata !3075, i32 1820, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4886 = metadata !{i32 590080, metadata !4887, metadata !"dfile", metadata !3075, i32 1821, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4887 = metadata !{i32 589835, metadata !3328, i32 1820, i32 0, metadata !3075, i32 81} ; [ DW_TAG_lexical_block ]
!4888 = metadata !{i32 590080, metadata !4889, metadata !"r", metadata !3075, i32 1835, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4889 = metadata !{i32 589835, metadata !4887, i32 1835, i32 0, metadata !3075, i32 82} ; [ DW_TAG_lexical_block ]
!4890 = metadata !{i32 590081, metadata !3329, metadata !"pathname", metadata !3075, i32 1801, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4891 = metadata !{i32 590080, metadata !4892, metadata !"dfile", metadata !3075, i32 1802, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4892 = metadata !{i32 589835, metadata !3329, i32 1801, i32 0, metadata !3075, i32 83} ; [ DW_TAG_lexical_block ]
!4893 = metadata !{i32 590080, metadata !4894, metadata !"r", metadata !3075, i32 1813, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4894 = metadata !{i32 589835, metadata !4892, i32 1813, i32 0, metadata !3075, i32 84} ; [ DW_TAG_lexical_block ]
!4895 = metadata !{i32 590081, metadata !3330, metadata !"path", metadata !3075, i32 1678, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4896 = metadata !{i32 590081, metadata !3330, metadata !"buf", metadata !3075, i32 1678, metadata !3193, i32 0} ; [ DW_TAG_arg_variable ]
!4897 = metadata !{i32 590080, metadata !4898, metadata !"dfile", metadata !3075, i32 1679, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4898 = metadata !{i32 589835, metadata !3330, i32 1678, i32 0, metadata !3075, i32 85} ; [ DW_TAG_lexical_block ]
!4899 = metadata !{i32 590080, metadata !4900, metadata !"r", metadata !3075, i32 1688, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4900 = metadata !{i32 589835, metadata !4898, i32 1688, i32 0, metadata !3075, i32 86} ; [ DW_TAG_lexical_block ]
!4901 = metadata !{i32 590081, metadata !3333, metadata !"fd", metadata !3075, i32 1228, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4902 = metadata !{i32 590081, metadata !3333, metadata !"path", metadata !3075, i32 1228, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4903 = metadata !{i32 590081, metadata !3333, metadata !"flags", metadata !3075, i32 1228, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4904 = metadata !{i32 590080, metadata !4905, metadata !"f", metadata !3075, i32 1231, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4905 = metadata !{i32 589835, metadata !3333, i32 1228, i32 0, metadata !3075, i32 87} ; [ DW_TAG_lexical_block ]
!4906 = metadata !{i32 590080, metadata !4905, metadata !"fd_idx", metadata !3075, i32 1232, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4907 = metadata !{i32 590080, metadata !4905, metadata !"ap", metadata !3075, i32 1257, metadata !4570, i32 0} ; [ DW_TAG_auto_variable ]
!4908 = metadata !{i32 590080, metadata !4905, metadata !"mode", metadata !3075, i32 1258, metadata !3170, i32 0} ; [ DW_TAG_auto_variable ]
!4909 = metadata !{i32 590080, metadata !4910, metadata !"os_fd", metadata !3075, i32 1305, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4910 = metadata !{i32 589835, metadata !4905, i32 1305, i32 0, metadata !3075, i32 88} ; [ DW_TAG_lexical_block ]
!4911 = metadata !{i32 590081, metadata !3336, metadata !"oldpath", metadata !3075, i32 1209, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4912 = metadata !{i32 590081, metadata !3336, metadata !"newpath", metadata !3075, i32 1209, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4913 = metadata !{i32 590080, metadata !4914, metadata !"dfile", metadata !3075, i32 1210, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4914 = metadata !{i32 589835, metadata !3336, i32 1209, i32 0, metadata !3075, i32 89} ; [ DW_TAG_lexical_block ]
!4915 = metadata !{i32 590080, metadata !4914, metadata !"r", metadata !3075, i32 1222, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4916 = metadata !{i32 590081, metadata !3339, metadata !"oldpath", metadata !3075, i32 1190, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4917 = metadata !{i32 590081, metadata !3339, metadata !"newpath", metadata !3075, i32 1190, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4918 = metadata !{i32 590080, metadata !4919, metadata !"dfile", metadata !3075, i32 1191, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4919 = metadata !{i32 589835, metadata !3339, i32 1190, i32 0, metadata !3075, i32 90} ; [ DW_TAG_lexical_block ]
!4920 = metadata !{i32 590080, metadata !4919, metadata !"r", metadata !3075, i32 1203, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4921 = metadata !{i32 590081, metadata !3340, metadata !"fd", metadata !3075, i32 1139, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4922 = metadata !{i32 590081, metadata !3340, metadata !"path", metadata !3075, i32 1139, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4923 = metadata !{i32 590081, metadata !3340, metadata !"times", metadata !3075, i32 1139, metadata !3326, i32 0} ; [ DW_TAG_arg_variable ]
!4924 = metadata !{i32 590080, metadata !4925, metadata !"dfile", metadata !3075, i32 1140, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4925 = metadata !{i32 589835, metadata !3340, i32 1139, i32 0, metadata !3075, i32 91} ; [ DW_TAG_lexical_block ]
!4926 = metadata !{i32 590080, metadata !4925, metadata !"f", metadata !3075, i32 1146, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4927 = metadata !{i32 590080, metadata !4925, metadata !"r", metadata !3075, i32 1156, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4928 = metadata !{i32 590081, metadata !3343, metadata !"fd", metadata !3075, i32 1106, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4929 = metadata !{i32 590081, metadata !3343, metadata !"path", metadata !3075, i32 1106, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4930 = metadata !{i32 590081, metadata !3343, metadata !"flags", metadata !3075, i32 1106, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4931 = metadata !{i32 590080, metadata !4932, metadata !"dfile", metadata !3075, i32 1107, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4932 = metadata !{i32 589835, metadata !3343, i32 1106, i32 0, metadata !3075, i32 92} ; [ DW_TAG_lexical_block ]
!4933 = metadata !{i32 590080, metadata !4932, metadata !"f", metadata !3075, i32 1113, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4934 = metadata !{i32 590080, metadata !4932, metadata !"r", metadata !3075, i32 1126, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4935 = metadata !{i32 590081, metadata !3344, metadata !"fd", metadata !3075, i32 1065, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4936 = metadata !{i32 590081, metadata !3344, metadata !"path", metadata !3075, i32 1065, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4937 = metadata !{i32 590081, metadata !3344, metadata !"buf", metadata !3075, i32 1065, metadata !3347, i32 0} ; [ DW_TAG_arg_variable ]
!4938 = metadata !{i32 590081, metadata !3344, metadata !"flags", metadata !3075, i32 1065, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4939 = metadata !{i32 590080, metadata !4940, metadata !"dfile", metadata !3075, i32 1066, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4940 = metadata !{i32 589835, metadata !3344, i32 1065, i32 0, metadata !3075, i32 93} ; [ DW_TAG_lexical_block ]
!4941 = metadata !{i32 590080, metadata !4940, metadata !"f", metadata !3075, i32 1072, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4942 = metadata !{i32 590080, metadata !4940, metadata !"r", metadata !3075, i32 1088, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4943 = metadata !{i32 590081, metadata !3367, metadata !"path", metadata !3075, i32 1014, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4944 = metadata !{i32 590081, metadata !3367, metadata !"owner", metadata !3075, i32 1014, metadata !3229, i32 0} ; [ DW_TAG_arg_variable ]
!4945 = metadata !{i32 590081, metadata !3367, metadata !"group", metadata !3075, i32 1014, metadata !3230, i32 0} ; [ DW_TAG_arg_variable ]
!4946 = metadata !{i32 590080, metadata !4947, metadata !"df", metadata !3075, i32 1016, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4947 = metadata !{i32 589835, metadata !3367, i32 1014, i32 0, metadata !3075, i32 94} ; [ DW_TAG_lexical_block ]
!4948 = metadata !{i32 590080, metadata !4949, metadata !"r", metadata !3075, i32 1021, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4949 = metadata !{i32 589835, metadata !4947, i32 1021, i32 0, metadata !3075, i32 95} ; [ DW_TAG_lexical_block ]
!4950 = metadata !{i32 590081, metadata !3370, metadata !"path", metadata !3075, i32 983, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4951 = metadata !{i32 590081, metadata !3370, metadata !"owner", metadata !3075, i32 983, metadata !3229, i32 0} ; [ DW_TAG_arg_variable ]
!4952 = metadata !{i32 590081, metadata !3370, metadata !"group", metadata !3075, i32 983, metadata !3230, i32 0} ; [ DW_TAG_arg_variable ]
!4953 = metadata !{i32 590080, metadata !4954, metadata !"df", metadata !3075, i32 984, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4954 = metadata !{i32 589835, metadata !3370, i32 983, i32 0, metadata !3075, i32 96} ; [ DW_TAG_lexical_block ]
!4955 = metadata !{i32 590080, metadata !4956, metadata !"r", metadata !3075, i32 989, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4956 = metadata !{i32 589835, metadata !4954, i32 989, i32 0, metadata !3075, i32 97} ; [ DW_TAG_lexical_block ]
!4957 = metadata !{i32 590081, metadata !3371, metadata !"path", metadata !3075, i32 793, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4958 = metadata !{i32 590080, metadata !4959, metadata !"dfile", metadata !3075, i32 794, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4959 = metadata !{i32 589835, metadata !3371, i32 793, i32 0, metadata !3075, i32 98} ; [ DW_TAG_lexical_block ]
!4960 = metadata !{i32 590080, metadata !4961, metadata !"r", metadata !3075, i32 804, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4961 = metadata !{i32 589835, metadata !4959, i32 804, i32 0, metadata !3075, i32 99} ; [ DW_TAG_lexical_block ]
!4962 = metadata !{i32 590081, metadata !3372, metadata !"pathname", metadata !3075, i32 184, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4963 = metadata !{i32 590081, metadata !3372, metadata !"mode", metadata !3075, i32 184, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4964 = metadata !{i32 590080, metadata !4965, metadata !"dfile", metadata !3075, i32 185, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4965 = metadata !{i32 589835, metadata !3372, i32 184, i32 0, metadata !3075, i32 100} ; [ DW_TAG_lexical_block ]
!4966 = metadata !{i32 590080, metadata !4967, metadata !"r", metadata !3075, i32 195, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4967 = metadata !{i32 589835, metadata !4965, i32 195, i32 0, metadata !3075, i32 101} ; [ DW_TAG_lexical_block ]
!4968 = metadata !{i32 590081, metadata !3375, metadata !"pathname", metadata !3075, i32 166, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!4969 = metadata !{i32 590081, metadata !3375, metadata !"mode", metadata !3075, i32 166, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4970 = metadata !{i32 590080, metadata !4971, metadata !"dfile", metadata !3075, i32 167, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!4971 = metadata !{i32 589835, metadata !3375, i32 166, i32 0, metadata !3075, i32 102} ; [ DW_TAG_lexical_block ]
!4972 = metadata !{i32 590080, metadata !4973, metadata !"r", metadata !3075, i32 177, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4973 = metadata !{i32 589835, metadata !4971, i32 177, i32 0, metadata !3075, i32 103} ; [ DW_TAG_lexical_block ]
!4974 = metadata !{i32 590081, metadata !3376, metadata !"s", metadata !3075, i32 2026, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4975 = metadata !{i32 590080, metadata !4976, metadata !"sc", metadata !3075, i32 2027, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!4976 = metadata !{i32 589835, metadata !3376, i32 2026, i32 0, metadata !3075, i32 104} ; [ DW_TAG_lexical_block ]
!4977 = metadata !{i32 590081, metadata !3379, metadata !"buf", metadata !3075, i32 1984, metadata !3099, i32 0} ; [ DW_TAG_arg_variable ]
!4978 = metadata !{i32 590081, metadata !3379, metadata !"size", metadata !3075, i32 1984, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4979 = metadata !{i32 590080, metadata !4980, metadata !"r", metadata !3075, i32 1986, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4980 = metadata !{i32 589835, metadata !3379, i32 1984, i32 0, metadata !3075, i32 105} ; [ DW_TAG_lexical_block ]
!4981 = metadata !{i32 590081, metadata !3382, metadata !"fd", metadata !3075, i32 1333, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4982 = metadata !{i32 590081, metadata !3382, metadata !"length", metadata !3075, i32 1333, metadata !3089, i32 0} ; [ DW_TAG_arg_variable ]
!4983 = metadata !{i32 590080, metadata !4984, metadata !"f", metadata !3075, i32 1335, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4984 = metadata !{i32 589835, metadata !3382, i32 1333, i32 0, metadata !3075, i32 106} ; [ DW_TAG_lexical_block ]
!4985 = metadata !{i32 590080, metadata !4986, metadata !"r", metadata !3075, i32 1357, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!4986 = metadata !{i32 589835, metadata !4984, i32 1355, i32 0, metadata !3075, i32 107} ; [ DW_TAG_lexical_block ]
!4987 = metadata !{i32 590081, metadata !3385, metadata !"fd", metadata !3075, i32 685, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4988 = metadata !{i32 590081, metadata !3385, metadata !"offset", metadata !3075, i32 685, metadata !3089, i32 0} ; [ DW_TAG_arg_variable ]
!4989 = metadata !{i32 590081, metadata !3385, metadata !"whence", metadata !3075, i32 685, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4990 = metadata !{i32 590080, metadata !4991, metadata !"new_off", metadata !3075, i32 686, metadata !3089, i32 0} ; [ DW_TAG_auto_variable ]
!4991 = metadata !{i32 589835, metadata !3385, i32 685, i32 0, metadata !3075, i32 108} ; [ DW_TAG_lexical_block ]
!4992 = metadata !{i32 590080, metadata !4991, metadata !"f", metadata !3075, i32 687, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4993 = metadata !{i32 590081, metadata !3388, metadata !"fd", metadata !3075, i32 540, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!4994 = metadata !{i32 590081, metadata !3388, metadata !"buf", metadata !3075, i32 540, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!4995 = metadata !{i32 590081, metadata !3388, metadata !"count", metadata !3075, i32 540, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!4996 = metadata !{i32 590081, metadata !3388, metadata !"offset", metadata !3075, i32 540, metadata !3179, i32 0} ; [ DW_TAG_arg_variable ]
!4997 = metadata !{i32 590080, metadata !4998, metadata !"f", metadata !3075, i32 542, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!4998 = metadata !{i32 589835, metadata !3388, i32 540, i32 0, metadata !3075, i32 109} ; [ DW_TAG_lexical_block ]
!4999 = metadata !{i32 590080, metadata !5000, metadata !"r", metadata !3075, i32 573, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5000 = metadata !{i32 589835, metadata !4998, i32 574, i32 0, metadata !3075, i32 110} ; [ DW_TAG_lexical_block ]
!5001 = metadata !{i32 590081, metadata !3391, metadata !"fd", metadata !3075, i32 455, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5002 = metadata !{i32 590081, metadata !3391, metadata !"buf", metadata !3075, i32 455, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!5003 = metadata !{i32 590081, metadata !3391, metadata !"count", metadata !3075, i32 455, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!5004 = metadata !{i32 590080, metadata !5005, metadata !"f", metadata !3075, i32 457, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5005 = metadata !{i32 589835, metadata !3391, i32 455, i32 0, metadata !3075, i32 111} ; [ DW_TAG_lexical_block ]
!5006 = metadata !{i32 590080, metadata !5007, metadata !"r", metadata !3075, i32 484, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5007 = metadata !{i32 589835, metadata !5005, i32 485, i32 0, metadata !3075, i32 112} ; [ DW_TAG_lexical_block ]
!5008 = metadata !{i32 590080, metadata !5007, metadata !"incoming", metadata !3075, i32 491, metadata !3290, i32 0} ; [ DW_TAG_auto_variable ]
!5009 = metadata !{i32 590081, metadata !3394, metadata !"fd", metadata !3075, i32 831, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5010 = metadata !{i32 590081, metadata !3394, metadata !"length", metadata !3075, i32 831, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!5011 = metadata !{i32 590081, metadata !3394, metadata !"off", metadata !3075, i32 831, metadata !3179, i32 0} ; [ DW_TAG_arg_variable ]
!5012 = metadata !{i32 590080, metadata !5013, metadata !"buffer", metadata !3075, i32 832, metadata !3290, i32 0} ; [ DW_TAG_auto_variable ]
!5013 = metadata !{i32 589835, metadata !3394, i32 831, i32 0, metadata !3075, i32 113} ; [ DW_TAG_lexical_block ]
!5014 = metadata !{i32 590080, metadata !5013, metadata !"count", metadata !3075, i32 835, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!5015 = metadata !{i32 590080, metadata !5013, metadata !"r", metadata !3075, i32 836, metadata !3177, i32 0} ; [ DW_TAG_auto_variable ]
!5016 = metadata !{i32 590081, metadata !3397, metadata !"addr", metadata !3075, i32 880, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!5017 = metadata !{i32 590081, metadata !3397, metadata !"length", metadata !3075, i32 880, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!5018 = metadata !{i32 590081, metadata !3397, metadata !"prot", metadata !3075, i32 880, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5019 = metadata !{i32 590081, metadata !3397, metadata !"flags", metadata !3075, i32 881, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5020 = metadata !{i32 590081, metadata !3397, metadata !"fd", metadata !3075, i32 881, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5021 = metadata !{i32 590081, metadata !3397, metadata !"off", metadata !3075, i32 881, metadata !3179, i32 0} ; [ DW_TAG_arg_variable ]
!5022 = metadata !{i32 590080, metadata !5023, metadata !"f", metadata !3075, i32 889, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5023 = metadata !{i32 589835, metadata !3397, i32 881, i32 0, metadata !3075, i32 114} ; [ DW_TAG_lexical_block ]
!5024 = metadata !{i32 590081, metadata !3400, metadata !"addr", metadata !3075, i32 852, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!5025 = metadata !{i32 590081, metadata !3400, metadata !"length", metadata !3075, i32 852, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!5026 = metadata !{i32 590081, metadata !3400, metadata !"prot", metadata !3075, i32 852, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5027 = metadata !{i32 590081, metadata !3400, metadata !"flags", metadata !3075, i32 853, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5028 = metadata !{i32 590081, metadata !3400, metadata !"fd", metadata !3075, i32 853, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5029 = metadata !{i32 590081, metadata !3400, metadata !"off", metadata !3075, i32 853, metadata !3089, i32 0} ; [ DW_TAG_arg_variable ]
!5030 = metadata !{i32 590080, metadata !5031, metadata !"f", metadata !3075, i32 860, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5031 = metadata !{i32 589835, metadata !3400, i32 853, i32 0, metadata !3075, i32 115} ; [ DW_TAG_lexical_block ]
!5032 = metadata !{i32 590081, metadata !3403, metadata !"s", metadata !3075, i32 2056, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5033 = metadata !{i32 590081, metadata !3403, metadata !"size", metadata !3075, i32 2056, metadata !3087, i32 0} ; [ DW_TAG_arg_variable ]
!5034 = metadata !{i32 590080, metadata !5035, metadata !"sc", metadata !3075, i32 2057, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!5035 = metadata !{i32 589835, metadata !3403, i32 2056, i32 0, metadata !3075, i32 116} ; [ DW_TAG_lexical_block ]
!5036 = metadata !{i32 590080, metadata !5035, metadata !"i", metadata !3075, i32 2058, metadata !3087, i32 0} ; [ DW_TAG_auto_variable ]
!5037 = metadata !{i32 590080, metadata !5038, metadata !"c", metadata !3075, i32 2061, metadata !3100, i32 0} ; [ DW_TAG_auto_variable ]
!5038 = metadata !{i32 589835, metadata !5035, i32 2061, i32 0, metadata !3075, i32 117} ; [ DW_TAG_lexical_block ]
!5039 = metadata !{i32 590080, metadata !5038, metadata !"cc", metadata !3075, i32 2062, metadata !3100, i32 0} ; [ DW_TAG_auto_variable ]
!5040 = metadata !{i32 590081, metadata !3406, metadata !"df", metadata !3075, i32 915, metadata !3093, i32 0} ; [ DW_TAG_arg_variable ]
!5041 = metadata !{i32 590081, metadata !3406, metadata !"mode", metadata !3075, i32 915, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!5042 = metadata !{i32 590081, metadata !3409, metadata !"fd", metadata !3075, i32 950, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5043 = metadata !{i32 590081, metadata !3409, metadata !"mode", metadata !3075, i32 950, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!5044 = metadata !{i32 590080, metadata !5045, metadata !"f", metadata !3075, i32 953, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5045 = metadata !{i32 589835, metadata !3409, i32 950, i32 0, metadata !3075, i32 119} ; [ DW_TAG_lexical_block ]
!5046 = metadata !{i32 590080, metadata !5047, metadata !"r", metadata !3075, i32 970, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5047 = metadata !{i32 589835, metadata !5045, i32 970, i32 0, metadata !3075, i32 120} ; [ DW_TAG_lexical_block ]
!5048 = metadata !{i32 590081, metadata !3412, metadata !"path", metadata !3075, i32 928, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5049 = metadata !{i32 590081, metadata !3412, metadata !"mode", metadata !3075, i32 928, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!5050 = metadata !{i32 590080, metadata !5051, metadata !"dfile", metadata !3075, i32 931, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!5051 = metadata !{i32 589835, metadata !3412, i32 928, i32 0, metadata !3075, i32 121} ; [ DW_TAG_lexical_block ]
!5052 = metadata !{i32 590080, metadata !5053, metadata !"r", metadata !3075, i32 943, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5053 = metadata !{i32 589835, metadata !5051, i32 943, i32 0, metadata !3075, i32 122} ; [ DW_TAG_lexical_block ]
!5054 = metadata !{i32 590081, metadata !3415, metadata !"path", metadata !3075, i32 771, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5055 = metadata !{i32 590081, metadata !3415, metadata !"buf", metadata !3075, i32 771, metadata !3103, i32 0} ; [ DW_TAG_arg_variable ]
!5056 = metadata !{i32 590080, metadata !5057, metadata !"dfile", metadata !3075, i32 772, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!5057 = metadata !{i32 589835, metadata !3415, i32 771, i32 0, metadata !3075, i32 123} ; [ DW_TAG_lexical_block ]
!5058 = metadata !{i32 590080, metadata !5057, metadata !"pathcpy", metadata !3075, i32 778, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!5059 = metadata !{i32 590080, metadata !5060, metadata !"r", metadata !3075, i32 782, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5060 = metadata !{i32 589835, metadata !5057, i32 782, i32 0, metadata !3075, i32 124} ; [ DW_TAG_lexical_block ]
!5061 = metadata !{i32 590081, metadata !3418, metadata !"path", metadata !3075, i32 742, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5062 = metadata !{i32 590081, metadata !3418, metadata !"buf", metadata !3075, i32 742, metadata !3103, i32 0} ; [ DW_TAG_arg_variable ]
!5063 = metadata !{i32 590080, metadata !5064, metadata !"dfile", metadata !3075, i32 743, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!5064 = metadata !{i32 589835, metadata !3418, i32 742, i32 0, metadata !3075, i32 125} ; [ DW_TAG_lexical_block ]
!5065 = metadata !{i32 590080, metadata !5064, metadata !"pathcpy", metadata !3075, i32 751, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!5066 = metadata !{i32 590080, metadata !5067, metadata !"r", metadata !3075, i32 755, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5067 = metadata !{i32 589835, metadata !5064, i32 755, i32 0, metadata !3075, i32 126} ; [ DW_TAG_lexical_block ]
!5068 = metadata !{i32 590081, metadata !3419, metadata !"fd", metadata !3075, i32 605, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5069 = metadata !{i32 590081, metadata !3419, metadata !"buf", metadata !3075, i32 605, metadata !3290, i32 0} ; [ DW_TAG_arg_variable ]
!5070 = metadata !{i32 590081, metadata !3419, metadata !"count", metadata !3075, i32 605, metadata !3180, i32 0} ; [ DW_TAG_arg_variable ]
!5071 = metadata !{i32 590080, metadata !5072, metadata !"f", metadata !3075, i32 607, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5072 = metadata !{i32 589835, metadata !3419, i32 605, i32 0, metadata !3075, i32 127} ; [ DW_TAG_lexical_block ]
!5073 = metadata !{i32 590080, metadata !5074, metadata !"r", metadata !3075, i32 624, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5074 = metadata !{i32 589835, metadata !5072, i32 625, i32 0, metadata !3075, i32 128} ; [ DW_TAG_lexical_block ]
!5075 = metadata !{i32 590080, metadata !5074, metadata !"cbuf", metadata !3075, i32 625, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!5076 = metadata !{i32 590080, metadata !5077, metadata !"actual_count", metadata !3075, i32 658, metadata !3180, i32 0} ; [ DW_TAG_auto_variable ]
!5077 = metadata !{i32 589835, metadata !5072, i32 658, i32 0, metadata !3075, i32 129} ; [ DW_TAG_lexical_block ]
!5078 = metadata !{i32 590081, metadata !3420, metadata !"__nptr", metadata !3421, i32 278, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5079 = metadata !{i32 590081, metadata !3422, metadata !"pathname", metadata !3075, i32 242, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5080 = metadata !{i32 590081, metadata !3422, metadata !"flags", metadata !3075, i32 242, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5081 = metadata !{i32 590081, metadata !3422, metadata !"mode", metadata !3075, i32 242, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!5082 = metadata !{i32 590080, metadata !5083, metadata !"df", metadata !3075, i32 243, metadata !3093, i32 0} ; [ DW_TAG_auto_variable ]
!5083 = metadata !{i32 589835, metadata !3422, i32 242, i32 0, metadata !3075, i32 131} ; [ DW_TAG_lexical_block ]
!5084 = metadata !{i32 590080, metadata !5083, metadata !"f", metadata !3075, i32 244, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5085 = metadata !{i32 590080, metadata !5083, metadata !"fd", metadata !3075, i32 245, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5086 = metadata !{i32 590080, metadata !5087, metadata !"os_fd", metadata !3075, i32 305, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5087 = metadata !{i32 589835, metadata !5083, i32 306, i32 0, metadata !3075, i32 132} ; [ DW_TAG_lexical_block ]
!5088 = metadata !{i32 590080, metadata !5089, metadata !"buffer", metadata !3075, i32 311, metadata !5090, i32 0} ; [ DW_TAG_auto_variable ]
!5089 = metadata !{i32 589835, metadata !5087, i32 312, i32 0, metadata !3075, i32 133} ; [ DW_TAG_lexical_block ]
!5090 = metadata !{i32 589825, metadata !3075, metadata !"", metadata !3075, i32 0, i64 8192, i64 8, i64 0, i32 0, metadata !3100, metadata !4448, i32 0, null} ; [ DW_TAG_array_type ]
!5091 = metadata !{i32 590080, metadata !5089, metadata !"runtime_fd", metadata !3075, i32 312, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5092 = metadata !{i32 590080, metadata !5089, metadata !"f", metadata !3075, i32 313, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5093 = metadata !{i32 590080, metadata !5094, metadata !"pathtail", metadata !3075, i32 315, metadata !3099, i32 0} ; [ DW_TAG_auto_variable ]
!5094 = metadata !{i32 589835, metadata !5089, i32 315, i32 0, metadata !3075, i32 134} ; [ DW_TAG_lexical_block ]
!5095 = metadata !{i32 590081, metadata !3425, metadata !"basefd", metadata !3075, i32 358, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5096 = metadata !{i32 590081, metadata !3425, metadata !"pathname", metadata !3075, i32 358, metadata !3188, i32 0} ; [ DW_TAG_arg_variable ]
!5097 = metadata !{i32 590081, metadata !3425, metadata !"flags", metadata !3075, i32 358, metadata !3085, i32 0} ; [ DW_TAG_arg_variable ]
!5098 = metadata !{i32 590081, metadata !3425, metadata !"mode", metadata !3075, i32 358, metadata !3170, i32 0} ; [ DW_TAG_arg_variable ]
!5099 = metadata !{i32 590080, metadata !5100, metadata !"f", metadata !3075, i32 359, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5100 = metadata !{i32 589835, metadata !3425, i32 358, i32 0, metadata !3075, i32 135} ; [ DW_TAG_lexical_block ]
!5101 = metadata !{i32 590080, metadata !5100, metadata !"fd", metadata !3075, i32 360, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5102 = metadata !{i32 590080, metadata !5100, metadata !"os_fd", metadata !3075, i32 393, metadata !3085, i32 0} ; [ DW_TAG_auto_variable ]
!5103 = metadata !{i32 590080, metadata !5104, metadata !"bf", metadata !3075, i32 362, metadata !3079, i32 0} ; [ DW_TAG_auto_variable ]
!5104 = metadata !{i32 589835, metadata !5100, i32 362, i32 0, metadata !3075, i32 136} ; [ DW_TAG_lexical_block ]
!5105 = metadata !{i32 590081, metadata !3428, metadata !"__dev", metadata !3429, i32 248, metadata !3434, i32 0} ; [ DW_TAG_arg_variable ]
!5106 = metadata !{i32 590081, metadata !3435, metadata !"__dev", metadata !3429, i32 253, metadata !3434, i32 0} ; [ DW_TAG_arg_variable ]
!5107 = metadata !{i32 590081, metadata !3436, metadata !"__major", metadata !3429, i32 258, metadata !3433, i32 0} ; [ DW_TAG_arg_variable ]
!5108 = metadata !{i32 590081, metadata !3436, metadata !"__minor", metadata !3429, i32 258, metadata !3433, i32 0} ; [ DW_TAG_arg_variable ]
!5109 = metadata !{i32 590081, metadata !3514, metadata !"sockfd", metadata !3440, i32 859, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5110 = metadata !{i32 590081, metadata !3514, metadata !"level", metadata !3440, i32 859, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5111 = metadata !{i32 590081, metadata !3514, metadata !"optname", metadata !3440, i32 859, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5112 = metadata !{i32 590081, metadata !3514, metadata !"optval", metadata !3440, i32 860, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5113 = metadata !{i32 590081, metadata !3514, metadata !"optlen", metadata !3440, i32 860, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5114 = metadata !{i32 590081, metadata !3519, metadata !"sockfd", metadata !3440, i32 865, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5115 = metadata !{i32 590081, metadata !3519, metadata !"level", metadata !3440, i32 865, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5116 = metadata !{i32 590081, metadata !3519, metadata !"optname", metadata !3440, i32 865, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5117 = metadata !{i32 590081, metadata !3519, metadata !"optval", metadata !3440, i32 866, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5118 = metadata !{i32 590081, metadata !3519, metadata !"optlen", metadata !3440, i32 866, metadata !3511, i32 0} ; [ DW_TAG_arg_variable ]
!5119 = metadata !{i32 590081, metadata !3522, metadata !"f", metadata !3440, i32 837, metadata !3527, i32 0} ; [ DW_TAG_arg_variable ]
!5120 = metadata !{i32 590081, metadata !3539, metadata !"path_p", metadata !3429, i32 592, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5121 = metadata !{i32 590081, metadata !3548, metadata !"b", metadata !3429, i32 585, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5122 = metadata !{i32 590081, metadata !3551, metadata !"a", metadata !3429, i32 579, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5123 = metadata !{i32 590081, metadata !3551, metadata !"b", metadata !3429, i32 579, metadata !3450, i32 0} ; [ DW_TAG_arg_variable ]
!5124 = metadata !{i32 590081, metadata !3554, metadata !"clk_id", metadata !3429, i32 171, metadata !3557, i32 0} ; [ DW_TAG_arg_variable ]
!5125 = metadata !{i32 590081, metadata !3554, metadata !"res", metadata !3429, i32 171, metadata !3558, i32 0} ; [ DW_TAG_arg_variable ]
!5126 = metadata !{i32 590081, metadata !3560, metadata !"fd", metadata !3440, i32 798, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5127 = metadata !{i32 590081, metadata !3560, metadata !"msg", metadata !3440, i32 798, metadata !3563, i32 0} ; [ DW_TAG_arg_variable ]
!5128 = metadata !{i32 590081, metadata !3560, metadata !"flags", metadata !3440, i32 798, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5129 = metadata !{i32 590080, metadata !5130, metadata !"f", metadata !3440, i32 800, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5130 = metadata !{i32 589835, metadata !3560, i32 799, i32 0, metadata !3440, i32 12} ; [ DW_TAG_lexical_block ]
!5131 = metadata !{i32 589839, metadata !3429, metadata !"", metadata !3429, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5132} ; [ DW_TAG_pointer_type ]
!5132 = metadata !{i32 589846, metadata !3445, metadata !"exe_file_t", metadata !3445, i32 59, i64 0, i64 0, i64 0, i32 0, metadata !3528} ; [ DW_TAG_typedef ]
!5133 = metadata !{i32 590081, metadata !3581, metadata !"fd", metadata !3440, i32 793, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5134 = metadata !{i32 590081, metadata !3581, metadata !"msg", metadata !3440, i32 793, metadata !3563, i32 0} ; [ DW_TAG_arg_variable ]
!5135 = metadata !{i32 590081, metadata !3581, metadata !"flags", metadata !3440, i32 793, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5136 = metadata !{i32 590081, metadata !3582, metadata !"fd", metadata !3440, i32 705, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5137 = metadata !{i32 590081, metadata !3582, metadata !"buf", metadata !3440, i32 705, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5138 = metadata !{i32 590081, metadata !3582, metadata !"len", metadata !3440, i32 705, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5139 = metadata !{i32 590081, metadata !3582, metadata !"flags", metadata !3440, i32 705, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5140 = metadata !{i32 590081, metadata !3582, metadata !"from", metadata !3440, i32 705, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5141 = metadata !{i32 590081, metadata !3582, metadata !"fromlen", metadata !3440, i32 705, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5142 = metadata !{i32 590080, metadata !5143, metadata !"iov", metadata !3440, i32 707, metadata !3570, i32 0} ; [ DW_TAG_auto_variable ]
!5143 = metadata !{i32 589835, metadata !3582, i32 706, i32 0, metadata !3440, i32 14} ; [ DW_TAG_lexical_block ]
!5144 = metadata !{i32 590080, metadata !5143, metadata !"msg", metadata !3440, i32 708, metadata !3564, i32 0} ; [ DW_TAG_auto_variable ]
!5145 = metadata !{i32 590080, metadata !5143, metadata !"s", metadata !3440, i32 709, metadata !3525, i32 0} ; [ DW_TAG_auto_variable ]
!5146 = metadata !{i32 590081, metadata !3593, metadata !"fd", metadata !3440, i32 700, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5147 = metadata !{i32 590081, metadata !3593, metadata !"buf", metadata !3440, i32 700, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5148 = metadata !{i32 590081, metadata !3593, metadata !"len", metadata !3440, i32 700, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5149 = metadata !{i32 590081, metadata !3593, metadata !"flags", metadata !3440, i32 700, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5150 = metadata !{i32 590081, metadata !3593, metadata !"from", metadata !3440, i32 700, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5151 = metadata !{i32 590081, metadata !3593, metadata !"fromlen", metadata !3440, i32 700, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5152 = metadata !{i32 590081, metadata !3594, metadata !"fd", metadata !3440, i32 671, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5153 = metadata !{i32 590081, metadata !3594, metadata !"buf", metadata !3440, i32 671, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5154 = metadata !{i32 590081, metadata !3594, metadata !"len", metadata !3440, i32 671, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5155 = metadata !{i32 590081, metadata !3594, metadata !"flags", metadata !3440, i32 671, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5156 = metadata !{i32 590081, metadata !3597, metadata !"fd", metadata !3440, i32 667, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5157 = metadata !{i32 590081, metadata !3597, metadata !"buf", metadata !3440, i32 667, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5158 = metadata !{i32 590081, metadata !3597, metadata !"len", metadata !3440, i32 667, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5159 = metadata !{i32 590081, metadata !3597, metadata !"flags", metadata !3440, i32 667, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5160 = metadata !{i32 590081, metadata !3598, metadata !"fd", metadata !3440, i32 739, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5161 = metadata !{i32 590081, metadata !3598, metadata !"msg", metadata !3440, i32 739, metadata !3601, i32 0} ; [ DW_TAG_arg_variable ]
!5162 = metadata !{i32 590081, metadata !3598, metadata !"flags", metadata !3440, i32 739, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5163 = metadata !{i32 590080, metadata !5164, metadata !"f", metadata !3440, i32 741, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5164 = metadata !{i32 589835, metadata !3598, i32 740, i32 0, metadata !3440, i32 18} ; [ DW_TAG_lexical_block ]
!5165 = metadata !{i32 590081, metadata !3603, metadata !"fd", metadata !3440, i32 734, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5166 = metadata !{i32 590081, metadata !3603, metadata !"msg", metadata !3440, i32 734, metadata !3601, i32 0} ; [ DW_TAG_arg_variable ]
!5167 = metadata !{i32 590081, metadata !3603, metadata !"flags", metadata !3440, i32 734, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5168 = metadata !{i32 590081, metadata !3604, metadata !"fd", metadata !3440, i32 681, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5169 = metadata !{i32 590081, metadata !3604, metadata !"buf", metadata !3440, i32 681, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5170 = metadata !{i32 590081, metadata !3604, metadata !"len", metadata !3440, i32 681, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5171 = metadata !{i32 590081, metadata !3604, metadata !"flags", metadata !3440, i32 681, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5172 = metadata !{i32 590081, metadata !3604, metadata !"to", metadata !3440, i32 681, metadata !3607, i32 0} ; [ DW_TAG_arg_variable ]
!5173 = metadata !{i32 590081, metadata !3604, metadata !"tolen", metadata !3440, i32 681, metadata !3511, i32 0} ; [ DW_TAG_arg_variable ]
!5174 = metadata !{i32 590080, metadata !5175, metadata !"iov", metadata !3440, i32 683, metadata !3570, i32 0} ; [ DW_TAG_auto_variable ]
!5175 = metadata !{i32 589835, metadata !3604, i32 682, i32 0, metadata !3440, i32 20} ; [ DW_TAG_lexical_block ]
!5176 = metadata !{i32 590080, metadata !5175, metadata !"msg", metadata !3440, i32 684, metadata !3564, i32 0} ; [ DW_TAG_auto_variable ]
!5177 = metadata !{i32 590081, metadata !3609, metadata !"fd", metadata !3440, i32 676, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5178 = metadata !{i32 590081, metadata !3609, metadata !"buf", metadata !3440, i32 676, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5179 = metadata !{i32 590081, metadata !3609, metadata !"len", metadata !3440, i32 676, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5180 = metadata !{i32 590081, metadata !3609, metadata !"flags", metadata !3440, i32 676, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5181 = metadata !{i32 590081, metadata !3609, metadata !"to", metadata !3440, i32 676, metadata !3607, i32 0} ; [ DW_TAG_arg_variable ]
!5182 = metadata !{i32 590081, metadata !3609, metadata !"tolen", metadata !3440, i32 676, metadata !3511, i32 0} ; [ DW_TAG_arg_variable ]
!5183 = metadata !{i32 590081, metadata !3610, metadata !"fd", metadata !3440, i32 662, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5184 = metadata !{i32 590081, metadata !3610, metadata !"buf", metadata !3440, i32 662, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5185 = metadata !{i32 590081, metadata !3610, metadata !"len", metadata !3440, i32 662, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5186 = metadata !{i32 590081, metadata !3610, metadata !"flags", metadata !3440, i32 662, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5187 = metadata !{i32 590081, metadata !3611, metadata !"fd", metadata !3440, i32 658, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5188 = metadata !{i32 590081, metadata !3611, metadata !"buf", metadata !3440, i32 658, metadata !3517, i32 0} ; [ DW_TAG_arg_variable ]
!5189 = metadata !{i32 590081, metadata !3611, metadata !"len", metadata !3440, i32 658, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5190 = metadata !{i32 590081, metadata !3611, metadata !"flags", metadata !3440, i32 658, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5191 = metadata !{i32 590081, metadata !3612, metadata !"sockfd", metadata !3440, i32 615, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5192 = metadata !{i32 590081, metadata !3612, metadata !"how", metadata !3440, i32 615, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5193 = metadata !{i32 590080, metadata !5194, metadata !"f", metadata !3440, i32 616, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5194 = metadata !{i32 589835, metadata !3612, i32 615, i32 0, metadata !3440, i32 24} ; [ DW_TAG_lexical_block ]
!5195 = metadata !{i32 590080, metadata !5196, metadata !"os_r", metadata !3440, i32 645, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5196 = metadata !{i32 589835, metadata !5194, i32 647, i32 0, metadata !3440, i32 25} ; [ DW_TAG_lexical_block ]
!5197 = metadata !{i32 590081, metadata !3615, metadata !"args", metadata !3440, i32 609, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5198 = metadata !{i32 590080, metadata !5199, metadata !"sockfd", metadata !3440, i32 610, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5199 = metadata !{i32 589835, metadata !3615, i32 609, i32 0, metadata !3440, i32 26} ; [ DW_TAG_lexical_block ]
!5200 = metadata !{i32 590080, metadata !5199, metadata !"how", metadata !3440, i32 611, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5201 = metadata !{i32 590081, metadata !3619, metadata !"sockfd", metadata !3440, i32 571, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5202 = metadata !{i32 590081, metadata !3619, metadata !"addr", metadata !3440, i32 571, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5203 = metadata !{i32 590081, metadata !3619, metadata !"addrlen", metadata !3440, i32 571, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5204 = metadata !{i32 590080, metadata !5205, metadata !"os_r", metadata !3440, i32 572, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5205 = metadata !{i32 589835, metadata !3619, i32 571, i32 0, metadata !3440, i32 27} ; [ DW_TAG_lexical_block ]
!5206 = metadata !{i32 590080, metadata !5205, metadata !"f", metadata !3440, i32 573, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5207 = metadata !{i32 590081, metadata !3622, metadata !"args", metadata !3440, i32 563, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5208 = metadata !{i32 590080, metadata !5209, metadata !"sockfd", metadata !3440, i32 565, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5209 = metadata !{i32 589835, metadata !3622, i32 564, i32 0, metadata !3440, i32 28} ; [ DW_TAG_lexical_block ]
!5210 = metadata !{i32 590080, metadata !5209, metadata !"addr", metadata !3440, i32 566, metadata !3585, i32 0} ; [ DW_TAG_auto_variable ]
!5211 = metadata !{i32 590080, metadata !5209, metadata !"addrlen", metadata !3440, i32 567, metadata !3518, i32 0} ; [ DW_TAG_auto_variable ]
!5212 = metadata !{i32 590081, metadata !3623, metadata !"sockfd", metadata !3440, i32 527, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5213 = metadata !{i32 590081, metadata !3623, metadata !"addr", metadata !3440, i32 527, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5214 = metadata !{i32 590081, metadata !3623, metadata !"addrlen", metadata !3440, i32 527, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5215 = metadata !{i32 590080, metadata !5216, metadata !"f", metadata !3440, i32 528, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5216 = metadata !{i32 589835, metadata !3623, i32 527, i32 0, metadata !3440, i32 29} ; [ DW_TAG_lexical_block ]
!5217 = metadata !{i32 590080, metadata !5216, metadata !"os_r", metadata !3440, i32 529, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5218 = metadata !{i32 590081, metadata !3624, metadata !"args", metadata !3440, i32 518, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5219 = metadata !{i32 590080, metadata !5220, metadata !"sockfd", metadata !3440, i32 520, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5220 = metadata !{i32 589835, metadata !3624, i32 519, i32 0, metadata !3440, i32 30} ; [ DW_TAG_lexical_block ]
!5221 = metadata !{i32 590080, metadata !5220, metadata !"addr", metadata !3440, i32 521, metadata !3585, i32 0} ; [ DW_TAG_auto_variable ]
!5222 = metadata !{i32 590080, metadata !5220, metadata !"addrlen", metadata !3440, i32 522, metadata !3518, i32 0} ; [ DW_TAG_auto_variable ]
!5223 = metadata !{i32 590081, metadata !3625, metadata !"sockfd", metadata !3440, i32 375, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5224 = metadata !{i32 590081, metadata !3625, metadata !"backlog", metadata !3440, i32 375, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5225 = metadata !{i32 590080, metadata !5226, metadata !"os_r", metadata !3440, i32 376, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5226 = metadata !{i32 589835, metadata !3625, i32 375, i32 0, metadata !3440, i32 31} ; [ DW_TAG_lexical_block ]
!5227 = metadata !{i32 590080, metadata !5226, metadata !"f", metadata !3440, i32 377, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5228 = metadata !{i32 590081, metadata !3626, metadata !"args", metadata !3440, i32 368, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5229 = metadata !{i32 590080, metadata !5230, metadata !"sockfd", metadata !3440, i32 369, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5230 = metadata !{i32 589835, metadata !3626, i32 368, i32 0, metadata !3440, i32 32} ; [ DW_TAG_lexical_block ]
!5231 = metadata !{i32 590080, metadata !5230, metadata !"backlog", metadata !3440, i32 370, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5232 = metadata !{i32 590081, metadata !3627, metadata !"sockfd", metadata !3440, i32 319, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5233 = metadata !{i32 590081, metadata !3627, metadata !"addr", metadata !3440, i32 319, metadata !3607, i32 0} ; [ DW_TAG_arg_variable ]
!5234 = metadata !{i32 590081, metadata !3627, metadata !"addrlen", metadata !3440, i32 319, metadata !3511, i32 0} ; [ DW_TAG_arg_variable ]
!5235 = metadata !{i32 590080, metadata !5236, metadata !"os_r", metadata !3440, i32 320, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5236 = metadata !{i32 589835, metadata !3627, i32 319, i32 0, metadata !3440, i32 33} ; [ DW_TAG_lexical_block ]
!5237 = metadata !{i32 590080, metadata !5236, metadata !"f", metadata !3440, i32 321, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5238 = metadata !{i32 590081, metadata !3630, metadata !"args", metadata !3440, i32 312, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5239 = metadata !{i32 590080, metadata !5240, metadata !"sockfd", metadata !3440, i32 313, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5240 = metadata !{i32 589835, metadata !3630, i32 312, i32 0, metadata !3440, i32 34} ; [ DW_TAG_lexical_block ]
!5241 = metadata !{i32 590080, metadata !5240, metadata !"addr", metadata !3440, i32 314, metadata !3607, i32 0} ; [ DW_TAG_auto_variable ]
!5242 = metadata !{i32 590080, metadata !5240, metadata !"addrlen", metadata !3440, i32 315, metadata !3511, i32 0} ; [ DW_TAG_auto_variable ]
!5243 = metadata !{i32 590081, metadata !3631, metadata !"sockfd", metadata !3440, i32 267, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5244 = metadata !{i32 590081, metadata !3631, metadata !"addr", metadata !3440, i32 267, metadata !3607, i32 0} ; [ DW_TAG_arg_variable ]
!5245 = metadata !{i32 590081, metadata !3631, metadata !"addrlen", metadata !3440, i32 267, metadata !3511, i32 0} ; [ DW_TAG_arg_variable ]
!5246 = metadata !{i32 590080, metadata !5247, metadata !"os_r", metadata !3440, i32 268, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5247 = metadata !{i32 589835, metadata !3631, i32 267, i32 0, metadata !3440, i32 35} ; [ DW_TAG_lexical_block ]
!5248 = metadata !{i32 590080, metadata !5247, metadata !"f", metadata !3440, i32 269, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5249 = metadata !{i32 590081, metadata !3632, metadata !"args", metadata !3440, i32 259, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5250 = metadata !{i32 590080, metadata !5251, metadata !"sockfd", metadata !3440, i32 260, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5251 = metadata !{i32 589835, metadata !3632, i32 259, i32 0, metadata !3440, i32 36} ; [ DW_TAG_lexical_block ]
!5252 = metadata !{i32 590080, metadata !5251, metadata !"addr", metadata !3440, i32 261, metadata !3607, i32 0} ; [ DW_TAG_auto_variable ]
!5253 = metadata !{i32 590080, metadata !5251, metadata !"addrlen", metadata !3440, i32 262, metadata !3511, i32 0} ; [ DW_TAG_auto_variable ]
!5254 = metadata !{i32 590081, metadata !3633, metadata !"oldpath", metadata !3429, i32 144, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5255 = metadata !{i32 590081, metadata !3633, metadata !"newpath", metadata !3429, i32 144, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5256 = metadata !{i32 590080, metadata !5257, metadata !"r", metadata !3429, i32 147, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5257 = metadata !{i32 589835, metadata !3633, i32 144, i32 0, metadata !3429, i32 37} ; [ DW_TAG_lexical_block ]
!5258 = metadata !{i32 590081, metadata !3636, metadata !"domain", metadata !3440, i32 106, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5259 = metadata !{i32 590081, metadata !3636, metadata !"a", metadata !3440, i32 106, metadata !3495, i32 0} ; [ DW_TAG_arg_variable ]
!5260 = metadata !{i32 590081, metadata !3639, metadata !"sockfd", metadata !3440, i32 413, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5261 = metadata !{i32 590081, metadata !3639, metadata !"addr", metadata !3440, i32 413, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5262 = metadata !{i32 590081, metadata !3639, metadata !"addrlen", metadata !3440, i32 413, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5263 = metadata !{i32 590080, metadata !5264, metadata !"connfd", metadata !3440, i32 414, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5264 = metadata !{i32 589835, metadata !3639, i32 413, i32 0, metadata !3440, i32 39} ; [ DW_TAG_lexical_block ]
!5265 = metadata !{i32 590080, metadata !5264, metadata !"connf", metadata !3440, i32 415, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5266 = metadata !{i32 590080, metadata !5264, metadata !"f", metadata !3440, i32 416, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5267 = metadata !{i32 590080, metadata !5268, metadata !"fchild", metadata !3440, i32 498, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5268 = metadata !{i32 589835, metadata !5264, i32 499, i32 0, metadata !3440, i32 40} ; [ DW_TAG_lexical_block ]
!5269 = metadata !{i32 590080, metadata !5268, metadata !"fd", metadata !3440, i32 499, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5270 = metadata !{i32 590080, metadata !5268, metadata !"os_r", metadata !3440, i32 504, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5271 = metadata !{i32 590081, metadata !3640, metadata !"sockfd", metadata !3440, i32 409, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5272 = metadata !{i32 590081, metadata !3640, metadata !"addr", metadata !3440, i32 409, metadata !3585, i32 0} ; [ DW_TAG_arg_variable ]
!5273 = metadata !{i32 590081, metadata !3640, metadata !"addrlen", metadata !3440, i32 409, metadata !3518, i32 0} ; [ DW_TAG_arg_variable ]
!5274 = metadata !{i32 590081, metadata !3641, metadata !"domain", metadata !3440, i32 141, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5275 = metadata !{i32 590081, metadata !3641, metadata !"type", metadata !3440, i32 141, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5276 = metadata !{i32 590081, metadata !3641, metadata !"protocol", metadata !3440, i32 141, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5277 = metadata !{i32 590080, metadata !5278, metadata !"fd", metadata !3440, i32 142, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5278 = metadata !{i32 589835, metadata !3641, i32 141, i32 0, metadata !3440, i32 42} ; [ DW_TAG_lexical_block ]
!5279 = metadata !{i32 590080, metadata !5278, metadata !"f", metadata !3440, i32 143, metadata !5131, i32 0} ; [ DW_TAG_auto_variable ]
!5280 = metadata !{i32 590080, metadata !5281, metadata !"os_r", metadata !3440, i32 153, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5281 = metadata !{i32 589835, metadata !5278, i32 146, i32 0, metadata !3440, i32 43} ; [ DW_TAG_lexical_block ]
!5282 = metadata !{i32 590081, metadata !3644, metadata !"args", metadata !3440, i32 132, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5283 = metadata !{i32 590080, metadata !5284, metadata !"domain", metadata !3440, i32 134, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5284 = metadata !{i32 589835, metadata !3644, i32 132, i32 0, metadata !3440, i32 44} ; [ DW_TAG_lexical_block ]
!5285 = metadata !{i32 590080, metadata !5284, metadata !"type", metadata !3440, i32 135, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5286 = metadata !{i32 590080, metadata !5284, metadata !"protocol", metadata !3440, i32 136, metadata !3473, i32 0} ; [ DW_TAG_auto_variable ]
!5287 = metadata !{i32 590081, metadata !3645, metadata !"type", metadata !3440, i32 25, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5288 = metadata !{i32 590081, metadata !3645, metadata !"args", metadata !3440, i32 25, metadata !3618, i32 0} ; [ DW_TAG_arg_variable ]
!5289 = metadata !{i32 590081, metadata !3648, metadata !"name", metadata !3429, i32 265, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5290 = metadata !{i32 590081, metadata !3649, metadata !"__s1", metadata !3429, i32 243, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5291 = metadata !{i32 590081, metadata !3649, metadata !"__s2", metadata !3429, i32 243, metadata !3546, i32 0} ; [ DW_TAG_arg_variable ]
!5292 = metadata !{i32 590080, metadata !5293, metadata !"__s1_len", metadata !3429, i32 244, metadata !3575, i32 0} ; [ DW_TAG_auto_variable ]
!5293 = metadata !{i32 589835, metadata !5294, i32 243, i32 0, metadata !3429, i32 48} ; [ DW_TAG_lexical_block ]
!5294 = metadata !{i32 589835, metadata !3649, i32 243, i32 0, metadata !3429, i32 47} ; [ DW_TAG_lexical_block ]
!5295 = metadata !{i32 590080, metadata !5293, metadata !"__s2_len", metadata !3429, i32 244, metadata !3575, i32 0} ; [ DW_TAG_auto_variable ]
!5296 = metadata !{i32 590081, metadata !3650, metadata !"clk_id", metadata !3429, i32 162, metadata !3557, i32 0} ; [ DW_TAG_arg_variable ]
!5297 = metadata !{i32 590081, metadata !3650, metadata !"res", metadata !3429, i32 162, metadata !3653, i32 0} ; [ DW_TAG_arg_variable ]
!5298 = metadata !{i32 590080, metadata !5299, metadata !"tv", metadata !3429, i32 163, metadata !5300, i32 0} ; [ DW_TAG_auto_variable ]
!5299 = metadata !{i32 589835, metadata !3650, i32 162, i32 0, metadata !3429, i32 49} ; [ DW_TAG_lexical_block ]
!5300 = metadata !{i32 589843, metadata !3429, metadata !"timeval", metadata !5301, i32 31, i64 128, i64 64, i64 0, i32 0, null, metadata !5302, i32 0, null} ; [ DW_TAG_structure_type ]
!5301 = metadata !{i32 589865, metadata !"time.h", metadata !"/usr/include/x86_64-linux-gnu/bits", metadata !3430} ; [ DW_TAG_file_type ]
!5302 = metadata !{metadata !5303, metadata !5304}
!5303 = metadata !{i32 589837, metadata !5300, metadata !"tv_sec", metadata !5301, i32 32, i64 64, i64 64, i64 0, i32 0, metadata !3487} ; [ DW_TAG_member ]
!5304 = metadata !{i32 589837, metadata !5300, metadata !"tv_usec", metadata !5301, i32 33, i64 64, i64 64, i64 64, i32 0, metadata !5305} ; [ DW_TAG_member ]
!5305 = metadata !{i32 589846, metadata !3460, metadata !"__suseconds_t", metadata !3460, i32 143, i64 0, i64 0, i64 0, i32 0, metadata !3477} ; [ DW_TAG_typedef ]
!5306 = metadata !{i32 590081, metadata !3654, metadata !"c", metadata !3429, i32 96, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5307 = metadata !{i32 590081, metadata !3654, metadata !"f", metadata !3429, i32 96, metadata !3657, i32 0} ; [ DW_TAG_arg_variable ]
!5308 = metadata !{i32 590081, metadata !3702, metadata !"f", metadata !3429, i32 91, metadata !3657, i32 0} ; [ DW_TAG_arg_variable ]
!5309 = metadata !{i32 590081, metadata !3705, metadata !"signum", metadata !3429, i32 43, metadata !3473, i32 0} ; [ DW_TAG_arg_variable ]
!5310 = metadata !{i32 590081, metadata !3705, metadata !"act", metadata !3429, i32 43, metadata !3708, i32 0} ; [ DW_TAG_arg_variable ]
!5311 = metadata !{i32 590081, metadata !3705, metadata !"oldact", metadata !3429, i32 44, metadata !3799, i32 0} ; [ DW_TAG_arg_variable ]
!5312 = metadata !{i32 590081, metadata !3705, metadata !"_something", metadata !3429, i32 44, metadata !3575, i32 0} ; [ DW_TAG_arg_variable ]
!5313 = metadata !{i32 590081, metadata !3800, metadata !"a", metadata !3801, i32 42, metadata !3805, i32 0} ; [ DW_TAG_arg_variable ]
!5314 = metadata !{i32 590081, metadata !3800, metadata !"b", metadata !3801, i32 42, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5315 = metadata !{i32 590081, metadata !3867, metadata !"fd", metadata !3801, i32 207, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5316 = metadata !{i32 590081, metadata !3867, metadata !"buf", metadata !3801, i32 207, metadata !3805, i32 0} ; [ DW_TAG_arg_variable ]
!5317 = metadata !{i32 590081, metadata !3870, metadata !"fd", metadata !3801, i32 119, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5318 = metadata !{i32 590081, metadata !3870, metadata !"buf", metadata !3801, i32 119, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5319 = metadata !{i32 590080, metadata !5320, metadata !"tmp", metadata !3801, i32 120, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5320 = metadata !{i32 589835, metadata !3870, i32 119, i32 0, metadata !3801, i32 2} ; [ DW_TAG_lexical_block ]
!5321 = metadata !{i32 590080, metadata !5320, metadata !"res", metadata !3801, i32 121, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5322 = metadata !{i32 590081, metadata !3873, metadata !"vers", metadata !3801, i32 112, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5323 = metadata !{i32 590081, metadata !3873, metadata !"fd", metadata !3801, i32 112, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5324 = metadata !{i32 590081, metadata !3873, metadata !"buf", metadata !3801, i32 112, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5325 = metadata !{i32 590080, metadata !5326, metadata !"tmp", metadata !3801, i32 113, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5326 = metadata !{i32 589835, metadata !3873, i32 112, i32 0, metadata !3801, i32 3} ; [ DW_TAG_lexical_block ]
!5327 = metadata !{i32 590080, metadata !5326, metadata !"res", metadata !3801, i32 114, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5328 = metadata !{i32 590081, metadata !3876, metadata !"path", metadata !3801, i32 203, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5329 = metadata !{i32 590081, metadata !3876, metadata !"buf", metadata !3801, i32 203, metadata !3805, i32 0} ; [ DW_TAG_arg_variable ]
!5330 = metadata !{i32 590081, metadata !3882, metadata !"path", metadata !3801, i32 105, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5331 = metadata !{i32 590081, metadata !3882, metadata !"buf", metadata !3801, i32 105, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5332 = metadata !{i32 590080, metadata !5333, metadata !"tmp", metadata !3801, i32 106, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5333 = metadata !{i32 589835, metadata !3882, i32 105, i32 0, metadata !3801, i32 5} ; [ DW_TAG_lexical_block ]
!5334 = metadata !{i32 590080, metadata !5333, metadata !"res", metadata !3801, i32 107, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5335 = metadata !{i32 590081, metadata !3885, metadata !"vers", metadata !3801, i32 98, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5336 = metadata !{i32 590081, metadata !3885, metadata !"path", metadata !3801, i32 98, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5337 = metadata !{i32 590081, metadata !3885, metadata !"buf", metadata !3801, i32 98, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5338 = metadata !{i32 590080, metadata !5339, metadata !"tmp", metadata !3801, i32 99, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5339 = metadata !{i32 589835, metadata !3885, i32 98, i32 0, metadata !3801, i32 6} ; [ DW_TAG_lexical_block ]
!5340 = metadata !{i32 590080, metadata !5339, metadata !"res", metadata !3801, i32 100, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5341 = metadata !{i32 590081, metadata !3888, metadata !"path", metadata !3801, i32 199, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5342 = metadata !{i32 590081, metadata !3888, metadata !"buf", metadata !3801, i32 199, metadata !3805, i32 0} ; [ DW_TAG_arg_variable ]
!5343 = metadata !{i32 590081, metadata !3952, metadata !"__path", metadata !3955, i32 502, metadata !3959, i32 0} ; [ DW_TAG_arg_variable ]
!5344 = metadata !{i32 590081, metadata !3952, metadata !"__statbuf", metadata !3955, i32 502, metadata !3962, i32 0} ; [ DW_TAG_arg_variable ]
!5345 = metadata !{i32 590081, metadata !4076, metadata !"__path", metadata !4077, i32 502, metadata !4080, i32 0} ; [ DW_TAG_arg_variable ]
!5346 = metadata !{i32 590081, metadata !4076, metadata !"__statbuf", metadata !4077, i32 502, metadata !4082, i32 0} ; [ DW_TAG_arg_variable ]
!5347 = metadata !{i32 590081, metadata !3889, metadata !"path", metadata !3801, i32 91, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5348 = metadata !{i32 590081, metadata !3889, metadata !"buf", metadata !3801, i32 91, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5349 = metadata !{i32 590080, metadata !5350, metadata !"tmp", metadata !3801, i32 92, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5350 = metadata !{i32 589835, metadata !3889, i32 91, i32 0, metadata !3801, i32 8} ; [ DW_TAG_lexical_block ]
!5351 = metadata !{i32 590080, metadata !5350, metadata !"res", metadata !3801, i32 93, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5352 = metadata !{i32 590081, metadata !3890, metadata !"vers", metadata !3801, i32 84, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5353 = metadata !{i32 590081, metadata !3890, metadata !"path", metadata !3801, i32 84, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5354 = metadata !{i32 590081, metadata !3890, metadata !"buf", metadata !3801, i32 84, metadata !3847, i32 0} ; [ DW_TAG_arg_variable ]
!5355 = metadata !{i32 590080, metadata !5356, metadata !"tmp", metadata !3801, i32 85, metadata !3806, i32 0} ; [ DW_TAG_auto_variable ]
!5356 = metadata !{i32 589835, metadata !3890, i32 84, i32 0, metadata !3801, i32 9} ; [ DW_TAG_lexical_block ]
!5357 = metadata !{i32 590080, metadata !5356, metadata !"res", metadata !3801, i32 86, metadata !3826, i32 0} ; [ DW_TAG_auto_variable ]
!5358 = metadata !{i32 590081, metadata !3891, metadata !"fd", metadata !3801, i32 195, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5359 = metadata !{i32 590081, metadata !3891, metadata !"off", metadata !3801, i32 195, metadata !3894, i32 0} ; [ DW_TAG_arg_variable ]
!5360 = metadata !{i32 590081, metadata !3891, metadata !"whence", metadata !3801, i32 195, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5361 = metadata !{i32 590081, metadata !3896, metadata !"fd", metadata !3801, i32 80, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5362 = metadata !{i32 590081, metadata !3896, metadata !"off", metadata !3801, i32 80, metadata !3899, i32 0} ; [ DW_TAG_arg_variable ]
!5363 = metadata !{i32 590081, metadata !3896, metadata !"whence", metadata !3801, i32 80, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5364 = metadata !{i32 590081, metadata !3900, metadata !"pathname", metadata !3801, i32 181, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5365 = metadata !{i32 590081, metadata !3900, metadata !"flags", metadata !3801, i32 181, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5366 = metadata !{i32 590080, metadata !5367, metadata !"mode", metadata !3801, i32 182, metadata !5368, i32 0} ; [ DW_TAG_auto_variable ]
!5367 = metadata !{i32 589835, metadata !3900, i32 181, i32 0, metadata !3801, i32 12} ; [ DW_TAG_lexical_block ]
!5368 = metadata !{i32 589846, metadata !3895, metadata !"mode_t", metadata !3895, i32 75, i64 0, i64 0, i64 0, i32 0, metadata !3820} ; [ DW_TAG_typedef ]
!5369 = metadata !{i32 590080, metadata !5370, metadata !"ap", metadata !3801, i32 186, metadata !5371, i32 0} ; [ DW_TAG_auto_variable ]
!5370 = metadata !{i32 589835, metadata !5367, i32 187, i32 0, metadata !3801, i32 13} ; [ DW_TAG_lexical_block ]
!5371 = metadata !{i32 589846, metadata !5372, metadata !"va_list", metadata !5372, i32 110, i64 0, i64 0, i64 0, i32 0, metadata !5373} ; [ DW_TAG_typedef ]
!5372 = metadata !{i32 589865, metadata !"stdio.h", metadata !"/usr/include", metadata !3802} ; [ DW_TAG_file_type ]
!5373 = metadata !{i32 589825, metadata !3801, metadata !"", metadata !3801, i32 0, i64 192, i64 64, i64 0, i32 0, metadata !5374, metadata !2031, i32 0, null} ; [ DW_TAG_array_type ]
!5374 = metadata !{i32 589843, metadata !3801, metadata !"__va_list_tag", metadata !5375, i32 0, i64 192, i64 64, i64 0, i32 0, null, metadata !5376, i32 0, null} ; [ DW_TAG_structure_type ]
!5375 = metadata !{i32 589865, metadata !"<built-in>", metadata !"/home/shadowvm/shadow/klee-change/runtime/POSIX/", metadata !3802} ; [ DW_TAG_file_type ]
!5376 = metadata !{metadata !5377, metadata !5378, metadata !5379, metadata !5381}
!5377 = metadata !{i32 589837, metadata !5374, metadata !"gp_offset", metadata !5375, i32 0, i64 32, i64 32, i64 0, i32 0, metadata !3820} ; [ DW_TAG_member ]
!5378 = metadata !{i32 589837, metadata !5374, metadata !"fp_offset", metadata !5375, i32 0, i64 32, i64 32, i64 32, i32 0, metadata !3820} ; [ DW_TAG_member ]
!5379 = metadata !{i32 589837, metadata !5374, metadata !"overflow_arg_area", metadata !5375, i32 0, i64 64, i64 64, i64 64, i32 0, metadata !5380} ; [ DW_TAG_member ]
!5380 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, null} ; [ DW_TAG_pointer_type ]
!5381 = metadata !{i32 589837, metadata !5374, metadata !"reg_save_area", metadata !5375, i32 0, i64 64, i64 64, i64 128, i32 0, metadata !5380} ; [ DW_TAG_member ]
!5382 = metadata !{i32 590081, metadata !3903, metadata !"pathname", metadata !3801, i32 66, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5383 = metadata !{i32 590081, metadata !3903, metadata !"flags", metadata !3801, i32 66, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5384 = metadata !{i32 590080, metadata !5385, metadata !"mode", metadata !3801, i32 67, metadata !5368, i32 0} ; [ DW_TAG_auto_variable ]
!5385 = metadata !{i32 589835, metadata !3903, i32 66, i32 0, metadata !3801, i32 14} ; [ DW_TAG_lexical_block ]
!5386 = metadata !{i32 590080, metadata !5387, metadata !"ap", metadata !3801, i32 71, metadata !5371, i32 0} ; [ DW_TAG_auto_variable ]
!5387 = metadata !{i32 589835, metadata !5385, i32 72, i32 0, metadata !3801, i32 15} ; [ DW_TAG_lexical_block ]
!5388 = metadata !{i32 590081, metadata !3904, metadata !"fd", metadata !3801, i32 155, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5389 = metadata !{i32 590081, metadata !3904, metadata !"dirp", metadata !3801, i32 155, metadata !3908, i32 0} ; [ DW_TAG_arg_variable ]
!5390 = metadata !{i32 590081, metadata !3904, metadata !"nbytes", metadata !3801, i32 155, metadata !3920, i32 0} ; [ DW_TAG_arg_variable ]
!5391 = metadata !{i32 590080, metadata !5392, metadata !"dp64", metadata !3801, i32 156, metadata !5393, i32 0} ; [ DW_TAG_auto_variable ]
!5392 = metadata !{i32 589835, metadata !3904, i32 155, i32 0, metadata !3801, i32 16} ; [ DW_TAG_lexical_block ]
!5393 = metadata !{i32 589839, metadata !3801, metadata !"", metadata !3801, i32 0, i64 64, i64 64, i64 0, i32 0, metadata !5394} ; [ DW_TAG_pointer_type ]
!5394 = metadata !{i32 589843, metadata !3801, metadata !"dirent64", metadata !3910, i32 38, i64 2240, i64 64, i64 0, i32 0, null, metadata !5395, i32 0, null} ; [ DW_TAG_structure_type ]
!5395 = metadata !{metadata !5396, metadata !5397, metadata !5399, metadata !5400, metadata !5401}
!5396 = metadata !{i32 589837, metadata !5394, metadata !"d_ino", metadata !3910, i32 39, i64 64, i64 64, i64 0, i32 0, metadata !3815} ; [ DW_TAG_member ]
!5397 = metadata !{i32 589837, metadata !5394, metadata !"d_off", metadata !3910, i32 40, i64 64, i64 64, i64 64, i32 0, metadata !5398} ; [ DW_TAG_member ]
!5398 = metadata !{i32 589846, metadata !3812, metadata !"__off64_t", metadata !3812, i32 133, i64 0, i64 0, i64 0, i32 0, metadata !3830} ; [ DW_TAG_typedef ]
!5399 = metadata !{i32 589837, metadata !5394, metadata !"d_reclen", metadata !3910, i32 41, i64 16, i64 16, i64 128, i32 0, metadata !3915} ; [ DW_TAG_member ]
!5400 = metadata !{i32 589837, metadata !5394, metadata !"d_type", metadata !3910, i32 42, i64 8, i64 8, i64 144, i32 0, metadata !3917} ; [ DW_TAG_member ]
!5401 = metadata !{i32 589837, metadata !5394, metadata !"d_name", metadata !3910, i32 43, i64 2048, i64 8, i64 152, i32 0, metadata !3919} ; [ DW_TAG_member ]
!5402 = metadata !{i32 590080, metadata !5392, metadata !"res", metadata !3801, i32 157, metadata !3907, i32 0} ; [ DW_TAG_auto_variable ]
!5403 = metadata !{i32 590080, metadata !5404, metadata !"end", metadata !3801, i32 160, metadata !5393, i32 0} ; [ DW_TAG_auto_variable ]
!5404 = metadata !{i32 589835, metadata !5392, i32 160, i32 0, metadata !3801, i32 17} ; [ DW_TAG_lexical_block ]
!5405 = metadata !{i32 590080, metadata !5406, metadata !"dp", metadata !3801, i32 162, metadata !3908, i32 0} ; [ DW_TAG_auto_variable ]
!5406 = metadata !{i32 589835, metadata !5404, i32 162, i32 0, metadata !3801, i32 18} ; [ DW_TAG_lexical_block ]
!5407 = metadata !{i32 590080, metadata !5406, metadata !"name_len", metadata !3801, i32 163, metadata !3920, i32 0} ; [ DW_TAG_auto_variable ]
!5408 = metadata !{i32 590081, metadata !3921, metadata !"path", metadata !3801, i32 130, metadata !3879, i32 0} ; [ DW_TAG_arg_variable ]
!5409 = metadata !{i32 590081, metadata !3921, metadata !"buf32", metadata !3801, i32 130, metadata !3924, i32 0} ; [ DW_TAG_arg_variable ]
!5410 = metadata !{i32 590081, metadata !3949, metadata !"fd", metadata !3801, i32 126, metadata !3826, i32 0} ; [ DW_TAG_arg_variable ]
!5411 = metadata !{i32 590081, metadata !3949, metadata !"length", metadata !3801, i32 126, metadata !3899, i32 0} ; [ DW_TAG_arg_variable ]
!5412 = metadata !{i32 590081, metadata !4003, metadata !"name", metadata !3953, i32 227, metadata !3959, i32 0} ; [ DW_TAG_arg_variable ]
!5413 = metadata !{i32 590080, metadata !5414, metadata !"x", metadata !3953, i32 228, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5414 = metadata !{i32 589835, metadata !4003, i32 227, i32 0, metadata !3953, i32 1} ; [ DW_TAG_lexical_block ]
!5415 = metadata !{i32 590081, metadata !4006, metadata !"path", metadata !3953, i32 349, metadata !3959, i32 0} ; [ DW_TAG_arg_variable ]
!5416 = metadata !{i32 590081, metadata !4006, metadata !"flags", metadata !3953, i32 349, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5417 = metadata !{i32 590081, metadata !4006, metadata !"_buf", metadata !3953, i32 349, metadata !4009, i32 0} ; [ DW_TAG_arg_variable ]
!5418 = metadata !{i32 590080, metadata !5419, metadata !"s", metadata !3953, i32 350, metadata !3963, i32 0} ; [ DW_TAG_auto_variable ]
!5419 = metadata !{i32 589835, metadata !4006, i32 349, i32 0, metadata !3953, i32 2} ; [ DW_TAG_lexical_block ]
!5420 = metadata !{i32 590080, metadata !5419, metadata !"buf", metadata !3953, i32 351, metadata !4010, i32 0} ; [ DW_TAG_auto_variable ]
!5421 = metadata !{i32 590080, metadata !5419, metadata !"fd", metadata !3953, i32 352, metadata !3958, i32 0} ; [ DW_TAG_auto_variable ]
!5422 = metadata !{i32 590080, metadata !5419, metadata !"rd", metadata !3953, i32 359, metadata !3958, i32 0} ; [ DW_TAG_auto_variable ]
!5423 = metadata !{i32 590080, metadata !5419, metadata !"cnt", metadata !3953, i32 359, metadata !3958, i32 0} ; [ DW_TAG_auto_variable ]
!5424 = metadata !{i32 590081, metadata !4011, metadata !"dfile", metadata !3953, i32 55, metadata !4014, i32 0} ; [ DW_TAG_arg_variable ]
!5425 = metadata !{i32 590081, metadata !4011, metadata !"fill_info", metadata !3953, i32 55, metadata !4041, i32 0} ; [ DW_TAG_arg_variable ]
!5426 = metadata !{i32 590081, metadata !4011, metadata !"n_fill_info", metadata !3953, i32 55, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5427 = metadata !{i32 590081, metadata !4011, metadata !"do_memset", metadata !3953, i32 55, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5428 = metadata !{i32 590080, metadata !5429, metadata !"i", metadata !3953, i32 56, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5429 = metadata !{i32 589835, metadata !4011, i32 55, i32 0, metadata !3953, i32 3} ; [ DW_TAG_lexical_block ]
!5430 = metadata !{i32 590080, metadata !5429, metadata !"j", metadata !3953, i32 56, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5431 = metadata !{i32 590080, metadata !5429, metadata !"s", metadata !3953, i32 57, metadata !3958, i32 0} ; [ DW_TAG_auto_variable ]
!5432 = metadata !{i32 590080, metadata !5429, metadata !"file", metadata !3953, i32 58, metadata !4010, i32 0} ; [ DW_TAG_auto_variable ]
!5433 = metadata !{i32 590080, metadata !5434, metadata !"p", metadata !3953, i32 60, metadata !4041, i32 0} ; [ DW_TAG_auto_variable ]
!5434 = metadata !{i32 589835, metadata !5429, i32 60, i32 0, metadata !3953, i32 4} ; [ DW_TAG_lexical_block ]
!5435 = metadata !{i32 590081, metadata !4059, metadata !"dfile", metadata !3953, i32 101, metadata !4014, i32 0} ; [ DW_TAG_arg_variable ]
!5436 = metadata !{i32 590081, metadata !4059, metadata !"size", metadata !3953, i32 101, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5437 = metadata !{i32 590081, metadata !4059, metadata !"contents", metadata !3953, i32 101, metadata !4010, i32 0} ; [ DW_TAG_arg_variable ]
!5438 = metadata !{i32 590081, metadata !4059, metadata !"name", metadata !3953, i32 102, metadata !3959, i32 0} ; [ DW_TAG_arg_variable ]
!5439 = metadata !{i32 590081, metadata !4059, metadata !"fill_info", metadata !3953, i32 103, metadata !4041, i32 0} ; [ DW_TAG_arg_variable ]
!5440 = metadata !{i32 590081, metadata !4059, metadata !"n_fill_info", metadata !3953, i32 103, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5441 = metadata !{i32 590081, metadata !4059, metadata !"defaults", metadata !3953, i32 104, metadata !3962, i32 0} ; [ DW_TAG_arg_variable ]
!5442 = metadata !{i32 590081, metadata !4059, metadata !"is_foreign", metadata !3953, i32 104, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5443 = metadata !{i32 590080, metadata !5444, metadata !"s", metadata !3953, i32 105, metadata !3962, i32 0} ; [ DW_TAG_auto_variable ]
!5444 = metadata !{i32 589835, metadata !4059, i32 104, i32 0, metadata !3953, i32 5} ; [ DW_TAG_lexical_block ]
!5445 = metadata !{i32 590080, metadata !5444, metadata !"sp", metadata !3953, i32 106, metadata !3959, i32 0} ; [ DW_TAG_auto_variable ]
!5446 = metadata !{i32 590080, metadata !5444, metadata !"sname", metadata !3953, i32 107, metadata !5447, i32 0} ; [ DW_TAG_auto_variable ]
!5447 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 2048, i64 8, i64 0, i32 0, metadata !3961, metadata !846, i32 0, null} ; [ DW_TAG_array_type ]
!5448 = metadata !{i32 590080, metadata !5444, metadata !"src_name", metadata !3953, i32 107, metadata !5447, i32 0} ; [ DW_TAG_auto_variable ]
!5449 = metadata !{i32 590080, metadata !5444, metadata !"original_file", metadata !3953, i32 115, metadata !4010, i32 0} ; [ DW_TAG_auto_variable ]
!5450 = metadata !{i32 590080, metadata !5444, metadata !"originalStat", metadata !3953, i32 163, metadata !3963, i32 0} ; [ DW_TAG_auto_variable ]
!5451 = metadata !{i32 590080, metadata !5452, metadata !"i", metadata !3953, i32 134, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5452 = metadata !{i32 589835, metadata !5444, i32 135, i32 0, metadata !3953, i32 6} ; [ DW_TAG_lexical_block ]
!5453 = metadata !{i32 590080, metadata !5454, metadata !"ss", metadata !3953, i32 207, metadata !4028, i32 0} ; [ DW_TAG_auto_variable ]
!5454 = metadata !{i32 589835, metadata !5444, i32 209, i32 0, metadata !3953, i32 7} ; [ DW_TAG_lexical_block ]
!5455 = metadata !{i32 590081, metadata !4062, metadata !"path", metadata !3953, i32 370, metadata !3959, i32 0} ; [ DW_TAG_arg_variable ]
!5456 = metadata !{i32 590081, metadata !4062, metadata !"flags", metadata !3953, i32 370, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5457 = metadata !{i32 590080, metadata !5458, metadata !"k", metadata !3953, i32 371, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5458 = metadata !{i32 589835, metadata !4062, i32 370, i32 0, metadata !3953, i32 8} ; [ DW_TAG_lexical_block ]
!5459 = metadata !{i32 590080, metadata !5458, metadata !"fsize", metadata !3953, i32 372, metadata !3958, i32 0} ; [ DW_TAG_auto_variable ]
!5460 = metadata !{i32 590080, metadata !5458, metadata !"def", metadata !3953, i32 373, metadata !3963, i32 0} ; [ DW_TAG_auto_variable ]
!5461 = metadata !{i32 590080, metadata !5458, metadata !"buf", metadata !3953, i32 374, metadata !4010, i32 0} ; [ DW_TAG_auto_variable ]
!5462 = metadata !{i32 590081, metadata !4065, metadata !"n_files", metadata !3953, i32 242, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5463 = metadata !{i32 590081, metadata !4065, metadata !"file_length", metadata !3953, i32 242, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5464 = metadata !{i32 590081, metadata !4065, metadata !"sym_stdout_flag", metadata !3953, i32 243, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5465 = metadata !{i32 590081, metadata !4065, metadata !"save_all_writes_flag", metadata !3953, i32 243, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5466 = metadata !{i32 590081, metadata !4065, metadata !"n_streams", metadata !3953, i32 244, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5467 = metadata !{i32 590081, metadata !4065, metadata !"stream_len", metadata !3953, i32 244, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5468 = metadata !{i32 590081, metadata !4065, metadata !"n_dgrams", metadata !3953, i32 245, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5469 = metadata !{i32 590081, metadata !4065, metadata !"dgram_len", metadata !3953, i32 245, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5470 = metadata !{i32 590081, metadata !4065, metadata !"max_failures", metadata !3953, i32 246, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5471 = metadata !{i32 590081, metadata !4065, metadata !"one_line_streams", metadata !3953, i32 247, metadata !3958, i32 0} ; [ DW_TAG_arg_variable ]
!5472 = metadata !{i32 590081, metadata !4065, metadata !"stream_fill_info", metadata !3953, i32 248, metadata !4041, i32 0} ; [ DW_TAG_arg_variable ]
!5473 = metadata !{i32 590081, metadata !4065, metadata !"n_stream_fill_info", metadata !3953, i32 248, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5474 = metadata !{i32 590081, metadata !4065, metadata !"dgram_fill_info", metadata !3953, i32 249, metadata !4041, i32 0} ; [ DW_TAG_arg_variable ]
!5475 = metadata !{i32 590081, metadata !4065, metadata !"n_dgram_fill_info", metadata !3953, i32 249, metadata !3977, i32 0} ; [ DW_TAG_arg_variable ]
!5476 = metadata !{i32 590080, metadata !5477, metadata !"k", metadata !3953, i32 250, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5477 = metadata !{i32 589835, metadata !4065, i32 249, i32 0, metadata !3953, i32 9} ; [ DW_TAG_lexical_block ]
!5478 = metadata !{i32 590080, metadata !5477, metadata !"name", metadata !3953, i32 251, metadata !5479, i32 0} ; [ DW_TAG_auto_variable ]
!5479 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 56, i64 8, i64 0, i32 0, metadata !3961, metadata !4248, i32 0, null} ; [ DW_TAG_array_type ]
!5480 = metadata !{i32 590080, metadata !5477, metadata !"sname", metadata !3953, i32 252, metadata !5481, i32 0} ; [ DW_TAG_auto_variable ]
!5481 = metadata !{i32 589825, metadata !3953, metadata !"", metadata !3953, i32 0, i64 64, i64 8, i64 0, i32 0, metadata !3961, metadata !3059, i32 0, null} ; [ DW_TAG_array_type ]
!5482 = metadata !{i32 590080, metadata !5477, metadata !"dname", metadata !3953, i32 253, metadata !5479, i32 0} ; [ DW_TAG_auto_variable ]
!5483 = metadata !{i32 590080, metadata !5477, metadata !"s", metadata !3953, i32 255, metadata !3963, i32 0} ; [ DW_TAG_auto_variable ]
!5484 = metadata !{i32 590080, metadata !5477, metadata !"i", metadata !3953, i32 340, metadata !3977, i32 0} ; [ DW_TAG_auto_variable ]
!5485 = metadata !{i32 590080, metadata !5477, metadata !"offset", metadata !3953, i32 341, metadata !5486, i32 0} ; [ DW_TAG_auto_variable ]
!5486 = metadata !{i32 589846, metadata !4372, metadata !"off_t", metadata !4372, i32 93, i64 0, i64 0, i64 0, i32 0, metadata !3986} ; [ DW_TAG_typedef ]
!5487 = metadata !{i32 590081, metadata !4068, metadata !"s", metadata !4069, i32 19, metadata !4074, i32 0} ; [ DW_TAG_arg_variable ]
!5488 = metadata !{i32 590080, metadata !5489, metadata !"i", metadata !4069, i32 20, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5489 = metadata !{i32 589835, metadata !4068, i32 19, i32 0, metadata !4069, i32 0} ; [ DW_TAG_lexical_block ]
!5490 = metadata !{i32 590081, metadata !4122, metadata !"argc", metadata !4069, i32 25, metadata !4073, i32 0} ; [ DW_TAG_arg_variable ]
!5491 = metadata !{i32 590081, metadata !4122, metadata !"argv", metadata !4069, i32 25, metadata !4125, i32 0} ; [ DW_TAG_arg_variable ]
!5492 = metadata !{i32 590080, metadata !5493, metadata !"i", metadata !4069, i32 26, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5493 = metadata !{i32 589835, metadata !4122, i32 25, i32 0, metadata !4069, i32 2} ; [ DW_TAG_lexical_block ]
!5494 = metadata !{i32 590080, metadata !5493, metadata !"j", metadata !4069, i32 26, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5495 = metadata !{i32 590080, metadata !5493, metadata !"len", metadata !4069, i32 26, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5496 = metadata !{i32 590080, metadata !5493, metadata !"argv_i", metadata !4069, i32 27, metadata !4074, i32 0} ; [ DW_TAG_auto_variable ]
!5497 = metadata !{i32 590080, metadata !5493, metadata !"shadow", metadata !4069, i32 28, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5498 = metadata !{i32 590080, metadata !5493, metadata !"standalone", metadata !4069, i32 29, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5499 = metadata !{i32 590080, metadata !5500, metadata !"tmpStat", metadata !4069, i32 58, metadata !5501, i32 0} ; [ DW_TAG_auto_variable ]
!5500 = metadata !{i32 589835, metadata !5493, i32 59, i32 0, metadata !4069, i32 3} ; [ DW_TAG_lexical_block ]
!5501 = metadata !{i32 589843, metadata !4069, metadata !"stat", metadata !4084, i32 47, i64 1152, i64 64, i64 0, i32 0, null, metadata !5502, i32 0, null} ; [ DW_TAG_structure_type ]
!5502 = metadata !{metadata !5503, metadata !5504, metadata !5506, metadata !5507, metadata !5508, metadata !5509, metadata !5510, metadata !5511, metadata !5512, metadata !5513, metadata !5514, metadata !5516, metadata !5517, metadata !5518, metadata !5
!5503 = metadata !{i32 589837, metadata !5501, metadata !"st_dev", metadata !4084, i32 48, i64 64, i64 64, i64 0, i32 0, metadata !4087} ; [ DW_TAG_member ]
!5504 = metadata !{i32 589837, metadata !5501, metadata !"st_ino", metadata !4084, i32 53, i64 64, i64 64, i64 64, i32 0, metadata !5505} ; [ DW_TAG_member ]
!5505 = metadata !{i32 589846, metadata !4088, metadata !"__ino_t", metadata !4088, i32 128, i64 0, i64 0, i64 0, i32 0, metadata !4089} ; [ DW_TAG_typedef ]
!5506 = metadata !{i32 589837, metadata !5501, metadata !"st_nlink", metadata !4084, i32 61, i64 64, i64 64, i64 128, i32 0, metadata !4093} ; [ DW_TAG_member ]
!5507 = metadata !{i32 589837, metadata !5501, metadata !"st_mode", metadata !4084, i32 62, i64 32, i64 32, i64 192, i32 0, metadata !4095} ; [ DW_TAG_member ]
!5508 = metadata !{i32 589837, metadata !5501, metadata !"st_uid", metadata !4084, i32 64, i64 32, i64 32, i64 224, i32 0, metadata !4098} ; [ DW_TAG_member ]
!5509 = metadata !{i32 589837, metadata !5501, metadata !"st_gid", metadata !4084, i32 65, i64 32, i64 32, i64 256, i32 0, metadata !4100} ; [ DW_TAG_member ]
!5510 = metadata !{i32 589837, metadata !5501, metadata !"__pad0", metadata !4084, i32 67, i64 32, i64 32, i64 288, i32 0, metadata !4073} ; [ DW_TAG_member ]
!5511 = metadata !{i32 589837, metadata !5501, metadata !"st_rdev", metadata !4084, i32 69, i64 64, i64 64, i64 320, i32 0, metadata !4087} ; [ DW_TAG_member ]
!5512 = metadata !{i32 589837, metadata !5501, metadata !"st_size", metadata !4084, i32 74, i64 64, i64 64, i64 384, i32 0, metadata !4104} ; [ DW_TAG_member ]
!5513 = metadata !{i32 589837, metadata !5501, metadata !"st_blksize", metadata !4084, i32 78, i64 64, i64 64, i64 448, i32 0, metadata !4107} ; [ DW_TAG_member ]
!5514 = metadata !{i32 589837, metadata !5501, metadata !"st_blocks", metadata !4084, i32 80, i64 64, i64 64, i64 512, i32 0, metadata !5515} ; [ DW_TAG_member ]
!5515 = metadata !{i32 589846, metadata !4088, metadata !"__blkcnt_t", metadata !4088, i32 159, i64 0, i64 0, i64 0, i32 0, metadata !4105} ; [ DW_TAG_typedef ]
!5516 = metadata !{i32 589837, metadata !5501, metadata !"st_atim", metadata !4084, i32 91, i64 128, i64 64, i64 576, i32 0, metadata !4111} ; [ DW_TAG_member ]
!5517 = metadata !{i32 589837, metadata !5501, metadata !"st_mtim", metadata !4084, i32 92, i64 128, i64 64, i64 704, i32 0, metadata !4111} ; [ DW_TAG_member ]
!5518 = metadata !{i32 589837, metadata !5501, metadata !"st_ctim", metadata !4084, i32 93, i64 128, i64 64, i64 832, i32 0, metadata !4111} ; [ DW_TAG_member ]
!5519 = metadata !{i32 589837, metadata !5501, metadata !"__glibc_reserved", metadata !4084, i32 106, i64 192, i64 64, i64 960, i32 0, metadata !4121} ; [ DW_TAG_member ]
!5520 = metadata !{i32 590080, metadata !5521, metadata !"fd", metadata !4069, i32 61, metadata !4073, i32 0} ; [ DW_TAG_auto_variable ]
!5521 = metadata !{i32 589835, metadata !5500, i32 61, i32 0, metadata !4069, i32 4} ; [ DW_TAG_lexical_block ]
!5522 = metadata !{i32 590081, metadata !4126, metadata !"bitWidth", metadata !4127, i32 20, metadata !4131, i32 0} ; [ DW_TAG_arg_variable ]
!5523 = metadata !{i32 590081, metadata !4126, metadata !"shift", metadata !4127, i32 20, metadata !4131, i32 0} ; [ DW_TAG_arg_variable ]
!5524 = metadata !{i32 590081, metadata !4132, metadata !"z", metadata !4133, i32 12, metadata !4137, i32 0} ; [ DW_TAG_arg_variable ]
!5525 = metadata !{i32 590081, metadata !4138, metadata !"start", metadata !4139, i32 13, metadata !4143, i32 0} ; [ DW_TAG_arg_variable ]
!5526 = metadata !{i32 590081, metadata !4138, metadata !"end", metadata !4139, i32 13, metadata !4143, i32 0} ; [ DW_TAG_arg_variable ]
!5527 = metadata !{i32 590081, metadata !4138, metadata !"name", metadata !4139, i32 13, metadata !4144, i32 0} ; [ DW_TAG_arg_variable ]
!5528 = metadata !{i32 590080, metadata !5529, metadata !"x", metadata !4139, i32 14, metadata !4143, i32 0} ; [ DW_TAG_auto_variable ]
!5529 = metadata !{i32 589835, metadata !4138, i32 13, i32 0, metadata !4139, i32 0} ; [ DW_TAG_lexical_block ]
!5530 = metadata !{i32 13, i32 0, metadata !5531, null}
!5531 = metadata !{i32 589835, metadata !0, i32 12, i32 0, metadata !1, i32 0} ; [ DW_TAG_lexical_block ]
!5532 = metadata !{i32 27, i32 0, metadata !5533, null}
!5533 = metadata !{i32 589835, metadata !7, i32 23, i32 0, metadata !10, i32 0} ; [ DW_TAG_lexical_block ]
!5534 = metadata !{i32 28, i32 0, metadata !5533, null}
!5535 = metadata !{i32 33, i32 0, metadata !5533, null}
!5536 = metadata !{i32 36, i32 0, metadata !5533, null}
!5537 = metadata !{i32 37, i32 0, metadata !5538, null}
!5538 = metadata !{i32 589835, metadata !5533, i32 23, i32 0, metadata !10, i32 1} ; [ DW_TAG_lexical_block ]
!5539 = metadata !{i32 38, i32 0, metadata !5538, null}
!5540 = metadata !{i32 40, i32 0, metadata !5538, null}
!5541 = metadata !{i32 43, i32 0, metadata !5533, null}
!5542 = metadata !{i32 44, i32 0, metadata !5533, null}
!5543 = metadata !{i32 48, i32 0, metadata !5533, null}
!5544 = metadata !{i32 49, i32 0, metadata !5533, null}
!5545 = metadata !{i32 50, i32 0, metadata !5533, null}
!5546 = metadata !{i32 56, i32 0, metadata !5533, null}
!5547 = metadata !{i32 57, i32 0, metadata !5533, null}
!5548 = metadata !{i32 60, i32 0, metadata !5533, null}
!5549 = metadata !{i32 61, i32 0, metadata !5533, null}
!5550 = metadata !{i32 62, i32 0, metadata !5533, null}
!5551 = metadata !{i32 63, i32 0, metadata !5533, null}
!5552 = metadata !{i32 64, i32 0, metadata !5533, null}
!5553 = metadata !{i32 68, i32 0, metadata !5554, null}
!5554 = metadata !{i32 589835, metadata !5533, i32 68, i32 0, metadata !10, i32 2} ; [ DW_TAG_lexical_block ]
!5555 = metadata !{i32 69, i32 0, metadata !5554, null}
!5556 = metadata !{i32 74, i32 0, metadata !5533, null}
!5557 = metadata !{i32 32, i32 0, metadata !5558, null}
!5558 = metadata !{i32 589835, metadata !48, i32 29, i32 0, metadata !49, i32 0} ; [ DW_TAG_lexical_block ]
!5559 = metadata !{i32 24, i32 0, metadata !5560, null}
!5560 = metadata !{i32 589835, metadata !88, i32 20, i32 0, metadata !91, i32 0} ; [ DW_TAG_lexical_block ]
!5561 = metadata !{i32 25, i32 0, metadata !5560, null}
!5562 = metadata !{i32 26, i32 0, metadata !5560, null}
!5563 = metadata !{i32 31, i32 0, metadata !5560, null}
!5564 = metadata !{i32 34, i32 0, metadata !5560, null}
!5565 = metadata !{i32 35, i32 0, metadata !5560, null}
!5566 = metadata !{i32 38, i32 0, metadata !5560, null}
!5567 = metadata !{i32 40, i32 0, metadata !5560, null}
!5568 = metadata !{i32 49, i32 0, metadata !5560, null}
!5569 = metadata !{i32 51, i32 0, metadata !5560, null}
!5570 = metadata !{i32 52, i32 0, metadata !5560, null}
!5571 = metadata !{i32 55, i32 0, metadata !5560, null}
!5572 = metadata !{i32 62, i32 0, metadata !5573, null}
!5573 = metadata !{i32 589835, metadata !5560, i32 62, i32 0, metadata !91, i32 1} ; [ DW_TAG_lexical_block ]
!5574 = metadata !{i32 63, i32 0, metadata !5573, null}
!5575 = metadata !{i32 67, i32 0, metadata !5560, null}
!5576 = metadata !{i32 71, i32 0, metadata !5560, null}
!5577 = metadata !{i32 19, i32 0, metadata !5578, null}
!5578 = metadata !{i32 589835, metadata !127, i32 16, i32 0, metadata !128, i32 0} ; [ DW_TAG_lexical_block ]
!5579 = metadata !{i32 139, i32 0, metadata !5580, null}
!5580 = metadata !{i32 589835, metadata !165, i32 137, i32 0, metadata !166, i32 0} ; [ DW_TAG_lexical_block ]
!5581 = metadata !{i32 143, i32 0, metadata !5582, null}
!5582 = metadata !{i32 589835, metadata !5580, i32 137, i32 0, metadata !166, i32 1} ; [ DW_TAG_lexical_block ]
!5583 = metadata !{i32 147, i32 0, metadata !5582, null}
!5584 = metadata !{i32 150, i32 0, metadata !5582, null}
!5585 = metadata !{i32 153, i32 0, metadata !5582, null}
!5586 = metadata !{i32 56, i32 0, metadata !5587, null}
!5587 = metadata !{i32 589835, metadata !171, i32 55, i32 0, metadata !172, i32 2} ; [ DW_TAG_lexical_block ]
!5588 = metadata !{i32 160, i32 0, metadata !5589, null}
!5589 = metadata !{i32 589835, metadata !177, i32 156, i32 0, metadata !166, i32 3} ; [ DW_TAG_lexical_block ]
!5590 = metadata !{i32 161, i32 0, metadata !5589, null}
!5591 = metadata !{i32 162, i32 0, metadata !5589, null}
!5592 = metadata !{i32 163, i32 0, metadata !5589, null}
!5593 = metadata !{i32 165, i32 0, metadata !5589, null}
!5594 = metadata !{i32 166, i32 0, metadata !5589, null}
!5595 = metadata !{i32 168, i32 0, metadata !5589, null}
!5596 = metadata !{i32 191, i32 0, metadata !5597, null}
!5597 = metadata !{i32 589835, metadata !180, i32 188, i32 0, metadata !166, i32 4} ; [ DW_TAG_lexical_block ]
!5598 = metadata !{i32 193, i32 0, metadata !5597, null}
!5599 = metadata !{i32 197, i32 0, metadata !5597, null}
!5600 = metadata !{i32 239, i32 0, metadata !5597, null}
!5601 = metadata !{i32 192, i32 0, metadata !5597, null}
!5602 = metadata !{i32 263, i32 0, metadata !5603, null}
!5603 = metadata !{i32 589835, metadata !183, i32 252, i32 0, metadata !166, i32 5} ; [ DW_TAG_lexical_block ]
!5604 = metadata !{i32 264, i32 0, metadata !5603, null}
!5605 = metadata !{i32 266, i32 0, metadata !5603, null}
!5606 = metadata !{i32 267, i32 0, metadata !5603, null}
!5607 = metadata !{i32 268, i32 0, metadata !5603, null}
!5608 = metadata !{i32 288, i32 0, metadata !5609, null}
!5609 = metadata !{i32 589835, metadata !184, i32 281, i32 0, metadata !166, i32 6} ; [ DW_TAG_lexical_block ]
!5610 = metadata !{i32 291, i32 0, metadata !5609, null}
!5611 = metadata !{i32 294, i32 0, metadata !5609, null}
!5612 = metadata !{i32 298, i32 0, metadata !5609, null}
!5613 = metadata !{i32 300, i32 0, metadata !5609, null}
!5614 = metadata !{i32 305, i32 0, metadata !5609, null}
!5615 = metadata !{i32 306, i32 0, metadata !5609, null}
!5616 = metadata !{i32 307, i32 0, metadata !5609, null}
!5617 = metadata !{i32 308, i32 0, metadata !5609, null}
!5618 = metadata !{i32 312, i32 0, metadata !5619, null}
!5619 = metadata !{i32 589835, metadata !5609, i32 312, i32 0, metadata !166, i32 7} ; [ DW_TAG_lexical_block ]
!5620 = metadata !{i32 313, i32 0, metadata !5619, null}
!5621 = metadata !{i32 314, i32 0, metadata !5619, null}
!5622 = metadata !{i32 316, i32 0, metadata !5619, null}
!5623 = metadata !{i32 311, i32 0, metadata !5609, null}
!5624 = metadata !{i32 323, i32 0, metadata !5609, null}
!5625 = metadata !{i32 327, i32 0, metadata !5609, null}
!5626 = metadata !{i32 331, i32 0, metadata !5609, null}
!5627 = metadata !{i32 336, i32 0, metadata !5609, null}
!5628 = metadata !{i32 337, i32 0, metadata !5609, null}
!5629 = metadata !{i32 338, i32 0, metadata !5609, null}
!5630 = metadata !{i32 342, i32 0, metadata !5609, null}
!5631 = metadata !{i32 354, i32 0, metadata !5609, null}
!5632 = metadata !{i32 370, i32 0, metadata !5609, null}
!5633 = metadata !{i32 371, i32 0, metadata !5609, null}
!5634 = metadata !{i32 391, i32 0, metadata !5609, null}
!5635 = metadata !{i32 392, i32 0, metadata !5609, null}
!5636 = metadata !{i32 395, i32 0, metadata !5609, null}
!5637 = metadata !{i32 396, i32 0, metadata !5609, null}
!5638 = metadata !{i32 401, i32 0, metadata !5609, null}
!5639 = metadata !{i32 930, i32 0, metadata !5640, null}
!5640 = metadata !{i32 589835, metadata !195, i32 921, i32 0, metadata !198, i32 0} ; [ DW_TAG_lexical_block ]
!5641 = metadata !{i32 118, i32 0, metadata !5642, null}
!5642 = metadata !{i32 589835, metadata !208, i32 112, i32 0, metadata !211, i32 0} ; [ DW_TAG_lexical_block ]
!5643 = metadata !{i32 20, i32 0, metadata !5644, null}
!5644 = metadata !{i32 589835, metadata !217, i32 17, i32 0, metadata !218, i32 0} ; [ DW_TAG_lexical_block ]
!5645 = metadata !{i32 21, i32 0, metadata !5644, null}
!5646 = metadata !{i32 22, i32 0, metadata !5644, null}
!5647 = metadata !{i32 26, i32 0, metadata !5644, null}
!5648 = metadata !{i32 27, i32 0, metadata !5644, null}
!5649 = metadata !{i32 28, i32 0, metadata !5644, null}
!5650 = metadata !{i32 31, i32 0, metadata !5644, null}
!5651 = metadata !{i32 32, i32 0, metadata !5644, null}
!5652 = metadata !{i32 34, i32 0, metadata !5644, null}
!5653 = metadata !{i32 35, i32 0, metadata !5644, null}
!5654 = metadata !{i32 36, i32 0, metadata !5644, null}
!5655 = metadata !{i32 15, i32 0, metadata !5656, null}
!5656 = metadata !{i32 589835, metadata !243, i32 14, i32 0, metadata !244, i32 0} ; [ DW_TAG_lexical_block ]
!5657 = metadata !{i32 16, i32 0, metadata !5656, null}
!5658 = metadata !{i32 17, i32 0, metadata !5656, null}
!5659 = metadata !{i32 20, i32 0, metadata !5656, null}
!5660 = metadata !{i32 54, i32 0, metadata !5661, null}
!5661 = metadata !{i32 589835, metadata !269, i32 51, i32 0, metadata !270, i32 0} ; [ DW_TAG_lexical_block ]
!5662 = metadata !{i32 56, i32 0, metadata !5661, null}
!5663 = metadata !{i32 57, i32 0, metadata !5661, null}
!5664 = metadata !{i32 58, i32 0, metadata !5661, null}
!5665 = metadata !{i32 59, i32 0, metadata !5661, null}
!5666 = metadata !{i32 60, i32 0, metadata !5661, null}
!5667 = metadata !{i32 61, i32 0, metadata !5661, null}
!5668 = metadata !{i32 63, i32 0, metadata !5669, null}
!5669 = metadata !{i32 589835, metadata !5661, i32 63, i32 0, metadata !270, i32 1} ; [ DW_TAG_lexical_block ]
!5670 = metadata !{i32 64, i32 0, metadata !5661, null}
!5671 = metadata !{i32 65, i32 0, metadata !5661, null}
!5672 = metadata !{i32 66, i32 0, metadata !5661, null}
!5673 = metadata !{i32 75, i32 0, metadata !5674, null}
!5674 = metadata !{i32 589835, metadata !278, i32 72, i32 0, metadata !270, i32 2} ; [ DW_TAG_lexical_block ]
!5675 = metadata !{i32 79, i32 0, metadata !5676, null}
!5676 = metadata !{i32 589835, metadata !5674, i32 79, i32 0, metadata !270, i32 3} ; [ DW_TAG_lexical_block ]
!5677 = metadata !{i32 84, i32 0, metadata !5676, null}
!5678 = metadata !{i32 85, i32 0, metadata !5676, null}
!5679 = metadata !{i32 88, i32 0, metadata !5674, null}
!5680 = metadata !{i32 90, i32 0, metadata !5674, null}
!5681 = metadata !{i32 91, i32 0, metadata !5674, null}
!5682 = metadata !{i32 93, i32 0, metadata !5674, null}
!5683 = metadata !{i32 94, i32 0, metadata !5674, null}
!5684 = metadata !{i32 95, i32 0, metadata !5674, null}
!5685 = metadata !{i32 97, i32 0, metadata !5674, null}
!5686 = metadata !{i32 98, i32 0, metadata !5674, null}
!5687 = metadata !{i32 99, i32 0, metadata !5674, null}
!5688 = metadata !{i32 101, i32 0, metadata !5689, null}
!5689 = metadata !{i32 589835, metadata !5674, i32 101, i32 0, metadata !270, i32 4} ; [ DW_TAG_lexical_block ]
!5690 = metadata !{i32 102, i32 0, metadata !5674, null}
!5691 = metadata !{i32 103, i32 0, metadata !5674, null}
!5692 = metadata !{i32 82, i32 0, metadata !5676, null}
!5693 = metadata !{i32 322, i32 0, metadata !5694, null}
!5694 = metadata !{i32 589835, metadata !282, i32 319, i32 0, metadata !285, i32 0} ; [ DW_TAG_lexical_block ]
!5695 = metadata !{i32 323, i32 0, metadata !5694, null}
!5696 = metadata !{i32 327, i32 0, metadata !5694, null}
!5697 = metadata !{i32 334, i32 0, metadata !5694, null}
!5698 = metadata !{i32 336, i32 0, metadata !5694, null}
!5699 = metadata !{i32 16, i32 0, metadata !5700, null}
!5700 = metadata !{i32 589835, metadata !289, i32 15, i32 0, metadata !290, i32 0} ; [ DW_TAG_lexical_block ]
!5701 = metadata !{i32 27, i32 0, metadata !5702, null}
!5702 = metadata !{i32 589835, metadata !5700, i32 27, i32 0, metadata !290, i32 1} ; [ DW_TAG_lexical_block ]
!5703 = metadata !{i32 28, i32 0, metadata !5702, null}
!5704 = metadata !{i32 29, i32 0, metadata !5702, null}
!5705 = metadata !{i32 32, i32 0, metadata !5702, null}
!5706 = metadata !{i32 33, i32 0, metadata !5702, null}
!5707 = metadata !{i32 36, i32 0, metadata !5702, null}
!5708 = metadata !{i32 31, i32 0, metadata !5702, null}
!5709 = metadata !{i32 51, i32 0, metadata !5700, null}
!5710 = metadata !{i32 52, i32 0, metadata !5700, null}
!5711 = metadata !{i32 56, i32 0, metadata !5700, null}
!5712 = metadata !{i32 57, i32 0, metadata !5700, null}
!5713 = metadata !{i32 60, i32 0, metadata !5700, null}
!5714 = metadata !{i32 71, i32 0, metadata !5700, null}
!5715 = metadata !{i32 72, i32 0, metadata !5700, null}
!5716 = metadata !{i32 92, i32 0, metadata !5700, null}
!5717 = metadata !{i32 101, i32 0, metadata !5700, null}
!5718 = metadata !{i32 104, i32 0, metadata !5700, null}
!5719 = metadata !{i32 17, i32 0, metadata !5720, null}
!5720 = metadata !{i32 589835, metadata !327, i32 14, i32 0, metadata !328, i32 0} ; [ DW_TAG_lexical_block ]
!5721 = metadata !{i32 18, i32 0, metadata !5722, null}
!5722 = metadata !{i32 589835, metadata !368, i32 15, i32 0, metadata !371, i32 0} ; [ DW_TAG_lexical_block ]
!5723 = metadata !{i32 73, i32 0, metadata !5724, null}
!5724 = metadata !{i32 589835, metadata !407, i32 70, i32 0, metadata !410, i32 0} ; [ DW_TAG_lexical_block ]
!5725 = metadata !{i32 77, i32 0, metadata !5724, null}
!5726 = metadata !{i32 85, i32 0, metadata !5724, null}
!5727 = metadata !{i32 86, i32 0, metadata !5724, null}
!5728 = metadata !{i32 87, i32 0, metadata !5724, null}
!5729 = metadata !{i32 90, i32 0, metadata !5724, null}
!5730 = metadata !{i32 95, i32 0, metadata !5724, null}
!5731 = metadata !{i32 103, i32 0, metadata !5724, null}
!5732 = metadata !{i32 106, i32 0, metadata !5724, null}
!5733 = metadata !{i32 110, i32 0, metadata !5724, null}
!5734 = metadata !{i32 111, i32 0, metadata !5724, null}
!5735 = metadata !{i32 112, i32 0, metadata !5724, null}
!5736 = metadata !{i32 114, i32 0, metadata !5724, null}
!5737 = metadata !{i32 119, i32 0, metadata !5724, null}
!5738 = metadata !{i32 98, i32 0, metadata !5724, null}
!5739 = metadata !{i32 124, i32 0, metadata !5724, null}
!5740 = metadata !{i32 125, i32 0, metadata !5724, null}
!5741 = metadata !{i32 126, i32 0, metadata !5724, null}
!5742 = metadata !{i32 127, i32 0, metadata !5724, null}
!5743 = metadata !{i32 129, i32 0, metadata !5724, null}
!5744 = metadata !{i32 150, i32 0, metadata !5724, null}
!5745 = metadata !{i32 18, i32 0, metadata !5746, null}
!5746 = metadata !{i32 589835, metadata !446, i32 15, i32 0, metadata !449, i32 0} ; [ DW_TAG_lexical_block ]
!5747 = metadata !{i32 19, i32 0, metadata !5746, null}
!5748 = metadata !{i32 22, i32 0, metadata !5746, null}
!5749 = metadata !{i32 23, i32 0, metadata !5746, null}
!5750 = metadata !{i32 19, i32 0, metadata !5751, null}
!5751 = metadata !{i32 589835, metadata !485, i32 15, i32 0, metadata !486, i32 0} ; [ DW_TAG_lexical_block ]
!5752 = metadata !{i32 33, i32 0, metadata !5751, null}
!5753 = metadata !{i32 35, i32 0, metadata !5751, null}
!5754 = metadata !{i32 37, i32 0, metadata !5751, null}
!5755 = metadata !{i32 39, i32 0, metadata !5751, null}
!5756 = metadata !{i32 41, i32 0, metadata !5751, null}
!5757 = metadata !{i32 25, i32 0, metadata !5758, null}
!5758 = metadata !{i32 589835, metadata !526, i32 24, i32 0, metadata !529, i32 0} ; [ DW_TAG_lexical_block ]
!5759 = metadata !{i32 27, i32 0, metadata !5758, null}
!5760 = metadata !{i32 177, i32 0, metadata !5761, null}
!5761 = metadata !{i32 589835, metadata !568, i32 173, i32 0, metadata !571, i32 0} ; [ DW_TAG_lexical_block ]
!5762 = metadata !{i32 178, i32 0, metadata !5761, null}
!5763 = metadata !{i32 179, i32 0, metadata !5761, null}
!5764 = metadata !{i32 181, i32 0, metadata !5761, null}
!5765 = metadata !{i32 28, i32 0, metadata !5766, null}
!5766 = metadata !{i32 589835, metadata !610, i32 25, i32 0, metadata !611, i32 0} ; [ DW_TAG_lexical_block ]
!5767 = metadata !{i32 22, i32 0, metadata !5768, null}
!5768 = metadata !{i32 589835, metadata !649, i32 16, i32 0, metadata !652, i32 0} ; [ DW_TAG_lexical_block ]
!5769 = metadata !{i32 27, i32 0, metadata !5768, null}
!5770 = metadata !{i32 28, i32 0, metadata !5768, null}
!5771 = metadata !{i32 32, i32 0, metadata !5768, null}
!5772 = metadata !{i32 33, i32 0, metadata !5768, null}
!5773 = metadata !{i32 36, i32 0, metadata !5768, null}
!5774 = metadata !{i32 20, i32 0, metadata !5775, null}
!5775 = metadata !{i32 589835, metadata !691, i32 19, i32 0, metadata !692, i32 0} ; [ DW_TAG_lexical_block ]
!5776 = metadata !{i32 21, i32 0, metadata !5775, null}
!5777 = metadata !{i32 24, i32 0, metadata !5775, null}
!5778 = metadata !{i32 25, i32 0, metadata !5775, null}
!5779 = metadata !{i32 26, i32 0, metadata !5775, null}
!5780 = metadata !{i32 23, i32 0, metadata !5775, null}
!5781 = metadata !{i32 29, i32 0, metadata !5775, null}
!5782 = metadata !{i32 22, i32 0, metadata !5783, null}
!5783 = metadata !{i32 589835, metadata !702, i32 18, i32 0, metadata !703, i32 0} ; [ DW_TAG_lexical_block ]
!5784 = metadata !{i32 23, i32 0, metadata !5783, null}
!5785 = metadata !{i32 24, i32 0, metadata !5783, null}
!5786 = metadata !{i32 26, i32 0, metadata !5783, null}
!5787 = metadata !{i32 27, i32 0, metadata !5783, null}
!5788 = metadata !{i32 29, i32 0, metadata !5783, null}
!5789 = metadata !{i32 25, i32 0, metadata !5783, null}
!5790 = metadata !{i32 31, i32 0, metadata !5783, null}
!5791 = metadata !{i32 20, i32 0, metadata !5792, null}
!5792 = metadata !{i32 589835, metadata !711, i32 19, i32 0, metadata !712, i32 0} ; [ DW_TAG_lexical_block ]
!5793 = metadata !{i32 221, i32 0, metadata !5794, null}
!5794 = metadata !{i32 589835, metadata !758, i32 220, i32 0, metadata !759, i32 0} ; [ DW_TAG_lexical_block ]
!5795 = metadata !{i32 222, i32 0, metadata !5794, null}
!5796 = metadata !{i32 223, i32 0, metadata !5794, null}
!5797 = metadata !{i32 255, i32 0, metadata !5794, null}
!5798 = metadata !{i32 258, i32 0, metadata !5799, null}
!5799 = metadata !{i32 589835, metadata !5794, i32 258, i32 0, metadata !759, i32 1} ; [ DW_TAG_lexical_block ]
!5800 = metadata !{i32 262, i32 0, metadata !5799, null}
!5801 = metadata !{i32 264, i32 0, metadata !5799, null}
!5802 = metadata !{i32 265, i32 0, metadata !5799, null}
!5803 = metadata !{i32 266, i32 0, metadata !5799, null}
!5804 = metadata !{i32 270, i32 0, metadata !5799, null}
!5805 = metadata !{i32 275, i32 0, metadata !5806, null}
!5806 = metadata !{i32 589835, metadata !5794, i32 275, i32 0, metadata !759, i32 2} ; [ DW_TAG_lexical_block ]
!5807 = metadata !{i32 279, i32 0, metadata !5806, null}
!5808 = metadata !{i32 281, i32 0, metadata !5806, null}
!5809 = metadata !{i32 282, i32 0, metadata !5806, null}
!5810 = metadata !{i32 283, i32 0, metadata !5806, null}
!5811 = metadata !{i32 287, i32 0, metadata !5806, null}
!5812 = metadata !{i32 253, i32 0, metadata !5794, null}
!5813 = metadata !{i32 293, i32 0, metadata !5794, null}
!5814 = metadata !{i32 294, i32 0, metadata !5794, null}
!5815 = metadata !{i32 295, i32 0, metadata !5794, null}
!5816 = metadata !{i32 307, i32 0, metadata !5817, null}
!5817 = metadata !{i32 589835, metadata !786, i32 302, i32 0, metadata !759, i32 3} ; [ DW_TAG_lexical_block ]
!5818 = metadata !{i32 309, i32 0, metadata !5817, null}
!5819 = metadata !{i32 311, i32 0, metadata !5817, null}
!5820 = metadata !{i32 315, i32 0, metadata !5817, null}
!5821 = metadata !{i32 317, i32 0, metadata !5817, null}
!5822 = metadata !{i32 318, i32 0, metadata !5817, null}
!5823 = metadata !{i32 320, i32 0, metadata !5817, null}
!5824 = metadata !{i32 322, i32 0, metadata !5817, null}
!5825 = metadata !{i32 323, i32 0, metadata !5817, null}
!5826 = metadata !{i32 325, i32 0, metadata !5817, null}
!5827 = metadata !{i32 326, i32 0, metadata !5817, null}
!5828 = metadata !{i32 328, i32 0, metadata !5817, null}
!5829 = metadata !{i32 360, i32 0, metadata !5817, null}
!5830 = metadata !{i32 424, i32 0, metadata !5831, null}
!5831 = metadata !{i32 589835, metadata !793, i32 423, i32 0, metadata !759, i32 4} ; [ DW_TAG_lexical_block ]
!5832 = metadata !{i32 425, i32 0, metadata !5831, null}
!5833 = metadata !{i32 426, i32 0, metadata !5831, null}
!5834 = metadata !{i32 428, i32 0, metadata !5831, null}
!5835 = metadata !{i32 429, i32 0, metadata !5831, null}
!5836 = metadata !{i32 431, i32 0, metadata !5831, null}
!5837 = metadata !{i32 433, i32 0, metadata !5831, null}
!5838 = metadata !{i32 435, i32 0, metadata !5831, null}
!5839 = metadata !{i32 436, i32 0, metadata !5831, null}
!5840 = metadata !{i32 437, i32 0, metadata !5831, null}
!5841 = metadata !{i32 438, i32 0, metadata !5831, null}
!5842 = metadata !{i32 453, i32 0, metadata !5831, null}
!5843 = metadata !{i32 459, i32 0, metadata !5831, null}
!5844 = metadata !{i32 460, i32 0, metadata !5831, null}
!5845 = metadata !{i32 461, i32 0, metadata !5831, null}
!5846 = metadata !{i32 462, i32 0, metadata !5831, null}
!5847 = metadata !{i32 464, i32 0, metadata !5831, null}
!5848 = metadata !{i32 469, i32 0, metadata !5831, null}
!5849 = metadata !{i32 471, i32 0, metadata !5831, null}
!5850 = metadata !{i32 472, i32 0, metadata !5831, null}
!5851 = metadata !{i32 473, i32 0, metadata !5831, null}
!5852 = metadata !{i32 479, i32 0, metadata !5831, null}
!5853 = metadata !{i32 478, i32 0, metadata !5831, null}
!5854 = metadata !{i32 480, i32 0, metadata !5831, null}
!5855 = metadata !{i32 488, i32 0, metadata !5831, null}
!5856 = metadata !{i32 490, i32 0, metadata !5831, null}
!5857 = metadata !{i32 492, i32 0, metadata !5831, null}
!5858 = metadata !{i32 494, i32 0, metadata !5831, null}
!5859 = metadata !{i32 495, i32 0, metadata !5831, null}
!5860 = metadata !{i32 496, i32 0, metadata !5831, null}
!5861 = metadata !{i32 497, i32 0, metadata !5831, null}
!5862 = metadata !{i32 499, i32 0, metadata !5831, null}
!5863 = metadata !{i32 505, i32 0, metadata !5831, null}
!5864 = metadata !{i32 509, i32 0, metadata !5831, null}
!5865 = metadata !{i32 510, i32 0, metadata !5831, null}
!5866 = metadata !{i32 511, i32 0, metadata !5831, null}
!5867 = metadata !{i32 517, i32 0, metadata !5831, null}
!5868 = metadata !{i32 519, i32 0, metadata !5831, null}
!5869 = metadata !{i32 520, i32 0, metadata !5831, null}
!5870 = metadata !{i32 521, i32 0, metadata !5831, null}
!5871 = metadata !{i32 522, i32 0, metadata !5831, null}
!5872 = metadata !{i32 528, i32 0, metadata !5831, null}
!5873 = metadata !{i32 547, i32 0, metadata !5831, null}
!5874 = metadata !{i32 554, i32 0, metadata !5875, null}
!5875 = metadata !{i32 589835, metadata !5831, i32 554, i32 0, metadata !759, i32 5} ; [ DW_TAG_lexical_block ]
!5876 = metadata !{i32 555, i32 0, metadata !5875, null}
!5877 = metadata !{i32 556, i32 0, metadata !5875, null}
!5878 = metadata !{i32 557, i32 0, metadata !5875, null}
!5879 = metadata !{i32 560, i32 0, metadata !5875, null}
!5880 = metadata !{i32 565, i32 0, metadata !5875, null}
!5881 = metadata !{i32 566, i32 0, metadata !5875, null}
!5882 = metadata !{i32 568, i32 0, metadata !5875, null}
!5883 = metadata !{i32 572, i32 0, metadata !5875, null}
!5884 = metadata !{i32 573, i32 0, metadata !5875, null}
!5885 = metadata !{i32 574, i32 0, metadata !5875, null}
!5886 = metadata !{i32 577, i32 0, metadata !5875, null}
!5887 = metadata !{i32 580, i32 0, metadata !5875, null}
!5888 = metadata !{i32 581, i32 0, metadata !5875, null}
!5889 = metadata !{i32 583, i32 0, metadata !5875, null}
!5890 = metadata !{i32 588, i32 0, metadata !5875, null}
!5891 = metadata !{i32 591, i32 0, metadata !5875, null}
!5892 = metadata !{i32 593, i32 0, metadata !5875, null}
!5893 = metadata !{i32 614, i32 0, metadata !5875, null}
!5894 = metadata !{i32 618, i32 0, metadata !5875, null}
!5895 = metadata !{i32 619, i32 0, metadata !5875, null}
!5896 = metadata !{i32 620, i32 0, metadata !5875, null}
!5897 = metadata !{i32 621, i32 0, metadata !5875, null}
!5898 = metadata !{i32 624, i32 0, metadata !5875, null}
!5899 = metadata !{i32 626, i32 0, metadata !5875, null}
!5900 = metadata !{i32 627, i32 0, metadata !5875, null}
!5901 = metadata !{i32 628, i32 0, metadata !5875, null}
!5902 = metadata !{i32 632, i32 0, metadata !5875, null}
!5903 = metadata !{i32 633, i32 0, metadata !5875, null}
!5904 = metadata !{i32 636, i32 0, metadata !5875, null}
!5905 = metadata !{i32 643, i32 0, metadata !5875, null}
!5906 = metadata !{i32 651, i32 0, metadata !5875, null}
!5907 = metadata !{i32 665, i32 0, metadata !5875, null}
!5908 = metadata !{i32 691, i32 0, metadata !5875, null}
!5909 = metadata !{i32 693, i32 0, metadata !5875, null}
!5910 = metadata !{i32 694, i32 0, metadata !5875, null}
!5911 = metadata !{i32 697, i32 0, metadata !5875, null}
!5912 = metadata !{i32 699, i32 0, metadata !5875, null}
!5913 = metadata !{i32 700, i32 0, metadata !5875, null}
!5914 = metadata !{i32 703, i32 0, metadata !5875, null}
!5915 = metadata !{i32 726, i32 0, metadata !5875, null}
!5916 = metadata !{i32 731, i32 0, metadata !5875, null}
!5917 = metadata !{i32 732, i32 0, metadata !5875, null}
!5918 = metadata !{i32 733, i32 0, metadata !5875, null}
!5919 = metadata !{i32 736, i32 0, metadata !5875, null}
!5920 = metadata !{i32 737, i32 0, metadata !5875, null}
!5921 = metadata !{i32 738, i32 0, metadata !5875, null}
!5922 = metadata !{i32 739, i32 0, metadata !5875, null}
!5923 = metadata !{i32 741, i32 0, metadata !5875, null}
!5924 = metadata !{i32 742, i32 0, metadata !5875, null}
!5925 = metadata !{i32 744, i32 0, metadata !5875, null}
!5926 = metadata !{i32 751, i32 0, metadata !5875, null}
!5927 = metadata !{i32 754, i32 0, metadata !5875, null}
!5928 = metadata !{i32 761, i32 0, metadata !5875, null}
!5929 = metadata !{i32 768, i32 0, metadata !5875, null}
!5930 = metadata !{i32 779, i32 0, metadata !5875, null}
!5931 = metadata !{i32 801, i32 0, metadata !5875, null}
!5932 = metadata !{i32 802, i32 0, metadata !5875, null}
!5933 = metadata !{i32 803, i32 0, metadata !5875, null}
!5934 = metadata !{i32 804, i32 0, metadata !5875, null}
!5935 = metadata !{i32 811, i32 0, metadata !5936, null}
!5936 = metadata !{i32 589835, metadata !5831, i32 811, i32 0, metadata !759, i32 6} ; [ DW_TAG_lexical_block ]
!5937 = metadata !{i32 812, i32 0, metadata !5936, null}
!5938 = metadata !{i32 815, i32 0, metadata !5936, null}
!5939 = metadata !{i32 816, i32 0, metadata !5936, null}
!5940 = metadata !{i32 818, i32 0, metadata !5936, null}
!5941 = metadata !{i32 820, i32 0, metadata !5936, null}
!5942 = metadata !{i32 827, i32 0, metadata !5936, null}
!5943 = metadata !{i32 834, i32 0, metadata !5936, null}
!5944 = metadata !{i32 843, i32 0, metadata !5936, null}
!5945 = metadata !{i32 864, i32 0, metadata !5936, null}
!5946 = metadata !{i32 865, i32 0, metadata !5936, null}
!5947 = metadata !{i32 1085, i32 0, metadata !5936, null}
!5948 = metadata !{i32 1087, i32 0, metadata !5936, null}
!5949 = metadata !{i32 1090, i32 0, metadata !5936, null}
!5950 = metadata !{i32 1092, i32 0, metadata !5936, null}
!5951 = metadata !{i32 1093, i32 0, metadata !5936, null}
!5952 = metadata !{i32 1096, i32 0, metadata !5936, null}
!5953 = metadata !{i32 1097, i32 0, metadata !5936, null}
!5954 = metadata !{i32 1102, i32 0, metadata !5936, null}
!5955 = metadata !{i32 1104, i32 0, metadata !5936, null}
!5956 = metadata !{i32 1107, i32 0, metadata !5936, null}
!5957 = metadata !{i32 1109, i32 0, metadata !5936, null}
!5958 = metadata !{i32 1111, i32 0, metadata !5936, null}
!5959 = metadata !{i32 1134, i32 0, metadata !5936, null}
!5960 = metadata !{i32 1139, i32 0, metadata !5936, null}
!5961 = metadata !{i32 1140, i32 0, metadata !5936, null}
!5962 = metadata !{i32 1141, i32 0, metadata !5936, null}
!5963 = metadata !{i32 1143, i32 0, metadata !5936, null}
!5964 = metadata !{i32 1148, i32 0, metadata !5936, null}
!5965 = metadata !{i32 1149, i32 0, metadata !5936, null}
!5966 = metadata !{i32 1152, i32 0, metadata !5936, null}
!5967 = metadata !{i32 1162, i32 0, metadata !5968, null}
!5968 = metadata !{i32 589835, metadata !806, i32 1159, i32 0, metadata !759, i32 7} ; [ DW_TAG_lexical_block ]
!5969 = metadata !{i32 1163, i32 0, metadata !5968, null}
!5970 = metadata !{i32 1165, i32 0, metadata !5968, null}
!5971 = metadata !{i32 1168, i32 0, metadata !5968, null}
!5972 = metadata !{i32 1169, i32 0, metadata !5968, null}
!5973 = metadata !{i32 1170, i32 0, metadata !5968, null}
!5974 = metadata !{i32 1172, i32 0, metadata !5968, null}
!5975 = metadata !{i32 1178, i32 0, metadata !5976, null}
!5976 = metadata !{i32 589835, metadata !809, i32 1177, i32 0, metadata !759, i32 8} ; [ DW_TAG_lexical_block ]
!5977 = metadata !{i32 1188, i32 0, metadata !5978, null}
!5978 = metadata !{i32 589835, metadata !812, i32 1187, i32 0, metadata !759, i32 9} ; [ DW_TAG_lexical_block ]
!5979 = metadata !{i32 1200, i32 0, metadata !5980, null}
!5980 = metadata !{i32 589835, metadata !815, i32 1199, i32 0, metadata !759, i32 10} ; [ DW_TAG_lexical_block ]
!5981 = metadata !{i32 49, i32 0, metadata !5982, null}
!5982 = metadata !{i32 589835, metadata !816, i32 46, i32 0, metadata !817, i32 0} ; [ DW_TAG_lexical_block ]
!5983 = metadata !{i32 50, i32 0, metadata !5982, null}
!5984 = metadata !{i32 51, i32 0, metadata !5982, null}
!5985 = metadata !{i32 56, i32 0, metadata !5982, null}
!5986 = metadata !{i32 57, i32 0, metadata !5982, null}
!5987 = metadata !{i32 58, i32 0, metadata !5982, null}
!5988 = metadata !{i32 60, i32 0, metadata !5982, null}
!5989 = metadata !{i32 62, i32 0, metadata !5982, null}
!5990 = metadata !{i32 63, i32 0, metadata !5982, null}
!5991 = metadata !{i32 67, i32 0, metadata !5982, null}
!5992 = metadata !{i32 64, i32 0, metadata !5982, null}
!5993 = metadata !{i32 75, i32 0, metadata !5994, null}
!5994 = metadata !{i32 589835, metadata !820, i32 73, i32 0, metadata !817, i32 1} ; [ DW_TAG_lexical_block ]
!5995 = metadata !{i32 77, i32 0, metadata !5994, null}
!5996 = metadata !{i32 83, i32 0, metadata !5997, null}
!5997 = metadata !{i32 589835, metadata !821, i32 82, i32 0, metadata !817, i32 2} ; [ DW_TAG_lexical_block ]
!5998 = metadata !{i32 85, i32 0, metadata !5997, null}
!5999 = metadata !{i32 86, i32 0, metadata !5997, null}
!6000 = metadata !{i32 88, i32 0, metadata !5997, null}
!6001 = metadata !{i32 89, i32 0, metadata !5997, null}
!6002 = metadata !{i32 92, i32 0, metadata !5997, null}
!6003 = metadata !{i32 94, i32 0, metadata !5997, null}
!6004 = metadata !{i32 97, i32 0, metadata !5997, null}
!6005 = metadata !{i32 103, i32 0, metadata !6006, null}
!6006 = metadata !{i32 589835, metadata !871, i32 101, i32 0, metadata !817, i32 3} ; [ DW_TAG_lexical_block ]
!6007 = metadata !{i32 104, i32 0, metadata !6006, null}
!6008 = metadata !{i32 105, i32 0, metadata !6006, null}
!6009 = metadata !{i32 107, i32 0, metadata !6006, null}
!6010 = metadata !{i32 111, i32 0, metadata !6011, null}
!6011 = metadata !{i32 589835, metadata !872, i32 110, i32 0, metadata !817, i32 4} ; [ DW_TAG_lexical_block ]
!6012 = metadata !{i32 114, i32 0, metadata !6011, null}
!6013 = metadata !{i32 116, i32 0, metadata !6011, null}
!6014 = metadata !{i32 124, i32 0, metadata !6015, null}
!6015 = metadata !{i32 589835, metadata !875, i32 121, i32 0, metadata !817, i32 5} ; [ DW_TAG_lexical_block ]
!6016 = metadata !{i32 125, i32 0, metadata !6015, null}
!6017 = metadata !{i32 131, i32 0, metadata !6015, null}
!6018 = metadata !{i32 133, i32 0, metadata !6015, null}
!6019 = metadata !{i32 139, i32 0, metadata !6015, null}
!6020 = metadata !{i32 143, i32 0, metadata !6015, null}
!6021 = metadata !{i32 149, i32 0, metadata !6022, null}
!6022 = metadata !{i32 589835, metadata !880, i32 148, i32 0, metadata !817, i32 6} ; [ DW_TAG_lexical_block ]
!6023 = metadata !{i32 152, i32 0, metadata !6022, null}
!6024 = metadata !{i32 154, i32 0, metadata !6022, null}
!6025 = metadata !{i32 160, i32 0, metadata !6026, null}
!6026 = metadata !{i32 589835, metadata !881, i32 159, i32 0, metadata !817, i32 7} ; [ DW_TAG_lexical_block ]
!6027 = metadata !{i32 164, i32 0, metadata !6026, null}
!6028 = metadata !{i32 163, i32 0, metadata !6026, null}
!6029 = metadata !{i32 170, i32 0, metadata !6026, null}
!6030 = metadata !{i32 178, i32 0, metadata !6031, null}
!6031 = metadata !{i32 589835, metadata !882, i32 174, i32 0, metadata !817, i32 8} ; [ DW_TAG_lexical_block ]
!6032 = metadata !{i32 180, i32 0, metadata !6031, null}
!6033 = metadata !{i32 181, i32 0, metadata !6031, null}
!6034 = metadata !{i32 183, i32 0, metadata !6031, null}
!6035 = metadata !{i32 184, i32 0, metadata !6031, null}
!6036 = metadata !{i32 185, i32 0, metadata !6031, null}
!6037 = metadata !{i32 188, i32 0, metadata !6031, null}
!6038 = metadata !{i32 194, i32 0, metadata !6039, null}
!6039 = metadata !{i32 589835, metadata !883, i32 192, i32 0, metadata !817, i32 9} ; [ DW_TAG_lexical_block ]
!6040 = metadata !{i32 195, i32 0, metadata !6039, null}
!6041 = metadata !{i32 196, i32 0, metadata !6039, null}
!6042 = metadata !{i32 197, i32 0, metadata !6039, null}
!6043 = metadata !{i32 198, i32 0, metadata !6039, null}
!6044 = metadata !{i32 201, i32 0, metadata !6039, null}
!6045 = metadata !{i32 205, i32 0, metadata !6039, null}
!6046 = metadata !{i32 206, i32 0, metadata !6039, null}
!6047 = metadata !{i32 207, i32 0, metadata !6039, null}
!6048 = metadata !{i32 209, i32 0, metadata !6039, null}
!6049 = metadata !{i32 217, i32 0, metadata !888, null}
!6050 = metadata !{i32 217, i32 0, metadata !6051, null}
!6051 = metadata !{i32 589835, metadata !888, i32 217, i32 0, metadata !891, i32 0} ; [ DW_TAG_lexical_block ]
!6052 = metadata !{i32 235, i32 0, metadata !898, null}
!6053 = metadata !{i32 235, i32 0, metadata !6054, null}
!6054 = metadata !{i32 589835, metadata !898, i32 235, i32 0, metadata !901, i32 0} ; [ DW_TAG_lexical_block ]
!6055 = metadata !{i32 259, i32 0, metadata !908, null}
!6056 = metadata !{i32 259, i32 0, metadata !6057, null}
!6057 = metadata !{i32 589835, metadata !908, i32 259, i32 0, metadata !911, i32 0} ; [ DW_TAG_lexical_block ]
!6058 = metadata !{i32 271, i32 0, metadata !918, null}
!6059 = metadata !{i32 271, i32 0, metadata !6060, null}
!6060 = metadata !{i32 589835, metadata !918, i32 271, i32 0, metadata !921, i32 0} ; [ DW_TAG_lexical_block ]
!6061 = metadata !{i32 287, i32 0, metadata !6062, null}
!6062 = metadata !{i32 589835, metadata !928, i32 280, i32 0, metadata !931, i32 0} ; [ DW_TAG_lexical_block ]
!6063 = metadata !{i32 288, i32 0, metadata !6062, null}
!6064 = metadata !{i32 291, i32 0, metadata !6062, null}
!6065 = metadata !{i32 292, i32 0, metadata !6062, null}
!6066 = metadata !{i32 293, i32 0, metadata !6062, null}
!6067 = metadata !{i32 294, i32 0, metadata !6062, null}
!6068 = metadata !{i32 295, i32 0, metadata !6062, null}
!6069 = metadata !{i32 296, i32 0, metadata !6062, null}
!6070 = metadata !{i32 298, i32 0, metadata !6062, null}
!6071 = metadata !{i32 302, i32 0, metadata !6062, null}
!6072 = metadata !{i32 319, i32 0, metadata !6062, null}
!6073 = metadata !{i32 321, i32 0, metadata !6062, null}
!6074 = metadata !{i32 322, i32 0, metadata !6062, null}
!6075 = metadata !{i32 323, i32 0, metadata !6062, null}
!6076 = metadata !{i32 326, i32 0, metadata !6062, null}
!6077 = metadata !{i32 252, i32 0, metadata !6078, null}
!6078 = metadata !{i32 589835, metadata !950, i32 251, i32 0, metadata !953, i32 0} ; [ DW_TAG_lexical_block ]
!6079 = metadata !{i32 20, i32 0, metadata !6080, null}
!6080 = metadata !{i32 589835, metadata !966, i32 19, i32 0, metadata !967, i32 0} ; [ DW_TAG_lexical_block ]
!6081 = metadata !{i32 29, i32 0, metadata !6080, null}
!6082 = metadata !{i32 30, i32 0, metadata !6080, null}
!6083 = metadata !{i32 32, i32 0, metadata !6080, null}
!6084 = metadata !{i32 33, i32 0, metadata !6080, null}
!6085 = metadata !{i32 28, i32 0, metadata !6080, null}
!6086 = metadata !{i32 36, i32 0, metadata !6080, null}
!6087 = metadata !{i32 19, i32 0, metadata !6088, null}
!6088 = metadata !{i32 589835, metadata !976, i32 18, i32 0, metadata !977, i32 0} ; [ DW_TAG_lexical_block ]
!6089 = metadata !{i32 20, i32 0, metadata !6088, null}
!6090 = metadata !{i32 31, i32 0, metadata !6088, null}
!6091 = metadata !{i32 33, i32 0, metadata !6088, null}
!6092 = metadata !{i32 35, i32 0, metadata !6088, null}
!6093 = metadata !{i32 22, i32 0, metadata !6094, null}
!6094 = metadata !{i32 589835, metadata !986, i32 21, i32 0, metadata !987, i32 0} ; [ DW_TAG_lexical_block ]
!6095 = metadata !{i32 23, i32 0, metadata !6094, null}
!6096 = metadata !{i32 31, i32 0, metadata !6094, null}
!6097 = metadata !{i32 32, i32 0, metadata !6094, null}
!6098 = metadata !{i32 30, i32 0, metadata !6094, null}
!6099 = metadata !{i32 36, i32 0, metadata !6094, null}
!6100 = metadata !{i32 24, i32 0, metadata !6101, null}
!6101 = metadata !{i32 589835, metadata !995, i32 15, i32 0, metadata !996, i32 0} ; [ DW_TAG_lexical_block ]
!6102 = metadata !{i32 27, i32 0, metadata !6101, null}
!6103 = metadata !{i32 28, i32 0, metadata !6101, null}
!6104 = metadata !{i32 30, i32 0, metadata !6101, null}
!6105 = metadata !{i32 26, i32 0, metadata !6101, null}
!6106 = metadata !{i32 33, i32 0, metadata !6101, null}
!6107 = metadata !{i32 1035, i32 0, metadata !6108, null}
!6108 = metadata !{i32 589835, metadata !1005, i32 1031, i32 0, metadata !1008, i32 0} ; [ DW_TAG_lexical_block ]
!6109 = metadata !{i32 1036, i32 0, metadata !6108, null}
!6110 = metadata !{i32 1038, i32 0, metadata !6108, null}
!6111 = metadata !{i32 1041, i32 0, metadata !6108, null}
!6112 = metadata !{i32 43, i32 0, metadata !6113, null}
!6113 = metadata !{i32 589835, metadata !1016, i32 28, i32 0, metadata !1017, i32 0} ; [ DW_TAG_lexical_block ]
!6114 = metadata !{i32 44, i32 0, metadata !6113, null}
!6115 = metadata !{i32 50, i32 0, metadata !6113, null}
!6116 = metadata !{i32 56, i32 0, metadata !6113, null}
!6117 = metadata !{i32 59, i32 0, metadata !6118, null}
!6118 = metadata !{i32 589835, metadata !6113, i32 58, i32 0, metadata !1017, i32 1} ; [ DW_TAG_lexical_block ]
!6119 = metadata !{i32 60, i32 0, metadata !6118, null}
!6120 = metadata !{i32 61, i32 0, metadata !6118, null}
!6121 = metadata !{i32 62, i32 0, metadata !6118, null}
!6122 = metadata !{i32 64, i32 0, metadata !6113, null}
!6123 = metadata !{i32 67, i32 0, metadata !6113, null}
!6124 = metadata !{i32 68, i32 0, metadata !6113, null}
!6125 = metadata !{i32 70, i32 0, metadata !6113, null}
!6126 = metadata !{i32 71, i32 0, metadata !6113, null}
!6127 = metadata !{i32 72, i32 0, metadata !6113, null}
!6128 = metadata !{i32 74, i32 0, metadata !6113, null}
!6129 = metadata !{i32 75, i32 0, metadata !6113, null}
!6130 = metadata !{i32 76, i32 0, metadata !6113, null}
!6131 = metadata !{i32 77, i32 0, metadata !6113, null}
!6132 = metadata !{i32 78, i32 0, metadata !6113, null}
!6133 = metadata !{i32 79, i32 0, metadata !6113, null}
!6134 = metadata !{i32 82, i32 0, metadata !6113, null}
!6135 = metadata !{i32 47, i32 0, metadata !6136, null}
!6136 = metadata !{i32 589835, metadata !1045, i32 46, i32 0, metadata !1046, i32 0} ; [ DW_TAG_lexical_block ]
!6137 = metadata !{i32 49, i32 0, metadata !6136, null}
!6138 = metadata !{i32 50, i32 0, metadata !6136, null}
!6139 = metadata !{i32 53, i32 0, metadata !6136, null}
!6140 = metadata !{i32 56, i32 0, metadata !6136, null}
!6141 = metadata !{i32 57, i32 0, metadata !6136, null}
!6142 = metadata !{i32 61, i32 0, metadata !6136, null}
!6143 = metadata !{i32 68, i32 0, metadata !6136, null}
!6144 = metadata !{i32 75, i32 0, metadata !6136, null}
!6145 = metadata !{i32 84, i32 0, metadata !6146, null}
!6146 = metadata !{i32 589835, metadata !6136, i32 46, i32 0, metadata !1046, i32 1} ; [ DW_TAG_lexical_block ]
!6147 = metadata !{i32 86, i32 0, metadata !6146, null}
!6148 = metadata !{i32 88, i32 0, metadata !6146, null}
!6149 = metadata !{i32 90, i32 0, metadata !6146, null}
!6150 = metadata !{i32 91, i32 0, metadata !6146, null}
!6151 = metadata !{i32 93, i32 0, metadata !6146, null}
!6152 = metadata !{i32 98, i32 0, metadata !6146, null}
!6153 = metadata !{i32 114, i32 0, metadata !6136, null}
!6154 = metadata !{i32 121, i32 0, metadata !6136, null}
!6155 = metadata !{i32 128, i32 0, metadata !6136, null}
!6156 = metadata !{i32 135, i32 0, metadata !6136, null}
!6157 = metadata !{i32 142, i32 0, metadata !6136, null}
!6158 = metadata !{i32 151, i32 0, metadata !6136, null}
!6159 = metadata !{i32 160, i32 0, metadata !6160, null}
!6160 = metadata !{i32 589835, metadata !6136, i32 160, i32 0, metadata !1046, i32 2} ; [ DW_TAG_lexical_block ]
!6161 = metadata !{i32 162, i32 0, metadata !6160, null}
!6162 = metadata !{i32 164, i32 0, metadata !6160, null}
!6163 = metadata !{i32 174, i32 0, metadata !6136, null}
!6164 = metadata !{i32 181, i32 0, metadata !6136, null}
!6165 = metadata !{i32 189, i32 0, metadata !6136, null}
!6166 = metadata !{i32 199, i32 0, metadata !6136, null}
!6167 = metadata !{i32 18, i32 0, metadata !6168, null}
!6168 = metadata !{i32 589835, metadata !1055, i32 17, i32 0, metadata !1058, i32 0} ; [ DW_TAG_lexical_block ]
!6169 = metadata !{i32 20, i32 0, metadata !6168, null}
!6170 = metadata !{i32 828, i32 0, metadata !6171, null}
!6171 = metadata !{i32 589835, metadata !1062, i32 824, i32 0, metadata !1065, i32 0} ; [ DW_TAG_lexical_block ]
!6172 = metadata !{i32 830, i32 0, metadata !6171, null}
!6173 = metadata !{i32 832, i32 0, metadata !6171, null}
!6174 = metadata !{i32 833, i32 0, metadata !6171, null}
!6175 = metadata !{i32 836, i32 0, metadata !6171, null}
!6176 = metadata !{i32 837, i32 0, metadata !6171, null}
!6177 = metadata !{i32 839, i32 0, metadata !6171, null}
!6178 = metadata !{i32 841, i32 0, metadata !6171, null}
!6179 = metadata !{i32 846, i32 0, metadata !6180, null}
!6180 = metadata !{i32 589835, metadata !6171, i32 846, i32 0, metadata !1065, i32 1} ; [ DW_TAG_lexical_block ]
!6181 = metadata !{i32 847, i32 0, metadata !6180, null}
!6182 = metadata !{i32 848, i32 0, metadata !6180, null}
!6183 = metadata !{i32 849, i32 0, metadata !6180, null}
!6184 = metadata !{i32 852, i32 0, metadata !6180, null}
!6185 = metadata !{i32 854, i32 0, metadata !6180, null}
!6186 = metadata !{i32 855, i32 0, metadata !6180, null}
!6187 = metadata !{i32 856, i32 0, metadata !6180, null}
!6188 = metadata !{i32 857, i32 0, metadata !6180, null}
!6189 = metadata !{i32 858, i32 0, metadata !6171, null}
!6190 = metadata !{i32 859, i32 0, metadata !6171, null}
!6191 = metadata !{i32 860, i32 0, metadata !6171, null}
!6192 = metadata !{i32 861, i32 0, metadata !6171, null}
!6193 = metadata !{i32 862, i32 0, metadata !6171, null}
!6194 = metadata !{i32 864, i32 0, metadata !6171, null}
!6195 = metadata !{i32 23, i32 0, metadata !6196, null}
!6196 = metadata !{i32 589835, metadata !1076, i32 19, i32 0, metadata !1077, i32 0} ; [ DW_TAG_lexical_block ]
!6197 = metadata !{i32 24, i32 0, metadata !6196, null}
!6198 = metadata !{i32 25, i32 0, metadata !6196, null}
!6199 = metadata !{i32 31, i32 0, metadata !6196, null}
!6200 = metadata !{i32 33, i32 0, metadata !6196, null}
!6201 = metadata !{i32 34, i32 0, metadata !6196, null}
!6202 = metadata !{i32 35, i32 0, metadata !6196, null}
!6203 = metadata !{i32 38, i32 0, metadata !6196, null}
!6204 = metadata !{i32 39, i32 0, metadata !6196, null}
!6205 = metadata !{i32 42, i32 0, metadata !6196, null}
!6206 = metadata !{i32 45, i32 0, metadata !6196, null}
!6207 = metadata !{i32 48, i32 0, metadata !6196, null}
!6208 = metadata !{i32 51, i32 0, metadata !6196, null}
!6209 = metadata !{i32 55, i32 0, metadata !6196, null}
!6210 = metadata !{i32 59, i32 0, metadata !6211, null}
!6211 = metadata !{i32 589835, metadata !1118, i32 52, i32 0, metadata !1119, i32 0} ; [ DW_TAG_lexical_block ]
!6212 = metadata !{i32 64, i32 0, metadata !6211, null}
!6213 = metadata !{i32 65, i32 0, metadata !6211, null}
!6214 = metadata !{i32 66, i32 0, metadata !6211, null}
!6215 = metadata !{i32 68, i32 0, metadata !6211, null}
!6216 = metadata !{i32 69, i32 0, metadata !6211, null}
!6217 = metadata !{i32 70, i32 0, metadata !6211, null}
!6218 = metadata !{i32 73, i32 0, metadata !6211, null}
!6219 = metadata !{i32 74, i32 0, metadata !6211, null}
!6220 = metadata !{i32 75, i32 0, metadata !6211, null}
!6221 = metadata !{i32 76, i32 0, metadata !6211, null}
!6222 = metadata !{i32 79, i32 0, metadata !6211, null}
!6223 = metadata !{i32 80, i32 0, metadata !6211, null}
!6224 = metadata !{i32 81, i32 0, metadata !6211, null}
!6225 = metadata !{i32 82, i32 0, metadata !6211, null}
!6226 = metadata !{i32 83, i32 0, metadata !6211, null}
!6227 = metadata !{i32 85, i32 0, metadata !6211, null}
!6228 = metadata !{i32 86, i32 0, metadata !6211, null}
!6229 = metadata !{i32 87, i32 0, metadata !6211, null}
!6230 = metadata !{i32 88, i32 0, metadata !6211, null}
!6231 = metadata !{i32 89, i32 0, metadata !6211, null}
!6232 = metadata !{i32 91, i32 0, metadata !6211, null}
!6233 = metadata !{i32 92, i32 0, metadata !6211, null}
!6234 = metadata !{i32 97, i32 0, metadata !6211, null}
!6235 = metadata !{i32 98, i32 0, metadata !6211, null}
!6236 = metadata !{i32 101, i32 0, metadata !6211, null}
!6237 = metadata !{i32 103, i32 0, metadata !6211, null}
!6238 = metadata !{i32 104, i32 0, metadata !6211, null}
!6239 = metadata !{i32 107, i32 0, metadata !6211, null}
!6240 = metadata !{i32 108, i32 0, metadata !6211, null}
!6241 = metadata !{i32 109, i32 0, metadata !6211, null}
!6242 = metadata !{i32 111, i32 0, metadata !6211, null}
!6243 = metadata !{i32 114, i32 0, metadata !6211, null}
!6244 = metadata !{i32 121, i32 0, metadata !6211, null}
!6245 = metadata !{i32 122, i32 0, metadata !6211, null}
!6246 = metadata !{i32 123, i32 0, metadata !6211, null}
!6247 = metadata !{i32 125, i32 0, metadata !6211, null}
!6248 = metadata !{i32 120, i32 0, metadata !6211, null}
!6249 = metadata !{i32 129, i32 0, metadata !6211, null}
!6250 = metadata !{i32 130, i32 0, metadata !6211, null}
!6251 = metadata !{i32 131, i32 0, metadata !6211, null}
!6252 = metadata !{i32 133, i32 0, metadata !6211, null}
!6253 = metadata !{i32 135, i32 0, metadata !6211, null}
!6254 = metadata !{i32 136, i32 0, metadata !6211, null}
!6255 = metadata !{i32 137, i32 0, metadata !6211, null}
!6256 = metadata !{i32 139, i32 0, metadata !6211, null}
!6257 = metadata !{i32 140, i32 0, metadata !6211, null}
!6258 = metadata !{i32 144, i32 0, metadata !6211, null}
!6259 = metadata !{i32 145, i32 0, metadata !6211, null}
!6260 = metadata !{i32 146, i32 0, metadata !6211, null}
!6261 = metadata !{i32 150, i32 0, metadata !6211, null}
!6262 = metadata !{i32 152, i32 0, metadata !6211, null}
!6263 = metadata !{i32 155, i32 0, metadata !6211, null}
!6264 = metadata !{i32 157, i32 0, metadata !6211, null}
!6265 = metadata !{i32 158, i32 0, metadata !6211, null}
!6266 = metadata !{i32 161, i32 0, metadata !6211, null}
!6267 = metadata !{i32 95, i32 0, metadata !6211, null}
!6268 = metadata !{i32 164, i32 0, metadata !6211, null}
!6269 = metadata !{i32 165, i32 0, metadata !6211, null}
!6270 = metadata !{i32 167, i32 0, metadata !6211, null}
!6271 = metadata !{i32 168, i32 0, metadata !6211, null}
!6272 = metadata !{i32 163, i32 0, metadata !6273, null}
!6273 = metadata !{i32 589835, metadata !1127, i32 162, i32 0, metadata !1130, i32 0} ; [ DW_TAG_lexical_block ]
!6274 = metadata !{i32 23, i32 0, metadata !6275, null}
!6275 = metadata !{i32 589835, metadata !1138, i32 19, i32 0, metadata !1139, i32 0} ; [ DW_TAG_lexical_block ]
!6276 = metadata !{i32 24, i32 0, metadata !6275, null}
!6277 = metadata !{i32 25, i32 0, metadata !6275, null}
!6278 = metadata !{i32 27, i32 0, metadata !6275, null}
!6279 = metadata !{i32 258, i32 0, metadata !6280, null}
!6280 = metadata !{i32 589835, metadata !1148, i32 211, i32 0, metadata !1149, i32 0} ; [ DW_TAG_lexical_block ]
!6281 = metadata !{i32 261, i32 0, metadata !6280, null}
!6282 = metadata !{i32 262, i32 0, metadata !6280, null}
!6283 = metadata !{i32 274, i32 0, metadata !6280, null}
!6284 = metadata !{i32 280, i32 0, metadata !6285, null}
!6285 = metadata !{i32 589835, metadata !1152, i32 278, i32 0, metadata !1149, i32 1} ; [ DW_TAG_lexical_block ]
!6286 = metadata !{i32 282, i32 0, metadata !6285, null}
!6287 = metadata !{i32 283, i32 0, metadata !6285, null}
!6288 = metadata !{i32 284, i32 0, metadata !6285, null}
!6289 = metadata !{i32 291, i32 0, metadata !6285, null}
!6290 = metadata !{i32 18, i32 0, metadata !1153, null}
!6291 = metadata !{i32 24, i32 0, metadata !6292, null}
!6292 = metadata !{i32 589835, metadata !1153, i32 18, i32 0, metadata !1154, i32 0} ; [ DW_TAG_lexical_block ]
!6293 = metadata !{i32 27, i32 0, metadata !6292, null}
!6294 = metadata !{i32 19, i32 0, metadata !1162, null}
!6295 = metadata !{i32 21, i32 0, metadata !6296, null}
!6296 = metadata !{i32 589835, metadata !1162, i32 19, i32 0, metadata !1163, i32 0} ; [ DW_TAG_lexical_block ]
!6297 = metadata !{i32 22, i32 0, metadata !6296, null}
!6298 = metadata !{i32 24, i32 0, metadata !6296, null}
!6299 = metadata !{i32 26, i32 0, metadata !6296, null}
!6300 = metadata !{i32 21, i32 0, metadata !1172, null}
!6301 = metadata !{i32 34, i32 0, metadata !6302, null}
!6302 = metadata !{i32 589835, metadata !1172, i32 21, i32 0, metadata !1173, i32 0} ; [ DW_TAG_lexical_block ]
!6303 = metadata !{i32 37, i32 0, metadata !6302, null}
!6304 = metadata !{i32 20, i32 0, metadata !6305, null}
!6305 = metadata !{i32 589835, metadata !1181, i32 19, i32 0, metadata !1182, i32 0} ; [ DW_TAG_lexical_block ]
!6306 = metadata !{i32 27, i32 0, metadata !6305, null}
!6307 = metadata !{i32 30, i32 0, metadata !6305, null}
!6308 = metadata !{i32 26, i32 0, metadata !6309, null}
!6309 = metadata !{i32 589835, metadata !1190, i32 24, i32 0, metadata !1191, i32 0} ; [ DW_TAG_lexical_block ]
!6310 = metadata !{i32 28, i32 0, metadata !6309, null}
!6311 = metadata !{i32 29, i32 0, metadata !6309, null}
!6312 = metadata !{i32 32, i32 0, metadata !6309, null}
!6313 = metadata !{i32 22, i32 0, metadata !6314, null}
!6314 = metadata !{i32 589835, metadata !1199, i32 19, i32 0, metadata !1200, i32 0} ; [ DW_TAG_lexical_block ]
!6315 = metadata !{i32 24, i32 0, metadata !6314, null}
!6316 = metadata !{i32 30, i32 0, metadata !6317, null}
!6317 = metadata !{i32 589835, metadata !1210, i32 18, i32 0, metadata !1211, i32 0} ; [ DW_TAG_lexical_block ]
!6318 = metadata !{i32 32, i32 0, metadata !6317, null}
!6319 = metadata !{i32 37, i32 0, metadata !6317, null}
!6320 = metadata !{i32 22, i32 0, metadata !6321, null}
!6321 = metadata !{i32 589835, metadata !1222, i32 21, i32 0, metadata !1223, i32 0} ; [ DW_TAG_lexical_block ]
!6322 = metadata !{i32 31, i32 0, metadata !6321, null}
!6323 = metadata !{i32 32, i32 0, metadata !6321, null}
!6324 = metadata !{i32 30, i32 0, metadata !6321, null}
!6325 = metadata !{i32 35, i32 0, metadata !6321, null}
!6326 = metadata !{i32 21, i32 0, metadata !6327, null}
!6327 = metadata !{i32 589835, metadata !1233, i32 18, i32 0, metadata !1234, i32 0} ; [ DW_TAG_lexical_block ]
!6328 = metadata !{i32 23, i32 0, metadata !6327, null}
!6329 = metadata !{i32 24, i32 0, metadata !6327, null}
!6330 = metadata !{i32 26, i32 0, metadata !6327, null}
!6331 = metadata !{i32 28, i32 0, metadata !6327, null}
!6332 = metadata !{i32 46, i32 0, metadata !6333, null}
!6333 = metadata !{i32 589835, metadata !1243, i32 29, i32 0, metadata !1244, i32 0} ; [ DW_TAG_lexical_block ]
!6334 = metadata !{i32 51, i32 0, metadata !6333, null}
!6335 = metadata !{i32 52, i32 0, metadata !6333, null}
!6336 = metadata !{i32 58, i32 0, metadata !6333, null}
!6337 = metadata !{i32 63, i32 0, metadata !6333, null}
!6338 = metadata !{i32 64, i32 0, metadata !6333, null}
!6339 = metadata !{i32 65, i32 0, metadata !6333, null}
!6340 = metadata !{i32 68, i32 0, metadata !6333, null}
!6341 = metadata !{i32 69, i32 0, metadata !6333, null}
!6342 = metadata !{i32 71, i32 0, metadata !6333, null}
!6343 = metadata !{i32 77, i32 0, metadata !6333, null}
!6344 = metadata !{i32 67, i32 0, metadata !6345, null}
!6345 = metadata !{i32 589835, metadata !1281, i32 36, i32 0, metadata !1282, i32 0} ; [ DW_TAG_lexical_block ]
!6346 = metadata !{i32 68, i32 0, metadata !6345, null}
!6347 = metadata !{i32 69, i32 0, metadata !6345, null}
!6348 = metadata !{i32 71, i32 0, metadata !6345, null}
!6349 = metadata !{i32 73, i32 0, metadata !6345, null}
!6350 = metadata !{i32 74, i32 0, metadata !6345, null}
!6351 = metadata !{i32 75, i32 0, metadata !6345, null}
!6352 = metadata !{i32 76, i32 0, metadata !6345, null}
!6353 = metadata !{i32 77, i32 0, metadata !6345, null}
!6354 = metadata !{i32 84, i32 0, metadata !6345, null}
!6355 = metadata !{i32 1168, i32 0, metadata !6356, null}
!6356 = metadata !{i32 589835, metadata !1302, i32 1167, i32 0, metadata !1305, i32 0} ; [ DW_TAG_lexical_block ]
!6357 = metadata !{i32 12, i32 0, metadata !6358, null}
!6358 = metadata !{i32 589835, metadata !1311, i32 11, i32 0, metadata !1312, i32 0} ; [ DW_TAG_lexical_block ]
!6359 = metadata !{i32 161, i32 0, metadata !6360, null}
!6360 = metadata !{i32 589835, metadata !1318, i32 158, i32 0, metadata !1321, i32 0} ; [ DW_TAG_lexical_block ]
!6361 = metadata !{i32 162, i32 0, metadata !6360, null}
!6362 = metadata !{i32 165, i32 0, metadata !6360, null}
!6363 = metadata !{i32 166, i32 0, metadata !6360, null}
!6364 = metadata !{i32 167, i32 0, metadata !6360, null}
!6365 = metadata !{i32 170, i32 0, metadata !6360, null}
!6366 = metadata !{i32 171, i32 0, metadata !6360, null}
!6367 = metadata !{i32 172, i32 0, metadata !6360, null}
!6368 = metadata !{i32 174, i32 0, metadata !6360, null}
!6369 = metadata !{i32 176, i32 0, metadata !6360, null}
!6370 = metadata !{i32 117, i32 0, metadata !1330, null}
!6371 = metadata !{i32 117, i32 0, metadata !6372, null}
!6372 = metadata !{i32 589835, metadata !1330, i32 117, i32 0, metadata !1333, i32 0} ; [ DW_TAG_lexical_block ]
!6373 = metadata !{i32 118, i32 0, metadata !1346, null}
!6374 = metadata !{i32 118, i32 0, metadata !6375, null}
!6375 = metadata !{i32 589835, metadata !1346, i32 118, i32 0, metadata !1333, i32 1} ; [ DW_TAG_lexical_block ]
!6376 = metadata !{i32 119, i32 0, metadata !1347, null}
!6377 = metadata !{i32 119, i32 0, metadata !6378, null}
!6378 = metadata !{i32 589835, metadata !1347, i32 119, i32 0, metadata !1333, i32 2} ; [ DW_TAG_lexical_block ]
!6379 = metadata !{i32 29, i32 0, metadata !6380, null}
!6380 = metadata !{i32 589835, metadata !1348, i32 28, i32 0, metadata !1349, i32 0} ; [ DW_TAG_lexical_block ]
!6381 = metadata !{i32 38, i32 0, metadata !6380, null}
!6382 = metadata !{i32 39, i32 0, metadata !6380, null}
!6383 = metadata !{i32 40, i32 0, metadata !6380, null}
!6384 = metadata !{i32 47, i32 0, metadata !6380, null}
!6385 = metadata !{i32 48, i32 0, metadata !6380, null}
!6386 = metadata !{i32 49, i32 0, metadata !6380, null}
!6387 = metadata !{i32 52, i32 0, metadata !6380, null}
!6388 = metadata !{i32 53, i32 0, metadata !6380, null}
!6389 = metadata !{i32 68, i32 0, metadata !6380, null}
!6390 = metadata !{i32 44, i32 0, metadata !6391, null}
!6391 = metadata !{i32 589835, metadata !1388, i32 35, i32 0, metadata !1389, i32 0} ; [ DW_TAG_lexical_block ]
!6392 = metadata !{i32 47, i32 0, metadata !6391, null}
!6393 = metadata !{i32 49, i32 0, metadata !6391, null}
!6394 = metadata !{i32 51, i32 0, metadata !6391, null}
!6395 = metadata !{i32 52, i32 0, metadata !6391, null}
!6396 = metadata !{i32 62, i32 0, metadata !6391, null}
!6397 = metadata !{i32 63, i32 0, metadata !6391, null}
!6398 = metadata !{i32 70, i32 0, metadata !6391, null}
!6399 = metadata !{i32 73, i32 0, metadata !6391, null}
!6400 = metadata !{i32 76, i32 0, metadata !6401, null}
!6401 = metadata !{i32 589835, metadata !6391, i32 76, i32 0, metadata !1389, i32 1} ; [ DW_TAG_lexical_block ]
!6402 = metadata !{i32 77, i32 0, metadata !6401, null}
!6403 = metadata !{i32 80, i32 0, metadata !6401, null}
!6404 = metadata !{i32 83, i32 0, metadata !6401, null}
!6405 = metadata !{i32 88, i32 0, metadata !6401, null}
!6406 = metadata !{i32 89, i32 0, metadata !6401, null}
!6407 = metadata !{i32 90, i32 0, metadata !6401, null}
!6408 = metadata !{i32 92, i32 0, metadata !6401, null}
!6409 = metadata !{i32 94, i32 0, metadata !6401, null}
!6410 = metadata !{i32 99, i32 0, metadata !6391, null}
!6411 = metadata !{i32 30, i32 0, metadata !6412, null}
!6412 = metadata !{i32 589835, metadata !1430, i32 21, i32 0, metadata !1431, i32 0} ; [ DW_TAG_lexical_block ]
!6413 = metadata !{i32 34, i32 0, metadata !6412, null}
!6414 = metadata !{i32 35, i32 0, metadata !6412, null}
!6415 = metadata !{i32 36, i32 0, metadata !6412, null}
!6416 = metadata !{i32 37, i32 0, metadata !6412, null}
!6417 = metadata !{i32 39, i32 0, metadata !6412, null}
!6418 = metadata !{i32 40, i32 0, metadata !6412, null}
!6419 = metadata !{i32 42, i32 0, metadata !6412, null}
!6420 = metadata !{i32 46, i32 0, metadata !6412, null}
!6421 = metadata !{i32 47, i32 0, metadata !6412, null}
!6422 = metadata !{i32 48, i32 0, metadata !6412, null}
!6423 = metadata !{i32 49, i32 0, metadata !6412, null}
!6424 = metadata !{i32 52, i32 0, metadata !6412, null}
!6425 = metadata !{i32 53, i32 0, metadata !6412, null}
!6426 = metadata !{i32 54, i32 0, metadata !6412, null}
!6427 = metadata !{i32 56, i32 0, metadata !6412, null}
!6428 = metadata !{i32 57, i32 0, metadata !6412, null}
!6429 = metadata !{i32 58, i32 0, metadata !6412, null}
!6430 = metadata !{i32 59, i32 0, metadata !6412, null}
!6431 = metadata !{i32 60, i32 0, metadata !6412, null}
!6432 = metadata !{i32 65, i32 0, metadata !6412, null}
!6433 = metadata !{i32 68, i32 0, metadata !6412, null}
!6434 = metadata !{i32 69, i32 0, metadata !6412, null}
!6435 = metadata !{i32 70, i32 0, metadata !6412, null}
!6436 = metadata !{i32 79, i32 0, metadata !6412, null}
!6437 = metadata !{i32 36, i32 0, metadata !6438, null}
!6438 = metadata !{i32 589835, metadata !1472, i32 23, i32 0, metadata !1473, i32 0} ; [ DW_TAG_lexical_block ]
!6439 = metadata !{i32 38, i32 0, metadata !6438, null}
!6440 = metadata !{i32 39, i32 0, metadata !6438, null}
!6441 = metadata !{i32 42, i32 0, metadata !6438, null}
!6442 = metadata !{i32 34, i32 0, metadata !6443, null}
!6443 = metadata !{i32 589835, metadata !1512, i32 29, i32 0, metadata !1513, i32 0} ; [ DW_TAG_lexical_block ]
!6444 = metadata !{i32 35, i32 0, metadata !6443, null}
!6445 = metadata !{i32 39, i32 0, metadata !6443, null}
!6446 = metadata !{i32 43, i32 0, metadata !6443, null}
!6447 = metadata !{i32 47, i32 0, metadata !6443, null}
!6448 = metadata !{i32 49, i32 0, metadata !6443, null}
!6449 = metadata !{i32 51, i32 0, metadata !6443, null}
!6450 = metadata !{i32 53, i32 0, metadata !6443, null}
!6451 = metadata !{i32 56, i32 0, metadata !6443, null}
!6452 = metadata !{i32 58, i32 0, metadata !6443, null}
!6453 = metadata !{i32 63, i32 0, metadata !6443, null}
!6454 = metadata !{i32 64, i32 0, metadata !6443, null}
!6455 = metadata !{i32 74, i32 0, metadata !6443, null}
!6456 = metadata !{i32 78, i32 0, metadata !6443, null}
!6457 = metadata !{i32 35, i32 0, metadata !6458, null}
!6458 = metadata !{i32 589835, metadata !1550, i32 30, i32 0, metadata !1551, i32 0} ; [ DW_TAG_lexical_block ]
!6459 = metadata !{i32 36, i32 0, metadata !6458, null}
!6460 = metadata !{i32 40, i32 0, metadata !6458, null}
!6461 = metadata !{i32 44, i32 0, metadata !6458, null}
!6462 = metadata !{i32 48, i32 0, metadata !6458, null}
!6463 = metadata !{i32 50, i32 0, metadata !6458, null}
!6464 = metadata !{i32 52, i32 0, metadata !6458, null}
!6465 = metadata !{i32 54, i32 0, metadata !6458, null}
!6466 = metadata !{i32 57, i32 0, metadata !6458, null}
!6467 = metadata !{i32 58, i32 0, metadata !6458, null}
!6468 = metadata !{i32 67, i32 0, metadata !6458, null}
!6469 = metadata !{i32 82, i32 0, metadata !6458, null}
!6470 = metadata !{i32 83, i32 0, metadata !6458, null}
!6471 = metadata !{i32 85, i32 0, metadata !6458, null}
!6472 = metadata !{i32 88, i32 0, metadata !6458, null}
!6473 = metadata !{i32 89, i32 0, metadata !6458, null}
!6474 = metadata !{i32 90, i32 0, metadata !6458, null}
!6475 = metadata !{i32 94, i32 0, metadata !6458, null}
!6476 = metadata !{i32 23, i32 0, metadata !6477, null}
!6477 = metadata !{i32 589835, metadata !1588, i32 18, i32 0, metadata !1589, i32 0} ; [ DW_TAG_lexical_block ]
!6478 = metadata !{i32 24, i32 0, metadata !6477, null}
!6479 = metadata !{i32 25, i32 0, metadata !6477, null}
!6480 = metadata !{i32 28, i32 0, metadata !6477, null}
!6481 = metadata !{i32 49, i32 0, metadata !6482, null}
!6482 = metadata !{i32 589835, metadata !1628, i32 44, i32 0, metadata !1629, i32 0} ; [ DW_TAG_lexical_block ]
!6483 = metadata !{i32 50, i32 0, metadata !6482, null}
!6484 = metadata !{i32 51, i32 0, metadata !6482, null}
!6485 = metadata !{i32 52, i32 0, metadata !6482, null}
!6486 = metadata !{i32 53, i32 0, metadata !6482, null}
!6487 = metadata !{i32 54, i32 0, metadata !6482, null}
!6488 = metadata !{i32 56, i32 0, metadata !6482, null}
!6489 = metadata !{i32 57, i32 0, metadata !6482, null}
!6490 = metadata !{i32 60, i32 0, metadata !6482, null}
!6491 = metadata !{i32 62, i32 0, metadata !6482, null}
!6492 = metadata !{i32 67, i32 0, metadata !6482, null}
!6493 = metadata !{i32 68, i32 0, metadata !6482, null}
!6494 = metadata !{i32 71, i32 0, metadata !6482, null}
!6495 = metadata !{i32 72, i32 0, metadata !6482, null}
!6496 = metadata !{i32 73, i32 0, metadata !6482, null}
!6497 = metadata !{i32 74, i32 0, metadata !6482, null}
!6498 = metadata !{i32 101, i32 0, metadata !6482, null}
!6499 = metadata !{i32 102, i32 0, metadata !6482, null}
!6500 = metadata !{i32 103, i32 0, metadata !6482, null}
!6501 = metadata !{i32 105, i32 0, metadata !6482, null}
!6502 = metadata !{i32 107, i32 0, metadata !6482, null}
!6503 = metadata !{i32 120, i32 0, metadata !6482, null}
!6504 = metadata !{i32 121, i32 0, metadata !6482, null}
!6505 = metadata !{i32 128, i32 0, metadata !6482, null}
!6506 = metadata !{i32 131, i32 0, metadata !6482, null}
!6507 = metadata !{i32 140, i32 0, metadata !6482, null}
!6508 = metadata !{i32 143, i32 0, metadata !6482, null}
!6509 = metadata !{i32 146, i32 0, metadata !6482, null}
!6510 = metadata !{i32 152, i32 0, metadata !6482, null}
!6511 = metadata !{i32 155, i32 0, metadata !6482, null}
!6512 = metadata !{i32 173, i32 0, metadata !6482, null}
!6513 = metadata !{i32 174, i32 0, metadata !6482, null}
!6514 = metadata !{i32 175, i32 0, metadata !6482, null}
!6515 = metadata !{i32 177, i32 0, metadata !6482, null}
!6516 = metadata !{i32 178, i32 0, metadata !6482, null}
!6517 = metadata !{i32 179, i32 0, metadata !6482, null}
!6518 = metadata !{i32 180, i32 0, metadata !6482, null}
!6519 = metadata !{i32 186, i32 0, metadata !6482, null}
!6520 = metadata !{i32 191, i32 0, metadata !6482, null}
!6521 = metadata !{i32 192, i32 0, metadata !6482, null}
!6522 = metadata !{i32 193, i32 0, metadata !6482, null}
!6523 = metadata !{i32 199, i32 0, metadata !6482, null}
!6524 = metadata !{i32 202, i32 0, metadata !6482, null}
!6525 = metadata !{i32 224, i32 0, metadata !6482, null}
!6526 = metadata !{i32 225, i32 0, metadata !6482, null}
!6527 = metadata !{i32 233, i32 0, metadata !6482, null}
!6528 = metadata !{i32 32, i32 0, metadata !6529, null}
!6529 = metadata !{i32 589835, metadata !1672, i32 25, i32 0, metadata !1675, i32 0} ; [ DW_TAG_lexical_block ]
!6530 = metadata !{i32 33, i32 0, metadata !6529, null}
!6531 = metadata !{i32 36, i32 0, metadata !6529, null}
!6532 = metadata !{i32 37, i32 0, metadata !6529, null}
!6533 = metadata !{i32 43, i32 0, metadata !6529, null}
!6534 = metadata !{i32 51, i32 0, metadata !6529, null}
!6535 = metadata !{i32 55, i32 0, metadata !6529, null}
!6536 = metadata !{i32 56, i32 0, metadata !6529, null}
!6537 = metadata !{i32 57, i32 0, metadata !6529, null}
!6538 = metadata !{i32 62, i32 0, metadata !6529, null}
!6539 = metadata !{i32 65, i32 0, metadata !6529, null}
!6540 = metadata !{i32 68, i32 0, metadata !6529, null}
!6541 = metadata !{i32 76, i32 0, metadata !6529, null}
!6542 = metadata !{i32 34, i32 0, metadata !6543, null}
!6543 = metadata !{i32 589835, metadata !1714, i32 32, i32 0, metadata !1715, i32 0} ; [ DW_TAG_lexical_block ]
!6544 = metadata !{i32 38, i32 0, metadata !6543, null}
!6545 = metadata !{i32 39, i32 0, metadata !6543, null}
!6546 = metadata !{i32 43, i32 0, metadata !6543, null}
!6547 = metadata !{i32 44, i32 0, metadata !6543, null}
!6548 = metadata !{i32 51, i32 0, metadata !6543, null}
!6549 = metadata !{i32 54, i32 0, metadata !6543, null}
!6550 = metadata !{i32 55, i32 0, metadata !6543, null}
!6551 = metadata !{i32 56, i32 0, metadata !6543, null}
!6552 = metadata !{i32 59, i32 0, metadata !6543, null}
!6553 = metadata !{i32 60, i32 0, metadata !6543, null}
!6554 = metadata !{i32 63, i32 0, metadata !6555, null}
!6555 = metadata !{i32 589835, metadata !6543, i32 63, i32 0, metadata !1715, i32 1} ; [ DW_TAG_lexical_block ]
!6556 = metadata !{i32 64, i32 0, metadata !6543, null}
!6557 = metadata !{i32 65, i32 0, metadata !6543, null}
!6558 = metadata !{i32 71, i32 0, metadata !6543, null}
!6559 = metadata !{i32 72, i32 0, metadata !6543, null}
!6560 = metadata !{i32 81, i32 0, metadata !6543, null}
!6561 = metadata !{i32 30, i32 0, metadata !6562, null}
!6562 = metadata !{i32 589835, metadata !1761, i32 27, i32 0, metadata !1762, i32 0} ; [ DW_TAG_lexical_block ]
!6563 = metadata !{i32 596, i32 0, metadata !6564, null}
!6564 = metadata !{i32 589835, metadata !1767, i32 593, i32 0, metadata !1770, i32 0} ; [ DW_TAG_lexical_block ]
!6565 = metadata !{i32 599, i32 0, metadata !6564, null}
!6566 = metadata !{i32 601, i32 0, metadata !6564, null}
!6567 = metadata !{i32 705, i32 0, metadata !6568, null}
!6568 = metadata !{i32 589835, metadata !1779, i32 698, i32 0, metadata !1782, i32 0} ; [ DW_TAG_lexical_block ]
!6569 = metadata !{i32 706, i32 0, metadata !6568, null}
!6570 = metadata !{i32 716, i32 0, metadata !6568, null}
!6571 = metadata !{i32 725, i32 0, metadata !6568, null}
!6572 = metadata !{i32 726, i32 0, metadata !6568, null}
!6573 = metadata !{i32 727, i32 0, metadata !6568, null}
!6574 = metadata !{i32 729, i32 0, metadata !6568, null}
!6575 = metadata !{i32 730, i32 0, metadata !6568, null}
!6576 = metadata !{i32 734, i32 0, metadata !6568, null}
!6577 = metadata !{i32 735, i32 0, metadata !6568, null}
!6578 = metadata !{i32 738, i32 0, metadata !6568, null}
!6579 = metadata !{i32 739, i32 0, metadata !6568, null}
!6580 = metadata !{i32 774, i32 0, metadata !6568, null}
!6581 = metadata !{i32 775, i32 0, metadata !6568, null}
!6582 = metadata !{i32 778, i32 0, metadata !6568, null}
!6583 = metadata !{i32 782, i32 0, metadata !6568, null}
!6584 = metadata !{i32 783, i32 0, metadata !6568, null}
!6585 = metadata !{i32 785, i32 0, metadata !6568, null}
!6586 = metadata !{i32 786, i32 0, metadata !6568, null}
!6587 = metadata !{i32 787, i32 0, metadata !6568, null}
!6588 = metadata !{i32 773, i32 0, metadata !6568, null}
!6589 = metadata !{i32 789, i32 0, metadata !6568, null}
!6590 = metadata !{i32 790, i32 0, metadata !6568, null}
!6591 = metadata !{i32 792, i32 0, metadata !6568, null}
!6592 = metadata !{i32 20, i32 0, metadata !6593, null}
!6593 = metadata !{i32 589835, metadata !1802, i32 19, i32 0, metadata !1803, i32 0} ; [ DW_TAG_lexical_block ]
!6594 = metadata !{i32 21, i32 0, metadata !6593, null}
!6595 = metadata !{i32 29, i32 0, metadata !6593, null}
!6596 = metadata !{i32 30, i32 0, metadata !6593, null}
!6597 = metadata !{i32 28, i32 0, metadata !6593, null}
!6598 = metadata !{i32 34, i32 0, metadata !6593, null}
!6599 = metadata !{i32 37, i32 0, metadata !6600, null}
!6600 = metadata !{i32 589835, metadata !1811, i32 18, i32 0, metadata !1812, i32 0} ; [ DW_TAG_lexical_block ]
!6601 = metadata !{i32 38, i32 0, metadata !6600, null}
!6602 = metadata !{i32 40, i32 0, metadata !6600, null}
!6603 = metadata !{i32 42, i32 0, metadata !6600, null}
!6604 = metadata !{i32 43, i32 0, metadata !6600, null}
!6605 = metadata !{i32 41, i32 0, metadata !6600, null}
!6606 = metadata !{i32 47, i32 0, metadata !6600, null}
!6607 = metadata !{i32 48, i32 0, metadata !6600, null}
!6608 = metadata !{i32 46, i32 0, metadata !6600, null}
!6609 = metadata !{i32 52, i32 0, metadata !6600, null}
!6610 = metadata !{i32 19, i32 0, metadata !6611, null}
!6611 = metadata !{i32 589835, metadata !1820, i32 18, i32 0, metadata !1821, i32 0} ; [ DW_TAG_lexical_block ]
!6612 = metadata !{i32 28, i32 0, metadata !6611, null}
!6613 = metadata !{i32 29, i32 0, metadata !6611, null}
!6614 = metadata !{i32 27, i32 0, metadata !6611, null}
!6615 = metadata !{i32 32, i32 0, metadata !6611, null}
!6616 = metadata !{i32 17, i32 0, metadata !6617, null}
!6617 = metadata !{i32 589835, metadata !1830, i32 16, i32 0, metadata !1831, i32 0} ; [ DW_TAG_lexical_block ]
!6618 = metadata !{i32 47, i32 0, metadata !6619, null}
!6619 = metadata !{i32 589835, metadata !1836, i32 43, i32 0, metadata !1837, i32 0} ; [ DW_TAG_lexical_block ]
!6620 = metadata !{i32 48, i32 0, metadata !6619, null}
!6621 = metadata !{i32 49, i32 0, metadata !6619, null}
!6622 = metadata !{i32 50, i32 0, metadata !6619, null}
!6623 = metadata !{i32 52, i32 0, metadata !6619, null}
!6624 = metadata !{i32 58, i32 0, metadata !6619, null}
!6625 = metadata !{i32 62, i32 0, metadata !6619, null}
!6626 = metadata !{i32 63, i32 0, metadata !6619, null}
!6627 = metadata !{i32 64, i32 0, metadata !6619, null}
!6628 = metadata !{i32 65, i32 0, metadata !6619, null}
!6629 = metadata !{i32 67, i32 0, metadata !6619, null}
!6630 = metadata !{i32 71, i32 0, metadata !6619, null}
!6631 = metadata !{i32 19, i32 0, metadata !6632, null}
!6632 = metadata !{i32 589835, metadata !1934, i32 16, i32 0, metadata !1935, i32 0} ; [ DW_TAG_lexical_block ]
!6633 = metadata !{i32 21, i32 0, metadata !6632, null}
!6634 = metadata !{i32 1226, i32 0, metadata !6635, null}
!6635 = metadata !{i32 589835, metadata !1942, i32 1225, i32 0, metadata !1945, i32 0} ; [ DW_TAG_lexical_block ]
!6636 = metadata !{i32 1228, i32 0, metadata !6635, null}
!6637 = metadata !{i32 1229, i32 0, metadata !6638, null}
!6638 = metadata !{i32 589835, metadata !6635, i32 1229, i32 0, metadata !1945, i32 1} ; [ DW_TAG_lexical_block ]
!6639 = metadata !{i32 1230, i32 0, metadata !6638, null}
!6640 = metadata !{i32 1231, i32 0, metadata !6638, null}
!6641 = metadata !{i32 1232, i32 0, metadata !6638, null}
!6642 = metadata !{i32 1235, i32 0, metadata !6638, null}
!6643 = metadata !{i32 1237, i32 0, metadata !6635, null}
!6644 = metadata !{i32 1424, i32 0, metadata !6645, null}
!6645 = metadata !{i32 589835, metadata !1986, i32 1423, i32 0, metadata !1945, i32 2} ; [ DW_TAG_lexical_block ]
!6646 = metadata !{i32 1429, i32 0, metadata !6645, null}
!6647 = metadata !{i32 1431, i32 0, metadata !6645, null}
!6648 = metadata !{i32 1430, i32 0, metadata !6645, null}
!6649 = metadata !{i32 1434, i32 0, metadata !6645, null}
!6650 = metadata !{i32 1464, i32 0, metadata !6651, null}
!6651 = metadata !{i32 589835, metadata !1989, i32 1440, i32 0, metadata !1945, i32 3} ; [ DW_TAG_lexical_block ]
!6652 = metadata !{i32 1477, i32 0, metadata !6651, null}
!6653 = metadata !{i32 1478, i32 0, metadata !6651, null}
!6654 = metadata !{i32 1479, i32 0, metadata !6651, null}
!6655 = metadata !{i32 1490, i32 0, metadata !6651, null}
!6656 = metadata !{i32 1496, i32 0, metadata !6651, null}
!6657 = metadata !{i32 1498, i32 0, metadata !6651, null}
!6658 = metadata !{i32 1510, i32 0, metadata !6659, null}
!6659 = metadata !{i32 589835, metadata !6651, i32 1510, i32 0, metadata !1945, i32 4} ; [ DW_TAG_lexical_block ]
!6660 = metadata !{i32 1513, i32 0, metadata !6659, null}
!6661 = metadata !{i32 1514, i32 0, metadata !6659, null}
!6662 = metadata !{i32 1517, i32 0, metadata !6659, null}
!6663 = metadata !{i32 1518, i32 0, metadata !6659, null}
!6664 = metadata !{i32 1523, i32 0, metadata !6665, null}
!6665 = metadata !{i32 589835, metadata !6651, i32 1523, i32 0, metadata !1945, i32 5} ; [ DW_TAG_lexical_block ]
!6666 = metadata !{i32 1525, i32 0, metadata !6665, null}
!6667 = metadata !{i32 1526, i32 0, metadata !6665, null}
!6668 = metadata !{i32 1529, i32 0, metadata !6665, null}
!6669 = metadata !{i32 1531, i32 0, metadata !6665, null}
!6670 = metadata !{i32 1532, i32 0, metadata !6665, null}
!6671 = metadata !{i32 1539, i32 0, metadata !6665, null}
!6672 = metadata !{i32 1540, i32 0, metadata !6665, null}
!6673 = metadata !{i32 1541, i32 0, metadata !6665, null}
!6674 = metadata !{i32 1543, i32 0, metadata !6665, null}
!6675 = metadata !{i32 1544, i32 0, metadata !6665, null}
!6676 = metadata !{i32 1548, i32 0, metadata !6665, null}
!6677 = metadata !{i32 1549, i32 0, metadata !6665, null}
!6678 = metadata !{i32 1550, i32 0, metadata !6665, null}
!6679 = metadata !{i32 1552, i32 0, metadata !6665, null}
!6680 = metadata !{i32 1553, i32 0, metadata !6665, null}
!6681 = metadata !{i32 1557, i32 0, metadata !6665, null}
!6682 = metadata !{i32 1559, i32 0, metadata !6665, null}
!6683 = metadata !{i32 1560, i32 0, metadata !6665, null}
!6684 = metadata !{i32 1567, i32 0, metadata !6665, null}
!6685 = metadata !{i32 1571, i32 0, metadata !6665, null}
!6686 = metadata !{i32 1572, i32 0, metadata !6665, null}
!6687 = metadata !{i32 1573, i32 0, metadata !6665, null}
!6688 = metadata !{i32 1574, i32 0, metadata !6665, null}
!6689 = metadata !{i32 1575, i32 0, metadata !6665, null}
!6690 = metadata !{i32 1576, i32 0, metadata !6665, null}
!6691 = metadata !{i32 1577, i32 0, metadata !6665, null}
!6692 = metadata !{i32 1578, i32 0, metadata !6665, null}
!6693 = metadata !{i32 1579, i32 0, metadata !6665, null}
!6694 = metadata !{i32 1582, i32 0, metadata !6665, null}
!6695 = metadata !{i32 1590, i32 0, metadata !6665, null}
!6696 = metadata !{i32 1591, i32 0, metadata !6665, null}
!6697 = metadata !{i32 1592, i32 0, metadata !6665, null}
!6698 = metadata !{i32 1593, i32 0, metadata !6665, null}
!6699 = metadata !{i32 1595, i32 0, metadata !6665, null}
!6700 = metadata !{i32 1596, i32 0, metadata !6665, null}
!6701 = metadata !{i32 1598, i32 0, metadata !6665, null}
!6702 = metadata !{i32 1599, i32 0, metadata !6665, null}
!6703 = metadata !{i32 1602, i32 0, metadata !6665, null}
!6704 = metadata !{i32 1603, i32 0, metadata !6665, null}
!6705 = metadata !{i32 1604, i32 0, metadata !6665, null}
!6706 = metadata !{i32 1606, i32 0, metadata !6665, null}
!6707 = metadata !{i32 1607, i32 0, metadata !6665, null}
!6708 = metadata !{i32 1611, i32 0, metadata !6665, null}
!6709 = metadata !{i32 1612, i32 0, metadata !6665, null}
!6710 = metadata !{i32 1613, i32 0, metadata !6665, null}
!6711 = metadata !{i32 1617, i32 0, metadata !6665, null}
!6712 = metadata !{i32 1620, i32 0, metadata !6665, null}
!6713 = metadata !{i32 1621, i32 0, metadata !6665, null}
!6714 = metadata !{i32 1624, i32 0, metadata !6715, null}
!6715 = metadata !{i32 589835, metadata !6665, i32 1624, i32 0, metadata !1945, i32 6} ; [ DW_TAG_lexical_block ]
!6716 = metadata !{i32 1630, i32 0, metadata !6715, null}
!6717 = metadata !{i32 1631, i32 0, metadata !6715, null}
!6718 = metadata !{i32 1633, i32 0, metadata !6715, null}
!6719 = metadata !{i32 1635, i32 0, metadata !6715, null}
!6720 = metadata !{i32 1639, i32 0, metadata !6665, null}
!6721 = metadata !{i32 1643, i32 0, metadata !6665, null}
!6722 = metadata !{i32 1644, i32 0, metadata !6665, null}
!6723 = metadata !{i32 1645, i32 0, metadata !6665, null}
!6724 = metadata !{i32 1653, i32 0, metadata !6665, null}
!6725 = metadata !{i32 1659, i32 0, metadata !6665, null}
!6726 = metadata !{i32 1662, i32 0, metadata !6665, null}
!6727 = metadata !{i32 1663, i32 0, metadata !6665, null}
!6728 = metadata !{i32 1664, i32 0, metadata !6665, null}
!6729 = metadata !{i32 1665, i32 0, metadata !6665, null}
!6730 = metadata !{i32 1667, i32 0, metadata !6665, null}
!6731 = metadata !{i32 1672, i32 0, metadata !6665, null}
!6732 = metadata !{i32 1673, i32 0, metadata !6665, null}
!6733 = metadata !{i32 1674, i32 0, metadata !6665, null}
!6734 = metadata !{i32 1675, i32 0, metadata !6665, null}
!6735 = metadata !{i32 1679, i32 0, metadata !6665, null}
!6736 = metadata !{i32 1685, i32 0, metadata !6665, null}
!6737 = metadata !{i32 1686, i32 0, metadata !6665, null}
!6738 = metadata !{i32 1689, i32 0, metadata !6665, null}
!6739 = metadata !{i32 1690, i32 0, metadata !6665, null}
!6740 = metadata !{i32 1691, i32 0, metadata !6665, null}
!6741 = metadata !{i32 1692, i32 0, metadata !6665, null}
!6742 = metadata !{i32 1777, i32 0, metadata !6665, null}
!6743 = metadata !{i32 1788, i32 0, metadata !6744, null}
!6744 = metadata !{i32 589835, metadata !6665, i32 1788, i32 0, metadata !1945, i32 7} ; [ DW_TAG_lexical_block ]
!6745 = metadata !{i32 1789, i32 0, metadata !6744, null}
!6746 = metadata !{i32 1790, i32 0, metadata !6744, null}
!6747 = metadata !{i32 1792, i32 0, metadata !6744, null}
!6748 = metadata !{i32 1793, i32 0, metadata !6744, null}
!6749 = metadata !{i32 1795, i32 0, metadata !6665, null}
!6750 = metadata !{i32 1796, i32 0, metadata !6665, null}
!6751 = metadata !{i32 1797, i32 0, metadata !6665, null}
!6752 = metadata !{i32 1801, i32 0, metadata !6665, null}
!6753 = metadata !{i32 1802, i32 0, metadata !6665, null}
!6754 = metadata !{i32 1803, i32 0, metadata !6665, null}
!6755 = metadata !{i32 1805, i32 0, metadata !6665, null}
!6756 = metadata !{i32 1807, i32 0, metadata !6665, null}
!6757 = metadata !{i32 1808, i32 0, metadata !6665, null}
!6758 = metadata !{i32 1809, i32 0, metadata !6665, null}
!6759 = metadata !{i32 1815, i32 0, metadata !6665, null}
!6760 = metadata !{i32 1817, i32 0, metadata !6665, null}
!6761 = metadata !{i32 1818, i32 0, metadata !6665, null}
!6762 = metadata !{i32 1822, i32 0, metadata !6763, null}
!6763 = metadata !{i32 589835, metadata !6665, i32 1822, i32 0, metadata !1945, i32 8} ; [ DW_TAG_lexical_block ]
!6764 = metadata !{i32 1824, i32 0, metadata !6763, null}
!6765 = metadata !{i32 1825, i32 0, metadata !6763, null}
!6766 = metadata !{i32 1827, i32 0, metadata !6763, null}
!6767 = metadata !{i32 1828, i32 0, metadata !6763, null}
!6768 = metadata !{i32 1830, i32 0, metadata !6763, null}
!6769 = metadata !{i32 1823, i32 0, metadata !6763, null}
!6770 = metadata !{i32 1853, i32 0, metadata !6665, null}
!6771 = metadata !{i32 1854, i32 0, metadata !6665, null}
!6772 = metadata !{i32 1858, i32 0, metadata !6651, null}
!6773 = metadata !{i32 1875, i32 0, metadata !6774, null}
!6774 = metadata !{i32 589835, metadata !2049, i32 1867, i32 0, metadata !1945, i32 9} ; [ DW_TAG_lexical_block ]
!6775 = metadata !{i32 1876, i32 0, metadata !6774, null}
!6776 = metadata !{i32 1880, i32 0, metadata !6774, null}
!6777 = metadata !{i32 1887, i32 0, metadata !6774, null}
!6778 = metadata !{i32 1888, i32 0, metadata !6774, null}
!6779 = metadata !{i32 1889, i32 0, metadata !6774, null}
!6780 = metadata !{i32 1894, i32 0, metadata !6774, null}
!6781 = metadata !{i32 1896, i32 0, metadata !6774, null}
!6782 = metadata !{i32 1900, i32 0, metadata !6774, null}
!6783 = metadata !{i32 1899, i32 0, metadata !6774, null}
!6784 = metadata !{i32 1903, i32 0, metadata !6774, null}
!6785 = metadata !{i32 1904, i32 0, metadata !6774, null}
!6786 = metadata !{i32 1905, i32 0, metadata !6774, null}
!6787 = metadata !{i32 1908, i32 0, metadata !6774, null}
!6788 = metadata !{i32 1911, i32 0, metadata !6774, null}
!6789 = metadata !{i32 1915, i32 0, metadata !6774, null}
!6790 = metadata !{i32 1917, i32 0, metadata !6774, null}
!6791 = metadata !{i32 1919, i32 0, metadata !6774, null}
!6792 = metadata !{i32 1920, i32 0, metadata !6774, null}
!6793 = metadata !{i32 1923, i32 0, metadata !6774, null}
!6794 = metadata !{i32 1925, i32 0, metadata !6774, null}
!6795 = metadata !{i32 1926, i32 0, metadata !6774, null}
!6796 = metadata !{i32 1930, i32 0, metadata !6774, null}
!6797 = metadata !{i32 1939, i32 0, metadata !6774, null}
!6798 = metadata !{i32 990, i32 0, metadata !6799, null}
!6799 = metadata !{i32 589835, metadata !2053, i32 987, i32 0, metadata !2056, i32 0} ; [ DW_TAG_lexical_block ]
!6800 = metadata !{i32 1000, i32 0, metadata !6801, null}
!6801 = metadata !{i32 589835, metadata !2120, i32 994, i32 0, metadata !2056, i32 1} ; [ DW_TAG_lexical_block ]
!6802 = metadata !{i32 1001, i32 0, metadata !6801, null}
!6803 = metadata !{i32 1002, i32 0, metadata !6801, null}
!6804 = metadata !{i32 1005, i32 0, metadata !6801, null}
!6805 = metadata !{i32 1006, i32 0, metadata !6801, null}
!6806 = metadata !{i32 1010, i32 0, metadata !6801, null}
!6807 = metadata !{i32 1012, i32 0, metadata !6801, null}
!6808 = metadata !{i32 1014, i32 0, metadata !6801, null}
!6809 = metadata !{i32 1015, i32 0, metadata !6801, null}
!6810 = metadata !{i32 1016, i32 0, metadata !6801, null}
!6811 = metadata !{i32 1018, i32 0, metadata !6801, null}
!6812 = metadata !{i32 1011, i32 0, metadata !6801, null}
!6813 = metadata !{i32 1025, i32 0, metadata !6801, null}
!6814 = metadata !{i32 1026, i32 0, metadata !6801, null}
!6815 = metadata !{i32 1027, i32 0, metadata !6801, null}
!6816 = metadata !{i32 1033, i32 0, metadata !6801, null}
!6817 = metadata !{i32 1034, i32 0, metadata !6801, null}
!6818 = metadata !{i32 1037, i32 0, metadata !6801, null}
!6819 = metadata !{i32 1038, i32 0, metadata !6801, null}
!6820 = metadata !{i32 1040, i32 0, metadata !6801, null}
!6821 = metadata !{i32 1209, i32 0, metadata !6822, null}
!6822 = metadata !{i32 589835, metadata !2121, i32 1180, i32 0, metadata !2056, i32 2} ; [ DW_TAG_lexical_block ]
!6823 = metadata !{i32 1230, i32 0, metadata !6822, null}
!6824 = metadata !{i32 1232, i32 0, metadata !6822, null}
!6825 = metadata !{i32 1239, i32 0, metadata !6822, null}
!6826 = metadata !{i32 1241, i32 0, metadata !6822, null}
!6827 = metadata !{i32 1242, i32 0, metadata !6822, null}
!6828 = metadata !{i32 1260, i32 0, metadata !6822, null}
!6829 = metadata !{i32 1266, i32 0, metadata !6822, null}
!6830 = metadata !{i32 1272, i32 0, metadata !6822, null}
!6831 = metadata !{i32 1274, i32 0, metadata !6822, null}
!6832 = metadata !{i32 1275, i32 0, metadata !6822, null}
!6833 = metadata !{i32 1281, i32 0, metadata !6822, null}
!6834 = metadata !{i32 1282, i32 0, metadata !6822, null}
!6835 = metadata !{i32 1289, i32 0, metadata !6822, null}
!6836 = metadata !{i32 1291, i32 0, metadata !6822, null}
!6837 = metadata !{i32 1292, i32 0, metadata !6822, null}
!6838 = metadata !{i32 1293, i32 0, metadata !6822, null}
!6839 = metadata !{i32 1294, i32 0, metadata !6822, null}
!6840 = metadata !{i32 1298, i32 0, metadata !6822, null}
!6841 = metadata !{i32 1299, i32 0, metadata !6822, null}
!6842 = metadata !{i32 1302, i32 0, metadata !6822, null}
!6843 = metadata !{i32 1308, i32 0, metadata !6822, null}
!6844 = metadata !{i32 1329, i32 0, metadata !6822, null}
!6845 = metadata !{i32 1332, i32 0, metadata !6822, null}
!6846 = metadata !{i32 1334, i32 0, metadata !6822, null}
!6847 = metadata !{i32 1336, i32 0, metadata !6822, null}
!6848 = metadata !{i32 1337, i32 0, metadata !6822, null}
!6849 = metadata !{i32 1340, i32 0, metadata !6822, null}
!6850 = metadata !{i32 1339, i32 0, metadata !6822, null}
!6851 = metadata !{i32 1342, i32 0, metadata !6822, null}
!6852 = metadata !{i32 1349, i32 0, metadata !6822, null}
!6853 = metadata !{i32 1351, i32 0, metadata !6822, null}
!6854 = metadata !{i32 1356, i32 0, metadata !6822, null}
!6855 = metadata !{i32 1363, i32 0, metadata !6822, null}
!6856 = metadata !{i32 1364, i32 0, metadata !6822, null}
!6857 = metadata !{i32 1369, i32 0, metadata !6822, null}
!6858 = metadata !{i32 1371, i32 0, metadata !6822, null}
!6859 = metadata !{i32 1376, i32 0, metadata !6822, null}
!6860 = metadata !{i32 1380, i32 0, metadata !6822, null}
!6861 = metadata !{i32 1385, i32 0, metadata !6822, null}
!6862 = metadata !{i32 1386, i32 0, metadata !6822, null}
!6863 = metadata !{i32 1392, i32 0, metadata !6822, null}
!6864 = metadata !{i32 1393, i32 0, metadata !6865, null}
!6865 = metadata !{i32 589835, metadata !6822, i32 1393, i32 0, metadata !2056, i32 3} ; [ DW_TAG_lexical_block ]
!6866 = metadata !{i32 1399, i32 0, metadata !6865, null}
!6867 = metadata !{i32 1400, i32 0, metadata !6865, null}
!6868 = metadata !{i32 1402, i32 0, metadata !6865, null}
!6869 = metadata !{i32 1415, i32 0, metadata !6822, null}
!6870 = metadata !{i32 1420, i32 0, metadata !6822, null}
!6871 = metadata !{i32 1421, i32 0, metadata !6822, null}
!6872 = metadata !{i32 1423, i32 0, metadata !6822, null}
!6873 = metadata !{i32 1424, i32 0, metadata !6822, null}
!6874 = metadata !{i32 1425, i32 0, metadata !6822, null}
!6875 = metadata !{i32 1429, i32 0, metadata !6822, null}
!6876 = metadata !{i32 1430, i32 0, metadata !6822, null}
!6877 = metadata !{i32 1431, i32 0, metadata !6822, null}
!6878 = metadata !{i32 1428, i32 0, metadata !6822, null}
!6879 = metadata !{i32 1433, i32 0, metadata !6822, null}
!6880 = metadata !{i32 1434, i32 0, metadata !6822, null}
!6881 = metadata !{i32 1437, i32 0, metadata !6822, null}
!6882 = metadata !{i32 1441, i32 0, metadata !6822, null}
!6883 = metadata !{i32 1444, i32 0, metadata !6822, null}
!6884 = metadata !{i32 1445, i32 0, metadata !6822, null}
!6885 = metadata !{i32 1446, i32 0, metadata !6822, null}
!6886 = metadata !{i32 1447, i32 0, metadata !6822, null}
!6887 = metadata !{i32 1443, i32 0, metadata !6822, null}
!6888 = metadata !{i32 1457, i32 0, metadata !6822, null}
!6889 = metadata !{i32 1459, i32 0, metadata !6822, null}
!6890 = metadata !{i32 1460, i32 0, metadata !6822, null}
!6891 = metadata !{i32 1461, i32 0, metadata !6822, null}
!6892 = metadata !{i32 1463, i32 0, metadata !6822, null}
!6893 = metadata !{i32 1464, i32 0, metadata !6822, null}
!6894 = metadata !{i32 1466, i32 0, metadata !6822, null}
!6895 = metadata !{i32 1467, i32 0, metadata !6822, null}
!6896 = metadata !{i32 1468, i32 0, metadata !6822, null}
!6897 = metadata !{i32 1472, i32 0, metadata !6822, null}
!6898 = metadata !{i32 1475, i32 0, metadata !6822, null}
!6899 = metadata !{i32 1478, i32 0, metadata !6822, null}
!6900 = metadata !{i32 1479, i32 0, metadata !6822, null}
!6901 = metadata !{i32 1483, i32 0, metadata !6822, null}
!6902 = metadata !{i32 1484, i32 0, metadata !6822, null}
!6903 = metadata !{i32 1488, i32 0, metadata !6822, null}
!6904 = metadata !{i32 1489, i32 0, metadata !6822, null}
!6905 = metadata !{i32 1471, i32 0, metadata !6822, null}
!6906 = metadata !{i32 1493, i32 0, metadata !6822, null}
!6907 = metadata !{i32 1500, i32 0, metadata !6822, null}
!6908 = metadata !{i32 1501, i32 0, metadata !6822, null}
!6909 = metadata !{i32 1504, i32 0, metadata !6822, null}
!6910 = metadata !{i32 1505, i32 0, metadata !6822, null}
!6911 = metadata !{i32 1506, i32 0, metadata !6822, null}
!6912 = metadata !{i32 1499, i32 0, metadata !6822, null}
!6913 = metadata !{i32 1511, i32 0, metadata !6822, null}
!6914 = metadata !{i32 1512, i32 0, metadata !6822, null}
!6915 = metadata !{i32 1515, i32 0, metadata !6822, null}
!6916 = metadata !{i32 1516, i32 0, metadata !6822, null}
!6917 = metadata !{i32 1522, i32 0, metadata !6822, null}
!6918 = metadata !{i32 1526, i32 0, metadata !6919, null}
!6919 = metadata !{i32 589835, metadata !6822, i32 1526, i32 0, metadata !2056, i32 4} ; [ DW_TAG_lexical_block ]
!6920 = metadata !{i32 1528, i32 0, metadata !6919, null}
!6921 = metadata !{i32 1529, i32 0, metadata !6919, null}
!6922 = metadata !{i32 1531, i32 0, metadata !6919, null}
!6923 = metadata !{i32 1532, i32 0, metadata !6919, null}
!6924 = metadata !{i32 1533, i32 0, metadata !6919, null}
!6925 = metadata !{i32 1537, i32 0, metadata !6919, null}
!6926 = metadata !{i32 1539, i32 0, metadata !6919, null}
!6927 = metadata !{i32 1540, i32 0, metadata !6919, null}
!6928 = metadata !{i32 1536, i32 0, metadata !6919, null}
!6929 = metadata !{i32 1543, i32 0, metadata !6919, null}
!6930 = metadata !{i32 1544, i32 0, metadata !6919, null}
!6931 = metadata !{i32 1547, i32 0, metadata !6919, null}
!6932 = metadata !{i32 1552, i32 0, metadata !6919, null}
!6933 = metadata !{i32 1555, i32 0, metadata !6919, null}
!6934 = metadata !{i32 1556, i32 0, metadata !6919, null}
!6935 = metadata !{i32 1559, i32 0, metadata !6919, null}
!6936 = metadata !{i32 1560, i32 0, metadata !6919, null}
!6937 = metadata !{i32 1561, i32 0, metadata !6919, null}
!6938 = metadata !{i32 1554, i32 0, metadata !6919, null}
!6939 = metadata !{i32 1567, i32 0, metadata !6919, null}
!6940 = metadata !{i32 1568, i32 0, metadata !6919, null}
!6941 = metadata !{i32 1569, i32 0, metadata !6919, null}
!6942 = metadata !{i32 1572, i32 0, metadata !6919, null}
!6943 = metadata !{i32 1575, i32 0, metadata !6919, null}
!6944 = metadata !{i32 1576, i32 0, metadata !6919, null}
!6945 = metadata !{i32 1577, i32 0, metadata !6919, null}
!6946 = metadata !{i32 1566, i32 0, metadata !6919, null}
!6947 = metadata !{i32 1582, i32 0, metadata !6919, null}
!6948 = metadata !{i32 1583, i32 0, metadata !6919, null}
!6949 = metadata !{i32 1586, i32 0, metadata !6919, null}
!6950 = metadata !{i32 1587, i32 0, metadata !6919, null}
!6951 = metadata !{i32 1754, i32 0, metadata !6822, null}
!6952 = metadata !{i32 1758, i32 0, metadata !6822, null}
!6953 = metadata !{i32 1763, i32 0, metadata !6822, null}
!6954 = metadata !{i32 1764, i32 0, metadata !6822, null}
!6955 = metadata !{i32 1770, i32 0, metadata !6822, null}
!6956 = metadata !{i32 1771, i32 0, metadata !6822, null}
!6957 = metadata !{i32 1774, i32 0, metadata !6822, null}
!6958 = metadata !{i32 1780, i32 0, metadata !6822, null}
!6959 = metadata !{i32 1134, i32 0, metadata !6960, null}
!6960 = metadata !{i32 589835, metadata !2135, i32 1131, i32 0, metadata !2056, i32 5} ; [ DW_TAG_lexical_block ]
!6961 = metadata !{i32 1140, i32 0, metadata !6960, null}
!6962 = metadata !{i32 1143, i32 0, metadata !6960, null}
!6963 = metadata !{i32 1144, i32 0, metadata !6960, null}
!6964 = metadata !{i32 1146, i32 0, metadata !6960, null}
!6965 = metadata !{i32 1167, i32 0, metadata !6960, null}
!6966 = metadata !{i32 36, i32 0, metadata !6967, null}
!6967 = metadata !{i32 589835, metadata !2138, i32 23, i32 0, metadata !2139, i32 0} ; [ DW_TAG_lexical_block ]
!6968 = metadata !{i32 37, i32 0, metadata !6967, null}
!6969 = metadata !{i32 40, i32 0, metadata !6967, null}
!6970 = metadata !{i32 43, i32 0, metadata !6967, null}
!6971 = metadata !{i32 50, i32 0, metadata !6967, null}
!6972 = metadata !{i32 52, i32 0, metadata !6967, null}
!6973 = metadata !{i32 53, i32 0, metadata !6967, null}
!6974 = metadata !{i32 58, i32 0, metadata !6967, null}
!6975 = metadata !{i32 59, i32 0, metadata !6967, null}
!6976 = metadata !{i32 60, i32 0, metadata !6967, null}
!6977 = metadata !{i32 61, i32 0, metadata !6967, null}
!6978 = metadata !{i32 62, i32 0, metadata !6967, null}
!6979 = metadata !{i32 64, i32 0, metadata !6967, null}
!6980 = metadata !{i32 65, i32 0, metadata !6967, null}
!6981 = metadata !{i32 66, i32 0, metadata !6967, null}
!6982 = metadata !{i32 67, i32 0, metadata !6967, null}
!6983 = metadata !{i32 69, i32 0, metadata !6967, null}
!6984 = metadata !{i32 71, i32 0, metadata !6967, null}
!6985 = metadata !{i32 1140, i32 0, metadata !6986, null}
!6986 = metadata !{i32 589835, metadata !2161, i32 1136, i32 0, metadata !2164, i32 0} ; [ DW_TAG_lexical_block ]
!6987 = metadata !{i32 1141, i32 0, metadata !6986, null}
!6988 = metadata !{i32 1143, i32 0, metadata !6986, null}
!6989 = metadata !{i32 1144, i32 0, metadata !6986, null}
!6990 = metadata !{i32 1146, i32 0, metadata !6986, null}
!6991 = metadata !{i32 1149, i32 0, metadata !6986, null}
!6992 = metadata !{i32 1153, i32 0, metadata !6986, null}
!6993 = metadata !{i32 717, i32 0, metadata !6994, null}
!6994 = metadata !{i32 589835, metadata !2173, i32 716, i32 0, metadata !2176, i32 0} ; [ DW_TAG_lexical_block ]
!6995 = metadata !{i32 718, i32 0, metadata !6994, null}
!6996 = metadata !{i32 719, i32 0, metadata !6994, null}
!6997 = metadata !{i32 720, i32 0, metadata !6994, null}
!6998 = metadata !{i32 722, i32 0, metadata !6994, null}
!6999 = metadata !{i32 723, i32 0, metadata !6994, null}
!7000 = metadata !{i32 741, i32 0, metadata !6994, null}
!7001 = metadata !{i32 742, i32 0, metadata !6994, null}
!7002 = metadata !{i32 748, i32 0, metadata !6994, null}
!7003 = metadata !{i32 753, i32 0, metadata !6994, null}
!7004 = metadata !{i32 763, i32 0, metadata !7005, null}
!7005 = metadata !{i32 589835, metadata !2242, i32 756, i32 0, metadata !2176, i32 1} ; [ DW_TAG_lexical_block ]
!7006 = metadata !{i32 765, i32 0, metadata !7005, null}
!7007 = metadata !{i32 766, i32 0, metadata !7005, null}
!7008 = metadata !{i32 767, i32 0, metadata !7005, null}
!7009 = metadata !{i32 770, i32 0, metadata !7005, null}
!7010 = metadata !{i32 788, i32 0, metadata !7005, null}
!7011 = metadata !{i32 789, i32 0, metadata !7005, null}
!7012 = metadata !{i32 790, i32 0, metadata !7005, null}
!7013 = metadata !{i32 793, i32 0, metadata !7005, null}
!7014 = metadata !{i32 796, i32 0, metadata !7005, null}
!7015 = metadata !{i32 799, i32 0, metadata !7005, null}
!7016 = metadata !{i32 800, i32 0, metadata !7005, null}
!7017 = metadata !{i32 805, i32 0, metadata !7018, null}
!7018 = metadata !{i32 589835, metadata !2243, i32 804, i32 0, metadata !2176, i32 2} ; [ DW_TAG_lexical_block ]
!7019 = metadata !{i32 806, i32 0, metadata !7018, null}
!7020 = metadata !{i32 807, i32 0, metadata !7018, null}
!7021 = metadata !{i32 808, i32 0, metadata !7018, null}
!7022 = metadata !{i32 809, i32 0, metadata !7018, null}
!7023 = metadata !{i32 810, i32 0, metadata !7018, null}
!7024 = metadata !{i32 811, i32 0, metadata !7018, null}
!7025 = metadata !{i32 815, i32 0, metadata !7018, null}
!7026 = metadata !{i32 1796, i32 0, metadata !7027, null}
!7027 = metadata !{i32 589835, metadata !2246, i32 1791, i32 0, metadata !2249, i32 0} ; [ DW_TAG_lexical_block ]
!7028 = metadata !{i32 1805, i32 0, metadata !7027, null}
!7029 = metadata !{i32 1806, i32 0, metadata !7027, null}
!7030 = metadata !{i32 1817, i32 0, metadata !7027, null}
!7031 = metadata !{i32 1818, i32 0, metadata !7027, null}
!7032 = metadata !{i32 1819, i32 0, metadata !7027, null}
!7033 = metadata !{i32 1822, i32 0, metadata !7027, null}
!7034 = metadata !{i32 1823, i32 0, metadata !7027, null}
!7035 = metadata !{i32 1825, i32 0, metadata !7027, null}
!7036 = metadata !{i32 1826, i32 0, metadata !7027, null}
!7037 = metadata !{i32 1827, i32 0, metadata !7027, null}
!7038 = metadata !{i32 1830, i32 0, metadata !7027, null}
!7039 = metadata !{i32 1834, i32 0, metadata !7027, null}
!7040 = metadata !{i32 1835, i32 0, metadata !7027, null}
!7041 = metadata !{i32 1836, i32 0, metadata !7027, null}
!7042 = metadata !{i32 1837, i32 0, metadata !7027, null}
!7043 = metadata !{i32 1840, i32 0, metadata !7027, null}
!7044 = metadata !{i32 1849, i32 0, metadata !7027, null}
!7045 = metadata !{i32 1850, i32 0, metadata !7027, null}
!7046 = metadata !{i32 1851, i32 0, metadata !7027, null}
!7047 = metadata !{i32 1854, i32 0, metadata !7027, null}
!7048 = metadata !{i32 1855, i32 0, metadata !7027, null}
!7049 = metadata !{i32 1856, i32 0, metadata !7027, null}
!7050 = metadata !{i32 1859, i32 0, metadata !7027, null}
!7051 = metadata !{i32 1860, i32 0, metadata !7027, null}
!7052 = metadata !{i32 1861, i32 0, metadata !7027, null}
!7053 = metadata !{i32 1862, i32 0, metadata !7027, null}
!7054 = metadata !{i32 1863, i32 0, metadata !7027, null}
!7055 = metadata !{i32 1871, i32 0, metadata !7027, null}
!7056 = metadata !{i32 1878, i32 0, metadata !7027, null}
!7057 = metadata !{i32 1879, i32 0, metadata !7027, null}
!7058 = metadata !{i32 1881, i32 0, metadata !7027, null}
!7059 = metadata !{i32 1883, i32 0, metadata !7027, null}
!7060 = metadata !{i32 1884, i32 0, metadata !7027, null}
!7061 = metadata !{i32 1888, i32 0, metadata !7027, null}
!7062 = metadata !{i32 1889, i32 0, metadata !7027, null}
!7063 = metadata !{i32 2057, i32 0, metadata !7027, null}
!7064 = metadata !{i32 2058, i32 0, metadata !7027, null}
!7065 = metadata !{i32 2059, i32 0, metadata !7027, null}
!7066 = metadata !{i32 2061, i32 0, metadata !7027, null}
!7067 = metadata !{i32 2062, i32 0, metadata !7027, null}
!7068 = metadata !{i32 2073, i32 0, metadata !7027, null}
!7069 = metadata !{i32 2074, i32 0, metadata !7027, null}
!7070 = metadata !{i32 2075, i32 0, metadata !7027, null}
!7071 = metadata !{i32 2078, i32 0, metadata !7027, null}
!7072 = metadata !{i32 2081, i32 0, metadata !7027, null}
!7073 = metadata !{i32 2072, i32 0, metadata !7027, null}
!7074 = metadata !{i32 2087, i32 0, metadata !7027, null}
!7075 = metadata !{i32 2088, i32 0, metadata !7027, null}
!7076 = metadata !{i32 2089, i32 0, metadata !7027, null}
!7077 = metadata !{i32 2090, i32 0, metadata !7027, null}
!7078 = metadata !{i32 2093, i32 0, metadata !7027, null}
!7079 = metadata !{i32 2094, i32 0, metadata !7027, null}
!7080 = metadata !{i32 2095, i32 0, metadata !7027, null}
!7081 = metadata !{i32 2097, i32 0, metadata !7027, null}
!7082 = metadata !{i32 2098, i32 0, metadata !7027, null}
!7083 = metadata !{i32 2101, i32 0, metadata !7027, null}
!7084 = metadata !{i32 2110, i32 0, metadata !7027, null}
!7085 = metadata !{i32 2112, i32 0, metadata !7027, null}
!7086 = metadata !{i32 2113, i32 0, metadata !7027, null}
!7087 = metadata !{i32 2114, i32 0, metadata !7027, null}
!7088 = metadata !{i32 2130, i32 0, metadata !7027, null}
!7089 = metadata !{i32 2117, i32 0, metadata !7027, null}
!7090 = metadata !{i32 2118, i32 0, metadata !7027, null}
!7091 = metadata !{i32 2123, i32 0, metadata !7027, null}
!7092 = metadata !{i32 2124, i32 0, metadata !7027, null}
!7093 = metadata !{i32 2131, i32 0, metadata !7027, null}
!7094 = metadata !{i32 2133, i32 0, metadata !7027, null}
!7095 = metadata !{i32 2134, i32 0, metadata !7027, null}
!7096 = metadata !{i32 2135, i32 0, metadata !7027, null}
!7097 = metadata !{i32 2137, i32 0, metadata !7027, null}
!7098 = metadata !{i32 2138, i32 0, metadata !7027, null}
!7099 = metadata !{i32 2139, i32 0, metadata !7027, null}
!7100 = metadata !{i32 2144, i32 0, metadata !7027, null}
!7101 = metadata !{i32 2145, i32 0, metadata !7027, null}
!7102 = metadata !{i32 2146, i32 0, metadata !7027, null}
!7103 = metadata !{i32 2148, i32 0, metadata !7027, null}
!7104 = metadata !{i32 2143, i32 0, metadata !7027, null}
!7105 = metadata !{i32 2153, i32 0, metadata !7027, null}
!7106 = metadata !{i32 2156, i32 0, metadata !7107, null}
!7107 = metadata !{i32 589835, metadata !7027, i32 2156, i32 0, metadata !2249, i32 1} ; [ DW_TAG_lexical_block ]
!7108 = metadata !{i32 2164, i32 0, metadata !7107, null}
!7109 = metadata !{i32 2166, i32 0, metadata !7107, null}
!7110 = metadata !{i32 2169, i32 0, metadata !7107, null}
!7111 = metadata !{i32 2176, i32 0, metadata !7107, null}
!7112 = metadata !{i32 2179, i32 0, metadata !7107, null}
!7113 = metadata !{i32 2180, i32 0, metadata !7107, null}
!7114 = metadata !{i32 2181, i32 0, metadata !7107, null}
!7115 = metadata !{i32 2182, i32 0, metadata !7107, null}
!7116 = metadata !{i32 2185, i32 0, metadata !7107, null}
!7117 = metadata !{i32 2199, i32 0, metadata !7027, null}
!7118 = metadata !{i32 2195, i32 0, metadata !7027, null}
!7119 = metadata !{i32 2201, i32 0, metadata !7027, null}
!7120 = metadata !{i32 2203, i32 0, metadata !7027, null}
!7121 = metadata !{i32 2204, i32 0, metadata !7027, null}
!7122 = metadata !{i32 2208, i32 0, metadata !7027, null}
!7123 = metadata !{i32 2209, i32 0, metadata !7027, null}
!7124 = metadata !{i32 2210, i32 0, metadata !7027, null}
!7125 = metadata !{i32 2218, i32 0, metadata !7027, null}
!7126 = metadata !{i32 2219, i32 0, metadata !7027, null}
!7127 = metadata !{i32 2221, i32 0, metadata !7027, null}
!7128 = metadata !{i32 2222, i32 0, metadata !7027, null}
!7129 = metadata !{i32 2223, i32 0, metadata !7027, null}
!7130 = metadata !{i32 2225, i32 0, metadata !7027, null}
!7131 = metadata !{i32 2226, i32 0, metadata !7027, null}
!7132 = metadata !{i32 2230, i32 0, metadata !7027, null}
!7133 = metadata !{i32 2231, i32 0, metadata !7027, null}
!7134 = metadata !{i32 2232, i32 0, metadata !7027, null}
!7135 = metadata !{i32 2234, i32 0, metadata !7027, null}
!7136 = metadata !{i32 2229, i32 0, metadata !7027, null}
!7137 = metadata !{i32 2237, i32 0, metadata !7027, null}
!7138 = metadata !{i32 2244, i32 0, metadata !7027, null}
!7139 = metadata !{i32 2248, i32 0, metadata !7140, null}
!7140 = metadata !{i32 589835, metadata !7027, i32 2248, i32 0, metadata !2249, i32 2} ; [ DW_TAG_lexical_block ]
!7141 = metadata !{i32 2250, i32 0, metadata !7140, null}
!7142 = metadata !{i32 2251, i32 0, metadata !7140, null}
!7143 = metadata !{i32 2252, i32 0, metadata !7140, null}
!7144 = metadata !{i32 2253, i32 0, metadata !7140, null}
!7145 = metadata !{i32 2254, i32 0, metadata !7140, null}
!7146 = metadata !{i32 2256, i32 0, metadata !7140, null}
!7147 = metadata !{i32 2258, i32 0, metadata !7140, null}
!7148 = metadata !{i32 2260, i32 0, metadata !7140, null}
!7149 = metadata !{i32 2261, i32 0, metadata !7140, null}
!7150 = metadata !{i32 2266, i32 0, metadata !7027, null}
!7151 = metadata !{i32 2267, i32 0, metadata !7027, null}
!7152 = metadata !{i32 2268, i32 0, metadata !7027, null}
!7153 = metadata !{i32 246, i32 0, metadata !7154, null}
!7154 = metadata !{i32 589835, metadata !2332, i32 239, i32 0, metadata !2335, i32 0} ; [ DW_TAG_lexical_block ]
!7155 = metadata !{i32 247, i32 0, metadata !7154, null}
!7156 = metadata !{i32 249, i32 0, metadata !7154, null}
!7157 = metadata !{i32 250, i32 0, metadata !7154, null}
!7158 = metadata !{i32 253, i32 0, metadata !7154, null}
!7159 = metadata !{i32 254, i32 0, metadata !7154, null}
!7160 = metadata !{i32 264, i32 0, metadata !7154, null}
!7161 = metadata !{i32 265, i32 0, metadata !7154, null}
!7162 = metadata !{i32 266, i32 0, metadata !7154, null}
!7163 = metadata !{i32 268, i32 0, metadata !7154, null}
!7164 = metadata !{i32 270, i32 0, metadata !7154, null}
!7165 = metadata !{i32 283, i32 0, metadata !7166, null}
!7166 = metadata !{i32 589835, metadata !2367, i32 279, i32 0, metadata !2335, i32 1} ; [ DW_TAG_lexical_block ]
!7167 = metadata !{i32 284, i32 0, metadata !7166, null}
!7168 = metadata !{i32 285, i32 0, metadata !7166, null}
!7169 = metadata !{i32 287, i32 0, metadata !7166, null}
!7170 = metadata !{i32 288, i32 0, metadata !7166, null}
!7171 = metadata !{i32 292, i32 0, metadata !7166, null}
!7172 = metadata !{i32 294, i32 0, metadata !7166, null}
!7173 = metadata !{i32 301, i32 0, metadata !7166, null}
!7174 = metadata !{i32 302, i32 0, metadata !7166, null}
!7175 = metadata !{i32 304, i32 0, metadata !7166, null}
!7176 = metadata !{i32 832, i32 0, metadata !7177, null}
!7177 = metadata !{i32 589835, metadata !2370, i32 830, i32 0, metadata !2373, i32 0} ; [ DW_TAG_lexical_block ]
!7178 = metadata !{i32 838, i32 0, metadata !7177, null}
!7179 = metadata !{i32 840, i32 0, metadata !7177, null}
!7180 = metadata !{i32 842, i32 0, metadata !7177, null}
!7181 = metadata !{i32 843, i32 0, metadata !7177, null}
!7182 = metadata !{i32 849, i32 0, metadata !7177, null}
!7183 = metadata !{i32 850, i32 0, metadata !7177, null}
!7184 = metadata !{i32 852, i32 0, metadata !7177, null}
!7185 = metadata !{i32 854, i32 0, metadata !7177, null}
!7186 = metadata !{i32 855, i32 0, metadata !7177, null}
!7187 = metadata !{i32 858, i32 0, metadata !7177, null}
!7188 = metadata !{i32 859, i32 0, metadata !7177, null}
!7189 = metadata !{i32 862, i32 0, metadata !7177, null}
!7190 = metadata !{i32 866, i32 0, metadata !7177, null}
!7191 = metadata !{i32 869, i32 0, metadata !7177, null}
!7192 = metadata !{i32 870, i32 0, metadata !7177, null}
!7193 = metadata !{i32 872, i32 0, metadata !7177, null}
!7194 = metadata !{i32 873, i32 0, metadata !7177, null}
!7195 = metadata !{i32 874, i32 0, metadata !7177, null}
!7196 = metadata !{i32 877, i32 0, metadata !7177, null}
!7197 = metadata !{i32 878, i32 0, metadata !7177, null}
!7198 = metadata !{i32 880, i32 0, metadata !7177, null}
!7199 = metadata !{i32 881, i32 0, metadata !7177, null}
!7200 = metadata !{i32 894, i32 0, metadata !7177, null}
!7201 = metadata !{i32 896, i32 0, metadata !7177, null}
!7202 = metadata !{i32 899, i32 0, metadata !7177, null}
!7203 = metadata !{i32 901, i32 0, metadata !7177, null}
!7204 = metadata !{i32 905, i32 0, metadata !7177, null}
!7205 = metadata !{i32 909, i32 0, metadata !7177, null}
!7206 = metadata !{i32 910, i32 0, metadata !7177, null}
!7207 = metadata !{i32 911, i32 0, metadata !7177, null}
!7208 = metadata !{i32 912, i32 0, metadata !7177, null}
!7209 = metadata !{i32 913, i32 0, metadata !7177, null}
!7210 = metadata !{i32 920, i32 0, metadata !7177, null}
!7211 = metadata !{i32 922, i32 0, metadata !7177, null}
!7212 = metadata !{i32 923, i32 0, metadata !7177, null}
!7213 = metadata !{i32 926, i32 0, metadata !7177, null}
!7214 = metadata !{i32 927, i32 0, metadata !7177, null}
!7215 = metadata !{i32 928, i32 0, metadata !7177, null}
!7216 = metadata !{i32 929, i32 0, metadata !7177, null}
!7217 = metadata !{i32 931, i32 0, metadata !7177, null}
!7218 = metadata !{i32 938, i32 0, metadata !7177, null}
!7219 = metadata !{i32 940, i32 0, metadata !7177, null}
!7220 = metadata !{i32 941, i32 0, metadata !7221, null}
!7221 = metadata !{i32 589835, metadata !7177, i32 941, i32 0, metadata !2373, i32 1} ; [ DW_TAG_lexical_block ]
!7222 = metadata !{i32 955, i32 0, metadata !7221, null}
!7223 = metadata !{i32 956, i32 0, metadata !7221, null}
!7224 = metadata !{i32 962, i32 0, metadata !7221, null}
!7225 = metadata !{i32 964, i32 0, metadata !7221, null}
!7226 = metadata !{i32 967, i32 0, metadata !7221, null}
!7227 = metadata !{i32 968, i32 0, metadata !7221, null}
!7228 = metadata !{i32 970, i32 0, metadata !7177, null}
!7229 = metadata !{i32 972, i32 0, metadata !7177, null}
!7230 = metadata !{i32 973, i32 0, metadata !7177, null}
!7231 = metadata !{i32 25, i32 0, metadata !7232, null}
!7232 = metadata !{i32 589835, metadata !2397, i32 21, i32 0, metadata !2398, i32 0} ; [ DW_TAG_lexical_block ]
!7233 = metadata !{i32 26, i32 0, metadata !7232, null}
!7234 = metadata !{i32 30, i32 0, metadata !7232, null}
!7235 = metadata !{i32 34, i32 0, metadata !7232, null}
!7236 = metadata !{i32 35, i32 0, metadata !7232, null}
!7237 = metadata !{i32 37, i32 0, metadata !7232, null}
!7238 = metadata !{i32 38, i32 0, metadata !7232, null}
!7239 = metadata !{i32 39, i32 0, metadata !7232, null}
!7240 = metadata !{i32 45, i32 0, metadata !7232, null}
!7241 = metadata !{i32 50, i32 0, metadata !7232, null}
!7242 = metadata !{i32 59, i32 0, metadata !7232, null}
!7243 = metadata !{i32 60, i32 0, metadata !7232, null}
!7244 = metadata !{i32 63, i32 0, metadata !7232, null}
!7245 = metadata !{i32 64, i32 0, metadata !7232, null}
!7246 = metadata !{i32 67, i32 0, metadata !7232, null}
!7247 = metadata !{i32 66, i32 0, metadata !7248, null}
!7248 = metadata !{i32 589835, metadata !2438, i32 62, i32 0, metadata !2439, i32 0} ; [ DW_TAG_lexical_block ]
!7249 = metadata !{i32 71, i32 0, metadata !7248, null}
!7250 = metadata !{i32 174, i32 0, metadata !7251, null}
!7251 = metadata !{i32 589835, metadata !2479, i32 166, i32 0, metadata !2480, i32 0} ; [ DW_TAG_lexical_block ]
!7252 = metadata !{i32 194, i32 0, metadata !7251, null}
!7253 = metadata !{i32 197, i32 0, metadata !7251, null}
!7254 = metadata !{i32 202, i32 0, metadata !7251, null}
!7255 = metadata !{i32 203, i32 0, metadata !7251, null}
!7256 = metadata !{i32 204, i32 0, metadata !7251, null}
!7257 = metadata !{i32 207, i32 0, metadata !7251, null}
!7258 = metadata !{i32 208, i32 0, metadata !7251, null}
!7259 = metadata !{i32 215, i32 0, metadata !7251, null}
!7260 = metadata !{i32 216, i32 0, metadata !7251, null}
!7261 = metadata !{i32 218, i32 0, metadata !7251, null}
!7262 = metadata !{i32 219, i32 0, metadata !7251, null}
!7263 = metadata !{i32 220, i32 0, metadata !7251, null}
!7264 = metadata !{i32 222, i32 0, metadata !7251, null}
!7265 = metadata !{i32 223, i32 0, metadata !7251, null}
!7266 = metadata !{i32 224, i32 0, metadata !7251, null}
!7267 = metadata !{i32 225, i32 0, metadata !7251, null}
!7268 = metadata !{i32 228, i32 0, metadata !7251, null}
!7269 = metadata !{i32 229, i32 0, metadata !7251, null}
!7270 = metadata !{i32 230, i32 0, metadata !7251, null}
!7271 = metadata !{i32 233, i32 0, metadata !7251, null}
!7272 = metadata !{i32 234, i32 0, metadata !7251, null}
!7273 = metadata !{i32 237, i32 0, metadata !7251, null}
!7274 = metadata !{i32 246, i32 0, metadata !7275, null}
!7275 = metadata !{i32 589835, metadata !2490, i32 207, i32 0, metadata !2491, i32 0} ; [ DW_TAG_lexical_block ]
!7276 = metadata !{i32 247, i32 0, metadata !7275, null}
!7277 = metadata !{i32 248, i32 0, metadata !7275, null}
!7278 = metadata !{i32 250, i32 0, metadata !7275, null}
!7279 = metadata !{i32 251, i32 0, metadata !7275, null}
!7280 = metadata !{i32 259, i32 0, metadata !7275, null}
!7281 = metadata !{i32 263, i32 0, metadata !7275, null}
!7282 = metadata !{i32 264, i32 0, metadata !7275, null}
!7283 = metadata !{i32 267, i32 0, metadata !7275, null}
!7284 = metadata !{i32 268, i32 0, metadata !7275, null}
!7285 = metadata !{i32 269, i32 0, metadata !7275, null}
!7286 = metadata !{i32 270, i32 0, metadata !7275, null}
!7287 = metadata !{i32 271, i32 0, metadata !7275, null}
!7288 = metadata !{i32 274, i32 0, metadata !7275, null}
!7289 = metadata !{i32 275, i32 0, metadata !7275, null}
!7290 = metadata !{i32 276, i32 0, metadata !7275, null}
!7291 = metadata !{i32 277, i32 0, metadata !7275, null}
!7292 = metadata !{i32 281, i32 0, metadata !7275, null}
!7293 = metadata !{i32 283, i32 0, metadata !7275, null}
!7294 = metadata !{i32 284, i32 0, metadata !7275, null}
!7295 = metadata !{i32 287, i32 0, metadata !7275, null}
!7296 = metadata !{i32 291, i32 0, metadata !7275, null}
!7297 = metadata !{i32 292, i32 0, metadata !7275, null}
!7298 = metadata !{i32 293, i32 0, metadata !7275, null}
!7299 = metadata !{i32 296, i32 0, metadata !7275, null}
!7300 = metadata !{i32 298, i32 0, metadata !7275, null}
!7301 = metadata !{i32 299, i32 0, metadata !7275, null}
!7302 = metadata !{i32 300, i32 0, metadata !7275, null}
!7303 = metadata !{i32 301, i32 0, metadata !7275, null}
!7304 = metadata !{i32 302, i32 0, metadata !7275, null}
!7305 = metadata !{i32 303, i32 0, metadata !7275, null}
!7306 = metadata !{i32 305, i32 0, metadata !7275, null}
!7307 = metadata !{i32 352, i32 0, metadata !7308, null}
!7308 = metadata !{i32 589835, metadata !7275, i32 352, i32 0, metadata !2491, i32 1} ; [ DW_TAG_lexical_block ]
!7309 = metadata !{i32 353, i32 0, metadata !7308, null}
!7310 = metadata !{i32 354, i32 0, metadata !7308, null}
!7311 = metadata !{i32 359, i32 0, metadata !7312, null}
!7312 = metadata !{i32 589835, metadata !7308, i32 359, i32 0, metadata !2491, i32 2} ; [ DW_TAG_lexical_block ]
!7313 = metadata !{i32 360, i32 0, metadata !7312, null}
!7314 = metadata !{i32 361, i32 0, metadata !7312, null}
!7315 = metadata !{i32 365, i32 0, metadata !7312, null}
!7316 = metadata !{i32 366, i32 0, metadata !7312, null}
!7317 = metadata !{i32 367, i32 0, metadata !7312, null}
!7318 = metadata !{i32 368, i32 0, metadata !7312, null}
!7319 = metadata !{i32 369, i32 0, metadata !7312, null}
!7320 = metadata !{i32 372, i32 0, metadata !7312, null}
!7321 = metadata !{i32 373, i32 0, metadata !7312, null}
!7322 = metadata !{i32 374, i32 0, metadata !7312, null}
!7323 = metadata !{i32 377, i32 0, metadata !7312, null}
!7324 = metadata !{i32 378, i32 0, metadata !7312, null}
!7325 = metadata !{i32 381, i32 0, metadata !7275, null}
!7326 = metadata !{i32 382, i32 0, metadata !7275, null}
!7327 = metadata !{i32 383, i32 0, metadata !7275, null}
!7328 = metadata !{i32 387, i32 0, metadata !7275, null}
!7329 = metadata !{i32 390, i32 0, metadata !7330, null}
!7330 = metadata !{i32 589835, metadata !7275, i32 390, i32 0, metadata !2491, i32 3} ; [ DW_TAG_lexical_block ]
!7331 = metadata !{i32 391, i32 0, metadata !7330, null}
!7332 = metadata !{i32 393, i32 0, metadata !7333, null}
!7333 = metadata !{i32 589835, metadata !7330, i32 393, i32 0, metadata !2491, i32 4} ; [ DW_TAG_lexical_block ]
!7334 = metadata !{i32 398, i32 0, metadata !7333, null}
!7335 = metadata !{i32 399, i32 0, metadata !7333, null}
!7336 = metadata !{i32 400, i32 0, metadata !7333, null}
!7337 = metadata !{i32 402, i32 0, metadata !7333, null}
!7338 = metadata !{i32 403, i32 0, metadata !7333, null}
!7339 = metadata !{i32 404, i32 0, metadata !7333, null}
!7340 = metadata !{i32 405, i32 0, metadata !7330, null}
!7341 = metadata !{i32 410, i32 0, metadata !7275, null}
!7342 = metadata !{i32 411, i32 0, metadata !7275, null}
!7343 = metadata !{i32 412, i32 0, metadata !7275, null}
!7344 = metadata !{i32 415, i32 0, metadata !7275, null}
!7345 = metadata !{i32 416, i32 0, metadata !7275, null}
!7346 = metadata !{i32 417, i32 0, metadata !7275, null}
!7347 = metadata !{i32 419, i32 0, metadata !7275, null}
!7348 = metadata !{i32 421, i32 0, metadata !7275, null}
!7349 = metadata !{i32 422, i32 0, metadata !7275, null}
!7350 = metadata !{i32 423, i32 0, metadata !7275, null}
!7351 = metadata !{i32 424, i32 0, metadata !7275, null}
!7352 = metadata !{i32 425, i32 0, metadata !7275, null}
!7353 = metadata !{i32 426, i32 0, metadata !7275, null}
!7354 = metadata !{i32 430, i32 0, metadata !7275, null}
!7355 = metadata !{i32 431, i32 0, metadata !7275, null}
!7356 = metadata !{i32 432, i32 0, metadata !7275, null}
!7357 = metadata !{i32 436, i32 0, metadata !7358, null}
!7358 = metadata !{i32 589835, metadata !7275, i32 436, i32 0, metadata !2491, i32 5} ; [ DW_TAG_lexical_block ]
!7359 = metadata !{i32 437, i32 0, metadata !7358, null}
!7360 = metadata !{i32 438, i32 0, metadata !7358, null}
!7361 = metadata !{i32 439, i32 0, metadata !7358, null}
!7362 = metadata !{i32 440, i32 0, metadata !7358, null}
!7363 = metadata !{i32 441, i32 0, metadata !7358, null}
!7364 = metadata !{i32 446, i32 0, metadata !7358, null}
!7365 = metadata !{i32 447, i32 0, metadata !7358, null}
!7366 = metadata !{i32 466, i32 0, metadata !7275, null}
!7367 = metadata !{i32 467, i32 0, metadata !7275, null}
!7368 = metadata !{i32 468, i32 0, metadata !7275, null}
!7369 = metadata !{i32 469, i32 0, metadata !7275, null}
!7370 = metadata !{i32 471, i32 0, metadata !7275, null}
!7371 = metadata !{i32 473, i32 0, metadata !7275, null}
!7372 = metadata !{i32 475, i32 0, metadata !7275, null}
!7373 = metadata !{i32 476, i32 0, metadata !7275, null}
!7374 = metadata !{i32 477, i32 0, metadata !7275, null}
!7375 = metadata !{i32 480, i32 0, metadata !7275, null}
!7376 = metadata !{i32 481, i32 0, metadata !7275, null}
!7377 = metadata !{i32 482, i32 0, metadata !7275, null}
!7378 = metadata !{i32 485, i32 0, metadata !7275, null}
!7379 = metadata !{i32 486, i32 0, metadata !7275, null}
!7380 = metadata !{i32 489, i32 0, metadata !7275, null}
!7381 = metadata !{i32 490, i32 0, metadata !7275, null}
!7382 = metadata !{i32 491, i32 0, metadata !7275, null}
!7383 = metadata !{i32 492, i32 0, metadata !7275, null}
!7384 = metadata !{i32 493, i32 0, metadata !7275, null}
!7385 = metadata !{i32 494, i32 0, metadata !7275, null}
!7386 = metadata !{i32 497, i32 0, metadata !7387, null}
!7387 = metadata !{i32 589835, metadata !7275, i32 497, i32 0, metadata !2491, i32 6} ; [ DW_TAG_lexical_block ]
!7388 = metadata !{i32 498, i32 0, metadata !7387, null}
!7389 = metadata !{i32 537, i32 0, metadata !7387, null}
!7390 = metadata !{i32 538, i32 0, metadata !7387, null}
!7391 = metadata !{i32 539, i32 0, metadata !7387, null}
!7392 = metadata !{i32 540, i32 0, metadata !7387, null}
!7393 = metadata !{i32 541, i32 0, metadata !7387, null}
!7394 = metadata !{i32 542, i32 0, metadata !7387, null}
!7395 = metadata !{i32 543, i32 0, metadata !7387, null}
!7396 = metadata !{i32 544, i32 0, metadata !7387, null}
!7397 = metadata !{i32 545, i32 0, metadata !7387, null}
!7398 = metadata !{i32 546, i32 0, metadata !7387, null}
!7399 = metadata !{i32 547, i32 0, metadata !7387, null}
!7400 = metadata !{i32 548, i32 0, metadata !7387, null}
!7401 = metadata !{i32 550, i32 0, metadata !7387, null}
!7402 = metadata !{i32 551, i32 0, metadata !7387, null}
!7403 = metadata !{i32 552, i32 0, metadata !7387, null}
!7404 = metadata !{i32 553, i32 0, metadata !7387, null}
!7405 = metadata !{i32 554, i32 0, metadata !7387, null}
!7406 = metadata !{i32 556, i32 0, metadata !7387, null}
!7407 = metadata !{i32 559, i32 0, metadata !7387, null}
!7408 = metadata !{i32 567, i32 0, metadata !7387, null}
!7409 = metadata !{i32 569, i32 0, metadata !7387, null}
!7410 = metadata !{i32 570, i32 0, metadata !7387, null}
!7411 = metadata !{i32 585, i32 0, metadata !7387, null}
!7412 = metadata !{i32 588, i32 0, metadata !7387, null}
!7413 = metadata !{i32 589, i32 0, metadata !7387, null}
!7414 = metadata !{i32 590, i32 0, metadata !7387, null}
!7415 = metadata !{i32 591, i32 0, metadata !7387, null}
!7416 = metadata !{i32 592, i32 0, metadata !7387, null}
!7417 = metadata !{i32 594, i32 0, metadata !7387, null}
!7418 = metadata !{i32 595, i32 0, metadata !7387, null}
!7419 = metadata !{i32 596, i32 0, metadata !7387, null}
!7420 = metadata !{i32 597, i32 0, metadata !7387, null}
!7421 = metadata !{i32 598, i32 0, metadata !7387, null}
!7422 = metadata !{i32 601, i32 0, metadata !7387, null}
!7423 = metadata !{i32 606, i32 0, metadata !7387, null}
!7424 = metadata !{i32 607, i32 0, metadata !7387, null}
!7425 = metadata !{i32 608, i32 0, metadata !7387, null}
!7426 = metadata !{i32 609, i32 0, metadata !7387, null}
!7427 = metadata !{i32 610, i32 0, metadata !7387, null}
!7428 = metadata !{i32 611, i32 0, metadata !7387, null}
!7429 = metadata !{i32 612, i32 0, metadata !7387, null}
!7430 = metadata !{i32 618, i32 0, metadata !7275, null}
!7431 = metadata !{i32 619, i32 0, metadata !7432, null}
!7432 = metadata !{i32 589835, metadata !7275, i32 619, i32 0, metadata !2491, i32 7} ; [ DW_TAG_lexical_block ]
!7433 = metadata !{i32 621, i32 0, metadata !7432, null}
!7434 = metadata !{i32 622, i32 0, metadata !7432, null}
!7435 = metadata !{i32 629, i32 0, metadata !7432, null}
!7436 = metadata !{i32 630, i32 0, metadata !7432, null}
!7437 = metadata !{i32 631, i32 0, metadata !7432, null}
!7438 = metadata !{i32 634, i32 0, metadata !7432, null}
!7439 = metadata !{i32 635, i32 0, metadata !7432, null}
!7440 = metadata !{i32 637, i32 0, metadata !7432, null}
!7441 = metadata !{i32 638, i32 0, metadata !7432, null}
!7442 = metadata !{i32 639, i32 0, metadata !7432, null}
!7443 = metadata !{i32 640, i32 0, metadata !7432, null}
!7444 = metadata !{i32 641, i32 0, metadata !7432, null}
!7445 = metadata !{i32 643, i32 0, metadata !7432, null}
!7446 = metadata !{i32 644, i32 0, metadata !7432, null}
!7447 = metadata !{i32 645, i32 0, metadata !7432, null}
!7448 = metadata !{i32 646, i32 0, metadata !7432, null}
!7449 = metadata !{i32 649, i32 0, metadata !7275, null}
!7450 = metadata !{i32 652, i32 0, metadata !7451, null}
!7451 = metadata !{i32 589835, metadata !7275, i32 652, i32 0, metadata !2491, i32 8} ; [ DW_TAG_lexical_block ]
!7452 = metadata !{i32 653, i32 0, metadata !7451, null}
!7453 = metadata !{i32 655, i32 0, metadata !7451, null}
!7454 = metadata !{i32 656, i32 0, metadata !7451, null}
!7455 = metadata !{i32 657, i32 0, metadata !7451, null}
!7456 = metadata !{i32 659, i32 0, metadata !7451, null}
!7457 = metadata !{i32 660, i32 0, metadata !7451, null}
!7458 = metadata !{i32 661, i32 0, metadata !7451, null}
!7459 = metadata !{i32 662, i32 0, metadata !7451, null}
!7460 = metadata !{i32 675, i32 0, metadata !7451, null}
!7461 = metadata !{i32 676, i32 0, metadata !7451, null}
!7462 = metadata !{i32 677, i32 0, metadata !7451, null}
!7463 = metadata !{i32 678, i32 0, metadata !7451, null}
!7464 = metadata !{i32 679, i32 0, metadata !7451, null}
!7465 = metadata !{i32 680, i32 0, metadata !7451, null}
!7466 = metadata !{i32 681, i32 0, metadata !7451, null}
!7467 = metadata !{i32 682, i32 0, metadata !7451, null}
!7468 = metadata !{i32 684, i32 0, metadata !7451, null}
!7469 = metadata !{i32 688, i32 0, metadata !7451, null}
!7470 = metadata !{i32 756, i32 0, metadata !7275, null}
!7471 = metadata !{i32 757, i32 0, metadata !7275, null}
!7472 = metadata !{i32 761, i32 0, metadata !7275, null}
!7473 = metadata !{i32 762, i32 0, metadata !7275, null}
!7474 = metadata !{i32 763, i32 0, metadata !7275, null}
!7475 = metadata !{i32 765, i32 0, metadata !7275, null}
!7476 = metadata !{i32 14, i32 0, metadata !7477, null}
!7477 = metadata !{i32 589835, metadata !2564, i32 13, i32 0, metadata !2565, i32 0} ; [ DW_TAG_lexical_block ]
!7478 = metadata !{i32 16, i32 0, metadata !7477, null}
!7479 = metadata !{i32 19, i32 0, metadata !7477, null}
!7480 = metadata !{i32 33, i32 0, metadata !7481, null}
!7481 = metadata !{i32 589835, metadata !7477, i32 13, i32 0, metadata !2565, i32 1} ; [ DW_TAG_lexical_block ]
!7482 = metadata !{i32 34, i32 0, metadata !7481, null}
!7483 = metadata !{i32 36, i32 0, metadata !7481, null}
!7484 = metadata !{i32 38, i32 0, metadata !7481, null}
!7485 = metadata !{i32 42, i32 0, metadata !7477, null}
!7486 = metadata !{i32 45, i32 0, metadata !7477, null}
!7487 = metadata !{i32 59, i32 0, metadata !7488, null}
!7488 = metadata !{i32 589835, metadata !7477, i32 59, i32 0, metadata !2565, i32 2} ; [ DW_TAG_lexical_block ]
!7489 = metadata !{i32 60, i32 0, metadata !7488, null}
!7490 = metadata !{i32 62, i32 0, metadata !7488, null}
!7491 = metadata !{i32 64, i32 0, metadata !7488, null}
!7492 = metadata !{i32 520, i32 0, metadata !7493, null}
!7493 = metadata !{i32 589835, metadata !2574, i32 516, i32 0, metadata !2577, i32 0} ; [ DW_TAG_lexical_block ]
!7494 = metadata !{i32 522, i32 0, metadata !7493, null}
!7495 = metadata !{i32 524, i32 0, metadata !7493, null}
!7496 = metadata !{i32 548, i32 0, metadata !7497, null}
!7497 = metadata !{i32 589835, metadata !7493, i32 548, i32 0, metadata !2577, i32 1} ; [ DW_TAG_lexical_block ]
!7498 = metadata !{i32 550, i32 0, metadata !7497, null}
!7499 = metadata !{i32 552, i32 0, metadata !7497, null}
!7500 = metadata !{i32 553, i32 0, metadata !7497, null}
!7501 = metadata !{i32 570, i32 0, metadata !7502, null}
!7502 = metadata !{i32 589835, metadata !7493, i32 570, i32 0, metadata !2577, i32 2} ; [ DW_TAG_lexical_block ]
!7503 = metadata !{i32 573, i32 0, metadata !7502, null}
!7504 = metadata !{i32 574, i32 0, metadata !7502, null}
!7505 = metadata !{i32 575, i32 0, metadata !7502, null}
!7506 = metadata !{i32 576, i32 0, metadata !7502, null}
!7507 = metadata !{i32 578, i32 0, metadata !7502, null}
!7508 = metadata !{i32 580, i32 0, metadata !7502, null}
!7509 = metadata !{i32 572, i32 0, metadata !7502, null}
!7510 = metadata !{i32 583, i32 0, metadata !7502, null}
!7511 = metadata !{i32 600, i32 0, metadata !7493, null}
!7512 = metadata !{i32 805, i32 0, metadata !7513, null}
!7513 = metadata !{i32 589835, metadata !2637, i32 801, i32 0, metadata !2640, i32 0} ; [ DW_TAG_lexical_block ]
!7514 = metadata !{i32 807, i32 0, metadata !7513, null}
!7515 = metadata !{i32 810, i32 0, metadata !7513, null}
!7516 = metadata !{i32 812, i32 0, metadata !7513, null}
!7517 = metadata !{i32 818, i32 0, metadata !7518, null}
!7518 = metadata !{i32 589835, metadata !2644, i32 816, i32 0, metadata !2640, i32 1} ; [ DW_TAG_lexical_block ]
!7519 = metadata !{i32 819, i32 0, metadata !7518, null}
!7520 = metadata !{i32 821, i32 0, metadata !7518, null}
!7521 = metadata !{i32 822, i32 0, metadata !7518, null}
!7522 = metadata !{i32 826, i32 0, metadata !7518, null}
!7523 = metadata !{i32 873, i32 0, metadata !7524, null}
!7524 = metadata !{i32 589835, metadata !2647, i32 845, i32 0, metadata !2640, i32 2} ; [ DW_TAG_lexical_block ]
!7525 = metadata !{i32 874, i32 0, metadata !7524, null}
!7526 = metadata !{i32 875, i32 0, metadata !7524, null}
!7527 = metadata !{i32 876, i32 0, metadata !7524, null}
!7528 = metadata !{i32 877, i32 0, metadata !7524, null}
!7529 = metadata !{i32 879, i32 0, metadata !7524, null}
!7530 = metadata !{i32 889, i32 0, metadata !7524, null}
!7531 = metadata !{i32 890, i32 0, metadata !7524, null}
!7532 = metadata !{i32 891, i32 0, metadata !7524, null}
!7533 = metadata !{i32 893, i32 0, metadata !7524, null}
!7534 = metadata !{i32 894, i32 0, metadata !7524, null}
!7535 = metadata !{i32 896, i32 0, metadata !7524, null}
!7536 = metadata !{i32 899, i32 0, metadata !7524, null}
!7537 = metadata !{i32 901, i32 0, metadata !7524, null}
!7538 = metadata !{i32 902, i32 0, metadata !7524, null}
!7539 = metadata !{i32 913, i32 0, metadata !7524, null}
!7540 = metadata !{i32 914, i32 0, metadata !7524, null}
!7541 = metadata !{i32 915, i32 0, metadata !7524, null}
!7542 = metadata !{i32 916, i32 0, metadata !7524, null}
!7543 = metadata !{i32 917, i32 0, metadata !7524, null}
!7544 = metadata !{i32 919, i32 0, metadata !7524, null}
!7545 = metadata !{i32 921, i32 0, metadata !7524, null}
!7546 = metadata !{i32 922, i32 0, metadata !7524, null}
!7547 = metadata !{i32 924, i32 0, metadata !7524, null}
!7548 = metadata !{i32 920, i32 0, metadata !7524, null}
!7549 = metadata !{i32 926, i32 0, metadata !7524, null}
!7550 = metadata !{i32 931, i32 0, metadata !7524, null}
!7551 = metadata !{i32 932, i32 0, metadata !7524, null}
!7552 = metadata !{i32 933, i32 0, metadata !7524, null}
!7553 = metadata !{i32 934, i32 0, metadata !7524, null}
!7554 = metadata !{i32 936, i32 0, metadata !7524, null}
!7555 = metadata !{i32 937, i32 0, metadata !7524, null}
!7556 = metadata !{i32 941, i32 0, metadata !7524, null}
!7557 = metadata !{i32 952, i32 0, metadata !7524, null}
!7558 = metadata !{i32 954, i32 0, metadata !7524, null}
!7559 = metadata !{i32 956, i32 0, metadata !7524, null}
!7560 = metadata !{i32 960, i32 0, metadata !7524, null}
!7561 = metadata !{i32 976, i32 0, metadata !7524, null}
!7562 = metadata !{i32 977, i32 0, metadata !7524, null}
!7563 = metadata !{i32 978, i32 0, metadata !7524, null}
!7564 = metadata !{i32 981, i32 0, metadata !7524, null}
!7565 = metadata !{i32 982, i32 0, metadata !7524, null}
!7566 = metadata !{i32 983, i32 0, metadata !7524, null}
!7567 = metadata !{i32 986, i32 0, metadata !7524, null}
!7568 = metadata !{i32 987, i32 0, metadata !7524, null}
!7569 = metadata !{i32 988, i32 0, metadata !7524, null}
!7570 = metadata !{i32 993, i32 0, metadata !7524, null}
!7571 = metadata !{i32 996, i32 0, metadata !7524, null}
!7572 = metadata !{i32 1001, i32 0, metadata !7524, null}
!7573 = metadata !{i32 1003, i32 0, metadata !7524, null}
!7574 = metadata !{i32 1004, i32 0, metadata !7524, null}
!7575 = metadata !{i32 1006, i32 0, metadata !7524, null}
!7576 = metadata !{i32 1008, i32 0, metadata !7524, null}
!7577 = metadata !{i32 1011, i32 0, metadata !7524, null}
!7578 = metadata !{i32 1013, i32 0, metadata !7524, null}
!7579 = metadata !{i32 1015, i32 0, metadata !7524, null}
!7580 = metadata !{i32 1018, i32 0, metadata !7524, null}
!7581 = metadata !{i32 1019, i32 0, metadata !7524, null}
!7582 = metadata !{i32 1020, i32 0, metadata !7524, null}
!7583 = metadata !{i32 1021, i32 0, metadata !7524, null}
!7584 = metadata !{i32 1022, i32 0, metadata !7524, null}
!7585 = metadata !{i32 1026, i32 0, metadata !7524, null}
!7586 = metadata !{i32 1030, i32 0, metadata !7524, null}
!7587 = metadata !{i32 1032, i32 0, metadata !7524, null}
!7588 = metadata !{i32 1033, i32 0, metadata !7524, null}
!7589 = metadata !{i32 1036, i32 0, metadata !7524, null}
!7590 = metadata !{i32 1037, i32 0, metadata !7524, null}
!7591 = metadata !{i32 1038, i32 0, metadata !7524, null}
!7592 = metadata !{i32 1039, i32 0, metadata !7524, null}
!7593 = metadata !{i32 1041, i32 0, metadata !7524, null}
!7594 = metadata !{i32 1044, i32 0, metadata !7524, null}
!7595 = metadata !{i32 1045, i32 0, metadata !7524, null}
!7596 = metadata !{i32 1048, i32 0, metadata !7524, null}
!7597 = metadata !{i32 1051, i32 0, metadata !7524, null}
!7598 = metadata !{i32 1052, i32 0, metadata !7524, null}
!7599 = metadata !{i32 1054, i32 0, metadata !7524, null}
!7600 = metadata !{i32 1056, i32 0, metadata !7524, null}
!7601 = metadata !{i32 1059, i32 0, metadata !7524, null}
!7602 = metadata !{i32 1060, i32 0, metadata !7524, null}
!7603 = metadata !{i32 1061, i32 0, metadata !7524, null}
!7604 = metadata !{i32 1063, i32 0, metadata !7524, null}
!7605 = metadata !{i32 1064, i32 0, metadata !7524, null}
!7606 = metadata !{i32 1065, i32 0, metadata !7524, null}
!7607 = metadata !{i32 1068, i32 0, metadata !7524, null}
!7608 = metadata !{i32 1070, i32 0, metadata !7524, null}
!7609 = metadata !{i32 1071, i32 0, metadata !7524, null}
!7610 = metadata !{i32 1072, i32 0, metadata !7524, null}
!7611 = metadata !{i32 1073, i32 0, metadata !7524, null}
!7612 = metadata !{i32 1074, i32 0, metadata !7524, null}
!7613 = metadata !{i32 1075, i32 0, metadata !7524, null}
!7614 = metadata !{i32 1077, i32 0, metadata !7524, null}
!7615 = metadata !{i32 1103, i32 0, metadata !7524, null}
!7616 = metadata !{i32 1111, i32 0, metadata !7524, null}
!7617 = metadata !{i32 1112, i32 0, metadata !7524, null}
!7618 = metadata !{i32 1115, i32 0, metadata !7524, null}
!7619 = metadata !{i32 1118, i32 0, metadata !7524, null}
!7620 = metadata !{i32 1119, i32 0, metadata !7524, null}
!7621 = metadata !{i32 1120, i32 0, metadata !7524, null}
!7622 = metadata !{i32 1123, i32 0, metadata !7524, null}
!7623 = metadata !{i32 1125, i32 0, metadata !7524, null}
!7624 = metadata !{i32 1126, i32 0, metadata !7524, null}
!7625 = metadata !{i32 1128, i32 0, metadata !7524, null}
!7626 = metadata !{i32 1131, i32 0, metadata !7524, null}
!7627 = metadata !{i32 1132, i32 0, metadata !7524, null}
!7628 = metadata !{i32 1136, i32 0, metadata !7524, null}
!7629 = metadata !{i32 1140, i32 0, metadata !7524, null}
!7630 = metadata !{i32 1141, i32 0, metadata !7524, null}
!7631 = metadata !{i32 1143, i32 0, metadata !7524, null}
!7632 = metadata !{i32 1150, i32 0, metadata !7524, null}
!7633 = metadata !{i32 609, i32 0, metadata !7634, null}
!7634 = metadata !{i32 589835, metadata !2706, i32 606, i32 0, metadata !2709, i32 0} ; [ DW_TAG_lexical_block ]
!7635 = metadata !{i32 612, i32 0, metadata !7634, null}
!7636 = metadata !{i32 613, i32 0, metadata !7634, null}
!7637 = metadata !{i32 614, i32 0, metadata !7634, null}
!7638 = metadata !{i32 615, i32 0, metadata !7634, null}
!7639 = metadata !{i32 616, i32 0, metadata !7634, null}
!7640 = metadata !{i32 619, i32 0, metadata !7634, null}
!7641 = metadata !{i32 629, i32 0, metadata !7642, null}
!7642 = metadata !{i32 589835, metadata !2770, i32 625, i32 0, metadata !2773, i32 0} ; [ DW_TAG_lexical_block ]
!7643 = metadata !{i32 634, i32 0, metadata !7642, null}
!7644 = metadata !{i32 636, i32 0, metadata !7642, null}
!7645 = metadata !{i32 637, i32 0, metadata !7642, null}
!7646 = metadata !{i32 643, i32 0, metadata !7642, null}
!7647 = metadata !{i32 644, i32 0, metadata !7642, null}
!7648 = metadata !{i32 650, i32 0, metadata !7642, null}
!7649 = metadata !{i32 652, i32 0, metadata !7642, null}
!7650 = metadata !{i32 655, i32 0, metadata !7642, null}
!7651 = metadata !{i32 660, i32 0, metadata !7642, null}
!7652 = metadata !{i32 668, i32 0, metadata !7642, null}
!7653 = metadata !{i32 672, i32 0, metadata !7642, null}
!7654 = metadata !{i32 677, i32 0, metadata !7642, null}
!7655 = metadata !{i32 680, i32 0, metadata !7642, null}
!7656 = metadata !{i32 694, i32 0, metadata !7642, null}
!7657 = metadata !{i32 699, i32 0, metadata !7642, null}
!7658 = metadata !{i32 651, i32 0, metadata !7642, null}
!7659 = metadata !{i32 703, i32 0, metadata !7642, null}
!7660 = metadata !{i32 704, i32 0, metadata !7642, null}
!7661 = metadata !{i32 707, i32 0, metadata !7642, null}
!7662 = metadata !{i32 708, i32 0, metadata !7642, null}
!7663 = metadata !{i32 715, i32 0, metadata !7642, null}
!7664 = metadata !{i32 716, i32 0, metadata !7642, null}
!7665 = metadata !{i32 717, i32 0, metadata !7642, null}
!7666 = metadata !{i32 718, i32 0, metadata !7642, null}
!7667 = metadata !{i32 719, i32 0, metadata !7642, null}
!7668 = metadata !{i32 728, i32 0, metadata !7642, null}
!7669 = metadata !{i32 34, i32 0, metadata !7670, null}
!7670 = metadata !{i32 589835, metadata !2833, i32 33, i32 0, metadata !2834, i32 0} ; [ DW_TAG_lexical_block ]
!7671 = metadata !{i32 35, i32 0, metadata !7670, null}
!7672 = metadata !{i32 39, i32 0, metadata !7670, null}
!7673 = metadata !{i32 40, i32 0, metadata !7670, null}
!7674 = metadata !{i32 45, i32 0, metadata !7670, null}
!7675 = metadata !{i32 46, i32 0, metadata !7670, null}
!7676 = metadata !{i32 51, i32 0, metadata !7670, null}
!7677 = metadata !{i32 52, i32 0, metadata !7670, null}
!7678 = metadata !{i32 57, i32 0, metadata !7670, null}
!7679 = metadata !{i32 36, i32 0, metadata !7670, null}
!7680 = metadata !{i32 35, i32 0, metadata !7681, null}
!7681 = metadata !{i32 589835, metadata !2843, i32 24, i32 0, metadata !2844, i32 0} ; [ DW_TAG_lexical_block ]
!7682 = metadata !{i32 36, i32 0, metadata !7681, null}
!7683 = metadata !{i32 37, i32 0, metadata !7681, null}
!7684 = metadata !{i32 38, i32 0, metadata !7681, null}
!7685 = metadata !{i32 39, i32 0, metadata !7681, null}
!7686 = metadata !{i32 40, i32 0, metadata !7681, null}
!7687 = metadata !{i32 59, i32 0, metadata !7681, null}
!7688 = metadata !{i32 96, i32 0, metadata !7681, null}
!7689 = metadata !{i32 97, i32 0, metadata !7681, null}
!7690 = metadata !{i32 98, i32 0, metadata !7681, null}
!7691 = metadata !{i32 99, i32 0, metadata !7681, null}
!7692 = metadata !{i32 100, i32 0, metadata !7681, null}
!7693 = metadata !{i32 102, i32 0, metadata !7681, null}
!7694 = metadata !{i32 103, i32 0, metadata !7681, null}
!7695 = metadata !{i32 122, i32 0, metadata !7681, null}
!7696 = metadata !{i32 123, i32 0, metadata !7681, null}
!7697 = metadata !{i32 124, i32 0, metadata !7681, null}
!7698 = metadata !{i32 125, i32 0, metadata !7681, null}
!7699 = metadata !{i32 126, i32 0, metadata !7681, null}
!7700 = metadata !{i32 127, i32 0, metadata !7681, null}
!7701 = metadata !{i32 129, i32 0, metadata !7681, null}
!7702 = metadata !{i32 130, i32 0, metadata !7681, null}
!7703 = metadata !{i32 142, i32 0, metadata !7681, null}
!7704 = metadata !{i32 144, i32 0, metadata !7681, null}
!7705 = metadata !{i32 148, i32 0, metadata !7681, null}
!7706 = metadata !{i32 149, i32 0, metadata !7681, null}
!7707 = metadata !{i32 152, i32 0, metadata !7681, null}
!7708 = metadata !{i32 43, i32 0, metadata !7709, null}
!7709 = metadata !{i32 589835, metadata !2862, i32 39, i32 0, metadata !2863, i32 0} ; [ DW_TAG_lexical_block ]
!7710 = metadata !{i32 45, i32 0, metadata !7709, null}
!7711 = metadata !{i32 46, i32 0, metadata !7709, null}
!7712 = metadata !{i32 47, i32 0, metadata !7709, null}
!7713 = metadata !{i32 48, i32 0, metadata !7709, null}
!7714 = metadata !{i32 49, i32 0, metadata !7709, null}
!7715 = metadata !{i32 61, i32 0, metadata !7709, null}
!7716 = metadata !{i32 79, i32 0, metadata !7709, null}
!7717 = metadata !{i32 351, i32 0, metadata !7718, null}
!7718 = metadata !{i32 589835, metadata !2886, i32 342, i32 0, metadata !2889, i32 0} ; [ DW_TAG_lexical_block ]
!7719 = metadata !{i32 352, i32 0, metadata !7718, null}
!7720 = metadata !{i32 353, i32 0, metadata !7718, null}
!7721 = metadata !{i32 356, i32 0, metadata !7718, null}
!7722 = metadata !{i32 357, i32 0, metadata !7718, null}
!7723 = metadata !{i32 359, i32 0, metadata !7718, null}
!7724 = metadata !{i32 360, i32 0, metadata !7718, null}
!7725 = metadata !{i32 395, i32 0, metadata !7726, null}
!7726 = metadata !{i32 589835, metadata !2906, i32 394, i32 0, metadata !2909, i32 0} ; [ DW_TAG_lexical_block ]
!7727 = metadata !{i32 224, i32 0, metadata !7728, null}
!7728 = metadata !{i32 589835, metadata !2928, i32 222, i32 0, metadata !2931, i32 0} ; [ DW_TAG_lexical_block ]
!7729 = metadata !{i32 229, i32 0, metadata !7728, null}
!7730 = metadata !{i32 256, i32 0, metadata !7728, null}
!7731 = metadata !{i32 255, i32 0, metadata !7728, null}
!7732 = metadata !{i32 259, i32 0, metadata !7728, null}
!7733 = metadata !{i32 260, i32 0, metadata !7728, null}
!7734 = metadata !{i32 261, i32 0, metadata !7728, null}
!7735 = metadata !{i32 262, i32 0, metadata !7728, null}
!7736 = metadata !{i32 275, i32 0, metadata !7728, null}
!7737 = metadata !{i32 277, i32 0, metadata !7728, null}
!7738 = metadata !{i32 280, i32 0, metadata !7728, null}
!7739 = metadata !{i32 282, i32 0, metadata !7728, null}
!7740 = metadata !{i32 285, i32 0, metadata !7728, null}
!7741 = metadata !{i32 286, i32 0, metadata !7728, null}
!7742 = metadata !{i32 288, i32 0, metadata !7728, null}
!7743 = metadata !{i32 289, i32 0, metadata !7728, null}
!7744 = metadata !{i32 290, i32 0, metadata !7728, null}
!7745 = metadata !{i32 297, i32 0, metadata !7728, null}
!7746 = metadata !{i32 314, i32 0, metadata !7728, null}
!7747 = metadata !{i32 283, i32 0, metadata !7728, null}
!7748 = metadata !{i32 330, i32 0, metadata !7728, null}
!7749 = metadata !{i32 331, i32 0, metadata !7728, null}
!7750 = metadata !{i32 337, i32 0, metadata !7728, null}
!7751 = metadata !{i32 346, i32 0, metadata !7728, null}
!7752 = metadata !{i32 349, i32 0, metadata !7753, null}
!7753 = metadata !{i32 589835, metadata !7728, i32 349, i32 0, metadata !2931, i32 1} ; [ DW_TAG_lexical_block ]
!7754 = metadata !{i32 359, i32 0, metadata !7755, null}
!7755 = metadata !{i32 589835, metadata !7753, i32 359, i32 0, metadata !2931, i32 2} ; [ DW_TAG_lexical_block ]
!7756 = metadata !{i32 361, i32 0, metadata !7755, null}
!7757 = metadata !{i32 362, i32 0, metadata !7755, null}
!7758 = metadata !{i32 363, i32 0, metadata !7755, null}
!7759 = metadata !{i32 364, i32 0, metadata !7755, null}
!7760 = metadata !{i32 365, i32 0, metadata !7755, null}
!7761 = metadata !{i32 367, i32 0, metadata !7755, null}
!7762 = metadata !{i32 360, i32 0, metadata !7755, null}
!7763 = metadata !{i32 371, i32 0, metadata !7755, null}
!7764 = metadata !{i32 372, i32 0, metadata !7753, null}
!7765 = metadata !{i32 377, i32 0, metadata !7728, null}
!7766 = metadata !{i32 384, i32 0, metadata !7728, null}
!7767 = metadata !{i32 385, i32 0, metadata !7728, null}
!7768 = metadata !{i32 389, i32 0, metadata !7728, null}
!7769 = metadata !{i32 390, i32 0, metadata !7728, null}
!7770 = metadata !{i32 400, i32 0, metadata !7728, null}
!7771 = metadata !{i32 401, i32 0, metadata !7728, null}
!7772 = metadata !{i32 405, i32 0, metadata !7728, null}
!7773 = metadata !{i32 407, i32 0, metadata !7728, null}
!7774 = metadata !{i32 409, i32 0, metadata !7728, null}
!7775 = metadata !{i32 410, i32 0, metadata !7728, null}
!7776 = metadata !{i32 411, i32 0, metadata !7728, null}
!7777 = metadata !{i32 412, i32 0, metadata !7728, null}
!7778 = metadata !{i32 415, i32 0, metadata !7728, null}
!7779 = metadata !{i32 416, i32 0, metadata !7728, null}
!7780 = metadata !{i32 419, i32 0, metadata !7728, null}
!7781 = metadata !{i32 420, i32 0, metadata !7728, null}
!7782 = metadata !{i32 425, i32 0, metadata !7728, null}
!7783 = metadata !{i32 417, i32 0, metadata !7728, null}
!7784 = metadata !{i32 429, i32 0, metadata !7728, null}
!7785 = metadata !{i32 430, i32 0, metadata !7728, null}
!7786 = metadata !{i32 434, i32 0, metadata !7728, null}
!7787 = metadata !{i32 438, i32 0, metadata !7728, null}
!7788 = metadata !{i32 445, i32 0, metadata !7728, null}
!7789 = metadata !{i32 447, i32 0, metadata !7728, null}
!7790 = metadata !{i32 448, i32 0, metadata !7728, null}
!7791 = metadata !{i32 452, i32 0, metadata !7728, null}
!7792 = metadata !{i32 453, i32 0, metadata !7728, null}
!7793 = metadata !{i32 457, i32 0, metadata !7728, null}
!7794 = metadata !{i32 459, i32 0, metadata !7728, null}
!7795 = metadata !{i32 462, i32 0, metadata !7728, null}
!7796 = metadata !{i32 463, i32 0, metadata !7728, null}
!7797 = metadata !{i32 451, i32 0, metadata !7728, null}
!7798 = metadata !{i32 479, i32 0, metadata !7728, null}
!7799 = metadata !{i32 480, i32 0, metadata !7728, null}
!7800 = metadata !{i32 484, i32 0, metadata !7728, null}
!7801 = metadata !{i32 486, i32 0, metadata !7728, null}
!7802 = metadata !{i32 487, i32 0, metadata !7728, null}
!7803 = metadata !{i32 491, i32 0, metadata !7728, null}
!7804 = metadata !{i32 524, i32 0, metadata !7805, null}
!7805 = metadata !{i32 589835, metadata !2943, i32 512, i32 0, metadata !2946, i32 0} ; [ DW_TAG_lexical_block ]
!7806 = metadata !{i32 527, i32 0, metadata !7805, null}
!7807 = metadata !{i32 526, i32 0, metadata !7805, null}
!7808 = metadata !{i32 531, i32 0, metadata !7805, null}
!7809 = metadata !{i32 532, i32 0, metadata !7805, null}
!7810 = metadata !{i32 533, i32 0, metadata !7805, null}
!7811 = metadata !{i32 534, i32 0, metadata !7805, null}
!7812 = metadata !{i32 537, i32 0, metadata !7805, null}
!7813 = metadata !{i32 538, i32 0, metadata !7805, null}
!7814 = metadata !{i32 539, i32 0, metadata !7805, null}
!7815 = metadata !{i32 540, i32 0, metadata !7805, null}
!7816 = metadata !{i32 541, i32 0, metadata !7805, null}
!7817 = metadata !{i32 542, i32 0, metadata !7805, null}
!7818 = metadata !{i32 543, i32 0, metadata !7805, null}
!7819 = metadata !{i32 544, i32 0, metadata !7805, null}
!7820 = metadata !{i32 548, i32 0, metadata !7805, null}
!7821 = metadata !{i32 549, i32 0, metadata !7805, null}
!7822 = metadata !{i32 553, i32 0, metadata !7805, null}
!7823 = metadata !{i32 555, i32 0, metadata !7805, null}
!7824 = metadata !{i32 556, i32 0, metadata !7805, null}
!7825 = metadata !{i32 557, i32 0, metadata !7805, null}
!7826 = metadata !{i32 559, i32 0, metadata !7805, null}
!7827 = metadata !{i32 565, i32 0, metadata !7805, null}
!7828 = metadata !{i32 569, i32 0, metadata !7805, null}
!7829 = metadata !{i32 571, i32 0, metadata !7805, null}
!7830 = metadata !{i32 573, i32 0, metadata !7805, null}
!7831 = metadata !{i32 574, i32 0, metadata !7805, null}
!7832 = metadata !{i32 575, i32 0, metadata !7805, null}
!7833 = metadata !{i32 577, i32 0, metadata !7805, null}
!7834 = metadata !{i32 583, i32 0, metadata !7805, null}
!7835 = metadata !{i32 584, i32 0, metadata !7805, null}
!7836 = metadata !{i32 591, i32 0, metadata !7837, null}
!7837 = metadata !{i32 589835, metadata !7805, i32 591, i32 0, metadata !2946, i32 1} ; [ DW_TAG_lexical_block ]
!7838 = metadata !{i32 592, i32 0, metadata !7837, null}
!7839 = metadata !{i32 593, i32 0, metadata !7837, null}
!7840 = metadata !{i32 594, i32 0, metadata !7837, null}
!7841 = metadata !{i32 598, i32 0, metadata !7805, null}
!7842 = metadata !{i32 820, i32 0, metadata !7843, null}
!7843 = metadata !{i32 589835, metadata !2956, i32 808, i32 0, metadata !2959, i32 0} ; [ DW_TAG_lexical_block ]
!7844 = metadata !{i32 829, i32 0, metadata !7843, null}
!7845 = metadata !{i32 830, i32 0, metadata !7843, null}
!7846 = metadata !{i32 831, i32 0, metadata !7843, null}
!7847 = metadata !{i32 833, i32 0, metadata !7843, null}
!7848 = metadata !{i32 834, i32 0, metadata !7843, null}
!7849 = metadata !{i32 838, i32 0, metadata !7843, null}
!7850 = metadata !{i32 839, i32 0, metadata !7843, null}
!7851 = metadata !{i32 842, i32 0, metadata !7843, null}
!7852 = metadata !{i32 843, i32 0, metadata !7843, null}
!7853 = metadata !{i32 894, i32 0, metadata !7843, null}
!7854 = metadata !{i32 898, i32 0, metadata !7843, null}
!7855 = metadata !{i32 899, i32 0, metadata !7843, null}
!7856 = metadata !{i32 901, i32 0, metadata !7843, null}
!7857 = metadata !{i32 902, i32 0, metadata !7843, null}
!7858 = metadata !{i32 905, i32 0, metadata !7843, null}
!7859 = metadata !{i32 906, i32 0, metadata !7843, null}
!7860 = metadata !{i32 907, i32 0, metadata !7843, null}
!7861 = metadata !{i32 893, i32 0, metadata !7843, null}
!7862 = metadata !{i32 909, i32 0, metadata !7843, null}
!7863 = metadata !{i32 910, i32 0, metadata !7843, null}
!7864 = metadata !{i32 912, i32 0, metadata !7843, null}
!7865 = metadata !{i32 162, i32 0, metadata !4442, null}
!7866 = metadata !{i32 163, i32 0, metadata !4442, null}
!7867 = metadata !{i32 182, i32 0, metadata !4442, null}
!7868 = metadata !{i32 186, i32 0, metadata !4442, null}
!7869 = metadata !{i32 189, i32 0, metadata !4442, null}
!7870 = metadata !{i32 130, i32 0, metadata !7871, metadata !7869}
!7871 = metadata !{i32 589835, metadata !2988, i32 129, i32 0, metadata !2979, i32 3} ; [ DW_TAG_lexical_block ]
!7872 = metadata !{i32 131, i32 0, metadata !7871, metadata !7869}
!7873 = metadata !{i32 134, i32 0, metadata !7871, metadata !7869}
!7874 = metadata !{i32 24, i32 0, metadata !7875, metadata !7876}
!7875 = metadata !{i32 589835, metadata !2996, i32 23, i32 0, metadata !2979, i32 5} ; [ DW_TAG_lexical_block ]
!7876 = metadata !{i32 190, i32 0, metadata !4442, null}
!7877 = metadata !{i32 203, i32 0, metadata !4442, null}
!7878 = metadata !{i32 130, i32 0, metadata !7871, metadata !7877}
!7879 = metadata !{i32 131, i32 0, metadata !7871, metadata !7877}
!7880 = metadata !{i32 134, i32 0, metadata !7871, metadata !7877}
!7881 = metadata !{i32 205, i32 0, metadata !4492, null}
!7882 = metadata !{i32 24, i32 0, metadata !7875, metadata !7883}
!7883 = metadata !{i32 206, i32 0, metadata !4492, null}
!7884 = metadata !{i32 208, i32 0, metadata !4492, null}
!7885 = metadata !{i32 46, i32 0, metadata !4424, metadata !7884}
!7886 = metadata !{i32 24, i32 0, metadata !7875, metadata !7885}
!7887 = metadata !{i32 47, i32 0, metadata !4424, metadata !7884}
!7888 = metadata !{i32 49, i32 0, metadata !4424, metadata !7884}
!7889 = metadata !{i32 32, i32 0, metadata !7890, metadata !7891}
!7890 = metadata !{i32 589835, metadata !2986, i32 31, i32 0, metadata !2979, i32 1} ; [ DW_TAG_lexical_block ]
!7891 = metadata !{i32 52, i32 0, metadata !4424, metadata !7884}
!7892 = metadata !{i32 53, i32 0, metadata !4424, metadata !7884}
!7893 = metadata !{i32 54, i32 0, metadata !4424, metadata !7884}
!7894 = metadata !{i32 24, i32 0, metadata !7875, metadata !7895}
!7895 = metadata !{i32 56, i32 0, metadata !4424, metadata !7884}
!7896 = metadata !{i32 51, i32 0, metadata !4424, metadata !7884}
!7897 = metadata !{i32 209, i32 0, metadata !4492, null}
!7898 = metadata !{i32 210, i32 0, metadata !4492, null}
!7899 = metadata !{i32 153, i32 0, metadata !7900, metadata !7898}
!7900 = metadata !{i32 589835, metadata !3009, i32 152, i32 0, metadata !2979, i32 9} ; [ DW_TAG_lexical_block ]
!7901 = metadata !{i32 24, i32 0, metadata !7875, metadata !7902}
!7902 = metadata !{i32 154, i32 0, metadata !7900, metadata !7898}
!7903 = metadata !{i32 156, i32 0, metadata !7900, metadata !7898}
!7904 = metadata !{i32 157, i32 0, metadata !7900, metadata !7898}
!7905 = metadata !{i32 131, i32 0, metadata !7871, metadata !7906}
!7906 = metadata !{i32 214, i32 0, metadata !4442, null}
!7907 = metadata !{i32 134, i32 0, metadata !7871, metadata !7906}
!7908 = metadata !{i32 130, i32 0, metadata !7871, metadata !7906}
!7909 = metadata !{i32 218, i32 0, metadata !4494, null}
!7910 = metadata !{i32 24, i32 0, metadata !7875, metadata !7911}
!7911 = metadata !{i32 219, i32 0, metadata !4494, null}
!7912 = metadata !{i32 221, i32 0, metadata !4494, null}
!7913 = metadata !{i32 222, i32 0, metadata !4494, null}
!7914 = metadata !{i32 46, i32 0, metadata !4424, metadata !7913}
!7915 = metadata !{i32 24, i32 0, metadata !7875, metadata !7914}
!7916 = metadata !{i32 47, i32 0, metadata !4424, metadata !7913}
!7917 = metadata !{i32 49, i32 0, metadata !4424, metadata !7913}
!7918 = metadata !{i32 32, i32 0, metadata !7890, metadata !7919}
!7919 = metadata !{i32 52, i32 0, metadata !4424, metadata !7913}
!7920 = metadata !{i32 53, i32 0, metadata !4424, metadata !7913}
!7921 = metadata !{i32 54, i32 0, metadata !4424, metadata !7913}
!7922 = metadata !{i32 24, i32 0, metadata !7875, metadata !7923}
!7923 = metadata !{i32 56, i32 0, metadata !4424, metadata !7913}
!7924 = metadata !{i32 51, i32 0, metadata !4424, metadata !7913}
!7925 = metadata !{i32 223, i32 0, metadata !4494, null}
!7926 = metadata !{i32 46, i32 0, metadata !4424, metadata !7925}
!7927 = metadata !{i32 24, i32 0, metadata !7875, metadata !7926}
!7928 = metadata !{i32 47, i32 0, metadata !4424, metadata !7925}
!7929 = metadata !{i32 49, i32 0, metadata !4424, metadata !7925}
!7930 = metadata !{i32 32, i32 0, metadata !7890, metadata !7931}
!7931 = metadata !{i32 52, i32 0, metadata !4424, metadata !7925}
!7932 = metadata !{i32 53, i32 0, metadata !4424, metadata !7925}
!7933 = metadata !{i32 54, i32 0, metadata !4424, metadata !7925}
!7934 = metadata !{i32 24, i32 0, metadata !7875, metadata !7935}
!7935 = metadata !{i32 56, i32 0, metadata !4424, metadata !7925}
!7936 = metadata !{i32 51, i32 0, metadata !4424, metadata !7925}
!7937 = metadata !{i32 224, i32 0, metadata !4494, null}
!7938 = metadata !{i32 46, i32 0, metadata !4424, metadata !7937}
!7939 = metadata !{i32 24, i32 0, metadata !7875, metadata !7938}
!7940 = metadata !{i32 47, i32 0, metadata !4424, metadata !7937}
!7941 = metadata !{i32 49, i32 0, metadata !4424, metadata !7937}
!7942 = metadata !{i32 32, i32 0, metadata !7890, metadata !7943}
!7943 = metadata !{i32 52, i32 0, metadata !4424, metadata !7937}
!7944 = metadata !{i32 53, i32 0, metadata !4424, metadata !7937}
!7945 = metadata !{i32 54, i32 0, metadata !4424, metadata !7937}
!7946 = metadata !{i32 24, i32 0, metadata !7875, metadata !7947}
!7947 = metadata !{i32 56, i32 0, metadata !4424, metadata !7937}
!7948 = metadata !{i32 51, i32 0, metadata !4424, metadata !7937}
!7949 = metadata !{i32 226, i32 0, metadata !4494, null}
!7950 = metadata !{i32 227, i32 0, metadata !4494, null}
!7951 = metadata !{i32 228, i32 0, metadata !4494, null}
!7952 = metadata !{i32 229, i32 0, metadata !4494, null}
!7953 = metadata !{i32 153, i32 0, metadata !7900, metadata !7952}
!7954 = metadata !{i32 24, i32 0, metadata !7875, metadata !7955}
!7955 = metadata !{i32 154, i32 0, metadata !7900, metadata !7952}
!7956 = metadata !{i32 156, i32 0, metadata !7900, metadata !7952}
!7957 = metadata !{i32 131, i32 0, metadata !7871, metadata !7958}
!7958 = metadata !{i32 234, i32 0, metadata !4442, null}
!7959 = metadata !{i32 134, i32 0, metadata !7871, metadata !7958}
!7960 = metadata !{i32 130, i32 0, metadata !7871, metadata !7958}
!7961 = metadata !{i32 237, i32 0, metadata !4496, null}
!7962 = metadata !{i32 24, i32 0, metadata !7875, metadata !7963}
!7963 = metadata !{i32 238, i32 0, metadata !4496, null}
!7964 = metadata !{i32 240, i32 0, metadata !4496, null}
!7965 = metadata !{i32 241, i32 0, metadata !4496, null}
!7966 = metadata !{i32 46, i32 0, metadata !4424, metadata !7965}
!7967 = metadata !{i32 24, i32 0, metadata !7875, metadata !7966}
!7968 = metadata !{i32 47, i32 0, metadata !4424, metadata !7965}
!7969 = metadata !{i32 49, i32 0, metadata !4424, metadata !7965}
!7970 = metadata !{i32 32, i32 0, metadata !7890, metadata !7971}
!7971 = metadata !{i32 52, i32 0, metadata !4424, metadata !7965}
!7972 = metadata !{i32 53, i32 0, metadata !4424, metadata !7965}
!7973 = metadata !{i32 54, i32 0, metadata !4424, metadata !7965}
!7974 = metadata !{i32 24, i32 0, metadata !7875, metadata !7975}
!7975 = metadata !{i32 56, i32 0, metadata !4424, metadata !7965}
!7976 = metadata !{i32 51, i32 0, metadata !4424, metadata !7965}
!7977 = metadata !{i32 242, i32 0, metadata !4496, null}
!7978 = metadata !{i32 46, i32 0, metadata !4424, metadata !7977}
!7979 = metadata !{i32 24, i32 0, metadata !7875, metadata !7978}
!7980 = metadata !{i32 47, i32 0, metadata !4424, metadata !7977}
!7981 = metadata !{i32 49, i32 0, metadata !4424, metadata !7977}
!7982 = metadata !{i32 32, i32 0, metadata !7890, metadata !7983}
!7983 = metadata !{i32 52, i32 0, metadata !4424, metadata !7977}
!7984 = metadata !{i32 53, i32 0, metadata !4424, metadata !7977}
!7985 = metadata !{i32 54, i32 0, metadata !4424, metadata !7977}
!7986 = metadata !{i32 24, i32 0, metadata !7875, metadata !7987}
!7987 = metadata !{i32 56, i32 0, metadata !4424, metadata !7977}
!7988 = metadata !{i32 51, i32 0, metadata !4424, metadata !7977}
!7989 = metadata !{i32 131, i32 0, metadata !7871, metadata !7990}
!7990 = metadata !{i32 245, i32 0, metadata !4442, null}
!7991 = metadata !{i32 134, i32 0, metadata !7871, metadata !7990}
!7992 = metadata !{i32 130, i32 0, metadata !7871, metadata !7990}
!7993 = metadata !{i32 247, i32 0, metadata !4442, null}
!7994 = metadata !{i32 131, i32 0, metadata !7871, metadata !7995}
!7995 = metadata !{i32 249, i32 0, metadata !4442, null}
!7996 = metadata !{i32 134, i32 0, metadata !7871, metadata !7995}
!7997 = metadata !{i32 130, i32 0, metadata !7871, metadata !7995}
!7998 = metadata !{i32 251, i32 0, metadata !4442, null}
!7999 = metadata !{i32 131, i32 0, metadata !7871, metadata !8000}
!8000 = metadata !{i32 253, i32 0, metadata !4442, null}
!8001 = metadata !{i32 134, i32 0, metadata !7871, metadata !8000}
!8002 = metadata !{i32 130, i32 0, metadata !7871, metadata !8000}
!8003 = metadata !{i32 255, i32 0, metadata !4442, null}
!8004 = metadata !{i32 131, i32 0, metadata !7871, metadata !8005}
!8005 = metadata !{i32 257, i32 0, metadata !4442, null}
!8006 = metadata !{i32 134, i32 0, metadata !7871, metadata !8005}
!8007 = metadata !{i32 130, i32 0, metadata !7871, metadata !8005}
!8008 = metadata !{i32 259, i32 0, metadata !4498, null}
!8009 = metadata !{i32 24, i32 0, metadata !7875, metadata !8010}
!8010 = metadata !{i32 260, i32 0, metadata !4498, null}
!8011 = metadata !{i32 262, i32 0, metadata !4498, null}
!8012 = metadata !{i32 46, i32 0, metadata !4424, metadata !8011}
!8013 = metadata !{i32 24, i32 0, metadata !7875, metadata !8012}
!8014 = metadata !{i32 47, i32 0, metadata !4424, metadata !8011}
!8015 = metadata !{i32 49, i32 0, metadata !4424, metadata !8011}
!8016 = metadata !{i32 32, i32 0, metadata !7890, metadata !8017}
!8017 = metadata !{i32 52, i32 0, metadata !4424, metadata !8011}
!8018 = metadata !{i32 53, i32 0, metadata !4424, metadata !8011}
!8019 = metadata !{i32 54, i32 0, metadata !4424, metadata !8011}
!8020 = metadata !{i32 24, i32 0, metadata !7875, metadata !8021}
!8021 = metadata !{i32 56, i32 0, metadata !4424, metadata !8011}
!8022 = metadata !{i32 51, i32 0, metadata !4424, metadata !8011}
!8023 = metadata !{i32 131, i32 0, metadata !7871, metadata !8024}
!8024 = metadata !{i32 264, i32 0, metadata !4442, null}
!8025 = metadata !{i32 134, i32 0, metadata !7871, metadata !8024}
!8026 = metadata !{i32 130, i32 0, metadata !7871, metadata !8024}
!8027 = metadata !{i32 267, i32 0, metadata !4500, null}
!8028 = metadata !{i32 24, i32 0, metadata !7875, metadata !8029}
!8029 = metadata !{i32 268, i32 0, metadata !4500, null}
!8030 = metadata !{i32 270, i32 0, metadata !4500, null}
!8031 = metadata !{i32 271, i32 0, metadata !4500, null}
!8032 = metadata !{i32 46, i32 0, metadata !4424, metadata !8031}
!8033 = metadata !{i32 24, i32 0, metadata !7875, metadata !8032}
!8034 = metadata !{i32 47, i32 0, metadata !4424, metadata !8031}
!8035 = metadata !{i32 49, i32 0, metadata !4424, metadata !8031}
!8036 = metadata !{i32 32, i32 0, metadata !7890, metadata !8037}
!8037 = metadata !{i32 52, i32 0, metadata !4424, metadata !8031}
!8038 = metadata !{i32 53, i32 0, metadata !4424, metadata !8031}
!8039 = metadata !{i32 54, i32 0, metadata !4424, metadata !8031}
!8040 = metadata !{i32 24, i32 0, metadata !7875, metadata !8041}
!8041 = metadata !{i32 56, i32 0, metadata !4424, metadata !8031}
!8042 = metadata !{i32 51, i32 0, metadata !4424, metadata !8031}
!8043 = metadata !{i32 272, i32 0, metadata !4500, null}
!8044 = metadata !{i32 46, i32 0, metadata !4424, metadata !8043}
!8045 = metadata !{i32 24, i32 0, metadata !7875, metadata !8044}
!8046 = metadata !{i32 47, i32 0, metadata !4424, metadata !8043}
!8047 = metadata !{i32 49, i32 0, metadata !4424, metadata !8043}
!8048 = metadata !{i32 32, i32 0, metadata !7890, metadata !8049}
!8049 = metadata !{i32 52, i32 0, metadata !4424, metadata !8043}
!8050 = metadata !{i32 53, i32 0, metadata !4424, metadata !8043}
!8051 = metadata !{i32 54, i32 0, metadata !4424, metadata !8043}
!8052 = metadata !{i32 24, i32 0, metadata !7875, metadata !8053}
!8053 = metadata !{i32 56, i32 0, metadata !4424, metadata !8043}
!8054 = metadata !{i32 51, i32 0, metadata !4424, metadata !8043}
!8055 = metadata !{i32 131, i32 0, metadata !7871, metadata !8056}
!8056 = metadata !{i32 274, i32 0, metadata !4442, null}
!8057 = metadata !{i32 134, i32 0, metadata !7871, metadata !8056}
!8058 = metadata !{i32 130, i32 0, metadata !7871, metadata !8056}
!8059 = metadata !{i32 277, i32 0, metadata !4502, null}
!8060 = metadata !{i32 24, i32 0, metadata !7875, metadata !8061}
!8061 = metadata !{i32 278, i32 0, metadata !4502, null}
!8062 = metadata !{i32 280, i32 0, metadata !4502, null}
!8063 = metadata !{i32 281, i32 0, metadata !4502, null}
!8064 = metadata !{i32 46, i32 0, metadata !4424, metadata !8063}
!8065 = metadata !{i32 24, i32 0, metadata !7875, metadata !8064}
!8066 = metadata !{i32 47, i32 0, metadata !4424, metadata !8063}
!8067 = metadata !{i32 49, i32 0, metadata !4424, metadata !8063}
!8068 = metadata !{i32 32, i32 0, metadata !7890, metadata !8069}
!8069 = metadata !{i32 52, i32 0, metadata !4424, metadata !8063}
!8070 = metadata !{i32 53, i32 0, metadata !4424, metadata !8063}
!8071 = metadata !{i32 54, i32 0, metadata !4424, metadata !8063}
!8072 = metadata !{i32 24, i32 0, metadata !7875, metadata !8073}
!8073 = metadata !{i32 56, i32 0, metadata !4424, metadata !8063}
!8074 = metadata !{i32 51, i32 0, metadata !4424, metadata !8063}
!8075 = metadata !{i32 282, i32 0, metadata !4502, null}
!8076 = metadata !{i32 46, i32 0, metadata !4424, metadata !8075}
!8077 = metadata !{i32 24, i32 0, metadata !7875, metadata !8076}
!8078 = metadata !{i32 47, i32 0, metadata !4424, metadata !8075}
!8079 = metadata !{i32 49, i32 0, metadata !4424, metadata !8075}
!8080 = metadata !{i32 32, i32 0, metadata !7890, metadata !8081}
!8081 = metadata !{i32 52, i32 0, metadata !4424, metadata !8075}
!8082 = metadata !{i32 53, i32 0, metadata !4424, metadata !8075}
!8083 = metadata !{i32 54, i32 0, metadata !4424, metadata !8075}
!8084 = metadata !{i32 24, i32 0, metadata !7875, metadata !8085}
!8085 = metadata !{i32 56, i32 0, metadata !4424, metadata !8075}
!8086 = metadata !{i32 51, i32 0, metadata !4424, metadata !8075}
!8087 = metadata !{i32 131, i32 0, metadata !7871, metadata !8088}
!8088 = metadata !{i32 284, i32 0, metadata !4442, null}
!8089 = metadata !{i32 134, i32 0, metadata !7871, metadata !8088}
!8090 = metadata !{i32 130, i32 0, metadata !7871, metadata !8088}
!8091 = metadata !{i32 286, i32 0, metadata !4442, null}
!8092 = metadata !{i32 131, i32 0, metadata !7871, metadata !8093}
!8093 = metadata !{i32 288, i32 0, metadata !4442, null}
!8094 = metadata !{i32 134, i32 0, metadata !7871, metadata !8093}
!8095 = metadata !{i32 130, i32 0, metadata !7871, metadata !8093}
!8096 = metadata !{i32 292, i32 0, metadata !4504, null}
!8097 = metadata !{i32 24, i32 0, metadata !7875, metadata !8098}
!8098 = metadata !{i32 293, i32 0, metadata !4504, null}
!8099 = metadata !{i32 294, i32 0, metadata !4504, null}
!8100 = metadata !{i32 24, i32 0, metadata !7875, metadata !8101}
!8101 = metadata !{i32 295, i32 0, metadata !4504, null}
!8102 = metadata !{i32 296, i32 0, metadata !4504, null}
!8103 = metadata !{i32 297, i32 0, metadata !4504, null}
!8104 = metadata !{i32 46, i32 0, metadata !4424, metadata !8103}
!8105 = metadata !{i32 24, i32 0, metadata !7875, metadata !8104}
!8106 = metadata !{i32 47, i32 0, metadata !4424, metadata !8103}
!8107 = metadata !{i32 49, i32 0, metadata !4424, metadata !8103}
!8108 = metadata !{i32 32, i32 0, metadata !7890, metadata !8109}
!8109 = metadata !{i32 52, i32 0, metadata !4424, metadata !8103}
!8110 = metadata !{i32 53, i32 0, metadata !4424, metadata !8103}
!8111 = metadata !{i32 54, i32 0, metadata !4424, metadata !8103}
!8112 = metadata !{i32 24, i32 0, metadata !7875, metadata !8113}
!8113 = metadata !{i32 56, i32 0, metadata !4424, metadata !8103}
!8114 = metadata !{i32 51, i32 0, metadata !4424, metadata !8103}
!8115 = metadata !{i32 298, i32 0, metadata !4504, null}
!8116 = metadata !{i32 130, i32 0, metadata !7871, metadata !8115}
!8117 = metadata !{i32 131, i32 0, metadata !7871, metadata !8115}
!8118 = metadata !{i32 134, i32 0, metadata !7871, metadata !8115}
!8119 = metadata !{i32 300, i32 0, metadata !4504, null}
!8120 = metadata !{i32 24, i32 0, metadata !7875, metadata !8121}
!8121 = metadata !{i32 301, i32 0, metadata !4504, null}
!8122 = metadata !{i32 299, i32 0, metadata !4504, null}
!8123 = metadata !{i32 302, i32 0, metadata !4504, null}
!8124 = metadata !{i32 303, i32 0, metadata !4504, null}
!8125 = metadata !{i32 46, i32 0, metadata !4424, metadata !8124}
!8126 = metadata !{i32 24, i32 0, metadata !7875, metadata !8125}
!8127 = metadata !{i32 47, i32 0, metadata !4424, metadata !8124}
!8128 = metadata !{i32 49, i32 0, metadata !4424, metadata !8124}
!8129 = metadata !{i32 32, i32 0, metadata !7890, metadata !8130}
!8130 = metadata !{i32 52, i32 0, metadata !4424, metadata !8124}
!8131 = metadata !{i32 53, i32 0, metadata !4424, metadata !8124}
!8132 = metadata !{i32 54, i32 0, metadata !4424, metadata !8124}
!8133 = metadata !{i32 24, i32 0, metadata !7875, metadata !8134}
!8134 = metadata !{i32 56, i32 0, metadata !4424, metadata !8124}
!8135 = metadata !{i32 51, i32 0, metadata !4424, metadata !8124}
!8136 = metadata !{i32 304, i32 0, metadata !4504, null}
!8137 = metadata !{i32 46, i32 0, metadata !4424, metadata !8136}
!8138 = metadata !{i32 24, i32 0, metadata !7875, metadata !8137}
!8139 = metadata !{i32 47, i32 0, metadata !4424, metadata !8136}
!8140 = metadata !{i32 49, i32 0, metadata !4424, metadata !8136}
!8141 = metadata !{i32 32, i32 0, metadata !7890, metadata !8142}
!8142 = metadata !{i32 52, i32 0, metadata !4424, metadata !8136}
!8143 = metadata !{i32 53, i32 0, metadata !4424, metadata !8136}
!8144 = metadata !{i32 54, i32 0, metadata !4424, metadata !8136}
!8145 = metadata !{i32 24, i32 0, metadata !7875, metadata !8146}
!8146 = metadata !{i32 56, i32 0, metadata !4424, metadata !8136}
!8147 = metadata !{i32 51, i32 0, metadata !4424, metadata !8136}
!8148 = metadata !{i32 305, i32 0, metadata !4504, null}
!8149 = metadata !{i32 131, i32 0, metadata !7871, metadata !8150}
!8150 = metadata !{i32 307, i32 0, metadata !4504, null}
!8151 = metadata !{i32 134, i32 0, metadata !7871, metadata !8150}
!8152 = metadata !{i32 130, i32 0, metadata !7871, metadata !8150}
!8153 = metadata !{i32 308, i32 0, metadata !4504, null}
!8154 = metadata !{i32 309, i32 0, metadata !4504, null}
!8155 = metadata !{i32 24, i32 0, metadata !7875, metadata !8156}
!8156 = metadata !{i32 310, i32 0, metadata !4504, null}
!8157 = metadata !{i32 311, i32 0, metadata !4504, null}
!8158 = metadata !{i32 312, i32 0, metadata !4504, null}
!8159 = metadata !{i32 313, i32 0, metadata !4504, null}
!8160 = metadata !{i32 315, i32 0, metadata !4504, null}
!8161 = metadata !{i32 131, i32 0, metadata !7871, metadata !8162}
!8162 = metadata !{i32 317, i32 0, metadata !4504, null}
!8163 = metadata !{i32 134, i32 0, metadata !7871, metadata !8162}
!8164 = metadata !{i32 130, i32 0, metadata !7871, metadata !8162}
!8165 = metadata !{i32 318, i32 0, metadata !4504, null}
!8166 = metadata !{i32 319, i32 0, metadata !4504, null}
!8167 = metadata !{i32 24, i32 0, metadata !7875, metadata !8168}
!8168 = metadata !{i32 320, i32 0, metadata !4504, null}
!8169 = metadata !{i32 321, i32 0, metadata !4504, null}
!8170 = metadata !{i32 322, i32 0, metadata !4504, null}
!8171 = metadata !{i32 323, i32 0, metadata !4504, null}
!8172 = metadata !{i32 24, i32 0, metadata !7875, metadata !8173}
!8173 = metadata !{i32 326, i32 0, metadata !4504, null}
!8174 = metadata !{i32 131, i32 0, metadata !7871, metadata !8175}
!8175 = metadata !{i32 329, i32 0, metadata !4442, null}
!8176 = metadata !{i32 134, i32 0, metadata !7871, metadata !8175}
!8177 = metadata !{i32 130, i32 0, metadata !7871, metadata !8175}
!8178 = metadata !{i32 333, i32 0, metadata !4507, null}
!8179 = metadata !{i32 24, i32 0, metadata !7875, metadata !8180}
!8180 = metadata !{i32 334, i32 0, metadata !4507, null}
!8181 = metadata !{i32 335, i32 0, metadata !4507, null}
!8182 = metadata !{i32 24, i32 0, metadata !7875, metadata !8183}
!8183 = metadata !{i32 336, i32 0, metadata !4507, null}
!8184 = metadata !{i32 337, i32 0, metadata !4507, null}
!8185 = metadata !{i32 338, i32 0, metadata !4507, null}
!8186 = metadata !{i32 46, i32 0, metadata !4424, metadata !8185}
!8187 = metadata !{i32 24, i32 0, metadata !7875, metadata !8186}
!8188 = metadata !{i32 47, i32 0, metadata !4424, metadata !8185}
!8189 = metadata !{i32 49, i32 0, metadata !4424, metadata !8185}
!8190 = metadata !{i32 32, i32 0, metadata !7890, metadata !8191}
!8191 = metadata !{i32 52, i32 0, metadata !4424, metadata !8185}
!8192 = metadata !{i32 53, i32 0, metadata !4424, metadata !8185}
!8193 = metadata !{i32 54, i32 0, metadata !4424, metadata !8185}
!8194 = metadata !{i32 24, i32 0, metadata !7875, metadata !8195}
!8195 = metadata !{i32 56, i32 0, metadata !4424, metadata !8185}
!8196 = metadata !{i32 51, i32 0, metadata !4424, metadata !8185}
!8197 = metadata !{i32 339, i32 0, metadata !4507, null}
!8198 = metadata !{i32 130, i32 0, metadata !7871, metadata !8197}
!8199 = metadata !{i32 131, i32 0, metadata !7871, metadata !8197}
!8200 = metadata !{i32 134, i32 0, metadata !7871, metadata !8197}
!8201 = metadata !{i32 341, i32 0, metadata !4507, null}
!8202 = metadata !{i32 24, i32 0, metadata !7875, metadata !8203}
!8203 = metadata !{i32 342, i32 0, metadata !4507, null}
!8204 = metadata !{i32 340, i32 0, metadata !4507, null}
!8205 = metadata !{i32 343, i32 0, metadata !4507, null}
!8206 = metadata !{i32 344, i32 0, metadata !4507, null}
!8207 = metadata !{i32 46, i32 0, metadata !4424, metadata !8206}
!8208 = metadata !{i32 24, i32 0, metadata !7875, metadata !8207}
!8209 = metadata !{i32 47, i32 0, metadata !4424, metadata !8206}
!8210 = metadata !{i32 49, i32 0, metadata !4424, metadata !8206}
!8211 = metadata !{i32 32, i32 0, metadata !7890, metadata !8212}
!8212 = metadata !{i32 52, i32 0, metadata !4424, metadata !8206}
!8213 = metadata !{i32 53, i32 0, metadata !4424, metadata !8206}
!8214 = metadata !{i32 54, i32 0, metadata !4424, metadata !8206}
!8215 = metadata !{i32 24, i32 0, metadata !7875, metadata !8216}
!8216 = metadata !{i32 56, i32 0, metadata !4424, metadata !8206}
!8217 = metadata !{i32 51, i32 0, metadata !4424, metadata !8206}
!8218 = metadata !{i32 345, i32 0, metadata !4507, null}
!8219 = metadata !{i32 46, i32 0, metadata !4424, metadata !8218}
!8220 = metadata !{i32 24, i32 0, metadata !7875, metadata !8219}
!8221 = metadata !{i32 47, i32 0, metadata !4424, metadata !8218}
!8222 = metadata !{i32 49, i32 0, metadata !4424, metadata !8218}
!8223 = metadata !{i32 32, i32 0, metadata !7890, metadata !8224}
!8224 = metadata !{i32 52, i32 0, metadata !4424, metadata !8218}
!8225 = metadata !{i32 53, i32 0, metadata !4424, metadata !8218}
!8226 = metadata !{i32 54, i32 0, metadata !4424, metadata !8218}
!8227 = metadata !{i32 24, i32 0, metadata !7875, metadata !8228}
!8228 = metadata !{i32 56, i32 0, metadata !4424, metadata !8218}
!8229 = metadata !{i32 51, i32 0, metadata !4424, metadata !8218}
!8230 = metadata !{i32 346, i32 0, metadata !4507, null}
!8231 = metadata !{i32 131, i32 0, metadata !7871, metadata !8232}
!8232 = metadata !{i32 348, i32 0, metadata !4507, null}
!8233 = metadata !{i32 134, i32 0, metadata !7871, metadata !8232}
!8234 = metadata !{i32 130, i32 0, metadata !7871, metadata !8232}
!8235 = metadata !{i32 349, i32 0, metadata !4507, null}
!8236 = metadata !{i32 350, i32 0, metadata !4507, null}
!8237 = metadata !{i32 24, i32 0, metadata !7875, metadata !8238}
!8238 = metadata !{i32 351, i32 0, metadata !4507, null}
!8239 = metadata !{i32 352, i32 0, metadata !4507, null}
!8240 = metadata !{i32 353, i32 0, metadata !4507, null}
!8241 = metadata !{i32 354, i32 0, metadata !4507, null}
!8242 = metadata !{i32 356, i32 0, metadata !4507, null}
!8243 = metadata !{i32 131, i32 0, metadata !7871, metadata !8244}
!8244 = metadata !{i32 358, i32 0, metadata !4507, null}
!8245 = metadata !{i32 134, i32 0, metadata !7871, metadata !8244}
!8246 = metadata !{i32 130, i32 0, metadata !7871, metadata !8244}
!8247 = metadata !{i32 359, i32 0, metadata !4507, null}
!8248 = metadata !{i32 360, i32 0, metadata !4507, null}
!8249 = metadata !{i32 24, i32 0, metadata !7875, metadata !8250}
!8250 = metadata !{i32 361, i32 0, metadata !4507, null}
!8251 = metadata !{i32 362, i32 0, metadata !4507, null}
!8252 = metadata !{i32 363, i32 0, metadata !4507, null}
!8253 = metadata !{i32 364, i32 0, metadata !4507, null}
!8254 = metadata !{i32 24, i32 0, metadata !7875, metadata !8255}
!8255 = metadata !{i32 367, i32 0, metadata !4507, null}
!8256 = metadata !{i32 153, i32 0, metadata !7900, metadata !8257}
!8257 = metadata !{i32 372, i32 0, metadata !4442, null}
!8258 = metadata !{i32 24, i32 0, metadata !7875, metadata !8259}
!8259 = metadata !{i32 154, i32 0, metadata !7900, metadata !8257}
!8260 = metadata !{i32 156, i32 0, metadata !7900, metadata !8257}
!8261 = metadata !{i32 157, i32 0, metadata !7900, metadata !8257}
!8262 = metadata !{i32 202, i32 0, metadata !4442, null}
!8263 = metadata !{i32 376, i32 0, metadata !4442, null}
!8264 = metadata !{i32 377, i32 0, metadata !4442, null}
!8265 = metadata !{i32 378, i32 0, metadata !4442, null}
!8266 = metadata !{i32 379, i32 0, metadata !4442, null}
!8267 = metadata !{i32 381, i32 0, metadata !4442, null}
!8268 = metadata !{i32 382, i32 0, metadata !4442, null}
!8269 = metadata !{i32 384, i32 0, metadata !4442, null}
!8270 = metadata !{i32 392, i32 0, metadata !4442, null}
!8271 = metadata !{i32 141, i32 0, metadata !4418, null}
!8272 = metadata !{i32 142, i32 0, metadata !4418, null}
!8273 = metadata !{i32 143, i32 0, metadata !4418, null}
!8274 = metadata !{i32 145, i32 0, metadata !4418, null}
!8275 = metadata !{i32 146, i32 0, metadata !4418, null}
!8276 = metadata !{i32 126, i32 0, metadata !8277, metadata !8275}
!8277 = metadata !{i32 589835, metadata !2987, i32 124, i32 0, metadata !2979, i32 2} ; [ DW_TAG_lexical_block ]
!8278 = metadata !{i32 148, i32 0, metadata !4418, null}
!8279 = metadata !{i32 149, i32 0, metadata !4418, null}
!8280 = metadata !{i32 66, i32 0, metadata !4430, null}
!8281 = metadata !{i32 70, i32 0, metadata !4430, null}
!8282 = metadata !{i32 72, i32 0, metadata !4430, null}
!8283 = metadata !{i32 73, i32 0, metadata !4430, null}
!8284 = metadata !{i32 75, i32 0, metadata !4433, null}
!8285 = metadata !{i32 76, i32 0, metadata !4433, null}
!8286 = metadata !{i32 77, i32 0, metadata !4433, null}
!8287 = metadata !{i32 78, i32 0, metadata !4433, null}
!8288 = metadata !{i32 79, i32 0, metadata !4433, null}
!8289 = metadata !{i32 80, i32 0, metadata !4433, null}
!8290 = metadata !{i32 81, i32 0, metadata !4433, null}
!8291 = metadata !{i32 82, i32 0, metadata !4433, null}
!8292 = metadata !{i32 28, i32 0, metadata !8293, metadata !8294}
!8293 = metadata !{i32 589835, metadata !2978, i32 27, i32 0, metadata !2979, i32 0} ; [ DW_TAG_lexical_block ]
!8294 = metadata !{i32 91, i32 0, metadata !4433, null}
!8295 = metadata !{i32 92, i32 0, metadata !4433, null}
!8296 = metadata !{i32 28, i32 0, metadata !8293, metadata !8295}
!8297 = metadata !{i32 93, i32 0, metadata !4433, null}
!8298 = metadata !{i32 94, i32 0, metadata !4433, null}
!8299 = metadata !{i32 28, i32 0, metadata !8293, metadata !8298}
!8300 = metadata !{i32 95, i32 0, metadata !4433, null}
!8301 = metadata !{i32 96, i32 0, metadata !4433, null}
!8302 = metadata !{i32 99, i32 0, metadata !4433, null}
!8303 = metadata !{i32 102, i32 0, metadata !4433, null}
!8304 = metadata !{i32 105, i32 0, metadata !4433, null}
!8305 = metadata !{i32 32, i32 0, metadata !7890, metadata !8304}
!8306 = metadata !{i32 106, i32 0, metadata !4433, null}
!8307 = metadata !{i32 107, i32 0, metadata !4433, null}
!8308 = metadata !{i32 32, i32 0, metadata !7890, metadata !8307}
!8309 = metadata !{i32 108, i32 0, metadata !4433, null}
!8310 = metadata !{i32 109, i32 0, metadata !4433, null}
!8311 = metadata !{i32 112, i32 0, metadata !4433, null}
!8312 = metadata !{i32 24, i32 0, metadata !7875, metadata !8313}
!8313 = metadata !{i32 115, i32 0, metadata !4433, null}
!8314 = metadata !{i32 68, i32 0, metadata !4430, null}
!8315 = metadata !{i32 120, i32 0, metadata !4430, null}
!8316 = metadata !{i32 23, i32 0, metadata !8317, null}
!8317 = metadata !{i32 589835, metadata !3045, i32 22, i32 0, metadata !3019, i32 8} ; [ DW_TAG_lexical_block ]
!8318 = metadata !{i32 24, i32 0, metadata !8317, null}
!8319 = metadata !{i32 25, i32 0, metadata !8317, null}
!8320 = metadata !{i32 63, i32 0, metadata !8321, null}
!8321 = metadata !{i32 589835, metadata !3018, i32 62, i32 0, metadata !3019, i32 0} ; [ DW_TAG_lexical_block ]
!8322 = metadata !{i32 64, i32 0, metadata !8321, null}
!8323 = metadata !{i32 65, i32 0, metadata !8321, null}
!8324 = metadata !{i32 63, i32 0, metadata !8321, metadata !8325}
!8325 = metadata !{i32 69, i32 0, metadata !8326, null}
!8326 = metadata !{i32 589835, metadata !3026, i32 68, i32 0, metadata !3019, i32 1} ; [ DW_TAG_lexical_block ]
!8327 = metadata !{i32 64, i32 0, metadata !8321, metadata !8325}
!8328 = metadata !{i32 60, i32 0, metadata !3027, null}
!8329 = metadata !{i32 60, i32 0, metadata !8330, null}
!8330 = metadata !{i32 589835, metadata !3027, i32 60, i32 0, metadata !3019, i32 2} ; [ DW_TAG_lexical_block ]
!8331 = metadata !{i32 59, i32 0, metadata !3036, null}
!8332 = metadata !{i32 59, i32 0, metadata !8333, null}
!8333 = metadata !{i32 589835, metadata !3036, i32 59, i32 0, metadata !3019, i32 3} ; [ DW_TAG_lexical_block ]
!8334 = metadata !{i32 58, i32 0, metadata !3039, null}
!8335 = metadata !{i32 58, i32 0, metadata !8336, null}
!8336 = metadata !{i32 589835, metadata !3039, i32 58, i32 0, metadata !3019, i32 4} ; [ DW_TAG_lexical_block ]
!8337 = metadata !{i32 57, i32 0, metadata !3040, null}
!8338 = metadata !{i32 57, i32 0, metadata !8339, null}
!8339 = metadata !{i32 589835, metadata !3040, i32 57, i32 0, metadata !3019, i32 5} ; [ DW_TAG_lexical_block ]
!8340 = metadata !{i32 56, i32 0, metadata !3043, null}
!8341 = metadata !{i32 56, i32 0, metadata !8342, null}
!8342 = metadata !{i32 589835, metadata !3043, i32 56, i32 0, metadata !3019, i32 6} ; [ DW_TAG_lexical_block ]
!8343 = metadata !{i32 55, i32 0, metadata !3044, null}
!8344 = metadata !{i32 55, i32 0, metadata !8345, null}
!8345 = metadata !{i32 589835, metadata !3044, i32 55, i32 0, metadata !3019, i32 7} ; [ DW_TAG_lexical_block ]
!8346 = metadata !{i32 35, i32 0, metadata !8347, null}
!8347 = metadata !{i32 589835, metadata !3048, i32 34, i32 0, metadata !3019, i32 9} ; [ DW_TAG_lexical_block ]
!8348 = metadata !{i32 30, i32 0, metadata !8349, null}
!8349 = metadata !{i32 589835, metadata !3071, i32 29, i32 0, metadata !3019, i32 10} ; [ DW_TAG_lexical_block ]
!8350 = metadata !{i32 31, i32 0, metadata !8349, null}
!8351 = metadata !{i32 156, i32 0, metadata !4530, null}
!8352 = metadata !{i32 157, i32 0, metadata !4529, null}
!8353 = metadata !{i32 158, i32 0, metadata !4529, null}
!8354 = metadata !{i32 159, i32 0, metadata !4529, null}
!8355 = metadata !{i32 204, i32 0, metadata !4533, null}
!8356 = metadata !{i32 205, i32 0, metadata !4533, null}
!8357 = metadata !{i32 206, i32 0, metadata !4533, null}
!8358 = metadata !{i32 156, i32 0, metadata !4530, metadata !8359}
!8359 = metadata !{i32 2484, i32 0, metadata !4545, null}
!8360 = metadata !{i32 157, i32 0, metadata !4529, metadata !8359}
!8361 = metadata !{i32 158, i32 0, metadata !4529, metadata !8359}
!8362 = metadata !{i32 159, i32 0, metadata !4529, metadata !8359}
!8363 = metadata !{i32 156, i32 0, metadata !4530, metadata !8364}
!8364 = metadata !{i32 2485, i32 0, metadata !4545, null}
!8365 = metadata !{i32 157, i32 0, metadata !4529, metadata !8364}
!8366 = metadata !{i32 158, i32 0, metadata !4529, metadata !8364}
!8367 = metadata !{i32 159, i32 0, metadata !4529, metadata !8364}
!8368 = metadata !{i32 2487, i32 0, metadata !4545, null}
!8369 = metadata !{i32 2488, i32 0, metadata !4545, null}
!8370 = metadata !{i32 2489, i32 0, metadata !4545, null}
!8371 = metadata !{i32 2491, i32 0, metadata !4548, null}
!8372 = metadata !{i32 2492, i32 0, metadata !4548, null}
!8373 = metadata !{i32 2493, i32 0, metadata !4548, null}
!8374 = metadata !{i32 2500, i32 0, metadata !8375, null}
!8375 = metadata !{i32 589835, metadata !3181, i32 2499, i32 0, metadata !3075, i32 6} ; [ DW_TAG_lexical_block ]
!8376 = metadata !{i32 156, i32 0, metadata !4530, metadata !8377}
!8377 = metadata !{i32 1716, i32 0, metadata !4555, null}
!8378 = metadata !{i32 157, i32 0, metadata !4529, metadata !8377}
!8379 = metadata !{i32 158, i32 0, metadata !4529, metadata !8377}
!8380 = metadata !{i32 1718, i32 0, metadata !4555, null}
!8381 = metadata !{i32 1719, i32 0, metadata !4555, null}
!8382 = metadata !{i32 1720, i32 0, metadata !4555, null}
!8383 = metadata !{i32 1721, i32 0, metadata !4555, null}
!8384 = metadata !{i32 1724, i32 0, metadata !4557, null}
!8385 = metadata !{i32 1725, i32 0, metadata !4557, null}
!8386 = metadata !{i32 1726, i32 0, metadata !4557, null}
!8387 = metadata !{i32 2076, i32 0, metadata !8388, null}
!8388 = metadata !{i32 589835, metadata !3185, i32 2075, i32 0, metadata !3075, i32 9} ; [ DW_TAG_lexical_block ]
!8389 = metadata !{i32 2077, i32 0, metadata !8388, null}
!8390 = metadata !{i32 2078, i32 0, metadata !8388, null}
!8391 = metadata !{i32 2081, i32 0, metadata !8388, null}
!8392 = metadata !{i32 2085, i32 0, metadata !8388, null}
!8393 = metadata !{i32 2086, i32 0, metadata !8388, null}
!8394 = metadata !{i32 2087, i32 0, metadata !8388, null}
!8395 = metadata !{i32 156, i32 0, metadata !4530, metadata !8396}
!8396 = metadata !{i32 1696, i32 0, metadata !4562, null}
!8397 = metadata !{i32 157, i32 0, metadata !4529, metadata !8396}
!8398 = metadata !{i32 158, i32 0, metadata !4529, metadata !8396}
!8399 = metadata !{i32 1698, i32 0, metadata !4562, null}
!8400 = metadata !{i32 1699, i32 0, metadata !4562, null}
!8401 = metadata !{i32 1700, i32 0, metadata !4562, null}
!8402 = metadata !{i32 1703, i32 0, metadata !4562, null}
!8403 = metadata !{i32 1704, i32 0, metadata !4562, null}
!8404 = metadata !{i32 1705, i32 0, metadata !4562, null}
!8405 = metadata !{i32 1706, i32 0, metadata !4562, null}
!8406 = metadata !{i32 1708, i32 0, metadata !4564, null}
!8407 = metadata !{i32 1709, i32 0, metadata !4564, null}
!8408 = metadata !{i32 1710, i32 0, metadata !4564, null}
!8409 = metadata !{i32 156, i32 0, metadata !4530, metadata !8410}
!8410 = metadata !{i32 1612, i32 0, metadata !4568, null}
!8411 = metadata !{i32 157, i32 0, metadata !4529, metadata !8410}
!8412 = metadata !{i32 158, i32 0, metadata !4529, metadata !8410}
!8413 = metadata !{i32 1627, i32 0, metadata !4568, null}
!8414 = metadata !{i32 1628, i32 0, metadata !4568, null}
!8415 = metadata !{i32 1629, i32 0, metadata !4568, null}
!8416 = metadata !{i32 1632, i32 0, metadata !4568, null}
!8417 = metadata !{i32 1636, i32 0, metadata !4568, null}
!8418 = metadata !{i32 1637, i32 0, metadata !4568, null}
!8419 = metadata !{i32 1638, i32 0, metadata !4568, null}
!8420 = metadata !{i32 1641, i32 0, metadata !4568, null}
!8421 = metadata !{i32 1642, i32 0, metadata !4568, null}
!8422 = metadata !{i32 1645, i32 0, metadata !4582, null}
!8423 = metadata !{i32 1650, i32 0, metadata !4568, null}
!8424 = metadata !{i32 1651, i32 0, metadata !4568, null}
!8425 = metadata !{i32 1652, i32 0, metadata !4568, null}
!8426 = metadata !{i32 1666, i32 0, metadata !4568, null}
!8427 = metadata !{i32 1667, i32 0, metadata !4568, null}
!8428 = metadata !{i32 1668, i32 0, metadata !4568, null}
!8429 = metadata !{i32 1671, i32 0, metadata !4584, null}
!8430 = metadata !{i32 1672, i32 0, metadata !4584, null}
!8431 = metadata !{i32 1673, i32 0, metadata !4584, null}
!8432 = metadata !{i32 156, i32 0, metadata !4530, metadata !8433}
!8433 = metadata !{i32 1170, i32 0, metadata !4588, null}
!8434 = metadata !{i32 157, i32 0, metadata !4529, metadata !8433}
!8435 = metadata !{i32 158, i32 0, metadata !4529, metadata !8433}
!8436 = metadata !{i32 1171, i32 0, metadata !4588, null}
!8437 = metadata !{i32 1172, i32 0, metadata !4588, null}
!8438 = metadata !{i32 1173, i32 0, metadata !4588, null}
!8439 = metadata !{i32 1174, i32 0, metadata !4588, null}
!8440 = metadata !{i32 1177, i32 0, metadata !4588, null}
!8441 = metadata !{i32 1178, i32 0, metadata !4588, null}
!8442 = metadata !{i32 1183, i32 0, metadata !4588, null}
!8443 = metadata !{i32 1184, i32 0, metadata !4588, null}
!8444 = metadata !{i32 1185, i32 0, metadata !4588, null}
!8445 = metadata !{i32 156, i32 0, metadata !4530, metadata !8446}
!8446 = metadata !{i32 997, i32 0, metadata !4597, null}
!8447 = metadata !{i32 157, i32 0, metadata !4529, metadata !8446}
!8448 = metadata !{i32 158, i32 0, metadata !4529, metadata !8446}
!8449 = metadata !{i32 999, i32 0, metadata !4597, null}
!8450 = metadata !{i32 1000, i32 0, metadata !4597, null}
!8451 = metadata !{i32 1001, i32 0, metadata !4597, null}
!8452 = metadata !{i32 1004, i32 0, metadata !4597, null}
!8453 = metadata !{i32 978, i32 0, metadata !8454, metadata !8455}
!8454 = metadata !{i32 589835, metadata !3226, i32 977, i32 0, metadata !3075, i32 16} ; [ DW_TAG_lexical_block ]
!8455 = metadata !{i32 1005, i32 0, metadata !4597, null}
!8456 = metadata !{i32 979, i32 0, metadata !8454, metadata !8455}
!8457 = metadata !{i32 1007, i32 0, metadata !4599, null}
!8458 = metadata !{i32 1008, i32 0, metadata !4599, null}
!8459 = metadata !{i32 1009, i32 0, metadata !4599, null}
!8460 = metadata !{i32 156, i32 0, metadata !4530, metadata !8461}
!8461 = metadata !{i32 812, i32 0, metadata !4602, null}
!8462 = metadata !{i32 157, i32 0, metadata !4529, metadata !8461}
!8463 = metadata !{i32 158, i32 0, metadata !4529, metadata !8461}
!8464 = metadata !{i32 814, i32 0, metadata !4602, null}
!8465 = metadata !{i32 815, i32 0, metadata !4602, null}
!8466 = metadata !{i32 816, i32 0, metadata !4602, null}
!8467 = metadata !{i32 819, i32 0, metadata !4602, null}
!8468 = metadata !{i32 820, i32 0, metadata !4602, null}
!8469 = metadata !{i32 821, i32 0, metadata !4602, null}
!8470 = metadata !{i32 822, i32 0, metadata !4602, null}
!8471 = metadata !{i32 824, i32 0, metadata !4604, null}
!8472 = metadata !{i32 825, i32 0, metadata !4604, null}
!8473 = metadata !{i32 826, i32 0, metadata !4604, null}
!8474 = metadata !{i32 156, i32 0, metadata !4530, metadata !8475}
!8475 = metadata !{i32 2304, i32 0, metadata !4608, null}
!8476 = metadata !{i32 157, i32 0, metadata !4529, metadata !8475}
!8477 = metadata !{i32 158, i32 0, metadata !4529, metadata !8475}
!8478 = metadata !{i32 2312, i32 0, metadata !4608, null}
!8479 = metadata !{i32 2313, i32 0, metadata !4608, null}
!8480 = metadata !{i32 2314, i32 0, metadata !4608, null}
!8481 = metadata !{i32 2317, i32 0, metadata !4608, null}
!8482 = metadata !{i32 2318, i32 0, metadata !4608, null}
!8483 = metadata !{i32 2319, i32 0, metadata !4608, null}
!8484 = metadata !{i32 2321, i32 0, metadata !4608, null}
!8485 = metadata !{i32 2322, i32 0, metadata !4612, null}
!8486 = metadata !{i32 2324, i32 0, metadata !4612, null}
!8487 = metadata !{i32 2328, i32 0, metadata !4614, null}
!8488 = metadata !{i32 2331, i32 0, metadata !4614, null}
!8489 = metadata !{i32 2334, i32 0, metadata !4614, null}
!8490 = metadata !{i32 2335, i32 0, metadata !4614, null}
!8491 = metadata !{i32 2336, i32 0, metadata !4614, null}
!8492 = metadata !{i32 2337, i32 0, metadata !4614, null}
!8493 = metadata !{i32 2338, i32 0, metadata !4614, null}
!8494 = metadata !{i32 2339, i32 0, metadata !4614, null}
!8495 = metadata !{i32 2340, i32 0, metadata !4614, null}
!8496 = metadata !{i32 2341, i32 0, metadata !4614, null}
!8497 = metadata !{i32 2342, i32 0, metadata !4614, null}
!8498 = metadata !{i32 2343, i32 0, metadata !4614, null}
!8499 = metadata !{i32 2344, i32 0, metadata !4614, null}
!8500 = metadata !{i32 2345, i32 0, metadata !4614, null}
!8501 = metadata !{i32 2346, i32 0, metadata !4614, null}
!8502 = metadata !{i32 2347, i32 0, metadata !4614, null}
!8503 = metadata !{i32 2348, i32 0, metadata !4614, null}
!8504 = metadata !{i32 2349, i32 0, metadata !4614, null}
!8505 = metadata !{i32 2350, i32 0, metadata !4614, null}
!8506 = metadata !{i32 2351, i32 0, metadata !4614, null}
!8507 = metadata !{i32 2352, i32 0, metadata !4614, null}
!8508 = metadata !{i32 2353, i32 0, metadata !4614, null}
!8509 = metadata !{i32 2354, i32 0, metadata !4614, null}
!8510 = metadata !{i32 2355, i32 0, metadata !4614, null}
!8511 = metadata !{i32 2356, i32 0, metadata !4614, null}
!8512 = metadata !{i32 2357, i32 0, metadata !4614, null}
!8513 = metadata !{i32 2358, i32 0, metadata !4614, null}
!8514 = metadata !{i32 2360, i32 0, metadata !4614, null}
!8515 = metadata !{i32 2361, i32 0, metadata !4614, null}
!8516 = metadata !{i32 2366, i32 0, metadata !4612, null}
!8517 = metadata !{i32 2367, i32 0, metadata !4612, null}
!8518 = metadata !{i32 2370, i32 0, metadata !4612, null}
!8519 = metadata !{i32 2371, i32 0, metadata !4612, null}
!8520 = metadata !{i32 2376, i32 0, metadata !4612, null}
!8521 = metadata !{i32 2377, i32 0, metadata !4612, null}
!8522 = metadata !{i32 2380, i32 0, metadata !4612, null}
!8523 = metadata !{i32 2381, i32 0, metadata !4612, null}
!8524 = metadata !{i32 2386, i32 0, metadata !4612, null}
!8525 = metadata !{i32 2387, i32 0, metadata !4612, null}
!8526 = metadata !{i32 2390, i32 0, metadata !4612, null}
!8527 = metadata !{i32 2391, i32 0, metadata !4612, null}
!8528 = metadata !{i32 2396, i32 0, metadata !4632, null}
!8529 = metadata !{i32 2397, i32 0, metadata !4632, null}
!8530 = metadata !{i32 2398, i32 0, metadata !4632, null}
!8531 = metadata !{i32 2399, i32 0, metadata !4632, null}
!8532 = metadata !{i32 2402, i32 0, metadata !4632, null}
!8533 = metadata !{i32 2403, i32 0, metadata !4632, null}
!8534 = metadata !{i32 2408, i32 0, metadata !4612, null}
!8535 = metadata !{i32 2409, i32 0, metadata !4612, null}
!8536 = metadata !{i32 2410, i32 0, metadata !4612, null}
!8537 = metadata !{i32 2411, i32 0, metadata !4612, null}
!8538 = metadata !{i32 2413, i32 0, metadata !4612, null}
!8539 = metadata !{i32 2414, i32 0, metadata !4612, null}
!8540 = metadata !{i32 2418, i32 0, metadata !4642, null}
!8541 = metadata !{i32 2419, i32 0, metadata !4642, null}
!8542 = metadata !{i32 2420, i32 0, metadata !4642, null}
!8543 = metadata !{i32 2421, i32 0, metadata !4642, null}
!8544 = metadata !{i32 2422, i32 0, metadata !4642, null}
!8545 = metadata !{i32 2426, i32 0, metadata !4642, null}
!8546 = metadata !{i32 2428, i32 0, metadata !4642, null}
!8547 = metadata !{i32 2429, i32 0, metadata !4642, null}
!8548 = metadata !{i32 2433, i32 0, metadata !4612, null}
!8549 = metadata !{i32 2434, i32 0, metadata !4612, null}
!8550 = metadata !{i32 2435, i32 0, metadata !4612, null}
!8551 = metadata !{i32 2439, i32 0, metadata !4644, null}
!8552 = metadata !{i32 2440, i32 0, metadata !4644, null}
!8553 = metadata !{i32 2447, i32 0, metadata !4685, null}
!8554 = metadata !{i32 2451, i32 0, metadata !4689, null}
!8555 = metadata !{i32 2453, i32 0, metadata !4689, null}
!8556 = metadata !{i32 2459, i32 0, metadata !4691, null}
!8557 = metadata !{i32 2465, i32 0, metadata !4699, null}
!8558 = metadata !{i32 2470, i32 0, metadata !4612, null}
!8559 = metadata !{i32 2471, i32 0, metadata !4612, null}
!8560 = metadata !{i32 2472, i32 0, metadata !4612, null}
!8561 = metadata !{i32 2475, i32 0, metadata !4717, null}
!8562 = metadata !{i32 2476, i32 0, metadata !4717, null}
!8563 = metadata !{i32 2477, i32 0, metadata !4717, null}
!8564 = metadata !{i32 2150, i32 0, metadata !8565, null}
!8565 = metadata !{i32 589835, metadata !3238, i32 2149, i32 0, metadata !3075, i32 32} ; [ DW_TAG_lexical_block ]
!8566 = metadata !{i32 2151, i32 0, metadata !8565, null}
!8567 = metadata !{i32 2130, i32 0, metadata !4721, null}
!8568 = metadata !{i32 2131, i32 0, metadata !4721, null}
!8569 = metadata !{i32 2133, i32 0, metadata !4721, null}
!8570 = metadata !{i32 2134, i32 0, metadata !4721, null}
!8571 = metadata !{i32 2135, i32 0, metadata !4721, null}
!8572 = metadata !{i32 2138, i32 0, metadata !4721, null}
!8573 = metadata !{i32 2141, i32 0, metadata !4721, null}
!8574 = metadata !{i32 2142, i32 0, metadata !4721, null}
!8575 = metadata !{i32 2143, i32 0, metadata !4721, null}
!8576 = metadata !{i32 2145, i32 0, metadata !4721, null}
!8577 = metadata !{i32 1885, i32 0, metadata !4728, null}
!8578 = metadata !{i32 1889, i32 0, metadata !4728, null}
!8579 = metadata !{i32 1886, i32 0, metadata !4728, null}
!8580 = metadata !{i32 1887, i32 0, metadata !4728, null}
!8581 = metadata !{i32 1892, i32 0, metadata !4728, null}
!8582 = metadata !{i32 1896, i32 0, metadata !4728, null}
!8583 = metadata !{i32 1893, i32 0, metadata !4728, null}
!8584 = metadata !{i32 1894, i32 0, metadata !4728, null}
!8585 = metadata !{i32 1899, i32 0, metadata !4728, null}
!8586 = metadata !{i32 1903, i32 0, metadata !4728, null}
!8587 = metadata !{i32 1900, i32 0, metadata !4728, null}
!8588 = metadata !{i32 1901, i32 0, metadata !4728, null}
!8589 = metadata !{i32 1906, i32 0, metadata !4728, null}
!8590 = metadata !{i32 1907, i32 0, metadata !4728, null}
!8591 = metadata !{i32 1908, i32 0, metadata !4728, null}
!8592 = metadata !{i32 1911, i32 0, metadata !4728, null}
!8593 = metadata !{i32 1912, i32 0, metadata !4728, null}
!8594 = metadata !{i32 156, i32 0, metadata !4530, metadata !8595}
!8595 = metadata !{i32 1913, i32 0, metadata !4738, null}
!8596 = metadata !{i32 158, i32 0, metadata !4529, metadata !8595}
!8597 = metadata !{i32 1914, i32 0, metadata !4738, null}
!8598 = metadata !{i32 1915, i32 0, metadata !4738, null}
!8599 = metadata !{i32 1916, i32 0, metadata !4738, null}
!8600 = metadata !{i32 1917, i32 0, metadata !4738, null}
!8601 = metadata !{i32 1920, i32 0, metadata !4740, null}
!8602 = metadata !{i32 1923, i32 0, metadata !4740, null}
!8603 = metadata !{i32 1925, i32 0, metadata !4740, null}
!8604 = metadata !{i32 1926, i32 0, metadata !4740, null}
!8605 = metadata !{i32 1927, i32 0, metadata !4740, null}
!8606 = metadata !{i32 1928, i32 0, metadata !4740, null}
!8607 = metadata !{i32 1931, i32 0, metadata !4740, null}
!8608 = metadata !{i32 1933, i32 0, metadata !4740, null}
!8609 = metadata !{i32 1936, i32 0, metadata !4740, null}
!8610 = metadata !{i32 1941, i32 0, metadata !4738, null}
!8611 = metadata !{i32 1942, i32 0, metadata !4738, null}
!8612 = metadata !{i32 1943, i32 0, metadata !4738, null}
!8613 = metadata !{i32 1944, i32 0, metadata !4738, null}
!8614 = metadata !{i32 1949, i32 0, metadata !4728, null}
!8615 = metadata !{i32 1952, i32 0, metadata !4742, null}
!8616 = metadata !{i32 1954, i32 0, metadata !4742, null}
!8617 = metadata !{i32 1956, i32 0, metadata !4742, null}
!8618 = metadata !{i32 1959, i32 0, metadata !4742, null}
!8619 = metadata !{i32 1960, i32 0, metadata !4742, null}
!8620 = metadata !{i32 1961, i32 0, metadata !4742, null}
!8621 = metadata !{i32 1964, i32 0, metadata !4742, null}
!8622 = metadata !{i32 1967, i32 0, metadata !4742, null}
!8623 = metadata !{i32 156, i32 0, metadata !4530, metadata !8624}
!8624 = metadata !{i32 1968, i32 0, metadata !4745, null}
!8625 = metadata !{i32 158, i32 0, metadata !4529, metadata !8624}
!8626 = metadata !{i32 1969, i32 0, metadata !4745, null}
!8627 = metadata !{i32 1970, i32 0, metadata !4745, null}
!8628 = metadata !{i32 1971, i32 0, metadata !4745, null}
!8629 = metadata !{i32 1972, i32 0, metadata !4745, null}
!8630 = metadata !{i32 417, i32 0, metadata !4748, null}
!8631 = metadata !{i32 156, i32 0, metadata !4530, metadata !8632}
!8632 = metadata !{i32 419, i32 0, metadata !4748, null}
!8633 = metadata !{i32 157, i32 0, metadata !4529, metadata !8632}
!8634 = metadata !{i32 158, i32 0, metadata !4529, metadata !8632}
!8635 = metadata !{i32 428, i32 0, metadata !4748, null}
!8636 = metadata !{i32 429, i32 0, metadata !4748, null}
!8637 = metadata !{i32 430, i32 0, metadata !4748, null}
!8638 = metadata !{i32 433, i32 0, metadata !4748, null}
!8639 = metadata !{i32 434, i32 0, metadata !4748, null}
!8640 = metadata !{i32 435, i32 0, metadata !4748, null}
!8641 = metadata !{i32 436, i32 0, metadata !4748, null}
!8642 = metadata !{i32 439, i32 0, metadata !4748, null}
!8643 = metadata !{i32 445, i32 0, metadata !4748, null}
!8644 = metadata !{i32 450, i32 0, metadata !4748, null}
!8645 = metadata !{i32 452, i32 0, metadata !4748, null}
!8646 = metadata !{i32 156, i32 0, metadata !4530, metadata !8647}
!8647 = metadata !{i32 1732, i32 0, metadata !4753, null}
!8648 = metadata !{i32 157, i32 0, metadata !4529, metadata !8647}
!8649 = metadata !{i32 158, i32 0, metadata !4529, metadata !8647}
!8650 = metadata !{i32 1737, i32 0, metadata !4753, null}
!8651 = metadata !{i32 1738, i32 0, metadata !4753, null}
!8652 = metadata !{i32 1739, i32 0, metadata !4753, null}
!8653 = metadata !{i32 1744, i32 0, metadata !4753, null}
!8654 = metadata !{i32 1748, i32 0, metadata !4753, null}
!8655 = metadata !{i32 1749, i32 0, metadata !4753, null}
!8656 = metadata !{i32 1743, i32 0, metadata !4753, null}
!8657 = metadata !{i32 1751, i32 0, metadata !4753, null}
!8658 = metadata !{i32 1752, i32 0, metadata !4753, null}
!8659 = metadata !{i32 1753, i32 0, metadata !4753, null}
!8660 = metadata !{i32 1756, i32 0, metadata !4753, null}
!8661 = metadata !{i32 1757, i32 0, metadata !4753, null}
!8662 = metadata !{i32 1767, i32 0, metadata !4753, null}
!8663 = metadata !{i32 1769, i32 0, metadata !4753, null}
!8664 = metadata !{i32 1776, i32 0, metadata !4753, null}
!8665 = metadata !{i32 156, i32 0, metadata !4530, metadata !8666}
!8666 = metadata !{i32 1780, i32 0, metadata !4759, null}
!8667 = metadata !{i32 157, i32 0, metadata !4529, metadata !8666}
!8668 = metadata !{i32 158, i32 0, metadata !4529, metadata !8666}
!8669 = metadata !{i32 1781, i32 0, metadata !4759, null}
!8670 = metadata !{i32 1782, i32 0, metadata !4759, null}
!8671 = metadata !{i32 1783, i32 0, metadata !4759, null}
!8672 = metadata !{i32 1790, i32 0, metadata !4761, null}
!8673 = metadata !{i32 1789, i32 0, metadata !4761, null}
!8674 = metadata !{i32 1792, i32 0, metadata !4761, null}
!8675 = metadata !{i32 1793, i32 0, metadata !4761, null}
!8676 = metadata !{i32 1794, i32 0, metadata !4761, null}
!8677 = metadata !{i32 1796, i32 0, metadata !4761, null}
!8678 = metadata !{i32 156, i32 0, metadata !4530, metadata !8679}
!8679 = metadata !{i32 1368, i32 0, metadata !4766, null}
!8680 = metadata !{i32 157, i32 0, metadata !4529, metadata !8679}
!8681 = metadata !{i32 158, i32 0, metadata !4529, metadata !8679}
!8682 = metadata !{i32 1370, i32 0, metadata !4766, null}
!8683 = metadata !{i32 1371, i32 0, metadata !4766, null}
!8684 = metadata !{i32 1372, i32 0, metadata !4766, null}
!8685 = metadata !{i32 1378, i32 0, metadata !4766, null}
!8686 = metadata !{i32 1379, i32 0, metadata !4766, null}
!8687 = metadata !{i32 1380, i32 0, metadata !4766, null}
!8688 = metadata !{i32 1381, i32 0, metadata !4766, null}
!8689 = metadata !{i32 1385, i32 0, metadata !4766, null}
!8690 = metadata !{i32 1390, i32 0, metadata !4768, null}
!8691 = metadata !{i32 1391, i32 0, metadata !4768, null}
!8692 = metadata !{i32 1396, i32 0, metadata !4768, null}
!8693 = metadata !{i32 1393, i32 0, metadata !4768, null}
!8694 = metadata !{i32 1394, i32 0, metadata !4768, null}
!8695 = metadata !{i32 1397, i32 0, metadata !4772, null}
!8696 = metadata !{i32 1398, i32 0, metadata !4772, null}
!8697 = metadata !{i32 1399, i32 0, metadata !4772, null}
!8698 = metadata !{i32 1400, i32 0, metadata !4772, null}
!8699 = metadata !{i32 1401, i32 0, metadata !4772, null}
!8700 = metadata !{i32 1402, i32 0, metadata !4772, null}
!8701 = metadata !{i32 1403, i32 0, metadata !4772, null}
!8702 = metadata !{i32 1409, i32 0, metadata !4768, null}
!8703 = metadata !{i32 1410, i32 0, metadata !4768, null}
!8704 = metadata !{i32 1411, i32 0, metadata !4768, null}
!8705 = metadata !{i32 1412, i32 0, metadata !4768, null}
!8706 = metadata !{i32 1413, i32 0, metadata !4768, null}
!8707 = metadata !{i32 1414, i32 0, metadata !4768, null}
!8708 = metadata !{i32 1415, i32 0, metadata !4768, null}
!8709 = metadata !{i32 1416, i32 0, metadata !4768, null}
!8710 = metadata !{i32 1418, i32 0, metadata !4768, null}
!8711 = metadata !{i32 1421, i32 0, metadata !4774, null}
!8712 = metadata !{i32 1432, i32 0, metadata !4774, null}
!8713 = metadata !{i32 1435, i32 0, metadata !4774, null}
!8714 = metadata !{i32 1436, i32 0, metadata !4774, null}
!8715 = metadata !{i32 1438, i32 0, metadata !4774, null}
!8716 = metadata !{i32 1439, i32 0, metadata !4774, null}
!8717 = metadata !{i32 1440, i32 0, metadata !4774, null}
!8718 = metadata !{i32 1444, i32 0, metadata !4778, null}
!8719 = metadata !{i32 1448, i32 0, metadata !4778, null}
!8720 = metadata !{i32 1449, i32 0, metadata !4780, null}
!8721 = metadata !{i32 1450, i32 0, metadata !4780, null}
!8722 = metadata !{i32 1451, i32 0, metadata !4780, null}
!8723 = metadata !{i32 2235, i32 0, metadata !4785, null}
!8724 = metadata !{i32 2244, i32 0, metadata !4787, null}
!8725 = metadata !{i32 2237, i32 0, metadata !4787, null}
!8726 = metadata !{i32 2238, i32 0, metadata !4787, null}
!8727 = metadata !{i32 2240, i32 0, metadata !4787, null}
!8728 = metadata !{i32 2245, i32 0, metadata !4787, null}
!8729 = metadata !{i32 2246, i32 0, metadata !4787, null}
!8730 = metadata !{i32 2248, i32 0, metadata !4787, null}
!8731 = metadata !{i32 2249, i32 0, metadata !4787, null}
!8732 = metadata !{i32 2255, i32 0, metadata !4787, null}
!8733 = metadata !{i32 2256, i32 0, metadata !4787, null}
!8734 = metadata !{i32 2258, i32 0, metadata !4787, null}
!8735 = metadata !{i32 2259, i32 0, metadata !4787, null}
!8736 = metadata !{i32 2261, i32 0, metadata !4787, null}
!8737 = metadata !{i32 2262, i32 0, metadata !4787, null}
!8738 = metadata !{i32 2264, i32 0, metadata !4787, null}
!8739 = metadata !{i32 2265, i32 0, metadata !4787, null}
!8740 = metadata !{i32 2266, i32 0, metadata !4787, null}
!8741 = metadata !{i32 2236, i32 0, metadata !4785, null}
!8742 = metadata !{i32 2271, i32 0, metadata !4789, null}
!8743 = metadata !{i32 2272, i32 0, metadata !4789, null}
!8744 = metadata !{i32 2273, i32 0, metadata !4789, null}
!8745 = metadata !{i32 2274, i32 0, metadata !4789, null}
!8746 = metadata !{i32 2269, i32 0, metadata !4785, null}
!8747 = metadata !{i32 156, i32 0, metadata !4530, metadata !8748}
!8748 = metadata !{i32 2281, i32 0, metadata !4794, null}
!8749 = metadata !{i32 157, i32 0, metadata !4529, metadata !8748}
!8750 = metadata !{i32 158, i32 0, metadata !4529, metadata !8748}
!8751 = metadata !{i32 2282, i32 0, metadata !4794, null}
!8752 = metadata !{i32 2283, i32 0, metadata !4794, null}
!8753 = metadata !{i32 2284, i32 0, metadata !4794, null}
!8754 = metadata !{i32 2287, i32 0, metadata !4794, null}
!8755 = metadata !{i32 2290, i32 0, metadata !4796, null}
!8756 = metadata !{i32 2292, i32 0, metadata !4796, null}
!8757 = metadata !{i32 2293, i32 0, metadata !4796, null}
!8758 = metadata !{i32 2294, i32 0, metadata !4796, null}
!8759 = metadata !{i32 2296, i32 0, metadata !4796, null}
!8760 = metadata !{i32 2299, i32 0, metadata !4794, null}
!8761 = metadata !{i32 156, i32 0, metadata !4530, metadata !8762}
!8762 = metadata !{i32 1029, i32 0, metadata !4800, null}
!8763 = metadata !{i32 157, i32 0, metadata !4529, metadata !8762}
!8764 = metadata !{i32 158, i32 0, metadata !4529, metadata !8762}
!8765 = metadata !{i32 1038, i32 0, metadata !4800, null}
!8766 = metadata !{i32 1039, i32 0, metadata !4800, null}
!8767 = metadata !{i32 1040, i32 0, metadata !4800, null}
!8768 = metadata !{i32 1043, i32 0, metadata !4800, null}
!8769 = metadata !{i32 1045, i32 0, metadata !4802, null}
!8770 = metadata !{i32 1049, i32 0, metadata !4802, null}
!8771 = metadata !{i32 1050, i32 0, metadata !4802, null}
!8772 = metadata !{i32 1061, i32 0, metadata !4800, null}
!8773 = metadata !{i32 1062, i32 0, metadata !4800, null}
!8774 = metadata !{i32 2182, i32 0, metadata !4808, null}
!8775 = metadata !{i32 2183, i32 0, metadata !4808, null}
!8776 = metadata !{i32 2186, i32 0, metadata !4807, null}
!8777 = metadata !{i32 2187, i32 0, metadata !4807, null}
!8778 = metadata !{i32 2190, i32 0, metadata !4807, null}
!8779 = metadata !{i32 2191, i32 0, metadata !4810, null}
!8780 = metadata !{i32 2192, i32 0, metadata !4810, null}
!8781 = metadata !{i32 2193, i32 0, metadata !4810, null}
!8782 = metadata !{i32 2194, i32 0, metadata !4810, null}
!8783 = metadata !{i32 2195, i32 0, metadata !4810, null}
!8784 = metadata !{i32 2196, i32 0, metadata !4810, null}
!8785 = metadata !{i32 2201, i32 0, metadata !4812, null}
!8786 = metadata !{i32 2202, i32 0, metadata !4812, null}
!8787 = metadata !{i32 2203, i32 0, metadata !4812, null}
!8788 = metadata !{i32 2204, i32 0, metadata !4812, null}
!8789 = metadata !{i32 2209, i32 0, metadata !4814, null}
!8790 = metadata !{i32 2216, i32 0, metadata !4814, null}
!8791 = metadata !{i32 2217, i32 0, metadata !4814, null}
!8792 = metadata !{i32 2218, i32 0, metadata !4814, null}
!8793 = metadata !{i32 2211, i32 0, metadata !4814, null}
!8794 = metadata !{i32 2220, i32 0, metadata !4814, null}
!8795 = metadata !{i32 2221, i32 0, metadata !4814, null}
!8796 = metadata !{i32 2222, i32 0, metadata !4814, null}
!8797 = metadata !{i32 2223, i32 0, metadata !4814, null}
!8798 = metadata !{i32 2224, i32 0, metadata !4814, null}
!8799 = metadata !{i32 2208, i32 0, metadata !4814, null}
!8800 = metadata !{i32 2188, i32 0, metadata !4807, null}
!8801 = metadata !{i32 910, i32 0, metadata !8802, null}
!8802 = metadata !{i32 589835, metadata !3297, i32 909, i32 0, metadata !3075, i32 61} ; [ DW_TAG_lexical_block ]
!8803 = metadata !{i32 911, i32 0, metadata !8802, null}
!8804 = metadata !{i32 2130, i32 0, metadata !4721, metadata !8805}
!8805 = metadata !{i32 2159, i32 0, metadata !4821, null}
!8806 = metadata !{i32 2131, i32 0, metadata !4721, metadata !8805}
!8807 = metadata !{i32 2133, i32 0, metadata !4721, metadata !8805}
!8808 = metadata !{i32 2134, i32 0, metadata !4721, metadata !8805}
!8809 = metadata !{i32 2138, i32 0, metadata !4721, metadata !8805}
!8810 = metadata !{i32 2141, i32 0, metadata !4721, metadata !8805}
!8811 = metadata !{i32 2142, i32 0, metadata !4721, metadata !8805}
!8812 = metadata !{i32 2143, i32 0, metadata !4721, metadata !8805}
!8813 = metadata !{i32 2160, i32 0, metadata !4821, null}
!8814 = metadata !{i32 2161, i32 0, metadata !4821, null}
!8815 = metadata !{i32 2131, i32 0, metadata !4721, metadata !8816}
!8816 = metadata !{i32 2163, i32 0, metadata !4821, null}
!8817 = metadata !{i32 2130, i32 0, metadata !4721, metadata !8816}
!8818 = metadata !{i32 2133, i32 0, metadata !4721, metadata !8816}
!8819 = metadata !{i32 2134, i32 0, metadata !4721, metadata !8816}
!8820 = metadata !{i32 2138, i32 0, metadata !4721, metadata !8816}
!8821 = metadata !{i32 2141, i32 0, metadata !4721, metadata !8816}
!8822 = metadata !{i32 2142, i32 0, metadata !4721, metadata !8816}
!8823 = metadata !{i32 2143, i32 0, metadata !4721, metadata !8816}
!8824 = metadata !{i32 2164, i32 0, metadata !4821, null}
!8825 = metadata !{i32 2165, i32 0, metadata !4821, null}
!8826 = metadata !{i32 2168, i32 0, metadata !4821, null}
!8827 = metadata !{i32 2169, i32 0, metadata !4821, null}
!8828 = metadata !{i32 2170, i32 0, metadata !4821, null}
!8829 = metadata !{i32 2171, i32 0, metadata !4821, null}
!8830 = metadata !{i32 2174, i32 0, metadata !4821, null}
!8831 = metadata !{i32 2175, i32 0, metadata !4821, null}
!8832 = metadata !{i32 2176, i32 0, metadata !4821, null}
!8833 = metadata !{i32 2177, i32 0, metadata !4821, null}
!8834 = metadata !{i32 64, i32 0, metadata !4840, null}
!8835 = metadata !{i32 67, i32 0, metadata !4840, null}
!8836 = metadata !{i32 68, i32 0, metadata !4840, null}
!8837 = metadata !{i32 69, i32 0, metadata !4840, null}
!8838 = metadata !{i32 71, i32 0, metadata !4840, null}
!8839 = metadata !{i32 72, i32 0, metadata !4840, null}
!8840 = metadata !{i32 73, i32 0, metadata !4843, null}
!8841 = metadata !{i32 74, i32 0, metadata !4843, null}
!8842 = metadata !{i32 76, i32 0, metadata !4843, null}
!8843 = metadata !{i32 79, i32 0, metadata !4840, null}
!8844 = metadata !{i32 82, i32 0, metadata !4845, null}
!8845 = metadata !{i32 83, i32 0, metadata !4845, null}
!8846 = metadata !{i32 86, i32 0, metadata !4845, null}
!8847 = metadata !{i32 90, i32 0, metadata !4848, null}
!8848 = metadata !{i32 91, i32 0, metadata !4848, null}
!8849 = metadata !{i32 91, i32 0, metadata !4850, null}
!8850 = metadata !{i32 93, i32 0, metadata !4848, null}
!8851 = metadata !{i32 97, i32 0, metadata !4858, null}
!8852 = metadata !{i32 99, i32 0, metadata !4858, null}
!8853 = metadata !{i32 106, i32 0, metadata !4862, null}
!8854 = metadata !{i32 107, i32 0, metadata !4862, null}
!8855 = metadata !{i32 109, i32 0, metadata !4862, null}
!8856 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8857}
!8857 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8858}
!8858 = metadata !{i32 113, i32 0, metadata !4858, null}
!8859 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8857}
!8860 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8858}
!8861 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8858}
!8862 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8858}
!8863 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8858}
!8864 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8858}
!8865 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8858}
!8866 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8858}
!8867 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8858}
!8868 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8858}
!8869 = metadata !{i32 114, i32 0, metadata !4858, null}
!8870 = metadata !{i32 115, i32 0, metadata !4858, null}
!8871 = metadata !{i32 115, i32 0, metadata !4865, null}
!8872 = metadata !{i32 116, i32 0, metadata !4858, null}
!8873 = metadata !{i32 119, i32 0, metadata !4858, null}
!8874 = metadata !{i32 120, i32 0, metadata !4858, null}
!8875 = metadata !{i32 126, i32 0, metadata !4858, null}
!8876 = metadata !{i32 127, i32 0, metadata !4858, null}
!8877 = metadata !{i32 133, i32 0, metadata !4845, null}
!8878 = metadata !{i32 134, i32 0, metadata !4845, null}
!8879 = metadata !{i32 65, i32 0, metadata !4840, null}
!8880 = metadata !{i32 57, i32 0, metadata !8881, metadata !8882}
!8881 = metadata !{i32 589835, metadata !3314, i32 56, i32 0, metadata !3075, i32 76} ; [ DW_TAG_lexical_block ]
!8882 = metadata !{i32 2109, i32 0, metadata !4871, null}
!8883 = metadata !{i32 2111, i32 0, metadata !4871, null}
!8884 = metadata !{i32 2113, i32 0, metadata !4871, null}
!8885 = metadata !{i32 2114, i32 0, metadata !4871, null}
!8886 = metadata !{i32 2115, i32 0, metadata !4871, null}
!8887 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8888}
!8888 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8889}
!8889 = metadata !{i32 2118, i32 0, metadata !4871, null}
!8890 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8888}
!8891 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8889}
!8892 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8889}
!8893 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8889}
!8894 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8889}
!8895 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8889}
!8896 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8889}
!8897 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8889}
!8898 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8889}
!8899 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8889}
!8900 = metadata !{i32 2119, i32 0, metadata !4871, null}
!8901 = metadata !{i32 2120, i32 0, metadata !4871, null}
!8902 = metadata !{i32 57, i32 0, metadata !8881, metadata !8903}
!8903 = metadata !{i32 1843, i32 0, metadata !4877, null}
!8904 = metadata !{i32 1844, i32 0, metadata !4877, null}
!8905 = metadata !{i32 1847, i32 0, metadata !4877, null}
!8906 = metadata !{i32 1848, i32 0, metadata !4877, null}
!8907 = metadata !{i32 1849, i32 0, metadata !4877, null}
!8908 = metadata !{i32 1850, i32 0, metadata !4877, null}
!8909 = metadata !{i32 1851, i32 0, metadata !4877, null}
!8910 = metadata !{i32 1852, i32 0, metadata !4877, null}
!8911 = metadata !{i32 1853, i32 0, metadata !4877, null}
!8912 = metadata !{i32 1855, i32 0, metadata !4877, null}
!8913 = metadata !{i32 1856, i32 0, metadata !4877, null}
!8914 = metadata !{i32 1859, i32 0, metadata !4879, null}
!8915 = metadata !{i32 1860, i32 0, metadata !4879, null}
!8916 = metadata !{i32 1861, i32 0, metadata !4879, null}
!8917 = metadata !{i32 1862, i32 0, metadata !4879, null}
!8918 = metadata !{i32 57, i32 0, metadata !8881, metadata !8919}
!8919 = metadata !{i32 2091, i32 0, metadata !4883, null}
!8920 = metadata !{i32 2093, i32 0, metadata !4883, null}
!8921 = metadata !{i32 2094, i32 0, metadata !4883, null}
!8922 = metadata !{i32 2095, i32 0, metadata !4883, null}
!8923 = metadata !{i32 2096, i32 0, metadata !4883, null}
!8924 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8925}
!8925 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8926}
!8926 = metadata !{i32 2101, i32 0, metadata !4883, null}
!8927 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8925}
!8928 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8926}
!8929 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8926}
!8930 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8926}
!8931 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8926}
!8932 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8926}
!8933 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8926}
!8934 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8926}
!8935 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8926}
!8936 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8926}
!8937 = metadata !{i32 2102, i32 0, metadata !4883, null}
!8938 = metadata !{i32 2103, i32 0, metadata !4883, null}
!8939 = metadata !{i32 57, i32 0, metadata !8881, metadata !8940}
!8940 = metadata !{i32 1821, i32 0, metadata !4887, null}
!8941 = metadata !{i32 1822, i32 0, metadata !4887, null}
!8942 = metadata !{i32 1824, i32 0, metadata !4887, null}
!8943 = metadata !{i32 1825, i32 0, metadata !4887, null}
!8944 = metadata !{i32 1826, i32 0, metadata !4887, null}
!8945 = metadata !{i32 1827, i32 0, metadata !4887, null}
!8946 = metadata !{i32 1828, i32 0, metadata !4887, null}
!8947 = metadata !{i32 1829, i32 0, metadata !4887, null}
!8948 = metadata !{i32 1831, i32 0, metadata !4887, null}
!8949 = metadata !{i32 1832, i32 0, metadata !4887, null}
!8950 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8951}
!8951 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8952}
!8952 = metadata !{i32 1835, i32 0, metadata !4889, null}
!8953 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8951}
!8954 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8952}
!8955 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8952}
!8956 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8952}
!8957 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8952}
!8958 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8952}
!8959 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8952}
!8960 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8952}
!8961 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8952}
!8962 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8952}
!8963 = metadata !{i32 1836, i32 0, metadata !4889, null}
!8964 = metadata !{i32 1837, i32 0, metadata !4889, null}
!8965 = metadata !{i32 57, i32 0, metadata !8881, metadata !8966}
!8966 = metadata !{i32 1802, i32 0, metadata !4892, null}
!8967 = metadata !{i32 1803, i32 0, metadata !4892, null}
!8968 = metadata !{i32 1805, i32 0, metadata !4892, null}
!8969 = metadata !{i32 1806, i32 0, metadata !4892, null}
!8970 = metadata !{i32 1807, i32 0, metadata !4892, null}
!8971 = metadata !{i32 1809, i32 0, metadata !4892, null}
!8972 = metadata !{i32 1810, i32 0, metadata !4892, null}
!8973 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8974}
!8974 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8975}
!8975 = metadata !{i32 1813, i32 0, metadata !4894, null}
!8976 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8974}
!8977 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8975}
!8978 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8975}
!8979 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8975}
!8980 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8975}
!8981 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8975}
!8982 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8975}
!8983 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8975}
!8984 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8975}
!8985 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8975}
!8986 = metadata !{i32 1814, i32 0, metadata !4894, null}
!8987 = metadata !{i32 1815, i32 0, metadata !4894, null}
!8988 = metadata !{i32 57, i32 0, metadata !8881, metadata !8989}
!8989 = metadata !{i32 1679, i32 0, metadata !4898, null}
!8990 = metadata !{i32 1680, i32 0, metadata !4898, null}
!8991 = metadata !{i32 1682, i32 0, metadata !4898, null}
!8992 = metadata !{i32 1683, i32 0, metadata !4898, null}
!8993 = metadata !{i32 1684, i32 0, metadata !4898, null}
!8994 = metadata !{i32 2021, i32 0, metadata !4827, metadata !8995}
!8995 = metadata !{i32 2033, i32 0, metadata !4830, metadata !8996}
!8996 = metadata !{i32 1688, i32 0, metadata !4900, null}
!8997 = metadata !{i32 2022, i32 0, metadata !4827, metadata !8995}
!8998 = metadata !{i32 2036, i32 0, metadata !4830, metadata !8996}
!8999 = metadata !{i32 2037, i32 0, metadata !4833, metadata !8996}
!9000 = metadata !{i32 2038, i32 0, metadata !4833, metadata !8996}
!9001 = metadata !{i32 2040, i32 0, metadata !4833, metadata !8996}
!9002 = metadata !{i32 2043, i32 0, metadata !4833, metadata !8996}
!9003 = metadata !{i32 2046, i32 0, metadata !4835, metadata !8996}
!9004 = metadata !{i32 2047, i32 0, metadata !4835, metadata !8996}
!9005 = metadata !{i32 2048, i32 0, metadata !4835, metadata !8996}
!9006 = metadata !{i32 2049, i32 0, metadata !4835, metadata !8996}
!9007 = metadata !{i32 1689, i32 0, metadata !4900, null}
!9008 = metadata !{i32 1690, i32 0, metadata !4900, null}
!9009 = metadata !{i32 156, i32 0, metadata !4530, metadata !9010}
!9010 = metadata !{i32 1234, i32 0, metadata !4905, null}
!9011 = metadata !{i32 157, i32 0, metadata !4529, metadata !9010}
!9012 = metadata !{i32 158, i32 0, metadata !4529, metadata !9010}
!9013 = metadata !{i32 1236, i32 0, metadata !4905, null}
!9014 = metadata !{i32 1237, i32 0, metadata !4905, null}
!9015 = metadata !{i32 1238, i32 0, metadata !4905, null}
!9016 = metadata !{i32 1239, i32 0, metadata !4905, null}
!9017 = metadata !{i32 1247, i32 0, metadata !4905, null}
!9018 = metadata !{i32 1248, i32 0, metadata !4905, null}
!9019 = metadata !{i32 1249, i32 0, metadata !4905, null}
!9020 = metadata !{i32 1251, i32 0, metadata !4905, null}
!9021 = metadata !{i32 1252, i32 0, metadata !4905, null}
!9022 = metadata !{i32 1253, i32 0, metadata !4905, null}
!9023 = metadata !{i32 1256, i32 0, metadata !4905, null}
!9024 = metadata !{i32 1259, i32 0, metadata !4905, null}
!9025 = metadata !{i32 1260, i32 0, metadata !4905, null}
!9026 = metadata !{i32 1261, i32 0, metadata !4905, null}
!9027 = metadata !{i32 1262, i32 0, metadata !4905, null}
!9028 = metadata !{i32 1305, i32 0, metadata !4910, null}
!9029 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9030}
!9030 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9028}
!9031 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9030}
!9032 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9028}
!9033 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9028}
!9034 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9028}
!9035 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9028}
!9036 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9028}
!9037 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9028}
!9038 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9028}
!9039 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9028}
!9040 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9028}
!9041 = metadata !{i32 1307, i32 0, metadata !4910, null}
!9042 = metadata !{i32 1315, i32 0, metadata !4910, null}
!9043 = metadata !{i32 1318, i32 0, metadata !4905, null}
!9044 = metadata !{i32 1319, i32 0, metadata !4905, null}
!9045 = metadata !{i32 1320, i32 0, metadata !4905, null}
!9046 = metadata !{i32 1322, i32 0, metadata !4905, null}
!9047 = metadata !{i32 1324, i32 0, metadata !4905, null}
!9048 = metadata !{i32 57, i32 0, metadata !8881, metadata !9049}
!9049 = metadata !{i32 1210, i32 0, metadata !4914, null}
!9050 = metadata !{i32 1211, i32 0, metadata !4914, null}
!9051 = metadata !{i32 1212, i32 0, metadata !4914, null}
!9052 = metadata !{i32 1213, i32 0, metadata !4914, null}
!9053 = metadata !{i32 1214, i32 0, metadata !4914, null}
!9054 = metadata !{i32 57, i32 0, metadata !8881, metadata !9055}
!9055 = metadata !{i32 1216, i32 0, metadata !4914, null}
!9056 = metadata !{i32 1217, i32 0, metadata !4914, null}
!9057 = metadata !{i32 1218, i32 0, metadata !4914, null}
!9058 = metadata !{i32 1219, i32 0, metadata !4914, null}
!9059 = metadata !{i32 1220, i32 0, metadata !4914, null}
!9060 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9061}
!9061 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9062}
!9062 = metadata !{i32 1222, i32 0, metadata !4914, null}
!9063 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9061}
!9064 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9062}
!9065 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9062}
!9066 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9062}
!9067 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9062}
!9068 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9062}
!9069 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9062}
!9070 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9062}
!9071 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9062}
!9072 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9062}
!9073 = metadata !{i32 1223, i32 0, metadata !4914, null}
!9074 = metadata !{i32 1224, i32 0, metadata !4914, null}
!9075 = metadata !{i32 57, i32 0, metadata !8881, metadata !9076}
!9076 = metadata !{i32 1191, i32 0, metadata !4919, null}
!9077 = metadata !{i32 1192, i32 0, metadata !4919, null}
!9078 = metadata !{i32 1193, i32 0, metadata !4919, null}
!9079 = metadata !{i32 1194, i32 0, metadata !4919, null}
!9080 = metadata !{i32 1195, i32 0, metadata !4919, null}
!9081 = metadata !{i32 57, i32 0, metadata !8881, metadata !9082}
!9082 = metadata !{i32 1197, i32 0, metadata !4919, null}
!9083 = metadata !{i32 1198, i32 0, metadata !4919, null}
!9084 = metadata !{i32 1199, i32 0, metadata !4919, null}
!9085 = metadata !{i32 1200, i32 0, metadata !4919, null}
!9086 = metadata !{i32 1201, i32 0, metadata !4919, null}
!9087 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9088}
!9088 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9089}
!9089 = metadata !{i32 1203, i32 0, metadata !4919, null}
!9090 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9088}
!9091 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9089}
!9092 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9089}
!9093 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9089}
!9094 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9089}
!9095 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9089}
!9096 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9089}
!9097 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9089}
!9098 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9089}
!9099 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9089}
!9100 = metadata !{i32 1204, i32 0, metadata !4919, null}
!9101 = metadata !{i32 1205, i32 0, metadata !4919, null}
!9102 = metadata !{i32 57, i32 0, metadata !8881, metadata !9103}
!9103 = metadata !{i32 1140, i32 0, metadata !4925, null}
!9104 = metadata !{i32 1141, i32 0, metadata !4925, null}
!9105 = metadata !{i32 1142, i32 0, metadata !4925, null}
!9106 = metadata !{i32 1143, i32 0, metadata !4925, null}
!9107 = metadata !{i32 1144, i32 0, metadata !4925, null}
!9108 = metadata !{i32 156, i32 0, metadata !4530, metadata !9109}
!9109 = metadata !{i32 1146, i32 0, metadata !4925, null}
!9110 = metadata !{i32 157, i32 0, metadata !4529, metadata !9109}
!9111 = metadata !{i32 158, i32 0, metadata !4529, metadata !9109}
!9112 = metadata !{i32 1147, i32 0, metadata !4925, null}
!9113 = metadata !{i32 1148, i32 0, metadata !4925, null}
!9114 = metadata !{i32 1149, i32 0, metadata !4925, null}
!9115 = metadata !{i32 1150, i32 0, metadata !4925, null}
!9116 = metadata !{i32 1152, i32 0, metadata !4925, null}
!9117 = metadata !{i32 1158, i32 0, metadata !4925, null}
!9118 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9119}
!9119 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9117}
!9120 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9119}
!9121 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9117}
!9122 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9117}
!9123 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9117}
!9124 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9117}
!9125 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9117}
!9126 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9117}
!9127 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9117}
!9128 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9117}
!9129 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9117}
!9130 = metadata !{i32 1159, i32 0, metadata !4925, null}
!9131 = metadata !{i32 1160, i32 0, metadata !4925, null}
!9132 = metadata !{i32 57, i32 0, metadata !8881, metadata !9133}
!9133 = metadata !{i32 1107, i32 0, metadata !4932, null}
!9134 = metadata !{i32 1108, i32 0, metadata !4932, null}
!9135 = metadata !{i32 1109, i32 0, metadata !4932, null}
!9136 = metadata !{i32 1110, i32 0, metadata !4932, null}
!9137 = metadata !{i32 1111, i32 0, metadata !4932, null}
!9138 = metadata !{i32 156, i32 0, metadata !4530, metadata !9139}
!9139 = metadata !{i32 1113, i32 0, metadata !4932, null}
!9140 = metadata !{i32 157, i32 0, metadata !4529, metadata !9139}
!9141 = metadata !{i32 158, i32 0, metadata !4529, metadata !9139}
!9142 = metadata !{i32 1114, i32 0, metadata !4932, null}
!9143 = metadata !{i32 1115, i32 0, metadata !4932, null}
!9144 = metadata !{i32 1116, i32 0, metadata !4932, null}
!9145 = metadata !{i32 1117, i32 0, metadata !4932, null}
!9146 = metadata !{i32 1125, i32 0, metadata !4932, null}
!9147 = metadata !{i32 1128, i32 0, metadata !4932, null}
!9148 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9149}
!9149 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9147}
!9150 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9149}
!9151 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9147}
!9152 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9147}
!9153 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9147}
!9154 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9147}
!9155 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9147}
!9156 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9147}
!9157 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9147}
!9158 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9147}
!9159 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9147}
!9160 = metadata !{i32 1129, i32 0, metadata !4932, null}
!9161 = metadata !{i32 1130, i32 0, metadata !4932, null}
!9162 = metadata !{i32 57, i32 0, metadata !8881, metadata !9163}
!9163 = metadata !{i32 1066, i32 0, metadata !4940, null}
!9164 = metadata !{i32 1067, i32 0, metadata !4940, null}
!9165 = metadata !{i32 1068, i32 0, metadata !4940, null}
!9166 = metadata !{i32 1069, i32 0, metadata !4940, null}
!9167 = metadata !{i32 1070, i32 0, metadata !4940, null}
!9168 = metadata !{i32 156, i32 0, metadata !4530, metadata !9169}
!9169 = metadata !{i32 1072, i32 0, metadata !4940, null}
!9170 = metadata !{i32 157, i32 0, metadata !4529, metadata !9169}
!9171 = metadata !{i32 158, i32 0, metadata !4529, metadata !9169}
!9172 = metadata !{i32 1074, i32 0, metadata !4940, null}
!9173 = metadata !{i32 1075, i32 0, metadata !4940, null}
!9174 = metadata !{i32 1076, i32 0, metadata !4940, null}
!9175 = metadata !{i32 1077, i32 0, metadata !4940, null}
!9176 = metadata !{i32 1085, i32 0, metadata !4940, null}
!9177 = metadata !{i32 1090, i32 0, metadata !4940, null}
!9178 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9179}
!9179 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9177}
!9180 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9179}
!9181 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9177}
!9182 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9177}
!9183 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9177}
!9184 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9177}
!9185 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9177}
!9186 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9177}
!9187 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9177}
!9188 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9177}
!9189 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9177}
!9190 = metadata !{i32 1096, i32 0, metadata !4940, null}
!9191 = metadata !{i32 1097, i32 0, metadata !4940, null}
!9192 = metadata !{i32 57, i32 0, metadata !8881, metadata !9193}
!9193 = metadata !{i32 1016, i32 0, metadata !4947, null}
!9194 = metadata !{i32 1018, i32 0, metadata !4947, null}
!9195 = metadata !{i32 978, i32 0, metadata !8454, metadata !9196}
!9196 = metadata !{i32 1019, i32 0, metadata !4947, null}
!9197 = metadata !{i32 979, i32 0, metadata !8454, metadata !9196}
!9198 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9199}
!9199 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9200}
!9200 = metadata !{i32 1021, i32 0, metadata !4949, null}
!9201 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9199}
!9202 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9200}
!9203 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9200}
!9204 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9200}
!9205 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9200}
!9206 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9200}
!9207 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9200}
!9208 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9200}
!9209 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9200}
!9210 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9200}
!9211 = metadata !{i32 1022, i32 0, metadata !4949, null}
!9212 = metadata !{i32 1023, i32 0, metadata !4949, null}
!9213 = metadata !{i32 57, i32 0, metadata !8881, metadata !9214}
!9214 = metadata !{i32 984, i32 0, metadata !4954, null}
!9215 = metadata !{i32 986, i32 0, metadata !4954, null}
!9216 = metadata !{i32 978, i32 0, metadata !8454, metadata !9217}
!9217 = metadata !{i32 987, i32 0, metadata !4954, null}
!9218 = metadata !{i32 979, i32 0, metadata !8454, metadata !9217}
!9219 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9220}
!9220 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9221}
!9221 = metadata !{i32 989, i32 0, metadata !4956, null}
!9222 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9220}
!9223 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9221}
!9224 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9221}
!9225 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9221}
!9226 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9221}
!9227 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9221}
!9228 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9221}
!9229 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9221}
!9230 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9221}
!9231 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9221}
!9232 = metadata !{i32 990, i32 0, metadata !4956, null}
!9233 = metadata !{i32 991, i32 0, metadata !4956, null}
!9234 = metadata !{i32 57, i32 0, metadata !8881, metadata !9235}
!9235 = metadata !{i32 794, i32 0, metadata !4959, null}
!9236 = metadata !{i32 796, i32 0, metadata !4959, null}
!9237 = metadata !{i32 798, i32 0, metadata !4959, null}
!9238 = metadata !{i32 799, i32 0, metadata !4959, null}
!9239 = metadata !{i32 800, i32 0, metadata !4959, null}
!9240 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9241}
!9241 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9242}
!9242 = metadata !{i32 804, i32 0, metadata !4961, null}
!9243 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9241}
!9244 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9242}
!9245 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9242}
!9246 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9242}
!9247 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9242}
!9248 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9242}
!9249 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9242}
!9250 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9242}
!9251 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9242}
!9252 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9242}
!9253 = metadata !{i32 805, i32 0, metadata !4961, null}
!9254 = metadata !{i32 806, i32 0, metadata !4961, null}
!9255 = metadata !{i32 57, i32 0, metadata !8881, metadata !9256}
!9256 = metadata !{i32 185, i32 0, metadata !4965, null}
!9257 = metadata !{i32 190, i32 0, metadata !4965, null}
!9258 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9259}
!9259 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9260}
!9260 = metadata !{i32 195, i32 0, metadata !4967, null}
!9261 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9259}
!9262 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9260}
!9263 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9260}
!9264 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9260}
!9265 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9260}
!9266 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9260}
!9267 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9260}
!9268 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9260}
!9269 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9260}
!9270 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9260}
!9271 = metadata !{i32 196, i32 0, metadata !4967, null}
!9272 = metadata !{i32 197, i32 0, metadata !4967, null}
!9273 = metadata !{i32 193, i32 0, metadata !4965, null}
!9274 = metadata !{i32 57, i32 0, metadata !8881, metadata !9275}
!9275 = metadata !{i32 167, i32 0, metadata !4971, null}
!9276 = metadata !{i32 172, i32 0, metadata !4971, null}
!9277 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9278}
!9278 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9279}
!9279 = metadata !{i32 177, i32 0, metadata !4973, null}
!9280 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9278}
!9281 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9279}
!9282 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9279}
!9283 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9279}
!9284 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9279}
!9285 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9279}
!9286 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9279}
!9287 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9279}
!9288 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9279}
!9289 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9279}
!9290 = metadata !{i32 178, i32 0, metadata !4973, null}
!9291 = metadata !{i32 179, i32 0, metadata !4973, null}
!9292 = metadata !{i32 175, i32 0, metadata !4971, null}
!9293 = metadata !{i32 1988, i32 0, metadata !4980, null}
!9294 = metadata !{i32 1990, i32 0, metadata !4980, null}
!9295 = metadata !{i32 1991, i32 0, metadata !4980, null}
!9296 = metadata !{i32 1992, i32 0, metadata !4980, null}
!9297 = metadata !{i32 1993, i32 0, metadata !4980, null}
!9298 = metadata !{i32 1996, i32 0, metadata !4980, null}
!9299 = metadata !{i32 1997, i32 0, metadata !4980, null}
!9300 = metadata !{i32 1999, i32 0, metadata !4980, null}
!9301 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9302}
!9302 = metadata !{i32 2002, i32 0, metadata !4980, null}
!9303 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9302}
!9304 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9305}
!9305 = metadata !{i32 2003, i32 0, metadata !4980, null}
!9306 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9305}
!9307 = metadata !{i32 2007, i32 0, metadata !4980, null}
!9308 = metadata !{i32 2008, i32 0, metadata !4980, null}
!9309 = metadata !{i32 2009, i32 0, metadata !4980, null}
!9310 = metadata !{i32 2010, i32 0, metadata !4980, null}
!9311 = metadata !{i32 2011, i32 0, metadata !4980, null}
!9312 = metadata !{i32 156, i32 0, metadata !4530, metadata !9313}
!9313 = metadata !{i32 1335, i32 0, metadata !4984, null}
!9314 = metadata !{i32 157, i32 0, metadata !4529, metadata !9313}
!9315 = metadata !{i32 158, i32 0, metadata !4529, metadata !9313}
!9316 = metadata !{i32 1337, i32 0, metadata !4984, null}
!9317 = metadata !{i32 1339, i32 0, metadata !4984, null}
!9318 = metadata !{i32 1340, i32 0, metadata !4984, null}
!9319 = metadata !{i32 1341, i32 0, metadata !4984, null}
!9320 = metadata !{i32 1344, i32 0, metadata !4984, null}
!9321 = metadata !{i32 1345, i32 0, metadata !4984, null}
!9322 = metadata !{i32 1346, i32 0, metadata !4984, null}
!9323 = metadata !{i32 1347, i32 0, metadata !4984, null}
!9324 = metadata !{i32 1350, i32 0, metadata !4984, null}
!9325 = metadata !{i32 1351, i32 0, metadata !4984, null}
!9326 = metadata !{i32 1352, i32 0, metadata !4984, null}
!9327 = metadata !{i32 1353, i32 0, metadata !4984, null}
!9328 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9329}
!9329 = metadata !{i32 1355, i32 0, metadata !4986, null}
!9330 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9329}
!9331 = metadata !{i32 1357, i32 0, metadata !4986, null}
!9332 = metadata !{i32 1361, i32 0, metadata !4986, null}
!9333 = metadata !{i32 1362, i32 0, metadata !4986, null}
!9334 = metadata !{i32 156, i32 0, metadata !4530, metadata !9335}
!9335 = metadata !{i32 687, i32 0, metadata !4991, null}
!9336 = metadata !{i32 157, i32 0, metadata !4529, metadata !9335}
!9337 = metadata !{i32 158, i32 0, metadata !4529, metadata !9335}
!9338 = metadata !{i32 159, i32 0, metadata !4529, metadata !9335}
!9339 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9340}
!9340 = metadata !{i32 688, i32 0, metadata !4991, null}
!9341 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9340}
!9342 = metadata !{i32 689, i32 0, metadata !4991, null}
!9343 = metadata !{i32 690, i32 0, metadata !4991, null}
!9344 = metadata !{i32 691, i32 0, metadata !4991, null}
!9345 = metadata !{i32 694, i32 0, metadata !4991, null}
!9346 = metadata !{i32 701, i32 0, metadata !4991, null}
!9347 = metadata !{i32 702, i32 0, metadata !4991, null}
!9348 = metadata !{i32 704, i32 0, metadata !4991, null}
!9349 = metadata !{i32 708, i32 0, metadata !4991, null}
!9350 = metadata !{i32 709, i32 0, metadata !4991, null}
!9351 = metadata !{i32 710, i32 0, metadata !4991, null}
!9352 = metadata !{i32 714, i32 0, metadata !4991, null}
!9353 = metadata !{i32 715, i32 0, metadata !4991, null}
!9354 = metadata !{i32 716, i32 0, metadata !4991, null}
!9355 = metadata !{i32 719, i32 0, metadata !4991, null}
!9356 = metadata !{i32 720, i32 0, metadata !4991, null}
!9357 = metadata !{i32 723, i32 0, metadata !4991, null}
!9358 = metadata !{i32 725, i32 0, metadata !4991, null}
!9359 = metadata !{i32 726, i32 0, metadata !4991, null}
!9360 = metadata !{i32 728, i32 0, metadata !4991, null}
!9361 = metadata !{i32 729, i32 0, metadata !4991, null}
!9362 = metadata !{i32 733, i32 0, metadata !4991, null}
!9363 = metadata !{i32 734, i32 0, metadata !4991, null}
!9364 = metadata !{i32 735, i32 0, metadata !4991, null}
!9365 = metadata !{i32 738, i32 0, metadata !4991, null}
!9366 = metadata !{i32 739, i32 0, metadata !4991, null}
!9367 = metadata !{i32 544, i32 0, metadata !4998, null}
!9368 = metadata !{i32 546, i32 0, metadata !4998, null}
!9369 = metadata !{i32 549, i32 0, metadata !4998, null}
!9370 = metadata !{i32 550, i32 0, metadata !4998, null}
!9371 = metadata !{i32 551, i32 0, metadata !4998, null}
!9372 = metadata !{i32 553, i32 0, metadata !4998, null}
!9373 = metadata !{i32 554, i32 0, metadata !4998, null}
!9374 = metadata !{i32 555, i32 0, metadata !4998, null}
!9375 = metadata !{i32 156, i32 0, metadata !4530, metadata !9376}
!9376 = metadata !{i32 558, i32 0, metadata !4998, null}
!9377 = metadata !{i32 157, i32 0, metadata !4529, metadata !9376}
!9378 = metadata !{i32 158, i32 0, metadata !4529, metadata !9376}
!9379 = metadata !{i32 560, i32 0, metadata !4998, null}
!9380 = metadata !{i32 561, i32 0, metadata !4998, null}
!9381 = metadata !{i32 562, i32 0, metadata !4998, null}
!9382 = metadata !{i32 565, i32 0, metadata !4998, null}
!9383 = metadata !{i32 566, i32 0, metadata !4998, null}
!9384 = metadata !{i32 567, i32 0, metadata !4998, null}
!9385 = metadata !{i32 568, i32 0, metadata !4998, null}
!9386 = metadata !{i32 571, i32 0, metadata !4998, null}
!9387 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9388}
!9388 = metadata !{i32 574, i32 0, metadata !5000, null}
!9389 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9388}
!9390 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9391}
!9391 = metadata !{i32 575, i32 0, metadata !5000, null}
!9392 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9391}
!9393 = metadata !{i32 579, i32 0, metadata !5000, null}
!9394 = metadata !{i32 581, i32 0, metadata !5000, null}
!9395 = metadata !{i32 583, i32 0, metadata !5000, null}
!9396 = metadata !{i32 584, i32 0, metadata !5000, null}
!9397 = metadata !{i32 585, i32 0, metadata !5000, null}
!9398 = metadata !{i32 588, i32 0, metadata !5000, null}
!9399 = metadata !{i32 591, i32 0, metadata !4998, null}
!9400 = metadata !{i32 594, i32 0, metadata !4998, null}
!9401 = metadata !{i32 595, i32 0, metadata !4998, null}
!9402 = metadata !{i32 598, i32 0, metadata !4998, null}
!9403 = metadata !{i32 599, i32 0, metadata !4998, null}
!9404 = metadata !{i32 547, i32 0, metadata !4998, null}
!9405 = metadata !{i32 459, i32 0, metadata !5005, null}
!9406 = metadata !{i32 461, i32 0, metadata !5005, null}
!9407 = metadata !{i32 464, i32 0, metadata !5005, null}
!9408 = metadata !{i32 465, i32 0, metadata !5005, null}
!9409 = metadata !{i32 466, i32 0, metadata !5005, null}
!9410 = metadata !{i32 156, i32 0, metadata !4530, metadata !9411}
!9411 = metadata !{i32 469, i32 0, metadata !5005, null}
!9412 = metadata !{i32 157, i32 0, metadata !4529, metadata !9411}
!9413 = metadata !{i32 158, i32 0, metadata !4529, metadata !9411}
!9414 = metadata !{i32 471, i32 0, metadata !5005, null}
!9415 = metadata !{i32 472, i32 0, metadata !5005, null}
!9416 = metadata !{i32 473, i32 0, metadata !5005, null}
!9417 = metadata !{i32 476, i32 0, metadata !5005, null}
!9418 = metadata !{i32 477, i32 0, metadata !5005, null}
!9419 = metadata !{i32 478, i32 0, metadata !5005, null}
!9420 = metadata !{i32 479, i32 0, metadata !5005, null}
!9421 = metadata !{i32 482, i32 0, metadata !5005, null}
!9422 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9423}
!9423 = metadata !{i32 485, i32 0, metadata !5007, null}
!9424 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9423}
!9425 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9426}
!9426 = metadata !{i32 486, i32 0, metadata !5007, null}
!9427 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9426}
!9428 = metadata !{i32 490, i32 0, metadata !5007, null}
!9429 = metadata !{i32 492, i32 0, metadata !5007, null}
!9430 = metadata !{i32 496, i32 0, metadata !5007, null}
!9431 = metadata !{i32 497, i32 0, metadata !5007, null}
!9432 = metadata !{i32 498, i32 0, metadata !5007, null}
!9433 = metadata !{i32 503, i32 0, metadata !5007, null}
!9434 = metadata !{i32 504, i32 0, metadata !5007, null}
!9435 = metadata !{i32 506, i32 0, metadata !5007, null}
!9436 = metadata !{i32 508, i32 0, metadata !5007, null}
!9437 = metadata !{i32 509, i32 0, metadata !5007, null}
!9438 = metadata !{i32 510, i32 0, metadata !5007, null}
!9439 = metadata !{i32 511, i32 0, metadata !5007, null}
!9440 = metadata !{i32 513, i32 0, metadata !5007, null}
!9441 = metadata !{i32 516, i32 0, metadata !5007, null}
!9442 = metadata !{i32 517, i32 0, metadata !5007, null}
!9443 = metadata !{i32 518, i32 0, metadata !5007, null}
!9444 = metadata !{i32 520, i32 0, metadata !5007, null}
!9445 = metadata !{i32 522, i32 0, metadata !5007, null}
!9446 = metadata !{i32 521, i32 0, metadata !5007, null}
!9447 = metadata !{i32 525, i32 0, metadata !5005, null}
!9448 = metadata !{i32 526, i32 0, metadata !5005, null}
!9449 = metadata !{i32 529, i32 0, metadata !5005, null}
!9450 = metadata !{i32 530, i32 0, metadata !5005, null}
!9451 = metadata !{i32 533, i32 0, metadata !5005, null}
!9452 = metadata !{i32 534, i32 0, metadata !5005, null}
!9453 = metadata !{i32 536, i32 0, metadata !5005, null}
!9454 = metadata !{i32 462, i32 0, metadata !5005, null}
!9455 = metadata !{i32 832, i32 0, metadata !5013, null}
!9456 = metadata !{i32 833, i32 0, metadata !5013, null}
!9457 = metadata !{i32 835, i32 0, metadata !5013, null}
!9458 = metadata !{i32 838, i32 0, metadata !5013, null}
!9459 = metadata !{i32 840, i32 0, metadata !5013, null}
!9460 = metadata !{i32 843, i32 0, metadata !5013, null}
!9461 = metadata !{i32 846, i32 0, metadata !5013, null}
!9462 = metadata !{i32 837, i32 0, metadata !5013, null}
!9463 = metadata !{i32 848, i32 0, metadata !5013, null}
!9464 = metadata !{i32 882, i32 0, metadata !5023, null}
!9465 = metadata !{i32 883, i32 0, metadata !5023, null}
!9466 = metadata !{i32 885, i32 0, metadata !5023, null}
!9467 = metadata !{i32 886, i32 0, metadata !5023, null}
!9468 = metadata !{i32 854, i32 0, metadata !5031, null}
!9469 = metadata !{i32 855, i32 0, metadata !5031, null}
!9470 = metadata !{i32 857, i32 0, metadata !5031, null}
!9471 = metadata !{i32 858, i32 0, metadata !5031, null}
!9472 = metadata !{i32 156, i32 0, metadata !4530, metadata !9473}
!9473 = metadata !{i32 953, i32 0, metadata !5045, null}
!9474 = metadata !{i32 157, i32 0, metadata !4529, metadata !9473}
!9475 = metadata !{i32 158, i32 0, metadata !4529, metadata !9473}
!9476 = metadata !{i32 955, i32 0, metadata !5045, null}
!9477 = metadata !{i32 956, i32 0, metadata !5045, null}
!9478 = metadata !{i32 957, i32 0, metadata !5045, null}
!9479 = metadata !{i32 960, i32 0, metadata !5045, null}
!9480 = metadata !{i32 961, i32 0, metadata !5045, null}
!9481 = metadata !{i32 962, i32 0, metadata !5045, null}
!9482 = metadata !{i32 963, i32 0, metadata !5045, null}
!9483 = metadata !{i32 964, i32 0, metadata !5045, null}
!9484 = metadata !{i32 967, i32 0, metadata !5045, null}
!9485 = metadata !{i32 916, i32 0, metadata !9486, metadata !9487}
!9486 = metadata !{i32 589835, metadata !3406, i32 915, i32 0, metadata !3075, i32 118} ; [ DW_TAG_lexical_block ]
!9487 = metadata !{i32 968, i32 0, metadata !5045, null}
!9488 = metadata !{i32 917, i32 0, metadata !9486, metadata !9487}
!9489 = metadata !{i32 918, i32 0, metadata !9486, metadata !9487}
!9490 = metadata !{i32 919, i32 0, metadata !9486, metadata !9487}
!9491 = metadata !{i32 921, i32 0, metadata !9486, metadata !9487}
!9492 = metadata !{i32 923, i32 0, metadata !9486, metadata !9487}
!9493 = metadata !{i32 924, i32 0, metadata !9486, metadata !9487}
!9494 = metadata !{i32 970, i32 0, metadata !5047, null}
!9495 = metadata !{i32 971, i32 0, metadata !5047, null}
!9496 = metadata !{i32 972, i32 0, metadata !5047, null}
!9497 = metadata !{i32 57, i32 0, metadata !8881, metadata !9498}
!9498 = metadata !{i32 931, i32 0, metadata !5051, null}
!9499 = metadata !{i32 933, i32 0, metadata !5051, null}
!9500 = metadata !{i32 934, i32 0, metadata !5051, null}
!9501 = metadata !{i32 935, i32 0, metadata !5051, null}
!9502 = metadata !{i32 936, i32 0, metadata !5051, null}
!9503 = metadata !{i32 937, i32 0, metadata !5051, null}
!9504 = metadata !{i32 940, i32 0, metadata !5051, null}
!9505 = metadata !{i32 916, i32 0, metadata !9486, metadata !9506}
!9506 = metadata !{i32 941, i32 0, metadata !5051, null}
!9507 = metadata !{i32 917, i32 0, metadata !9486, metadata !9506}
!9508 = metadata !{i32 918, i32 0, metadata !9486, metadata !9506}
!9509 = metadata !{i32 919, i32 0, metadata !9486, metadata !9506}
!9510 = metadata !{i32 921, i32 0, metadata !9486, metadata !9506}
!9511 = metadata !{i32 923, i32 0, metadata !9486, metadata !9506}
!9512 = metadata !{i32 924, i32 0, metadata !9486, metadata !9506}
!9513 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9514}
!9514 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9515}
!9515 = metadata !{i32 943, i32 0, metadata !5053, null}
!9516 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9514}
!9517 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9515}
!9518 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9515}
!9519 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9515}
!9520 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9515}
!9521 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9515}
!9522 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9515}
!9523 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9515}
!9524 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9515}
!9525 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9515}
!9526 = metadata !{i32 944, i32 0, metadata !5053, null}
!9527 = metadata !{i32 945, i32 0, metadata !5053, null}
!9528 = metadata !{i32 57, i32 0, metadata !8881, metadata !9529}
!9529 = metadata !{i32 772, i32 0, metadata !5057, null}
!9530 = metadata !{i32 773, i32 0, metadata !5057, null}
!9531 = metadata !{i32 774, i32 0, metadata !5057, null}
!9532 = metadata !{i32 775, i32 0, metadata !5057, null}
!9533 = metadata !{i32 778, i32 0, metadata !5057, null}
!9534 = metadata !{i32 779, i32 0, metadata !5057, null}
!9535 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9536}
!9536 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9537}
!9537 = metadata !{i32 782, i32 0, metadata !5060, null}
!9538 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9536}
!9539 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9537}
!9540 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9537}
!9541 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9537}
!9542 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9537}
!9543 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9537}
!9544 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9537}
!9545 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9537}
!9546 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9537}
!9547 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9537}
!9548 = metadata !{i32 786, i32 0, metadata !5060, null}
!9549 = metadata !{i32 787, i32 0, metadata !5060, null}
!9550 = metadata !{i32 788, i32 0, metadata !5060, null}
!9551 = metadata !{i32 789, i32 0, metadata !5060, null}
!9552 = metadata !{i32 57, i32 0, metadata !8881, metadata !9553}
!9553 = metadata !{i32 743, i32 0, metadata !5064, null}
!9554 = metadata !{i32 744, i32 0, metadata !5064, null}
!9555 = metadata !{i32 745, i32 0, metadata !5064, null}
!9556 = metadata !{i32 746, i32 0, metadata !5064, null}
!9557 = metadata !{i32 751, i32 0, metadata !5064, null}
!9558 = metadata !{i32 752, i32 0, metadata !5064, null}
!9559 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9560}
!9560 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9561}
!9561 = metadata !{i32 755, i32 0, metadata !5067, null}
!9562 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9560}
!9563 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9561}
!9564 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9561}
!9565 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9561}
!9566 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9561}
!9567 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9561}
!9568 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9561}
!9569 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9561}
!9570 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9561}
!9571 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9561}
!9572 = metadata !{i32 759, i32 0, metadata !5067, null}
!9573 = metadata !{i32 760, i32 0, metadata !5067, null}
!9574 = metadata !{i32 766, i32 0, metadata !5067, null}
!9575 = metadata !{i32 767, i32 0, metadata !5067, null}
!9576 = metadata !{i32 609, i32 0, metadata !5072, null}
!9577 = metadata !{i32 156, i32 0, metadata !4530, metadata !9578}
!9578 = metadata !{i32 611, i32 0, metadata !5072, null}
!9579 = metadata !{i32 157, i32 0, metadata !4529, metadata !9578}
!9580 = metadata !{i32 158, i32 0, metadata !4529, metadata !9578}
!9581 = metadata !{i32 612, i32 0, metadata !5072, null}
!9582 = metadata !{i32 613, i32 0, metadata !5072, null}
!9583 = metadata !{i32 614, i32 0, metadata !5072, null}
!9584 = metadata !{i32 617, i32 0, metadata !5072, null}
!9585 = metadata !{i32 618, i32 0, metadata !5072, null}
!9586 = metadata !{i32 619, i32 0, metadata !5072, null}
!9587 = metadata !{i32 620, i32 0, metadata !5072, null}
!9588 = metadata !{i32 623, i32 0, metadata !5072, null}
!9589 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9590}
!9590 = metadata !{i32 626, i32 0, metadata !5074, null}
!9591 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9590}
!9592 = metadata !{i32 2027, i32 0, metadata !4976, metadata !9593}
!9593 = metadata !{i32 627, i32 0, metadata !5074, null}
!9594 = metadata !{i32 2028, i32 0, metadata !4976, metadata !9593}
!9595 = metadata !{i32 631, i32 0, metadata !5074, null}
!9596 = metadata !{i32 632, i32 0, metadata !5074, null}
!9597 = metadata !{i32 633, i32 0, metadata !5074, null}
!9598 = metadata !{i32 635, i32 0, metadata !5074, null}
!9599 = metadata !{i32 636, i32 0, metadata !5074, null}
!9600 = metadata !{i32 638, i32 0, metadata !5074, null}
!9601 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9602}
!9602 = metadata !{i32 2057, i32 0, metadata !5035, metadata !9600}
!9603 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9602}
!9604 = metadata !{i32 2060, i32 0, metadata !5035, metadata !9600}
!9605 = metadata !{i32 2061, i32 0, metadata !5038, metadata !9600}
!9606 = metadata !{i32 2062, i32 0, metadata !5038, metadata !9600}
!9607 = metadata !{i32 2063, i32 0, metadata !5038, metadata !9600}
!9608 = metadata !{i32 2064, i32 0, metadata !5038, metadata !9600}
!9609 = metadata !{i32 640, i32 0, metadata !5074, null}
!9610 = metadata !{i32 641, i32 0, metadata !5074, null}
!9611 = metadata !{i32 642, i32 0, metadata !5074, null}
!9612 = metadata !{i32 643, i32 0, metadata !5074, null}
!9613 = metadata !{i32 645, i32 0, metadata !5074, null}
!9614 = metadata !{i32 646, i32 0, metadata !5074, null}
!9615 = metadata !{i32 647, i32 0, metadata !5074, null}
!9616 = metadata !{i32 650, i32 0, metadata !5074, null}
!9617 = metadata !{i32 651, i32 0, metadata !5074, null}
!9618 = metadata !{i32 654, i32 0, metadata !5074, null}
!9619 = metadata !{i32 652, i32 0, metadata !5074, null}
!9620 = metadata !{i32 659, i32 0, metadata !5077, null}
!9621 = metadata !{i32 662, i32 0, metadata !5077, null}
!9622 = metadata !{i32 663, i32 0, metadata !5077, null}
!9623 = metadata !{i32 665, i32 0, metadata !5077, null}
!9624 = metadata !{i32 666, i32 0, metadata !5077, null}
!9625 = metadata !{i32 670, i32 0, metadata !5077, null}
!9626 = metadata !{i32 671, i32 0, metadata !5077, null}
!9627 = metadata !{i32 673, i32 0, metadata !5077, null}
!9628 = metadata !{i32 674, i32 0, metadata !5077, null}
!9629 = metadata !{i32 676, i32 0, metadata !5077, null}
!9630 = metadata !{i32 677, i32 0, metadata !5077, null}
!9631 = metadata !{i32 679, i32 0, metadata !5077, null}
!9632 = metadata !{i32 680, i32 0, metadata !5077, null}
!9633 = metadata !{i32 247, i32 0, metadata !5083, null}
!9634 = metadata !{i32 248, i32 0, metadata !5083, null}
!9635 = metadata !{i32 250, i32 0, metadata !5083, null}
!9636 = metadata !{i32 251, i32 0, metadata !5083, null}
!9637 = metadata !{i32 252, i32 0, metadata !5083, null}
!9638 = metadata !{i32 255, i32 0, metadata !5083, null}
!9639 = metadata !{i32 263, i32 0, metadata !5083, null}
!9640 = metadata !{i32 264, i32 0, metadata !5083, null}
!9641 = metadata !{i32 270, i32 0, metadata !5083, null}
!9642 = metadata !{i32 276, i32 0, metadata !5083, null}
!9643 = metadata !{i32 277, i32 0, metadata !5083, null}
!9644 = metadata !{i32 291, i32 0, metadata !5083, null}
!9645 = metadata !{i32 292, i32 0, metadata !5083, null}
!9646 = metadata !{i32 293, i32 0, metadata !5083, null}
!9647 = metadata !{i32 296, i32 0, metadata !5083, null}
!9648 = metadata !{i32 214, i32 0, metadata !4537, metadata !9647}
!9649 = metadata !{i32 216, i32 0, metadata !4537, metadata !9647}
!9650 = metadata !{i32 233, i32 0, metadata !4537, metadata !9647}
!9651 = metadata !{i32 236, i32 0, metadata !4537, metadata !9647}
!9652 = metadata !{i32 297, i32 0, metadata !5083, null}
!9653 = metadata !{i32 298, i32 0, metadata !5083, null}
!9654 = metadata !{i32 301, i32 0, metadata !5083, null}
!9655 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9656}
!9656 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9657}
!9657 = metadata !{i32 306, i32 0, metadata !5087, null}
!9658 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9656}
!9659 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9657}
!9660 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9657}
!9661 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9657}
!9662 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9657}
!9663 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9657}
!9664 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9657}
!9665 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9657}
!9666 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9657}
!9667 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9657}
!9668 = metadata !{i32 308, i32 0, metadata !5087, null}
!9669 = metadata !{i32 312, i32 0, metadata !5089, null}
!9670 = metadata !{i32 280, i32 0, metadata !9671, metadata !9669}
!9671 = metadata !{i32 589835, metadata !3420, i32 279, i32 0, metadata !3421, i32 130} ; [ DW_TAG_lexical_block ]
!9672 = metadata !{i32 156, i32 0, metadata !4530, metadata !9673}
!9673 = metadata !{i32 313, i32 0, metadata !5089, null}
!9674 = metadata !{i32 157, i32 0, metadata !4529, metadata !9673}
!9675 = metadata !{i32 158, i32 0, metadata !4529, metadata !9673}
!9676 = metadata !{i32 314, i32 0, metadata !5089, null}
!9677 = metadata !{i32 315, i32 0, metadata !5094, null}
!9678 = metadata !{i32 316, i32 0, metadata !5094, null}
!9679 = metadata !{i32 317, i32 0, metadata !5094, null}
!9680 = metadata !{i32 318, i32 0, metadata !5094, null}
!9681 = metadata !{i32 323, i32 0, metadata !5089, null}
!9682 = metadata !{i32 328, i32 0, metadata !5087, null}
!9683 = metadata !{i32 336, i32 0, metadata !5087, null}
!9684 = metadata !{i32 337, i32 0, metadata !5087, null}
!9685 = metadata !{i32 338, i32 0, metadata !5087, null}
!9686 = metadata !{i32 340, i32 0, metadata !5087, null}
!9687 = metadata !{i32 343, i32 0, metadata !5083, null}
!9688 = metadata !{i32 344, i32 0, metadata !5083, null}
!9689 = metadata !{i32 345, i32 0, metadata !5083, null}
!9690 = metadata !{i32 346, i32 0, metadata !5083, null}
!9691 = metadata !{i32 347, i32 0, metadata !5083, null}
!9692 = metadata !{i32 349, i32 0, metadata !5083, null}
!9693 = metadata !{i32 361, i32 0, metadata !5100, null}
!9694 = metadata !{i32 156, i32 0, metadata !4530, metadata !9695}
!9695 = metadata !{i32 362, i32 0, metadata !5104, null}
!9696 = metadata !{i32 157, i32 0, metadata !4529, metadata !9695}
!9697 = metadata !{i32 158, i32 0, metadata !4529, metadata !9695}
!9698 = metadata !{i32 364, i32 0, metadata !5104, null}
!9699 = metadata !{i32 365, i32 0, metadata !5104, null}
!9700 = metadata !{i32 366, i32 0, metadata !5104, null}
!9701 = metadata !{i32 367, i32 0, metadata !5104, null}
!9702 = metadata !{i32 368, i32 0, metadata !5104, null}
!9703 = metadata !{i32 369, i32 0, metadata !5104, null}
!9704 = metadata !{i32 370, i32 0, metadata !5104, null}
!9705 = metadata !{i32 372, i32 0, metadata !5104, null}
!9706 = metadata !{i32 57, i32 0, metadata !8881, metadata !9707}
!9707 = metadata !{i32 375, i32 0, metadata !5100, null}
!9708 = metadata !{i32 377, i32 0, metadata !5100, null}
!9709 = metadata !{i32 381, i32 0, metadata !5100, null}
!9710 = metadata !{i32 380, i32 0, metadata !5100, null}
!9711 = metadata !{i32 383, i32 0, metadata !5100, null}
!9712 = metadata !{i32 384, i32 0, metadata !5100, null}
!9713 = metadata !{i32 385, i32 0, metadata !5100, null}
!9714 = metadata !{i32 388, i32 0, metadata !5100, null}
!9715 = metadata !{i32 391, i32 0, metadata !5100, null}
!9716 = metadata !{i32 393, i32 0, metadata !5100, null}
!9717 = metadata !{i32 2021, i32 0, metadata !4827, metadata !9718}
!9718 = metadata !{i32 2033, i32 0, metadata !4830, metadata !9716}
!9719 = metadata !{i32 2022, i32 0, metadata !4827, metadata !9718}
!9720 = metadata !{i32 2036, i32 0, metadata !4830, metadata !9716}
!9721 = metadata !{i32 2037, i32 0, metadata !4833, metadata !9716}
!9722 = metadata !{i32 2038, i32 0, metadata !4833, metadata !9716}
!9723 = metadata !{i32 2040, i32 0, metadata !4833, metadata !9716}
!9724 = metadata !{i32 2043, i32 0, metadata !4833, metadata !9716}
!9725 = metadata !{i32 2046, i32 0, metadata !4835, metadata !9716}
!9726 = metadata !{i32 2047, i32 0, metadata !4835, metadata !9716}
!9727 = metadata !{i32 2048, i32 0, metadata !4835, metadata !9716}
!9728 = metadata !{i32 2049, i32 0, metadata !4835, metadata !9716}
!9729 = metadata !{i32 394, i32 0, metadata !5100, null}
!9730 = metadata !{i32 395, i32 0, metadata !5100, null}
!9731 = metadata !{i32 396, i32 0, metadata !5100, null}
!9732 = metadata !{i32 399, i32 0, metadata !5100, null}
!9733 = metadata !{i32 400, i32 0, metadata !5100, null}
!9734 = metadata !{i32 401, i32 0, metadata !5100, null}
!9735 = metadata !{i32 402, i32 0, metadata !5100, null}
!9736 = metadata !{i32 404, i32 0, metadata !5100, null}
!9737 = metadata !{i32 406, i32 0, metadata !5100, null}
!9738 = metadata !{i32 45, i32 0, metadata !9739, null}
!9739 = metadata !{i32 589835, metadata !3705, i32 44, i32 0, metadata !3429, i32 52} ; [ DW_TAG_lexical_block ]
!9740 = metadata !{i32 46, i32 0, metadata !9739, null}
!9741 = metadata !{i32 92, i32 0, metadata !9742, null}
!9742 = metadata !{i32 589835, metadata !3702, i32 91, i32 0, metadata !3429, i32 51} ; [ DW_TAG_lexical_block ]
!9743 = metadata !{i32 97, i32 0, metadata !9744, null}
!9744 = metadata !{i32 589835, metadata !3654, i32 96, i32 0, metadata !3429, i32 50} ; [ DW_TAG_lexical_block ]
!9745 = metadata !{i32 145, i32 0, metadata !5257, null}
!9746 = metadata !{i32 147, i32 0, metadata !5257, null}
!9747 = metadata !{i32 148, i32 0, metadata !5257, null}
!9748 = metadata !{i32 149, i32 0, metadata !5257, null}
!9749 = metadata !{i32 151, i32 0, metadata !5257, null}
!9750 = metadata !{i32 164, i32 0, metadata !5299, null}
!9751 = metadata !{i32 165, i32 0, metadata !5299, null}
!9752 = metadata !{i32 166, i32 0, metadata !5299, null}
!9753 = metadata !{i32 167, i32 0, metadata !5299, null}
!9754 = metadata !{i32 172, i32 0, metadata !9755, null}
!9755 = metadata !{i32 589835, metadata !3554, i32 171, i32 0, metadata !3429, i32 11} ; [ DW_TAG_lexical_block ]
!9756 = metadata !{i32 173, i32 0, metadata !9755, null}
!9757 = metadata !{i32 174, i32 0, metadata !9755, null}
!9758 = metadata !{i32 244, i32 0, metadata !5293, null}
!9759 = metadata !{i32 244, i32 0, metadata !5294, null}
!9760 = metadata !{i32 249, i32 0, metadata !9761, null}
!9761 = metadata !{i32 589835, metadata !3428, i32 248, i32 0, metadata !3429, i32 0} ; [ DW_TAG_lexical_block ]
!9762 = metadata !{i32 254, i32 0, metadata !9763, null}
!9763 = metadata !{i32 589835, metadata !3435, i32 253, i32 0, metadata !3429, i32 1} ; [ DW_TAG_lexical_block ]
!9764 = metadata !{i32 259, i32 0, metadata !9765, null}
!9765 = metadata !{i32 589835, metadata !3436, i32 258, i32 0, metadata !3429, i32 2} ; [ DW_TAG_lexical_block ]
!9766 = metadata !{i32 862, i32 0, metadata !9767, null}
!9767 = metadata !{i32 589835, metadata !3514, i32 861, i32 0, metadata !3440, i32 5} ; [ DW_TAG_lexical_block ]
!9768 = metadata !{i32 868, i32 0, metadata !9769, null}
!9769 = metadata !{i32 589835, metadata !3519, i32 867, i32 0, metadata !3440, i32 6} ; [ DW_TAG_lexical_block ]
!9770 = metadata !{i32 839, i32 0, metadata !9771, null}
!9771 = metadata !{i32 589835, metadata !3522, i32 838, i32 0, metadata !3440, i32 7} ; [ DW_TAG_lexical_block ]
!9772 = metadata !{i32 840, i32 0, metadata !9771, null}
!9773 = metadata !{i32 841, i32 0, metadata !9771, null}
!9774 = metadata !{i32 842, i32 0, metadata !9771, null}
!9775 = metadata !{i32 847, i32 0, metadata !9771, null}
!9776 = metadata !{i32 100, i32 0, metadata !9777, metadata !9778}
!9777 = metadata !{i32 589835, metadata !3513, i32 99, i32 0, metadata !3440, i32 4} ; [ DW_TAG_lexical_block ]
!9778 = metadata !{i32 848, i32 0, metadata !9771, null}
!9779 = metadata !{i32 102, i32 0, metadata !9777, metadata !9778}
!9780 = metadata !{i32 849, i32 0, metadata !9771, null}
!9781 = metadata !{i32 851, i32 0, metadata !9771, null}
!9782 = metadata !{i32 852, i32 0, metadata !9771, null}
!9783 = metadata !{i32 853, i32 0, metadata !9771, null}
!9784 = metadata !{i32 593, i32 0, metadata !9785, null}
!9785 = metadata !{i32 589835, metadata !3539, i32 592, i32 0, metadata !3429, i32 8} ; [ DW_TAG_lexical_block ]
!9786 = metadata !{i32 594, i32 0, metadata !9785, null}
!9787 = metadata !{i32 595, i32 0, metadata !9785, null}
!9788 = metadata !{i32 800, i32 0, metadata !5130, null}
!9789 = metadata !{i32 801, i32 0, metadata !5130, null}
!9790 = metadata !{i32 802, i32 0, metadata !5130, null}
!9791 = metadata !{i32 803, i32 0, metadata !5130, null}
!9792 = metadata !{i32 806, i32 0, metadata !5130, null}
!9793 = metadata !{i32 807, i32 0, metadata !5130, null}
!9794 = metadata !{i32 808, i32 0, metadata !5130, null}
!9795 = metadata !{i32 811, i32 0, metadata !5130, null}
!9796 = metadata !{i32 812, i32 0, metadata !5130, null}
!9797 = metadata !{i32 813, i32 0, metadata !5130, null}
!9798 = metadata !{i32 816, i32 0, metadata !5130, null}
!9799 = metadata !{i32 818, i32 0, metadata !5130, null}
!9800 = metadata !{i32 821, i32 0, metadata !5130, null}
!9801 = metadata !{i32 824, i32 0, metadata !5130, null}
!9802 = metadata !{i32 828, i32 0, metadata !5130, null}
!9803 = metadata !{i32 825, i32 0, metadata !5130, null}
!9804 = metadata !{i32 826, i32 0, metadata !5130, null}
!9805 = metadata !{i32 830, i32 0, metadata !5130, null}
!9806 = metadata !{i32 831, i32 0, metadata !5130, null}
!9807 = metadata !{i32 833, i32 0, metadata !5130, null}
!9808 = metadata !{i32 795, i32 0, metadata !9809, null}
!9809 = metadata !{i32 589835, metadata !3581, i32 794, i32 0, metadata !3440, i32 13} ; [ DW_TAG_lexical_block ]
!9810 = metadata !{i32 711, i32 0, metadata !5143, null}
!9811 = metadata !{i32 712, i32 0, metadata !5143, null}
!9812 = metadata !{i32 713, i32 0, metadata !5143, null}
!9813 = metadata !{i32 716, i32 0, metadata !5143, null}
!9814 = metadata !{i32 717, i32 0, metadata !5143, null}
!9815 = metadata !{i32 719, i32 0, metadata !5143, null}
!9816 = metadata !{i32 720, i32 0, metadata !5143, null}
!9817 = metadata !{i32 721, i32 0, metadata !5143, null}
!9818 = metadata !{i32 722, i32 0, metadata !5143, null}
!9819 = metadata !{i32 723, i32 0, metadata !5143, null}
!9820 = metadata !{i32 724, i32 0, metadata !5143, null}
!9821 = metadata !{i32 725, i32 0, metadata !5143, null}
!9822 = metadata !{i32 727, i32 0, metadata !5143, null}
!9823 = metadata !{i32 729, i32 0, metadata !5143, null}
!9824 = metadata !{i32 711, i32 0, metadata !5143, metadata !9825}
!9825 = metadata !{i32 702, i32 0, metadata !9826, null}
!9826 = metadata !{i32 589835, metadata !3593, i32 701, i32 0, metadata !3440, i32 15} ; [ DW_TAG_lexical_block ]
!9827 = metadata !{i32 712, i32 0, metadata !5143, metadata !9825}
!9828 = metadata !{i32 713, i32 0, metadata !5143, metadata !9825}
!9829 = metadata !{i32 716, i32 0, metadata !5143, metadata !9825}
!9830 = metadata !{i32 717, i32 0, metadata !5143, metadata !9825}
!9831 = metadata !{i32 719, i32 0, metadata !5143, metadata !9825}
!9832 = metadata !{i32 720, i32 0, metadata !5143, metadata !9825}
!9833 = metadata !{i32 721, i32 0, metadata !5143, metadata !9825}
!9834 = metadata !{i32 722, i32 0, metadata !5143, metadata !9825}
!9835 = metadata !{i32 723, i32 0, metadata !5143, metadata !9825}
!9836 = metadata !{i32 724, i32 0, metadata !5143, metadata !9825}
!9837 = metadata !{i32 725, i32 0, metadata !5143, metadata !9825}
!9838 = metadata !{i32 727, i32 0, metadata !5143, metadata !9825}
!9839 = metadata !{i32 729, i32 0, metadata !5143, metadata !9825}
!9840 = metadata !{i32 716, i32 0, metadata !5143, metadata !9841}
!9841 = metadata !{i32 673, i32 0, metadata !9842, null}
!9842 = metadata !{i32 589835, metadata !3594, i32 672, i32 0, metadata !3440, i32 16} ; [ DW_TAG_lexical_block ]
!9843 = metadata !{i32 717, i32 0, metadata !5143, metadata !9841}
!9844 = metadata !{i32 719, i32 0, metadata !5143, metadata !9841}
!9845 = metadata !{i32 720, i32 0, metadata !5143, metadata !9841}
!9846 = metadata !{i32 721, i32 0, metadata !5143, metadata !9841}
!9847 = metadata !{i32 722, i32 0, metadata !5143, metadata !9841}
!9848 = metadata !{i32 723, i32 0, metadata !5143, metadata !9841}
!9849 = metadata !{i32 724, i32 0, metadata !5143, metadata !9841}
!9850 = metadata !{i32 725, i32 0, metadata !5143, metadata !9841}
!9851 = metadata !{i32 727, i32 0, metadata !5143, metadata !9841}
!9852 = metadata !{i32 716, i32 0, metadata !5143, metadata !9853}
!9853 = metadata !{i32 673, i32 0, metadata !9842, metadata !9854}
!9854 = metadata !{i32 668, i32 0, metadata !9855, null}
!9855 = metadata !{i32 589835, metadata !3597, i32 667, i32 0, metadata !3440, i32 17} ; [ DW_TAG_lexical_block ]
!9856 = metadata !{i32 717, i32 0, metadata !5143, metadata !9853}
!9857 = metadata !{i32 719, i32 0, metadata !5143, metadata !9853}
!9858 = metadata !{i32 720, i32 0, metadata !5143, metadata !9853}
!9859 = metadata !{i32 721, i32 0, metadata !5143, metadata !9853}
!9860 = metadata !{i32 722, i32 0, metadata !5143, metadata !9853}
!9861 = metadata !{i32 723, i32 0, metadata !5143, metadata !9853}
!9862 = metadata !{i32 724, i32 0, metadata !5143, metadata !9853}
!9863 = metadata !{i32 725, i32 0, metadata !5143, metadata !9853}
!9864 = metadata !{i32 727, i32 0, metadata !5143, metadata !9853}
!9865 = metadata !{i32 741, i32 0, metadata !5164, null}
!9866 = metadata !{i32 742, i32 0, metadata !5164, null}
!9867 = metadata !{i32 743, i32 0, metadata !5164, null}
!9868 = metadata !{i32 744, i32 0, metadata !5164, null}
!9869 = metadata !{i32 747, i32 0, metadata !5164, null}
!9870 = metadata !{i32 748, i32 0, metadata !5164, null}
!9871 = metadata !{i32 749, i32 0, metadata !5164, null}
!9872 = metadata !{i32 752, i32 0, metadata !5164, null}
!9873 = metadata !{i32 753, i32 0, metadata !5164, null}
!9874 = metadata !{i32 754, i32 0, metadata !5164, null}
!9875 = metadata !{i32 757, i32 0, metadata !5164, null}
!9876 = metadata !{i32 759, i32 0, metadata !5164, null}
!9877 = metadata !{i32 762, i32 0, metadata !5164, null}
!9878 = metadata !{i32 763, i32 0, metadata !5164, null}
!9879 = metadata !{i32 764, i32 0, metadata !5164, null}
!9880 = metadata !{i32 765, i32 0, metadata !5164, null}
!9881 = metadata !{i32 766, i32 0, metadata !5164, null}
!9882 = metadata !{i32 770, i32 0, metadata !5164, null}
!9883 = metadata !{i32 771, i32 0, metadata !5164, null}
!9884 = metadata !{i32 772, i32 0, metadata !5164, null}
!9885 = metadata !{i32 775, i32 0, metadata !5164, null}
!9886 = metadata !{i32 776, i32 0, metadata !5164, null}
!9887 = metadata !{i32 777, i32 0, metadata !5164, null}
!9888 = metadata !{i32 781, i32 0, metadata !5164, null}
!9889 = metadata !{i32 782, i32 0, metadata !5164, null}
!9890 = metadata !{i32 786, i32 0, metadata !5164, null}
!9891 = metadata !{i32 787, i32 0, metadata !5164, null}
!9892 = metadata !{i32 789, i32 0, metadata !5164, null}
!9893 = metadata !{i32 736, i32 0, metadata !9894, null}
!9894 = metadata !{i32 589835, metadata !3603, i32 735, i32 0, metadata !3440, i32 19} ; [ DW_TAG_lexical_block ]
!9895 = metadata !{i32 686, i32 0, metadata !5175, null}
!9896 = metadata !{i32 687, i32 0, metadata !5175, null}
!9897 = metadata !{i32 689, i32 0, metadata !5175, null}
!9898 = metadata !{i32 690, i32 0, metadata !5175, null}
!9899 = metadata !{i32 691, i32 0, metadata !5175, null}
!9900 = metadata !{i32 692, i32 0, metadata !5175, null}
!9901 = metadata !{i32 693, i32 0, metadata !5175, null}
!9902 = metadata !{i32 694, i32 0, metadata !5175, null}
!9903 = metadata !{i32 695, i32 0, metadata !5175, null}
!9904 = metadata !{i32 697, i32 0, metadata !5175, null}
!9905 = metadata !{i32 686, i32 0, metadata !5175, metadata !9906}
!9906 = metadata !{i32 678, i32 0, metadata !9907, null}
!9907 = metadata !{i32 589835, metadata !3609, i32 677, i32 0, metadata !3440, i32 21} ; [ DW_TAG_lexical_block ]
!9908 = metadata !{i32 687, i32 0, metadata !5175, metadata !9906}
!9909 = metadata !{i32 689, i32 0, metadata !5175, metadata !9906}
!9910 = metadata !{i32 690, i32 0, metadata !5175, metadata !9906}
!9911 = metadata !{i32 691, i32 0, metadata !5175, metadata !9906}
!9912 = metadata !{i32 692, i32 0, metadata !5175, metadata !9906}
!9913 = metadata !{i32 693, i32 0, metadata !5175, metadata !9906}
!9914 = metadata !{i32 694, i32 0, metadata !5175, metadata !9906}
!9915 = metadata !{i32 695, i32 0, metadata !5175, metadata !9906}
!9916 = metadata !{i32 697, i32 0, metadata !5175, metadata !9906}
!9917 = metadata !{i32 686, i32 0, metadata !5175, metadata !9918}
!9918 = metadata !{i32 664, i32 0, metadata !9919, null}
!9919 = metadata !{i32 589835, metadata !3610, i32 663, i32 0, metadata !3440, i32 22} ; [ DW_TAG_lexical_block ]
!9920 = metadata !{i32 687, i32 0, metadata !5175, metadata !9918}
!9921 = metadata !{i32 689, i32 0, metadata !5175, metadata !9918}
!9922 = metadata !{i32 690, i32 0, metadata !5175, metadata !9918}
!9923 = metadata !{i32 691, i32 0, metadata !5175, metadata !9918}
!9924 = metadata !{i32 692, i32 0, metadata !5175, metadata !9918}
!9925 = metadata !{i32 693, i32 0, metadata !5175, metadata !9918}
!9926 = metadata !{i32 694, i32 0, metadata !5175, metadata !9918}
!9927 = metadata !{i32 695, i32 0, metadata !5175, metadata !9918}
!9928 = metadata !{i32 697, i32 0, metadata !5175, metadata !9918}
!9929 = metadata !{i32 686, i32 0, metadata !5175, metadata !9930}
!9930 = metadata !{i32 664, i32 0, metadata !9919, metadata !9931}
!9931 = metadata !{i32 659, i32 0, metadata !9932, null}
!9932 = metadata !{i32 589835, metadata !3611, i32 658, i32 0, metadata !3440, i32 23} ; [ DW_TAG_lexical_block ]
!9933 = metadata !{i32 687, i32 0, metadata !5175, metadata !9930}
!9934 = metadata !{i32 689, i32 0, metadata !5175, metadata !9930}
!9935 = metadata !{i32 690, i32 0, metadata !5175, metadata !9930}
!9936 = metadata !{i32 691, i32 0, metadata !5175, metadata !9930}
!9937 = metadata !{i32 692, i32 0, metadata !5175, metadata !9930}
!9938 = metadata !{i32 693, i32 0, metadata !5175, metadata !9930}
!9939 = metadata !{i32 694, i32 0, metadata !5175, metadata !9930}
!9940 = metadata !{i32 695, i32 0, metadata !5175, metadata !9930}
!9941 = metadata !{i32 697, i32 0, metadata !5175, metadata !9930}
!9942 = metadata !{i32 616, i32 0, metadata !5194, null}
!9943 = metadata !{i32 618, i32 0, metadata !5194, null}
!9944 = metadata !{i32 619, i32 0, metadata !5194, null}
!9945 = metadata !{i32 620, i32 0, metadata !5194, null}
!9946 = metadata !{i32 623, i32 0, metadata !5194, null}
!9947 = metadata !{i32 624, i32 0, metadata !5194, null}
!9948 = metadata !{i32 625, i32 0, metadata !5194, null}
!9949 = metadata !{i32 628, i32 0, metadata !5194, null}
!9950 = metadata !{i32 631, i32 0, metadata !5194, null}
!9951 = metadata !{i32 633, i32 0, metadata !5194, null}
!9952 = metadata !{i32 635, i32 0, metadata !5194, null}
!9953 = metadata !{i32 637, i32 0, metadata !5194, null}
!9954 = metadata !{i32 639, i32 0, metadata !5194, null}
!9955 = metadata !{i32 640, i32 0, metadata !5194, null}
!9956 = metadata !{i32 647, i32 0, metadata !5196, null}
!9957 = metadata !{i32 648, i32 0, metadata !5196, null}
!9958 = metadata !{i32 649, i32 0, metadata !5196, null}
!9959 = metadata !{i32 650, i32 0, metadata !5196, null}
!9960 = metadata !{i32 610, i32 0, metadata !5199, null}
!9961 = metadata !{i32 611, i32 0, metadata !5199, null}
!9962 = metadata !{i32 612, i32 0, metadata !5199, null}
!9963 = metadata !{i32 573, i32 0, metadata !5205, null}
!9964 = metadata !{i32 575, i32 0, metadata !5205, null}
!9965 = metadata !{i32 576, i32 0, metadata !5205, null}
!9966 = metadata !{i32 577, i32 0, metadata !5205, null}
!9967 = metadata !{i32 580, i32 0, metadata !5205, null}
!9968 = metadata !{i32 581, i32 0, metadata !5205, null}
!9969 = metadata !{i32 582, i32 0, metadata !5205, null}
!9970 = metadata !{i32 585, i32 0, metadata !5205, null}
!9971 = metadata !{i32 587, i32 0, metadata !5205, null}
!9972 = metadata !{i32 588, i32 0, metadata !5205, null}
!9973 = metadata !{i32 589, i32 0, metadata !5205, null}
!9974 = metadata !{i32 590, i32 0, metadata !5205, null}
!9975 = metadata !{i32 592, i32 0, metadata !5205, null}
!9976 = metadata !{i32 593, i32 0, metadata !5205, null}
!9977 = metadata !{i32 598, i32 0, metadata !5205, null}
!9978 = metadata !{i32 599, i32 0, metadata !5205, null}
!9979 = metadata !{i32 600, i32 0, metadata !5205, null}
!9980 = metadata !{i32 601, i32 0, metadata !5205, null}
!9981 = metadata !{i32 565, i32 0, metadata !5209, null}
!9982 = metadata !{i32 566, i32 0, metadata !5209, null}
!9983 = metadata !{i32 567, i32 0, metadata !5209, null}
!9984 = metadata !{i32 568, i32 0, metadata !5209, null}
!9985 = metadata !{i32 528, i32 0, metadata !5216, null}
!9986 = metadata !{i32 531, i32 0, metadata !5216, null}
!9987 = metadata !{i32 532, i32 0, metadata !5216, null}
!9988 = metadata !{i32 533, i32 0, metadata !5216, null}
!9989 = metadata !{i32 536, i32 0, metadata !5216, null}
!9990 = metadata !{i32 537, i32 0, metadata !5216, null}
!9991 = metadata !{i32 538, i32 0, metadata !5216, null}
!9992 = metadata !{i32 541, i32 0, metadata !5216, null}
!9993 = metadata !{i32 543, i32 0, metadata !5216, null}
!9994 = metadata !{i32 544, i32 0, metadata !5216, null}
!9995 = metadata !{i32 545, i32 0, metadata !5216, null}
!9996 = metadata !{i32 546, i32 0, metadata !5216, null}
!9997 = metadata !{i32 548, i32 0, metadata !5216, null}
!9998 = metadata !{i32 549, i32 0, metadata !5216, null}
!9999 = metadata !{i32 552, i32 0, metadata !5216, null}
!10000 = metadata !{i32 553, i32 0, metadata !5216, null}
!10001 = metadata !{i32 554, i32 0, metadata !5216, null}
!10002 = metadata !{i32 555, i32 0, metadata !5216, null}
!10003 = metadata !{i32 520, i32 0, metadata !5220, null}
!10004 = metadata !{i32 521, i32 0, metadata !5220, null}
!10005 = metadata !{i32 522, i32 0, metadata !5220, null}
!10006 = metadata !{i32 524, i32 0, metadata !5220, null}
!10007 = metadata !{i32 377, i32 0, metadata !5226, null}
!10008 = metadata !{i32 379, i32 0, metadata !5226, null}
!10009 = metadata !{i32 380, i32 0, metadata !5226, null}
!10010 = metadata !{i32 381, i32 0, metadata !5226, null}
!10011 = metadata !{i32 384, i32 0, metadata !5226, null}
!10012 = metadata !{i32 385, i32 0, metadata !5226, null}
!10013 = metadata !{i32 386, i32 0, metadata !5226, null}
!10014 = metadata !{i32 389, i32 0, metadata !5226, null}
!10015 = metadata !{i32 390, i32 0, metadata !5226, null}
!10016 = metadata !{i32 391, i32 0, metadata !5226, null}
!10017 = metadata !{i32 394, i32 0, metadata !5226, null}
!10018 = metadata !{i32 398, i32 0, metadata !5226, null}
!10019 = metadata !{i32 399, i32 0, metadata !5226, null}
!10020 = metadata !{i32 400, i32 0, metadata !5226, null}
!10021 = metadata !{i32 404, i32 0, metadata !5226, null}
!10022 = metadata !{i32 406, i32 0, metadata !5226, null}
!10023 = metadata !{i32 369, i32 0, metadata !5230, null}
!10024 = metadata !{i32 370, i32 0, metadata !5230, null}
!10025 = metadata !{i32 372, i32 0, metadata !5230, null}
!10026 = metadata !{i32 321, i32 0, metadata !5236, null}
!10027 = metadata !{i32 323, i32 0, metadata !5236, null}
!10028 = metadata !{i32 324, i32 0, metadata !5236, null}
!10029 = metadata !{i32 325, i32 0, metadata !5236, null}
!10030 = metadata !{i32 328, i32 0, metadata !5236, null}
!10031 = metadata !{i32 329, i32 0, metadata !5236, null}
!10032 = metadata !{i32 330, i32 0, metadata !5236, null}
!10033 = metadata !{i32 333, i32 0, metadata !5236, null}
!10034 = metadata !{i32 335, i32 0, metadata !5236, null}
!10035 = metadata !{i32 336, i32 0, metadata !5236, null}
!10036 = metadata !{i32 337, i32 0, metadata !5236, null}
!10037 = metadata !{i32 338, i32 0, metadata !5236, null}
!10038 = metadata !{i32 339, i32 0, metadata !5236, null}
!10039 = metadata !{i32 341, i32 0, metadata !5236, null}
!10040 = metadata !{i32 342, i32 0, metadata !5236, null}
!10041 = metadata !{i32 343, i32 0, metadata !5236, null}
!10042 = metadata !{i32 345, i32 0, metadata !5236, null}
!10043 = metadata !{i32 346, i32 0, metadata !5236, null}
!10044 = metadata !{i32 348, i32 0, metadata !5236, null}
!10045 = metadata !{i32 352, i32 0, metadata !5236, null}
!10046 = metadata !{i32 364, i32 0, metadata !5236, null}
!10047 = metadata !{i32 357, i32 0, metadata !5236, null}
!10048 = metadata !{i32 358, i32 0, metadata !5236, null}
!10049 = metadata !{i32 359, i32 0, metadata !5236, null}
!10050 = metadata !{i32 313, i32 0, metadata !5240, null}
!10051 = metadata !{i32 314, i32 0, metadata !5240, null}
!10052 = metadata !{i32 315, i32 0, metadata !5240, null}
!10053 = metadata !{i32 316, i32 0, metadata !5240, null}
!10054 = metadata !{i32 269, i32 0, metadata !5247, null}
!10055 = metadata !{i32 271, i32 0, metadata !5247, null}
!10056 = metadata !{i32 272, i32 0, metadata !5247, null}
!10057 = metadata !{i32 273, i32 0, metadata !5247, null}
!10058 = metadata !{i32 276, i32 0, metadata !5247, null}
!10059 = metadata !{i32 277, i32 0, metadata !5247, null}
!10060 = metadata !{i32 278, i32 0, metadata !5247, null}
!10061 = metadata !{i32 281, i32 0, metadata !5247, null}
!10062 = metadata !{i32 283, i32 0, metadata !5247, null}
!10063 = metadata !{i32 284, i32 0, metadata !5247, null}
!10064 = metadata !{i32 285, i32 0, metadata !5247, null}
!10065 = metadata !{i32 286, i32 0, metadata !5247, null}
!10066 = metadata !{i32 288, i32 0, metadata !5247, null}
!10067 = metadata !{i32 289, i32 0, metadata !5247, null}
!10068 = metadata !{i32 290, i32 0, metadata !5247, null}
!10069 = metadata !{i32 293, i32 0, metadata !5247, null}
!10070 = metadata !{i32 294, i32 0, metadata !5247, null}
!10071 = metadata !{i32 302, i32 0, metadata !5247, null}
!10072 = metadata !{i32 303, i32 0, metadata !5247, null}
!10073 = metadata !{i32 304, i32 0, metadata !5247, null}
!10074 = metadata !{i32 260, i32 0, metadata !5251, null}
!10075 = metadata !{i32 261, i32 0, metadata !5251, null}
!10076 = metadata !{i32 262, i32 0, metadata !5251, null}
!10077 = metadata !{i32 264, i32 0, metadata !5251, null}
!10078 = metadata !{i32 107, i32 0, metadata !10079, null}
!10079 = metadata !{i32 589835, metadata !3636, i32 106, i32 0, metadata !3440, i32 38} ; [ DW_TAG_lexical_block ]
!10080 = metadata !{i32 108, i32 0, metadata !10079, null}
!10081 = metadata !{i32 117, i32 0, metadata !10079, null}
!10082 = metadata !{i32 120, i32 0, metadata !10079, null}
!10083 = metadata !{i32 123, i32 0, metadata !10079, null}
!10084 = metadata !{i32 127, i32 0, metadata !10079, null}
!10085 = metadata !{i32 416, i32 0, metadata !5264, null}
!10086 = metadata !{i32 418, i32 0, metadata !5264, null}
!10087 = metadata !{i32 419, i32 0, metadata !5264, null}
!10088 = metadata !{i32 420, i32 0, metadata !5264, null}
!10089 = metadata !{i32 423, i32 0, metadata !5264, null}
!10090 = metadata !{i32 424, i32 0, metadata !5264, null}
!10091 = metadata !{i32 425, i32 0, metadata !5264, null}
!10092 = metadata !{i32 428, i32 0, metadata !5264, null}
!10093 = metadata !{i32 429, i32 0, metadata !5264, null}
!10094 = metadata !{i32 430, i32 0, metadata !5264, null}
!10095 = metadata !{i32 433, i32 0, metadata !5264, null}
!10096 = metadata !{i32 434, i32 0, metadata !5264, null}
!10097 = metadata !{i32 435, i32 0, metadata !5264, null}
!10098 = metadata !{i32 446, i32 0, metadata !5264, null}
!10099 = metadata !{i32 448, i32 0, metadata !5264, null}
!10100 = metadata !{i32 449, i32 0, metadata !5264, null}
!10101 = metadata !{i32 450, i32 0, metadata !5264, null}
!10102 = metadata !{i32 452, i32 0, metadata !5264, null}
!10103 = metadata !{i32 93, i32 0, metadata !10104, metadata !10102}
!10104 = metadata !{i32 589835, metadata !3439, i32 88, i32 0, metadata !3440, i32 3} ; [ DW_TAG_lexical_block ]
!10105 = metadata !{i32 95, i32 0, metadata !10104, metadata !10102}
!10106 = metadata !{i32 453, i32 0, metadata !5264, null}
!10107 = metadata !{i32 454, i32 0, metadata !5264, null}
!10108 = metadata !{i32 455, i32 0, metadata !5264, null}
!10109 = metadata !{i32 456, i32 0, metadata !5264, null}
!10110 = metadata !{i32 457, i32 0, metadata !5264, null}
!10111 = metadata !{i32 461, i32 0, metadata !5264, null}
!10112 = metadata !{i32 462, i32 0, metadata !5264, null}
!10113 = metadata !{i32 463, i32 0, metadata !5264, null}
!10114 = metadata !{i32 464, i32 0, metadata !5264, null}
!10115 = metadata !{i32 465, i32 0, metadata !5264, null}
!10116 = metadata !{i32 470, i32 0, metadata !5264, null}
!10117 = metadata !{i32 471, i32 0, metadata !5264, null}
!10118 = metadata !{i32 474, i32 0, metadata !5264, null}
!10119 = metadata !{i32 477, i32 0, metadata !5264, null}
!10120 = metadata !{i32 478, i32 0, metadata !5264, null}
!10121 = metadata !{i32 479, i32 0, metadata !5264, null}
!10122 = metadata !{i32 480, i32 0, metadata !5264, null}
!10123 = metadata !{i32 481, i32 0, metadata !5264, null}
!10124 = metadata !{i32 482, i32 0, metadata !5264, null}
!10125 = metadata !{i32 483, i32 0, metadata !5264, null}
!10126 = metadata !{i32 484, i32 0, metadata !5264, null}
!10127 = metadata !{i32 485, i32 0, metadata !5264, null}
!10128 = metadata !{i32 487, i32 0, metadata !5264, null}
!10129 = metadata !{i32 488, i32 0, metadata !5264, null}
!10130 = metadata !{i32 491, i32 0, metadata !5264, null}
!10131 = metadata !{i32 496, i32 0, metadata !5264, null}
!10132 = metadata !{i32 499, i32 0, metadata !5268, null}
!10133 = metadata !{i32 500, i32 0, metadata !5268, null}
!10134 = metadata !{i32 501, i32 0, metadata !5268, null}
!10135 = metadata !{i32 502, i32 0, metadata !5268, null}
!10136 = metadata !{i32 504, i32 0, metadata !5268, null}
!10137 = metadata !{i32 505, i32 0, metadata !5268, null}
!10138 = metadata !{i32 506, i32 0, metadata !5268, null}
!10139 = metadata !{i32 507, i32 0, metadata !5268, null}
!10140 = metadata !{i32 508, i32 0, metadata !5268, null}
!10141 = metadata !{i32 510, i32 0, metadata !5268, null}
!10142 = metadata !{i32 511, i32 0, metadata !5268, null}
!10143 = metadata !{i32 512, i32 0, metadata !5268, null}
!10144 = metadata !{i32 513, i32 0, metadata !5268, null}
!10145 = metadata !{i32 410, i32 0, metadata !10146, null}
!10146 = metadata !{i32 589835, metadata !3640, i32 409, i32 0, metadata !3440, i32 41} ; [ DW_TAG_lexical_block ]
!10147 = metadata !{i32 145, i32 0, metadata !5278, null}
!10148 = metadata !{i32 146, i32 0, metadata !5281, null}
!10149 = metadata !{i32 147, i32 0, metadata !5281, null}
!10150 = metadata !{i32 148, i32 0, metadata !5281, null}
!10151 = metadata !{i32 149, i32 0, metadata !5281, null}
!10152 = metadata !{i32 150, i32 0, metadata !5281, null}
!10153 = metadata !{i32 153, i32 0, metadata !5281, null}
!10154 = metadata !{i32 154, i32 0, metadata !5281, null}
!10155 = metadata !{i32 155, i32 0, metadata !5281, null}
!10156 = metadata !{i32 156, i32 0, metadata !5281, null}
!10157 = metadata !{i32 157, i32 0, metadata !5281, null}
!10158 = metadata !{i32 159, i32 0, metadata !5281, null}
!10159 = metadata !{i32 160, i32 0, metadata !5281, null}
!10160 = metadata !{i32 161, i32 0, metadata !5281, null}
!10161 = metadata !{i32 163, i32 0, metadata !5281, null}
!10162 = metadata !{i32 166, i32 0, metadata !5278, null}
!10163 = metadata !{i32 171, i32 0, metadata !5278, null}
!10164 = metadata !{i32 174, i32 0, metadata !5278, null}
!10165 = metadata !{i32 175, i32 0, metadata !5278, null}
!10166 = metadata !{i32 176, i32 0, metadata !5278, null}
!10167 = metadata !{i32 178, i32 0, metadata !5278, null}
!10168 = metadata !{i32 179, i32 0, metadata !5278, null}
!10169 = metadata !{i32 180, i32 0, metadata !5278, null}
!10170 = metadata !{i32 181, i32 0, metadata !5278, null}
!10171 = metadata !{i32 184, i32 0, metadata !5278, null}
!10172 = metadata !{i32 185, i32 0, metadata !5278, null}
!10173 = metadata !{i32 186, i32 0, metadata !5278, null}
!10174 = metadata !{i32 187, i32 0, metadata !5278, null}
!10175 = metadata !{i32 188, i32 0, metadata !5278, null}
!10176 = metadata !{i32 189, i32 0, metadata !5278, null}
!10177 = metadata !{i32 192, i32 0, metadata !5278, null}
!10178 = metadata !{i32 193, i32 0, metadata !5278, null}
!10179 = metadata !{i32 194, i32 0, metadata !5278, null}
!10180 = metadata !{i32 195, i32 0, metadata !5278, null}
!10181 = metadata !{i32 196, i32 0, metadata !5278, null}
!10182 = metadata !{i32 197, i32 0, metadata !5278, null}
!10183 = metadata !{i32 200, i32 0, metadata !5278, null}
!10184 = metadata !{i32 201, i32 0, metadata !5278, null}
!10185 = metadata !{i32 204, i32 0, metadata !5278, null}
!10186 = metadata !{i32 211, i32 0, metadata !5278, null}
!10187 = metadata !{i32 212, i32 0, metadata !5278, null}
!10188 = metadata !{i32 213, i32 0, metadata !5278, null}
!10189 = metadata !{i32 215, i32 0, metadata !5278, null}
!10190 = metadata !{i32 216, i32 0, metadata !5278, null}
!10191 = metadata !{i32 217, i32 0, metadata !5278, null}
!10192 = metadata !{i32 218, i32 0, metadata !5278, null}
!10193 = metadata !{i32 221, i32 0, metadata !5278, null}
!10194 = metadata !{i32 222, i32 0, metadata !5278, null}
!10195 = metadata !{i32 223, i32 0, metadata !5278, null}
!10196 = metadata !{i32 224, i32 0, metadata !5278, null}
!10197 = metadata !{i32 225, i32 0, metadata !5278, null}
!10198 = metadata !{i32 226, i32 0, metadata !5278, null}
!10199 = metadata !{i32 229, i32 0, metadata !5278, null}
!10200 = metadata !{i32 230, i32 0, metadata !5278, null}
!10201 = metadata !{i32 231, i32 0, metadata !5278, null}
!10202 = metadata !{i32 232, i32 0, metadata !5278, null}
!10203 = metadata !{i32 233, i32 0, metadata !5278, null}
!10204 = metadata !{i32 234, i32 0, metadata !5278, null}
!10205 = metadata !{i32 237, i32 0, metadata !5278, null}
!10206 = metadata !{i32 238, i32 0, metadata !5278, null}
!10207 = metadata !{i32 243, i32 0, metadata !5278, null}
!10208 = metadata !{i32 244, i32 0, metadata !5278, null}
!10209 = metadata !{i32 245, i32 0, metadata !5278, null}
!10210 = metadata !{i32 251, i32 0, metadata !5278, null}
!10211 = metadata !{i32 252, i32 0, metadata !5278, null}
!10212 = metadata !{i32 253, i32 0, metadata !5278, null}
!10213 = metadata !{i32 134, i32 0, metadata !5284, null}
!10214 = metadata !{i32 135, i32 0, metadata !5284, null}
!10215 = metadata !{i32 136, i32 0, metadata !5284, null}
!10216 = metadata !{i32 138, i32 0, metadata !5284, null}
!10217 = metadata !{i32 26, i32 0, metadata !10218, null}
!10218 = metadata !{i32 589835, metadata !3645, i32 25, i32 0, metadata !3440, i32 45} ; [ DW_TAG_lexical_block ]
!10219 = metadata !{i32 134, i32 0, metadata !5284, metadata !10220}
!10220 = metadata !{i32 28, i32 0, metadata !10218, null}
!10221 = metadata !{i32 135, i32 0, metadata !5284, metadata !10220}
!10222 = metadata !{i32 136, i32 0, metadata !5284, metadata !10220}
!10223 = metadata !{i32 138, i32 0, metadata !5284, metadata !10220}
!10224 = metadata !{i32 260, i32 0, metadata !5251, metadata !10225}
!10225 = metadata !{i32 30, i32 0, metadata !10218, null}
!10226 = metadata !{i32 261, i32 0, metadata !5251, metadata !10225}
!10227 = metadata !{i32 262, i32 0, metadata !5251, metadata !10225}
!10228 = metadata !{i32 264, i32 0, metadata !5251, metadata !10225}
!10229 = metadata !{i32 313, i32 0, metadata !5240, metadata !10230}
!10230 = metadata !{i32 32, i32 0, metadata !10218, null}
!10231 = metadata !{i32 314, i32 0, metadata !5240, metadata !10230}
!10232 = metadata !{i32 315, i32 0, metadata !5240, metadata !10230}
!10233 = metadata !{i32 316, i32 0, metadata !5240, metadata !10230}
!10234 = metadata !{i32 369, i32 0, metadata !5230, metadata !10235}
!10235 = metadata !{i32 34, i32 0, metadata !10218, null}
!10236 = metadata !{i32 370, i32 0, metadata !5230, metadata !10235}
!10237 = metadata !{i32 372, i32 0, metadata !5230, metadata !10235}
!10238 = metadata !{i32 36, i32 0, metadata !10218, null}
!10239 = metadata !{i32 520, i32 0, metadata !5220, metadata !10240}
!10240 = metadata !{i32 38, i32 0, metadata !10218, null}
!10241 = metadata !{i32 521, i32 0, metadata !5220, metadata !10240}
!10242 = metadata !{i32 522, i32 0, metadata !5220, metadata !10240}
!10243 = metadata !{i32 524, i32 0, metadata !5220, metadata !10240}
!10244 = metadata !{i32 565, i32 0, metadata !5209, metadata !10245}
!10245 = metadata !{i32 40, i32 0, metadata !10218, null}
!10246 = metadata !{i32 566, i32 0, metadata !5209, metadata !10245}
!10247 = metadata !{i32 567, i32 0, metadata !5209, metadata !10245}
!10248 = metadata !{i32 568, i32 0, metadata !5209, metadata !10245}
!10249 = metadata !{i32 44, i32 0, metadata !10218, null}
!10250 = metadata !{i32 686, i32 0, metadata !5175, metadata !10251}
!10251 = metadata !{i32 664, i32 0, metadata !9919, metadata !10249}
!10252 = metadata !{i32 687, i32 0, metadata !5175, metadata !10251}
!10253 = metadata !{i32 689, i32 0, metadata !5175, metadata !10251}
!10254 = metadata !{i32 690, i32 0, metadata !5175, metadata !10251}
!10255 = metadata !{i32 691, i32 0, metadata !5175, metadata !10251}
!10256 = metadata !{i32 692, i32 0, metadata !5175, metadata !10251}
!10257 = metadata !{i32 693, i32 0, metadata !5175, metadata !10251}
!10258 = metadata !{i32 694, i32 0, metadata !5175, metadata !10251}
!10259 = metadata !{i32 695, i32 0, metadata !5175, metadata !10251}
!10260 = metadata !{i32 697, i32 0, metadata !5175, metadata !10251}
!10261 = metadata !{i32 46, i32 0, metadata !10218, null}
!10262 = metadata !{i32 716, i32 0, metadata !5143, metadata !10263}
!10263 = metadata !{i32 673, i32 0, metadata !9842, metadata !10261}
!10264 = metadata !{i32 717, i32 0, metadata !5143, metadata !10263}
!10265 = metadata !{i32 719, i32 0, metadata !5143, metadata !10263}
!10266 = metadata !{i32 720, i32 0, metadata !5143, metadata !10263}
!10267 = metadata !{i32 721, i32 0, metadata !5143, metadata !10263}
!10268 = metadata !{i32 722, i32 0, metadata !5143, metadata !10263}
!10269 = metadata !{i32 723, i32 0, metadata !5143, metadata !10263}
!10270 = metadata !{i32 724, i32 0, metadata !5143, metadata !10263}
!10271 = metadata !{i32 725, i32 0, metadata !5143, metadata !10263}
!10272 = metadata !{i32 727, i32 0, metadata !5143, metadata !10263}
!10273 = metadata !{i32 48, i32 0, metadata !10218, null}
!10274 = metadata !{i32 686, i32 0, metadata !5175, metadata !10273}
!10275 = metadata !{i32 687, i32 0, metadata !5175, metadata !10273}
!10276 = metadata !{i32 689, i32 0, metadata !5175, metadata !10273}
!10277 = metadata !{i32 690, i32 0, metadata !5175, metadata !10273}
!10278 = metadata !{i32 691, i32 0, metadata !5175, metadata !10273}
!10279 = metadata !{i32 692, i32 0, metadata !5175, metadata !10273}
!10280 = metadata !{i32 693, i32 0, metadata !5175, metadata !10273}
!10281 = metadata !{i32 694, i32 0, metadata !5175, metadata !10273}
!10282 = metadata !{i32 695, i32 0, metadata !5175, metadata !10273}
!10283 = metadata !{i32 697, i32 0, metadata !5175, metadata !10273}
!10284 = metadata !{i32 51, i32 0, metadata !10218, null}
!10285 = metadata !{i32 711, i32 0, metadata !5143, metadata !10284}
!10286 = metadata !{i32 712, i32 0, metadata !5143, metadata !10284}
!10287 = metadata !{i32 713, i32 0, metadata !5143, metadata !10284}
!10288 = metadata !{i32 716, i32 0, metadata !5143, metadata !10284}
!10289 = metadata !{i32 717, i32 0, metadata !5143, metadata !10284}
!10290 = metadata !{i32 719, i32 0, metadata !5143, metadata !10284}
!10291 = metadata !{i32 720, i32 0, metadata !5143, metadata !10284}
!10292 = metadata !{i32 721, i32 0, metadata !5143, metadata !10284}
!10293 = metadata !{i32 722, i32 0, metadata !5143, metadata !10284}
!10294 = metadata !{i32 723, i32 0, metadata !5143, metadata !10284}
!10295 = metadata !{i32 724, i32 0, metadata !5143, metadata !10284}
!10296 = metadata !{i32 725, i32 0, metadata !5143, metadata !10284}
!10297 = metadata !{i32 727, i32 0, metadata !5143, metadata !10284}
!10298 = metadata !{i32 729, i32 0, metadata !5143, metadata !10284}
!10299 = metadata !{i32 610, i32 0, metadata !5199, metadata !10300}
!10300 = metadata !{i32 54, i32 0, metadata !10218, null}
!10301 = metadata !{i32 611, i32 0, metadata !5199, metadata !10300}
!10302 = metadata !{i32 612, i32 0, metadata !5199, metadata !10300}
!10303 = metadata !{i32 56, i32 0, metadata !10218, null}
!10304 = metadata !{i32 57, i32 0, metadata !10218, null}
!10305 = metadata !{i32 59, i32 0, metadata !10218, null}
!10306 = metadata !{i32 60, i32 0, metadata !10218, null}
!10307 = metadata !{i32 62, i32 0, metadata !10218, null}
!10308 = metadata !{i32 64, i32 0, metadata !10218, null}
!10309 = metadata !{i32 66, i32 0, metadata !10218, null}
!10310 = metadata !{i32 67, i32 0, metadata !10218, null}
!10311 = metadata !{i32 68, i32 0, metadata !10218, null}
!10312 = metadata !{i32 266, i32 0, metadata !10313, null}
!10313 = metadata !{i32 589835, metadata !3648, i32 265, i32 0, metadata !3429, i32 46} ; [ DW_TAG_lexical_block ]
!10314 = metadata !{i32 69, i32 0, metadata !5385, null}
!10315 = metadata !{i32 72, i32 0, metadata !5387, null}
!10316 = metadata !{i32 73, i32 0, metadata !5387, null}
!10317 = metadata !{i32 74, i32 0, metadata !5387, null}
!10318 = metadata !{i32 77, i32 0, metadata !5385, null}
!10319 = metadata !{i32 208, i32 0, metadata !10320, null}
!10320 = metadata !{i32 589835, metadata !3867, i32 207, i32 0, metadata !3801, i32 1} ; [ DW_TAG_lexical_block ]
!10321 = metadata !{i32 121, i32 0, metadata !5320, null}
!10322 = metadata !{i32 43, i32 0, metadata !10323, metadata !10324}
!10323 = metadata !{i32 589835, metadata !3800, i32 42, i32 0, metadata !3801, i32 0} ; [ DW_TAG_lexical_block ]
!10324 = metadata !{i32 122, i32 0, metadata !5320, null}
!10325 = metadata !{i32 44, i32 0, metadata !10323, metadata !10324}
!10326 = metadata !{i32 45, i32 0, metadata !10323, metadata !10324}
!10327 = metadata !{i32 46, i32 0, metadata !10323, metadata !10324}
!10328 = metadata !{i32 47, i32 0, metadata !10323, metadata !10324}
!10329 = metadata !{i32 48, i32 0, metadata !10323, metadata !10324}
!10330 = metadata !{i32 49, i32 0, metadata !10323, metadata !10324}
!10331 = metadata !{i32 50, i32 0, metadata !10323, metadata !10324}
!10332 = metadata !{i32 51, i32 0, metadata !10323, metadata !10324}
!10333 = metadata !{i32 52, i32 0, metadata !10323, metadata !10324}
!10334 = metadata !{i32 53, i32 0, metadata !10323, metadata !10324}
!10335 = metadata !{i32 54, i32 0, metadata !10323, metadata !10324}
!10336 = metadata !{i32 55, i32 0, metadata !10323, metadata !10324}
!10337 = metadata !{i32 57, i32 0, metadata !10323, metadata !10324}
!10338 = metadata !{i32 58, i32 0, metadata !10323, metadata !10324}
!10339 = metadata !{i32 59, i32 0, metadata !10323, metadata !10324}
!10340 = metadata !{i32 123, i32 0, metadata !5320, null}
!10341 = metadata !{i32 114, i32 0, metadata !5326, null}
!10342 = metadata !{i32 43, i32 0, metadata !10323, metadata !10343}
!10343 = metadata !{i32 115, i32 0, metadata !5326, null}
!10344 = metadata !{i32 44, i32 0, metadata !10323, metadata !10343}
!10345 = metadata !{i32 45, i32 0, metadata !10323, metadata !10343}
!10346 = metadata !{i32 46, i32 0, metadata !10323, metadata !10343}
!10347 = metadata !{i32 47, i32 0, metadata !10323, metadata !10343}
!10348 = metadata !{i32 48, i32 0, metadata !10323, metadata !10343}
!10349 = metadata !{i32 49, i32 0, metadata !10323, metadata !10343}
!10350 = metadata !{i32 50, i32 0, metadata !10323, metadata !10343}
!10351 = metadata !{i32 51, i32 0, metadata !10323, metadata !10343}
!10352 = metadata !{i32 52, i32 0, metadata !10323, metadata !10343}
!10353 = metadata !{i32 53, i32 0, metadata !10323, metadata !10343}
!10354 = metadata !{i32 54, i32 0, metadata !10323, metadata !10343}
!10355 = metadata !{i32 55, i32 0, metadata !10323, metadata !10343}
!10356 = metadata !{i32 57, i32 0, metadata !10323, metadata !10343}
!10357 = metadata !{i32 58, i32 0, metadata !10323, metadata !10343}
!10358 = metadata !{i32 59, i32 0, metadata !10323, metadata !10343}
!10359 = metadata !{i32 116, i32 0, metadata !5326, null}
!10360 = metadata !{i32 204, i32 0, metadata !10361, null}
!10361 = metadata !{i32 589835, metadata !3876, i32 203, i32 0, metadata !3801, i32 4} ; [ DW_TAG_lexical_block ]
!10362 = metadata !{i32 107, i32 0, metadata !5333, null}
!10363 = metadata !{i32 43, i32 0, metadata !10323, metadata !10364}
!10364 = metadata !{i32 108, i32 0, metadata !5333, null}
!10365 = metadata !{i32 44, i32 0, metadata !10323, metadata !10364}
!10366 = metadata !{i32 45, i32 0, metadata !10323, metadata !10364}
!10367 = metadata !{i32 46, i32 0, metadata !10323, metadata !10364}
!10368 = metadata !{i32 47, i32 0, metadata !10323, metadata !10364}
!10369 = metadata !{i32 48, i32 0, metadata !10323, metadata !10364}
!10370 = metadata !{i32 49, i32 0, metadata !10323, metadata !10364}
!10371 = metadata !{i32 50, i32 0, metadata !10323, metadata !10364}
!10372 = metadata !{i32 51, i32 0, metadata !10323, metadata !10364}
!10373 = metadata !{i32 52, i32 0, metadata !10323, metadata !10364}
!10374 = metadata !{i32 53, i32 0, metadata !10323, metadata !10364}
!10375 = metadata !{i32 54, i32 0, metadata !10323, metadata !10364}
!10376 = metadata !{i32 55, i32 0, metadata !10323, metadata !10364}
!10377 = metadata !{i32 57, i32 0, metadata !10323, metadata !10364}
!10378 = metadata !{i32 58, i32 0, metadata !10323, metadata !10364}
!10379 = metadata !{i32 59, i32 0, metadata !10323, metadata !10364}
!10380 = metadata !{i32 109, i32 0, metadata !5333, null}
!10381 = metadata !{i32 100, i32 0, metadata !5339, null}
!10382 = metadata !{i32 43, i32 0, metadata !10323, metadata !10383}
!10383 = metadata !{i32 101, i32 0, metadata !5339, null}
!10384 = metadata !{i32 44, i32 0, metadata !10323, metadata !10383}
!10385 = metadata !{i32 45, i32 0, metadata !10323, metadata !10383}
!10386 = metadata !{i32 46, i32 0, metadata !10323, metadata !10383}
!10387 = metadata !{i32 47, i32 0, metadata !10323, metadata !10383}
!10388 = metadata !{i32 48, i32 0, metadata !10323, metadata !10383}
!10389 = metadata !{i32 49, i32 0, metadata !10323, metadata !10383}
!10390 = metadata !{i32 50, i32 0, metadata !10323, metadata !10383}
!10391 = metadata !{i32 51, i32 0, metadata !10323, metadata !10383}
!10392 = metadata !{i32 52, i32 0, metadata !10323, metadata !10383}
!10393 = metadata !{i32 53, i32 0, metadata !10323, metadata !10383}
!10394 = metadata !{i32 54, i32 0, metadata !10323, metadata !10383}
!10395 = metadata !{i32 55, i32 0, metadata !10323, metadata !10383}
!10396 = metadata !{i32 57, i32 0, metadata !10323, metadata !10383}
!10397 = metadata !{i32 58, i32 0, metadata !10323, metadata !10383}
!10398 = metadata !{i32 59, i32 0, metadata !10323, metadata !10383}
!10399 = metadata !{i32 102, i32 0, metadata !5339, null}
!10400 = metadata !{i32 200, i32 0, metadata !10401, null}
!10401 = metadata !{i32 589835, metadata !3888, i32 199, i32 0, metadata !3801, i32 7} ; [ DW_TAG_lexical_block ]
!10402 = metadata !{i32 93, i32 0, metadata !5350, null}
!10403 = metadata !{i32 43, i32 0, metadata !10323, metadata !10404}
!10404 = metadata !{i32 94, i32 0, metadata !5350, null}
!10405 = metadata !{i32 44, i32 0, metadata !10323, metadata !10404}
!10406 = metadata !{i32 45, i32 0, metadata !10323, metadata !10404}
!10407 = metadata !{i32 46, i32 0, metadata !10323, metadata !10404}
!10408 = metadata !{i32 47, i32 0, metadata !10323, metadata !10404}
!10409 = metadata !{i32 48, i32 0, metadata !10323, metadata !10404}
!10410 = metadata !{i32 49, i32 0, metadata !10323, metadata !10404}
!10411 = metadata !{i32 50, i32 0, metadata !10323, metadata !10404}
!10412 = metadata !{i32 51, i32 0, metadata !10323, metadata !10404}
!10413 = metadata !{i32 52, i32 0, metadata !10323, metadata !10404}
!10414 = metadata !{i32 53, i32 0, metadata !10323, metadata !10404}
!10415 = metadata !{i32 54, i32 0, metadata !10323, metadata !10404}
!10416 = metadata !{i32 55, i32 0, metadata !10323, metadata !10404}
!10417 = metadata !{i32 57, i32 0, metadata !10323, metadata !10404}
!10418 = metadata !{i32 58, i32 0, metadata !10323, metadata !10404}
!10419 = metadata !{i32 59, i32 0, metadata !10323, metadata !10404}
!10420 = metadata !{i32 95, i32 0, metadata !5350, null}
!10421 = metadata !{i32 86, i32 0, metadata !5356, null}
!10422 = metadata !{i32 43, i32 0, metadata !10323, metadata !10423}
!10423 = metadata !{i32 87, i32 0, metadata !5356, null}
!10424 = metadata !{i32 44, i32 0, metadata !10323, metadata !10423}
!10425 = metadata !{i32 45, i32 0, metadata !10323, metadata !10423}
!10426 = metadata !{i32 46, i32 0, metadata !10323, metadata !10423}
!10427 = metadata !{i32 47, i32 0, metadata !10323, metadata !10423}
!10428 = metadata !{i32 48, i32 0, metadata !10323, metadata !10423}
!10429 = metadata !{i32 49, i32 0, metadata !10323, metadata !10423}
!10430 = metadata !{i32 50, i32 0, metadata !10323, metadata !10423}
!10431 = metadata !{i32 51, i32 0, metadata !10323, metadata !10423}
!10432 = metadata !{i32 52, i32 0, metadata !10323, metadata !10423}
!10433 = metadata !{i32 53, i32 0, metadata !10323, metadata !10423}
!10434 = metadata !{i32 54, i32 0, metadata !10323, metadata !10423}
!10435 = metadata !{i32 55, i32 0, metadata !10323, metadata !10423}
!10436 = metadata !{i32 57, i32 0, metadata !10323, metadata !10423}
!10437 = metadata !{i32 58, i32 0, metadata !10323, metadata !10423}
!10438 = metadata !{i32 59, i32 0, metadata !10323, metadata !10423}
!10439 = metadata !{i32 88, i32 0, metadata !5356, null}
!10440 = metadata !{i32 196, i32 0, metadata !10441, null}
!10441 = metadata !{i32 589835, metadata !3891, i32 195, i32 0, metadata !3801, i32 10} ; [ DW_TAG_lexical_block ]
!10442 = metadata !{i32 81, i32 0, metadata !10443, null}
!10443 = metadata !{i32 589835, metadata !3896, i32 80, i32 0, metadata !3801, i32 11} ; [ DW_TAG_lexical_block ]
!10444 = metadata !{i32 184, i32 0, metadata !5367, null}
!10445 = metadata !{i32 187, i32 0, metadata !5370, null}
!10446 = metadata !{i32 188, i32 0, metadata !5370, null}
!10447 = metadata !{i32 189, i32 0, metadata !5370, null}
!10448 = metadata !{i32 192, i32 0, metadata !5367, null}
!10449 = metadata !{i32 157, i32 0, metadata !5392, null}
!10450 = metadata !{i32 159, i32 0, metadata !5392, null}
!10451 = metadata !{i32 160, i32 0, metadata !5404, null}
!10452 = metadata !{i32 161, i32 0, metadata !5404, null}
!10453 = metadata !{i32 164, i32 0, metadata !5406, null}
!10454 = metadata !{i32 170, i32 0, metadata !5406, null}
!10455 = metadata !{i32 174, i32 0, metadata !5392, null}
!10456 = metadata !{i32 149, i32 0, metadata !10457, null}
!10457 = metadata !{i32 589835, metadata !3921, i32 130, i32 0, metadata !3801, i32 19} ; [ DW_TAG_lexical_block ]
!10458 = metadata !{i32 127, i32 0, metadata !10459, null}
!10459 = metadata !{i32 589835, metadata !3949, i32 126, i32 0, metadata !3801, i32 20} ; [ DW_TAG_lexical_block ]
!10460 = metadata !{i32 504, i32 0, metadata !10461, metadata !10462}
!10461 = metadata !{i32 589835, metadata !3952, i32 503, i32 0, metadata !3955, i32 0} ; [ DW_TAG_lexical_block ]
!10462 = metadata !{i32 353, i32 0, metadata !5419, null}
!10463 = metadata !{i32 355, i32 0, metadata !5419, null}
!10464 = metadata !{i32 356, i32 0, metadata !5419, null}
!10465 = metadata !{i32 357, i32 0, metadata !5419, null}
!10466 = metadata !{i32 361, i32 0, metadata !5419, null}
!10467 = metadata !{i32 362, i32 0, metadata !5419, null}
!10468 = metadata !{i32 364, i32 0, metadata !5419, null}
!10469 = metadata !{i32 360, i32 0, metadata !5419, null}
!10470 = metadata !{i32 366, i32 0, metadata !5419, null}
!10471 = metadata !{i32 367, i32 0, metadata !5419, null}
!10472 = metadata !{i32 354, i32 0, metadata !5419, null}
!10473 = metadata !{i32 64, i32 0, metadata !5434, null}
!10474 = metadata !{i32 65, i32 0, metadata !5434, null}
!10475 = metadata !{i32 86, i32 0, metadata !5434, null}
!10476 = metadata !{i32 59, i32 0, metadata !5429, null}
!10477 = metadata !{i32 61, i32 0, metadata !5434, null}
!10478 = metadata !{i32 67, i32 0, metadata !5434, null}
!10479 = metadata !{i32 68, i32 0, metadata !5434, null}
!10480 = metadata !{i32 78, i32 0, metadata !5434, null}
!10481 = metadata !{i32 75, i32 0, metadata !5434, null}
!10482 = metadata !{i32 76, i32 0, metadata !5434, null}
!10483 = metadata !{i32 79, i32 0, metadata !5434, null}
!10484 = metadata !{i32 84, i32 0, metadata !5434, null}
!10485 = metadata !{i32 85, i32 0, metadata !5434, null}
!10486 = metadata !{i32 87, i32 0, metadata !5434, null}
!10487 = metadata !{i32 90, i32 0, metadata !5434, null}
!10488 = metadata !{i32 91, i32 0, metadata !5434, null}
!10489 = metadata !{i32 88, i32 0, metadata !5434, null}
!10490 = metadata !{i32 96, i32 0, metadata !5434, null}
!10491 = metadata !{i32 99, i32 0, metadata !5429, null}
!10492 = metadata !{i32 105, i32 0, metadata !5444, null}
!10493 = metadata !{i32 108, i32 0, metadata !5444, null}
!10494 = metadata !{i32 110, i32 0, metadata !5444, null}
!10495 = metadata !{i32 109, i32 0, metadata !5444, null}
!10496 = metadata !{i32 112, i32 0, metadata !5444, null}
!10497 = metadata !{i32 114, i32 0, metadata !5444, null}
!10498 = metadata !{i32 121, i32 0, metadata !5444, null}
!10499 = metadata !{i32 116, i32 0, metadata !5444, null}
!10500 = metadata !{i32 119, i32 0, metadata !5444, null}
!10501 = metadata !{i32 124, i32 0, metadata !5444, null}
!10502 = metadata !{i32 125, i32 0, metadata !5444, null}
!10503 = metadata !{i32 126, i32 0, metadata !5444, null}
!10504 = metadata !{i32 128, i32 0, metadata !5444, null}
!10505 = metadata !{i32 129, i32 0, metadata !5444, null}
!10506 = metadata !{i32 133, i32 0, metadata !5444, null}
!10507 = metadata !{i32 135, i32 0, metadata !5452, null}
!10508 = metadata !{i32 136, i32 0, metadata !5452, null}
!10509 = metadata !{i32 138, i32 0, metadata !5452, null}
!10510 = metadata !{i32 141, i32 0, metadata !5444, null}
!10511 = metadata !{i32 504, i32 0, metadata !10461, metadata !10512}
!10512 = metadata !{i32 143, i32 0, metadata !5444, null}
!10513 = metadata !{i32 146, i32 0, metadata !5444, null}
!10514 = metadata !{i32 148, i32 0, metadata !5444, null}
!10515 = metadata !{i32 152, i32 0, metadata !5444, null}
!10516 = metadata !{i32 154, i32 0, metadata !5444, null}
!10517 = metadata !{i32 159, i32 0, metadata !5444, null}
!10518 = metadata !{i32 164, i32 0, metadata !5444, null}
!10519 = metadata !{i32 165, i32 0, metadata !5444, null}
!10520 = metadata !{i32 504, i32 0, metadata !10461, metadata !10521}
!10521 = metadata !{i32 167, i32 0, metadata !5444, null}
!10522 = metadata !{i32 168, i32 0, metadata !5444, null}
!10523 = metadata !{i32 170, i32 0, metadata !5444, null}
!10524 = metadata !{i32 172, i32 0, metadata !5444, null}
!10525 = metadata !{i32 176, i32 0, metadata !5444, null}
!10526 = metadata !{i32 177, i32 0, metadata !5444, null}
!10527 = metadata !{i32 178, i32 0, metadata !5444, null}
!10528 = metadata !{i32 179, i32 0, metadata !5444, null}
!10529 = metadata !{i32 182, i32 0, metadata !5444, null}
!10530 = metadata !{i32 183, i32 0, metadata !5444, null}
!10531 = metadata !{i32 184, i32 0, metadata !5444, null}
!10532 = metadata !{i32 185, i32 0, metadata !5444, null}
!10533 = metadata !{i32 186, i32 0, metadata !5444, null}
!10534 = metadata !{i32 188, i32 0, metadata !5444, null}
!10535 = metadata !{i32 189, i32 0, metadata !5444, null}
!10536 = metadata !{i32 190, i32 0, metadata !5444, null}
!10537 = metadata !{i32 191, i32 0, metadata !5444, null}
!10538 = metadata !{i32 192, i32 0, metadata !5444, null}
!10539 = metadata !{i32 193, i32 0, metadata !5444, null}
!10540 = metadata !{i32 194, i32 0, metadata !5444, null}
!10541 = metadata !{i32 197, i32 0, metadata !5444, null}
!10542 = metadata !{i32 198, i32 0, metadata !5444, null}
!10543 = metadata !{i32 200, i32 0, metadata !5444, null}
!10544 = metadata !{i32 202, i32 0, metadata !5444, null}
!10545 = metadata !{i32 203, i32 0, metadata !5444, null}
!10546 = metadata !{i32 205, i32 0, metadata !5444, null}
!10547 = metadata !{i32 206, i32 0, metadata !5444, null}
!10548 = metadata !{i32 209, i32 0, metadata !5454, null}
!10549 = metadata !{i32 211, i32 0, metadata !5454, null}
!10550 = metadata !{i32 213, i32 0, metadata !5454, null}
!10551 = metadata !{i32 212, i32 0, metadata !5454, null}
!10552 = metadata !{i32 215, i32 0, metadata !5454, null}
!10553 = metadata !{i32 216, i32 0, metadata !5454, null}
!10554 = metadata !{i32 217, i32 0, metadata !5454, null}
!10555 = metadata !{i32 222, i32 0, metadata !5454, null}
!10556 = metadata !{i32 223, i32 0, metadata !5454, null}
!10557 = metadata !{i32 225, i32 0, metadata !5454, null}
!10558 = metadata !{i32 376, i32 0, metadata !5458, null}
!10559 = metadata !{i32 377, i32 0, metadata !5458, null}
!10560 = metadata !{i32 504, i32 0, metadata !10461, metadata !10561}
!10561 = metadata !{i32 379, i32 0, metadata !5458, null}
!10562 = metadata !{i32 380, i32 0, metadata !5458, null}
!10563 = metadata !{i32 381, i32 0, metadata !5458, null}
!10564 = metadata !{i32 382, i32 0, metadata !5458, null}
!10565 = metadata !{i32 384, i32 0, metadata !5458, null}
!10566 = metadata !{i32 385, i32 0, metadata !5458, null}
!10567 = metadata !{i32 386, i32 0, metadata !5458, null}
!10568 = metadata !{i32 378, i32 0, metadata !5458, null}
!10569 = metadata !{i32 251, i32 0, metadata !5477, null}
!10570 = metadata !{i32 252, i32 0, metadata !5477, null}
!10571 = metadata !{i32 253, i32 0, metadata !5477, null}
!10572 = metadata !{i32 504, i32 0, metadata !10461, metadata !10573}
!10573 = metadata !{i32 256, i32 0, metadata !5477, null}
!10574 = metadata !{i32 259, i32 0, metadata !5477, null}
!10575 = metadata !{i32 260, i32 0, metadata !5477, null}
!10576 = metadata !{i32 261, i32 0, metadata !5477, null}
!10577 = metadata !{i32 262, i32 0, metadata !5477, null}
!10578 = metadata !{i32 265, i32 0, metadata !5477, null}
!10579 = metadata !{i32 266, i32 0, metadata !5477, null}
!10580 = metadata !{i32 267, i32 0, metadata !5477, null}
!10581 = metadata !{i32 269, i32 0, metadata !5477, null}
!10582 = metadata !{i32 270, i32 0, metadata !5477, null}
!10583 = metadata !{i32 271, i32 0, metadata !5477, null}
!10584 = metadata !{i32 273, i32 0, metadata !5477, null}
!10585 = metadata !{i32 274, i32 0, metadata !5477, null}
!10586 = metadata !{i32 278, i32 0, metadata !5477, null}
!10587 = metadata !{i32 279, i32 0, metadata !5477, null}
!10588 = metadata !{i32 280, i32 0, metadata !5477, null}
!10589 = metadata !{i32 281, i32 0, metadata !5477, null}
!10590 = metadata !{i32 283, i32 0, metadata !5477, null}
!10591 = metadata !{i32 285, i32 0, metadata !5477, null}
!10592 = metadata !{i32 286, i32 0, metadata !5477, null}
!10593 = metadata !{i32 287, i32 0, metadata !5477, null}
!10594 = metadata !{i32 288, i32 0, metadata !5477, null}
!10595 = metadata !{i32 289, i32 0, metadata !5477, null}
!10596 = metadata !{i32 290, i32 0, metadata !5477, null}
!10597 = metadata !{i32 291, i32 0, metadata !5477, null}
!10598 = metadata !{i32 293, i32 0, metadata !5477, null}
!10599 = metadata !{i32 294, i32 0, metadata !5477, null}
!10600 = metadata !{i32 295, i32 0, metadata !5477, null}
!10601 = metadata !{i32 296, i32 0, metadata !5477, null}
!10602 = metadata !{i32 297, i32 0, metadata !5477, null}
!10603 = metadata !{i32 301, i32 0, metadata !5477, null}
!10604 = metadata !{i32 302, i32 0, metadata !5477, null}
!10605 = metadata !{i32 303, i32 0, metadata !5477, null}
!10606 = metadata !{i32 304, i32 0, metadata !5477, null}
!10607 = metadata !{i32 305, i32 0, metadata !5477, null}
!10608 = metadata !{i32 307, i32 0, metadata !5477, null}
!10609 = metadata !{i32 309, i32 0, metadata !5477, null}
!10610 = metadata !{i32 229, i32 0, metadata !5414, metadata !10611}
!10611 = metadata !{i32 310, i32 0, metadata !5477, null}
!10612 = metadata !{i32 230, i32 0, metadata !5414, metadata !10611}
!10613 = metadata !{i32 311, i32 0, metadata !5477, null}
!10614 = metadata !{i32 313, i32 0, metadata !5477, null}
!10615 = metadata !{i32 317, i32 0, metadata !5477, null}
!10616 = metadata !{i32 318, i32 0, metadata !5477, null}
!10617 = metadata !{i32 319, i32 0, metadata !5477, null}
!10618 = metadata !{i32 320, i32 0, metadata !5477, null}
!10619 = metadata !{i32 321, i32 0, metadata !5477, null}
!10620 = metadata !{i32 322, i32 0, metadata !5477, null}
!10621 = metadata !{i32 323, i32 0, metadata !5477, null}
!10622 = metadata !{i32 325, i32 0, metadata !5477, null}
!10623 = metadata !{i32 329, i32 0, metadata !5477, null}
!10624 = metadata !{i32 330, i32 0, metadata !5477, null}
!10625 = metadata !{i32 331, i32 0, metadata !5477, null}
!10626 = metadata !{i32 332, i32 0, metadata !5477, null}
!10627 = metadata !{i32 333, i32 0, metadata !5477, null}
!10628 = metadata !{i32 334, i32 0, metadata !5477, null}
!10629 = metadata !{i32 335, i32 0, metadata !5477, null}
!10630 = metadata !{i32 337, i32 0, metadata !5477, null}
!10631 = metadata !{i32 343, i32 0, metadata !5477, null}
!10632 = metadata !{i32 344, i32 0, metadata !5477, null}
!10633 = metadata !{i32 345, i32 0, metadata !5477, null}
!10634 = metadata !{i32 347, i32 0, metadata !5477, null}
!10635 = metadata !{i32 28, i32 0, metadata !5493, null}
!10636 = metadata !{i32 29, i32 0, metadata !5493, null}
!10637 = metadata !{i32 31, i32 0, metadata !5493, null}
!10638 = metadata !{i32 33, i32 0, metadata !5493, null}
!10639 = metadata !{i32 43, i32 0, metadata !5493, null}
!10640 = metadata !{i32 32, i32 0, metadata !5493, null}
!10641 = metadata !{i32 20, i32 0, metadata !5489, metadata !10640}
!10642 = metadata !{i32 21, i32 0, metadata !5489, metadata !10640}
!10643 = metadata !{i32 37, i32 0, metadata !5493, null}
!10644 = metadata !{i32 34, i32 0, metadata !5493, null}
!10645 = metadata !{i32 35, i32 0, metadata !5493, null}
!10646 = metadata !{i32 38, i32 0, metadata !5493, null}
!10647 = metadata !{i32 39, i32 0, metadata !5493, null}
!10648 = metadata !{i32 40, i32 0, metadata !5493, null}
!10649 = metadata !{i32 41, i32 0, metadata !5493, null}
!10650 = metadata !{i32 504, i32 0, metadata !10651, metadata !10652}
!10651 = metadata !{i32 589835, metadata !4076, i32 503, i32 0, metadata !4077, i32 1} ; [ DW_TAG_lexical_block ]
!10652 = metadata !{i32 59, i32 0, metadata !5500, null}
!10653 = metadata !{i32 61, i32 0, metadata !5521, null}
!10654 = metadata !{i32 62, i32 0, metadata !5521, null}
!10655 = metadata !{i32 63, i32 0, metadata !5521, null}
!10656 = metadata !{i32 67, i32 0, metadata !5493, null}
!10657 = metadata !{i32 71, i32 0, metadata !5493, null}
!10658 = metadata !{i32 21, i32 0, metadata !10659, null}
!10659 = metadata !{i32 589835, metadata !4126, i32 20, i32 0, metadata !4127, i32 0} ; [ DW_TAG_lexical_block ]
!10660 = metadata !{i32 27, i32 0, metadata !10659, null}
!10661 = metadata !{i32 29, i32 0, metadata !10659, null}
!10662 = metadata !{i32 14, i32 0, metadata !10663, null}
!10663 = metadata !{i32 589835, metadata !4132, i32 12, i32 0, metadata !4133, i32 0} ; [ DW_TAG_lexical_block ]
!10664 = metadata !{i32 15, i32 0, metadata !10663, null}
!10665 = metadata !{i32 16, i32 0, metadata !10663, null}
!10666 = metadata !{i32 17, i32 0, metadata !10663, null}
!10667 = metadata !{i32 18, i32 0, metadata !10663, null}
!10668 = metadata !{i32 16, i32 0, metadata !5529, null}
!10669 = metadata !{i32 17, i32 0, metadata !5529, null}
!10670 = metadata !{i32 19, i32 0, metadata !5529, null}
!10671 = metadata !{i32 22, i32 0, metadata !5529, null}
!10672 = metadata !{i32 25, i32 0, metadata !5529, null}
!10673 = metadata !{i32 26, i32 0, metadata !5529, null}
!10674 = metadata !{i32 28, i32 0, metadata !5529, null}
!10675 = metadata !{i32 29, i32 0, metadata !5529, null}
!10676 = metadata !{i32 32, i32 0, metadata !5529, null}
!10677 = metadata !{i32 20, i32 0, metadata !5529, null}
